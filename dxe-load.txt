In file included from /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:11:
In file included from /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeIpl.h:13:
In file included from /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/PiPei.h:17:
In file included from /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiBaseType.h:16:
/llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:827:1: error: static assertion failed due to requirement 'sizeof (L'A') == 2': sizeof (L'A') does not meet UEFI Specification Data Type requirements
STATIC_ASSERT (sizeof (L'A')    == 2, "sizeof (L'A') does not meet UEFI Specification Data Type requirements");
^              ~~~~~~~~~~~~~~~~~~~~~
/llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:808:24: note: expanded from macro 'STATIC_ASSERT'
#define STATIC_ASSERT  _Static_assert
                       ^
/llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:828:1: error: static assertion failed due to requirement 'sizeof (L"A") == 4': sizeof (L"A") does not meet UEFI Specification Data Type requirements
STATIC_ASSERT (sizeof (L"A")    == 4, "sizeof (L\"A\") does not meet UEFI Specification Data Type requirements");
^              ~~~~~~~~~~~~~~~~~~~~~
/llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:808:24: note: expanded from macro 'STATIC_ASSERT'
#define STATIC_ASSERT  _Static_assert
                       ^
/llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:378:30: warning: incompatible pointer types passing 'int[22]' to parameter of type 'const CHAR16 *' (aka 'const unsigned short *') [-Wincompatible-pointer-types]
                             EFI_MEMORY_TYPE_INFORMATION_VARIABLE_NAME,
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Include/Guid/MemoryTypeInformation.h:21:52: note: expanded from macro 'EFI_MEMORY_TYPE_INFORMATION_VARIABLE_NAME'
#define EFI_MEMORY_TYPE_INFORMATION_VARIABLE_NAME  L"MemoryTypeInformation"
                                                   ^~~~~~~~~~~~~~~~~~~~~~~~
/llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:706:11: error: use of undeclared identifier '_PCD_GET_MODE_BOOL_PcdDxeIplSupportUefiDecompress'
      if (FeaturePcdGet (PcdDxeIplSupportUefiDecompress)) {
          ^
/llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:50:35: note: expanded from macro 'FeaturePcdGet'
#define FeaturePcdGet(TokenName)  _PCD_GET_MODE_BOOL_##TokenName
                                  ^
<scratch space>:48:1: note: expanded from here
_PCD_GET_MODE_BOOL_PcdDxeIplSupportUefiDecompress
^
TranslationUnitDecl 0x55887bfe8fa8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55887bfe97d0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55887bfe9570 '__int128'
|-TypedefDecl 0x55887bfe9840 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55887bfe9590 'unsigned __int128'
|-TypedefDecl 0x55887bfe9b48 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55887bfe9920 'struct __NSConstantString_tag'
|   `-Record 0x55887bfe9898 '__NSConstantString_tag'
|-TypedefDecl 0x55887bfe9be0 <<invalid sloc>> <invalid sloc> implicit referenced __builtin_ms_va_list 'char *'
| `-PointerType 0x55887bfe9ba0 'char *'
|   `-BuiltinType 0x55887bfe9050 'char'
|-TypedefDecl 0x55887bfe9ed8 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag[1]'
| `-ConstantArrayType 0x55887bfe9e80 'struct __va_list_tag[1]' 1 
|   `-RecordType 0x55887bfe9cc0 'struct __va_list_tag'
|     `-Record 0x55887bfe9c38 '__va_list_tag'
|-TypedefDecl 0x55887c049930 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:162:1, col:28> col:28 referenced UINT64 'unsigned long long'
| |-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c3452c0 <line:160:4, col:25>
|   `-ParagraphComment 0x55887c345290 <col:4, col:25>
|     `-TextComment 0x55887c345260 <col:4, col:25> Text=" 8-byte unsigned value"
|-TypedefDecl 0x55887c0499d0 <line:166:1, col:19> col:19 referenced INT64 'long long'
| |-BuiltinType 0x55887bfe90f0 'long long'
| `-FullComment 0x55887c345390 <line:164:4, col:23>
|   `-ParagraphComment 0x55887c345360 <col:4, col:23>
|     `-TextComment 0x55887c345330 <col:4, col:23> Text=" 8-byte signed value"
|-TypedefDecl 0x55887c049a70 <line:170:1, col:22> col:22 referenced UINT32 'unsigned int'
| |-BuiltinType 0x55887bfe9150 'unsigned int'
| `-FullComment 0x55887c345460 <line:168:4, col:25>
|   `-ParagraphComment 0x55887c345430 <col:4, col:25>
|     `-TextComment 0x55887c345400 <col:4, col:25> Text=" 4-byte unsigned value"
|-TypedefDecl 0x55887c049b10 <line:174:1, col:13> col:13 referenced INT32 'int'
| |-BuiltinType 0x55887bfe90b0 'int'
| `-FullComment 0x55887c345530 <line:172:4, col:23>
|   `-ParagraphComment 0x55887c345500 <col:4, col:23>
|     `-TextComment 0x55887c3454d0 <col:4, col:23> Text=" 4-byte signed value"
|-TypedefDecl 0x55887c049bb0 <line:178:1, col:24> col:24 referenced UINT16 'unsigned short'
| |-BuiltinType 0x55887bfe9130 'unsigned short'
| `-FullComment 0x55887c345600 <line:176:4, col:25>
|   `-ParagraphComment 0x55887c3455d0 <col:4, col:25>
|     `-TextComment 0x55887c3455a0 <col:4, col:25> Text=" 2-byte unsigned value"
|-TypedefDecl 0x55887c049c50 <line:183:1, col:24> col:24 referenced CHAR16 'unsigned short'
| |-BuiltinType 0x55887bfe9130 'unsigned short'
| `-FullComment 0x55887c3456f0 <line:180:4, line:181:81>
|   `-ParagraphComment 0x55887c3456c0 <line:180:4, line:181:81>
|     |-TextComment 0x55887c345670 <line:180:4, col:79> Text=" 2-byte Character.  Unless otherwise specified all strings are stored in the"
|     `-TextComment 0x55887c345690 <line:181:4, col:81> Text=" UTF-16 encoding format as defined by Unicode 2.1 and ISO/IEC 10646 standards."
|-TypedefDecl 0x55887c049cf0 <line:187:1, col:15> col:15 referenced INT16 'short'
| |-BuiltinType 0x55887bfe9090 'short'
| `-FullComment 0x55887c3457c0 <line:185:4, col:23>
|   `-ParagraphComment 0x55887c345790 <col:4, col:23>
|     `-TextComment 0x55887c345760 <col:4, col:23> Text=" 2-byte signed value"
|-TypedefDecl 0x55887c049d90 <line:192:1, col:23> col:23 referenced BOOLEAN 'unsigned char'
| |-BuiltinType 0x55887bfe9110 'unsigned char'
| `-FullComment 0x55887c3458b0 <line:189:4, line:190:25>
|   `-ParagraphComment 0x55887c345880 <line:189:4, line:190:25>
|     |-TextComment 0x55887c345830 <line:189:4, col:81> Text=" Logical Boolean.  1-byte value containing 0 for FALSE or a 1 for TRUE.  Other"
|     `-TextComment 0x55887c345850 <line:190:4, col:25> Text=" values are undefined."
|-TypedefDecl 0x55887c049e30 <line:196:1, col:23> col:23 referenced UINT8 'unsigned char'
| |-BuiltinType 0x55887bfe9110 'unsigned char'
| `-FullComment 0x55887c345980 <line:194:4, col:25>
|   `-ParagraphComment 0x55887c345950 <col:4, col:25>
|     `-TextComment 0x55887c345920 <col:4, col:25> Text=" 1-byte unsigned value"
|-TypedefDecl 0x55887c049ec8 <line:200:1, col:14> col:14 referenced CHAR8 'char'
| |-BuiltinType 0x55887bfe9050 'char'
| `-FullComment 0x55887c345a50 <line:198:4, col:20>
|   `-ParagraphComment 0x55887c345a20 <col:4, col:20>
|     `-TextComment 0x55887c3459f0 <col:4, col:20> Text=" 1-byte Character"
|-TypedefDecl 0x55887c049f60 <line:204:1, col:21> col:21 referenced INT8 'signed char'
| |-BuiltinType 0x55887bfe9070 'signed char'
| `-FullComment 0x55887c345b20 <line:202:4, col:23>
|   `-ParagraphComment 0x55887c345af0 <col:4, col:23>
|     `-TextComment 0x55887c345ac0 <col:4, col:23> Text=" 1-byte signed value"
|-TypedefDecl 0x55887c04a020 <line:211:1, col:16> col:16 referenced UINTN 'UINT64':'unsigned long long'
| |-TypedefType 0x55887c049ff0 'UINT64' sugar
| | |-Typedef 0x55887c049930 'UINT64'
| | `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c345c10 <line:208:4, line:209:55>
|   `-ParagraphComment 0x55887c345be0 <line:208:4, line:209:55>
|     |-TextComment 0x55887c345b90 <line:208:4, col:89> Text=" Unsigned value of native width.  (4 bytes on supported 32-bit processor instructions,"
|     `-TextComment 0x55887c345bb0 <line:209:4, col:55> Text=" 8 bytes on supported 64-bit processor instructions)"
|-TypedefDecl 0x55887c04a0e0 <line:216:1, col:15> col:15 referenced INTN 'INT64':'long long'
| |-TypedefType 0x55887c04a0b0 'INT64' sugar
| | |-Typedef 0x55887c0499d0 'INT64'
| | `-BuiltinType 0x55887bfe90f0 'long long'
| `-FullComment 0x55887c345d00 <line:213:4, line:214:55>
|   `-ParagraphComment 0x55887c345cd0 <line:213:4, line:214:55>
|     |-TextComment 0x55887c345c80 <line:213:4, col:87> Text=" Signed value of native width.  (4 bytes on supported 32-bit processor instructions,"
|     `-TextComment 0x55887c345ca0 <line:214:4, col:55> Text=" 8 bytes on supported 64-bit processor instructions)"
|-RecordDecl 0x55887c04a528 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:213:9, line:218:1> line:213:9 struct definition
| |-FullComment 0x55887c345df0 <line:210:4, line:211:61>
| | `-ParagraphComment 0x55887c345dc0 <line:210:4, line:211:61>
| |   |-TextComment 0x55887c345d70 <line:210:4, col:56> Text=" 128 bit buffer containing a unique identifier value."
| |   `-TextComment 0x55887c345d90 <line:211:4, col:61> Text=" Unless otherwise specified, aligned on a 64 bit boundary."
| |-FieldDecl 0x55887c04a600 <line:214:3, col:13> col:13 Data1 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c04a680 <line:215:3, col:13> col:13 Data2 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c04a6e0 <line:216:3, col:13> col:13 Data3 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c0519c8 <line:217:3, col:20> col:13 Data4 'UINT8[8]'
|-TypedefDecl 0x55887c051a78 <line:213:1, line:218:3> col:3 referenced GUID 'struct GUID':'GUID'
| |-ElaboratedType 0x55887c051a20 'struct GUID' sugar
| | `-RecordType 0x55887c04a5b0 'GUID'
| |   `-Record 0x55887c04a528 ''
| `-FullComment 0x55887c345ee0 <line:210:4, line:211:61>
|   `-ParagraphComment 0x55887c345eb0 <line:210:4, line:211:61>
|     |-TextComment 0x55887c345e60 <line:210:4, col:56> Text=" 128 bit buffer containing a unique identifier value."
|     `-TextComment 0x55887c345e80 <line:211:4, col:61> Text=" Unless otherwise specified, aligned on a 64 bit boundary."
|-RecordDecl 0x55887c051b10 <line:223:9, line:225:1> line:223:9 struct definition
| |-FullComment 0x55887c345fb0 <line:221:4, col:53>
| | `-ParagraphComment 0x55887c345f80 <col:4, col:53>
| |   `-TextComment 0x55887c345f50 <col:4, col:53> Text=" 4-byte buffer. An IPv4 internet protocol address."
| `-FieldDecl 0x55887c051c88 <line:224:3, col:18> col:12 Addr 'UINT8[4]'
|-TypedefDecl 0x55887c051d38 <line:223:1, line:225:3> col:3 referenced IPv4_ADDRESS 'struct IPv4_ADDRESS':'IPv4_ADDRESS'
| |-ElaboratedType 0x55887c051ce0 'struct IPv4_ADDRESS' sugar
| | `-RecordType 0x55887c051b90 'IPv4_ADDRESS'
| |   `-Record 0x55887c051b10 ''
| `-FullComment 0x55887c346080 <line:221:4, col:53>
|   `-ParagraphComment 0x55887c346050 <col:4, col:53>
|     `-TextComment 0x55887c346020 <col:4, col:53> Text=" 4-byte buffer. An IPv4 internet protocol address."
|-RecordDecl 0x55887c051dd0 <line:230:9, line:232:1> line:230:9 struct definition
| |-FullComment 0x55887c346150 <line:228:4, col:54>
| | `-ParagraphComment 0x55887c346120 <col:4, col:54>
| |   `-TextComment 0x55887c3460f0 <col:4, col:54> Text=" 16-byte buffer. An IPv6 internet protocol address."
| `-FieldDecl 0x55887c051f48 <line:231:3, col:19> col:12 Addr 'UINT8[16]'
|-TypedefDecl 0x55887c051ff8 <line:230:1, line:232:3> col:3 referenced IPv6_ADDRESS 'struct IPv6_ADDRESS':'IPv6_ADDRESS'
| |-ElaboratedType 0x55887c051fa0 'struct IPv6_ADDRESS' sugar
| | `-RecordType 0x55887c051e50 'IPv6_ADDRESS'
| |   `-Record 0x55887c051dd0 ''
| `-FullComment 0x55887c347260 <line:228:4, col:54>
|   `-ParagraphComment 0x55887c347230 <col:4, col:54>
|     `-TextComment 0x55887c347200 <col:4, col:54> Text=" 16-byte buffer. An IPv6 internet protocol address."
|-TypedefDecl 0x55887c052078 <line:237:1, col:16> col:16 referenced PHYSICAL_ADDRESS 'UINT64':'unsigned long long'
| `-TypedefType 0x55887c049ff0 'UINT64' sugar
|   |-Typedef 0x55887c049930 'UINT64'
|   `-BuiltinType 0x55887bfe9190 'unsigned long long'
|-RecordDecl 0x55887c0520f8 <line:242:9, col:16> col:16 struct _LIST_ENTRY
|-TypedefDecl 0x55887c0521f8 <col:1, col:28> col:28 referenced LIST_ENTRY 'struct _LIST_ENTRY':'struct _LIST_ENTRY'
| |-ElaboratedType 0x55887c0521a0 'struct _LIST_ENTRY' sugar
| | `-RecordType 0x55887c052180 'struct _LIST_ENTRY'
| |   `-Record 0x55887c052290 '_LIST_ENTRY'
| `-FullComment 0x55887c347330 <line:240:4, col:36>
|   `-ParagraphComment 0x55887c347300 <col:4, col:36>
|     `-TextComment 0x55887c3472d0 <col:4, col:36> Text=" LIST_ENTRY structure definition."
|-RecordDecl 0x55887c052290 prev 0x55887c0520f8 <line:247:1, line:250:1> line:247:8 struct _LIST_ENTRY definition
| |-FullComment 0x55887c347400 <line:245:4, col:37>
| | `-ParagraphComment 0x55887c3473d0 <col:4, col:37>
| |   `-TextComment 0x55887c3473a0 <col:4, col:37> Text=" _LIST_ENTRY structure definition."
| |-FieldDecl 0x55887c052398 <line:248:3, col:18> col:18 ForwardLink 'LIST_ENTRY *'
| `-FieldDecl 0x55887c0523f8 <line:249:3, col:18> col:18 BackLink 'LIST_ENTRY *'
|-TypedefDecl 0x55887c052720 <line:607:1, col:30> col:30 referenced VA_LIST '__builtin_ms_va_list':'char *'
| |-TypedefType 0x55887c0526f0 '__builtin_ms_va_list' sugar
| | |-Typedef 0x55887bfe9be0 '__builtin_ms_va_list'
| | `-PointerType 0x55887bfe9ba0 'char *'
| |   `-BuiltinType 0x55887bfe9050 'char'
| `-FullComment 0x55887c3474f0 <line:604:4, line:605:54>
|   `-ParagraphComment 0x55887c3474c0 <line:604:4, line:605:54>
|     |-TextComment 0x55887c347470 <line:604:4, col:74> Text=" Variable used to traverse the list of arguments. This type can vary by"
|     `-TextComment 0x55887c347490 <line:605:4, col:54> Text=" implementation and could be an array or structure."
|-TypedefDecl 0x55887c052838 <line:711:1, col:16> col:16 referenced BASE_LIST 'UINTN *'
| |-PointerType 0x55887c052800 'UINTN *'
| | `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |   |-Typedef 0x55887c04a020 'UINTN'
| |   `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |-Typedef 0x55887c049930 'UINT64'
| |     `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c3475c0 <line:709:4, col:96>
|   `-ParagraphComment 0x55887c347590 <col:4, col:96>
|     `-TextComment 0x55887c347560 <col:4, col:96> Text=" Pointer to the start of a variable argument list stored in a memory buffer. Same as UINT8 *."
|-StaticAssertDecl 0x55887c05d6e0 <line:808:24, line:816:113> line:808:24
| |-ImplicitCastExpr 0x55887c05d6a8 <line:816:16, col:36> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c05d5e8 <col:16, col:36> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c05d590 <col:16, col:31> 'unsigned long' sizeof 'BOOLEAN':'unsigned char'
| |   `-ImplicitCastExpr 0x55887c05d5d0 <col:36> 'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x55887c05d5b0 <col:36> 'int' 1
| `-StringLiteral 0x55887c05d648 <col:39> 'char[73]' lvalue "sizeof (BOOLEAN) does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c05d8a0 <line:808:24, line:817:110> line:808:24
| |-ImplicitCastExpr 0x55887c05d868 <line:817:16, col:36> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c05d7a8 <col:16, col:36> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c05d750 <col:16, col:28> 'unsigned long' sizeof 'INT8':'signed char'
| |   `-ImplicitCastExpr 0x55887c05d790 <col:36> 'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x55887c05d770 <col:36> 'int' 1
| `-StringLiteral 0x55887c05d808 <col:39> 'char[70]' lvalue "sizeof (INT8) does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c05da40 <line:808:24, line:818:111> line:808:24
| |-ImplicitCastExpr 0x55887c05da08 <line:818:16, col:36> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c05d948 <col:16, col:36> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c05d8f0 <col:16, col:29> 'unsigned long' sizeof 'UINT8':'unsigned char'
| |   `-ImplicitCastExpr 0x55887c05d930 <col:36> 'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x55887c05d910 <col:36> 'int' 1
| `-StringLiteral 0x55887c05d9a8 <col:39> 'char[71]' lvalue "sizeof (UINT8) does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c05dbc0 <line:808:24, line:819:111> line:808:24
| |-ImplicitCastExpr 0x55887c05db88 <line:819:16, col:36> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c05db08 <col:16, col:36> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c05dab0 <col:16, col:29> 'unsigned long' sizeof 'INT16':'short'
| |   `-ImplicitCastExpr 0x55887c05daf0 <col:36> 'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x55887c05dad0 <col:36> 'int' 2
| `-StringLiteral 0x55887c05db28 <col:39> 'char[71]' lvalue "sizeof (INT16) does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c05dd60 <line:808:24, line:820:112> line:808:24
| |-ImplicitCastExpr 0x55887c05dd28 <line:820:16, col:36> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c05dc68 <col:16, col:36> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c05dc10 <col:16, col:30> 'unsigned long' sizeof 'UINT16':'unsigned short'
| |   `-ImplicitCastExpr 0x55887c05dc50 <col:36> 'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x55887c05dc30 <col:36> 'int' 2
| `-StringLiteral 0x55887c05dcc8 <col:39> 'char[72]' lvalue "sizeof (UINT16) does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c05dee0 <line:808:24, line:821:111> line:808:24
| |-ImplicitCastExpr 0x55887c05dea8 <line:821:16, col:36> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c05de28 <col:16, col:36> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c05ddd0 <col:16, col:29> 'unsigned long' sizeof 'INT32':'int'
| |   `-ImplicitCastExpr 0x55887c05de10 <col:36> 'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x55887c05ddf0 <col:36> 'int' 4
| `-StringLiteral 0x55887c05de48 <col:39> 'char[71]' lvalue "sizeof (INT32) does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c05e040 <line:808:24, line:822:112> line:808:24
| |-ImplicitCastExpr 0x55887c05e008 <line:822:16, col:36> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c05df88 <col:16, col:36> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c05df30 <col:16, col:30> 'unsigned long' sizeof 'UINT32':'unsigned int'
| |   `-ImplicitCastExpr 0x55887c05df70 <col:36> 'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x55887c05df50 <col:36> 'int' 4
| `-StringLiteral 0x55887c05dfa8 <col:39> 'char[72]' lvalue "sizeof (UINT32) does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c05e1a0 <line:808:24, line:823:111> line:808:24
| |-ImplicitCastExpr 0x55887c05e168 <line:823:16, col:36> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c05e0e8 <col:16, col:36> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c05e090 <col:16, col:29> 'unsigned long' sizeof 'INT64':'long long'
| |   `-ImplicitCastExpr 0x55887c05e0d0 <col:36> 'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x55887c05e0b0 <col:36> 'int' 8
| `-StringLiteral 0x55887c05e108 <col:39> 'char[71]' lvalue "sizeof (INT64) does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c05e300 <line:808:24, line:824:112> line:808:24
| |-ImplicitCastExpr 0x55887c05e2c8 <line:824:16, col:36> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c05e248 <col:16, col:36> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c05e1f0 <col:16, col:30> 'unsigned long' sizeof 'UINT64':'unsigned long long'
| |   `-ImplicitCastExpr 0x55887c05e230 <col:36> 'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x55887c05e210 <col:36> 'int' 8
| `-StringLiteral 0x55887c05e268 <col:39> 'char[72]' lvalue "sizeof (UINT64) does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c05e480 <line:808:24, line:825:111> line:808:24
| |-ImplicitCastExpr 0x55887c05e448 <line:825:16, col:36> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c05e3c8 <col:16, col:36> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c05e370 <col:16, col:29> 'unsigned long' sizeof 'CHAR8':'char'
| |   `-ImplicitCastExpr 0x55887c05e3b0 <col:36> 'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x55887c05e390 <col:36> 'int' 1
| `-StringLiteral 0x55887c05e3e8 <col:39> 'char[71]' lvalue "sizeof (CHAR8) does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c05f950 <line:808:24, line:826:112> line:808:24
| |-ImplicitCastExpr 0x55887c05f918 <line:826:16, col:36> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c05f898 <col:16, col:36> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c05e4f0 <col:16, col:30> 'unsigned long' sizeof 'CHAR16':'unsigned short'
| |   `-ImplicitCastExpr 0x55887c05f880 <col:36> 'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x55887c05e510 <col:36> 'int' 2
| `-StringLiteral 0x55887c05f8b8 <col:39> 'char[72]' lvalue "sizeof (CHAR16) does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c05fad8 <line:808:24, line:827:110> line:808:24
| |-ImplicitCastExpr 0x55887c05faa0 <line:827:16, col:36> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c05fa20 <col:16, col:36> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c05f9c8 <col:16, col:28> 'unsigned long' sizeof
| |   | `-ParenExpr 0x55887c05f9a8 <col:23, col:28> 'int'
| |   |   `-CharacterLiteral 0x55887c05f990 <col:24> 'int' 65
| |   `-ImplicitCastExpr 0x55887c05fa08 <col:36> 'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x55887c05f9e8 <col:36> 'int' 2
| `-StringLiteral 0x55887c05fa40 <col:39> 'char[70]' lvalue "sizeof (L'A') does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c05fca8 <line:808:24, line:828:112> line:808:24
| |-ImplicitCastExpr 0x55887c05fc70 <line:828:16, col:36> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c05fbf0 <col:16, col:36> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c05fb98 <col:16, col:28> 'unsigned long' sizeof
| |   | `-ParenExpr 0x55887c05fb78 <col:23, col:28> 'int[2]' lvalue
| |   |   `-StringLiteral 0x55887c05fb58 <col:24> 'int[2]' lvalue L"A"
| |   `-ImplicitCastExpr 0x55887c05fbd8 <col:36> 'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x55887c05fbb8 <col:36> 'int' 4
| `-StringLiteral 0x55887c05fc10 <col:39> 'char[70]' lvalue "sizeof (L\"A\") does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c05fe48 <line:808:24, line:830:133> line:808:24
| |-ImplicitCastExpr 0x55887c05fe10 <line:778:24, line:830:52> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c05fd48 <line:778:24, line:830:52> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c05fcf8 <line:778:24, col:38> 'unsigned long' alignof 'BOOLEAN':'unsigned char'
| |   `-UnaryExprOrTypeTraitExpr 0x55887c05fd28 <line:830:37, col:52> 'unsigned long' sizeof 'BOOLEAN':'unsigned char'
| `-StringLiteral 0x55887c05fda8 <col:55> 'char[77]' lvalue "Alignment of BOOLEAN does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c05ffe8 <line:808:24, line:831:127> line:808:24
| |-ImplicitCastExpr 0x55887c05ffb0 <line:778:24, line:831:49> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c05fee8 <line:778:24, line:831:49> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c05fe98 <line:778:24, col:38> 'unsigned long' alignof 'INT8':'signed char'
| |   `-UnaryExprOrTypeTraitExpr 0x55887c05fec8 <line:831:37, col:49> 'unsigned long' sizeof 'INT8':'signed char'
| `-StringLiteral 0x55887c05ff48 <col:52> 'char[74]' lvalue "Alignment of INT8 does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c060188 <line:808:24, line:832:129> line:808:24
| |-ImplicitCastExpr 0x55887c060150 <line:778:24, line:832:50> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c060088 <line:778:24, line:832:50> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c060038 <line:778:24, col:38> 'unsigned long' alignof 'UINT8':'unsigned char'
| |   `-UnaryExprOrTypeTraitExpr 0x55887c060068 <line:832:37, col:50> 'unsigned long' sizeof 'UINT8':'unsigned char'
| `-StringLiteral 0x55887c0600e8 <col:53> 'char[75]' lvalue "Alignment of INT16 does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c0602e8 <line:808:24, line:833:129> line:808:24
| |-ImplicitCastExpr 0x55887c0602b0 <line:778:24, line:833:50> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c060228 <line:778:24, line:833:50> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c0601d8 <line:778:24, col:38> 'unsigned long' alignof 'INT16':'short'
| |   `-UnaryExprOrTypeTraitExpr 0x55887c060208 <line:833:37, col:50> 'unsigned long' sizeof 'INT16':'short'
| `-StringLiteral 0x55887c060248 <col:53> 'char[75]' lvalue "Alignment of INT16 does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c060488 <line:808:24, line:834:131> line:808:24
| |-ImplicitCastExpr 0x55887c060450 <line:778:24, line:834:51> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c060388 <line:778:24, line:834:51> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c060338 <line:778:24, col:38> 'unsigned long' alignof 'UINT16':'unsigned short'
| |   `-UnaryExprOrTypeTraitExpr 0x55887c060368 <line:834:37, col:51> 'unsigned long' sizeof 'UINT16':'unsigned short'
| `-StringLiteral 0x55887c0603e8 <col:54> 'char[76]' lvalue "Alignment of UINT16 does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c0605e8 <line:808:24, line:835:129> line:808:24
| |-ImplicitCastExpr 0x55887c0605b0 <line:778:24, line:835:50> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c060528 <line:778:24, line:835:50> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c0604d8 <line:778:24, col:38> 'unsigned long' alignof 'INT32':'int'
| |   `-UnaryExprOrTypeTraitExpr 0x55887c060508 <line:835:37, col:50> 'unsigned long' sizeof 'INT32':'int'
| `-StringLiteral 0x55887c060548 <col:53> 'char[75]' lvalue "Alignment of INT32 does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c060748 <line:808:24, line:836:131> line:808:24
| |-ImplicitCastExpr 0x55887c060710 <line:778:24, line:836:51> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c060688 <line:778:24, line:836:51> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c060638 <line:778:24, col:38> 'unsigned long' alignof 'UINT32':'unsigned int'
| |   `-UnaryExprOrTypeTraitExpr 0x55887c060668 <line:836:37, col:51> 'unsigned long' sizeof 'UINT32':'unsigned int'
| `-StringLiteral 0x55887c0606a8 <col:54> 'char[76]' lvalue "Alignment of UINT32 does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c064f58 <line:808:24, line:837:129> line:808:24
| |-ImplicitCastExpr 0x55887c064f20 <line:778:24, line:837:50> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c0607e8 <line:778:24, line:837:50> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c060798 <line:778:24, col:38> 'unsigned long' alignof 'INT64':'long long'
| |   `-UnaryExprOrTypeTraitExpr 0x55887c0607c8 <line:837:37, col:50> 'unsigned long' sizeof 'INT64':'long long'
| `-StringLiteral 0x55887c060808 <col:53> 'char[75]' lvalue "Alignment of INT64 does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c0650b8 <line:808:24, line:838:131> line:808:24
| |-ImplicitCastExpr 0x55887c065080 <line:778:24, line:838:51> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c064ff8 <line:778:24, line:838:51> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c064fa8 <line:778:24, col:38> 'unsigned long' alignof 'UINT64':'unsigned long long'
| |   `-UnaryExprOrTypeTraitExpr 0x55887c064fd8 <line:838:37, col:51> 'unsigned long' sizeof 'UINT64':'unsigned long long'
| `-StringLiteral 0x55887c065018 <col:54> 'char[76]' lvalue "Alignment of UINT64 does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c065218 <line:808:24, line:839:129> line:808:24
| |-ImplicitCastExpr 0x55887c0651e0 <line:778:24, line:839:50> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c065158 <line:778:24, line:839:50> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c065108 <line:778:24, col:38> 'unsigned long' alignof 'CHAR8':'char'
| |   `-UnaryExprOrTypeTraitExpr 0x55887c065138 <line:839:37, col:50> 'unsigned long' sizeof 'CHAR8':'char'
| `-StringLiteral 0x55887c065178 <col:53> 'char[75]' lvalue "Alignment of CHAR8 does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c065378 <line:808:24, line:840:131> line:808:24
| |-ImplicitCastExpr 0x55887c065340 <line:778:24, line:840:51> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c0652b8 <line:778:24, line:840:51> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c065268 <line:778:24, col:38> 'unsigned long' alignof 'CHAR16':'unsigned short'
| |   `-UnaryExprOrTypeTraitExpr 0x55887c065298 <line:840:37, col:51> 'unsigned long' sizeof 'CHAR16':'unsigned short'
| `-StringLiteral 0x55887c0652d8 <col:54> 'char[76]' lvalue "Alignment of CHAR16 does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c065500 <line:808:24, line:841:127> line:808:24
| |-ImplicitCastExpr 0x55887c0654c8 <line:778:24, line:841:49> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c065440 <line:778:24, line:841:49> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c0653f0 <line:778:24, col:38> 'unsigned long' alignof 'INTN':'long long'
| |   `-UnaryExprOrTypeTraitExpr 0x55887c065420 <line:841:37, col:49> 'unsigned long' sizeof 'INTN':'long long'
| `-StringLiteral 0x55887c065460 <col:52> 'char[74]' lvalue "Alignment of INTN does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c065660 <line:808:24, line:842:129> line:808:24
| |-ImplicitCastExpr 0x55887c065628 <line:778:24, line:842:50> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c0655a0 <line:778:24, line:842:50> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c065550 <line:778:24, col:38> 'unsigned long' alignof 'UINTN':'unsigned long long'
| |   `-UnaryExprOrTypeTraitExpr 0x55887c065580 <line:842:37, col:50> 'unsigned long' sizeof 'UINTN':'unsigned long long'
| `-StringLiteral 0x55887c0655c0 <col:53> 'char[75]' lvalue "Alignment of UINTN does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c0657d0 <line:808:24, line:843:131> line:808:24
| |-ImplicitCastExpr 0x55887c065798 <line:778:24, line:843:51> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c065710 <line:778:24, line:843:51> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c0656b8 <line:778:24, col:38> 'unsigned long' alignof 'void *'
| |   `-UnaryExprOrTypeTraitExpr 0x55887c0656f0 <line:843:37, col:51> 'unsigned long' sizeof 'void *'
| `-StringLiteral 0x55887c065730 <col:54> 'char[76]' lvalue "Alignment of VOID * does not meet UEFI Specification Data Type requirements"
|-EnumDecl 0x55887c065810 <line:852:9, line:854:1> line:852:9
| `-EnumConstantDecl 0x55887c065910 <line:853:3, col:28> col:3 __VerifyUint8EnumValue 'int'
|   `-ConstantExpr 0x55887c0658f0 <col:28> 'int'
|     |-value: Int 255
|     `-IntegerLiteral 0x55887c0658d0 <col:28> 'int' 255
|-TypedefDecl 0x55887c0659b8 <line:852:1, line:854:3> col:3 referenced __VERIFY_UINT8_ENUM_SIZE 'enum __VERIFY_UINT8_ENUM_SIZE':'__VERIFY_UINT8_ENUM_SIZE'
| `-ElaboratedType 0x55887c065960 'enum __VERIFY_UINT8_ENUM_SIZE' sugar
|   `-EnumType 0x55887c0658b0 '__VERIFY_UINT8_ENUM_SIZE'
|     `-Enum 0x55887c065810 ''
|-EnumDecl 0x55887c065a28 <line:856:9, line:858:1> line:856:9
| `-EnumConstantDecl 0x55887c065b30 <line:857:3, col:29> col:3 __VerifyUint16EnumValue 'int'
|   `-ConstantExpr 0x55887c065b10 <col:29> 'int'
|     |-value: Int 65535
|     `-IntegerLiteral 0x55887c065af0 <col:29> 'int' 65535
|-TypedefDecl 0x55887c065bd8 <line:856:1, line:858:3> col:3 referenced __VERIFY_UINT16_ENUM_SIZE 'enum __VERIFY_UINT16_ENUM_SIZE':'__VERIFY_UINT16_ENUM_SIZE'
| `-ElaboratedType 0x55887c065b80 'enum __VERIFY_UINT16_ENUM_SIZE' sugar
|   `-EnumType 0x55887c065ad0 '__VERIFY_UINT16_ENUM_SIZE'
|     `-Enum 0x55887c065a28 ''
|-EnumDecl 0x55887c065c48 <line:860:9, line:862:1> line:860:9
| `-EnumConstantDecl 0x55887c065d50 <line:861:3, col:28> col:3 __VerifyInt32EnumValue 'int'
|   `-ConstantExpr 0x55887c065d30 <col:28> 'int'
|     |-value: Int 2147483647
|     `-IntegerLiteral 0x55887c065d10 <col:28> 'int' 2147483647
|-TypedefDecl 0x55887c065df8 <line:860:1, line:862:3> col:3 referenced __VERIFY_INT32_ENUM_SIZE 'enum __VERIFY_INT32_ENUM_SIZE':'__VERIFY_INT32_ENUM_SIZE'
| `-ElaboratedType 0x55887c065da0 'enum __VERIFY_INT32_ENUM_SIZE' sugar
|   `-EnumType 0x55887c065cf0 '__VERIFY_INT32_ENUM_SIZE'
|     `-Enum 0x55887c065c48 ''
|-StaticAssertDecl 0x55887c0670c0 <line:808:24, line:864:126> line:808:24
| |-ImplicitCastExpr 0x55887c067088 <line:864:16, col:53> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c065ef8 <col:16, col:53> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c065ea0 <col:16, col:48> 'unsigned long' sizeof '__VERIFY_UINT8_ENUM_SIZE':'__VERIFY_UINT8_ENUM_SIZE'
| |   `-ImplicitCastExpr 0x55887c065ee0 <col:53> 'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x55887c065ec0 <col:53> 'int' 4
| `-StringLiteral 0x55887c067028 <col:56> 'char[69]' lvalue "Size of enum does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c067240 <line:808:24, line:865:127> line:808:24
| |-ImplicitCastExpr 0x55887c067208 <line:865:16, col:54> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c067188 <col:16, col:54> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c067130 <col:16, col:49> 'unsigned long' sizeof '__VERIFY_UINT16_ENUM_SIZE':'__VERIFY_UINT16_ENUM_SIZE'
| |   `-ImplicitCastExpr 0x55887c067170 <col:54> 'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x55887c067150 <col:54> 'int' 4
| `-StringLiteral 0x55887c0671a8 <col:57> 'char[69]' lvalue "Size of enum does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c0673c0 <line:808:24, line:866:126> line:808:24
| |-ImplicitCastExpr 0x55887c067388 <line:866:16, col:53> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c067308 <col:16, col:53> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c0672b0 <col:16, col:48> 'unsigned long' sizeof '__VERIFY_INT32_ENUM_SIZE':'__VERIFY_INT32_ENUM_SIZE'
| |   `-ImplicitCastExpr 0x55887c0672f0 <col:53> 'unsigned long' <IntegralCast>
| |     `-IntegerLiteral 0x55887c0672d0 <col:53> 'int' 4
| `-StringLiteral 0x55887c067328 <col:56> 'char[69]' lvalue "Size of enum does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c067520 <line:808:24, line:868:165> line:808:24
| |-ImplicitCastExpr 0x55887c0674e8 <line:778:24, line:868:87> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c067460 <line:778:24, line:868:87> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c067410 <line:778:24, col:38> 'unsigned long' alignof '__VERIFY_UINT8_ENUM_SIZE':'__VERIFY_UINT8_ENUM_SIZE'
| |   `-UnaryExprOrTypeTraitExpr 0x55887c067440 <line:868:55, col:87> 'unsigned long' sizeof '__VERIFY_UINT8_ENUM_SIZE':'__VERIFY_UINT8_ENUM_SIZE'
| `-StringLiteral 0x55887c067480 <col:90> 'char[74]' lvalue "Alignment of enum does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c067680 <line:808:24, line:869:166> line:808:24
| |-ImplicitCastExpr 0x55887c067648 <line:778:24, line:869:88> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c0675c0 <line:778:24, line:869:88> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c067570 <line:778:24, col:38> 'unsigned long' alignof '__VERIFY_UINT16_ENUM_SIZE':'__VERIFY_UINT16_ENUM_SIZE'
| |   `-UnaryExprOrTypeTraitExpr 0x55887c0675a0 <line:869:55, col:88> 'unsigned long' sizeof '__VERIFY_UINT16_ENUM_SIZE':'__VERIFY_UINT16_ENUM_SIZE'
| `-StringLiteral 0x55887c0675e0 <col:91> 'char[74]' lvalue "Alignment of enum does not meet UEFI Specification Data Type requirements"
|-StaticAssertDecl 0x55887c0679f0 <line:808:24, line:870:164> line:808:24
| |-ImplicitCastExpr 0x55887c0679b8 <line:778:24, line:870:86> '_Bool' <IntegralToBoolean>
| | `-BinaryOperator 0x55887c067720 <line:778:24, line:870:86> 'int' '=='
| |   |-UnaryExprOrTypeTraitExpr 0x55887c0676d0 <line:778:24, col:38> 'unsigned long' alignof '__VERIFY_INT32_ENUM_SIZE':'__VERIFY_INT32_ENUM_SIZE'
| |   `-UnaryExprOrTypeTraitExpr 0x55887c067700 <line:870:54, col:86> 'unsigned long' sizeof '__VERIFY_INT32_ENUM_SIZE':'__VERIFY_INT32_ENUM_SIZE'
| `-StringLiteral 0x55887c067740 <col:89> 'char[74]' lvalue "Alignment of enum does not meet UEFI Specification Data Type requirements"
|-TypedefDecl 0x55887c067a40 <line:1026:1, col:15> col:15 referenced RETURN_STATUS 'UINTN':'unsigned long long'
| `-TypedefType 0x55887c0527b0 'UINTN' sugar
|   |-Typedef 0x55887c04a020 'UINTN'
|   `-TypedefType 0x55887c049ff0 'UINT64' sugar
|     |-Typedef 0x55887c049930 'UINT64'
|     `-BuiltinType 0x55887bfe9190 'unsigned long long'
|-TypedefDecl 0x55887c06c210 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiBaseType.h:25:1, col:14> col:14 referenced EFI_GUID 'GUID':'GUID'
| |-TypedefType 0x55887c06c1e0 'GUID' sugar
| | |-Typedef 0x55887c051a78 'GUID'
| | `-ElaboratedType 0x55887c051a20 'struct GUID' sugar
| |   `-RecordType 0x55887c04a5b0 'GUID'
| |     `-Record 0x55887c04a528 ''
| `-FullComment 0x55887c347690 <line:23:4, col:56>
|   `-ParagraphComment 0x55887c347660 <col:4, col:56>
|     `-TextComment 0x55887c347630 <col:4, col:56> Text=" 128-bit buffer containing a unique identifier value."
|-TypedefDecl 0x55887c06c2d0 <line:29:1, col:23> col:23 referenced EFI_STATUS 'RETURN_STATUS':'unsigned long long'
| |-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| | |-Typedef 0x55887c067a40 'RETURN_STATUS'
| | `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |   |-Typedef 0x55887c04a020 'UINTN'
| |   `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |-Typedef 0x55887c049930 'UINT64'
| |     `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c347760 <line:27:4, col:39>
|   `-ParagraphComment 0x55887c347730 <col:4, col:39>
|     `-TextComment 0x55887c347700 <col:4, col:39> Text=" Function return status for EFI API."
|-TypedefDecl 0x55887c06c370 <line:33:1, col:15> col:15 EFI_HANDLE 'void *'
| |-PointerType 0x55887bfe9730 'void *'
| | `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c347830 <line:31:4, col:39>
|   `-ParagraphComment 0x55887c347800 <col:4, col:39>
|     `-TextComment 0x55887c3477d0 <col:4, col:39> Text=" A collection of related interfaces."
|-TypedefDecl 0x55887c06c410 <line:37:1, col:15> col:15 EFI_EVENT 'void *'
| |-PointerType 0x55887bfe9730 'void *'
| | `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c347900 <line:35:4, col:33>
|   `-ParagraphComment 0x55887c3478d0 <col:4, col:33>
|     `-TextComment 0x55887c3478a0 <col:4, col:33> Text=" Handle to an event structure."
|-TypedefDecl 0x55887c06c4a8 <line:41:1, col:15> col:15 EFI_TPL 'UINTN':'unsigned long long'
| |-TypedefType 0x55887c0527b0 'UINTN' sugar
| | |-Typedef 0x55887c04a020 'UINTN'
| | `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |   |-Typedef 0x55887c049930 'UINT64'
| |   `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c3479d0 <line:39:4, col:24>
|   `-ParagraphComment 0x55887c3479a0 <col:4, col:24>
|     `-TextComment 0x55887c347970 <col:4, col:24> Text=" Task priority level."
|-TypedefDecl 0x55887c06c538 <line:45:1, col:16> col:16 EFI_LBA 'UINT64':'unsigned long long'
| |-TypedefType 0x55887c049ff0 'UINT64' sugar
| | |-Typedef 0x55887c049930 'UINT64'
| | `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c347aa0 <line:43:4, col:26>
|   `-ParagraphComment 0x55887c347a70 <col:4, col:26>
|     `-TextComment 0x55887c347a40 <col:4, col:26> Text=" Logical block address."
|-TypedefDecl 0x55887c06c5c8 <line:50:1, col:16> col:16 referenced EFI_PHYSICAL_ADDRESS 'UINT64':'unsigned long long'
| |-TypedefType 0x55887c049ff0 'UINT64' sugar
| | |-Typedef 0x55887c049930 'UINT64'
| | `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c347b70 <line:48:4, col:35>
|   `-ParagraphComment 0x55887c347b40 <col:4, col:35>
|     `-TextComment 0x55887c347b10 <col:4, col:35> Text=" 64-bit physical memory address."
|-TypedefDecl 0x55887c06c658 <line:55:1, col:16> col:16 EFI_VIRTUAL_ADDRESS 'UINT64':'unsigned long long'
| |-TypedefType 0x55887c049ff0 'UINT64' sugar
| | |-Typedef 0x55887c049930 'UINT64'
| | `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c347c40 <line:53:4, col:34>
|   `-ParagraphComment 0x55887c347c10 <col:4, col:34>
|     `-TextComment 0x55887c347be0 <col:4, col:34> Text=" 64-bit virtual memory address."
|-RecordDecl 0x55887c06c6d8 <line:68:9, line:80:1> line:68:9 struct definition
| |-FullComment 0x55887c347e50 <line:58:4, line:66:38>
| | `-ParagraphComment 0x55887c347e20 <line:58:4, line:66:38>
| |   |-TextComment 0x55887c347cb0 <line:58:4, col:25> Text=" EFI Time Abstraction:"
| |   |-TextComment 0x55887c347cd0 <line:59:4, col:28> Text="  Year:       1900 - 9999"
| |   |-TextComment 0x55887c347cf0 <line:60:4, col:23> Text="  Month:      1 - 12"
| |   |-TextComment 0x55887c347d10 <line:61:4, col:23> Text="  Day:        1 - 31"
| |   |-TextComment 0x55887c347d30 <line:62:4, col:23> Text="  Hour:       0 - 23"
| |   |-TextComment 0x55887c347d50 <line:63:4, col:23> Text="  Minute:     0 - 59"
| |   |-TextComment 0x55887c347d70 <line:64:4, col:23> Text="  Second:     0 - 59"
| |   |-TextComment 0x55887c347d90 <line:65:4, col:32> Text="  Nanosecond: 0 - 999,999,999"
| |   `-TextComment 0x55887c347db0 <line:66:4, col:38> Text="  TimeZone:   -1440 to 1440 or 2047"
| |-FieldDecl 0x55887c06c790 <line:69:3, col:13> col:13 Year 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c06c7f0 <line:70:3, col:13> col:13 Month 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c06c850 <line:71:3, col:13> col:13 Day 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c06c8b0 <line:72:3, col:13> col:13 Hour 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c06c910 <line:73:3, col:13> col:13 Minute 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c06c970 <line:74:3, col:13> col:13 Second 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c06c9d0 <line:75:3, col:13> col:13 Pad1 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c06ca30 <line:76:3, col:13> col:13 Nanosecond 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c06ca90 <line:77:3, col:13> col:13 TimeZone 'INT16':'short'
| |-FieldDecl 0x55887c06caf0 <line:78:3, col:13> col:13 Daylight 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c06cb50 <line:79:3, col:13> col:13 Pad2 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c06cbf8 <line:68:1, line:80:3> col:3 referenced EFI_TIME 'struct EFI_TIME':'EFI_TIME'
| |-ElaboratedType 0x55887c06cba0 'struct EFI_TIME' sugar
| | `-RecordType 0x55887c06c760 'EFI_TIME'
| |   `-Record 0x55887c06c6d8 ''
| `-FullComment 0x55887c348060 <line:58:4, line:66:38>
|   `-ParagraphComment 0x55887c348030 <line:58:4, line:66:38>
|     |-TextComment 0x55887c347ec0 <line:58:4, col:25> Text=" EFI Time Abstraction:"
|     |-TextComment 0x55887c347ee0 <line:59:4, col:28> Text="  Year:       1900 - 9999"
|     |-TextComment 0x55887c347f00 <line:60:4, col:23> Text="  Month:      1 - 12"
|     |-TextComment 0x55887c347f20 <line:61:4, col:23> Text="  Day:        1 - 31"
|     |-TextComment 0x55887c347f40 <line:62:4, col:23> Text="  Hour:       0 - 23"
|     |-TextComment 0x55887c347f60 <line:63:4, col:23> Text="  Minute:     0 - 59"
|     |-TextComment 0x55887c347f80 <line:64:4, col:23> Text="  Second:     0 - 59"
|     |-TextComment 0x55887c347fa0 <line:65:4, col:32> Text="  Nanosecond: 0 - 999,999,999"
|     `-TextComment 0x55887c347fc0 <line:66:4, col:38> Text="  TimeZone:   -1440 to 1440 or 2047"
|-TypedefDecl 0x55887c06ccc0 <line:85:1, col:22> col:22 referenced EFI_IPv4_ADDRESS 'IPv4_ADDRESS':'IPv4_ADDRESS'
| |-TypedefType 0x55887c06cc90 'IPv4_ADDRESS' sugar
| | |-Typedef 0x55887c051d38 'IPv4_ADDRESS'
| | `-ElaboratedType 0x55887c051ce0 'struct IPv4_ADDRESS' sugar
| |   `-RecordType 0x55887c051b90 'IPv4_ADDRESS'
| |     `-Record 0x55887c051b10 ''
| `-FullComment 0x55887c348130 <line:83:4, col:53>
|   `-ParagraphComment 0x55887c348100 <col:4, col:53>
|     `-TextComment 0x55887c3480d0 <col:4, col:53> Text=" 4-byte buffer. An IPv4 internet protocol address."
|-TypedefDecl 0x55887c06f5f0 <line:90:1, col:22> col:22 referenced EFI_IPv6_ADDRESS 'IPv6_ADDRESS':'IPv6_ADDRESS'
| |-TypedefType 0x55887c06cd50 'IPv6_ADDRESS' sugar
| | |-Typedef 0x55887c051ff8 'IPv6_ADDRESS'
| | `-ElaboratedType 0x55887c051fa0 'struct IPv6_ADDRESS' sugar
| |   `-RecordType 0x55887c051e50 'IPv6_ADDRESS'
| |     `-Record 0x55887c051dd0 ''
| `-FullComment 0x55887c348200 <line:88:4, col:54>
|   `-ParagraphComment 0x55887c3481d0 <col:4, col:54>
|     `-TextComment 0x55887c3481a0 <col:4, col:54> Text=" 16-byte buffer. An IPv6 internet protocol address."
|-RecordDecl 0x55887c06f678 <line:95:9, line:97:1> line:95:9 struct definition
| |-FullComment 0x55887c3482d0 <line:93:4, col:69>
| | `-ParagraphComment 0x55887c3482a0 <col:4, col:69>
| |   `-TextComment 0x55887c348270 <col:4, col:69> Text=" 32-byte buffer containing a network Media Access Control address."
| `-FieldDecl 0x55887c06f7f8 <line:96:3, col:19> col:12 Addr 'UINT8[32]'
|-TypedefDecl 0x55887c06f8a8 <line:95:1, line:97:3> col:3 referenced EFI_MAC_ADDRESS 'struct EFI_MAC_ADDRESS':'EFI_MAC_ADDRESS'
| |-ElaboratedType 0x55887c06f850 'struct EFI_MAC_ADDRESS' sugar
| | `-RecordType 0x55887c06f700 'EFI_MAC_ADDRESS'
| |   `-Record 0x55887c06f678 ''
| `-FullComment 0x55887c3483a0 <line:93:4, col:69>
|   `-ParagraphComment 0x55887c348370 <col:4, col:69>
|     `-TextComment 0x55887c348340 <col:4, col:69> Text=" 32-byte buffer containing a network Media Access Control address."
|-RecordDecl 0x55887c06f940 <line:103:9, line:107:1> line:103:9 union definition
| |-FullComment 0x55887c348490 <line:100:4, line:101:46>
| | `-ParagraphComment 0x55887c348460 <line:100:4, line:101:46>
| |   |-TextComment 0x55887c348410 <line:100:4, col:48> Text=" 16-byte buffer aligned on a 4-byte boundary."
| |   `-TextComment 0x55887c348430 <line:101:4, col:46> Text=" An IPv4 or IPv6 internet protocol address."
| |-FieldDecl 0x55887c06fab8 <line:104:3, col:29> col:23 Addr 'UINT32[4]'
| |-FieldDecl 0x55887c06fb40 <line:105:3, col:23> col:23 v4 'EFI_IPv4_ADDRESS':'IPv4_ADDRESS'
| `-FieldDecl 0x55887c06fbc0 <line:106:3, col:23> col:23 v6 'EFI_IPv6_ADDRESS':'IPv6_ADDRESS'
|-TypedefDecl 0x55887c06fc68 <line:103:1, line:107:3> col:3 referenced EFI_IP_ADDRESS 'union EFI_IP_ADDRESS':'EFI_IP_ADDRESS'
| |-ElaboratedType 0x55887c06fc10 'union EFI_IP_ADDRESS' sugar
| | `-RecordType 0x55887c06f9c0 'EFI_IP_ADDRESS'
| |   `-Record 0x55887c06f940 ''
| `-FullComment 0x55887c348580 <line:100:4, line:101:46>
|   `-ParagraphComment 0x55887c348550 <line:100:4, line:101:46>
|     |-TextComment 0x55887c348500 <line:100:4, col:48> Text=" 16-byte buffer aligned on a 4-byte boundary."
|     `-TextComment 0x55887c348520 <line:101:4, col:46> Text=" An IPv4 or IPv6 internet protocol address."
|-RecordDecl 0x55887c070180 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Guid/WinCertificate.h:24:9, line:47:1> line:24:9 struct definition
| |-FullComment 0x55887c348650 <line:22:4, col:71>
| | `-ParagraphComment 0x55887c348620 <col:4, col:71>
| |   `-TextComment 0x55887c3485f0 <col:4, col:71> Text=" The WIN_CERTIFICATE structure is part of the PE/COFF specification."
| |-FieldDecl 0x55887c070258 <line:29:3, col:13> col:13 dwLength 'UINT32':'unsigned int'
| | `-FullComment 0x55887c348740 <line:26:6, line:27:51>
| |   `-ParagraphComment 0x55887c348710 <line:26:6, line:27:51>
| |     |-TextComment 0x55887c3486c0 <line:26:6, col:43> Text=" The length of the entire certificate,"
| |     `-TextComment 0x55887c3486e0 <line:27:6, col:51> Text=" including the length of the header, in bytes."
| |-FieldDecl 0x55887c0702e8 <line:34:3, col:13> col:13 wRevision 'UINT16':'unsigned short'
| | `-FullComment 0x55887c348830 <line:31:6, line:32:54>
| |   `-ParagraphComment 0x55887c348800 <line:31:6, line:32:54>
| |     |-TextComment 0x55887c3487b0 <line:31:6, col:47> Text=" The revision level of the WIN_CERTIFICATE"
| |     `-TextComment 0x55887c3487d0 <line:32:6, col:54> Text=" structure. The current revision level is 0x0200."
| `-FieldDecl 0x55887c070378 <line:40:3, col:13> col:13 wCertificateType 'UINT16':'unsigned short'
|   `-FullComment 0x55887c348950 <line:36:6, line:38:52>
|     `-ParagraphComment 0x55887c348920 <line:36:6, line:38:52>
|       |-TextComment 0x55887c3488a0 <line:36:6, col:62> Text=" The certificate type. See WIN_CERT_TYPE_xxx for the UEFI"
|       |-TextComment 0x55887c3488c0 <line:37:6, col:69> Text=" certificate types. The UEFI specification reserves the range of"
|       `-TextComment 0x55887c3488e0 <line:38:6, col:52> Text=" certificate type values from 0x0EF0 to 0x0EFF."
|-TypedefDecl 0x55887c070458 <line:24:1, line:47:3> col:3 referenced WIN_CERTIFICATE 'struct WIN_CERTIFICATE':'WIN_CERTIFICATE'
| |-ElaboratedType 0x55887c070400 'struct WIN_CERTIFICATE' sugar
| | `-RecordType 0x55887c070200 'WIN_CERTIFICATE'
| |   `-Record 0x55887c070180 ''
| `-FullComment 0x55887c348a20 <line:22:4, col:71>
|   `-ParagraphComment 0x55887c3489f0 <col:4, col:71>
|     `-TextComment 0x55887c3489c0 <col:4, col:71> Text=" The WIN_CERTIFICATE structure is part of the PE/COFF specification."
|-RecordDecl 0x55887c070520 <line:58:9, line:62:1> line:58:9 struct definition
| |-FullComment 0x55887c348af0 <line:56:4, col:38>
| | `-ParagraphComment 0x55887c348ac0 <col:4, col:38>
| |   `-TextComment 0x55887c348a90 <col:4, col:38> Text=" WIN_CERTIFICATE_UEFI_GUID.CertData"
| |-FieldDecl 0x55887c07f6a0 <line:59:3, col:15> col:15 HashType 'EFI_GUID':'GUID'
| |-FieldDecl 0x55887c07f7c8 <line:60:3, col:28> col:15 PublicKey 'UINT8[256]'
| `-FieldDecl 0x55887c07f878 <line:61:3, col:28> col:15 Signature 'UINT8[256]'
|-TypedefDecl 0x55887c07f998 <line:58:1, line:62:3> col:3 EFI_CERT_BLOCK_RSA_2048_SHA256 'struct EFI_CERT_BLOCK_RSA_2048_SHA256':'EFI_CERT_BLOCK_RSA_2048_SHA256'
| |-ElaboratedType 0x55887c07f940 'struct EFI_CERT_BLOCK_RSA_2048_SHA256' sugar
| | `-RecordType 0x55887c0705a0 'EFI_CERT_BLOCK_RSA_2048_SHA256'
| |   `-Record 0x55887c070520 ''
| `-FullComment 0x55887c348bc0 <line:56:4, col:38>
|   `-ParagraphComment 0x55887c348b90 <col:4, col:38>
|     `-TextComment 0x55887c348b60 <col:4, col:38> Text=" WIN_CERTIFICATE_UEFI_GUID.CertData"
|-RecordDecl 0x55887c07fa30 <line:67:9, line:85:1> line:67:9 struct definition
| |-FullComment 0x55887c348c90 <line:65:4, col:68>
| | `-ParagraphComment 0x55887c348c60 <col:4, col:68>
| |   `-TextComment 0x55887c348c30 <col:4, col:68> Text=" Certificate which encapsulates a GUID-specific digital signature"
| |-FieldDecl 0x55887c07fb30 <line:72:3, col:22> col:22 Hdr 'WIN_CERTIFICATE':'WIN_CERTIFICATE'
| | `-FullComment 0x55887c348d80 <line:69:6, line:70:56>
| |   `-ParagraphComment 0x55887c348d50 <line:69:6, line:70:56>
| |     |-TextComment 0x55887c348d00 <line:69:6, col:56> Text=" This is the standard WIN_CERTIFICATE header, where"
| |     `-TextComment 0x55887c348d20 <line:70:6, col:56> Text=" wCertificateType is set to WIN_CERT_TYPE_EFI_GUID."
| |-FieldDecl 0x55887c07fbb8 <line:77:3, col:22> col:22 CertType 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c348e70 <line:74:6, line:75:31>
| |   `-ParagraphComment 0x55887c348e40 <line:74:6, line:75:31>
| |     |-TextComment 0x55887c348df0 <line:74:6, col:48> Text=" This is the unique id which determines the"
| |     `-TextComment 0x55887c348e10 <line:75:6, col:31> Text=" format of the CertData. ."
| `-FieldDecl 0x55887c07fd18 <line:84:3, col:32> col:22 CertData 'UINT8[1]'
|   `-FullComment 0x55887c348fb0 <line:79:6, line:82:68>
|     `-ParagraphComment 0x55887c348f80 <line:79:6, line:82:68>
|       |-TextComment 0x55887c348ee0 <line:79:6, col:58> Text=" The following is the certificate data. The format of"
|       |-TextComment 0x55887c348f00 <line:80:6, col:45> Text=" the data is determined by the CertType."
|       |-TextComment 0x55887c348f20 <line:81:6, col:55> Text=" If CertType is EFI_CERT_TYPE_RSA2048_SHA256_GUID,"
|       `-TextComment 0x55887c348f40 <line:82:6, col:68> Text=" the CertData will be EFI_CERT_BLOCK_RSA_2048_SHA256 structure."
|-TypedefDecl 0x55887c07fe28 <line:67:1, line:85:3> col:3 referenced WIN_CERTIFICATE_UEFI_GUID 'struct WIN_CERTIFICATE_UEFI_GUID':'WIN_CERTIFICATE_UEFI_GUID'
| |-ElaboratedType 0x55887c07fdd0 'struct WIN_CERTIFICATE_UEFI_GUID' sugar
| | `-RecordType 0x55887c07fab0 'WIN_CERTIFICATE_UEFI_GUID'
| |   `-Record 0x55887c07fa30 ''
| `-FullComment 0x55887c349080 <line:65:4, col:68>
|   `-ParagraphComment 0x55887c349050 <col:4, col:68>
|     `-TextComment 0x55887c349020 <col:4, col:68> Text=" Certificate which encapsulates a GUID-specific digital signature"
|-RecordDecl 0x55887c07fec0 <line:95:9, line:116:1> line:95:9 struct definition
| |-FullComment 0x55887c34a230 <line:88:4, line:93:25>
| | |-ParagraphComment 0x55887c349120 <line:88:4, col:75>
| | | `-TextComment 0x55887c3490f0 <col:4, col:75> Text=" Certificate which encapsulates the RSASSA_PKCS1-v1_5 digital signature."
| | `-ParagraphComment 0x55887c34a200 <line:90:4, line:93:25>
| |   |-TextComment 0x55887c349140 <line:90:4, col:63> Text=" The WIN_CERTIFICATE_UEFI_PKCS1_15 structure is derived from"
| |   |-TextComment 0x55887c349160 <line:91:4, col:61> Text=" WIN_CERTIFICATE and encapsulate the information needed to"
| |   |-TextComment 0x55887c349180 <line:92:4, col:66> Text=" implement the RSASSA-PKCS1-v1_5 digital signature algorithm as"
| |   `-TextComment 0x55887c3491a0 <line:93:4, col:25> Text=" specified in RFC2437."
| |-FieldDecl 0x55887c07ff98 <line:100:3, col:22> col:22 Hdr 'WIN_CERTIFICATE':'WIN_CERTIFICATE'
| | `-FullComment 0x55887c34a320 <line:97:6, line:98:61>
| |   `-ParagraphComment 0x55887c34a2f0 <line:97:6, line:98:61>
| |     |-TextComment 0x55887c34a2a0 <line:97:6, col:56> Text=" This is the standard WIN_CERTIFICATE header, where"
| |     `-TextComment 0x55887c34a2c0 <line:98:6, col:61> Text=" wCertificateType is set to WIN_CERT_TYPE_UEFI_PKCS1_15."
| `-FieldDecl 0x55887c080028 <line:105:3, col:22> col:22 HashAlgorithm 'EFI_GUID':'GUID'
|   `-FullComment 0x55887c34a410 <line:102:6, line:103:58>
|     `-ParagraphComment 0x55887c34a3e0 <line:102:6, line:103:58>
|       |-TextComment 0x55887c34a390 <line:102:6, col:62> Text=" This is the hashing algorithm which was performed on the"
|       `-TextComment 0x55887c34a3b0 <line:103:6, col:58> Text=" UEFI executable when creating the digital signature."
|-TypedefDecl 0x55887c080108 <line:95:1, line:116:3> col:3 WIN_CERTIFICATE_EFI_PKCS1_15 'struct WIN_CERTIFICATE_EFI_PKCS1_15':'WIN_CERTIFICATE_EFI_PKCS1_15'
| |-ElaboratedType 0x55887c0800b0 'struct WIN_CERTIFICATE_EFI_PKCS1_15' sugar
| | `-RecordType 0x55887c07ff40 'WIN_CERTIFICATE_EFI_PKCS1_15'
| |   `-Record 0x55887c07fec0 ''
| `-FullComment 0x55887c34a5a0 <line:88:4, line:93:25>
|   |-ParagraphComment 0x55887c34a4b0 <line:88:4, col:75>
|   | `-TextComment 0x55887c34a480 <col:4, col:75> Text=" Certificate which encapsulates the RSASSA_PKCS1-v1_5 digital signature."
|   `-ParagraphComment 0x55887c34a570 <line:90:4, line:93:25>
|     |-TextComment 0x55887c34a4d0 <line:90:4, col:63> Text=" The WIN_CERTIFICATE_UEFI_PKCS1_15 structure is derived from"
|     |-TextComment 0x55887c34a4f0 <line:91:4, col:61> Text=" WIN_CERTIFICATE and encapsulate the information needed to"
|     |-TextComment 0x55887c34a510 <line:92:4, col:66> Text=" implement the RSASSA-PKCS1-v1_5 digital signature algorithm as"
|     `-TextComment 0x55887c34a530 <line:93:4, col:25> Text=" specified in RFC2437."
|-VarDecl 0x55887c080188 <line:118:1, col:18> col:18 gEfiCertTypeRsa2048Sha256Guid 'EFI_GUID':'GUID' extern
|-EnumDecl 0x55887c080298 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiMultiPhase.h:38:9, line:112:1> line:38:9
| |-FullComment 0x55887c34a670 <line:36:4, col:51>
| | `-ParagraphComment 0x55887c34a640 <col:4, col:51>
| |   `-TextComment 0x55887c34a610 <col:4, col:51> Text=" Enumeration of memory types introduced in UEFI."
| |-EnumConstantDecl 0x55887c080360 <line:42:3> col:3 EfiReservedMemoryType 'int'
| | `-FullComment 0x55887c34a740 <line:40:6, col:15>
| |   `-ParagraphComment 0x55887c34a710 <col:6, col:15>
| |     `-TextComment 0x55887c34a6e0 <col:6, col:15> Text=" Not used."
| |-EnumConstantDecl 0x55887c0803d8 <line:47:3> col:3 EfiLoaderCode 'int'
| | `-FullComment 0x55887c34a830 <line:44:6, line:45:56>
| |   `-ParagraphComment 0x55887c34a800 <line:44:6, line:45:56>
| |     |-TextComment 0x55887c34a7b0 <line:44:6, col:48> Text=" The code portions of a loaded application."
| |     `-TextComment 0x55887c34a7d0 <line:45:6, col:56> Text=" (Note that UEFI OS loaders are UEFI applications.)"
| |-EnumConstantDecl 0x55887c080458 <line:52:3> col:3 EfiLoaderData 'int'
| | `-FullComment 0x55887c34a920 <line:49:6, line:50:58>
| |   `-ParagraphComment 0x55887c34a8f0 <line:49:6, line:50:58>
| |     |-TextComment 0x55887c34a8a0 <line:49:6, col:79> Text=" The data portions of a loaded application and the default data allocation"
| |     `-TextComment 0x55887c34a8c0 <line:50:6, col:58> Text=" type used by an application to allocate pool memory."
| |-EnumConstantDecl 0x55887c0804d8 <line:56:3> col:3 EfiBootServicesCode 'int'
| | `-FullComment 0x55887c34a9f0 <line:54:6, col:57>
| |   `-ParagraphComment 0x55887c34a9c0 <col:6, col:57>
| |     `-TextComment 0x55887c34a990 <col:6, col:57> Text=" The code portions of a loaded Boot Services Driver."
| |-EnumConstantDecl 0x55887c080558 <line:61:3> col:3 referenced EfiBootServicesData 'int'
| | `-FullComment 0x55887c34aae0 <line:58:6, line:59:77>
| |   `-ParagraphComment 0x55887c34aab0 <line:58:6, line:59:77>
| |     |-TextComment 0x55887c34aa60 <line:58:6, col:76> Text=" The data portions of a loaded Boot Serves Driver, and the default data"
| |     `-TextComment 0x55887c34aa80 <line:59:6, col:77> Text=" allocation type used by a Boot Services Driver to allocate pool memory."
| |-EnumConstantDecl 0x55887c0805d8 <line:65:3> col:3 EfiRuntimeServicesCode 'int'
| | `-FullComment 0x55887c34abb0 <line:63:6, col:60>
| |   `-ParagraphComment 0x55887c34ab80 <col:6, col:60>
| |     `-TextComment 0x55887c34ab50 <col:6, col:60> Text=" The code portions of a loaded Runtime Services Driver."
| |-EnumConstantDecl 0x55887c0816c0 <line:70:3> col:3 EfiRuntimeServicesData 'int'
| | `-FullComment 0x55887c34aca0 <line:67:6, line:68:85>
| |   `-ParagraphComment 0x55887c34ac70 <line:67:6, line:68:85>
| |     |-TextComment 0x55887c34ac20 <line:67:6, col:75> Text=" The data portions of a loaded Runtime Services Driver and the default"
| |     `-TextComment 0x55887c34ac40 <line:68:6, col:85> Text=" data allocation type used by a Runtime Services Driver to allocate pool memory."
| |-EnumConstantDecl 0x55887c081738 <line:74:3> col:3 EfiConventionalMemory 'int'
| | `-FullComment 0x55887c34ad70 <line:72:6, col:32>
| |   `-ParagraphComment 0x55887c34ad40 <col:6, col:32>
| |     `-TextComment 0x55887c34ad10 <col:6, col:32> Text=" Free (unallocated) memory."
| |-EnumConstantDecl 0x55887c0817b8 <line:78:3> col:3 EfiUnusableMemory 'int'
| | `-FullComment 0x55887c34ae40 <line:76:6, col:48>
| |   `-ParagraphComment 0x55887c34ae10 <col:6, col:48>
| |     `-TextComment 0x55887c34ade0 <col:6, col:48> Text=" Memory in which errors have been detected."
| |-EnumConstantDecl 0x55887c081838 <line:82:3> col:3 EfiACPIReclaimMemory 'int'
| | `-FullComment 0x55887c34af10 <line:80:6, col:40>
| |   `-ParagraphComment 0x55887c34aee0 <col:6, col:40>
| |     `-TextComment 0x55887c34aeb0 <col:6, col:40> Text=" Memory that holds the ACPI tables."
| |-EnumConstantDecl 0x55887c0818b8 <line:86:3> col:3 EfiACPIMemoryNVS 'int'
| | `-FullComment 0x55887c34afe0 <line:84:6, col:53>
| |   `-ParagraphComment 0x55887c34afb0 <col:6, col:53>
| |     `-TextComment 0x55887c34af80 <col:6, col:53> Text=" Address space reserved for use by the firmware."
| |-EnumConstantDecl 0x55887c081938 <line:91:3> col:3 EfiMemoryMappedIO 'int'
| | `-FullComment 0x55887c34b0d0 <line:88:6, line:89:93>
| |   `-ParagraphComment 0x55887c34b0a0 <line:88:6, line:89:93>
| |     |-TextComment 0x55887c34b050 <line:88:6, col:71> Text=" Used by system firmware to request that a memory-mapped IO region"
| |     `-TextComment 0x55887c34b070 <line:89:6, col:93> Text=" be mapped by the OS to a virtual address so it can be accessed by EFI runtime services."
| |-EnumConstantDecl 0x55887c0819b8 <line:96:3> col:3 EfiMemoryMappedIOPortSpace 'int'
| | `-FullComment 0x55887c34b1c0 <line:93:6, line:94:43>
| |   `-ParagraphComment 0x55887c34b190 <line:93:6, line:94:43>
| |     |-TextComment 0x55887c34b140 <line:93:6, col:69> Text=" System memory-mapped IO region that is used to translate memory"
| |     `-TextComment 0x55887c34b160 <line:94:6, col:43> Text=" cycles to IO cycles by the processor."
| |-EnumConstantDecl 0x55887c081a38 <line:100:3> col:3 EfiPalCode 'int'
| | `-FullComment 0x55887c34b290 <line:98:6, col:84>
| |   `-ParagraphComment 0x55887c34b260 <col:6, col:84>
| |     `-TextComment 0x55887c34b230 <col:6, col:84> Text=" Address space reserved by the firmware for code that is part of the processor."
| |-EnumConstantDecl 0x55887c081ab8 <line:105:3> col:3 EfiPersistentMemory 'int'
| | `-FullComment 0x55887c34b380 <line:102:6, line:103:73>
| |   `-ParagraphComment 0x55887c34b350 <line:102:6, line:103:73>
| |     |-TextComment 0x55887c34b300 <line:102:6, col:61> Text=" A memory region that operates as EfiConventionalMemory,"
| |     `-TextComment 0x55887c34b320 <line:103:6, col:73> Text=" however it happens to also support byte-addressable non-volatility."
| |-EnumConstantDecl 0x55887c081b38 <line:110:3> col:3 EfiUnacceptedMemoryType 'int'
| | `-FullComment 0x55887c34b470 <line:107:6, line:108:71>
| |   `-ParagraphComment 0x55887c34b440 <line:107:6, line:108:71>
| |     |-TextComment 0x55887c34b3f0 <line:107:6, col:77> Text=" A memory region that describes system memory that has not been accepted"
| |     `-TextComment 0x55887c34b410 <line:108:6, col:71> Text=" by a corresponding call to the underlying isolation architecture."
| `-EnumConstantDecl 0x55887c081b88 <line:111:3> col:3 referenced EfiMaxMemoryType 'int'
|   `-FullComment 0x55887c34b560 <line:107:6, line:108:71>
|     `-ParagraphComment 0x55887c34b530 <line:107:6, line:108:71>
|       |-TextComment 0x55887c34b4e0 <line:107:6, col:77> Text=" A memory region that describes system memory that has not been accepted"
|       `-TextComment 0x55887c34b500 <line:108:6, col:71> Text=" by a corresponding call to the underlying isolation architecture."
|-TypedefDecl 0x55887c081c38 <line:38:1, line:112:3> col:3 referenced EFI_MEMORY_TYPE 'enum EFI_MEMORY_TYPE':'EFI_MEMORY_TYPE'
| |-ElaboratedType 0x55887c081be0 'enum EFI_MEMORY_TYPE' sugar
| | `-EnumType 0x55887c080340 'EFI_MEMORY_TYPE'
| |   `-Enum 0x55887c080298 ''
| `-FullComment 0x55887c34b630 <line:36:4, col:51>
|   `-ParagraphComment 0x55887c34b600 <col:4, col:51>
|     `-TextComment 0x55887c34b5d0 <col:4, col:51> Text=" Enumeration of memory types introduced in UEFI."
|-EnumDecl 0x55887c081cf8 <line:117:9, line:145:1> line:117:9
| |-FullComment 0x55887c34b700 <line:115:4, col:31>
| | `-ParagraphComment 0x55887c34b6d0 <col:4, col:31>
| |   `-TextComment 0x55887c34b6a0 <col:4, col:31> Text=" Enumeration of reset types."
| |-EnumConstantDecl 0x55887c081dc0 <line:124:3> col:3 EfiResetCold 'int'
| | `-FullComment 0x55887c34b840 <line:119:6, line:122:44>
| |   `-ParagraphComment 0x55887c34b810 <line:119:6, line:122:44>
| |     |-TextComment 0x55887c34b770 <line:119:6, col:76> Text=" Used to induce a system-wide reset. This sets all circuitry within the"
| |     |-TextComment 0x55887c34b790 <line:120:6, col:80> Text=" system to its initial state.  This type of reset is asynchronous to system"
| |     |-TextComment 0x55887c34b7b0 <line:121:6, col:79> Text=" operation and operates withgout regard to cycle boundaries.  EfiColdReset"
| |     `-TextComment 0x55887c34b7d0 <line:122:6, col:44> Text=" is tantamount to a system power cycle."
| |-EnumConstantDecl 0x55887c081e38 <line:130:3> col:3 EfiResetWarm 'int'
| | `-FullComment 0x55887c34b960 <line:126:6, line:128:74>
| |   `-ParagraphComment 0x55887c34b930 <line:126:6, line:128:74>
| |     |-TextComment 0x55887c34b8b0 <line:126:6, col:82> Text=" Used to induce a system-wide initialization. The processors are set to their"
| |     |-TextComment 0x55887c34b8d0 <line:127:6, col:78> Text=" initial state, and pending cycles are not corrupted.  If the system does"
| |     `-TextComment 0x55887c34b8f0 <line:128:6, col:74> Text=" not support this reset type, then an EfiResetCold must be performed."
| |-EnumConstantDecl 0x55887c081eb8 <line:136:3> col:3 EfiResetShutdown 'int'
| | `-FullComment 0x55887c34ba80 <line:132:6, line:134:65>
| |   `-ParagraphComment 0x55887c34ba50 <line:132:6, line:134:65>
| |     |-TextComment 0x55887c34b9d0 <line:132:6, col:83> Text=" Used to induce an entry into a power state equivalent to the ACPI G2/S5 or G3"
| |     |-TextComment 0x55887c34b9f0 <line:133:6, col:82> Text=" state.  If the system does not support this reset type, then when the system"
| |     `-TextComment 0x55887c34ba10 <line:134:6, col:65> Text=" is rebooted, it should exhibit the EfiResetCold attributes."
| `-EnumConstantDecl 0x55887c081f38 <line:144:3> col:3 EfiResetPlatformSpecific 'int'
|   `-FullComment 0x55887c34bbf0 <line:138:6, line:142:74>
|     `-ParagraphComment 0x55887c34bbc0 <line:138:6, line:142:74>
|       |-TextComment 0x55887c34baf0 <line:138:6, col:83> Text=" Used to induce a system-wide reset. The exact type of the reset is defined by"
|       |-TextComment 0x55887c34bb10 <line:139:6, col:78> Text=" the EFI_GUID that follows the Null-terminated Unicode string passed into"
|       |-TextComment 0x55887c34bb30 <line:140:6, col:81> Text=" ResetData. If the platform does not recognize the EFI_GUID in ResetData the"
|       |-TextComment 0x55887c34bb50 <line:141:6, col:76> Text=" platform must pick a supported reset type to perform. The platform may"
|       `-TextComment 0x55887c34bb70 <line:142:6, col:74> Text=" optionally log the parameters from any non-normal reset that occurs."
|-TypedefDecl 0x55887c081fe8 <line:117:1, line:145:3> col:3 referenced EFI_RESET_TYPE 'enum EFI_RESET_TYPE':'EFI_RESET_TYPE'
| |-ElaboratedType 0x55887c081f90 'enum EFI_RESET_TYPE' sugar
| | `-EnumType 0x55887c081da0 'EFI_RESET_TYPE'
| |   `-Enum 0x55887c081cf8 ''
| `-FullComment 0x55887c34bcc0 <line:115:4, col:31>
|   `-ParagraphComment 0x55887c34bc90 <col:4, col:31>
|     `-TextComment 0x55887c34bc60 <col:4, col:31> Text=" Enumeration of reset types."
|-RecordDecl 0x55887c082080 <line:150:9, line:177:1> line:150:9 struct definition
| |-FullComment 0x55887c34bd90 <line:148:4, col:69>
| | `-ParagraphComment 0x55887c34bd60 <col:4, col:69>
| |   `-TextComment 0x55887c34bd30 <col:4, col:69> Text=" Data structure that precedes all of the standard EFI table types."
| |-FieldDecl 0x55887c082158 <line:156:3, col:13> col:13 Signature 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c34beb0 <line:152:6, line:154:70>
| |   `-ParagraphComment 0x55887c34be80 <line:152:6, line:154:70>
| |     |-TextComment 0x55887c34be00 <line:152:6, col:72> Text=" A 64-bit signature that identifies the type of table that follows."
| |     |-TextComment 0x55887c34be20 <line:153:6, col:69> Text=" Unique signatures have been generated for the EFI System Table,"
| |     `-TextComment 0x55887c34be40 <line:154:6, col:70> Text=" the EFI Boot Services Table, and the EFI Runtime Services Table."
| |-FieldDecl 0x55887c0821e8 <line:163:3, col:13> col:13 Revision 'UINT32':'unsigned int'
| | `-FullComment 0x55887c34bff0 <line:158:6, line:161:74>
| |   `-ParagraphComment 0x55887c34bfc0 <line:158:6, line:161:74>
| |     |-TextComment 0x55887c34bf20 <line:158:6, col:63> Text=" The revision of the EFI Specification to which this table"
| |     |-TextComment 0x55887c34bf40 <line:159:6, col:65> Text=" conforms. The upper 16 bits of this field contain the major"
| |     |-TextComment 0x55887c34bf60 <line:160:6, col:70> Text=" revision value, and the lower 16 bits contain the minor revision"
| |     `-TextComment 0x55887c34bf80 <line:161:6, col:74> Text=" value. The minor revision values are limited to the range of 00..99."
| |-FieldDecl 0x55887c082278 <line:167:3, col:13> col:13 HeaderSize 'UINT32':'unsigned int'
| | `-FullComment 0x55887c34c0c0 <line:165:6, col:77>
| |   `-ParagraphComment 0x55887c34c090 <col:6, col:77>
| |     `-TextComment 0x55887c34c060 <col:6, col:77> Text=" The size, in bytes, of the entire table including the EFI_TABLE_HEADER."
| |-FieldDecl 0x55887c082308 <line:172:3, col:13> col:13 CRC32 'UINT32':'unsigned int'
| | `-FullComment 0x55887c34c1b0 <line:169:6, line:170:81>
| |   `-ParagraphComment 0x55887c34c180 <line:169:6, line:170:81>
| |     |-TextComment 0x55887c34c130 <line:169:6, col:68> Text=" The 32-bit CRC for the entire table. This value is computed by"
| |     `-TextComment 0x55887c34c150 <line:170:6, col:81> Text=" setting this field to 0, and computing the 32-bit CRC for HeaderSize bytes."
| `-FieldDecl 0x55887c082398 <line:176:3, col:13> col:13 Reserved 'UINT32':'unsigned int'
|   `-FullComment 0x55887c34c290 <line:174:6, col:43>
|     `-ParagraphComment 0x55887c34c260 <col:6, col:43>
|       `-TextComment 0x55887c34c230 <col:6, col:43> Text=" Reserved field that must be set to 0."
|-TypedefDecl 0x55887c082448 <line:150:1, line:177:3> col:3 referenced EFI_TABLE_HEADER 'struct EFI_TABLE_HEADER':'EFI_TABLE_HEADER'
| |-ElaboratedType 0x55887c0823f0 'struct EFI_TABLE_HEADER' sugar
| | `-RecordType 0x55887c082100 'EFI_TABLE_HEADER'
| |   `-Record 0x55887c082080 ''
| `-FullComment 0x55887c34c360 <line:148:4, col:69>
|   `-ParagraphComment 0x55887c34c330 <col:4, col:69>
|     `-TextComment 0x55887c34c300 <col:4, col:69> Text=" Data structure that precedes all of the standard EFI table types."
|-RecordDecl 0x55887c0824e0 <line:194:9, line:211:1> line:194:9 struct definition
| |-FullComment 0x55887c34c610 <line:180:4, line:192:69>
| | `-ParagraphComment 0x55887c34c5e0 <line:180:4, line:192:69>
| |   |-TextComment 0x55887c34c3d0 <line:180:4, col:60> Text=" AuthInfo is a WIN_CERTIFICATE using the wCertificateType"
| |   |-TextComment 0x55887c34c3f0 <line:181:4, col:46> Text=" WIN_CERTIFICATE_UEFI_GUID and the CertType"
| |   |-TextComment 0x55887c34c410 <line:182:4, col:65> Text=" EFI_CERT_TYPE_RSA2048_SHA256_GUID. If the attribute specifies"
| |   |-TextComment 0x55887c34c430 <line:183:4, col:67> Text=" authenticated access, then the Data buffer should begin with an"
| |   |-TextComment 0x55887c34c450 <line:184:4, col:68> Text=" authentication descriptor prior to the data payload and DataSize"
| |   |-TextComment 0x55887c34c470 <line:185:4, col:63> Text=" should reflect the the data.and descriptor size. The caller"
| |   |-TextComment 0x55887c34c490 <line:186:4, col:66> Text=" shall digest the Monotonic Count value and the associated data"
| |   |-TextComment 0x55887c34c4b0 <line:187:4, col:67> Text=" for the variable update using the SHA-256 1-way hash algorithm."
| |   |-TextComment 0x55887c34c4d0 <line:188:4, col:67> Text=" The ensuing the 32-byte digest will be signed using the private"
| |   |-TextComment 0x55887c34c4f0 <line:189:4, col:67> Text=" key associated w/ the public/private 2048-bit RSA key-pair. The"
| |   |-TextComment 0x55887c34c510 <line:190:4, col:66> Text=" WIN_CERTIFICATE shall be used to describe the signature of the"
| |   |-TextComment 0x55887c34c530 <line:191:4, col:61> Text=" Variable data *Data. In addition, the signature will also"
| |   `-TextComment 0x55887c34c550 <line:192:4, col:69> Text=" include the MonotonicCount value to guard against replay attacks."
| |-FieldDecl 0x55887c0825b8 <line:201:3, col:13> col:13 MonotonicCount 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c34c750 <line:196:6, line:199:21>
| |   `-ParagraphComment 0x55887c34c720 <line:196:6, line:199:21>
| |     |-TextComment 0x55887c34c680 <line:196:6, col:34> Text=" Included in the signature of"
| |     |-TextComment 0x55887c34c6a0 <line:197:6, col:42> Text=" AuthInfo.Used to ensure freshness/no"
| |     |-TextComment 0x55887c34c6c0 <line:198:6, col:37> Text=" replay. Incremented during each"
| |     `-TextComment 0x55887c34c6e0 <line:199:6, col:21> Text=" "Write" access."
| `-FieldDecl 0x55887c082670 <line:210:3, col:32> col:32 AuthInfo 'WIN_CERTIFICATE_UEFI_GUID':'WIN_CERTIFICATE_UEFI_GUID'
|   `-FullComment 0x55887c34c8e0 <line:203:6, line:208:39>
|     `-ParagraphComment 0x55887c34c8b0 <line:203:6, line:208:39>
|       |-TextComment 0x55887c34c7c0 <line:203:6, col:49> Text=" Provides the authorization for the variable"
|       |-TextComment 0x55887c34c7e0 <line:204:6, col:42> Text=" access. It is a signature across the"
|       |-TextComment 0x55887c34c800 <line:205:6, col:44> Text=" variable data and the  Monotonic Count"
|       |-TextComment 0x55887c34c820 <line:206:6, col:44> Text=" value. Caller uses Private key that is"
|       |-TextComment 0x55887c34c840 <line:207:6, col:48> Text=" associated with a public key that has been"
|       `-TextComment 0x55887c34c860 <line:208:6, col:39> Text=" provisioned via the key exchange."
|-TypedefDecl 0x55887c082968 <line:194:1, line:211:3> col:3 EFI_VARIABLE_AUTHENTICATION 'struct EFI_VARIABLE_AUTHENTICATION':'EFI_VARIABLE_AUTHENTICATION'
| |-ElaboratedType 0x55887c082910 'struct EFI_VARIABLE_AUTHENTICATION' sugar
| | `-RecordType 0x55887c082560 'EFI_VARIABLE_AUTHENTICATION'
| |   `-Record 0x55887c0824e0 ''
| `-FullComment 0x55887c34cb90 <line:180:4, line:192:69>
|   `-ParagraphComment 0x55887c34cb60 <line:180:4, line:192:69>
|     |-TextComment 0x55887c34c950 <line:180:4, col:60> Text=" AuthInfo is a WIN_CERTIFICATE using the wCertificateType"
|     |-TextComment 0x55887c34c970 <line:181:4, col:46> Text=" WIN_CERTIFICATE_UEFI_GUID and the CertType"
|     |-TextComment 0x55887c34c990 <line:182:4, col:65> Text=" EFI_CERT_TYPE_RSA2048_SHA256_GUID. If the attribute specifies"
|     |-TextComment 0x55887c34c9b0 <line:183:4, col:67> Text=" authenticated access, then the Data buffer should begin with an"
|     |-TextComment 0x55887c34c9d0 <line:184:4, col:68> Text=" authentication descriptor prior to the data payload and DataSize"
|     |-TextComment 0x55887c34c9f0 <line:185:4, col:63> Text=" should reflect the the data.and descriptor size. The caller"
|     |-TextComment 0x55887c34ca10 <line:186:4, col:66> Text=" shall digest the Monotonic Count value and the associated data"
|     |-TextComment 0x55887c34ca30 <line:187:4, col:67> Text=" for the variable update using the SHA-256 1-way hash algorithm."
|     |-TextComment 0x55887c34ca50 <line:188:4, col:67> Text=" The ensuing the 32-byte digest will be signed using the private"
|     |-TextComment 0x55887c34ca70 <line:189:4, col:67> Text=" key associated w/ the public/private 2048-bit RSA key-pair. The"
|     |-TextComment 0x55887c34ca90 <line:190:4, col:66> Text=" WIN_CERTIFICATE shall be used to describe the signature of the"
|     |-TextComment 0x55887c34cab0 <line:191:4, col:61> Text=" Variable data *Data. In addition, the signature will also"
|     `-TextComment 0x55887c34cad0 <line:192:4, col:69> Text=" include the MonotonicCount value to guard against replay attacks."
|-RecordDecl 0x55887c082a00 <line:221:9, line:231:1> line:221:9 struct definition
| |-FullComment 0x55887c34cd20 <line:214:4, line:219:50>
| | `-ParagraphComment 0x55887c34ccf0 <line:214:4, line:219:50>
| |   |-TextComment 0x55887c34cc00 <line:214:4, col:76> Text=" When the attribute EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS is"
| |   |-TextComment 0x55887c34cc20 <line:215:4, col:89> Text=" set, then the Data buffer shall begin with an instance of a complete (and serialized)"
| |   |-TextComment 0x55887c34cc40 <line:216:4, col:89> Text=" EFI_VARIABLE_AUTHENTICATION_2 descriptor. The descriptor shall be followed by the new"
| |   |-TextComment 0x55887c34cc60 <line:217:4, col:93> Text=" variable value and DataSize shall reflect the combined size of the descriptor and the new"
| |   |-TextComment 0x55887c34cc80 <line:218:4, col:93> Text=" variable value. The authentication descriptor is not part of the variable data and is not"
| |   `-TextComment 0x55887c34cca0 <line:219:4, col:50> Text=" returned by subsequent calls to GetVariable()."
| |-FieldDecl 0x55887c082b00 <line:226:3, col:32> col:32 TimeStamp 'EFI_TIME':'EFI_TIME'
| | `-FullComment 0x55887c34ce10 <line:223:6, line:224:88>
| |   `-ParagraphComment 0x55887c34cde0 <line:223:6, line:224:88>
| |     |-TextComment 0x55887c34cd90 <line:223:6, col:82> Text=" For the TimeStamp value, components Pad1, Nanosecond, TimeZone, Daylight and"
| |     `-TextComment 0x55887c34cdb0 <line:224:6, col:88> Text=" Pad2 shall be set to 0. This means that the time shall always be expressed in GMT."
| `-FieldDecl 0x55887c082b88 <line:230:3, col:32> col:32 AuthInfo 'WIN_CERTIFICATE_UEFI_GUID':'WIN_CERTIFICATE_UEFI_GUID'
|   `-FullComment 0x55887c34cee0 <line:228:6, col:63>
|     `-ParagraphComment 0x55887c34ceb0 <col:6, col:63>
|       `-TextComment 0x55887c34ce80 <col:6, col:63> Text=" Only a CertType of  EFI_CERT_TYPE_PKCS7_GUID is accepted."
|-TypedefDecl 0x55887c082cd8 <line:221:1, line:231:3> col:3 EFI_VARIABLE_AUTHENTICATION_2 'struct EFI_VARIABLE_AUTHENTICATION_2':'EFI_VARIABLE_AUTHENTICATION_2'
| |-ElaboratedType 0x55887c082c80 'struct EFI_VARIABLE_AUTHENTICATION_2' sugar
| | `-RecordType 0x55887c082a80 'EFI_VARIABLE_AUTHENTICATION_2'
| |   `-Record 0x55887c082a00 ''
| `-FullComment 0x55887c34d070 <line:214:4, line:219:50>
|   `-ParagraphComment 0x55887c34d040 <line:214:4, line:219:50>
|     |-TextComment 0x55887c34cf50 <line:214:4, col:76> Text=" When the attribute EFI_VARIABLE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS is"
|     |-TextComment 0x55887c34cf70 <line:215:4, col:89> Text=" set, then the Data buffer shall begin with an instance of a complete (and serialized)"
|     |-TextComment 0x55887c34cf90 <line:216:4, col:89> Text=" EFI_VARIABLE_AUTHENTICATION_2 descriptor. The descriptor shall be followed by the new"
|     |-TextComment 0x55887c34cfb0 <line:217:4, col:93> Text=" variable value and DataSize shall reflect the combined size of the descriptor and the new"
|     |-TextComment 0x55887c34cfd0 <line:218:4, col:93> Text=" variable value. The authentication descriptor is not part of the variable data and is not"
|     `-TextComment 0x55887c34cff0 <line:219:4, col:50> Text=" returned by subsequent calls to GetVariable()."
|-TypedefDecl 0x55887c082de0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareVolume.h:18:1, col:16> col:16 referenced EFI_FV_FILE_ATTRIBUTES 'UINT32':'unsigned int'
| |-TypedefType 0x55887c04a5d0 'UINT32' sugar
| | |-Typedef 0x55887c049a70 'UINT32'
| | `-BuiltinType 0x55887bfe9150 'unsigned int'
| `-FullComment 0x55887c34d140 <line:16:4, col:26>
|   `-ParagraphComment 0x55887c34d110 <col:4, col:26>
|     `-TextComment 0x55887c34d0e0 <col:4, col:26> Text=" EFI_FV_FILE_ATTRIBUTES"
|-TypedefDecl 0x55887c082e78 <line:30:1, col:16> col:16 referenced EFI_FVB_ATTRIBUTES_2 'UINT32':'unsigned int'
| |-TypedefType 0x55887c04a5d0 'UINT32' sugar
| | |-Typedef 0x55887c049a70 'UINT32'
| | `-BuiltinType 0x55887bfe9150 'unsigned int'
| `-FullComment 0x55887c34d210 <line:28:4, col:29>
|   `-ParagraphComment 0x55887c34d1e0 <col:4, col:29>
|     `-TextComment 0x55887c34d1b0 <col:4, col:29> Text=" type of EFI FVB attribute"
|-RecordDecl 0x55887c082ed0 <line:85:9, line:94:1> line:85:9 struct definition
| |-FieldDecl 0x55887c082fa8 <line:89:3, col:13> col:13 NumBlocks 'UINT32':'unsigned int'
| | `-FullComment 0x55887c34d2e0 <line:87:6, col:65>
| |   `-ParagraphComment 0x55887c34d2b0 <col:6, col:65>
| |     `-TextComment 0x55887c34d280 <col:6, col:65> Text=" The number of sequential blocks which are of the same size."
| `-FieldDecl 0x55887c083038 <line:93:3, col:13> col:13 Length 'UINT32':'unsigned int'
|   `-FullComment 0x55887c34d3b0 <line:91:6, col:29>
|     `-ParagraphComment 0x55887c34d380 <col:6, col:29>
|       `-TextComment 0x55887c34d350 <col:6, col:29> Text=" The size of the blocks."
|-TypedefDecl 0x55887c0830e8 <line:85:1, line:94:3> col:3 referenced EFI_FV_BLOCK_MAP_ENTRY 'struct EFI_FV_BLOCK_MAP_ENTRY':'EFI_FV_BLOCK_MAP_ENTRY'
| `-ElaboratedType 0x55887c083090 'struct EFI_FV_BLOCK_MAP_ENTRY' sugar
|   `-RecordType 0x55887c082f50 'EFI_FV_BLOCK_MAP_ENTRY'
|     `-Record 0x55887c082ed0 ''
|-RecordDecl 0x55887c083180 <line:99:9, line:148:1> line:99:9 struct definition
| |-FullComment 0x55887c34d480 <line:97:4, col:61>
| | `-ParagraphComment 0x55887c34d450 <col:4, col:61>
| |   `-TextComment 0x55887c34d420 <col:4, col:61> Text=" Describes the features and layout of the firmware volume."
| |-FieldDecl 0x55887c0832a8 <line:104:3, col:42> col:29 ZeroVector 'UINT8[16]'
| | `-FullComment 0x55887c34d570 <line:101:6, line:102:52>
| |   `-ParagraphComment 0x55887c34d540 <line:101:6, line:102:52>
| |     |-TextComment 0x55887c34d4f0 <line:101:6, col:70> Text=" The first 16 bytes are reserved to allow for the reset vector of"
| |     `-TextComment 0x55887c34d510 <line:102:6, col:52> Text=" processors whose reset vector is at address 0."
| |-FieldDecl 0x55887c083338 <line:108:3, col:29> col:29 FileSystemGuid 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c34d640 <line:106:6, col:75>
| |   `-ParagraphComment 0x55887c34d610 <col:6, col:75>
| |     `-TextComment 0x55887c34d5e0 <col:6, col:75> Text=" Declares the file system with which the firmware volume is formatted."
| |-FieldDecl 0x55887c0833c8 <line:112:3, col:29> col:29 FvLength 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c34d710 <line:110:6, col:76>
| |   `-ParagraphComment 0x55887c34d6e0 <col:6, col:76>
| |     `-TextComment 0x55887c34d6b0 <col:6, col:76> Text=" Length in bytes of the complete firmware volume, including the header."
| |-FieldDecl 0x55887c083458 <line:116:3, col:29> col:29 Signature 'UINT32':'unsigned int'
| | `-FullComment 0x55887c34d7e0 <line:114:6, col:30>
| |   `-ParagraphComment 0x55887c34d7b0 <col:6, col:30>
| |     `-TextComment 0x55887c34d780 <col:6, col:30> Text=" Set to EFI_FVH_SIGNATURE"
| |-FieldDecl 0x55887c083510 <line:120:3, col:29> col:29 Attributes 'EFI_FVB_ATTRIBUTES_2':'unsigned int'
| | `-FullComment 0x55887c34d8b0 <line:118:6, col:74>
| |   `-ParagraphComment 0x55887c34d880 <col:6, col:74>
| |     `-TextComment 0x55887c34d850 <col:6, col:74> Text=" Declares capabilities and power-on defaults for the firmware volume."
| |-FieldDecl 0x55887c083598 <line:124:3, col:29> col:29 HeaderLength 'UINT16':'unsigned short'
| | `-FullComment 0x55887c34d980 <line:122:6, col:61>
| |   `-ParagraphComment 0x55887c34d950 <col:6, col:61>
| |     `-TextComment 0x55887c34d920 <col:6, col:61> Text=" Length in bytes of the complete firmware volume header."
| |-FieldDecl 0x55887c083628 <line:128:3, col:29> col:29 Checksum 'UINT16':'unsigned short'
| | `-FullComment 0x55887c34da50 <line:126:6, col:83>
| |   `-ParagraphComment 0x55887c34da20 <col:6, col:83>
| |     `-TextComment 0x55887c34d9f0 <col:6, col:83> Text=" A 16-bit checksum of the firmware volume header. A valid header sums to zero."
| |-FieldDecl 0x55887c0836b8 <line:133:3, col:29> col:29 ExtHeaderOffset 'UINT16':'unsigned short'
| | `-FullComment 0x55887c34db40 <line:130:6, line:131:78>
| |   `-ParagraphComment 0x55887c34db10 <line:130:6, line:131:78>
| |     |-TextComment 0x55887c34dac0 <line:130:6, col:73> Text=" Offset, relative to the start of the header, of the extended header"
| |     `-TextComment 0x55887c34dae0 <line:131:6, col:78> Text=" (EFI_FIRMWARE_VOLUME_EXT_HEADER) or zero if there is no extended header."
| |-FieldDecl 0x55887c083798 <line:137:3, col:39> col:29 Reserved 'UINT8[1]'
| | `-FullComment 0x55887c34dc10 <line:135:6, col:44>
| |   `-ParagraphComment 0x55887c34dbe0 <col:6, col:44>
| |     `-TextComment 0x55887c34dbb0 <col:6, col:44> Text=" This field must always be set to zero."
| |-FieldDecl 0x55887c083828 <line:142:3, col:29> col:29 Revision 'UINT8':'unsigned char'
| | `-FullComment 0x55887c34dd00 <line:139:6, line:140:47>
| |   `-ParagraphComment 0x55887c34dcd0 <line:139:6, line:140:47>
| |     |-TextComment 0x55887c34dc80 <line:139:6, col:91> Text=" Set to 2. Future versions of this specification may define new header fields and will"
| |     `-TextComment 0x55887c34dca0 <line:140:6, col:47> Text=" increment the Revision field accordingly."
| `-FieldDecl 0x55887c089b18 <line:147:3, col:39> col:29 BlockMap 'EFI_FV_BLOCK_MAP_ENTRY[1]'
|   `-FullComment 0x55887c34ddf0 <line:144:6, line:145:40>
|     `-ParagraphComment 0x55887c34ddc0 <line:144:6, line:145:40>
|       |-TextComment 0x55887c34dd70 <line:144:6, col:77> Text=" An array of run-length encoded FvBlockMapEntry structures. The array is"
|       `-TextComment 0x55887c34dd90 <line:145:6, col:40> Text=" terminated with an entry of {0,0}."
|-TypedefDecl 0x55887c089bc8 <line:99:1, line:148:3> col:3 EFI_FIRMWARE_VOLUME_HEADER 'struct EFI_FIRMWARE_VOLUME_HEADER':'EFI_FIRMWARE_VOLUME_HEADER'
| |-ElaboratedType 0x55887c089b70 'struct EFI_FIRMWARE_VOLUME_HEADER' sugar
| | `-RecordType 0x55887c083200 'EFI_FIRMWARE_VOLUME_HEADER'
| |   `-Record 0x55887c083180 ''
| `-FullComment 0x55887c34dec0 <line:97:4, col:61>
|   `-ParagraphComment 0x55887c34de90 <col:4, col:61>
|     `-TextComment 0x55887c34de60 <col:4, col:61> Text=" Describes the features and layout of the firmware volume."
|-RecordDecl 0x55887c089c90 <line:160:9, line:169:1> line:160:9 struct definition
| |-FullComment 0x55887c34df90 <line:158:4, col:65>
| | `-ParagraphComment 0x55887c34df60 <col:4, col:65>
| |   `-TextComment 0x55887c34df30 <col:4, col:65> Text=" Extension header pointed by ExtHeaderOffset of volume header."
| |-FieldDecl 0x55887c089d68 <line:164:3, col:15> col:15 FvName 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c34e060 <line:162:6, col:27>
| |   `-ParagraphComment 0x55887c34e030 <col:6, col:27>
| |     `-TextComment 0x55887c34e000 <col:6, col:27> Text=" Firmware volume name."
| `-FieldDecl 0x55887c089df8 <line:168:3, col:15> col:15 ExtHeaderSize 'UINT32':'unsigned int'
|   `-FullComment 0x55887c34e130 <line:166:6, col:73>
|     `-ParagraphComment 0x55887c34e100 <col:6, col:73>
|       `-TextComment 0x55887c34e0d0 <col:6, col:73> Text=" Size of the rest of the extension header, including this structure."
|-TypedefDecl 0x55887c089ea8 <line:160:1, line:169:3> col:3 EFI_FIRMWARE_VOLUME_EXT_HEADER 'struct EFI_FIRMWARE_VOLUME_EXT_HEADER':'EFI_FIRMWARE_VOLUME_EXT_HEADER'
| |-ElaboratedType 0x55887c089e50 'struct EFI_FIRMWARE_VOLUME_EXT_HEADER' sugar
| | `-RecordType 0x55887c089d10 'EFI_FIRMWARE_VOLUME_EXT_HEADER'
| |   `-Record 0x55887c089c90 ''
| `-FullComment 0x55887c34f220 <line:158:4, col:65>
|   `-ParagraphComment 0x55887c34e1d0 <col:4, col:65>
|     `-TextComment 0x55887c34e1a0 <col:4, col:65> Text=" Extension header pointed by ExtHeaderOffset of volume header."
|-RecordDecl 0x55887c089f40 <line:174:9, line:183:1> line:174:9 struct definition
| |-FullComment 0x55887c34f2f0 <line:172:4, col:53>
| | `-ParagraphComment 0x55887c34f2c0 <col:4, col:53>
| |   `-TextComment 0x55887c34f290 <col:4, col:53> Text=" Entry struture for describing FV extension header"
| |-FieldDecl 0x55887c08a018 <line:178:3, col:13> col:13 ExtEntrySize 'UINT16':'unsigned short'
| | `-FullComment 0x55887c34f3c0 <line:176:6, col:36>
| |   `-ParagraphComment 0x55887c34f390 <col:6, col:36>
| |     `-TextComment 0x55887c34f360 <col:6, col:36> Text=" Size of this header extension."
| `-FieldDecl 0x55887c08a0a8 <line:182:3, col:13> col:13 ExtEntryType 'UINT16':'unsigned short'
|   `-FullComment 0x55887c34f490 <line:180:6, col:25>
|     `-ParagraphComment 0x55887c34f460 <col:6, col:25>
|       `-TextComment 0x55887c34f430 <col:6, col:25> Text=" Type of the header."
|-TypedefDecl 0x55887c08a158 <line:174:1, line:183:3> col:3 referenced EFI_FIRMWARE_VOLUME_EXT_ENTRY 'struct EFI_FIRMWARE_VOLUME_EXT_ENTRY':'EFI_FIRMWARE_VOLUME_EXT_ENTRY'
| |-ElaboratedType 0x55887c08a100 'struct EFI_FIRMWARE_VOLUME_EXT_ENTRY' sugar
| | `-RecordType 0x55887c089fc0 'EFI_FIRMWARE_VOLUME_EXT_ENTRY'
| |   `-Record 0x55887c089f40 ''
| `-FullComment 0x55887c34f560 <line:172:4, col:53>
|   `-ParagraphComment 0x55887c34f530 <col:4, col:53>
|     `-TextComment 0x55887c34f500 <col:4, col:53> Text=" Entry struture for describing FV extension header"
|-RecordDecl 0x55887c08a1f0 <line:189:9, line:204:1> line:189:9 struct definition
| |-FullComment 0x55887c34f630 <line:187:4, col:81>
| | `-ParagraphComment 0x55887c34f600 <col:4, col:81>
| |   `-TextComment 0x55887c34f5d0 <col:4, col:81> Text=" This extension header provides a mapping between a GUID and an OEM file type."
| |-FieldDecl 0x55887c08a2f0 <line:193:3, col:36> col:36 Hdr 'EFI_FIRMWARE_VOLUME_EXT_ENTRY':'EFI_FIRMWARE_VOLUME_EXT_ENTRY'
| | `-FullComment 0x55887c34f700 <line:191:6, col:71>
| |   `-ParagraphComment 0x55887c34f6d0 <col:6, col:71>
| |     `-TextComment 0x55887c34f6a0 <col:6, col:71> Text=" Standard extension entry, with the type EFI_FV_EXT_TYPE_OEM_TYPE."
| `-FieldDecl 0x55887c08a378 <line:198:3, col:36> col:36 TypeMask 'UINT32':'unsigned int'
|   `-FullComment 0x55887c34f7f0 <line:195:6, line:196:102>
|     `-ParagraphComment 0x55887c34f7c0 <line:195:6, line:196:102>
|       |-TextComment 0x55887c34f770 <line:195:6, col:93> Text=" A bit mask, one bit for each file type between 0xC0 (bit 0) and 0xDF (bit 31). If a bit"
|       `-TextComment 0x55887c34f790 <line:196:6, col:102> Text=" is '1', then the GUID entry exists in Types. If a bit is '0' then no GUID entry exists in Types."
|-TypedefDecl 0x55887c08a4b8 <line:189:1, line:204:3> col:3 EFI_FIRMWARE_VOLUME_EXT_ENTRY_OEM_TYPE 'struct EFI_FIRMWARE_VOLUME_EXT_ENTRY_OEM_TYPE':'EFI_FIRMWARE_VOLUME_EXT_ENTRY_OEM_TYPE'
| |-ElaboratedType 0x55887c08a460 'struct EFI_FIRMWARE_VOLUME_EXT_ENTRY_OEM_TYPE' sugar
| | `-RecordType 0x55887c08a270 'EFI_FIRMWARE_VOLUME_EXT_ENTRY_OEM_TYPE'
| |   `-Record 0x55887c08a1f0 ''
| `-FullComment 0x55887c34f8c0 <line:187:4, col:81>
|   `-ParagraphComment 0x55887c34f890 <col:4, col:81>
|     `-TextComment 0x55887c34f860 <col:4, col:81> Text=" This extension header provides a mapping between a GUID and an OEM file type."
|-RecordDecl 0x55887c08a550 <line:212:9, line:226:1> line:212:9 struct definition
| |-FullComment 0x55887c34f9b0 <line:209:4, line:210:87>
| | `-ParagraphComment 0x55887c34f980 <line:209:4, line:210:87>
| |   |-TextComment 0x55887c34f930 <line:209:4, col:92> Text=" This extension header EFI_FIRMWARE_VOLUME_EXT_ENTRY_GUID_TYPE provides a vendor specific"
| |   `-TextComment 0x55887c34f950 <line:210:4, col:87> Text=" GUID FormatType type which includes a length and a successive series of data bytes."
| |-FieldDecl 0x55887c08a628 <line:216:3, col:36> col:36 Hdr 'EFI_FIRMWARE_VOLUME_EXT_ENTRY':'EFI_FIRMWARE_VOLUME_EXT_ENTRY'
| | `-FullComment 0x55887c34fa80 <line:214:6, col:71>
| |   `-ParagraphComment 0x55887c34fa50 <col:6, col:71>
| |     `-TextComment 0x55887c34fa20 <col:6, col:71> Text=" Standard extension entry, with the type EFI_FV_EXT_TYPE_OEM_TYPE."
| `-FieldDecl 0x55887c08a6b8 <line:220:3, col:36> col:36 FormatType 'EFI_GUID':'GUID'
|   `-FullComment 0x55887c34fb50 <line:218:6, col:27>
|     `-ParagraphComment 0x55887c34fb20 <col:6, col:27>
|       `-TextComment 0x55887c34faf0 <col:6, col:27> Text=" Vendor-specific GUID."
|-TypedefDecl 0x55887c08a798 <line:212:1, line:226:3> col:3 EFI_FIRMWARE_VOLUME_EXT_ENTRY_GUID_TYPE 'struct EFI_FIRMWARE_VOLUME_EXT_ENTRY_GUID_TYPE':'EFI_FIRMWARE_VOLUME_EXT_ENTRY_GUID_TYPE'
| |-ElaboratedType 0x55887c08a740 'struct EFI_FIRMWARE_VOLUME_EXT_ENTRY_GUID_TYPE' sugar
| | `-RecordType 0x55887c08a5d0 'EFI_FIRMWARE_VOLUME_EXT_ENTRY_GUID_TYPE'
| |   `-Record 0x55887c08a550 ''
| `-FullComment 0x55887c34fc40 <line:209:4, line:210:87>
|   `-ParagraphComment 0x55887c34fc10 <line:209:4, line:210:87>
|     |-TextComment 0x55887c34fbc0 <line:209:4, col:92> Text=" This extension header EFI_FIRMWARE_VOLUME_EXT_ENTRY_GUID_TYPE provides a vendor specific"
|     `-TextComment 0x55887c34fbe0 <line:210:4, col:87> Text=" GUID FormatType type which includes a length and a successive series of data bytes."
|-RecordDecl 0x55887c08a830 <line:234:9, line:245:1> line:234:9 struct definition
| |-FullComment 0x55887c34fd30 <line:231:4, line:232:72>
| | `-ParagraphComment 0x55887c34fd00 <line:231:4, line:232:72>
| |   |-TextComment 0x55887c34fcb0 <line:231:4, col:72> Text=" The EFI_FIRMWARE_VOLUME_EXT_ENTRY_USED_SIZE_TYPE can be used to find"
| |   `-TextComment 0x55887c34fcd0 <line:232:4, col:72> Text=" out how many EFI_FVB2_ERASE_POLARITY bytes are at the end of the FV."
| |-FieldDecl 0x55887c08a908 <line:238:3, col:36> col:36 Hdr 'EFI_FIRMWARE_VOLUME_EXT_ENTRY':'EFI_FIRMWARE_VOLUME_EXT_ENTRY'
| | `-FullComment 0x55887c34fe00 <line:236:6, col:77>
| |   `-ParagraphComment 0x55887c34fdd0 <col:6, col:77>
| |     `-TextComment 0x55887c34fda0 <col:6, col:77> Text=" Standard extension entry, with the type EFI_FV_EXT_TYPE_USED_SIZE_TYPE."
| `-FieldDecl 0x55887c08a998 <line:244:3, col:36> col:36 UsedSize 'UINT32':'unsigned int'
|   `-FullComment 0x55887c34ff20 <line:240:6, line:242:71>
|     `-ParagraphComment 0x55887c34fef0 <line:240:6, line:242:71>
|       |-TextComment 0x55887c34fe70 <line:240:6, col:67> Text=" The number of bytes of the FV that are in uses. The remaining"
|       |-TextComment 0x55887c34fe90 <line:241:6, col:65> Text=" EFI_FIRMWARE_VOLUME_HEADER FvLength minus UsedSize bytes in"
|       `-TextComment 0x55887c34feb0 <line:242:6, col:71> Text=" the FV must contain the value implied by EFI_FVB2_ERASE_POLARITY."
|-TypedefDecl 0x55887c08b698 <line:234:1, line:245:3> col:3 EFI_FIRMWARE_VOLUME_EXT_ENTRY_USED_SIZE_TYPE 'struct EFI_FIRMWARE_VOLUME_EXT_ENTRY_USED_SIZE_TYPE':'EFI_FIRMWARE_VOLUME_EXT_ENTRY_USED_SIZE_TYPE'
| |-ElaboratedType 0x55887c08b640 'struct EFI_FIRMWARE_VOLUME_EXT_ENTRY_USED_SIZE_TYPE' sugar
| | `-RecordType 0x55887c08a8b0 'EFI_FIRMWARE_VOLUME_EXT_ENTRY_USED_SIZE_TYPE'
| |   `-Record 0x55887c08a830 ''
| `-FullComment 0x55887c350010 <line:231:4, line:232:72>
|   `-ParagraphComment 0x55887c34ffe0 <line:231:4, line:232:72>
|     |-TextComment 0x55887c34ff90 <line:231:4, col:72> Text=" The EFI_FIRMWARE_VOLUME_EXT_ENTRY_USED_SIZE_TYPE can be used to find"
|     `-TextComment 0x55887c34ffb0 <line:232:4, col:72> Text=" out how many EFI_FVB2_ERASE_POLARITY bytes are at the end of the FV."
|-RecordDecl 0x55887c08b778 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:19:9, line:42:1> line:19:9 union definition
| |-MaxFieldAlignmentAttr 0x55887c08b820 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c3500e0 <line:17:4, col:45>
| | `-ParagraphComment 0x55887c3500b0 <col:4, col:45>
| |   `-TextComment 0x55887c350080 <col:4, col:45> Text=" Used to verify the integrity of the file."
| |-RecordDecl 0x55887c08b878 <line:20:3, line:37:3> line:20:3 struct definition
| | |-MaxFieldAlignmentAttr 0x55887c08b920 <<invalid sloc>> Implicit 8
| | |-FieldDecl 0x55887c08b9b8 <line:26:5, col:14> col:14 Header 'UINT8':'unsigned char'
| | | `-FullComment 0x55887c350200 <line:22:8, line:24:91>
| | |   `-ParagraphComment 0x55887c3501d0 <line:22:8, line:24:91>
| | |     |-TextComment 0x55887c350150 <line:22:8, col:81> Text=" The IntegrityCheck.Checksum.Header field is an 8-bit checksum of the file"
| | |     |-TextComment 0x55887c350170 <line:23:8, col:77> Text=" header. The State and IntegrityCheck.Checksum.File fields are assumed"
| | |     `-TextComment 0x55887c350190 <line:24:8, col:91> Text=" to be zero and the checksum is calculated such that the entire header sums to zero."
| | `-FieldDecl 0x55887c08ba48 <line:36:5, col:14> col:14 File 'UINT8':'unsigned char'
| |   `-FullComment 0x55887c3503c0 <line:28:8, line:34:58>
| |     `-ParagraphComment 0x55887c350390 <line:28:8, line:34:58>
| |       |-TextComment 0x55887c350270 <line:28:8, col:79> Text=" If the FFS_ATTRIB_CHECKSUM (see definition below) bit of the Attributes"
| |       |-TextComment 0x55887c350290 <line:29:8, col:79> Text=" field is set to one, the IntegrityCheck.Checksum.File field is an 8-bit"
| |       |-TextComment 0x55887c3502b0 <line:30:8, col:34> Text=" checksum of the file data."
| |       |-TextComment 0x55887c3502d0 <line:31:8, col:82> Text=" If the FFS_ATTRIB_CHECKSUM bit of the Attributes field is cleared to zero,"
| |       |-TextComment 0x55887c3502f0 <line:32:8, col:82> Text=" the IntegrityCheck.Checksum.File field must be initialized with a value of"
| |       |-TextComment 0x55887c350310 <line:33:8, col:74> Text=" 0xAA. The IntegrityCheck.Checksum.File field is valid any time the"
| |       `-TextComment 0x55887c350330 <line:34:8, col:58> Text=" EFI_FILE_DATA_VALID bit is set in the State field."
| |-FieldDecl 0x55887c08baf8 <line:20:3, line:37:5> col:5 Checksum 'struct (unnamed struct at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:20:3)':'struct EFI_FFS_INTEGRITY_CHECK::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:20:3)'
| `-FieldDecl 0x55887c08bb88 <line:41:3, col:13> col:13 Checksum16 'UINT16':'unsigned short'
|   `-FullComment 0x55887c350490 <line:39:6, col:59>
|     `-ParagraphComment 0x55887c350460 <col:6, col:59>
|       `-TextComment 0x55887c350430 <col:6, col:59> Text=" This is the full 16 bits of the IntegrityCheck field."
|-TypedefDecl 0x55887c08bc98 <line:19:1, line:42:3> col:3 referenced EFI_FFS_INTEGRITY_CHECK 'union EFI_FFS_INTEGRITY_CHECK':'EFI_FFS_INTEGRITY_CHECK'
| |-ElaboratedType 0x55887c08bc40 'union EFI_FFS_INTEGRITY_CHECK' sugar
| | `-RecordType 0x55887c08b800 'EFI_FFS_INTEGRITY_CHECK'
| |   `-Record 0x55887c08b778 ''
| `-FullComment 0x55887c350560 <line:17:4, col:45>
|   `-ParagraphComment 0x55887c350530 <col:4, col:45>
|     `-TextComment 0x55887c350500 <col:4, col:45> Text=" Used to verify the integrity of the file."
|-TypedefDecl 0x55887c08bd40 <line:50:1, col:16> col:16 referenced EFI_FV_FILETYPE 'UINT8':'unsigned char'
| `-TypedefType 0x55887c04a730 'UINT8' sugar
|   |-Typedef 0x55887c049e30 'UINT8'
|   `-BuiltinType 0x55887bfe9110 'unsigned char'
|-TypedefDecl 0x55887c08bda8 <line:51:1, col:16> col:16 referenced EFI_FFS_FILE_ATTRIBUTES 'UINT8':'unsigned char'
| `-TypedefType 0x55887c04a730 'UINT8' sugar
|   |-Typedef 0x55887c049e30 'UINT8'
|   `-BuiltinType 0x55887bfe9110 'unsigned char'
|-TypedefDecl 0x55887c08be10 <line:52:1, col:16> col:16 referenced EFI_FFS_FILE_STATE 'UINT8':'unsigned char'
| `-TypedefType 0x55887c04a730 'UINT8' sugar
|   |-Typedef 0x55887c049e30 'UINT8'
|   `-BuiltinType 0x55887bfe9110 'unsigned char'
|-RecordDecl 0x55887c08bf28 <line:106:9, line:131:1> line:106:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c08bfd0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c350650 <line:103:4, line:104:36>
| | `-ParagraphComment 0x55887c350620 <line:103:4, line:104:36>
| |   |-TextComment 0x55887c3505d0 <line:103:4, col:54> Text=" Each file begins with the header that describe the"
| |   `-TextComment 0x55887c3505f0 <line:104:4, col:36> Text=" contents and state of the files."
| |-FieldDecl 0x55887c08c068 <line:110:3, col:30> col:30 Name 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c350720 <line:108:6, col:75>
| |   `-ParagraphComment 0x55887c3506f0 <col:6, col:75>
| |     `-TextComment 0x55887c3506c0 <col:6, col:75> Text=" This GUID is the file name. It is used to uniquely identify the file."
| |-FieldDecl 0x55887c08c120 <line:114:3, col:30> col:30 IntegrityCheck 'EFI_FFS_INTEGRITY_CHECK':'EFI_FFS_INTEGRITY_CHECK'
| | `-FullComment 0x55887c3507f0 <line:112:6, col:47>
| |   `-ParagraphComment 0x55887c3507c0 <col:6, col:47>
| |     `-TextComment 0x55887c350790 <col:6, col:47> Text=" Used to verify the integrity of the file."
| |-FieldDecl 0x55887c08c1d0 <line:118:3, col:30> col:30 Type 'EFI_FV_FILETYPE':'unsigned char'
| | `-FullComment 0x55887c3508c0 <line:116:6, col:34>
| |   `-ParagraphComment 0x55887c350890 <col:6, col:34>
| |     `-TextComment 0x55887c350860 <col:6, col:34> Text=" Identifies the type of file."
| |-FieldDecl 0x55887c08c280 <line:122:3, col:30> col:30 Attributes 'EFI_FFS_FILE_ATTRIBUTES':'unsigned char'
| | `-FullComment 0x55887c350990 <line:120:6, col:43>
| |   `-ParagraphComment 0x55887c350960 <col:6, col:43>
| |     `-TextComment 0x55887c350930 <col:6, col:43> Text=" Declares various file attribute bits."
| |-FieldDecl 0x55887c08c3d8 <line:126:3, col:36> col:30 Size 'UINT8[3]'
| | `-FullComment 0x55887c350a60 <line:124:6, col:64>
| |   `-ParagraphComment 0x55887c350a30 <col:6, col:64>
| |     `-TextComment 0x55887c350a00 <col:6, col:64> Text=" The length of the file in bytes, including the FFS header."
| `-FieldDecl 0x55887c08c490 <line:130:3, col:30> col:30 State 'EFI_FFS_FILE_STATE':'unsigned char'
|   `-FullComment 0x55887c350b30 <line:128:6, col:100>
|     `-ParagraphComment 0x55887c350b00 <col:6, col:100>
|       `-TextComment 0x55887c350ad0 <col:6, col:100> Text=" Used to track the state of the file throughout the life of the file from creation to deletion."
|-TypedefDecl 0x55887c08c538 <line:106:1, line:131:3> col:3 EFI_FFS_FILE_HEADER 'struct EFI_FFS_FILE_HEADER':'EFI_FFS_FILE_HEADER'
| |-ElaboratedType 0x55887c08c4e0 'struct EFI_FFS_FILE_HEADER' sugar
| | `-RecordType 0x55887c08bfb0 'EFI_FFS_FILE_HEADER'
| |   `-Record 0x55887c08bf28 ''
| `-FullComment 0x55887c350c20 <line:103:4, line:104:36>
|   `-ParagraphComment 0x55887c350bf0 <line:103:4, line:104:36>
|     |-TextComment 0x55887c350ba0 <line:103:4, col:54> Text=" Each file begins with the header that describe the"
|     `-TextComment 0x55887c350bc0 <line:104:4, col:36> Text=" contents and state of the files."
|-RecordDecl 0x55887c08c5a8 <line:133:9, line:175:1> line:133:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c08fbc0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c08fc58 <line:139:3, col:30> col:30 Name 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c350d40 <line:135:6, line:137:65>
| |   `-ParagraphComment 0x55887c350d10 <line:135:6, line:137:65>
| |     |-TextComment 0x55887c350c90 <line:135:6, col:93> Text=" This GUID is the file name. It is used to uniquely identify the file. There may be only"
| |     |-TextComment 0x55887c350cb0 <line:136:6, col:82> Text=" one instance of a file with the file name GUID of Name in any given firmware"
| |     `-TextComment 0x55887c350cd0 <line:137:6, col:65> Text=" volume, except if the file type is EFI_FV_FILETYPE_FFS_PAD."
| |-FieldDecl 0x55887c08fce8 <line:144:3, col:30> col:30 IntegrityCheck 'EFI_FFS_INTEGRITY_CHECK':'EFI_FFS_INTEGRITY_CHECK'
| | `-FullComment 0x55887c350e10 <line:142:6, col:47>
| |   `-ParagraphComment 0x55887c350de0 <col:6, col:47>
| |     `-TextComment 0x55887c350db0 <col:6, col:47> Text=" Used to verify the integrity of the file."
| |-FieldDecl 0x55887c08fd78 <line:149:3, col:30> col:30 Type 'EFI_FV_FILETYPE':'unsigned char'
| | `-FullComment 0x55887c350ee0 <line:147:6, col:34>
| |   `-ParagraphComment 0x55887c350eb0 <col:6, col:34>
| |     `-TextComment 0x55887c350e80 <col:6, col:34> Text=" Identifies the type of file."
| |-FieldDecl 0x55887c08fe08 <line:154:3, col:30> col:30 Attributes 'EFI_FFS_FILE_ATTRIBUTES':'unsigned char'
| | `-FullComment 0x55887c350fb0 <line:152:6, col:43>
| |   `-ParagraphComment 0x55887c350f80 <col:6, col:43>
| |     `-TextComment 0x55887c350f50 <col:6, col:43> Text=" Declares various file attribute bits."
| |-FieldDecl 0x55887c08fee8 <line:163:3, col:31> col:25 Size 'UINT8[3]'
| | `-FullComment 0x55887c351120 <line:157:6, line:161:102>
| |   `-ParagraphComment 0x55887c3510f0 <line:157:6, line:161:102>
| |     |-TextComment 0x55887c351020 <line:157:6, col:64> Text=" The length of the file in bytes, including the FFS header."
| |     |-TextComment 0x55887c351040 <line:158:6, col:106> Text=" The length of the file data is either (Size - sizeof(EFI_FFS_FILE_HEADER)). This calculation means a"
| |     |-TextComment 0x55887c351060 <line:159:6, col:84> Text=" zero-length file has a Size of 24 bytes, which is sizeof(EFI_FFS_FILE_HEADER)."
| |     |-TextComment 0x55887c351080 <line:160:6, col:95> Text=" Size is not required to be a multiple of 8 bytes. Given a file F, the next file header is"
| |     `-TextComment 0x55887c3510a0 <line:161:6, col:102> Text=" located at the next 8-byte aligned firmware volume offset following the last byte of the file F."
| |-FieldDecl 0x55887c08ff78 <line:168:3, col:25> col:25 State 'EFI_FFS_FILE_STATE':'unsigned char'
| | `-FullComment 0x55887c352230 <line:166:6, col:100>
| |   `-ParagraphComment 0x55887c3511c0 <col:6, col:100>
| |     `-TextComment 0x55887c351190 <col:6, col:100> Text=" Used to track the state of the file throughout the life of the file from creation to deletion."
| `-FieldDecl 0x55887c090008 <line:174:3, col:25> col:25 ExtendedSize 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c352320 <line:171:6, line:172:75>
|     `-ParagraphComment 0x55887c3522f0 <line:171:6, line:172:75>
|       |-TextComment 0x55887c3522a0 <line:171:6, col:107> Text=" If FFS_ATTRIB_LARGE_FILE is set in Attributes, then ExtendedSize exists and Size must be set to zero."
|       `-TextComment 0x55887c3522c0 <line:172:6, col:75> Text=" If FFS_ATTRIB_LARGE_FILE is not set then EFI_FFS_FILE_HEADER is used."
|-TypedefDecl 0x55887c0900b8 <line:133:1, line:175:3> col:3 EFI_FFS_FILE_HEADER2 'struct EFI_FFS_FILE_HEADER2':'EFI_FFS_FILE_HEADER2'
| `-ElaboratedType 0x55887c090060 'struct EFI_FFS_FILE_HEADER2' sugar
|   `-RecordType 0x55887c08fba0 'EFI_FFS_FILE_HEADER2'
|     `-Record 0x55887c08c5a8 ''
|-TypedefDecl 0x55887c090160 <line:193:1, col:15> col:15 referenced EFI_SECTION_TYPE 'UINT8':'unsigned char'
| `-TypedefType 0x55887c04a730 'UINT8' sugar
|   |-Typedef 0x55887c049e30 'UINT8'
|   `-BuiltinType 0x55887bfe9110 'unsigned char'
|-RecordDecl 0x55887c090278 <line:230:9, line:240:1> line:230:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c090320 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c3523f0 <line:228:4, col:26>
| | `-ParagraphComment 0x55887c3523c0 <col:4, col:26>
| |   `-TextComment 0x55887c352390 <col:4, col:26> Text=" Common section header."
| |-FieldDecl 0x55887c090408 <line:235:3, col:29> col:23 referenced Size 'UINT8[3]'
| | `-FullComment 0x55887c3524e0 <line:232:6, line:233:46>
| |   `-ParagraphComment 0x55887c3524b0 <line:232:6, line:233:46>
| |     |-TextComment 0x55887c352460 <line:232:6, col:85> Text=" A 24-bit unsigned integer that contains the total size of the section in bytes,"
| |     `-TextComment 0x55887c352480 <line:233:6, col:46> Text=" including the EFI_COMMON_SECTION_HEADER."
| `-FieldDecl 0x55887c090490 <line:236:3, col:23> col:23 referenced Type 'EFI_SECTION_TYPE':'unsigned char'
|-TypedefDecl 0x55887c090568 <line:230:1, line:240:3> col:3 referenced EFI_COMMON_SECTION_HEADER 'struct EFI_COMMON_SECTION_HEADER':'EFI_COMMON_SECTION_HEADER'
| |-ElaboratedType 0x55887c090510 'struct EFI_COMMON_SECTION_HEADER' sugar
| | `-RecordType 0x55887c090300 'EFI_COMMON_SECTION_HEADER'
| |   `-Record 0x55887c090278 ''
| `-FullComment 0x55887c3525b0 <line:228:4, col:26>
|   `-ParagraphComment 0x55887c352580 <col:4, col:26>
|     `-TextComment 0x55887c352550 <col:4, col:26> Text=" Common section header."
|-RecordDecl 0x55887c0905d8 <line:242:9, line:256:1> line:242:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c090680 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c090768 <line:247:3, col:29> col:23 Size 'UINT8[3]'
| | `-FullComment 0x55887c3526a0 <line:244:6, line:245:46>
| |   `-ParagraphComment 0x55887c352670 <line:244:6, line:245:46>
| |     |-TextComment 0x55887c352620 <line:244:6, col:85> Text=" A 24-bit unsigned integer that contains the total size of the section in bytes,"
| |     `-TextComment 0x55887c352640 <line:245:6, col:46> Text=" including the EFI_COMMON_SECTION_HEADER."
| |-FieldDecl 0x55887c0907c8 <line:249:3, col:23> col:23 Type 'EFI_SECTION_TYPE':'unsigned char'
| `-FieldDecl 0x55887c090858 <line:255:3, col:23> col:23 referenced ExtendedSize 'UINT32':'unsigned int'
|   `-FullComment 0x55887c352790 <line:252:6, line:253:68>
|     `-ParagraphComment 0x55887c352760 <line:252:6, line:253:68>
|       |-TextComment 0x55887c352710 <line:252:6, col:81> Text=" If Size is 0xFFFFFF, then ExtendedSize contains the size of the section. If"
|       `-TextComment 0x55887c352730 <line:253:6, col:68> Text=" Size is not equal to 0xFFFFFF, then this field does not exist."
|-TypedefDecl 0x55887c090908 <line:242:1, line:256:3> col:3 referenced EFI_COMMON_SECTION_HEADER2 'struct EFI_COMMON_SECTION_HEADER2':'EFI_COMMON_SECTION_HEADER2'
| `-ElaboratedType 0x55887c0908b0 'struct EFI_COMMON_SECTION_HEADER2' sugar
|   `-RecordType 0x55887c090660 'EFI_COMMON_SECTION_HEADER2'
|     `-Record 0x55887c0905d8 ''
|-TypedefDecl 0x55887c0909d0 <line:262:1, col:36> col:36 EFI_COMPATIBILITY16_SECTION 'EFI_COMMON_SECTION_HEADER':'EFI_COMMON_SECTION_HEADER'
| |-TypedefType 0x55887c0909a0 'EFI_COMMON_SECTION_HEADER' sugar
| | |-Typedef 0x55887c090568 'EFI_COMMON_SECTION_HEADER'
| | `-ElaboratedType 0x55887c090510 'struct EFI_COMMON_SECTION_HEADER' sugar
| |   `-RecordType 0x55887c090300 'EFI_COMMON_SECTION_HEADER'
| |     `-Record 0x55887c090278 ''
| `-FullComment 0x55887c352880 <line:259:4, line:260:34>
|   `-ParagraphComment 0x55887c352850 <line:259:4, line:260:34>
|     |-TextComment 0x55887c352800 <line:259:4, col:38> Text=" Leaf section type that contains an"
|     `-TextComment 0x55887c352820 <line:260:4, col:34> Text=" IA-32 16-bit executable image."
|-TypedefDecl 0x55887c090a60 <line:263:1, col:36> col:36 EFI_COMPATIBILITY16_SECTION2 'EFI_COMMON_SECTION_HEADER2':'EFI_COMMON_SECTION_HEADER2'
| `-TypedefType 0x55887c090a30 'EFI_COMMON_SECTION_HEADER2' sugar
|   |-Typedef 0x55887c090908 'EFI_COMMON_SECTION_HEADER2'
|   `-ElaboratedType 0x55887c0908b0 'struct EFI_COMMON_SECTION_HEADER2' sugar
|     `-RecordType 0x55887c090660 'EFI_COMMON_SECTION_HEADER2'
|       `-Record 0x55887c0905d8 ''
|-RecordDecl 0x55887c090b18 <line:274:9, line:287:1> line:274:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0948d0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c352970 <line:271:4, line:272:31>
| | `-ParagraphComment 0x55887c352940 <line:271:4, line:272:31>
| |   |-TextComment 0x55887c3528f0 <line:271:4, col:46> Text=" An encapsulation section type in which the"
| |   `-TextComment 0x55887c352910 <line:272:4, col:31> Text=" section data is compressed."
| |-FieldDecl 0x55887c094968 <line:278:3, col:32> col:32 referenced CommonHeader 'EFI_COMMON_SECTION_HEADER':'EFI_COMMON_SECTION_HEADER'
| | `-FullComment 0x55887c352a40 <line:276:6, col:79>
| |   `-ParagraphComment 0x55887c352a10 <col:6, col:79>
| |     `-TextComment 0x55887c3529e0 <col:6, col:79> Text=" Usual common section header. CommonHeader.Type = EFI_SECTION_COMPRESSION."
| |-FieldDecl 0x55887c0949f8 <line:282:3, col:32> col:32 referenced UncompressedLength 'UINT32':'unsigned int'
| | `-FullComment 0x55887c352b10 <line:280:6, col:81>
| |   `-ParagraphComment 0x55887c352ae0 <col:6, col:81>
| |     `-TextComment 0x55887c352ab0 <col:6, col:81> Text=" The UINT32 that indicates the size of the section data after decompression."
| `-FieldDecl 0x55887c094a88 <line:286:3, col:32> col:32 referenced CompressionType 'UINT8':'unsigned char'
|   `-FullComment 0x55887c352be0 <line:284:6, col:52>
|     `-ParagraphComment 0x55887c352bb0 <col:6, col:52>
|       `-TextComment 0x55887c352b80 <col:6, col:52> Text=" Indicates which compression algorithm is used."
|-TypedefDecl 0x55887c094b98 <line:274:1, line:287:3> col:3 referenced EFI_COMPRESSION_SECTION 'struct EFI_COMPRESSION_SECTION':'EFI_COMPRESSION_SECTION'
| |-ElaboratedType 0x55887c094b40 'struct EFI_COMPRESSION_SECTION' sugar
| | `-RecordType 0x55887c0948b0 'EFI_COMPRESSION_SECTION'
| |   `-Record 0x55887c090b18 ''
| `-FullComment 0x55887c352cd0 <line:271:4, line:272:31>
|   `-ParagraphComment 0x55887c352ca0 <line:271:4, line:272:31>
|     |-TextComment 0x55887c352c50 <line:271:4, col:46> Text=" An encapsulation section type in which the"
|     `-TextComment 0x55887c352c70 <line:272:4, col:31> Text=" section data is compressed."
|-RecordDecl 0x55887c094c08 <line:289:9, line:302:1> line:289:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c094cb0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c094d48 <line:293:3, col:33> col:33 CommonHeader 'EFI_COMMON_SECTION_HEADER2':'EFI_COMMON_SECTION_HEADER2'
| | `-FullComment 0x55887c352da0 <line:291:6, col:79>
| |   `-ParagraphComment 0x55887c352d70 <col:6, col:79>
| |     `-TextComment 0x55887c352d40 <col:6, col:79> Text=" Usual common section header. CommonHeader.Type = EFI_SECTION_COMPRESSION."
| |-FieldDecl 0x55887c094dd8 <line:297:3, col:33> col:33 referenced UncompressedLength 'UINT32':'unsigned int'
| | `-FullComment 0x55887c352e70 <line:295:6, col:77>
| |   `-ParagraphComment 0x55887c352e40 <col:6, col:77>
| |     `-TextComment 0x55887c352e10 <col:6, col:77> Text=" UINT32 that indicates the size of the section data after decompression."
| `-FieldDecl 0x55887c094e68 <line:301:3, col:33> col:33 referenced CompressionType 'UINT8':'unsigned char'
|   `-FullComment 0x55887c352f40 <line:299:6, col:52>
|     `-ParagraphComment 0x55887c352f10 <col:6, col:52>
|       `-TextComment 0x55887c352ee0 <col:6, col:52> Text=" Indicates which compression algorithm is used."
|-TypedefDecl 0x55887c094f78 <line:289:1, line:302:3> col:3 referenced EFI_COMPRESSION_SECTION2 'struct EFI_COMPRESSION_SECTION2':'EFI_COMPRESSION_SECTION2'
| `-ElaboratedType 0x55887c094f20 'struct EFI_COMPRESSION_SECTION2' sugar
|   `-RecordType 0x55887c094c90 'EFI_COMPRESSION_SECTION2'
|     `-Record 0x55887c094c08 ''
|-TypedefDecl 0x55887c095020 <line:313:1, col:36> col:36 EFI_DISPOSABLE_SECTION 'EFI_COMMON_SECTION_HEADER':'EFI_COMMON_SECTION_HEADER'
| |-TypedefType 0x55887c0909a0 'EFI_COMMON_SECTION_HEADER' sugar
| | |-Typedef 0x55887c090568 'EFI_COMMON_SECTION_HEADER'
| | `-ElaboratedType 0x55887c090510 'struct EFI_COMMON_SECTION_HEADER' sugar
| |   `-RecordType 0x55887c090300 'EFI_COMMON_SECTION_HEADER'
| |     `-Record 0x55887c090278 ''
| `-FullComment 0x55887c353100 <line:305:4, line:311:52>
|   `-ParagraphComment 0x55887c3530d0 <line:305:4, line:311:52>
|     |-TextComment 0x55887c352fb0 <line:305:4, col:74> Text=" An encapsulation section type in which the section data is disposable."
|     |-TextComment 0x55887c352fd0 <line:306:4, col:104> Text=" A disposable section is an encapsulation section in which the section data may be disposed of during"
|     |-TextComment 0x55887c352ff0 <line:307:4, col:104> Text=" the process of creating or updating a firmware image without significant impact on the usefulness of"
|     |-TextComment 0x55887c353010 <line:308:4, col:89> Text=" the file. The Type field in the section header is set to EFI_SECTION_DISPOSABLE. This"
|     |-TextComment 0x55887c353030 <line:309:4, col:101> Text=" allows optional or descriptive data to be included with the firmware file which can be removed in"
|     |-TextComment 0x55887c353050 <line:310:4, col:104> Text=" order to conserve space. The contents of this section are implementation specific, but might contain"
|     `-TextComment 0x55887c353070 <line:311:4, col:52> Text=" debug data or detailed integration instructions."
|-TypedefDecl 0x55887c095088 <line:314:1, col:36> col:36 EFI_DISPOSABLE_SECTION2 'EFI_COMMON_SECTION_HEADER2':'EFI_COMMON_SECTION_HEADER2'
| `-TypedefType 0x55887c090a30 'EFI_COMMON_SECTION_HEADER2' sugar
|   |-Typedef 0x55887c090908 'EFI_COMMON_SECTION_HEADER2'
|   `-ElaboratedType 0x55887c0908b0 'struct EFI_COMMON_SECTION_HEADER2' sugar
|     `-RecordType 0x55887c090660 'EFI_COMMON_SECTION_HEADER2'
|       `-Record 0x55887c0905d8 ''
|-TypedefDecl 0x55887c095118 <line:319:1, col:36> col:36 EFI_DXE_DEPEX_SECTION 'EFI_COMMON_SECTION_HEADER':'EFI_COMMON_SECTION_HEADER'
| |-TypedefType 0x55887c0909a0 'EFI_COMMON_SECTION_HEADER' sugar
| | |-Typedef 0x55887c090568 'EFI_COMMON_SECTION_HEADER'
| | `-ElaboratedType 0x55887c090510 'struct EFI_COMMON_SECTION_HEADER' sugar
| |   `-RecordType 0x55887c090300 'EFI_COMMON_SECTION_HEADER'
| |     `-Record 0x55887c090278 ''
| `-FullComment 0x55887c3531d0 <line:317:4, col:81>
|   `-ParagraphComment 0x55887c3531a0 <col:4, col:81>
|     `-TextComment 0x55887c353170 <col:4, col:81> Text=" The leaf section which could be used to determine the dispatch order of DXEs."
|-TypedefDecl 0x55887c095180 <line:320:1, col:36> col:36 EFI_DXE_DEPEX_SECTION2 'EFI_COMMON_SECTION_HEADER2':'EFI_COMMON_SECTION_HEADER2'
| `-TypedefType 0x55887c090a30 'EFI_COMMON_SECTION_HEADER2' sugar
|   |-Typedef 0x55887c090908 'EFI_COMMON_SECTION_HEADER2'
|   `-ElaboratedType 0x55887c0908b0 'struct EFI_COMMON_SECTION_HEADER2' sugar
|     `-RecordType 0x55887c090660 'EFI_COMMON_SECTION_HEADER2'
|       `-Record 0x55887c0905d8 ''
|-TypedefDecl 0x55887c095218 <line:325:1, col:36> col:36 EFI_FIRMWARE_VOLUME_IMAGE_SECTION 'EFI_COMMON_SECTION_HEADER':'EFI_COMMON_SECTION_HEADER'
| |-TypedefType 0x55887c0909a0 'EFI_COMMON_SECTION_HEADER' sugar
| | |-Typedef 0x55887c090568 'EFI_COMMON_SECTION_HEADER'
| | `-ElaboratedType 0x55887c090510 'struct EFI_COMMON_SECTION_HEADER' sugar
| |   `-RecordType 0x55887c090300 'EFI_COMMON_SECTION_HEADER'
| |     `-Record 0x55887c090278 ''
| `-FullComment 0x55887c3532a0 <line:323:4, col:44>
|   `-ParagraphComment 0x55887c353270 <col:4, col:44>
|     `-TextComment 0x55887c353240 <col:4, col:44> Text=" The leaf section which contains a PI FV."
|-TypedefDecl 0x55887c095280 <line:326:1, col:36> col:36 EFI_FIRMWARE_VOLUME_IMAGE_SECTION2 'EFI_COMMON_SECTION_HEADER2':'EFI_COMMON_SECTION_HEADER2'
| `-TypedefType 0x55887c090a30 'EFI_COMMON_SECTION_HEADER2' sugar
|   |-Typedef 0x55887c090908 'EFI_COMMON_SECTION_HEADER2'
|   `-ElaboratedType 0x55887c0908b0 'struct EFI_COMMON_SECTION_HEADER2' sugar
|     `-RecordType 0x55887c090660 'EFI_COMMON_SECTION_HEADER2'
|       `-Record 0x55887c0905d8 ''
|-RecordDecl 0x55887c095308 <line:331:9, line:340:1> line:331:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0953b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c353370 <line:329:4, col:50>
| | `-ParagraphComment 0x55887c353340 <col:4, col:50>
| |   `-TextComment 0x55887c353310 <col:4, col:50> Text=" The leaf section which contains a single GUID."
| |-FieldDecl 0x55887c095448 <line:335:3, col:32> col:32 CommonHeader 'EFI_COMMON_SECTION_HEADER':'EFI_COMMON_SECTION_HEADER'
| | `-FullComment 0x55887c353440 <line:333:6, col:83>
| |   `-ParagraphComment 0x55887c353410 <col:6, col:83>
| |     `-TextComment 0x55887c3533e0 <col:6, col:83> Text=" Common section header. CommonHeader.Type = EFI_SECTION_FREEFORM_SUBTYPE_GUID."
| `-FieldDecl 0x55887c0954d8 <line:339:3, col:32> col:32 SubTypeGuid 'EFI_GUID':'GUID'
|   `-FullComment 0x55887c353510 <line:337:6, col:88>
|     `-ParagraphComment 0x55887c3534e0 <col:6, col:88>
|       `-TextComment 0x55887c3534b0 <col:6, col:88> Text=" This GUID is defined by the creator of the file. It is a vendor-defined file type."
|-TypedefDecl 0x55887c095588 <line:331:1, line:340:3> col:3 EFI_FREEFORM_SUBTYPE_GUID_SECTION 'struct EFI_FREEFORM_SUBTYPE_GUID_SECTION':'EFI_FREEFORM_SUBTYPE_GUID_SECTION'
| |-ElaboratedType 0x55887c095530 'struct EFI_FREEFORM_SUBTYPE_GUID_SECTION' sugar
| | `-RecordType 0x55887c095390 'EFI_FREEFORM_SUBTYPE_GUID_SECTION'
| |   `-Record 0x55887c095308 ''
| `-FullComment 0x55887c3535e0 <line:329:4, col:50>
|   `-ParagraphComment 0x55887c3535b0 <col:4, col:50>
|     `-TextComment 0x55887c353580 <col:4, col:50> Text=" The leaf section which contains a single GUID."
|-RecordDecl 0x55887c0955f8 <line:342:9, line:351:1> line:342:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0956a0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c095738 <line:346:3, col:33> col:33 CommonHeader 'EFI_COMMON_SECTION_HEADER2':'EFI_COMMON_SECTION_HEADER2'
| | `-FullComment 0x55887c3536b0 <line:344:6, col:87>
| |   `-ParagraphComment 0x55887c353680 <col:6, col:87>
| |     `-TextComment 0x55887c353650 <col:6, col:87> Text=" The common section header. CommonHeader.Type = EFI_SECTION_FREEFORM_SUBTYPE_GUID."
| `-FieldDecl 0x55887c0957c8 <line:350:3, col:33> col:33 SubTypeGuid 'EFI_GUID':'GUID'
|   `-FullComment 0x55887c353780 <line:348:6, col:88>
|     `-ParagraphComment 0x55887c353750 <col:6, col:88>
|       `-TextComment 0x55887c353720 <col:6, col:88> Text=" This GUID is defined by the creator of the file. It is a vendor-defined file type."
|-TypedefDecl 0x55887c095c40 <line:342:1, line:351:3> col:3 EFI_FREEFORM_SUBTYPE_GUID_SECTION2 'struct EFI_FREEFORM_SUBTYPE_GUID_SECTION2':'EFI_FREEFORM_SUBTYPE_GUID_SECTION2'
| `-ElaboratedType 0x55887c095820 'struct EFI_FREEFORM_SUBTYPE_GUID_SECTION2' sugar
|   `-RecordType 0x55887c095680 'EFI_FREEFORM_SUBTYPE_GUID_SECTION2'
|     `-Record 0x55887c0955f8 ''
|-RecordDecl 0x55887c095d10 <line:361:9, line:378:1> line:361:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c095db0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c353850 <line:359:4, col:69>
| | `-ParagraphComment 0x55887c353820 <col:4, col:69>
| |   `-TextComment 0x55887c3537f0 <col:4, col:69> Text=" The leaf section which is encapsulation defined by specific GUID."
| |-FieldDecl 0x55887c095e48 <line:365:3, col:32> col:32 CommonHeader 'EFI_COMMON_SECTION_HEADER':'EFI_COMMON_SECTION_HEADER'
| | `-FullComment 0x55887c353920 <line:363:6, col:78>
| |   `-ParagraphComment 0x55887c3538f0 <col:6, col:78>
| |     `-TextComment 0x55887c3538c0 <col:6, col:78> Text=" The common section header. CommonHeader.Type = EFI_SECTION_GUID_DEFINED."
| |-FieldDecl 0x55887c095ed8 <line:369:3, col:32> col:32 SectionDefinitionGuid 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c3539f0 <line:367:6, col:101>
| |   `-ParagraphComment 0x55887c3539c0 <col:6, col:101>
| |     `-TextComment 0x55887c353990 <col:6, col:101> Text=" The GUID that defines the format of the data that follows. It is a vendor-defined section type."
| |-FieldDecl 0x55887c095f68 <line:373:3, col:32> col:32 DataOffset 'UINT16':'unsigned short'
| | `-FullComment 0x55887c353ac0 <line:371:6, col:105>
| |   `-ParagraphComment 0x55887c353a90 <col:6, col:105>
| |     `-TextComment 0x55887c353a60 <col:6, col:105> Text=" Contains the offset in bytes from the beginning of the common header to the first byte of the data."
| `-FieldDecl 0x55887c095ff8 <line:377:3, col:32> col:32 Attributes 'UINT16':'unsigned short'
|   `-FullComment 0x55887c353b90 <line:375:6, col:88>
|     `-ParagraphComment 0x55887c353b60 <col:6, col:88>
|       `-TextComment 0x55887c353b30 <col:6, col:88> Text=" The bit field that declares some specific characteristics of the section contents."
|-TypedefDecl 0x55887c0960a8 <line:361:1, line:378:3> col:3 EFI_GUID_DEFINED_SECTION 'struct EFI_GUID_DEFINED_SECTION':'EFI_GUID_DEFINED_SECTION'
| |-ElaboratedType 0x55887c096050 'struct EFI_GUID_DEFINED_SECTION' sugar
| | `-RecordType 0x55887c095d90 'EFI_GUID_DEFINED_SECTION'
| |   `-Record 0x55887c095d10 ''
| `-FullComment 0x55887c353c60 <line:359:4, col:69>
|   `-ParagraphComment 0x55887c353c30 <col:4, col:69>
|     `-TextComment 0x55887c353c00 <col:4, col:69> Text=" The leaf section which is encapsulation defined by specific GUID."
|-RecordDecl 0x55887c096118 <line:380:9, line:397:1> line:380:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0961c0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c096258 <line:384:3, col:33> col:33 CommonHeader 'EFI_COMMON_SECTION_HEADER2':'EFI_COMMON_SECTION_HEADER2'
| | `-FullComment 0x55887c353d30 <line:382:6, col:78>
| |   `-ParagraphComment 0x55887c353d00 <col:6, col:78>
| |     `-TextComment 0x55887c353cd0 <col:6, col:78> Text=" The common section header. CommonHeader.Type = EFI_SECTION_GUID_DEFINED."
| |-FieldDecl 0x55887c0962e8 <line:388:3, col:33> col:33 SectionDefinitionGuid 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c353e00 <line:386:6, col:101>
| |   `-ParagraphComment 0x55887c353dd0 <col:6, col:101>
| |     `-TextComment 0x55887c353da0 <col:6, col:101> Text=" The GUID that defines the format of the data that follows. It is a vendor-defined section type."
| |-FieldDecl 0x55887c096378 <line:392:3, col:33> col:33 DataOffset 'UINT16':'unsigned short'
| | `-FullComment 0x55887c353ed0 <line:390:6, col:105>
| |   `-ParagraphComment 0x55887c353ea0 <col:6, col:105>
| |     `-TextComment 0x55887c353e70 <col:6, col:105> Text=" Contains the offset in bytes from the beginning of the common header to the first byte of the data."
| `-FieldDecl 0x55887c096408 <line:396:3, col:33> col:33 Attributes 'UINT16':'unsigned short'
|   `-FullComment 0x55887c353fa0 <line:394:6, col:88>
|     `-ParagraphComment 0x55887c353f70 <col:6, col:88>
|       `-TextComment 0x55887c353f40 <col:6, col:88> Text=" The bit field that declares some specific characteristics of the section contents."
|-TypedefDecl 0x55887c0964b8 <line:380:1, line:397:3> col:3 EFI_GUID_DEFINED_SECTION2 'struct EFI_GUID_DEFINED_SECTION2':'EFI_GUID_DEFINED_SECTION2'
| `-ElaboratedType 0x55887c096460 'struct EFI_GUID_DEFINED_SECTION2' sugar
|   `-RecordType 0x55887c0961a0 'EFI_GUID_DEFINED_SECTION2'
|     `-Record 0x55887c096118 ''
|-TypedefDecl 0x55887c096560 <line:402:1, col:36> col:36 EFI_PE32_SECTION 'EFI_COMMON_SECTION_HEADER':'EFI_COMMON_SECTION_HEADER'
| |-TypedefType 0x55887c0909a0 'EFI_COMMON_SECTION_HEADER' sugar
| | |-Typedef 0x55887c090568 'EFI_COMMON_SECTION_HEADER'
| | `-ElaboratedType 0x55887c090510 'struct EFI_COMMON_SECTION_HEADER' sugar
| |   `-RecordType 0x55887c090300 'EFI_COMMON_SECTION_HEADER'
| |     `-Record 0x55887c090278 ''
| `-FullComment 0x55887c354070 <line:400:4, col:48>
|   `-ParagraphComment 0x55887c354040 <col:4, col:48>
|     `-TextComment 0x55887c354010 <col:4, col:48> Text=" The leaf section which contains PE32+ image."
|-TypedefDecl 0x55887c0965c8 <line:403:1, col:36> col:36 EFI_PE32_SECTION2 'EFI_COMMON_SECTION_HEADER2':'EFI_COMMON_SECTION_HEADER2'
| `-TypedefType 0x55887c090a30 'EFI_COMMON_SECTION_HEADER2' sugar
|   |-Typedef 0x55887c090908 'EFI_COMMON_SECTION_HEADER2'
|   `-ElaboratedType 0x55887c0908b0 'struct EFI_COMMON_SECTION_HEADER2' sugar
|     `-RecordType 0x55887c090660 'EFI_COMMON_SECTION_HEADER2'
|       `-Record 0x55887c0905d8 ''
|-TypedefDecl 0x55887c096658 <line:408:1, col:36> col:36 EFI_PEI_DEPEX_SECTION 'EFI_COMMON_SECTION_HEADER':'EFI_COMMON_SECTION_HEADER'
| |-TypedefType 0x55887c0909a0 'EFI_COMMON_SECTION_HEADER' sugar
| | |-Typedef 0x55887c090568 'EFI_COMMON_SECTION_HEADER'
| | `-ElaboratedType 0x55887c090510 'struct EFI_COMMON_SECTION_HEADER' sugar
| |   `-RecordType 0x55887c090300 'EFI_COMMON_SECTION_HEADER'
| |     `-Record 0x55887c090278 ''
| `-FullComment 0x55887c354140 <line:406:4, col:67>
|   `-ParagraphComment 0x55887c354110 <col:4, col:67>
|     `-TextComment 0x55887c3540e0 <col:4, col:67> Text=" The leaf section used to determine the dispatch order of PEIMs."
|-TypedefDecl 0x55887c0966c0 <line:409:1, col:36> col:36 EFI_PEI_DEPEX_SECTION2 'EFI_COMMON_SECTION_HEADER2':'EFI_COMMON_SECTION_HEADER2'
| `-TypedefType 0x55887c090a30 'EFI_COMMON_SECTION_HEADER2' sugar
|   |-Typedef 0x55887c090908 'EFI_COMMON_SECTION_HEADER2'
|   `-ElaboratedType 0x55887c0908b0 'struct EFI_COMMON_SECTION_HEADER2' sugar
|     `-RecordType 0x55887c090660 'EFI_COMMON_SECTION_HEADER2'
|       `-Record 0x55887c0905d8 ''
|-TypedefDecl 0x55887c096758 <line:420:1, col:36> col:36 EFI_PIC_SECTION 'EFI_COMMON_SECTION_HEADER':'EFI_COMMON_SECTION_HEADER'
| |-TypedefType 0x55887c0909a0 'EFI_COMMON_SECTION_HEADER' sugar
| | |-Typedef 0x55887c090568 'EFI_COMMON_SECTION_HEADER'
| | `-ElaboratedType 0x55887c090510 'struct EFI_COMMON_SECTION_HEADER' sugar
| |   `-RecordType 0x55887c090300 'EFI_COMMON_SECTION_HEADER'
| |     `-Record 0x55887c090278 ''
| `-FullComment 0x55887c354310 <line:412:4, line:418:45>
|   `-ParagraphComment 0x55887c3542e0 <line:412:4, line:418:45>
|     |-TextComment 0x55887c3541b0 <line:412:4, col:78> Text=" A leaf section type that contains a position-independent-code (PIC) image."
|     |-TextComment 0x55887c3541d0 <line:413:4, col:96> Text=" A PIC image section is a leaf section that contains a position-independent-code (PIC) image."
|     |-TextComment 0x55887c3541f0 <line:414:4, col:99> Text=" In addition to normal PE32+ images that contain relocation information, PEIM executables may be"
|     |-TextComment 0x55887c354210 <line:415:4, col:99> Text=" PIC and are referred to as PIC images. A PIC image is the same as a PE32+ image except that all"
|     |-TextComment 0x55887c354240 <line:416:4, col:95> Text=" relocation information has been stripped from the image and the image can be moved and will"
|     |-TextComment 0x55887c354260 <line:417:4, col:95> Text=" execute correctly without performing any relocation or other fix-ups. EFI_PIC_SECTION2 must"
|     `-TextComment 0x55887c354280 <line:418:4, col:45> Text=" be used if the section is 16MB or larger."
|-TypedefDecl 0x55887c0967c0 <line:421:1, col:36> col:36 EFI_PIC_SECTION2 'EFI_COMMON_SECTION_HEADER2':'EFI_COMMON_SECTION_HEADER2'
| `-TypedefType 0x55887c090a30 'EFI_COMMON_SECTION_HEADER2' sugar
|   |-Typedef 0x55887c090908 'EFI_COMMON_SECTION_HEADER2'
|   `-ElaboratedType 0x55887c0908b0 'struct EFI_COMMON_SECTION_HEADER2' sugar
|     `-RecordType 0x55887c090660 'EFI_COMMON_SECTION_HEADER2'
|       `-Record 0x55887c0905d8 ''
|-TypedefDecl 0x55887c096858 <line:426:1, col:36> col:36 EFI_TE_SECTION 'EFI_COMMON_SECTION_HEADER':'EFI_COMMON_SECTION_HEADER'
| |-TypedefType 0x55887c0909a0 'EFI_COMMON_SECTION_HEADER' sugar
| | |-Typedef 0x55887c090568 'EFI_COMMON_SECTION_HEADER'
| | `-ElaboratedType 0x55887c090510 'struct EFI_COMMON_SECTION_HEADER' sugar
| |   `-RecordType 0x55887c090300 'EFI_COMMON_SECTION_HEADER'
| |     `-Record 0x55887c090278 ''
| `-FullComment 0x55887c3543e0 <line:424:4, col:73>
|   `-ParagraphComment 0x55887c3543b0 <col:4, col:73>
|     `-TextComment 0x55887c354380 <col:4, col:73> Text=" The leaf section which constains the position-independent-code image."
|-TypedefDecl 0x55887c0968c0 <line:427:1, col:36> col:36 EFI_TE_SECTION2 'EFI_COMMON_SECTION_HEADER2':'EFI_COMMON_SECTION_HEADER2'
| `-TypedefType 0x55887c090a30 'EFI_COMMON_SECTION_HEADER2' sugar
|   |-Typedef 0x55887c090908 'EFI_COMMON_SECTION_HEADER2'
|   `-ElaboratedType 0x55887c0908b0 'struct EFI_COMMON_SECTION_HEADER2' sugar
|     `-RecordType 0x55887c090660 'EFI_COMMON_SECTION_HEADER2'
|       `-Record 0x55887c0905d8 ''
|-TypedefDecl 0x55887c096958 <line:432:1, col:36> col:36 EFI_RAW_SECTION 'EFI_COMMON_SECTION_HEADER':'EFI_COMMON_SECTION_HEADER'
| |-TypedefType 0x55887c0909a0 'EFI_COMMON_SECTION_HEADER' sugar
| | |-Typedef 0x55887c090568 'EFI_COMMON_SECTION_HEADER'
| | `-ElaboratedType 0x55887c090510 'struct EFI_COMMON_SECTION_HEADER' sugar
| |   `-RecordType 0x55887c090300 'EFI_COMMON_SECTION_HEADER'
| |     `-Record 0x55887c090278 ''
| `-FullComment 0x55887c3544b0 <line:430:4, col:67>
|   `-ParagraphComment 0x55887c354480 <col:4, col:67>
|     `-TextComment 0x55887c354450 <col:4, col:67> Text=" The leaf section which contains an array of zero or more bytes."
|-TypedefDecl 0x55887c0969c0 <line:433:1, col:36> col:36 EFI_RAW_SECTION2 'EFI_COMMON_SECTION_HEADER2':'EFI_COMMON_SECTION_HEADER2'
| `-TypedefType 0x55887c090a30 'EFI_COMMON_SECTION_HEADER2' sugar
|   |-Typedef 0x55887c090908 'EFI_COMMON_SECTION_HEADER2'
|   `-ElaboratedType 0x55887c0908b0 'struct EFI_COMMON_SECTION_HEADER2' sugar
|     `-RecordType 0x55887c090660 'EFI_COMMON_SECTION_HEADER2'
|       `-Record 0x55887c0905d8 ''
|-TypedefDecl 0x55887c096a58 <line:443:1, col:36> col:36 EFI_SMM_DEPEX_SECTION 'EFI_COMMON_SECTION_HEADER':'EFI_COMMON_SECTION_HEADER'
| |-TypedefType 0x55887c0909a0 'EFI_COMMON_SECTION_HEADER' sugar
| | |-Typedef 0x55887c090568 'EFI_COMMON_SECTION_HEADER'
| | `-ElaboratedType 0x55887c090510 'struct EFI_COMMON_SECTION_HEADER' sugar
| |   `-RecordType 0x55887c090300 'EFI_COMMON_SECTION_HEADER'
| |     `-Record 0x55887c090278 ''
| `-FullComment 0x55887c354640 <line:436:4, line:441:83>
|   `-ParagraphComment 0x55887c354610 <line:436:4, line:441:83>
|     |-TextComment 0x55887c354520 <line:436:4, col:102> Text=" The SMM dependency expression section is a leaf section that contains a dependency expression that"
|     |-TextComment 0x55887c354540 <line:437:4, col:95> Text=" is used to determine the dispatch order for SMM drivers. Before the SMRAM invocation of the"
|     |-TextComment 0x55887c354560 <line:438:4, col:96> Text=" SMM driver's entry point, this dependency expression must evaluate to TRUE. See the Platform"
|     |-TextComment 0x55887c354580 <line:439:4, col:106> Text=" Initialization Specification, Volume 2, for details regarding the format of the dependency expression."
|     |-TextComment 0x55887c3545a0 <line:440:4, col:101> Text=" The dependency expression may refer to protocols installed in either the UEFI or the SMM protocol"
|     `-TextComment 0x55887c3545c0 <line:441:4, col:83> Text=" database. EFI_SMM_DEPEX_SECTION2 must be used if the section is 16MB or larger."
|-TypedefDecl 0x55887c096ac0 <line:444:1, col:36> col:36 EFI_SMM_DEPEX_SECTION2 'EFI_COMMON_SECTION_HEADER2':'EFI_COMMON_SECTION_HEADER2'
| `-TypedefType 0x55887c090a30 'EFI_COMMON_SECTION_HEADER2' sugar
|   |-Typedef 0x55887c090908 'EFI_COMMON_SECTION_HEADER2'
|   `-ElaboratedType 0x55887c0908b0 'struct EFI_COMMON_SECTION_HEADER2' sugar
|     `-RecordType 0x55887c090660 'EFI_COMMON_SECTION_HEADER2'
|       `-Record 0x55887c0905d8 ''
|-RecordDecl 0x55887c096b48 <line:450:9, line:457:1> line:450:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c096bf0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c354730 <line:447:4, line:448:32>
| | `-ParagraphComment 0x55887c354700 <line:447:4, line:448:32>
| |   |-TextComment 0x55887c3546b0 <line:447:4, col:57> Text=" The leaf section which contains a unicode string that"
| |   `-TextComment 0x55887c3546d0 <line:448:4, col:32> Text=" is human readable file name."
| |-FieldDecl 0x55887c0970d0 <line:451:3, col:32> col:32 CommonHeader 'EFI_COMMON_SECTION_HEADER':'EFI_COMMON_SECTION_HEADER'
| `-FieldDecl 0x55887c097228 <line:456:3, col:48> col:32 FileNameString 'CHAR16[1]'
|   `-FullComment 0x55887c354800 <line:454:6, col:30>
|     `-ParagraphComment 0x55887c3547d0 <col:6, col:30>
|       `-TextComment 0x55887c3547a0 <col:6, col:30> Text=" Array of unicode string."
|-TypedefDecl 0x55887c0972d8 <line:450:1, line:457:3> col:3 EFI_USER_INTERFACE_SECTION 'struct EFI_USER_INTERFACE_SECTION':'EFI_USER_INTERFACE_SECTION'
| |-ElaboratedType 0x55887c097280 'struct EFI_USER_INTERFACE_SECTION' sugar
| | `-RecordType 0x55887c096bd0 'EFI_USER_INTERFACE_SECTION'
| |   `-Record 0x55887c096b48 ''
| `-FullComment 0x55887c3548f0 <line:447:4, line:448:32>
|   `-ParagraphComment 0x55887c3548c0 <line:447:4, line:448:32>
|     |-TextComment 0x55887c354870 <line:447:4, col:57> Text=" The leaf section which contains a unicode string that"
|     `-TextComment 0x55887c354890 <line:448:4, col:32> Text=" is human readable file name."
|-RecordDecl 0x55887c097348 <line:459:9, line:462:1> line:459:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0973f0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c097458 <line:460:3, col:33> col:33 CommonHeader 'EFI_COMMON_SECTION_HEADER2':'EFI_COMMON_SECTION_HEADER2'
| `-FieldDecl 0x55887c097508 <line:461:3, col:49> col:33 FileNameString 'CHAR16[1]'
|-TypedefDecl 0x55887c0975b8 <line:459:1, line:462:3> col:3 EFI_USER_INTERFACE_SECTION2 'struct EFI_USER_INTERFACE_SECTION2':'EFI_USER_INTERFACE_SECTION2'
| `-ElaboratedType 0x55887c097560 'struct EFI_USER_INTERFACE_SECTION2' sugar
|   `-RecordType 0x55887c0973d0 'EFI_USER_INTERFACE_SECTION2'
|     `-Record 0x55887c097348 ''
|-RecordDecl 0x55887c097650 <line:468:9, line:476:1> line:468:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0976f0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c3549e0 <line:465:4, line:466:65>
| | `-ParagraphComment 0x55887c3549b0 <line:465:4, line:466:65>
| |   |-TextComment 0x55887c354960 <line:465:4, col:62> Text=" The leaf section which contains a numeric build number and"
| |   `-TextComment 0x55887c354980 <line:466:4, col:65> Text=" an optional unicode string that represents the file revision."
| |-FieldDecl 0x55887c097758 <line:469:3, col:32> col:32 CommonHeader 'EFI_COMMON_SECTION_HEADER':'EFI_COMMON_SECTION_HEADER'
| |-FieldDecl 0x55887c0977b8 <line:470:3, col:32> col:32 BuildNumber 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c097898 <line:475:3, col:47> col:32 VersionString 'CHAR16[1]'
|   `-FullComment 0x55887c354ab0 <line:473:6, col:30>
|     `-ParagraphComment 0x55887c354a80 <col:6, col:30>
|       `-TextComment 0x55887c354a50 <col:6, col:30> Text=" Array of unicode string."
|-TypedefDecl 0x55887c097948 <line:468:1, line:476:3> col:3 EFI_VERSION_SECTION 'struct EFI_VERSION_SECTION':'EFI_VERSION_SECTION'
| |-ElaboratedType 0x55887c0978f0 'struct EFI_VERSION_SECTION' sugar
| | `-RecordType 0x55887c0976d0 'EFI_VERSION_SECTION'
| |   `-Record 0x55887c097650 ''
| `-FullComment 0x55887c354ba0 <line:465:4, line:466:65>
|   `-ParagraphComment 0x55887c354b70 <line:465:4, line:466:65>
|     |-TextComment 0x55887c354b20 <line:465:4, col:62> Text=" The leaf section which contains a numeric build number and"
|     `-TextComment 0x55887c354b40 <line:466:4, col:65> Text=" an optional unicode string that represents the file revision."
|-RecordDecl 0x55887c0979b8 <line:478:9, line:486:1> line:478:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c097a60 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c097ac8 <line:479:3, col:33> col:33 CommonHeader 'EFI_COMMON_SECTION_HEADER2':'EFI_COMMON_SECTION_HEADER2'
| |-FieldDecl 0x55887c097b58 <line:484:3, col:33> col:33 BuildNumber 'UINT16':'unsigned short'
| | `-FullComment 0x55887c354c90 <line:481:6, line:482:58>
| |   `-ParagraphComment 0x55887c354c60 <line:481:6, line:482:58>
| |     |-TextComment 0x55887c354c10 <line:481:6, col:87> Text=" A UINT16 that represents a particular build. Subsequent builds have monotonically"
| |     `-TextComment 0x55887c354c30 <line:482:6, col:58> Text=" increasing build numbers relative to earlier builds."
| `-FieldDecl 0x55887c097c08 <line:485:3, col:48> col:33 VersionString 'CHAR16[1]'
|-TypedefDecl 0x55887c097cb8 <line:478:1, line:486:3> col:3 EFI_VERSION_SECTION2 'struct EFI_VERSION_SECTION2':'EFI_VERSION_SECTION2'
| `-ElaboratedType 0x55887c097c60 'struct EFI_VERSION_SECTION2' sugar
|   `-RecordType 0x55887c097a40 'EFI_VERSION_SECTION2'
|     `-Record 0x55887c0979b8 ''
|-TypedefDecl 0x55887c097db8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiBootMode.h:18:1, col:16> col:16 referenced EFI_BOOT_MODE 'UINT32':'unsigned int'
| |-TypedefType 0x55887c04a5d0 'UINT32' sugar
| | |-Typedef 0x55887c049a70 'UINT32'
| | `-BuiltinType 0x55887bfe9150 'unsigned int'
| `-FullComment 0x55887c354d60 <line:16:4, col:17>
|   `-ParagraphComment 0x55887c354d30 <col:4, col:17>
|     `-TextComment 0x55887c354d00 <col:4, col:17> Text=" EFI boot mode"
|-RecordDecl 0x55887c097e68 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiHob.h:36:9, line:49:1> line:36:9 struct definition
| |-FullComment 0x55887c354e50 <line:33:4, line:34:50>
| | `-ParagraphComment 0x55887c354e20 <line:33:4, line:34:50>
| |   |-TextComment 0x55887c354dd0 <line:33:4, col:61> Text=" Describes the format and size of the data inside the HOB."
| |   `-TextComment 0x55887c354df0 <line:34:4, col:50> Text=" All HOBs must contain this generic HOB header."
| |-FieldDecl 0x55887c097f48 <line:40:3, col:13> col:13 HobType 'UINT16':'unsigned short'
| | `-FullComment 0x55887c354f20 <line:38:6, col:45>
| |   `-ParagraphComment 0x55887c354ef0 <col:6, col:45>
| |     `-TextComment 0x55887c354ec0 <col:6, col:45> Text=" Identifies the HOB data structure type."
| |-FieldDecl 0x55887c097fd8 <line:44:3, col:13> col:13 referenced HobLength 'UINT16':'unsigned short'
| | `-FullComment 0x55887c354ff0 <line:42:6, col:37>
| |   `-ParagraphComment 0x55887c354fc0 <col:6, col:37>
| |     `-TextComment 0x55887c354f90 <col:6, col:37> Text=" The length in bytes of the HOB."
| `-FieldDecl 0x55887c09a9a0 <line:48:3, col:13> col:13 Reserved 'UINT32':'unsigned int'
|   `-FullComment 0x55887c3550c0 <line:46:6, col:44>
|     `-ParagraphComment 0x55887c355090 <col:6, col:44>
|       `-TextComment 0x55887c355060 <col:6, col:44> Text=" This field must always be set to zero."
|-TypedefDecl 0x55887c09aa48 <line:36:1, line:49:3> col:3 referenced EFI_HOB_GENERIC_HEADER 'struct EFI_HOB_GENERIC_HEADER':'EFI_HOB_GENERIC_HEADER'
| |-ElaboratedType 0x55887c09a9f0 'struct EFI_HOB_GENERIC_HEADER' sugar
| | `-RecordType 0x55887c097ef0 'EFI_HOB_GENERIC_HEADER'
| |   `-Record 0x55887c097e68 ''
| `-FullComment 0x55887c3551b0 <line:33:4, line:34:50>
|   `-ParagraphComment 0x55887c355180 <line:33:4, line:34:50>
|     |-TextComment 0x55887c355130 <line:33:4, col:61> Text=" Describes the format and size of the data inside the HOB."
|     `-TextComment 0x55887c355150 <line:34:4, col:50> Text=" All HOBs must contain this generic HOB header."
|-RecordDecl 0x55887c09ab10 <line:60:9, line:97:1> line:60:9 struct definition
| |-FullComment 0x55887c3552a0 <line:57:4, line:58:51>
| | `-ParagraphComment 0x55887c355270 <line:57:4, line:58:51>
| |   |-TextComment 0x55887c355220 <line:57:4, col:70> Text=" Contains general state information used by the HOB producer phase."
| |   `-TextComment 0x55887c355240 <line:58:4, col:51> Text=" This HOB must be the first one in the HOB list."
| |-FieldDecl 0x55887c09ac10 <line:64:3, col:29> col:29 Header 'EFI_HOB_GENERIC_HEADER':'EFI_HOB_GENERIC_HEADER'
| | `-FullComment 0x55887c355370 <line:62:6, col:68>
| |   `-ParagraphComment 0x55887c355340 <col:6, col:68>
| |     `-TextComment 0x55887c355310 <col:6, col:68> Text=" The HOB generic header. Header.HobType = EFI_HOB_TYPE_HANDOFF."
| |-FieldDecl 0x55887c09ac98 <line:70:3, col:29> col:29 Version 'UINT32':'unsigned int'
| | `-FullComment 0x55887c355490 <line:66:6, line:68:51>
| |   `-ParagraphComment 0x55887c355460 <line:66:6, line:68:51>
| |     |-TextComment 0x55887c3553e0 <line:66:6, col:63> Text=" The version number pertaining to the PHIT HOB definition."
| |     |-TextComment 0x55887c355400 <line:67:6, col:75> Text=" This value is four bytes in length to provide an 8-byte aligned entry"
| |     `-TextComment 0x55887c355420 <line:68:6, col:51> Text=" when it is combined with the 4-byte BootMode."
| |-FieldDecl 0x55887c09ad50 <line:74:3, col:29> col:29 BootMode 'EFI_BOOT_MODE':'unsigned int'
| | `-FullComment 0x55887c355560 <line:72:6, col:71>
| |   `-ParagraphComment 0x55887c355530 <col:6, col:71>
| |     `-TextComment 0x55887c355500 <col:6, col:71> Text=" The system boot mode as determined during the HOB producer phase."
| |-FieldDecl 0x55887c09ae00 <line:79:3, col:29> col:29 EfiMemoryTop 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | `-FullComment 0x55887c355650 <line:76:6, line:77:81>
| |   `-ParagraphComment 0x55887c355620 <line:76:6, line:77:81>
| |     |-TextComment 0x55887c3555d0 <line:76:6, col:90> Text=" The highest address location of memory that is allocated for use by the HOB producer"
| |     `-TextComment 0x55887c3555f0 <line:77:6, col:81> Text=" phase. This address must be 4-KB aligned to meet page restrictions of UEFI."
| |-FieldDecl 0x55887c09ae88 <line:83:3, col:29> col:29 EfiMemoryBottom 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | `-FullComment 0x55887c355720 <line:81:6, col:96>
| |   `-ParagraphComment 0x55887c3556f0 <col:6, col:96>
| |     `-TextComment 0x55887c3556c0 <col:6, col:96> Text=" The lowest address location of memory that is allocated for use by the HOB producer phase."
| |-FieldDecl 0x55887c09af18 <line:88:3, col:29> col:29 EfiFreeMemoryTop 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | `-FullComment 0x55887c355810 <line:85:6, line:86:40>
| |   `-ParagraphComment 0x55887c3557e0 <line:85:6, line:86:40>
| |     |-TextComment 0x55887c355790 <line:85:6, col:77> Text=" The highest address location of free memory that is currently available"
| |     `-TextComment 0x55887c3557b0 <line:86:6, col:40> Text=" for use by the HOB producer phase."
| |-FieldDecl 0x55887c09afa8 <line:92:3, col:29> col:29 EfiFreeMemoryBottom 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | `-FullComment 0x55887c3558e0 <line:90:6, col:101>
| |   `-ParagraphComment 0x55887c3558b0 <col:6, col:101>
| |     `-TextComment 0x55887c355880 <col:6, col:101> Text=" The lowest address location of free memory that is available for use by the HOB producer phase."
| `-FieldDecl 0x55887c09b038 <line:96:3, col:29> col:29 EfiEndOfHobList 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
|   `-FullComment 0x55887c3559b0 <line:94:6, col:30>
|     `-ParagraphComment 0x55887c355980 <col:6, col:30>
|       `-TextComment 0x55887c355950 <col:6, col:30> Text=" The end of the HOB list."
|-TypedefDecl 0x55887c09b148 <line:60:1, line:97:3> col:3 referenced EFI_HOB_HANDOFF_INFO_TABLE 'struct EFI_HOB_HANDOFF_INFO_TABLE':'EFI_HOB_HANDOFF_INFO_TABLE'
| |-ElaboratedType 0x55887c09b0f0 'struct EFI_HOB_HANDOFF_INFO_TABLE' sugar
| | `-RecordType 0x55887c09ab90 'EFI_HOB_HANDOFF_INFO_TABLE'
| |   `-Record 0x55887c09ab10 ''
| `-FullComment 0x55887c355aa0 <line:57:4, line:58:51>
|   `-ParagraphComment 0x55887c355a70 <line:57:4, line:58:51>
|     |-TextComment 0x55887c355a20 <line:57:4, col:70> Text=" Contains general state information used by the HOB producer phase."
|     `-TextComment 0x55887c355a40 <line:58:4, col:51> Text=" This HOB must be the first one in the HOB list."
|-RecordDecl 0x55887c09b1e0 <line:104:9, line:137:1> line:104:9 struct definition
| |-FullComment 0x55887c355bc0 <line:100:4, line:102:48>
| | `-ParagraphComment 0x55887c355b90 <line:100:4, line:102:48>
| |   |-TextComment 0x55887c355b10 <line:100:4, col:50> Text=" EFI_HOB_MEMORY_ALLOCATION_HEADER describes the"
| |   |-TextComment 0x55887c355b30 <line:101:4, col:88> Text=" various attributes of the logical memory allocation. The type field will be used for"
| |   `-TextComment 0x55887c355b50 <line:102:4, col:48> Text=" subsequent inclusion in the UEFI memory map."
| |-FieldDecl 0x55887c09b2b8 <line:112:3, col:27> col:27 referenced Name 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c355d30 <line:106:6, line:110:20>
| |   `-ParagraphComment 0x55887c355d00 <line:106:6, line:110:20>
| |     |-TextComment 0x55887c355c30 <line:106:6, col:85> Text=" A GUID that defines the memory allocation region's type and purpose, as well as"
| |     |-TextComment 0x55887c355c50 <line:107:6, col:84> Text=" other fields within the memory allocation HOB. This GUID is used to define the"
| |     |-TextComment 0x55887c355c70 <line:108:6, col:87> Text=" additional data within the HOB that may be present for the memory allocation HOB."
| |     |-TextComment 0x55887c355c90 <line:109:6, col:76> Text=" Type EFI_GUID is defined in InstallProtocolInterface() in the UEFI 2.0"
| |     `-TextComment 0x55887c355cb0 <line:110:6, col:20> Text=" specification."
| |-FieldDecl 0x55887c09b348 <line:119:3, col:27> col:27 referenced MemoryBaseAddress 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | `-FullComment 0x55887c355e50 <line:115:6, line:117:20>
| |   `-ParagraphComment 0x55887c355e20 <line:115:6, line:117:20>
| |     |-TextComment 0x55887c355da0 <line:115:6, col:60> Text=" The base address of memory allocated by this HOB. Type"
| |     |-TextComment 0x55887c355dc0 <line:116:6, col:72> Text=" EFI_PHYSICAL_ADDRESS is defined in AllocatePages() in the UEFI 2.0"
| |     `-TextComment 0x55887c355de0 <line:117:6, col:20> Text=" specification."
| |-FieldDecl 0x55887c09b3d8 <line:124:3, col:27> col:27 referenced MemoryLength 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c355f20 <line:122:6, col:58>
| |   `-ParagraphComment 0x55887c355ef0 <col:6, col:58>
| |     `-TextComment 0x55887c355ec0 <col:6, col:58> Text=" The length in bytes of memory allocated by this HOB."
| |-FieldDecl 0x55887c09b490 <line:131:3, col:27> col:27 MemoryType 'EFI_MEMORY_TYPE':'EFI_MEMORY_TYPE'
| | `-FullComment 0x55887c356040 <line:127:6, line:129:55>
| |   `-ParagraphComment 0x55887c356010 <line:127:6, line:129:55>
| |     |-TextComment 0x55887c355f90 <line:127:6, col:82> Text=" Defines the type of memory allocated by this HOB. The memory type definition"
| |     |-TextComment 0x55887c355fb0 <line:128:6, col:77> Text=" follows the EFI_MEMORY_TYPE definition. Type EFI_MEMORY_TYPE is defined"
| |     `-TextComment 0x55887c355fd0 <line:129:6, col:55> Text=" in AllocatePages() in the UEFI 2.0 specification."
| `-FieldDecl 0x55887c09b568 <line:136:3, col:37> col:27 Reserved 'UINT8[4]'
|   `-FullComment 0x55887c356110 <line:134:6, col:42>
|     `-ParagraphComment 0x55887c3560e0 <col:6, col:42>
|       `-TextComment 0x55887c3560b0 <col:6, col:42> Text=" Padding for Itanium processor family"
|-TypedefDecl 0x55887c09b618 <line:104:1, line:137:3> col:3 referenced EFI_HOB_MEMORY_ALLOCATION_HEADER 'struct EFI_HOB_MEMORY_ALLOCATION_HEADER':'EFI_HOB_MEMORY_ALLOCATION_HEADER'
| |-ElaboratedType 0x55887c09b5c0 'struct EFI_HOB_MEMORY_ALLOCATION_HEADER' sugar
| | `-RecordType 0x55887c09b260 'EFI_HOB_MEMORY_ALLOCATION_HEADER'
| |   `-Record 0x55887c09b1e0 ''
| `-FullComment 0x55887c35a290 <line:100:4, line:102:48>
|   `-ParagraphComment 0x55887c356200 <line:100:4, line:102:48>
|     |-TextComment 0x55887c356180 <line:100:4, col:50> Text=" EFI_HOB_MEMORY_ALLOCATION_HEADER describes the"
|     |-TextComment 0x55887c3561a0 <line:101:4, col:88> Text=" various attributes of the logical memory allocation. The type field will be used for"
|     `-TextComment 0x55887c3561c0 <line:102:4, col:48> Text=" subsequent inclusion in the UEFI memory map."
|-RecordDecl 0x55887c09b6b0 <line:144:9, line:158:1> line:144:9 struct definition
| |-FullComment 0x55887c35a3b0 <line:140:4, line:142:72>
| | `-ParagraphComment 0x55887c35a380 <line:140:4, line:142:72>
| |   |-TextComment 0x55887c35a300 <line:140:4, col:60> Text=" Describes all memory ranges used during the HOB producer"
| |   |-TextComment 0x55887c35a320 <line:141:4, col:56> Text=" phase that exist outside the HOB list. This HOB type"
| |   `-TextComment 0x55887c35a340 <line:142:4, col:72> Text=" describes how memory is used, not the physical attributes of memory."
| |-FieldDecl 0x55887c09b788 <line:148:3, col:39> col:39 Header 'EFI_HOB_GENERIC_HEADER':'EFI_HOB_GENERIC_HEADER'
| | `-FullComment 0x55887c35a480 <line:146:6, col:78>
| |   `-ParagraphComment 0x55887c35a450 <col:6, col:78>
| |     `-TextComment 0x55887c35a420 <col:6, col:78> Text=" The HOB generic header. Header.HobType = EFI_HOB_TYPE_MEMORY_ALLOCATION."
| `-FieldDecl 0x55887c09b840 <line:153:3, col:39> col:39 AllocDescriptor 'EFI_HOB_MEMORY_ALLOCATION_HEADER':'EFI_HOB_MEMORY_ALLOCATION_HEADER'
|   `-FullComment 0x55887c35a570 <line:150:6, line:151:58>
|     `-ParagraphComment 0x55887c35a540 <line:150:6, line:151:58>
|       |-TextComment 0x55887c35a4f0 <line:150:6, col:76> Text=" An instance of the EFI_HOB_MEMORY_ALLOCATION_HEADER that describes the"
|       `-TextComment 0x55887c35a510 <line:151:6, col:58> Text=" various attributes of the logical memory allocation."
|-TypedefDecl 0x55887c09b8e8 <line:144:1, line:158:3> col:3 referenced EFI_HOB_MEMORY_ALLOCATION 'struct EFI_HOB_MEMORY_ALLOCATION':'EFI_HOB_MEMORY_ALLOCATION'
| |-ElaboratedType 0x55887c09b890 'struct EFI_HOB_MEMORY_ALLOCATION' sugar
| | `-RecordType 0x55887c09b730 'EFI_HOB_MEMORY_ALLOCATION'
| |   `-Record 0x55887c09b6b0 ''
| `-FullComment 0x55887c35a690 <line:140:4, line:142:72>
|   `-ParagraphComment 0x55887c35a660 <line:140:4, line:142:72>
|     |-TextComment 0x55887c35a5e0 <line:140:4, col:60> Text=" Describes all memory ranges used during the HOB producer"
|     |-TextComment 0x55887c35a600 <line:141:4, col:56> Text=" phase that exist outside the HOB list. This HOB type"
|     `-TextComment 0x55887c35a620 <line:142:4, col:72> Text=" describes how memory is used, not the physical attributes of memory."
|-RecordDecl 0x55887c09beb0 <line:165:9, line:175:1> line:165:9 struct definition
| |-FullComment 0x55887c35a7b0 <line:161:4, line:163:51>
| | `-ParagraphComment 0x55887c35a780 <line:161:4, line:163:51>
| |   |-TextComment 0x55887c35a700 <line:161:4, col:67> Text=" Describes the memory stack that is produced by the HOB producer"
| |   |-TextComment 0x55887c35a720 <line:162:4, col:61> Text=" phase and upon which all post-memory-installed executable"
| |   `-TextComment 0x55887c35a740 <line:163:4, col:51> Text=" content in the HOB producer phase is executing."
| |-FieldDecl 0x55887c09bf88 <line:169:3, col:39> col:39 Header 'EFI_HOB_GENERIC_HEADER':'EFI_HOB_GENERIC_HEADER'
| | `-FullComment 0x55887c35a880 <line:167:6, col:78>
| |   `-ParagraphComment 0x55887c35a850 <col:6, col:78>
| |     `-TextComment 0x55887c35a820 <col:6, col:78> Text=" The HOB generic header. Header.HobType = EFI_HOB_TYPE_MEMORY_ALLOCATION."
| `-FieldDecl 0x55887c09c018 <line:174:3, col:39> col:39 referenced AllocDescriptor 'EFI_HOB_MEMORY_ALLOCATION_HEADER':'EFI_HOB_MEMORY_ALLOCATION_HEADER'
|   `-FullComment 0x55887c35a970 <line:171:6, line:172:58>
|     `-ParagraphComment 0x55887c35a940 <line:171:6, line:172:58>
|       |-TextComment 0x55887c35a8f0 <line:171:6, col:76> Text=" An instance of the EFI_HOB_MEMORY_ALLOCATION_HEADER that describes the"
|       `-TextComment 0x55887c35a910 <line:172:6, col:58> Text=" various attributes of the logical memory allocation."
|-TypedefDecl 0x55887c09c0c8 <line:165:1, line:175:3> col:3 referenced EFI_HOB_MEMORY_ALLOCATION_STACK 'struct EFI_HOB_MEMORY_ALLOCATION_STACK':'EFI_HOB_MEMORY_ALLOCATION_STACK'
| |-ElaboratedType 0x55887c09c070 'struct EFI_HOB_MEMORY_ALLOCATION_STACK' sugar
| | `-RecordType 0x55887c09bf30 'EFI_HOB_MEMORY_ALLOCATION_STACK'
| |   `-Record 0x55887c09beb0 ''
| `-FullComment 0x55887c35aa90 <line:161:4, line:163:51>
|   `-ParagraphComment 0x55887c35aa60 <line:161:4, line:163:51>
|     |-TextComment 0x55887c35a9e0 <line:161:4, col:67> Text=" Describes the memory stack that is produced by the HOB producer"
|     |-TextComment 0x55887c35aa00 <line:162:4, col:61> Text=" phase and upon which all post-memory-installed executable"
|     `-TextComment 0x55887c35aa20 <line:163:4, col:51> Text=" content in the HOB producer phase is executing."
|-RecordDecl 0x55887c09c160 <line:183:9, line:193:1> line:183:9 struct definition
| |-FullComment 0x55887c35abd0 <line:178:4, line:181:28>
| | `-ParagraphComment 0x55887c35aba0 <line:178:4, line:181:28>
| |   |-TextComment 0x55887c35ab00 <line:178:4, col:42> Text=" Defines the location of the boot-strap"
| |   |-TextComment 0x55887c35ab20 <line:179:4, col:61> Text=" processor (BSP) BSPStore ("Backing Store Pointer Store")."
| |   |-TextComment 0x55887c35ab40 <line:180:4, col:59> Text=" This HOB is valid for the Itanium processor family only"
| |   `-TextComment 0x55887c35ab60 <line:181:4, col:28> Text=" register overflow store."
| |-FieldDecl 0x55887c09c238 <line:187:3, col:39> col:39 Header 'EFI_HOB_GENERIC_HEADER':'EFI_HOB_GENERIC_HEADER'
| | `-FullComment 0x55887c35aca0 <line:185:6, col:78>
| |   `-ParagraphComment 0x55887c35ac70 <col:6, col:78>
| |     `-TextComment 0x55887c35ac40 <col:6, col:78> Text=" The HOB generic header. Header.HobType = EFI_HOB_TYPE_MEMORY_ALLOCATION."
| `-FieldDecl 0x55887c09c2c8 <line:192:3, col:39> col:39 AllocDescriptor 'EFI_HOB_MEMORY_ALLOCATION_HEADER':'EFI_HOB_MEMORY_ALLOCATION_HEADER'
|   `-FullComment 0x55887c35ad90 <line:189:6, line:190:58>
|     `-ParagraphComment 0x55887c35ad60 <line:189:6, line:190:58>
|       |-TextComment 0x55887c35ad10 <line:189:6, col:76> Text=" An instance of the EFI_HOB_MEMORY_ALLOCATION_HEADER that describes the"
|       `-TextComment 0x55887c35ad30 <line:190:6, col:58> Text=" various attributes of the logical memory allocation."
|-TypedefDecl 0x55887c09c378 <line:183:1, line:193:3> col:3 referenced EFI_HOB_MEMORY_ALLOCATION_BSP_STORE 'struct EFI_HOB_MEMORY_ALLOCATION_BSP_STORE':'EFI_HOB_MEMORY_ALLOCATION_BSP_STORE'
| |-ElaboratedType 0x55887c09c320 'struct EFI_HOB_MEMORY_ALLOCATION_BSP_STORE' sugar
| | `-RecordType 0x55887c09c1e0 'EFI_HOB_MEMORY_ALLOCATION_BSP_STORE'
| |   `-Record 0x55887c09c160 ''
| `-FullComment 0x55887c35aed0 <line:178:4, line:181:28>
|   `-ParagraphComment 0x55887c35aea0 <line:178:4, line:181:28>
|     |-TextComment 0x55887c35ae00 <line:178:4, col:42> Text=" Defines the location of the boot-strap"
|     |-TextComment 0x55887c35ae20 <line:179:4, col:61> Text=" processor (BSP) BSPStore ("Backing Store Pointer Store")."
|     |-TextComment 0x55887c35ae40 <line:180:4, col:59> Text=" This HOB is valid for the Itanium processor family only"
|     `-TextComment 0x55887c35ae60 <line:181:4, col:28> Text=" register overflow store."
|-RecordDecl 0x55887c09c410 <line:198:9, line:218:1> line:198:9 struct definition
| |-FullComment 0x55887c35afa0 <line:196:4, col:67>
| | `-ParagraphComment 0x55887c35af70 <col:4, col:67>
| |   `-TextComment 0x55887c35af40 <col:4, col:67> Text=" Defines the location and entry point of the HOB consumer phase."
| |-FieldDecl 0x55887c09c4e8 <line:202:3, col:39> col:39 Header 'EFI_HOB_GENERIC_HEADER':'EFI_HOB_GENERIC_HEADER'
| | `-FullComment 0x55887c35b070 <line:200:6, col:78>
| |   `-ParagraphComment 0x55887c35b040 <col:6, col:78>
| |     `-TextComment 0x55887c35b010 <col:6, col:78> Text=" The HOB generic header. Header.HobType = EFI_HOB_TYPE_MEMORY_ALLOCATION."
| |-FieldDecl 0x55887c09c578 <line:207:3, col:39> col:39 MemoryAllocationHeader 'EFI_HOB_MEMORY_ALLOCATION_HEADER':'EFI_HOB_MEMORY_ALLOCATION_HEADER'
| | `-FullComment 0x55887c35b160 <line:204:6, line:205:58>
| |   `-ParagraphComment 0x55887c35b130 <line:204:6, line:205:58>
| |     |-TextComment 0x55887c35b0e0 <line:204:6, col:76> Text=" An instance of the EFI_HOB_MEMORY_ALLOCATION_HEADER that describes the"
| |     `-TextComment 0x55887c35b100 <line:205:6, col:58> Text=" various attributes of the logical memory allocation."
| |-FieldDecl 0x55887c09c608 <line:212:3, col:39> col:39 ModuleName 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c35b250 <line:209:6, line:210:53>
| |   `-ParagraphComment 0x55887c35b220 <line:209:6, line:210:53>
| |     |-TextComment 0x55887c35b1d0 <line:209:6, col:69> Text=" The GUID specifying the values of the firmware file system name"
| |     `-TextComment 0x55887c35b1f0 <line:210:6, col:53> Text=" that contains the HOB consumer phase component."
| `-FieldDecl 0x55887c09c698 <line:217:3, col:39> col:39 EntryPoint 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
|   `-FullComment 0x55887c35b340 <line:214:6, line:215:57>
|     `-ParagraphComment 0x55887c35b310 <line:214:6, line:215:57>
|       |-TextComment 0x55887c35b2c0 <line:214:6, col:54> Text=" The address of the memory-mapped firmware volume"
|       `-TextComment 0x55887c35b2e0 <line:215:6, col:57> Text=" that contains the HOB consumer phase firmware file."
|-TypedefDecl 0x55887c09c748 <line:198:1, line:218:3> col:3 referenced EFI_HOB_MEMORY_ALLOCATION_MODULE 'struct EFI_HOB_MEMORY_ALLOCATION_MODULE':'EFI_HOB_MEMORY_ALLOCATION_MODULE'
| |-ElaboratedType 0x55887c09c6f0 'struct EFI_HOB_MEMORY_ALLOCATION_MODULE' sugar
| | `-RecordType 0x55887c09c490 'EFI_HOB_MEMORY_ALLOCATION_MODULE'
| |   `-Record 0x55887c09c410 ''
| `-FullComment 0x55887c35b410 <line:196:4, col:67>
|   `-ParagraphComment 0x55887c35b3e0 <col:4, col:67>
|     `-TextComment 0x55887c35b3b0 <col:4, col:67> Text=" Defines the location and entry point of the HOB consumer phase."
|-TypedefDecl 0x55887c09c7f0 <line:223:1, col:16> col:16 referenced EFI_RESOURCE_TYPE 'UINT32':'unsigned int'
| |-TypedefType 0x55887c04a5d0 'UINT32' sugar
| | |-Typedef 0x55887c049a70 'UINT32'
| | `-BuiltinType 0x55887bfe9150 'unsigned int'
| `-FullComment 0x55887c35b4e0 <line:221:4, col:22>
|   `-ParagraphComment 0x55887c35b4b0 <col:4, col:22>
|     `-TextComment 0x55887c35b480 <col:4, col:22> Text=" The resource type."
|-TypedefDecl 0x55887c09c888 <line:249:1, col:16> col:16 referenced EFI_RESOURCE_ATTRIBUTE_TYPE 'UINT32':'unsigned int'
| |-TypedefType 0x55887c04a5d0 'UINT32' sugar
| | |-Typedef 0x55887c049a70 'UINT32'
| | `-BuiltinType 0x55887bfe9150 'unsigned int'
| `-FullComment 0x55887c35b5b0 <line:247:4, col:37>
|   `-ParagraphComment 0x55887c35b580 <col:4, col:37>
|     `-TextComment 0x55887c35b550 <col:4, col:37> Text=" A type of recount attribute type."
|-RecordDecl 0x55887c09c908 <line:313:9, line:339:1> line:313:9 struct definition
| |-FullComment 0x55887c35b6d0 <line:309:4, line:311:43>
| | `-ParagraphComment 0x55887c35b6a0 <line:309:4, line:311:43>
| |   |-TextComment 0x55887c35b620 <line:309:4, col:51> Text=" Describes the resource properties of all fixed,"
| |   |-TextComment 0x55887c35b640 <line:310:4, col:57> Text=" nonrelocatable resource ranges found on the processor"
| |   `-TextComment 0x55887c35b660 <line:311:4, col:43> Text=" host bus during the HOB producer phase."
| |-FieldDecl 0x55887c09c9e8 <line:317:3, col:34> col:34 Header 'EFI_HOB_GENERIC_HEADER':'EFI_HOB_GENERIC_HEADER'
| | `-FullComment 0x55887c35b7a0 <line:315:6, col:80>
| |   `-ParagraphComment 0x55887c35b770 <col:6, col:80>
| |     `-TextComment 0x55887c35b740 <col:6, col:80> Text=" The HOB generic header. Header.HobType = EFI_HOB_TYPE_RESOURCE_DESCRIPTOR."
| |-FieldDecl 0x55887c09ca78 <line:322:3, col:34> col:34 Owner 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c35b890 <line:319:6, line:320:76>
| |   `-ParagraphComment 0x55887c35b860 <line:319:6, line:320:76>
| |     |-TextComment 0x55887c35b810 <line:319:6, col:77> Text=" A GUID representing the owner of the resource. This GUID is used by HOB"
| |     `-TextComment 0x55887c35b830 <line:320:6, col:76> Text=" consumer phase components to correlate device ownership of a resource."
| |-FieldDecl 0x55887c09cb30 <line:326:3, col:34> col:34 ResourceType 'EFI_RESOURCE_TYPE':'unsigned int'
| | `-FullComment 0x55887c35b960 <line:324:6, col:68>
| |   `-ParagraphComment 0x55887c35b930 <col:6, col:68>
| |     `-TextComment 0x55887c35b900 <col:6, col:68> Text=" The resource type enumeration as defined by EFI_RESOURCE_TYPE."
| |-FieldDecl 0x55887c09cbe0 <line:330:3, col:34> col:34 ResourceAttribute 'EFI_RESOURCE_ATTRIBUTE_TYPE':'unsigned int'
| | `-FullComment 0x55887c35ba30 <line:328:6, col:68>
| |   `-ParagraphComment 0x55887c35ba00 <col:6, col:68>
| |     `-TextComment 0x55887c35b9d0 <col:6, col:68> Text=" Resource attributes as defined by EFI_RESOURCE_ATTRIBUTE_TYPE."
| |-FieldDecl 0x55887c09cc68 <line:334:3, col:34> col:34 PhysicalStart 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | `-FullComment 0x55887c35bb00 <line:332:6, col:56>
| |   `-ParagraphComment 0x55887c35bad0 <col:6, col:56>
| |     `-TextComment 0x55887c35baa0 <col:6, col:56> Text=" The physical start address of the resource region."
| `-FieldDecl 0x55887c09ccf8 <line:338:3, col:34> col:34 ResourceLength 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c35bbd0 <line:336:6, col:49>
|     `-ParagraphComment 0x55887c35bba0 <col:6, col:49>
|       `-TextComment 0x55887c35bb70 <col:6, col:49> Text=" The number of bytes of the resource region."
|-TypedefDecl 0x55887c09cda8 <line:313:1, line:339:3> col:3 referenced EFI_HOB_RESOURCE_DESCRIPTOR 'struct EFI_HOB_RESOURCE_DESCRIPTOR':'EFI_HOB_RESOURCE_DESCRIPTOR'
| |-ElaboratedType 0x55887c09cd50 'struct EFI_HOB_RESOURCE_DESCRIPTOR' sugar
| | `-RecordType 0x55887c09c990 'EFI_HOB_RESOURCE_DESCRIPTOR'
| |   `-Record 0x55887c09c908 ''
| `-FullComment 0x55887c35bcf0 <line:309:4, line:311:43>
|   `-ParagraphComment 0x55887c35bcc0 <line:309:4, line:311:43>
|     |-TextComment 0x55887c35bc40 <line:309:4, col:51> Text=" Describes the resource properties of all fixed,"
|     |-TextComment 0x55887c35bc60 <line:310:4, col:57> Text=" nonrelocatable resource ranges found on the processor"
|     `-TextComment 0x55887c35bc80 <line:311:4, col:43> Text=" host bus during the HOB producer phase."
|-RecordDecl 0x55887c09f520 <line:345:9, line:357:1> line:345:9 struct definition
| |-FullComment 0x55887c35bde0 <line:342:4, line:343:48>
| | `-ParagraphComment 0x55887c35bdb0 <line:342:4, line:343:48>
| |   |-TextComment 0x55887c35bd60 <line:342:4, col:69> Text=" Allows writers of executable content in the HOB producer phase to"
| |   `-TextComment 0x55887c35bd80 <line:343:4, col:48> Text=" maintain and manage HOBs with specific GUID."
| |-FieldDecl 0x55887c09f5f8 <line:349:3, col:29> col:29 Header 'EFI_HOB_GENERIC_HEADER':'EFI_HOB_GENERIC_HEADER'
| | `-FullComment 0x55887c35beb0 <line:347:6, col:75>
| |   `-ParagraphComment 0x55887c35be80 <col:6, col:75>
| |     `-TextComment 0x55887c35be50 <col:6, col:75> Text=" The HOB generic header. Header.HobType = EFI_HOB_TYPE_GUID_EXTENSION."
| `-FieldDecl 0x55887c09f688 <line:353:3, col:29> col:29 Name 'EFI_GUID':'GUID'
|   `-FullComment 0x55887c35bf80 <line:351:6, col:51>
|     `-ParagraphComment 0x55887c35bf50 <col:6, col:51>
|       `-TextComment 0x55887c35bf20 <col:6, col:51> Text=" A GUID that defines the contents of this HOB."
|-TypedefDecl 0x55887c09f738 <line:345:1, line:357:3> col:3 referenced EFI_HOB_GUID_TYPE 'struct EFI_HOB_GUID_TYPE':'EFI_HOB_GUID_TYPE'
| |-ElaboratedType 0x55887c09f6e0 'struct EFI_HOB_GUID_TYPE' sugar
| | `-RecordType 0x55887c09f5a0 'EFI_HOB_GUID_TYPE'
| |   `-Record 0x55887c09f520 ''
| `-FullComment 0x55887c35c070 <line:342:4, line:343:48>
|   `-ParagraphComment 0x55887c35c040 <line:342:4, line:343:48>
|     |-TextComment 0x55887c35bff0 <line:342:4, col:69> Text=" Allows writers of executable content in the HOB producer phase to"
|     `-TextComment 0x55887c35c010 <line:343:4, col:48> Text=" maintain and manage HOBs with specific GUID."
|-RecordDecl 0x55887c09f7d0 <line:362:9, line:375:1> line:362:9 struct definition
| |-FullComment 0x55887c35c140 <line:360:4, col:73>
| | `-ParagraphComment 0x55887c35c110 <col:4, col:73>
| |   `-TextComment 0x55887c35c0e0 <col:4, col:73> Text=" Details the location of firmware volumes that contain firmware files."
| |-FieldDecl 0x55887c09f8a8 <line:366:3, col:29> col:29 Header 'EFI_HOB_GENERIC_HEADER':'EFI_HOB_GENERIC_HEADER'
| | `-FullComment 0x55887c35c210 <line:364:6, col:63>
| |   `-ParagraphComment 0x55887c35c1e0 <col:6, col:63>
| |     `-TextComment 0x55887c35c1b0 <col:6, col:63> Text=" The HOB generic header. Header.HobType = EFI_HOB_TYPE_FV."
| |-FieldDecl 0x55887c09f938 <line:370:3, col:29> col:29 BaseAddress 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | `-FullComment 0x55887c35c300 <line:368:6, col:69>
| |   `-ParagraphComment 0x55887c35c2d0 <col:6, col:69>
| |     `-TextComment 0x55887c35c2a0 <col:6, col:69> Text=" The physical memory-mapped base address of the firmware volume."
| `-FieldDecl 0x55887c09f9c8 <line:374:3, col:29> col:29 Length 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c35c3d0 <line:372:6, col:49>
|     `-ParagraphComment 0x55887c35c3a0 <col:6, col:49>
|       `-TextComment 0x55887c35c370 <col:6, col:49> Text=" The length in bytes of the firmware volume."
|-TypedefDecl 0x55887c09fa78 <line:362:1, line:375:3> col:3 referenced EFI_HOB_FIRMWARE_VOLUME 'struct EFI_HOB_FIRMWARE_VOLUME':'EFI_HOB_FIRMWARE_VOLUME'
| |-ElaboratedType 0x55887c09fa20 'struct EFI_HOB_FIRMWARE_VOLUME' sugar
| | `-RecordType 0x55887c09f850 'EFI_HOB_FIRMWARE_VOLUME'
| |   `-Record 0x55887c09f7d0 ''
| `-FullComment 0x55887c35c4a0 <line:360:4, col:73>
|   `-ParagraphComment 0x55887c35c470 <col:4, col:73>
|     `-TextComment 0x55887c35c440 <col:4, col:73> Text=" Details the location of firmware volumes that contain firmware files."
|-RecordDecl 0x55887c09fb10 <line:381:9, line:402:1> line:381:9 struct definition
| |-FullComment 0x55887c35c590 <line:378:4, line:379:47>
| | `-ParagraphComment 0x55887c35c560 <line:378:4, line:379:47>
| |   |-TextComment 0x55887c35c510 <line:378:4, col:64> Text=" Details the location of a firmware volume that was extracted"
| |   `-TextComment 0x55887c35c530 <line:379:4, col:47> Text=" from a file within another firmware volume."
| |-FieldDecl 0x55887c09fbe8 <line:385:3, col:29> col:29 Header 'EFI_HOB_GENERIC_HEADER':'EFI_HOB_GENERIC_HEADER'
| | `-FullComment 0x55887c35c660 <line:383:6, col:64>
| |   `-ParagraphComment 0x55887c35c630 <col:6, col:64>
| |     `-TextComment 0x55887c35c600 <col:6, col:64> Text=" The HOB generic header. Header.HobType = EFI_HOB_TYPE_FV2."
| |-FieldDecl 0x55887c09fc78 <line:389:3, col:29> col:29 BaseAddress 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | `-FullComment 0x55887c35c730 <line:387:6, col:69>
| |   `-ParagraphComment 0x55887c35c700 <col:6, col:69>
| |     `-TextComment 0x55887c35c6d0 <col:6, col:69> Text=" The physical memory-mapped base address of the firmware volume."
| |-FieldDecl 0x55887c09fd08 <line:393:3, col:29> col:29 Length 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c35c800 <line:391:6, col:49>
| |   `-ParagraphComment 0x55887c35c7d0 <col:6, col:49>
| |     `-TextComment 0x55887c35c7a0 <col:6, col:49> Text=" The length in bytes of the firmware volume."
| |-FieldDecl 0x55887c09fd98 <line:397:3, col:29> col:29 FvName 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c35c8d0 <line:395:6, col:38>
| |   `-ParagraphComment 0x55887c35c8a0 <col:6, col:38>
| |     `-TextComment 0x55887c35c870 <col:6, col:38> Text=" The name of the firmware volume."
| `-FieldDecl 0x55887c09fe28 <line:401:3, col:29> col:29 FileName 'EFI_GUID':'GUID'
|   `-FullComment 0x55887c35c9a0 <line:399:6, col:72>
|     `-ParagraphComment 0x55887c35c970 <col:6, col:72>
|       `-TextComment 0x55887c35c940 <col:6, col:72> Text=" The name of the firmware file that contained this firmware volume."
|-TypedefDecl 0x55887c09fed8 <line:381:1, line:402:3> col:3 referenced EFI_HOB_FIRMWARE_VOLUME2 'struct EFI_HOB_FIRMWARE_VOLUME2':'EFI_HOB_FIRMWARE_VOLUME2'
| |-ElaboratedType 0x55887c09fe80 'struct EFI_HOB_FIRMWARE_VOLUME2' sugar
| | `-RecordType 0x55887c09fb90 'EFI_HOB_FIRMWARE_VOLUME2'
| |   `-Record 0x55887c09fb10 ''
| `-FullComment 0x55887c35ca90 <line:378:4, line:379:47>
|   `-ParagraphComment 0x55887c35ca60 <line:378:4, line:379:47>
|     |-TextComment 0x55887c35ca10 <line:378:4, col:64> Text=" Details the location of a firmware volume that was extracted"
|     `-TextComment 0x55887c35ca30 <line:379:4, col:47> Text=" from a file within another firmware volume."
|-RecordDecl 0x55887c09ff70 <line:408:9, line:440:1> line:408:9 struct definition
| |-FullComment 0x55887c35cb80 <line:405:4, line:406:47>
| | `-ParagraphComment 0x55887c35cb50 <line:405:4, line:406:47>
| |   |-TextComment 0x55887c35cb00 <line:405:4, col:64> Text=" Details the location of a firmware volume that was extracted"
| |   `-TextComment 0x55887c35cb20 <line:406:4, col:47> Text=" from a file within another firmware volume."
| |-FieldDecl 0x55887c0a0048 <line:412:3, col:29> col:29 Header 'EFI_HOB_GENERIC_HEADER':'EFI_HOB_GENERIC_HEADER'
| | `-FullComment 0x55887c35cc50 <line:410:6, col:64>
| |   `-ParagraphComment 0x55887c35cc20 <col:6, col:64>
| |     `-TextComment 0x55887c35cbf0 <col:6, col:64> Text=" The HOB generic header. Header.HobType = EFI_HOB_TYPE_FV3."
| |-FieldDecl 0x55887c0a00d8 <line:416:3, col:29> col:29 BaseAddress 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | `-FullComment 0x55887c35cd20 <line:414:6, col:69>
| |   `-ParagraphComment 0x55887c35ccf0 <col:6, col:69>
| |     `-TextComment 0x55887c35ccc0 <col:6, col:69> Text=" The physical memory-mapped base address of the firmware volume."
| |-FieldDecl 0x55887c0a0168 <line:420:3, col:29> col:29 Length 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c35cdf0 <line:418:6, col:49>
| |   `-ParagraphComment 0x55887c35cdc0 <col:6, col:49>
| |     `-TextComment 0x55887c35cd90 <col:6, col:49> Text=" The length in bytes of the firmware volume."
| |-FieldDecl 0x55887c0a01f8 <line:424:3, col:29> col:29 AuthenticationStatus 'UINT32':'unsigned int'
| | `-FullComment 0x55887c35cec0 <line:422:6, col:32>
| |   `-ParagraphComment 0x55887c35ce90 <col:6, col:32>
| |     `-TextComment 0x55887c35ce60 <col:6, col:32> Text=" The authentication status."
| |-FieldDecl 0x55887c0a0288 <line:429:3, col:29> col:29 ExtractedFv 'BOOLEAN':'unsigned char'
| | `-FullComment 0x55887c35cfb0 <line:426:6, line:427:22>
| |   `-ParagraphComment 0x55887c35cf80 <line:426:6, line:427:22>
| |     |-TextComment 0x55887c35cf30 <line:426:6, col:76> Text=" TRUE if the FV was extracted as a file within another firmware volume."
| |     `-TextComment 0x55887c35cf50 <line:427:6, col:22> Text=" FALSE otherwise."
| |-FieldDecl 0x55887c0a0318 <line:434:3, col:29> col:29 FvName 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c35d0a0 <line:431:6, line:432:42>
| |   `-ParagraphComment 0x55887c35d070 <line:431:6, line:432:42>
| |     |-TextComment 0x55887c35d020 <line:431:6, col:38> Text=" The name of the firmware volume."
| |     `-TextComment 0x55887c35d040 <line:432:6, col:42> Text=" Valid only if IsExtractedFv is TRUE."
| `-FieldDecl 0x55887c0a03a8 <line:439:3, col:29> col:29 FileName 'EFI_GUID':'GUID'
|   `-FullComment 0x55887c35d190 <line:436:6, line:437:42>
|     `-ParagraphComment 0x55887c35d160 <line:436:6, line:437:42>
|       |-TextComment 0x55887c35d110 <line:436:6, col:72> Text=" The name of the firmware file that contained this firmware volume."
|       `-TextComment 0x55887c35d130 <line:437:6, col:42> Text=" Valid only if IsExtractedFv is TRUE."
|-TypedefDecl 0x55887c0a0458 <line:408:1, line:440:3> col:3 referenced EFI_HOB_FIRMWARE_VOLUME3 'struct EFI_HOB_FIRMWARE_VOLUME3':'EFI_HOB_FIRMWARE_VOLUME3'
| |-ElaboratedType 0x55887c0a0400 'struct EFI_HOB_FIRMWARE_VOLUME3' sugar
| | `-RecordType 0x55887c09fff0 'EFI_HOB_FIRMWARE_VOLUME3'
| |   `-Record 0x55887c09ff70 ''
| `-FullComment 0x55887c35d280 <line:405:4, line:406:47>
|   `-ParagraphComment 0x55887c35d250 <line:405:4, line:406:47>
|     |-TextComment 0x55887c35d200 <line:405:4, col:64> Text=" Details the location of a firmware volume that was extracted"
|     `-TextComment 0x55887c35d220 <line:406:4, col:47> Text=" from a file within another firmware volume."
|-RecordDecl 0x55887c0a0a70 <line:445:9, line:462:1> line:445:9 struct definition
| |-FullComment 0x55887c35d350 <line:443:4, col:86>
| | `-ParagraphComment 0x55887c35d320 <col:4, col:86>
| |   `-TextComment 0x55887c35d2f0 <col:4, col:86> Text=" Describes processor information, such as address space and I/O space capabilities."
| |-FieldDecl 0x55887c0a0b48 <line:449:3, col:29> col:29 Header 'EFI_HOB_GENERIC_HEADER':'EFI_HOB_GENERIC_HEADER'
| | `-FullComment 0x55887c35d420 <line:447:6, col:64>
| |   `-ParagraphComment 0x55887c35d3f0 <col:6, col:64>
| |     `-TextComment 0x55887c35d3c0 <col:6, col:64> Text=" The HOB generic header. Header.HobType = EFI_HOB_TYPE_CPU."
| |-FieldDecl 0x55887c0a0bd8 <line:453:3, col:29> col:29 SizeOfMemorySpace 'UINT8':'unsigned char'
| | `-FullComment 0x55887c35d4f0 <line:451:6, col:77>
| |   `-ParagraphComment 0x55887c35d4c0 <col:6, col:77>
| |     `-TextComment 0x55887c35d490 <col:6, col:77> Text=" Identifies the maximum physical memory addressability of the processor."
| |-FieldDecl 0x55887c0a0c68 <line:457:3, col:29> col:29 SizeOfIoSpace 'UINT8':'unsigned char'
| | `-FullComment 0x55887c35d5c0 <line:455:6, col:74>
| |   `-ParagraphComment 0x55887c35d590 <col:6, col:74>
| |     `-TextComment 0x55887c35d560 <col:6, col:74> Text=" Identifies the maximum physical I/O addressability of the processor."
| `-FieldDecl 0x55887c0a0dc8 <line:461:3, col:39> col:29 Reserved 'UINT8[6]'
|   `-FullComment 0x55887c35d690 <line:459:6, col:44>
|     `-ParagraphComment 0x55887c35d660 <col:6, col:44>
|       `-TextComment 0x55887c35d630 <col:6, col:44> Text=" This field will always be set to zero."
|-TypedefDecl 0x55887c0a0e78 <line:445:1, line:462:3> col:3 referenced EFI_HOB_CPU 'struct EFI_HOB_CPU':'EFI_HOB_CPU'
| |-ElaboratedType 0x55887c0a0e20 'struct EFI_HOB_CPU' sugar
| | `-RecordType 0x55887c0a0af0 'EFI_HOB_CPU'
| |   `-Record 0x55887c0a0a70 ''
| `-FullComment 0x55887c35d760 <line:443:4, col:86>
|   `-ParagraphComment 0x55887c35d730 <col:4, col:86>
|     `-TextComment 0x55887c35d700 <col:4, col:86> Text=" Describes processor information, such as address space and I/O space capabilities."
|-RecordDecl 0x55887c0a0f10 <line:467:9, line:472:1> line:467:9 struct definition
| |-FullComment 0x55887c35d830 <line:465:4, col:38>
| | `-ParagraphComment 0x55887c35d800 <col:4, col:38>
| |   `-TextComment 0x55887c35d7d0 <col:4, col:38> Text=" Describes pool memory allocations."
| `-FieldDecl 0x55887c0a0fe8 <line:471:3, col:29> col:29 Header 'EFI_HOB_GENERIC_HEADER':'EFI_HOB_GENERIC_HEADER'
|   `-FullComment 0x55887c35d900 <line:469:6, col:72>
|     `-ParagraphComment 0x55887c35d8d0 <col:6, col:72>
|       `-TextComment 0x55887c35d8a0 <col:6, col:72> Text=" The HOB generic header. Header.HobType = EFI_HOB_TYPE_MEMORY_POOL."
|-TypedefDecl 0x55887c0a1098 <line:467:1, line:472:3> col:3 referenced EFI_HOB_MEMORY_POOL 'struct EFI_HOB_MEMORY_POOL':'EFI_HOB_MEMORY_POOL'
| |-ElaboratedType 0x55887c0a1040 'struct EFI_HOB_MEMORY_POOL' sugar
| | `-RecordType 0x55887c0a0f90 'EFI_HOB_MEMORY_POOL'
| |   `-Record 0x55887c0a0f10 ''
| `-FullComment 0x55887c35d9d0 <line:465:4, col:38>
|   `-ParagraphComment 0x55887c35d9a0 <col:4, col:38>
|     `-TextComment 0x55887c35d970 <col:4, col:38> Text=" Describes pool memory allocations."
|-RecordDecl 0x55887c0a1130 <line:481:9, line:494:1> line:481:9 struct definition
| |-FullComment 0x55887c35db40 <line:475:4, line:479:75>
| | `-ParagraphComment 0x55887c35db10 <line:475:4, line:479:75>
| |   |-TextComment 0x55887c35da40 <line:475:4, col:103> Text=" Each UEFI capsule HOB details the location of a UEFI capsule. It includes a base address and length"
| |   |-TextComment 0x55887c35da60 <line:476:4, col:82> Text=" which is based upon memory blocks with a EFI_CAPSULE_HEADER and the associated"
| |   |-TextComment 0x55887c35da80 <line:477:4, col:88> Text=" CapsuleImageSize-based payloads. These HOB's shall be created by the PEI PI firmware"
| |   |-TextComment 0x55887c35daa0 <line:478:4, col:69> Text=" sometime after the UEFI UpdateCapsule service invocation with the"
| |   `-TextComment 0x55887c35dac0 <line:479:4, col:75> Text=" CAPSULE_FLAGS_POPULATE_SYSTEM_TABLE flag set in the EFI_CAPSULE_HEADER."
| |-FieldDecl 0x55887c0a1208 <line:485:3, col:29> col:29 Header 'EFI_HOB_GENERIC_HEADER':'EFI_HOB_GENERIC_HEADER'
| | `-FullComment 0x55887c35dc10 <line:483:6, col:78>
| |   `-ParagraphComment 0x55887c35dbe0 <col:6, col:78>
| |     `-TextComment 0x55887c35dbb0 <col:6, col:78> Text=" The HOB generic header where Header.HobType = EFI_HOB_TYPE_UEFI_CAPSULE."
| |-FieldDecl 0x55887c0a1298 <line:492:3, col:29> col:29 BaseAddress 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | `-FullComment 0x55887c35dd30 <line:488:6, line:490:51>
| |   `-ParagraphComment 0x55887c35dd00 <line:488:6, line:490:51>
| |     |-TextComment 0x55887c35dc80 <line:488:6, col:86> Text=" The physical memory-mapped base address of an UEFI capsule. This value is set to"
| |     |-TextComment 0x55887c35dca0 <line:489:6, col:69> Text=" point to the base of the contiguous memory of the UEFI capsule."
| |     `-TextComment 0x55887c35dcc0 <line:490:6, col:51> Text=" The length of the contiguous memory in bytes."
| `-FieldDecl 0x55887c0a12f8 <line:493:3, col:29> col:29 Length 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c0a13a8 <line:481:1, line:494:3> col:3 referenced EFI_HOB_UEFI_CAPSULE 'struct EFI_HOB_UEFI_CAPSULE':'EFI_HOB_UEFI_CAPSULE'
| |-ElaboratedType 0x55887c0a1350 'struct EFI_HOB_UEFI_CAPSULE' sugar
| | `-RecordType 0x55887c0a11b0 'EFI_HOB_UEFI_CAPSULE'
| |   `-Record 0x55887c0a1130 ''
| `-FullComment 0x55887c35dea0 <line:475:4, line:479:75>
|   `-ParagraphComment 0x55887c35de70 <line:475:4, line:479:75>
|     |-TextComment 0x55887c35dda0 <line:475:4, col:103> Text=" Each UEFI capsule HOB details the location of a UEFI capsule. It includes a base address and length"
|     |-TextComment 0x55887c35ddc0 <line:476:4, col:82> Text=" which is based upon memory blocks with a EFI_CAPSULE_HEADER and the associated"
|     |-TextComment 0x55887c35dde0 <line:477:4, col:88> Text=" CapsuleImageSize-based payloads. These HOB's shall be created by the PEI PI firmware"
|     |-TextComment 0x55887c35de00 <line:478:4, col:69> Text=" sometime after the UEFI UpdateCapsule service invocation with the"
|     `-TextComment 0x55887c35de20 <line:479:4, col:75> Text=" CAPSULE_FLAGS_POPULATE_SYSTEM_TABLE flag set in the EFI_CAPSULE_HEADER."
|-RecordDecl 0x55887c0a1440 <line:499:9, line:515:1> line:499:9 union definition
| |-FullComment 0x55887c35df70 <line:497:4, col:40>
| | `-ParagraphComment 0x55887c35df40 <col:4, col:40>
| |   `-TextComment 0x55887c35df10 <col:4, col:40> Text=" Union of all the possible HOB Types."
| |-FieldDecl 0x55887c0a1548 <line:500:3, col:43> col:43 Header 'EFI_HOB_GENERIC_HEADER *'
| |-FieldDecl 0x55887c0a1628 <line:501:3, col:43> col:43 HandoffInformationTable 'EFI_HOB_HANDOFF_INFO_TABLE *'
| |-FieldDecl 0x55887c0a1708 <line:502:3, col:43> col:43 MemoryAllocation 'EFI_HOB_MEMORY_ALLOCATION *'
| |-FieldDecl 0x55887c0a17e8 <line:503:3, col:43> col:43 MemoryAllocationBspStore 'EFI_HOB_MEMORY_ALLOCATION_BSP_STORE *'
| |-FieldDecl 0x55887c0a18c8 <line:504:3, col:43> col:43 referenced MemoryAllocationStack 'EFI_HOB_MEMORY_ALLOCATION_STACK *'
| |-FieldDecl 0x55887c0a19a8 <line:505:3, col:43> col:43 MemoryAllocationModule 'EFI_HOB_MEMORY_ALLOCATION_MODULE *'
| |-FieldDecl 0x55887c0a2bb8 <line:506:3, col:43> col:43 ResourceDescriptor 'EFI_HOB_RESOURCE_DESCRIPTOR *'
| |-FieldDecl 0x55887c0a2c98 <line:507:3, col:43> col:43 Guid 'EFI_HOB_GUID_TYPE *'
| |-FieldDecl 0x55887c0a2d78 <line:508:3, col:43> col:43 FirmwareVolume 'EFI_HOB_FIRMWARE_VOLUME *'
| |-FieldDecl 0x55887c0a2e58 <line:509:3, col:43> col:43 FirmwareVolume2 'EFI_HOB_FIRMWARE_VOLUME2 *'
| |-FieldDecl 0x55887c0a2f38 <line:510:3, col:43> col:43 FirmwareVolume3 'EFI_HOB_FIRMWARE_VOLUME3 *'
| |-FieldDecl 0x55887c0a3018 <line:511:3, col:43> col:43 Cpu 'EFI_HOB_CPU *'
| |-FieldDecl 0x55887c0a30f8 <line:512:3, col:43> col:43 Pool 'EFI_HOB_MEMORY_POOL *'
| |-FieldDecl 0x55887c0a31d8 <line:513:3, col:43> col:43 Capsule 'EFI_HOB_UEFI_CAPSULE *'
| `-FieldDecl 0x55887c0a3298 <line:514:3, col:43> col:43 referenced Raw 'UINT8 *'
|-TypedefDecl 0x55887c0a3348 <line:499:1, line:515:3> col:3 referenced EFI_PEI_HOB_POINTERS 'union EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS'
| |-ElaboratedType 0x55887c0a32f0 'union EFI_PEI_HOB_POINTERS' sugar
| | `-RecordType 0x55887c0a14c0 'EFI_PEI_HOB_POINTERS'
| |   `-Record 0x55887c0a1440 ''
| `-FullComment 0x55887c35e040 <line:497:4, col:40>
|   `-ParagraphComment 0x55887c35e010 <col:4, col:40>
|     `-TextComment 0x55887c35dfe0 <col:4, col:40> Text=" Union of all the possible HOB Types."
|-RecordDecl 0x55887c0a3560 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:57:9, line:77:1> line:57:9 struct definition
| |-FullComment 0x55887c35e130 <line:54:4, line:55:44>
| | `-ParagraphComment 0x55887c35e100 <line:54:4, line:55:44>
| |   |-TextComment 0x55887c35e0b0 <line:54:4, col:74> Text=" PE images can start with an optional DOS header, so if an image is run"
| |   `-TextComment 0x55887c35e0d0 <line:55:4, col:44> Text=" under DOS it can print an error message."
| |-FieldDecl 0x55887c0a3610 <line:58:3, col:13> col:13 e_magic 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35e200 <col:29, col:42>
| |   `-ParagraphComment 0x55887c35e1d0 <col:29, col:42>
| |     `-TextComment 0x55887c35e1a0 <col:29, col:42> Text=" Magic number."
| |-FieldDecl 0x55887c0a3698 <line:59:3, col:13> col:13 e_cblp 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35e2e0 <col:29, col:56>
| |   `-ParagraphComment 0x55887c35e2b0 <col:29, col:56>
| |     `-TextComment 0x55887c35e270 <col:29, col:56> Text=" Bytes on last page of file."
| |-FieldDecl 0x55887c0a3728 <line:60:3, col:13> col:13 e_cp 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35e3b0 <col:29, col:43>
| |   `-ParagraphComment 0x55887c35e380 <col:29, col:43>
| |     `-TextComment 0x55887c35e350 <col:29, col:43> Text=" Pages in file."
| |-FieldDecl 0x55887c0a37b8 <line:61:3, col:13> col:13 e_crlc 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35e480 <col:29, col:41>
| |   `-ParagraphComment 0x55887c35e450 <col:29, col:41>
| |     `-TextComment 0x55887c35e420 <col:29, col:41> Text=" Relocations."
| |-FieldDecl 0x55887c0a3848 <line:62:3, col:13> col:13 e_cparhdr 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35e550 <col:29, col:58>
| |   `-ParagraphComment 0x55887c35e520 <col:29, col:58>
| |     `-TextComment 0x55887c35e4f0 <col:29, col:58> Text=" Size of header in paragraphs."
| |-FieldDecl 0x55887c0a38d8 <line:63:3, col:13> col:13 e_minalloc 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35e620 <col:29, col:61>
| |   `-ParagraphComment 0x55887c35e5f0 <col:29, col:61>
| |     `-TextComment 0x55887c35e5c0 <col:29, col:61> Text=" Minimum extra paragraphs needed."
| |-FieldDecl 0x55887c0a3968 <line:64:3, col:13> col:13 e_maxalloc 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35e6f0 <col:29, col:61>
| |   `-ParagraphComment 0x55887c35e6c0 <col:29, col:61>
| |     `-TextComment 0x55887c35e690 <col:29, col:61> Text=" Maximum extra paragraphs needed."
| |-FieldDecl 0x55887c0a39f8 <line:65:3, col:13> col:13 e_ss 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35e7c0 <col:29, col:57>
| |   `-ParagraphComment 0x55887c35e790 <col:29, col:57>
| |     `-TextComment 0x55887c35e760 <col:29, col:57> Text=" Initial (relative) SS value."
| |-FieldDecl 0x55887c0a3a88 <line:66:3, col:13> col:13 e_sp 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35e890 <col:29, col:46>
| |   `-ParagraphComment 0x55887c35e860 <col:29, col:46>
| |     `-TextComment 0x55887c35e830 <col:29, col:46> Text=" Initial SP value."
| |-FieldDecl 0x55887c0a3b18 <line:67:3, col:13> col:13 e_csum 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35e960 <col:29, col:38>
| |   `-ParagraphComment 0x55887c35e930 <col:29, col:38>
| |     `-TextComment 0x55887c35e900 <col:29, col:38> Text=" Checksum."
| |-FieldDecl 0x55887c0a7298 <line:68:3, col:13> col:13 e_ip 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35ea30 <col:29, col:46>
| |   `-ParagraphComment 0x55887c35ea00 <col:29, col:46>
| |     `-TextComment 0x55887c35e9d0 <col:29, col:46> Text=" Initial IP value."
| |-FieldDecl 0x55887c0a7328 <line:69:3, col:13> col:13 e_cs 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35eb00 <col:29, col:57>
| |   `-ParagraphComment 0x55887c35ead0 <col:29, col:57>
| |     `-TextComment 0x55887c35eaa0 <col:29, col:57> Text=" Initial (relative) CS value."
| |-FieldDecl 0x55887c0a73b8 <line:70:3, col:13> col:13 e_lfarlc 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35ebd0 <col:29, col:62>
| |   `-ParagraphComment 0x55887c35eba0 <col:29, col:62>
| |     `-TextComment 0x55887c35eb70 <col:29, col:62> Text=" File address of relocation table."
| |-FieldDecl 0x55887c0a7448 <line:71:3, col:13> col:13 e_ovno 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35eca0 <col:29, col:44>
| |   `-ParagraphComment 0x55887c35ec70 <col:29, col:44>
| |     `-TextComment 0x55887c35ec40 <col:29, col:44> Text=" Overlay number."
| |-FieldDecl 0x55887c0a75a8 <line:72:3, col:20> col:13 e_res 'UINT16[4]'
| | `-FullComment 0x55887c35ed70 <col:29, col:44>
| |   `-ParagraphComment 0x55887c35ed40 <col:29, col:44>
| |     `-TextComment 0x55887c35ed10 <col:29, col:44> Text=" Reserved words."
| |-FieldDecl 0x55887c0a7638 <line:73:3, col:13> col:13 e_oemid 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35ee40 <col:29, col:60>
| |   `-ParagraphComment 0x55887c35ee10 <col:29, col:60>
| |     `-TextComment 0x55887c35ede0 <col:29, col:60> Text=" OEM identifier (for e_oeminfo)."
| |-FieldDecl 0x55887c0a76c8 <line:74:3, col:13> col:13 e_oeminfo 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35ef10 <col:29, col:63>
| |   `-ParagraphComment 0x55887c35eee0 <col:29, col:63>
| |     `-TextComment 0x55887c35eeb0 <col:29, col:63> Text=" OEM information; e_oemid specific."
| |-FieldDecl 0x55887c0a7828 <line:75:3, col:22> col:13 e_res2 'UINT16[10]'
| | `-FullComment 0x55887c35efe0 <col:29, col:44>
| |   `-ParagraphComment 0x55887c35efb0 <col:29, col:44>
| |     `-TextComment 0x55887c35ef80 <col:29, col:44> Text=" Reserved words."
| `-FieldDecl 0x55887c0a78b8 <line:76:3, col:13> col:13 e_lfanew 'UINT32':'unsigned int'
|   `-FullComment 0x55887c35f0b0 <col:29, col:60>
|     `-ParagraphComment 0x55887c35f080 <col:29, col:60>
|       `-TextComment 0x55887c35f050 <col:29, col:60> Text=" File address of new exe header."
|-TypedefDecl 0x55887c0a7998 <line:57:1, line:77:3> col:3 EFI_IMAGE_DOS_HEADER 'struct EFI_IMAGE_DOS_HEADER':'EFI_IMAGE_DOS_HEADER'
| |-ElaboratedType 0x55887c0a7940 'struct EFI_IMAGE_DOS_HEADER' sugar
| | `-RecordType 0x55887c0a35e0 'EFI_IMAGE_DOS_HEADER'
| |   `-Record 0x55887c0a3560 ''
| `-FullComment 0x55887c35f1a0 <line:54:4, line:55:44>
|   `-ParagraphComment 0x55887c35f170 <line:54:4, line:55:44>
|     |-TextComment 0x55887c35f120 <line:54:4, col:74> Text=" PE images can start with an optional DOS header, so if an image is run"
|     `-TextComment 0x55887c35f140 <line:55:4, col:44> Text=" under DOS it can print an error message."
|-RecordDecl 0x55887c0a7a30 <line:82:9, line:90:1> line:82:9 struct definition
| |-FullComment 0x55887c35f270 <line:80:4, col:40>
| | `-ParagraphComment 0x55887c35f240 <col:4, col:40>
| |   `-TextComment 0x55887c35f210 <col:4, col:40> Text=" COFF File Header (Object and Image)."
| |-FieldDecl 0x55887c0a7ae0 <line:83:3, col:13> col:13 Machine 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0a7b40 <line:84:3, col:13> col:13 NumberOfSections 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0a7ba0 <line:85:3, col:13> col:13 TimeDateStamp 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0a7c00 <line:86:3, col:13> col:13 PointerToSymbolTable 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0a7c60 <line:87:3, col:13> col:13 NumberOfSymbols 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0a7cc0 <line:88:3, col:13> col:13 SizeOfOptionalHeader 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c0a7d20 <line:89:3, col:13> col:13 Characteristics 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c0a7dc8 <line:82:1, line:90:3> col:3 referenced EFI_IMAGE_FILE_HEADER 'struct EFI_IMAGE_FILE_HEADER':'EFI_IMAGE_FILE_HEADER'
| |-ElaboratedType 0x55887c0a7d70 'struct EFI_IMAGE_FILE_HEADER' sugar
| | `-RecordType 0x55887c0a7ab0 'EFI_IMAGE_FILE_HEADER'
| |   `-Record 0x55887c0a7a30 ''
| `-FullComment 0x55887c35f340 <line:80:4, col:40>
|   `-ParagraphComment 0x55887c35f310 <col:4, col:40>
|     `-TextComment 0x55887c35f2e0 <col:4, col:40> Text=" COFF File Header (Object and Image)."
|-RecordDecl 0x55887c0a80a0 <line:115:9, line:118:1> line:115:9 struct definition
| |-FullComment 0x55887c35f410 <line:113:4, col:28>
| | `-ParagraphComment 0x55887c35f3e0 <col:4, col:28>
| |   `-TextComment 0x55887c35f3b0 <col:4, col:28> Text=" Header Data Directories."
| |-FieldDecl 0x55887c0a8150 <line:116:3, col:13> col:13 VirtualAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0a81b0 <line:117:3, col:13> col:13 Size 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0a9880 <line:115:1, line:118:3> col:3 referenced EFI_IMAGE_DATA_DIRECTORY 'struct EFI_IMAGE_DATA_DIRECTORY':'EFI_IMAGE_DATA_DIRECTORY'
| |-ElaboratedType 0x55887c0a8200 'struct EFI_IMAGE_DATA_DIRECTORY' sugar
| | `-RecordType 0x55887c0a8120 'EFI_IMAGE_DATA_DIRECTORY'
| |   `-Record 0x55887c0a80a0 ''
| `-FullComment 0x55887c35f4e0 <line:113:4, col:28>
|   `-ParagraphComment 0x55887c35f4b0 <col:4, col:28>
|     `-TextComment 0x55887c35f480 <col:4, col:28> Text=" Header Data Directories."
|-RecordDecl 0x55887c0a9950 <line:148:9, line:186:1> line:148:9 struct definition
| |-FullComment 0x55887c35f5b0 <line:146:4, col:45>
| | `-ParagraphComment 0x55887c35f580 <col:4, col:45>
| |   `-TextComment 0x55887c35f550 <col:4, col:45> Text=" Optional Header Standard Fields for PE32."
| |-FieldDecl 0x55887c0a9a28 <line:152:3, col:31> col:31 Magic 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35f680 <line:150:6, col:22>
| |   `-ParagraphComment 0x55887c35f650 <col:6, col:22>
| |     `-TextComment 0x55887c35f620 <col:6, col:22> Text=" Standard fields."
| |-FieldDecl 0x55887c0a9a88 <line:153:3, col:31> col:31 MajorLinkerVersion 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0a9ae8 <line:154:3, col:31> col:31 MinorLinkerVersion 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0a9b48 <line:155:3, col:31> col:31 SizeOfCode 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0a9ba8 <line:156:3, col:31> col:31 SizeOfInitializedData 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0a9c08 <line:157:3, col:31> col:31 SizeOfUninitializedData 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0a9c68 <line:158:3, col:31> col:31 AddressOfEntryPoint 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0a9cc8 <line:159:3, col:31> col:31 BaseOfCode 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0a9d28 <line:160:3, col:31> col:31 BaseOfData 'UINT32':'unsigned int'
| | `-FullComment 0x55887c35f750 <col:47, col:109>
| |   `-ParagraphComment 0x55887c35f720 <col:47, col:109>
| |     `-TextComment 0x55887c35f6f0 <col:47, col:109> Text=" PE32 contains this additional field, which is absent in PE32+."
| |-FieldDecl 0x55887c0a9de8 <line:164:3, col:31> col:31 ImageBase 'UINT32':'unsigned int'
| | `-FullComment 0x55887c35f820 <line:162:6, col:46>
| |   `-ParagraphComment 0x55887c35f7f0 <col:6, col:46>
| |     `-TextComment 0x55887c35f7c0 <col:6, col:46> Text=" Optional Header Windows-Specific Fields."
| |-FieldDecl 0x55887c0a9e48 <line:165:3, col:31> col:31 SectionAlignment 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0a9ea8 <line:166:3, col:31> col:31 FileAlignment 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0a9f08 <line:167:3, col:31> col:31 MajorOperatingSystemVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0a9f68 <line:168:3, col:31> col:31 MinorOperatingSystemVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0a9fc8 <line:169:3, col:31> col:31 MajorImageVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0aa028 <line:170:3, col:31> col:31 MinorImageVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0aa088 <line:171:3, col:31> col:31 MajorSubsystemVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0aa0e8 <line:172:3, col:31> col:31 MinorSubsystemVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0aa148 <line:173:3, col:31> col:31 Win32VersionValue 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0aa1a8 <line:174:3, col:31> col:31 SizeOfImage 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0aa208 <line:175:3, col:31> col:31 SizeOfHeaders 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0aa268 <line:176:3, col:31> col:31 CheckSum 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0aa2c8 <line:177:3, col:31> col:31 Subsystem 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0aa328 <line:178:3, col:31> col:31 DllCharacteristics 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0aa388 <line:179:3, col:31> col:31 SizeOfStackReserve 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0aa3e8 <line:180:3, col:31> col:31 SizeOfStackCommit 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0aa448 <line:181:3, col:31> col:31 SizeOfHeapReserve 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0aa4a8 <line:182:3, col:31> col:31 SizeOfHeapCommit 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0aa508 <line:183:3, col:31> col:31 LoaderFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0aa568 <line:184:3, col:31> col:31 NumberOfRvaAndSizes 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0aa718 <line:185:3, col:82> col:31 DataDirectory 'EFI_IMAGE_DATA_DIRECTORY[16]'
|-TypedefDecl 0x55887c0aa7c8 <line:148:1, line:186:3> col:3 referenced EFI_IMAGE_OPTIONAL_HEADER32 'struct EFI_IMAGE_OPTIONAL_HEADER32':'EFI_IMAGE_OPTIONAL_HEADER32'
| |-ElaboratedType 0x55887c0aa770 'struct EFI_IMAGE_OPTIONAL_HEADER32' sugar
| | `-RecordType 0x55887c0a99d0 'EFI_IMAGE_OPTIONAL_HEADER32'
| |   `-Record 0x55887c0a9950 ''
| `-FullComment 0x55887c35f8f0 <line:146:4, col:45>
|   `-ParagraphComment 0x55887c35f8c0 <col:4, col:45>
|     `-TextComment 0x55887c35f890 <col:4, col:45> Text=" Optional Header Standard Fields for PE32."
|-RecordDecl 0x55887c0aba78 <line:199:9, line:236:1> line:199:9 struct definition
| |-FullComment 0x55887c35f9c0 <line:197:4, col:46>
| | `-ParagraphComment 0x55887c35f990 <col:4, col:46>
| |   `-TextComment 0x55887c35f960 <col:4, col:46> Text=" Optional Header Standard Fields for PE32+."
| |-FieldDecl 0x55887c0abb58 <line:203:3, col:31> col:31 Magic 'UINT16':'unsigned short'
| | `-FullComment 0x55887c35fa90 <line:201:6, col:22>
| |   `-ParagraphComment 0x55887c35fa60 <col:6, col:22>
| |     `-TextComment 0x55887c35fa30 <col:6, col:22> Text=" Standard fields."
| |-FieldDecl 0x55887c0abbb8 <line:204:3, col:31> col:31 MajorLinkerVersion 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0abc18 <line:205:3, col:31> col:31 MinorLinkerVersion 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0abc78 <line:206:3, col:31> col:31 SizeOfCode 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0abcd8 <line:207:3, col:31> col:31 SizeOfInitializedData 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0abd38 <line:208:3, col:31> col:31 SizeOfUninitializedData 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0abd98 <line:209:3, col:31> col:31 AddressOfEntryPoint 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0abdf8 <line:210:3, col:31> col:31 BaseOfCode 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0abe88 <line:214:3, col:31> col:31 ImageBase 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c35fb60 <line:212:6, col:46>
| |   `-ParagraphComment 0x55887c35fb30 <col:6, col:46>
| |     `-TextComment 0x55887c35fb00 <col:6, col:46> Text=" Optional Header Windows-Specific Fields."
| |-FieldDecl 0x55887c0abee8 <line:215:3, col:31> col:31 SectionAlignment 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0abf48 <line:216:3, col:31> col:31 FileAlignment 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0abfa8 <line:217:3, col:31> col:31 MajorOperatingSystemVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0ac008 <line:218:3, col:31> col:31 MinorOperatingSystemVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0ac068 <line:219:3, col:31> col:31 MajorImageVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0ac0c8 <line:220:3, col:31> col:31 MinorImageVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0ac128 <line:221:3, col:31> col:31 MajorSubsystemVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0ac188 <line:222:3, col:31> col:31 MinorSubsystemVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0ac1e8 <line:223:3, col:31> col:31 Win32VersionValue 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ac248 <line:224:3, col:31> col:31 SizeOfImage 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ac2a8 <line:225:3, col:31> col:31 SizeOfHeaders 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ac308 <line:226:3, col:31> col:31 CheckSum 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ac368 <line:227:3, col:31> col:31 Subsystem 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0ac3c8 <line:228:3, col:31> col:31 DllCharacteristics 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0ac428 <line:229:3, col:31> col:31 SizeOfStackReserve 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ac488 <line:230:3, col:31> col:31 SizeOfStackCommit 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ac4e8 <line:231:3, col:31> col:31 SizeOfHeapReserve 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ac548 <line:232:3, col:31> col:31 SizeOfHeapCommit 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ac5a8 <line:233:3, col:31> col:31 LoaderFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ac608 <line:234:3, col:31> col:31 NumberOfRvaAndSizes 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0ac6b8 <line:235:3, col:82> col:31 DataDirectory 'EFI_IMAGE_DATA_DIRECTORY[16]'
|-TypedefDecl 0x55887c0ac768 <line:199:1, line:236:3> col:3 referenced EFI_IMAGE_OPTIONAL_HEADER64 'struct EFI_IMAGE_OPTIONAL_HEADER64':'EFI_IMAGE_OPTIONAL_HEADER64'
| |-ElaboratedType 0x55887c0ac710 'struct EFI_IMAGE_OPTIONAL_HEADER64' sugar
| | `-RecordType 0x55887c0abb00 'EFI_IMAGE_OPTIONAL_HEADER64'
| |   `-Record 0x55887c0aba78 ''
| `-FullComment 0x55887c35fc30 <line:197:4, col:46>
|   `-ParagraphComment 0x55887c35fc00 <col:4, col:46>
|     `-TextComment 0x55887c35fbd0 <col:4, col:46> Text=" Optional Header Standard Fields for PE32+."
|-RecordDecl 0x55887c0ac800 <line:242:9, line:246:1> line:242:9 struct definition
| |-FullComment 0x55887c35fd80 <line:239:4, line:240:52>
| | |-ParagraphComment 0x55887c35fcd0 <line:239:4>
| | | `-TextComment 0x55887c35fca0 <col:4> Text=" "
| | `-BlockCommandComment 0x55887c35fcf0 <col:5, line:240:52> Name="attention"
| |   `-ParagraphComment 0x55887c35fd50 <col:4, col:52>
| |     `-TextComment 0x55887c35fd20 <col:4, col:52> Text=" EFI_IMAGE_NT_HEADERS32 is for use ONLY by tools."
| |-FieldDecl 0x55887c0ac8b0 <line:243:3, col:34> col:34 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ac930 <line:244:3, col:34> col:34 FileHeader 'EFI_IMAGE_FILE_HEADER':'EFI_IMAGE_FILE_HEADER'
| `-FieldDecl 0x55887c0ac9b0 <line:245:3, col:34> col:34 OptionalHeader 'EFI_IMAGE_OPTIONAL_HEADER32':'EFI_IMAGE_OPTIONAL_HEADER32'
|-TypedefDecl 0x55887c0acb30 <line:242:1, line:246:3> col:3 referenced EFI_IMAGE_NT_HEADERS32 'struct EFI_IMAGE_NT_HEADERS32':'EFI_IMAGE_NT_HEADERS32'
| |-ElaboratedType 0x55887c0aca00 'struct EFI_IMAGE_NT_HEADERS32' sugar
| | `-RecordType 0x55887c0ac880 'EFI_IMAGE_NT_HEADERS32'
| |   `-Record 0x55887c0ac800 ''
| `-FullComment 0x55887c35fed0 <line:239:4, line:240:52>
|   |-ParagraphComment 0x55887c35fe20 <line:239:4>
|   | `-TextComment 0x55887c35fdf0 <col:4> Text=" "
|   `-BlockCommandComment 0x55887c35fe40 <col:5, line:240:52> Name="attention"
|     `-ParagraphComment 0x55887c35fea0 <col:4, col:52>
|       `-TextComment 0x55887c35fe70 <col:4, col:52> Text=" EFI_IMAGE_NT_HEADERS32 is for use ONLY by tools."
|-RecordDecl 0x55887c0acbd0 <line:254:9, line:258:1> line:254:9 struct definition
| |-FullComment 0x55887c360020 <line:251:4, line:252:49>
| | |-ParagraphComment 0x55887c35ff70 <line:251:4>
| | | `-TextComment 0x55887c35ff40 <col:4> Text=" "
| | `-BlockCommandComment 0x55887c35ff90 <col:5, line:252:49> Name="attention"
| |   `-ParagraphComment 0x55887c35fff0 <col:4, col:49>
| |     `-TextComment 0x55887c35ffc0 <col:4, col:49> Text=" EFI_IMAGE_HEADERS64 is for use ONLY by tools."
| |-FieldDecl 0x55887c0acc80 <line:255:3, col:34> col:34 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0acce0 <line:256:3, col:34> col:34 FileHeader 'EFI_IMAGE_FILE_HEADER':'EFI_IMAGE_FILE_HEADER'
| `-FieldDecl 0x55887c0acd60 <line:257:3, col:34> col:34 OptionalHeader 'EFI_IMAGE_OPTIONAL_HEADER64':'EFI_IMAGE_OPTIONAL_HEADER64'
|-TypedefDecl 0x55887c0ace08 <line:254:1, line:258:3> col:3 referenced EFI_IMAGE_NT_HEADERS64 'struct EFI_IMAGE_NT_HEADERS64':'EFI_IMAGE_NT_HEADERS64'
| |-ElaboratedType 0x55887c0acdb0 'struct EFI_IMAGE_NT_HEADERS64' sugar
| | `-RecordType 0x55887c0acc50 'EFI_IMAGE_NT_HEADERS64'
| |   `-Record 0x55887c0acbd0 ''
| `-FullComment 0x55887c360170 <line:251:4, line:252:49>
|   |-ParagraphComment 0x55887c3600c0 <line:251:4>
|   | `-TextComment 0x55887c360090 <col:4> Text=" "
|   `-BlockCommandComment 0x55887c3600e0 <col:5, line:252:49> Name="attention"
|     `-ParagraphComment 0x55887c360140 <col:4, col:49>
|       `-TextComment 0x55887c360110 <col:4, col:49> Text=" EFI_IMAGE_HEADERS64 is for use ONLY by tools."
|-RecordDecl 0x55887c0aced0 <line:280:9, line:294:1> line:280:9 struct definition
| |-FullComment 0x55887c360240 <line:278:4, col:70>
| | `-ParagraphComment 0x55887c360210 <col:4, col:70>
| |   `-TextComment 0x55887c3601e0 <col:4, col:70> Text=" Section Table. This table immediately follows the optional header."
| |-FieldDecl 0x55887c0acfd0 <line:281:3, col:45> col:13 Name 'UINT8[8]'
| |-RecordDecl 0x55887c0ad020 <line:282:3, line:285:3> line:282:3 union definition
| | |-FieldDecl 0x55887c0ad0d0 <line:283:5, col:15> col:15 PhysicalAddress 'UINT32':'unsigned int'
| | `-FieldDecl 0x55887c0ad130 <line:284:5, col:15> col:15 VirtualSize 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ad1d8 <line:282:3, line:285:5> col:5 Misc 'union (unnamed union at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:282:3)':'union EFI_IMAGE_SECTION_HEADER::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:282:3)'
| |-FieldDecl 0x55887c0ad238 <line:286:3, col:13> col:13 VirtualAddress 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ad298 <line:287:3, col:13> col:13 SizeOfRawData 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ad2f8 <line:288:3, col:13> col:13 PointerToRawData 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ad358 <line:289:3, col:13> col:13 PointerToRelocations 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ad3b8 <line:290:3, col:13> col:13 PointerToLinenumbers 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ad418 <line:291:3, col:13> col:13 NumberOfRelocations 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0ad478 <line:292:3, col:13> col:13 NumberOfLinenumbers 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c0ad4d8 <line:293:3, col:13> col:13 Characteristics 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0ad588 <line:280:1, line:294:3> col:3 EFI_IMAGE_SECTION_HEADER 'struct EFI_IMAGE_SECTION_HEADER':'EFI_IMAGE_SECTION_HEADER'
| |-ElaboratedType 0x55887c0ad530 'struct EFI_IMAGE_SECTION_HEADER' sugar
| | `-RecordType 0x55887c0acf50 'EFI_IMAGE_SECTION_HEADER'
| |   `-Record 0x55887c0aced0 ''
| `-FullComment 0x55887c360320 <line:278:4, col:70>
|   `-ParagraphComment 0x55887c3602f0 <col:4, col:70>
|     `-TextComment 0x55887c3602c0 <col:4, col:70> Text=" Section Table. This table immediately follows the optional header."
|-RecordDecl 0x55887c0b0480 <line:430:9, line:434:1> line:430:9 struct definition
| |-FullComment 0x55887c3603f0 <line:428:4, col:22>
| | `-ParagraphComment 0x55887c3603c0 <col:4, col:22>
| |   `-TextComment 0x55887c360390 <col:4, col:22> Text=" Relocation format."
| |-FieldDecl 0x55887c0b0530 <line:431:3, col:13> col:13 VirtualAddress 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0b0590 <line:432:3, col:13> col:13 SymbolTableIndex 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0b05f0 <line:433:3, col:13> col:13 Type 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c0b0698 <line:430:1, line:434:3> col:3 EFI_IMAGE_RELOCATION 'struct EFI_IMAGE_RELOCATION':'EFI_IMAGE_RELOCATION'
| |-ElaboratedType 0x55887c0b0640 'struct EFI_IMAGE_RELOCATION' sugar
| | `-RecordType 0x55887c0b0500 'EFI_IMAGE_RELOCATION'
| |   `-Record 0x55887c0b0480 ''
| `-FullComment 0x55887c3604c0 <line:428:4, col:22>
|   `-ParagraphComment 0x55887c360490 <col:4, col:22>
|     `-TextComment 0x55887c360460 <col:4, col:22> Text=" Relocation format."
|-RecordDecl 0x55887c0b08b0 <line:478:9, line:481:1> line:478:9 struct definition
| |-FullComment 0x55887c360590 <line:476:4, col:28>
| | `-ParagraphComment 0x55887c360560 <col:4, col:28>
| |   `-TextComment 0x55887c360530 <col:4, col:28> Text=" Based relocation format."
| |-FieldDecl 0x55887c0b0960 <line:479:3, col:13> col:13 VirtualAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0b09c0 <line:480:3, col:13> col:13 SizeOfBlock 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0b0a68 <line:478:1, line:481:3> col:3 EFI_IMAGE_BASE_RELOCATION 'struct EFI_IMAGE_BASE_RELOCATION':'EFI_IMAGE_BASE_RELOCATION'
| |-ElaboratedType 0x55887c0b0a10 'struct EFI_IMAGE_BASE_RELOCATION' sugar
| | `-RecordType 0x55887c0b0930 'EFI_IMAGE_BASE_RELOCATION'
| |   `-Record 0x55887c0b08b0 ''
| `-FullComment 0x55887c360660 <line:476:4, col:28>
|   `-ParagraphComment 0x55887c360630 <col:4, col:28>
|     `-TextComment 0x55887c360600 <col:4, col:28> Text=" Based relocation format."
|-RecordDecl 0x55887c0b0b60 <line:519:9, line:525:1> line:519:9 struct definition
| |-FullComment 0x55887c360730 <line:517:4, col:23>
| | `-ParagraphComment 0x55887c360700 <col:4, col:23>
| |   `-TextComment 0x55887c3606d0 <col:4, col:23> Text=" Line number format."
| |-RecordDecl 0x55887c0b0c00 <line:520:3, line:523:3> line:520:3 union definition
| | |-FieldDecl 0x55887c0b0cb0 <line:521:5, col:15> col:15 SymbolTableIndex 'UINT32':'unsigned int'
| | | `-FullComment 0x55887c360800 <col:37, col:92>
| | |   `-ParagraphComment 0x55887c3607d0 <col:37, col:92>
| | |     `-TextComment 0x55887c3607a0 <col:37, col:92> Text=" Symbol table index of function name if Linenumber is 0."
| | `-FieldDecl 0x55887c0b0d38 <line:522:5, col:15> col:15 VirtualAddress 'UINT32':'unsigned int'
| |   `-FullComment 0x55887c3608d0 <col:37, col:68>
| |     `-ParagraphComment 0x55887c3608a0 <col:37, col:68>
| |       `-TextComment 0x55887c360870 <col:37, col:68> Text=" Virtual address of line number."
| |-FieldDecl 0x55887c0b0e18 <line:520:3, line:523:5> col:5 Type 'union (unnamed union at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:520:3)':'union EFI_IMAGE_LINENUMBER::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:520:3)'
| `-FieldDecl 0x55887c0b0e78 <line:524:3, col:13> col:13 Linenumber 'UINT16':'unsigned short'
|   `-FullComment 0x55887c3609a0 <col:35, col:47>
|     `-ParagraphComment 0x55887c360970 <col:35, col:47>
|       `-TextComment 0x55887c360940 <col:35, col:47> Text=" Line number."
|-TypedefDecl 0x55887c0b0fb8 <line:519:1, line:525:3> col:3 EFI_IMAGE_LINENUMBER 'struct EFI_IMAGE_LINENUMBER':'EFI_IMAGE_LINENUMBER'
| |-ElaboratedType 0x55887c0b0f60 'struct EFI_IMAGE_LINENUMBER' sugar
| | `-RecordType 0x55887c0b0be0 'EFI_IMAGE_LINENUMBER'
| |   `-Record 0x55887c0b0b60 ''
| `-FullComment 0x55887c360a70 <line:517:4, col:23>
|   `-ParagraphComment 0x55887c360a40 <col:4, col:23>
|     `-TextComment 0x55887c360a10 <col:4, col:23> Text=" Line number format."
|-RecordDecl 0x55887c0b1080 <line:545:9, line:553:1> line:545:9 struct definition
| |-FullComment 0x55887c360b40 <line:543:4, col:26>
| | `-ParagraphComment 0x55887c360b10 <col:4, col:26>
| |   `-TextComment 0x55887c360ae0 <col:4, col:26> Text=" Archive Member Headers"
| |-FieldDecl 0x55887c0b1180 <line:546:3, col:19> col:12 Name 'UINT8[16]'
| | `-FullComment 0x55887c360c10 <col:30, col:64>
| |   `-ParagraphComment 0x55887c360be0 <col:30, col:64>
| |     `-TextComment 0x55887c360bb0 <col:30, col:64> Text=" File member name - `/' terminated."
| |-FieldDecl 0x55887c0b69c0 <line:547:3, col:19> col:12 Date 'UINT8[12]'
| | `-FullComment 0x55887c360ce0 <col:30, col:57>
| |   `-ParagraphComment 0x55887c360cb0 <col:30, col:57>
| |     `-TextComment 0x55887c360c80 <col:30, col:57> Text=" File member date - decimal."
| |-FieldDecl 0x55887c0b6a98 <line:548:3, col:20> col:12 UserID 'UINT8[6]'
| | `-FullComment 0x55887c360db0 <col:30, col:60>
| |   `-ParagraphComment 0x55887c360d80 <col:30, col:60>
| |     `-TextComment 0x55887c360d50 <col:30, col:60> Text=" File member user id - decimal."
| |-FieldDecl 0x55887c0b6b78 <line:549:3, col:21> col:12 GroupID 'UINT8[6]'
| | `-FullComment 0x55887c360e80 <col:30, col:61>
| |   `-ParagraphComment 0x55887c360e50 <col:30, col:61>
| |     `-TextComment 0x55887c360e20 <col:30, col:61> Text=" File member group id - decimal."
| |-FieldDecl 0x55887c0b6c58 <line:550:3, col:18> col:12 Mode 'UINT8[8]'
| | `-FullComment 0x55887c360f50 <col:30, col:55>
| |   `-ParagraphComment 0x55887c360f20 <col:30, col:55>
| |     `-TextComment 0x55887c360ef0 <col:30, col:55> Text=" File member mode - octal."
| |-FieldDecl 0x55887c0b6db8 <line:551:3, col:19> col:12 Size 'UINT8[10]'
| | `-FullComment 0x55887c361020 <col:30, col:57>
| |   `-ParagraphComment 0x55887c360ff0 <col:30, col:57>
| |     `-TextComment 0x55887c360fc0 <col:30, col:57> Text=" File member size - decimal."
| `-FieldDecl 0x55887c0b6f18 <line:552:3, col:23> col:12 EndHeader 'UINT8[2]'
|   `-FullComment 0x55887c3610f0 <col:30, col:64>
|     `-ParagraphComment 0x55887c3610c0 <col:30, col:64>
|       `-TextComment 0x55887c361090 <col:30, col:64> Text=" String to end header. (0x60 0x0A)."
|-TypedefDecl 0x55887c0b6ff8 <line:545:1, line:553:3> col:3 EFI_IMAGE_ARCHIVE_MEMBER_HEADER 'struct EFI_IMAGE_ARCHIVE_MEMBER_HEADER':'EFI_IMAGE_ARCHIVE_MEMBER_HEADER'
| |-ElaboratedType 0x55887c0b6fa0 'struct EFI_IMAGE_ARCHIVE_MEMBER_HEADER' sugar
| | `-RecordType 0x55887c0b1100 'EFI_IMAGE_ARCHIVE_MEMBER_HEADER'
| |   `-Record 0x55887c0b1080 ''
| `-FullComment 0x55887c3611c0 <line:543:4, col:26>
|   `-ParagraphComment 0x55887c361190 <col:4, col:26>
|     `-TextComment 0x55887c361160 <col:4, col:26> Text=" Archive Member Headers"
|-RecordDecl 0x55887c0b70c0 <line:567:9, line:579:1> line:567:9 struct definition
| |-FullComment 0x55887c361290 <line:565:4, col:27>
| | `-ParagraphComment 0x55887c361260 <col:4, col:27>
| |   `-TextComment 0x55887c361230 <col:4, col:27> Text=" Export Directory Table."
| |-FieldDecl 0x55887c0b7170 <line:568:3, col:13> col:13 Characteristics 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0b71d0 <line:569:3, col:13> col:13 TimeDateStamp 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0b7230 <line:570:3, col:13> col:13 MajorVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0b7290 <line:571:3, col:13> col:13 MinorVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0b72f0 <line:572:3, col:13> col:13 Name 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0b7350 <line:573:3, col:13> col:13 Base 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0b73b0 <line:574:3, col:13> col:13 NumberOfFunctions 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0b7410 <line:575:3, col:13> col:13 NumberOfNames 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0b7470 <line:576:3, col:13> col:13 AddressOfFunctions 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0b74d0 <line:577:3, col:13> col:13 AddressOfNames 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0b7530 <line:578:3, col:13> col:13 AddressOfNameOrdinals 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0b75d8 <line:567:1, line:579:3> col:3 EFI_IMAGE_EXPORT_DIRECTORY 'struct EFI_IMAGE_EXPORT_DIRECTORY':'EFI_IMAGE_EXPORT_DIRECTORY'
| |-ElaboratedType 0x55887c0b7580 'struct EFI_IMAGE_EXPORT_DIRECTORY' sugar
| | `-RecordType 0x55887c0b7140 'EFI_IMAGE_EXPORT_DIRECTORY'
| |   `-Record 0x55887c0b70c0 ''
| `-FullComment 0x55887c361360 <line:565:4, col:27>
|   `-ParagraphComment 0x55887c361330 <col:4, col:27>
|     `-TextComment 0x55887c361300 <col:4, col:27> Text=" Export Directory Table."
|-RecordDecl 0x55887c0b7670 <line:591:9, line:594:1> line:591:9 struct definition
| |-FullComment 0x55887c361430 <line:589:4, col:20>
| | `-ParagraphComment 0x55887c361400 <col:4, col:20>
| |   `-TextComment 0x55887c3613d0 <col:4, col:20> Text=" Hint/Name Table."
| |-FieldDecl 0x55887c0b7720 <line:592:3, col:13> col:13 Hint 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c0b77d0 <line:593:3, col:19> col:13 Name 'UINT8[1]'
|-TypedefDecl 0x55887c0b7878 <line:591:1, line:594:3> col:3 referenced EFI_IMAGE_IMPORT_BY_NAME 'struct EFI_IMAGE_IMPORT_BY_NAME':'EFI_IMAGE_IMPORT_BY_NAME'
| |-ElaboratedType 0x55887c0b7820 'struct EFI_IMAGE_IMPORT_BY_NAME' sugar
| | `-RecordType 0x55887c0b76f0 'EFI_IMAGE_IMPORT_BY_NAME'
| |   `-Record 0x55887c0b7670 ''
| `-FullComment 0x55887c361500 <line:589:4, col:20>
|   `-ParagraphComment 0x55887c3614d0 <col:4, col:20>
|     `-TextComment 0x55887c3614a0 <col:4, col:20> Text=" Hint/Name Table."
|-RecordDecl 0x55887c0b7910 <line:599:9, line:605:1> line:599:9 struct definition
| |-FullComment 0x55887c3615d0 <line:597:4, col:43>
| | `-ParagraphComment 0x55887c3615a0 <col:4, col:43>
| |   `-TextComment 0x55887c361570 <col:4, col:43> Text=" Import Address Table RVA (Thunk Table)."
| |-RecordDecl 0x55887c0b8c60 <line:600:3, line:604:3> line:600:3 union definition
| | |-FieldDecl 0x55887c0b8d10 <line:601:5, col:33> col:33 Function 'UINT32':'unsigned int'
| | |-FieldDecl 0x55887c0b8d70 <line:602:5, col:33> col:33 Ordinal 'UINT32':'unsigned int'
| | `-FieldDecl 0x55887c0b8e48 <line:603:5, col:34> col:34 AddressOfData 'EFI_IMAGE_IMPORT_BY_NAME *'
| `-FieldDecl 0x55887c0b8ef8 <line:600:3, line:604:5> col:5 u1 'union (unnamed union at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:600:3)':'union EFI_IMAGE_THUNK_DATA::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:600:3)'
|-TypedefDecl 0x55887c0b9008 <line:599:1, line:605:3> col:3 referenced EFI_IMAGE_THUNK_DATA 'struct EFI_IMAGE_THUNK_DATA':'EFI_IMAGE_THUNK_DATA'
| |-ElaboratedType 0x55887c0b8fb0 'struct EFI_IMAGE_THUNK_DATA' sugar
| | `-RecordType 0x55887c0b7990 'EFI_IMAGE_THUNK_DATA'
| |   `-Record 0x55887c0b7910 ''
| `-FullComment 0x55887c3616a0 <line:597:4, col:43>
|   `-ParagraphComment 0x55887c361670 <col:4, col:43>
|     `-TextComment 0x55887c361640 <col:4, col:43> Text=" Import Address Table RVA (Thunk Table)."
|-RecordDecl 0x55887c0b90d0 <line:614:9, line:620:1> line:614:9 struct definition
| |-FullComment 0x55887c361770 <line:612:4, col:26>
| | `-ParagraphComment 0x55887c361740 <col:4, col:26>
| |   `-TextComment 0x55887c361710 <col:4, col:26> Text=" Import Directory Table"
| |-FieldDecl 0x55887c0b9180 <line:615:3, col:27> col:27 Characteristics 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0b91e0 <line:616:3, col:27> col:27 TimeDateStamp 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0b9240 <line:617:3, col:27> col:27 ForwarderChain 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0b92a0 <line:618:3, col:27> col:27 Name 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0b9378 <line:619:3, col:28> col:28 FirstThunk 'EFI_IMAGE_THUNK_DATA *'
|-TypedefDecl 0x55887c0b9428 <line:614:1, line:620:3> col:3 EFI_IMAGE_IMPORT_DESCRIPTOR 'struct EFI_IMAGE_IMPORT_DESCRIPTOR':'EFI_IMAGE_IMPORT_DESCRIPTOR'
| |-ElaboratedType 0x55887c0b93d0 'struct EFI_IMAGE_IMPORT_DESCRIPTOR' sugar
| | `-RecordType 0x55887c0b9150 'EFI_IMAGE_IMPORT_DESCRIPTOR'
| |   `-Record 0x55887c0b90d0 ''
| `-FullComment 0x55887c361840 <line:612:4, col:26>
|   `-ParagraphComment 0x55887c361810 <col:4, col:26>
|     `-TextComment 0x55887c3617e0 <col:4, col:26> Text=" Import Directory Table"
|-RecordDecl 0x55887c0b94c0 <line:625:9, line:634:1> line:625:9 struct definition
| |-FullComment 0x55887c361910 <line:623:4, col:27>
| | `-ParagraphComment 0x55887c3618e0 <col:4, col:27>
| |   `-TextComment 0x55887c3618b0 <col:4, col:27> Text=" Debug Directory Format."
| |-FieldDecl 0x55887c0b9570 <line:626:3, col:13> col:13 Characteristics 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0b95d0 <line:627:3, col:13> col:13 TimeDateStamp 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0b9630 <line:628:3, col:13> col:13 MajorVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0b9690 <line:629:3, col:13> col:13 MinorVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0b96f0 <line:630:3, col:13> col:13 Type 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0b9750 <line:631:3, col:13> col:13 SizeOfData 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0b97b0 <line:632:3, col:13> col:13 RVA 'UINT32':'unsigned int'
| | `-FullComment 0x55887c3619e0 <col:30, col:100>
| |   `-ParagraphComment 0x55887c3619b0 <col:30, col:100>
| |     `-TextComment 0x55887c361980 <col:30, col:100> Text=" The address of the debug data when loaded, relative to the image base."
| `-FieldDecl 0x55887c0b9838 <line:633:3, col:13> col:13 FileOffset 'UINT32':'unsigned int'
|   `-FullComment 0x55887c361ab0 <col:30, col:65>
|     `-ParagraphComment 0x55887c361a80 <col:30, col:65>
|       `-TextComment 0x55887c361a50 <col:30, col:65> Text=" The file pointer to the debug data."
|-TypedefDecl 0x55887c0b9918 <line:625:1, line:634:3> col:3 EFI_IMAGE_DEBUG_DIRECTORY_ENTRY 'struct EFI_IMAGE_DEBUG_DIRECTORY_ENTRY':'EFI_IMAGE_DEBUG_DIRECTORY_ENTRY'
| |-ElaboratedType 0x55887c0b98c0 'struct EFI_IMAGE_DEBUG_DIRECTORY_ENTRY' sugar
| | `-RecordType 0x55887c0b9540 'EFI_IMAGE_DEBUG_DIRECTORY_ENTRY'
| |   `-Record 0x55887c0b94c0 ''
| `-FullComment 0x55887c361b80 <line:623:4, col:27>
|   `-ParagraphComment 0x55887c361b50 <col:4, col:27>
|     `-TextComment 0x55887c361b20 <col:4, col:27> Text=" Debug Directory Format."
|-RecordDecl 0x55887c0b99e0 <line:643:9, line:651:1> line:643:9 struct definition
| |-FieldDecl 0x55887c0b9a90 <line:644:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| | `-FullComment 0x55887c361c50 <col:49, col:55>
| |   `-ParagraphComment 0x55887c361c20 <col:49, col:55>
| |     `-TextComment 0x55887c361bf0 <col:49, col:55> Text=" "NB10""
| |-FieldDecl 0x55887c0b9b18 <line:645:3, col:13> col:13 Unknown 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0b9b78 <line:646:3, col:13> col:13 Unknown2 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0b9bd8 <line:647:3, col:13> col:13 Unknown3 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0b9ec8 <line:643:1, line:651:3> col:3 EFI_IMAGE_DEBUG_CODEVIEW_NB10_ENTRY 'struct EFI_IMAGE_DEBUG_CODEVIEW_NB10_ENTRY':'EFI_IMAGE_DEBUG_CODEVIEW_NB10_ENTRY'
| `-ElaboratedType 0x55887c0b9e70 'struct EFI_IMAGE_DEBUG_CODEVIEW_NB10_ENTRY' sugar
|   `-RecordType 0x55887c0b9a60 'EFI_IMAGE_DEBUG_CODEVIEW_NB10_ENTRY'
|     `-Record 0x55887c0b99e0 ''
|-RecordDecl 0x55887c0b9f60 <line:657:9, line:667:1> line:657:9 struct definition
| |-FieldDecl 0x55887c0ba010 <line:658:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| | `-FullComment 0x55887c361d20 <col:49, col:56>
| |   `-ParagraphComment 0x55887c361cf0 <col:49, col:56>
| |     `-TextComment 0x55887c361cc0 <col:49, col:56> Text=" "RSDS"."
| |-FieldDecl 0x55887c0ba098 <line:659:3, col:13> col:13 Unknown 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ba0f8 <line:660:3, col:13> col:13 Unknown2 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ba158 <line:661:3, col:13> col:13 Unknown3 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ba1b8 <line:662:3, col:13> col:13 Unknown4 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0ba218 <line:663:3, col:13> col:13 Unknown5 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0ba2c8 <line:657:1, line:667:3> col:3 EFI_IMAGE_DEBUG_CODEVIEW_RSDS_ENTRY 'struct EFI_IMAGE_DEBUG_CODEVIEW_RSDS_ENTRY':'EFI_IMAGE_DEBUG_CODEVIEW_RSDS_ENTRY'
| `-ElaboratedType 0x55887c0ba270 'struct EFI_IMAGE_DEBUG_CODEVIEW_RSDS_ENTRY' sugar
|   `-RecordType 0x55887c0b9fe0 'EFI_IMAGE_DEBUG_CODEVIEW_RSDS_ENTRY'
|     `-Record 0x55887c0b9f60 ''
|-RecordDecl 0x55887c0ba360 <line:673:9, line:679:1> line:673:9 struct definition
| |-FieldDecl 0x55887c0ba410 <line:674:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| | `-FullComment 0x55887c361df0 <col:50, col:57>
| |   `-ParagraphComment 0x55887c361dc0 <col:50, col:57>
| |     `-TextComment 0x55887c361d90 <col:50, col:57> Text=" "MTOC"."
| `-FieldDecl 0x55887c0ba498 <line:675:3, col:13> col:13 MachOUuid 'GUID':'GUID'
|-TypedefDecl 0x55887c0ba548 <line:673:1, line:679:3> col:3 EFI_IMAGE_DEBUG_CODEVIEW_MTOC_ENTRY 'struct EFI_IMAGE_DEBUG_CODEVIEW_MTOC_ENTRY':'EFI_IMAGE_DEBUG_CODEVIEW_MTOC_ENTRY'
| `-ElaboratedType 0x55887c0ba4f0 'struct EFI_IMAGE_DEBUG_CODEVIEW_MTOC_ENTRY' sugar
|   `-RecordType 0x55887c0ba3e0 'EFI_IMAGE_DEBUG_CODEVIEW_MTOC_ENTRY'
|     `-Record 0x55887c0ba360 ''
|-RecordDecl 0x55887c0ba5b8 <line:684:9, line:688:1> line:684:9 struct definition
| |-FieldDecl 0x55887c0ba670 <line:685:3, col:13> col:13 FunctionStartAddress 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ba6d0 <line:686:3, col:13> col:13 FunctionEndAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0ba730 <line:687:3, col:13> col:13 UnwindInfoAddress 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0ba7d8 <line:684:1, line:688:3> col:3 RUNTIME_FUNCTION 'struct RUNTIME_FUNCTION':'RUNTIME_FUNCTION'
| `-ElaboratedType 0x55887c0ba780 'struct RUNTIME_FUNCTION' sugar
|   `-RecordType 0x55887c0ba640 'RUNTIME_FUNCTION'
|     `-Record 0x55887c0ba5b8 ''
|-RecordDecl 0x55887c0ba848 <line:690:9, line:697:1> line:690:9 struct definition
| |-FieldDecl 0x55887c0ba940 <line:691:3, col:34> col:12 Version 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c0ba920 <col:34> 'int'
| |   |-value: Int 3
| |   `-IntegerLiteral 0x55887c0ba8f0 <col:34> 'int' 3
| |-FieldDecl 0x55887c0ba9e0 <line:692:3, col:34> col:12 Flags 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c0ba9c0 <col:34> 'int'
| |   |-value: Int 5
| |   `-IntegerLiteral 0x55887c0ba990 <col:34> 'int' 5
| |-FieldDecl 0x55887c0baa40 <line:693:3, col:12> col:12 SizeOfProlog 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0baaa0 <line:694:3, col:12> col:12 CountOfUnwindCodes 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0bab40 <line:695:3, col:34> col:12 FrameRegister 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c0bab20 <col:34> 'int'
| |   |-value: Int 4
| |   `-IntegerLiteral 0x55887c0baaf0 <col:34> 'int' 4
| `-FieldDecl 0x55887c0babe0 <line:696:3, col:34> col:12 FrameRegisterOffset 'UINT8':'unsigned char'
|   `-ConstantExpr 0x55887c0babc0 <col:34> 'int'
|     |-value: Int 4
|     `-IntegerLiteral 0x55887c0bab90 <col:34> 'int' 4
|-TypedefDecl 0x55887c0bac88 <line:690:1, line:697:3> col:3 UNWIND_INFO 'struct UNWIND_INFO':'UNWIND_INFO'
| `-ElaboratedType 0x55887c0bac30 'struct UNWIND_INFO' sugar
|   `-RecordType 0x55887c0ba8d0 'UNWIND_INFO'
|     `-Record 0x55887c0ba848 ''
|-RecordDecl 0x55887c0bad20 <line:705:9, line:707:1> line:705:9 struct definition
| `-FieldDecl 0x55887c0badd0 <line:706:3, col:13> col:13 DllCharacteristicsEx 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0bc270 <line:705:1, line:707:3> col:3 EFI_IMAGE_DEBUG_EX_DLLCHARACTERISTICS_ENTRY 'struct EFI_IMAGE_DEBUG_EX_DLLCHARACTERISTICS_ENTRY':'EFI_IMAGE_DEBUG_EX_DLLCHARACTERISTICS_ENTRY'
| `-ElaboratedType 0x55887c0bae20 'struct EFI_IMAGE_DEBUG_EX_DLLCHARACTERISTICS_ENTRY' sugar
|   `-RecordType 0x55887c0bada0 'EFI_IMAGE_DEBUG_EX_DLLCHARACTERISTICS_ENTRY'
|     `-Record 0x55887c0bad20 ''
|-RecordDecl 0x55887c0bc310 <line:712:9, line:722:1> line:712:9 struct definition
| |-FullComment 0x55887c361ec0 <line:710:4, col:20>
| | `-ParagraphComment 0x55887c361e90 <col:4, col:20>
| |   `-TextComment 0x55887c361e60 <col:4, col:20> Text=" Resource format."
| |-FieldDecl 0x55887c0bc3c0 <line:713:3, col:13> col:13 Characteristics 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0bc420 <line:714:3, col:13> col:13 TimeDateStamp 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0bc480 <line:715:3, col:13> col:13 MajorVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0bc4e0 <line:716:3, col:13> col:13 MinorVersion 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0bc540 <line:717:3, col:13> col:13 NumberOfNamedEntries 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c0bc5a0 <line:718:3, col:13> col:13 NumberOfIdEntries 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c0bc648 <line:712:1, line:722:3> col:3 EFI_IMAGE_RESOURCE_DIRECTORY 'struct EFI_IMAGE_RESOURCE_DIRECTORY':'EFI_IMAGE_RESOURCE_DIRECTORY'
| |-ElaboratedType 0x55887c0bc5f0 'struct EFI_IMAGE_RESOURCE_DIRECTORY' sugar
| | `-RecordType 0x55887c0bc390 'EFI_IMAGE_RESOURCE_DIRECTORY'
| |   `-Record 0x55887c0bc310 ''
| `-FullComment 0x55887c361f90 <line:710:4, col:20>
|   `-ParagraphComment 0x55887c361f60 <col:4, col:20>
|     `-TextComment 0x55887c361f30 <col:4, col:20> Text=" Resource format."
|-RecordDecl 0x55887c0bc6e0 <line:727:9, line:742:1> line:727:9 struct definition
| |-FullComment 0x55887c362060 <line:725:4, col:36>
| | `-ParagraphComment 0x55887c362030 <col:4, col:36>
| |   `-TextComment 0x55887c362000 <col:4, col:36> Text=" Resource directory entry format."
| |-RecordDecl 0x55887c0bc780 <line:728:3, line:734:3> line:728:3 union definition
| | |-RecordDecl 0x55887c0bc820 <line:729:5, line:732:5> line:729:5 struct definition
| | | |-FieldDecl 0x55887c0bc910 <line:730:7, col:32> col:17 NameOffset 'UINT32':'unsigned int'
| | | | `-ConstantExpr 0x55887c0bc8f0 <col:32> 'int'
| | | |   |-value: Int 31
| | | |   `-IntegerLiteral 0x55887c0bc8c0 <col:32> 'int' 31
| | | `-FieldDecl 0x55887c0bc9b0 <line:731:7, col:32> col:17 NameIsString 'UINT32':'unsigned int'
| | |   `-ConstantExpr 0x55887c0bc990 <col:32> 'int'
| | |     |-value: Int 1
| | |     `-IntegerLiteral 0x55887c0bc960 <col:32> 'int' 1
| | |-FieldDecl 0x55887c0bca58 <line:729:5, line:732:7> col:7 s 'struct (unnamed struct at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:729:5)':'struct EFI_IMAGE_RESOURCE_DIRECTORY_ENTRY::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:729:5)'
| | `-FieldDecl 0x55887c0bcab8 <line:733:5, col:15> col:15 Id 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0bcbc8 <line:728:3, line:734:5> col:5 u1 'union (unnamed union at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:728:3)':'union EFI_IMAGE_RESOURCE_DIRECTORY_ENTRY::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:728:3)'
| |-RecordDecl 0x55887c0bcc18 <line:735:3, line:741:3> line:735:3 union definition
| | |-FieldDecl 0x55887c0bccd0 <line:736:5, col:15> col:15 OffsetToData 'UINT32':'unsigned int'
| | |-RecordDecl 0x55887c0bcd20 <line:737:5, line:740:5> line:737:5 struct definition
| | | |-FieldDecl 0x55887c0bce10 <line:738:7, col:37> col:17 OffsetToDirectory 'UINT32':'unsigned int'
| | | | `-ConstantExpr 0x55887c0bcdf0 <col:37> 'int'
| | | |   |-value: Int 31
| | | |   `-IntegerLiteral 0x55887c0bcdc0 <col:37> 'int' 31
| | | `-FieldDecl 0x55887c0bceb0 <line:739:7, col:37> col:17 DataIsDirectory 'UINT32':'unsigned int'
| | |   `-ConstantExpr 0x55887c0bce90 <col:37> 'int'
| | |     |-value: Int 1
| | |     `-IntegerLiteral 0x55887c0bce60 <col:37> 'int' 1
| | `-FieldDecl 0x55887c0bcf58 <line:737:5, line:740:7> col:7 s 'struct (unnamed struct at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:737:5)':'struct EFI_IMAGE_RESOURCE_DIRECTORY_ENTRY::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:737:5)'
| `-FieldDecl 0x55887c0bd008 <line:735:3, line:741:5> col:5 u2 'union (unnamed union at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:735:3)':'union EFI_IMAGE_RESOURCE_DIRECTORY_ENTRY::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:735:3)'
|-TypedefDecl 0x55887c0bd118 <line:727:1, line:742:3> col:3 EFI_IMAGE_RESOURCE_DIRECTORY_ENTRY 'struct EFI_IMAGE_RESOURCE_DIRECTORY_ENTRY':'EFI_IMAGE_RESOURCE_DIRECTORY_ENTRY'
| |-ElaboratedType 0x55887c0bd0c0 'struct EFI_IMAGE_RESOURCE_DIRECTORY_ENTRY' sugar
| | `-RecordType 0x55887c0bc760 'EFI_IMAGE_RESOURCE_DIRECTORY_ENTRY'
| |   `-Record 0x55887c0bc6e0 ''
| `-FullComment 0x55887c362130 <line:725:4, col:36>
|   `-ParagraphComment 0x55887c362100 <col:4, col:36>
|     `-TextComment 0x55887c3620d0 <col:4, col:36> Text=" Resource directory entry format."
|-RecordDecl 0x55887c0bd1b0 <line:747:9, line:750:1> line:747:9 struct definition
| |-FullComment 0x55887c362200 <line:745:4, col:40>
| | `-ParagraphComment 0x55887c3621d0 <col:4, col:40>
| |   `-TextComment 0x55887c3621a0 <col:4, col:40> Text=" Resource directory entry for string."
| |-FieldDecl 0x55887c0bd550 <line:748:3, col:13> col:13 Length 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c0bd600 <line:749:3, col:21> col:13 String 'CHAR16[1]'
|-TypedefDecl 0x55887c0bd6a8 <line:747:1, line:750:3> col:3 EFI_IMAGE_RESOURCE_DIRECTORY_STRING 'struct EFI_IMAGE_RESOURCE_DIRECTORY_STRING':'EFI_IMAGE_RESOURCE_DIRECTORY_STRING'
| |-ElaboratedType 0x55887c0bd650 'struct EFI_IMAGE_RESOURCE_DIRECTORY_STRING' sugar
| | `-RecordType 0x55887c0bd230 'EFI_IMAGE_RESOURCE_DIRECTORY_STRING'
| |   `-Record 0x55887c0bd1b0 ''
| `-FullComment 0x55887c3622e0 <line:745:4, col:40>
|   `-ParagraphComment 0x55887c3622a0 <col:4, col:40>
|     `-TextComment 0x55887c362270 <col:4, col:40> Text=" Resource directory entry for string."
|-RecordDecl 0x55887c0bd740 <line:755:9, line:760:1> line:755:9 struct definition
| |-FullComment 0x55887c3623b0 <line:753:4, col:44>
| | `-ParagraphComment 0x55887c362380 <col:4, col:44>
| |   `-TextComment 0x55887c362350 <col:4, col:44> Text=" Resource directory entry for data array."
| |-FieldDecl 0x55887c0bd7f0 <line:756:3, col:13> col:13 OffsetToData 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0bd850 <line:757:3, col:13> col:13 Size 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0bd8b0 <line:758:3, col:13> col:13 CodePage 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0bd910 <line:759:3, col:13> col:13 Reserved 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0bd9b8 <line:755:1, line:760:3> col:3 EFI_IMAGE_RESOURCE_DATA_ENTRY 'struct EFI_IMAGE_RESOURCE_DATA_ENTRY':'EFI_IMAGE_RESOURCE_DATA_ENTRY'
| |-ElaboratedType 0x55887c0bd960 'struct EFI_IMAGE_RESOURCE_DATA_ENTRY' sugar
| | `-RecordType 0x55887c0bd7c0 'EFI_IMAGE_RESOURCE_DATA_ENTRY'
| |   `-Record 0x55887c0bd740 ''
| `-FullComment 0x55887c362480 <line:753:4, col:44>
|   `-ParagraphComment 0x55887c362450 <col:4, col:44>
|     `-TextComment 0x55887c362420 <col:4, col:44> Text=" Resource directory entry for data array."
|-RecordDecl 0x55887c0bda50 <line:765:9, line:775:1> line:765:9 struct definition
| |-FullComment 0x55887c362550 <line:763:4, col:70>
| | `-ParagraphComment 0x55887c362520 <col:4, col:70>
| |   `-TextComment 0x55887c3624f0 <col:4, col:70> Text=" Header format for TE images, defined in the PI Specification, 1.0."
| |-FieldDecl 0x55887c0bdb00 <line:766:3, col:31> col:31 Signature 'UINT16':'unsigned short'
| | `-FullComment 0x55887c362620 <col:56, col:91>
| |   `-ParagraphComment 0x55887c3625f0 <col:56, col:91>
| |     `-TextComment 0x55887c3625c0 <col:56, col:91> Text=" The signature for TE format = "VZ"."
| |-FieldDecl 0x55887c0bdb88 <line:767:3, col:31> col:31 Machine 'UINT16':'unsigned short'
| | `-FullComment 0x55887c3626f0 <col:56, col:86>
| |   `-ParagraphComment 0x55887c3626c0 <col:56, col:86>
| |     `-TextComment 0x55887c362690 <col:56, col:86> Text=" From the original file header."
| |-FieldDecl 0x55887c0bdc18 <line:768:3, col:31> col:31 NumberOfSections 'UINT8':'unsigned char'
| | `-FullComment 0x55887c3627c0 <col:56, col:86>
| |   `-ParagraphComment 0x55887c362790 <col:56, col:86>
| |     `-TextComment 0x55887c362760 <col:56, col:86> Text=" From the original file header."
| |-FieldDecl 0x55887c0bdca8 <line:769:3, col:31> col:31 Subsystem 'UINT8':'unsigned char'
| | `-FullComment 0x55887c362890 <col:56, col:86>
| |   `-ParagraphComment 0x55887c362860 <col:56, col:86>
| |     `-TextComment 0x55887c362830 <col:56, col:86> Text=" From original optional header."
| |-FieldDecl 0x55887c0bdd38 <line:770:3, col:31> col:31 StrippedSize 'UINT16':'unsigned short'
| | `-FullComment 0x55887c362960 <col:56, col:99>
| |   `-ParagraphComment 0x55887c362930 <col:56, col:99>
| |     `-TextComment 0x55887c362900 <col:56, col:99> Text=" Number of bytes we removed from the header."
| |-FieldDecl 0x55887c0bddc8 <line:771:3, col:31> col:31 AddressOfEntryPoint 'UINT32':'unsigned int'
| | `-FullComment 0x55887c362a30 <col:56, col:111>
| |   `-ParagraphComment 0x55887c362a00 <col:56, col:111>
| |     `-TextComment 0x55887c3629d0 <col:56, col:111> Text=" Offset to entry point -- from original optional header."
| |-FieldDecl 0x55887c0bde58 <line:772:3, col:31> col:31 BaseOfCode 'UINT32':'unsigned int'
| | `-FullComment 0x55887c362b00 <col:56, col:102>
| |   `-ParagraphComment 0x55887c362ad0 <col:56, col:102>
| |     `-TextComment 0x55887c362aa0 <col:56, col:102> Text=" From original image -- required for ITP debug."
| |-FieldDecl 0x55887c0bdee8 <line:773:3, col:31> col:31 ImageBase 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c362bd0 <col:56, col:82>
| |   `-ParagraphComment 0x55887c362ba0 <col:56, col:82>
| |     `-TextComment 0x55887c362b70 <col:56, col:82> Text=" From original file header."
| `-FieldDecl 0x55887c0be048 <line:774:3, col:46> col:31 DataDirectory 'EFI_IMAGE_DATA_DIRECTORY[2]'
|   `-FullComment 0x55887c362ca0 <col:56, col:97>
|     `-ParagraphComment 0x55887c362c70 <col:56, col:97>
|       `-TextComment 0x55887c362c40 <col:56, col:97> Text=" Only base relocation and debug directory."
|-TypedefDecl 0x55887c0be128 <line:765:1, line:775:3> col:3 referenced EFI_TE_IMAGE_HEADER 'struct EFI_TE_IMAGE_HEADER':'EFI_TE_IMAGE_HEADER'
| |-ElaboratedType 0x55887c0be0d0 'struct EFI_TE_IMAGE_HEADER' sugar
| | `-RecordType 0x55887c0bdad0 'EFI_TE_IMAGE_HEADER'
| |   `-Record 0x55887c0bda50 ''
| `-FullComment 0x55887c362d70 <line:763:4, col:70>
|   `-ParagraphComment 0x55887c362d40 <col:4, col:70>
|     `-TextComment 0x55887c362d10 <col:4, col:70> Text=" Header format for TE images, defined in the PI Specification, 1.0."
|-RecordDecl 0x55887c0be1c0 <line:788:9, line:792:1> line:788:9 union definition
| |-FullComment 0x55887c362e40 <line:786:4, col:41>
| | `-ParagraphComment 0x55887c362e10 <col:4, col:41>
| |   `-TextComment 0x55887c362de0 <col:4, col:41> Text=" Union of PE32, PE32+, and TE headers."
| |-FieldDecl 0x55887c0be290 <line:789:3, col:29> col:29 Pe32 'EFI_IMAGE_NT_HEADERS32':'EFI_IMAGE_NT_HEADERS32'
| |-FieldDecl 0x55887c0be310 <line:790:3, col:29> col:29 Pe32Plus 'EFI_IMAGE_NT_HEADERS64':'EFI_IMAGE_NT_HEADERS64'
| `-FieldDecl 0x55887c0be390 <line:791:3, col:29> col:29 Te 'EFI_TE_IMAGE_HEADER':'EFI_TE_IMAGE_HEADER'
|-TypedefDecl 0x55887c0bfa18 <line:788:1, line:792:3> col:3 referenced EFI_IMAGE_OPTIONAL_HEADER_UNION 'union EFI_IMAGE_OPTIONAL_HEADER_UNION':'EFI_IMAGE_OPTIONAL_HEADER_UNION'
| |-ElaboratedType 0x55887c0bf9c0 'union EFI_IMAGE_OPTIONAL_HEADER_UNION' sugar
| | `-RecordType 0x55887c0be240 'EFI_IMAGE_OPTIONAL_HEADER_UNION'
| |   `-Record 0x55887c0be1c0 ''
| `-FullComment 0x55887c362f10 <line:786:4, col:41>
|   `-ParagraphComment 0x55887c362ee0 <col:4, col:41>
|     `-TextComment 0x55887c362eb0 <col:4, col:41> Text=" Union of PE32, PE32+, and TE headers."
|-RecordDecl 0x55887c0bfa88 <line:794:9, line:799:1> line:794:9 union definition
| |-FieldDecl 0x55887c0bfb98 <line:795:3, col:39> col:39 Pe32 'EFI_IMAGE_NT_HEADERS32 *'
| |-FieldDecl 0x55887c0bfc58 <line:796:3, col:39> col:39 Pe32Plus 'EFI_IMAGE_NT_HEADERS64 *'
| |-FieldDecl 0x55887c0bfd18 <line:797:3, col:39> col:39 Te 'EFI_TE_IMAGE_HEADER *'
| `-FieldDecl 0x55887c0bfdf8 <line:798:3, col:39> col:39 Union 'EFI_IMAGE_OPTIONAL_HEADER_UNION *'
|-TypedefDecl 0x55887c0bfea8 <line:794:1, line:799:3> col:3 EFI_IMAGE_OPTIONAL_HEADER_PTR_UNION 'union EFI_IMAGE_OPTIONAL_HEADER_PTR_UNION':'EFI_IMAGE_OPTIONAL_HEADER_PTR_UNION'
| `-ElaboratedType 0x55887c0bfe50 'union EFI_IMAGE_OPTIONAL_HEADER_PTR_UNION' sugar
|   `-RecordType 0x55887c0bfb10 'EFI_IMAGE_OPTIONAL_HEADER_PTR_UNION'
|     `-Record 0x55887c0bfa88 ''
|-RecordDecl 0x55887c0bff18 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Protocol/DebugSupport.h:21:9, col:16> col:16 struct _EFI_DEBUG_SUPPORT_PROTOCOL
|-TypedefDecl 0x55887c0c0018 <col:1, col:44> col:44 referenced EFI_DEBUG_SUPPORT_PROTOCOL 'struct _EFI_DEBUG_SUPPORT_PROTOCOL':'struct _EFI_DEBUG_SUPPORT_PROTOCOL'
| `-ElaboratedType 0x55887c0bffc0 'struct _EFI_DEBUG_SUPPORT_PROTOCOL' sugar
|   `-RecordType 0x55887c0bffa0 'struct _EFI_DEBUG_SUPPORT_PROTOCOL'
|     `-Record 0x55887c0dd348 '_EFI_DEBUG_SUPPORT_PROTOCOL'
|-TypedefDecl 0x55887c0c00f0 <line:35:1, col:14> col:14 referenced EFI_EXCEPTION_TYPE 'INTN':'long long'
| |-TypedefType 0x55887c0653c0 'INTN' sugar
| | |-Typedef 0x55887c04a0e0 'INTN'
| | `-TypedefType 0x55887c04a0b0 'INT64' sugar
| |   |-Typedef 0x55887c0499d0 'INT64'
| |   `-BuiltinType 0x55887bfe90f0 'long long'
| `-FullComment 0x55887c363000 <line:32:4, line:33:78>
|   `-ParagraphComment 0x55887c362fd0 <line:32:4, line:33:78>
|     |-TextComment 0x55887c362f80 <line:32:4, col:37> Text=" Processor exception to be hooked."
|     `-TextComment 0x55887c362fa0 <line:33:4, col:78> Text=" All exception types for IA32, X64, Itanium and EBC processors are defined."
|-RecordDecl 0x55887c0c01a8 <line:62:9, line:90:1> line:62:9 struct definition
| |-FullComment 0x55887c3630f0 <line:59:4, line:60:66>
| | `-ParagraphComment 0x55887c3630c0 <line:59:4, line:60:66>
| |   |-TextComment 0x55887c363070 <line:59:4, col:17> Text=" FXSAVE_STATE."
| |   `-TextComment 0x55887c363090 <line:60:4, col:66> Text=" FP / MMX / XMM registers (see fxrstor instruction definition)."
| |-FieldDecl 0x55887c0c0260 <line:63:3, col:13> col:13 Fcw 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0c02c0 <line:64:3, col:13> col:13 Fsw 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0c0320 <line:65:3, col:13> col:13 Ftw 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0c0380 <line:66:3, col:13> col:13 Opcode 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0c03e0 <line:67:3, col:13> col:13 Eip 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c0440 <line:68:3, col:13> col:13 Cs 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0c04a0 <line:69:3, col:13> col:13 Reserved1 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0c0500 <line:70:3, col:13> col:13 DataOffset 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c0560 <line:71:3, col:13> col:13 Ds 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0c0610 <line:72:3, col:25> col:13 Reserved2 'UINT8[10]'
| |-FieldDecl 0x55887c0c06c0 <line:73:3, col:22> col:13 St0Mm0 'UINT8[10]'
| |-FieldDecl 0x55887c0c0770 <col:3, col:36> col:25 Reserved3 'UINT8[6]'
| |-FieldDecl 0x55887c0c0970 <line:74:3, col:22> col:13 St1Mm1 'UINT8[10]'
| |-FieldDecl 0x55887c0c0a20 <col:3, col:36> col:25 Reserved4 'UINT8[6]'
| |-FieldDecl 0x55887c0c0ad0 <line:75:3, col:22> col:13 St2Mm2 'UINT8[10]'
| |-FieldDecl 0x55887c0c0b80 <col:3, col:36> col:25 Reserved5 'UINT8[6]'
| |-FieldDecl 0x55887c0c0c30 <line:76:3, col:22> col:13 St3Mm3 'UINT8[10]'
| |-FieldDecl 0x55887c0c0ce0 <col:3, col:36> col:25 Reserved6 'UINT8[6]'
| |-FieldDecl 0x55887c0c0d90 <line:77:3, col:22> col:13 St4Mm4 'UINT8[10]'
| |-FieldDecl 0x55887c0c0e40 <col:3, col:36> col:25 Reserved7 'UINT8[6]'
| |-FieldDecl 0x55887c0c0ef0 <line:78:3, col:22> col:13 St5Mm5 'UINT8[10]'
| |-FieldDecl 0x55887c0c0fa0 <col:3, col:36> col:25 Reserved8 'UINT8[6]'
| |-FieldDecl 0x55887c0c1050 <line:79:3, col:22> col:13 St6Mm6 'UINT8[10]'
| |-FieldDecl 0x55887c0c1100 <col:3, col:36> col:25 Reserved9 'UINT8[6]'
| |-FieldDecl 0x55887c0c11b0 <line:80:3, col:22> col:13 St7Mm7 'UINT8[10]'
| |-FieldDecl 0x55887c0c1260 <col:3, col:37> col:25 Reserved10 'UINT8[6]'
| |-FieldDecl 0x55887c0c1310 <line:81:3, col:20> col:13 Xmm0 'UINT8[16]'
| |-FieldDecl 0x55887c0c13c0 <line:82:3, col:20> col:13 Xmm1 'UINT8[16]'
| |-FieldDecl 0x55887c0c1470 <line:83:3, col:20> col:13 Xmm2 'UINT8[16]'
| |-FieldDecl 0x55887c0c1520 <line:84:3, col:20> col:13 Xmm3 'UINT8[16]'
| |-FieldDecl 0x55887c0c15d0 <line:85:3, col:20> col:13 Xmm4 'UINT8[16]'
| |-FieldDecl 0x55887c0c1680 <line:86:3, col:20> col:13 Xmm5 'UINT8[16]'
| |-FieldDecl 0x55887c0c1730 <line:87:3, col:20> col:13 Xmm6 'UINT8[16]'
| |-FieldDecl 0x55887c0c17e0 <line:88:3, col:20> col:13 Xmm7 'UINT8[16]'
| `-FieldDecl 0x55887c0c1d90 <line:89:3, col:31> col:13 Reserved11 'UINT8[224]'
|-TypedefDecl 0x55887c0c1e38 <line:62:1, line:90:3> col:3 referenced EFI_FX_SAVE_STATE_IA32 'struct EFI_FX_SAVE_STATE_IA32':'EFI_FX_SAVE_STATE_IA32'
| |-ElaboratedType 0x55887c0c1de0 'struct EFI_FX_SAVE_STATE_IA32' sugar
| | `-RecordType 0x55887c0c0230 'EFI_FX_SAVE_STATE_IA32'
| |   `-Record 0x55887c0c01a8 ''
| `-FullComment 0x55887c3631e0 <line:59:4, line:60:66>
|   `-ParagraphComment 0x55887c3631b0 <line:59:4, line:60:66>
|     |-TextComment 0x55887c363160 <line:59:4, col:17> Text=" FXSAVE_STATE."
|     `-TextComment 0x55887c363180 <line:60:4, col:66> Text=" FP / MMX / XMM registers (see fxrstor instruction definition)."
|-RecordDecl 0x55887c0c1ed0 <line:95:9, line:129:1> line:95:9 struct definition
| |-FullComment 0x55887c3632b0 <line:93:4, col:40>
| | `-ParagraphComment 0x55887c363280 <col:4, col:40>
| |   `-TextComment 0x55887c363250 <col:4, col:40> Text="  IA-32 processor context definition."
| |-FieldDecl 0x55887c0c1f80 <line:96:3, col:29> col:29 ExceptionData 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2000 <line:97:3, col:29> col:29 FxSaveState 'EFI_FX_SAVE_STATE_IA32':'EFI_FX_SAVE_STATE_IA32'
| |-FieldDecl 0x55887c0c2060 <line:98:3, col:29> col:29 Dr0 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c20c0 <line:99:3, col:29> col:29 Dr1 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2120 <line:100:3, col:29> col:29 Dr2 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2180 <line:101:3, col:29> col:29 Dr3 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c21e0 <line:102:3, col:29> col:29 Dr6 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2240 <line:103:3, col:29> col:29 Dr7 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c22a0 <line:104:3, col:29> col:29 Cr0 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2300 <line:105:3, col:29> col:29 Cr1 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2360 <line:106:3, col:29> col:29 Cr2 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c23c0 <line:107:3, col:29> col:29 Cr3 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2420 <line:108:3, col:29> col:29 Cr4 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2480 <line:109:3, col:29> col:29 Eflags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c24e0 <line:110:3, col:29> col:29 Ldtr 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2540 <line:111:3, col:29> col:29 Tr 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2668 <line:112:3, col:35> col:29 Gdtr 'UINT32[2]'
| |-FieldDecl 0x55887c0c2718 <line:113:3, col:35> col:29 Idtr 'UINT32[2]'
| |-FieldDecl 0x55887c0c2778 <line:114:3, col:29> col:29 Eip 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c27d8 <line:115:3, col:29> col:29 Gs 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2838 <line:116:3, col:29> col:29 Fs 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2898 <line:117:3, col:29> col:29 Es 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c28f8 <line:118:3, col:29> col:29 Ds 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2958 <line:119:3, col:29> col:29 Cs 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c29b8 <line:120:3, col:29> col:29 Ss 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2a18 <line:121:3, col:29> col:29 Edi 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2a78 <line:122:3, col:29> col:29 Esi 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2ad8 <line:123:3, col:29> col:29 Ebp 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2b38 <line:124:3, col:29> col:29 Esp 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2b98 <line:125:3, col:29> col:29 Ebx 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2bf8 <line:126:3, col:29> col:29 Edx 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0c2c58 <line:127:3, col:29> col:29 Ecx 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0c2cb8 <line:128:3, col:29> col:29 Eax 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0c4000 <line:95:1, line:129:3> col:3 referenced EFI_SYSTEM_CONTEXT_IA32 'struct EFI_SYSTEM_CONTEXT_IA32':'EFI_SYSTEM_CONTEXT_IA32'
| |-ElaboratedType 0x55887c0c2d10 'struct EFI_SYSTEM_CONTEXT_IA32' sugar
| | `-RecordType 0x55887c0c1f50 'EFI_SYSTEM_CONTEXT_IA32'
| |   `-Record 0x55887c0c1ed0 ''
| `-FullComment 0x55887c363380 <line:93:4, col:40>
|   `-ParagraphComment 0x55887c363350 <col:4, col:40>
|     `-TextComment 0x55887c363320 <col:4, col:40> Text="  IA-32 processor context definition."
|-RecordDecl 0x55887c0c40d0 <line:156:9, line:184:1> line:156:9 struct definition
| |-FullComment 0x55887c363470 <line:153:4, line:154:66>
| | `-ParagraphComment 0x55887c363440 <line:153:4, line:154:66>
| |   |-TextComment 0x55887c3633f0 <line:153:4, col:17> Text=" FXSAVE_STATE."
| |   `-TextComment 0x55887c363410 <line:154:4, col:66> Text=" FP / MMX / XMM registers (see fxrstor instruction definition)."
| |-FieldDecl 0x55887c0c4180 <line:157:3, col:13> col:13 Fcw 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0c41e0 <line:158:3, col:13> col:13 Fsw 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0c4240 <line:159:3, col:13> col:13 Ftw 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0c42a0 <line:160:3, col:13> col:13 Opcode 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0c4300 <line:161:3, col:13> col:13 Rip 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c4360 <line:162:3, col:13> col:13 DataOffset 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c4410 <line:163:3, col:24> col:13 Reserved1 'UINT8[8]'
| |-FieldDecl 0x55887c0c44c0 <line:164:3, col:22> col:13 St0Mm0 'UINT8[10]'
| |-FieldDecl 0x55887c0c4570 <col:3, col:36> col:25 Reserved2 'UINT8[6]'
| |-FieldDecl 0x55887c0c4620 <line:165:3, col:22> col:13 St1Mm1 'UINT8[10]'
| |-FieldDecl 0x55887c0c46d0 <col:3, col:36> col:25 Reserved3 'UINT8[6]'
| |-FieldDecl 0x55887c0c4780 <line:166:3, col:22> col:13 St2Mm2 'UINT8[10]'
| |-FieldDecl 0x55887c0c4830 <col:3, col:36> col:25 Reserved4 'UINT8[6]'
| |-FieldDecl 0x55887c0c48e0 <line:167:3, col:22> col:13 St3Mm3 'UINT8[10]'
| |-FieldDecl 0x55887c0c4990 <col:3, col:36> col:25 Reserved5 'UINT8[6]'
| |-FieldDecl 0x55887c0c4a40 <line:168:3, col:22> col:13 St4Mm4 'UINT8[10]'
| |-FieldDecl 0x55887c0c4af0 <col:3, col:36> col:25 Reserved6 'UINT8[6]'
| |-FieldDecl 0x55887c0c4ba0 <line:169:3, col:22> col:13 St5Mm5 'UINT8[10]'
| |-FieldDecl 0x55887c0c4c50 <col:3, col:36> col:25 Reserved7 'UINT8[6]'
| |-FieldDecl 0x55887c0c4d00 <line:170:3, col:22> col:13 St6Mm6 'UINT8[10]'
| |-FieldDecl 0x55887c0c4db0 <col:3, col:36> col:25 Reserved8 'UINT8[6]'
| |-FieldDecl 0x55887c0c4e60 <line:171:3, col:22> col:13 St7Mm7 'UINT8[10]'
| |-FieldDecl 0x55887c0c4f10 <col:3, col:36> col:25 Reserved9 'UINT8[6]'
| |-FieldDecl 0x55887c0c60a0 <line:172:3, col:20> col:13 Xmm0 'UINT8[16]'
| |-FieldDecl 0x55887c0c6150 <line:173:3, col:20> col:13 Xmm1 'UINT8[16]'
| |-FieldDecl 0x55887c0c6200 <line:174:3, col:20> col:13 Xmm2 'UINT8[16]'
| |-FieldDecl 0x55887c0c62b0 <line:175:3, col:20> col:13 Xmm3 'UINT8[16]'
| |-FieldDecl 0x55887c0c6360 <line:176:3, col:20> col:13 Xmm4 'UINT8[16]'
| |-FieldDecl 0x55887c0c6410 <line:177:3, col:20> col:13 Xmm5 'UINT8[16]'
| |-FieldDecl 0x55887c0c64c0 <line:178:3, col:20> col:13 Xmm6 'UINT8[16]'
| |-FieldDecl 0x55887c0c6570 <line:179:3, col:20> col:13 Xmm7 'UINT8[16]'
| `-FieldDecl 0x55887c0c6660 <line:183:3, col:31> col:13 Reserved11 'UINT8[224]'
|-TypedefDecl 0x55887c0c6708 <line:156:1, line:184:3> col:3 referenced EFI_FX_SAVE_STATE_X64 'struct EFI_FX_SAVE_STATE_X64':'EFI_FX_SAVE_STATE_X64'
| |-ElaboratedType 0x55887c0c66b0 'struct EFI_FX_SAVE_STATE_X64' sugar
| | `-RecordType 0x55887c0c4150 'EFI_FX_SAVE_STATE_X64'
| |   `-Record 0x55887c0c40d0 ''
| `-FullComment 0x55887c363560 <line:153:4, line:154:66>
|   `-ParagraphComment 0x55887c363530 <line:153:4, line:154:66>
|     |-TextComment 0x55887c3634e0 <line:153:4, col:17> Text=" FXSAVE_STATE."
|     `-TextComment 0x55887c363500 <line:154:4, col:66> Text=" FP / MMX / XMM registers (see fxrstor instruction definition)."
|-RecordDecl 0x55887c0c67a0 <line:189:9, line:232:1> line:189:9 struct definition
| |-FullComment 0x55887c363630 <line:187:4, col:38>
| | `-ParagraphComment 0x55887c363600 <col:4, col:38>
| |   `-TextComment 0x55887c3635d0 <col:4, col:38> Text="  x64 processor context definition."
| |-FieldDecl 0x55887c0c6850 <line:190:3, col:28> col:28 ExceptionData 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c68d0 <line:191:3, col:28> col:28 FxSaveState 'EFI_FX_SAVE_STATE_X64':'EFI_FX_SAVE_STATE_X64'
| |-FieldDecl 0x55887c0c6930 <line:192:3, col:28> col:28 Dr0 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c6990 <line:193:3, col:28> col:28 Dr1 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c69f0 <line:194:3, col:28> col:28 Dr2 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c6a50 <line:195:3, col:28> col:28 Dr3 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c6ab0 <line:196:3, col:28> col:28 Dr6 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c6b10 <line:197:3, col:28> col:28 Dr7 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c6b70 <line:198:3, col:28> col:28 Cr0 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c6bd0 <line:199:3, col:28> col:28 Cr1 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c6c30 <line:200:3, col:28> col:28 Cr2 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c6c90 <line:201:3, col:28> col:28 Cr3 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c6cf0 <line:202:3, col:28> col:28 Cr4 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c6d50 <line:203:3, col:28> col:28 Cr8 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c6db0 <line:204:3, col:28> col:28 Rflags 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c6e10 <line:205:3, col:28> col:28 Ldtr 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c6e70 <line:206:3, col:28> col:28 Tr 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c6f98 <line:207:3, col:34> col:28 Gdtr 'UINT64[2]'
| |-FieldDecl 0x55887c0c7048 <line:208:3, col:34> col:28 Idtr 'UINT64[2]'
| |-FieldDecl 0x55887c0c7100 <line:209:3, col:28> col:28 Rip 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7160 <line:210:3, col:28> col:28 Gs 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c71c0 <line:211:3, col:28> col:28 Fs 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7220 <line:212:3, col:28> col:28 Es 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7280 <line:213:3, col:28> col:28 Ds 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c72e0 <line:214:3, col:28> col:28 Cs 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7340 <line:215:3, col:28> col:28 Ss 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c73a0 <line:216:3, col:28> col:28 Rdi 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7400 <line:217:3, col:28> col:28 Rsi 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7460 <line:218:3, col:28> col:28 Rbp 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c74c0 <line:219:3, col:28> col:28 Rsp 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7520 <line:220:3, col:28> col:28 Rbx 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7580 <line:221:3, col:28> col:28 Rdx 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c75e0 <line:222:3, col:28> col:28 Rcx 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7640 <line:223:3, col:28> col:28 Rax 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c76a0 <line:224:3, col:28> col:28 R8 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7700 <line:225:3, col:28> col:28 R9 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7760 <line:226:3, col:28> col:28 R10 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c77c0 <line:227:3, col:28> col:28 R11 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7820 <line:228:3, col:28> col:28 R12 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7880 <line:229:3, col:28> col:28 R13 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c78e0 <line:230:3, col:28> col:28 R14 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c0c7940 <line:231:3, col:28> col:28 R15 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c0c79e8 <line:189:1, line:232:3> col:3 referenced EFI_SYSTEM_CONTEXT_X64 'struct EFI_SYSTEM_CONTEXT_X64':'EFI_SYSTEM_CONTEXT_X64'
| |-ElaboratedType 0x55887c0c7990 'struct EFI_SYSTEM_CONTEXT_X64' sugar
| | `-RecordType 0x55887c0c6820 'EFI_SYSTEM_CONTEXT_X64'
| |   `-Record 0x55887c0c67a0 ''
| `-FullComment 0x55887c363700 <line:187:4, col:38>
|   `-ParagraphComment 0x55887c3636d0 <col:4, col:38>
|     `-TextComment 0x55887c3636a0 <col:4, col:38> Text="  x64 processor context definition."
|-RecordDecl 0x55887c0c7ab0 <line:282:9, line:432:1> line:282:9 struct definition
| |-FullComment 0x55887c3637d0 <line:280:4, col:38>
| | `-ParagraphComment 0x55887c3637a0 <col:4, col:38>
| |   `-TextComment 0x55887c363770 <col:4, col:38> Text="  IPF processor context definition."
| |-FieldDecl 0x55887c0c7b60 <line:287:3, col:13> col:13 Reserved 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7bc0 <line:288:3, col:13> col:13 R1 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7c20 <line:289:3, col:13> col:13 R2 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7c80 <line:290:3, col:13> col:13 R3 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7ce0 <line:291:3, col:13> col:13 R4 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7d40 <line:292:3, col:13> col:13 R5 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7da0 <line:293:3, col:13> col:13 R6 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7e00 <line:294:3, col:13> col:13 R7 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7e60 <line:295:3, col:13> col:13 R8 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7ec0 <line:296:3, col:13> col:13 R9 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7f20 <line:297:3, col:13> col:13 R10 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7f80 <line:298:3, col:13> col:13 R11 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c7fe0 <line:299:3, col:13> col:13 R12 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c8040 <line:300:3, col:13> col:13 R13 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0c80a0 <line:301:3, col:13> col:13 R14 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ca6b0 <line:302:3, col:13> col:13 R15 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ca710 <line:303:3, col:13> col:13 R16 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ca770 <line:304:3, col:13> col:13 R17 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ca7d0 <line:305:3, col:13> col:13 R18 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ca830 <line:306:3, col:13> col:13 R19 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ca890 <line:307:3, col:13> col:13 R20 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ca8f0 <line:308:3, col:13> col:13 R21 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ca950 <line:309:3, col:13> col:13 R22 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ca9b0 <line:310:3, col:13> col:13 R23 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0caa10 <line:311:3, col:13> col:13 R24 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0caa70 <line:312:3, col:13> col:13 R25 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0caad0 <line:313:3, col:13> col:13 R26 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cab30 <line:314:3, col:13> col:13 R27 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cab90 <line:315:3, col:13> col:13 R28 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cabf0 <line:316:3, col:13> col:13 R29 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cac50 <line:317:3, col:13> col:13 R30 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cacb0 <line:318:3, col:13> col:13 R31 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cad60 <line:320:3, col:17> col:13 F2 'UINT64[2]'
| |-FieldDecl 0x55887c0cae10 <line:321:3, col:17> col:13 F3 'UINT64[2]'
| |-FieldDecl 0x55887c0caec0 <line:322:3, col:17> col:13 F4 'UINT64[2]'
| |-FieldDecl 0x55887c0caf70 <line:323:3, col:17> col:13 F5 'UINT64[2]'
| |-FieldDecl 0x55887c0cb020 <line:324:3, col:17> col:13 F6 'UINT64[2]'
| |-FieldDecl 0x55887c0cb0d0 <line:325:3, col:17> col:13 F7 'UINT64[2]'
| |-FieldDecl 0x55887c0cb180 <line:326:3, col:17> col:13 F8 'UINT64[2]'
| |-FieldDecl 0x55887c0cb230 <line:327:3, col:17> col:13 F9 'UINT64[2]'
| |-FieldDecl 0x55887c0cb2e0 <line:328:3, col:18> col:13 F10 'UINT64[2]'
| |-FieldDecl 0x55887c0cb390 <line:329:3, col:18> col:13 F11 'UINT64[2]'
| |-FieldDecl 0x55887c0cb440 <line:330:3, col:18> col:13 F12 'UINT64[2]'
| |-FieldDecl 0x55887c0cb4f0 <line:331:3, col:18> col:13 F13 'UINT64[2]'
| |-FieldDecl 0x55887c0cb5a0 <line:332:3, col:18> col:13 F14 'UINT64[2]'
| |-FieldDecl 0x55887c0cb650 <line:333:3, col:18> col:13 F15 'UINT64[2]'
| |-FieldDecl 0x55887c0cb990 <line:334:3, col:18> col:13 F16 'UINT64[2]'
| |-FieldDecl 0x55887c0cba40 <line:335:3, col:18> col:13 F17 'UINT64[2]'
| |-FieldDecl 0x55887c0cbaf0 <line:336:3, col:18> col:13 F18 'UINT64[2]'
| |-FieldDecl 0x55887c0cbba0 <line:337:3, col:18> col:13 F19 'UINT64[2]'
| |-FieldDecl 0x55887c0cbc50 <line:338:3, col:18> col:13 F20 'UINT64[2]'
| |-FieldDecl 0x55887c0cbd00 <line:339:3, col:18> col:13 F21 'UINT64[2]'
| |-FieldDecl 0x55887c0cbdb0 <line:340:3, col:18> col:13 F22 'UINT64[2]'
| |-FieldDecl 0x55887c0cbe60 <line:341:3, col:18> col:13 F23 'UINT64[2]'
| |-FieldDecl 0x55887c0cbf10 <line:342:3, col:18> col:13 F24 'UINT64[2]'
| |-FieldDecl 0x55887c0cbfc0 <line:343:3, col:18> col:13 F25 'UINT64[2]'
| |-FieldDecl 0x55887c0cc070 <line:344:3, col:18> col:13 F26 'UINT64[2]'
| |-FieldDecl 0x55887c0cc120 <line:345:3, col:18> col:13 F27 'UINT64[2]'
| |-FieldDecl 0x55887c0cc1d0 <line:346:3, col:18> col:13 F28 'UINT64[2]'
| |-FieldDecl 0x55887c0cc280 <line:347:3, col:18> col:13 F29 'UINT64[2]'
| |-FieldDecl 0x55887c0cc330 <line:348:3, col:18> col:13 F30 'UINT64[2]'
| |-FieldDecl 0x55887c0cc3e0 <line:349:3, col:18> col:13 F31 'UINT64[2]'
| |-FieldDecl 0x55887c0cc440 <line:351:3, col:13> col:13 Pr 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cc4a0 <line:353:3, col:13> col:13 B0 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cc500 <line:354:3, col:13> col:13 B1 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cc560 <line:355:3, col:13> col:13 B2 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cc5c0 <line:356:3, col:13> col:13 B3 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cc620 <line:357:3, col:13> col:13 B4 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cc680 <line:358:3, col:13> col:13 B5 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cc6e0 <line:359:3, col:13> col:13 B6 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cc740 <line:360:3, col:13> col:13 B7 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cc7a0 <line:365:3, col:13> col:13 ArRsc 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cc800 <line:366:3, col:13> col:13 ArBsp 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cc860 <line:367:3, col:13> col:13 ArBspstore 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cc8c0 <line:368:3, col:13> col:13 ArRnat 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cd950 <line:370:3, col:13> col:13 ArFcr 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cd9b0 <line:372:3, col:13> col:13 ArEflag 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cda10 <line:373:3, col:13> col:13 ArCsd 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cda70 <line:374:3, col:13> col:13 ArSsd 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cdad0 <line:375:3, col:13> col:13 ArCflg 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cdb30 <line:376:3, col:13> col:13 ArFsr 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cdb90 <line:377:3, col:13> col:13 ArFir 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cdbf0 <line:378:3, col:13> col:13 ArFdr 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cdc50 <line:380:3, col:13> col:13 ArCcv 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cdcb0 <line:382:3, col:13> col:13 ArUnat 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cdd10 <line:384:3, col:13> col:13 ArFpsr 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cdd70 <line:386:3, col:13> col:13 ArPfs 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cddd0 <line:387:3, col:13> col:13 ArLc 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cde30 <line:388:3, col:13> col:13 ArEc 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cde90 <line:393:3, col:13> col:13 CrDcr 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cdef0 <line:394:3, col:13> col:13 CrItm 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cdf50 <line:395:3, col:13> col:13 CrIva 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cdfb0 <line:396:3, col:13> col:13 CrPta 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce010 <line:397:3, col:13> col:13 CrIpsr 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce070 <line:398:3, col:13> col:13 CrIsr 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce0d0 <line:399:3, col:13> col:13 CrIip 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce130 <line:400:3, col:13> col:13 CrIfa 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce190 <line:401:3, col:13> col:13 CrItir 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce1f0 <line:402:3, col:13> col:13 CrIipa 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce250 <line:403:3, col:13> col:13 CrIfs 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce2b0 <line:404:3, col:13> col:13 CrIim 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce310 <line:405:3, col:13> col:13 CrIha 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce370 <line:410:3, col:13> col:13 Dbr0 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce3d0 <line:411:3, col:13> col:13 Dbr1 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce430 <line:412:3, col:13> col:13 Dbr2 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce490 <line:413:3, col:13> col:13 Dbr3 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce4f0 <line:414:3, col:13> col:13 Dbr4 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce550 <line:415:3, col:13> col:13 Dbr5 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce5b0 <line:416:3, col:13> col:13 Dbr6 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce610 <line:417:3, col:13> col:13 Dbr7 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce670 <line:419:3, col:13> col:13 Ibr0 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce6d0 <line:420:3, col:13> col:13 Ibr1 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce730 <line:421:3, col:13> col:13 Ibr2 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce790 <line:422:3, col:13> col:13 Ibr3 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce7f0 <line:423:3, col:13> col:13 Ibr4 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce850 <line:424:3, col:13> col:13 Ibr5 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0ce8b0 <line:425:3, col:13> col:13 Ibr6 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cf170 <line:426:3, col:13> col:13 Ibr7 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c0cf1d0 <line:431:3, col:13> col:13 IntNat 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c0cf278 <line:282:1, line:432:3> col:3 referenced EFI_SYSTEM_CONTEXT_IPF 'struct EFI_SYSTEM_CONTEXT_IPF':'EFI_SYSTEM_CONTEXT_IPF'
| |-ElaboratedType 0x55887c0cf220 'struct EFI_SYSTEM_CONTEXT_IPF' sugar
| | `-RecordType 0x55887c0c7b30 'EFI_SYSTEM_CONTEXT_IPF'
| |   `-Record 0x55887c0c7ab0 ''
| `-FullComment 0x55887c3638a0 <line:280:4, col:38>
|   `-ParagraphComment 0x55887c363870 <col:4, col:38>
|     `-TextComment 0x55887c363840 <col:4, col:38> Text="  IPF processor context definition."
|-RecordDecl 0x55887c0cf430 <line:456:9, line:468:1> line:456:9 struct definition
| |-FullComment 0x55887c363970 <line:454:4, col:38>
| | `-ParagraphComment 0x55887c363940 <col:4, col:38>
| |   `-TextComment 0x55887c363910 <col:4, col:38> Text="  EBC processor context definition."
| |-FieldDecl 0x55887c0cf4e0 <line:457:3, col:13> col:13 R0 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cf540 <line:458:3, col:13> col:13 R1 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cf5a0 <line:459:3, col:13> col:13 R2 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cf600 <line:460:3, col:13> col:13 R3 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cf660 <line:461:3, col:13> col:13 R4 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cf6c0 <line:462:3, col:13> col:13 R5 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cf720 <line:463:3, col:13> col:13 R6 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cf780 <line:464:3, col:13> col:13 R7 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cf7e0 <line:465:3, col:13> col:13 Flags 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0cf840 <line:466:3, col:13> col:13 ControlFlags 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c0cf8a0 <line:467:3, col:13> col:13 Ip 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c0cf948 <line:456:1, line:468:3> col:3 referenced EFI_SYSTEM_CONTEXT_EBC 'struct EFI_SYSTEM_CONTEXT_EBC':'EFI_SYSTEM_CONTEXT_EBC'
| |-ElaboratedType 0x55887c0cf8f0 'struct EFI_SYSTEM_CONTEXT_EBC' sugar
| | `-RecordType 0x55887c0cf4b0 'EFI_SYSTEM_CONTEXT_EBC'
| |   `-Record 0x55887c0cf430 ''
| `-FullComment 0x55887c363a40 <line:454:4, col:38>
|   `-ParagraphComment 0x55887c363a10 <col:4, col:38>
|     `-TextComment 0x55887c3639e0 <col:4, col:38> Text="  EBC processor context definition."
|-RecordDecl 0x55887c0cfa40 <line:490:9, line:512:1> line:490:9 struct definition
| |-FullComment 0x55887c363b10 <line:488:4, col:38>
| | `-ParagraphComment 0x55887c363ae0 <col:4, col:38>
| |   `-TextComment 0x55887c363ab0 <col:4, col:38> Text="  ARM processor context definition."
| |-FieldDecl 0x55887c0cfaf0 <line:491:3, col:13> col:13 R0 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0cfb50 <line:492:3, col:13> col:13 R1 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0cfbb0 <line:493:3, col:13> col:13 R2 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0cfc10 <line:494:3, col:13> col:13 R3 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0cfc70 <line:495:3, col:13> col:13 R4 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0cfcd0 <line:496:3, col:13> col:13 R5 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0cfd30 <line:497:3, col:13> col:13 R6 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0cfd90 <line:498:3, col:13> col:13 R7 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0cfdf0 <line:499:3, col:13> col:13 R8 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0cfe50 <line:500:3, col:13> col:13 R9 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0cfeb0 <line:501:3, col:13> col:13 R10 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0cff10 <line:502:3, col:13> col:13 R11 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0cff70 <line:503:3, col:13> col:13 R12 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0cffd0 <line:504:3, col:13> col:13 SP 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0d0030 <line:505:3, col:13> col:13 LR 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0d0090 <line:506:3, col:13> col:13 PC 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0d00f0 <line:507:3, col:13> col:13 CPSR 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0d17d0 <line:508:3, col:13> col:13 DFSR 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0d1830 <line:509:3, col:13> col:13 DFAR 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0d1890 <line:510:3, col:13> col:13 IFSR 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0d18f0 <line:511:3, col:13> col:13 IFAR 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0d1998 <line:490:1, line:512:3> col:3 referenced EFI_SYSTEM_CONTEXT_ARM 'struct EFI_SYSTEM_CONTEXT_ARM':'EFI_SYSTEM_CONTEXT_ARM'
| |-ElaboratedType 0x55887c0d1940 'struct EFI_SYSTEM_CONTEXT_ARM' sugar
| | `-RecordType 0x55887c0cfac0 'EFI_SYSTEM_CONTEXT_ARM'
| |   `-Record 0x55887c0cfa40 ''
| `-FullComment 0x55887c363be0 <line:488:4, col:38>
|   `-ParagraphComment 0x55887c363bb0 <col:4, col:38>
|     `-TextComment 0x55887c363b80 <col:4, col:38> Text="  ARM processor context definition."
|-RecordDecl 0x55887c0d1a60 <line:527:9, line:601:1> line:527:9 struct definition
| |-FieldDecl 0x55887c0d1b10 <line:529:3, col:13> col:13 X0 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d1b70 <line:530:3, col:13> col:13 X1 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d1bd0 <line:531:3, col:13> col:13 X2 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d1c30 <line:532:3, col:13> col:13 X3 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d1c90 <line:533:3, col:13> col:13 X4 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d1cf0 <line:534:3, col:13> col:13 X5 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d1d50 <line:535:3, col:13> col:13 X6 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d1db0 <line:536:3, col:13> col:13 X7 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d1e10 <line:537:3, col:13> col:13 X8 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d1e70 <line:538:3, col:13> col:13 X9 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d1ed0 <line:539:3, col:13> col:13 X10 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d1f30 <line:540:3, col:13> col:13 X11 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d1f90 <line:541:3, col:13> col:13 X12 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d1ff0 <line:542:3, col:13> col:13 X13 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d2050 <line:543:3, col:13> col:13 X14 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d20b0 <line:544:3, col:13> col:13 X15 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d2110 <line:545:3, col:13> col:13 X16 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d2170 <line:546:3, col:13> col:13 X17 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d21d0 <line:547:3, col:13> col:13 X18 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d2230 <line:548:3, col:13> col:13 X19 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d2290 <line:549:3, col:13> col:13 X20 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d22f0 <line:550:3, col:13> col:13 X21 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d2350 <line:551:3, col:13> col:13 X22 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d23b0 <line:552:3, col:13> col:13 X23 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d2410 <line:553:3, col:13> col:13 X24 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d2470 <line:554:3, col:13> col:13 X25 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d24d0 <line:555:3, col:13> col:13 X26 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d2530 <line:556:3, col:13> col:13 X27 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d2590 <line:557:3, col:13> col:13 X28 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d25f0 <line:558:3, col:13> col:13 FP 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d2650 <line:559:3, col:13> col:13 LR 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d26b0 <line:560:3, col:13> col:13 SP 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d2760 <line:563:3, col:17> col:13 V0 'UINT64[2]'
| |-FieldDecl 0x55887c0d2820 <line:564:3, col:17> col:13 V1 'UINT64[2]'
| |-FieldDecl 0x55887c0d28d0 <line:565:3, col:17> col:13 V2 'UINT64[2]'
| |-FieldDecl 0x55887c0d2980 <line:566:3, col:17> col:13 V3 'UINT64[2]'
| |-FieldDecl 0x55887c0d2a30 <line:567:3, col:17> col:13 V4 'UINT64[2]'
| |-FieldDecl 0x55887c0d2ae0 <line:568:3, col:17> col:13 V5 'UINT64[2]'
| |-FieldDecl 0x55887c0d2b90 <line:569:3, col:17> col:13 V6 'UINT64[2]'
| |-FieldDecl 0x55887c0d2c40 <line:570:3, col:17> col:13 V7 'UINT64[2]'
| |-FieldDecl 0x55887c0d2cf0 <line:571:3, col:17> col:13 V8 'UINT64[2]'
| |-FieldDecl 0x55887c0d2da0 <line:572:3, col:17> col:13 V9 'UINT64[2]'
| |-FieldDecl 0x55887c0d2e50 <line:573:3, col:18> col:13 V10 'UINT64[2]'
| |-FieldDecl 0x55887c0d2f00 <line:574:3, col:18> col:13 V11 'UINT64[2]'
| |-FieldDecl 0x55887c0d2fb0 <line:575:3, col:18> col:13 V12 'UINT64[2]'
| |-FieldDecl 0x55887c0d3060 <line:576:3, col:18> col:13 V13 'UINT64[2]'
| |-FieldDecl 0x55887c0d3110 <line:577:3, col:18> col:13 V14 'UINT64[2]'
| |-FieldDecl 0x55887c0d31c0 <line:578:3, col:18> col:13 V15 'UINT64[2]'
| |-FieldDecl 0x55887c0d3270 <line:579:3, col:18> col:13 V16 'UINT64[2]'
| |-FieldDecl 0x55887c0d3320 <line:580:3, col:18> col:13 V17 'UINT64[2]'
| |-FieldDecl 0x55887c0d33d0 <line:581:3, col:18> col:13 V18 'UINT64[2]'
| |-FieldDecl 0x55887c0d3480 <line:582:3, col:18> col:13 V19 'UINT64[2]'
| |-FieldDecl 0x55887c0d3530 <line:583:3, col:18> col:13 V20 'UINT64[2]'
| |-FieldDecl 0x55887c0d35e0 <line:584:3, col:18> col:13 V21 'UINT64[2]'
| |-FieldDecl 0x55887c0d3690 <line:585:3, col:18> col:13 V22 'UINT64[2]'
| |-FieldDecl 0x55887c0d3740 <line:586:3, col:18> col:13 V23 'UINT64[2]'
| |-FieldDecl 0x55887c0d3810 <line:587:3, col:18> col:13 V24 'UINT64[2]'
| |-FieldDecl 0x55887c0d38c0 <line:588:3, col:18> col:13 V25 'UINT64[2]'
| |-FieldDecl 0x55887c0d3970 <line:589:3, col:18> col:13 V26 'UINT64[2]'
| |-FieldDecl 0x55887c0d3a20 <line:590:3, col:18> col:13 V27 'UINT64[2]'
| |-FieldDecl 0x55887c0d3ad0 <line:591:3, col:18> col:13 V28 'UINT64[2]'
| |-FieldDecl 0x55887c0d3b80 <line:592:3, col:18> col:13 V29 'UINT64[2]'
| |-FieldDecl 0x55887c0d3c30 <line:593:3, col:18> col:13 V30 'UINT64[2]'
| |-FieldDecl 0x55887c0d3ce0 <line:594:3, col:18> col:13 V31 'UINT64[2]'
| |-FieldDecl 0x55887c0d3d40 <line:596:3, col:13> col:13 ELR 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d3da0 <line:597:3, col:13> col:13 SPSR 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d3e00 <line:598:3, col:13> col:13 FPSR 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d3e60 <line:599:3, col:13> col:13 ESR 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c0d3ec0 <line:600:3, col:13> col:13 FAR 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c0d3f68 <line:527:1, line:601:3> col:3 referenced EFI_SYSTEM_CONTEXT_AARCH64 'struct EFI_SYSTEM_CONTEXT_AARCH64':'EFI_SYSTEM_CONTEXT_AARCH64'
| `-ElaboratedType 0x55887c0d3f10 'struct EFI_SYSTEM_CONTEXT_AARCH64' sugar
|   `-RecordType 0x55887c0d1ae0 'EFI_SYSTEM_CONTEXT_AARCH64'
|     `-Record 0x55887c0d1a60 ''
|-RecordDecl 0x55887c0d4030 <line:645:9, line:681:1> line:645:9 struct definition
| |-FieldDecl 0x55887c0d40e0 <line:646:3, col:13> col:13 X0 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d4140 <line:647:3, col:13> col:13 X1 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d41a0 <line:648:3, col:13> col:13 X2 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d4200 <line:649:3, col:13> col:13 X3 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d4260 <line:650:3, col:13> col:13 X4 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d42c0 <line:651:3, col:13> col:13 X5 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d4320 <line:652:3, col:13> col:13 X6 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d4380 <line:653:3, col:13> col:13 X7 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d43e0 <line:654:3, col:13> col:13 X8 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d4440 <line:655:3, col:13> col:13 X9 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d44a0 <line:656:3, col:13> col:13 X10 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d4500 <line:657:3, col:13> col:13 X11 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d4560 <line:658:3, col:13> col:13 X12 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d45c0 <line:659:3, col:13> col:13 X13 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d4620 <line:660:3, col:13> col:13 X14 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d4680 <line:661:3, col:13> col:13 X15 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d46e0 <line:662:3, col:13> col:13 X16 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d4740 <line:663:3, col:13> col:13 X17 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d47a0 <line:664:3, col:13> col:13 X18 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d7840 <line:665:3, col:13> col:13 X19 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d78a0 <line:666:3, col:13> col:13 X20 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d7900 <line:667:3, col:13> col:13 X21 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d7960 <line:668:3, col:13> col:13 X22 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d79c0 <line:669:3, col:13> col:13 X23 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d7a20 <line:670:3, col:13> col:13 X24 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d7a80 <line:671:3, col:13> col:13 X25 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d7ae0 <line:672:3, col:13> col:13 X26 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d7b40 <line:673:3, col:13> col:13 X27 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d7ba0 <line:674:3, col:13> col:13 X28 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d7c00 <line:675:3, col:13> col:13 X29 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d7c60 <line:676:3, col:13> col:13 X30 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d7cc0 <line:677:3, col:13> col:13 X31 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d7d20 <line:678:3, col:13> col:13 SEPC 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d7d80 <line:679:3, col:13> col:13 SSTATUS 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0d7de0 <line:680:3, col:13> col:13 STVAL 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0d7e88 <line:645:1, line:681:3> col:3 referenced EFI_SYSTEM_CONTEXT_RISCV64 'struct EFI_SYSTEM_CONTEXT_RISCV64':'EFI_SYSTEM_CONTEXT_RISCV64'
| `-ElaboratedType 0x55887c0d7e30 'struct EFI_SYSTEM_CONTEXT_RISCV64' sugar
|   `-RecordType 0x55887c0d40b0 'EFI_SYSTEM_CONTEXT_RISCV64'
|     `-Record 0x55887c0d4030 ''
|-RecordDecl 0x55887c0d7ef8 <line:730:9, line:773:1> line:730:9 struct definition
| |-FieldDecl 0x55887c0d7fb0 <line:731:3, col:13> col:13 R0 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d8010 <line:732:3, col:13> col:13 R1 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d8070 <line:733:3, col:13> col:13 R2 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d80d0 <line:734:3, col:13> col:13 R3 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d8130 <line:735:3, col:13> col:13 R4 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d8190 <line:736:3, col:13> col:13 R5 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d81f0 <line:737:3, col:13> col:13 R6 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d8250 <line:738:3, col:13> col:13 R7 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d82b0 <line:739:3, col:13> col:13 R8 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d8310 <line:740:3, col:13> col:13 R9 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d8370 <line:741:3, col:13> col:13 R10 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d83d0 <line:742:3, col:13> col:13 R11 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d8430 <line:743:3, col:13> col:13 R12 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d8490 <line:744:3, col:13> col:13 R13 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d84f0 <line:745:3, col:13> col:13 R14 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d8550 <line:746:3, col:13> col:13 R15 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d85b0 <line:747:3, col:13> col:13 R16 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d8610 <line:748:3, col:13> col:13 R17 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d8670 <line:749:3, col:13> col:13 R18 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d86d0 <line:750:3, col:13> col:13 R19 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d8730 <line:751:3, col:13> col:13 R20 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d8790 <line:752:3, col:13> col:13 R21 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d9850 <line:753:3, col:13> col:13 R22 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d98b0 <line:754:3, col:13> col:13 R23 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d9910 <line:755:3, col:13> col:13 R24 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d9970 <line:756:3, col:13> col:13 R25 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d99d0 <line:757:3, col:13> col:13 R26 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d9a30 <line:758:3, col:13> col:13 R27 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d9a90 <line:759:3, col:13> col:13 R28 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d9af0 <line:760:3, col:13> col:13 R29 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d9b50 <line:761:3, col:13> col:13 R30 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d9bb0 <line:762:3, col:13> col:13 R31 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d9c10 <line:764:3, col:13> col:13 CRMD 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d9c70 <line:765:3, col:13> col:13 PRMD 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d9cd0 <line:766:3, col:13> col:13 EUEN 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d9d30 <line:767:3, col:13> col:13 MISC 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d9d90 <line:768:3, col:13> col:13 ECFG 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d9df0 <line:769:3, col:13> col:13 ESTAT 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d9e50 <line:770:3, col:13> col:13 ERA 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0d9eb0 <line:771:3, col:13> col:13 BADV 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c0d9f10 <line:772:3, col:13> col:13 BADI 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c0d9fb8 <line:730:1, line:773:3> col:3 referenced EFI_SYSTEM_CONTEXT_LOONGARCH64 'struct EFI_SYSTEM_CONTEXT_LOONGARCH64':'EFI_SYSTEM_CONTEXT_LOONGARCH64'
| `-ElaboratedType 0x55887c0d9f60 'struct EFI_SYSTEM_CONTEXT_LOONGARCH64' sugar
|   `-RecordType 0x55887c0d7f80 'EFI_SYSTEM_CONTEXT_LOONGARCH64'
|     `-Record 0x55887c0d7ef8 ''
|-RecordDecl 0x55887c0da050 <line:778:9, line:787:1> line:778:9 union definition
| |-FullComment 0x55887c363cb0 <line:776:4, col:44>
| | `-ParagraphComment 0x55887c363c80 <col:4, col:44>
| |   `-TextComment 0x55887c363c50 <col:4, col:44> Text=" Universal EFI_SYSTEM_CONTEXT definition."
| |-FieldDecl 0x55887c0da178 <line:779:3, col:38> col:38 SystemContextEbc 'EFI_SYSTEM_CONTEXT_EBC *'
| |-FieldDecl 0x55887c0da258 <line:780:3, col:38> col:38 SystemContextIa32 'EFI_SYSTEM_CONTEXT_IA32 *'
| |-FieldDecl 0x55887c0da338 <line:781:3, col:38> col:38 SystemContextX64 'EFI_SYSTEM_CONTEXT_X64 *'
| |-FieldDecl 0x55887c0da418 <line:782:3, col:38> col:38 SystemContextIpf 'EFI_SYSTEM_CONTEXT_IPF *'
| |-FieldDecl 0x55887c0da4f8 <line:783:3, col:38> col:38 SystemContextArm 'EFI_SYSTEM_CONTEXT_ARM *'
| |-FieldDecl 0x55887c0da5d8 <line:784:3, col:38> col:38 SystemContextAArch64 'EFI_SYSTEM_CONTEXT_AARCH64 *'
| |-FieldDecl 0x55887c0da6b8 <line:785:3, col:38> col:38 SystemContextRiscV64 'EFI_SYSTEM_CONTEXT_RISCV64 *'
| `-FieldDecl 0x55887c0da798 <line:786:3, col:38> col:38 SystemContextLoongArch64 'EFI_SYSTEM_CONTEXT_LOONGARCH64 *'
|-TypedefDecl 0x55887c0da860 <line:778:1, line:787:3> col:3 referenced EFI_SYSTEM_CONTEXT 'union EFI_SYSTEM_CONTEXT':'EFI_SYSTEM_CONTEXT'
| |-ElaboratedType 0x55887c0da7f0 'union EFI_SYSTEM_CONTEXT' sugar
| | `-RecordType 0x55887c0da0d0 'EFI_SYSTEM_CONTEXT'
| |   `-Record 0x55887c0da050 ''
| `-FullComment 0x55887c363d80 <line:776:4, col:44>
|   `-ParagraphComment 0x55887c363d50 <col:4, col:44>
|     `-TextComment 0x55887c363d20 <col:4, col:44> Text=" Universal EFI_SYSTEM_CONTEXT definition."
|-TypedefDecl 0x55887c0dab88 <line:800:1, line:805:3> line:802:10 referenced EFI_EXCEPTION_CALLBACK 'void (*)(EFI_EXCEPTION_TYPE, EFI_SYSTEM_CONTEXT)'
| |-PointerType 0x55887c0dab20 'void (*)(EFI_EXCEPTION_TYPE, EFI_SYSTEM_CONTEXT)'
| | `-ParenType 0x55887c0daac0 'void (EFI_EXCEPTION_TYPE, EFI_SYSTEM_CONTEXT)' sugar
| |   `-FunctionProtoType 0x55887c0daa80 'void (EFI_EXCEPTION_TYPE, EFI_SYSTEM_CONTEXT)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     |-TypedefType 0x55887c0da900 'EFI_EXCEPTION_TYPE' sugar
| |     | |-Typedef 0x55887c0c00f0 'EFI_EXCEPTION_TYPE'
| |     | `-TypedefType 0x55887c0653c0 'INTN' sugar
| |     |   |-Typedef 0x55887c04a0e0 'INTN'
| |     |   `-TypedefType 0x55887c04a0b0 'INT64' sugar
| |     |     |-Typedef 0x55887c0499d0 'INT64'
| |     |     `-BuiltinType 0x55887bfe90f0 'long long'
| |     `-TypedefType 0x55887c0da9a0 'EFI_SYSTEM_CONTEXT' sugar
| |       |-Typedef 0x55887c0da860 'EFI_SYSTEM_CONTEXT'
| |       `-ElaboratedType 0x55887c0da7f0 'union EFI_SYSTEM_CONTEXT' sugar
| |         `-RecordType 0x55887c0da0d0 'EFI_SYSTEM_CONTEXT'
| |           `-Record 0x55887c0da050 ''
| `-FullComment 0x55887c364030 <line:794:1, line:797:50>
|   |-ParagraphComment 0x55887c363e20 <line:794:1, col:83>
|   | `-TextComment 0x55887c363df0 <col:1, col:83> Text="  Registers and enables an exception callback function for the specified exception."
|   |-ParagraphComment 0x55887c363e70 <line:796:1, col:2>
|   | `-TextComment 0x55887c363e40 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c363e90 <col:3, line:797:2> [in] implicitly Param="ExceptionType" ParamIndex=0
|   | `-ParagraphComment 0x55887c363f40 <line:796:24, line:797:2>
|   |   |-TextComment 0x55887c363ef0 <line:796:24, col:75> Text="         Exception types in EBC, IA-32, x64, or IPF."
|   |   `-TextComment 0x55887c363f10 <line:797:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c363f60 <col:3, col:50> [in] implicitly Param="SystemContext" ParamIndex=1
|     `-ParagraphComment 0x55887c363ff0 <col:24, col:50>
|       `-TextComment 0x55887c363fc0 <col:24, col:50> Text="         Exception content."
|-TypedefDecl 0x55887c0dada0 <line:813:1, line:817:3> line:815:10 referenced EFI_PERIODIC_CALLBACK 'void (*)(EFI_SYSTEM_CONTEXT)'
| |-PointerType 0x55887c0dad40 'void (*)(EFI_SYSTEM_CONTEXT)'
| | `-ParenType 0x55887c0dace0 'void (EFI_SYSTEM_CONTEXT)' sugar
| |   `-FunctionProtoType 0x55887c0dacb0 'void (EFI_SYSTEM_CONTEXT)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     `-TypedefType 0x55887c0da9a0 'EFI_SYSTEM_CONTEXT' sugar
| |       |-Typedef 0x55887c0da860 'EFI_SYSTEM_CONTEXT'
| |       `-ElaboratedType 0x55887c0da7f0 'union EFI_SYSTEM_CONTEXT' sugar
| |         `-RecordType 0x55887c0da0d0 'EFI_SYSTEM_CONTEXT'
| |           `-Record 0x55887c0da050 ''
| `-FullComment 0x55887c364210 <line:808:1, line:810:50>
|   |-ParagraphComment 0x55887c3640d0 <line:808:1, col:73>
|   | `-TextComment 0x55887c3640a0 <col:1, col:73> Text="  Registers and enables the on-target debug agent's periodic entry point."
|   |-ParagraphComment 0x55887c364120 <line:810:1, col:2>
|   | `-TextComment 0x55887c3640f0 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c364140 <col:3, col:50> [in] implicitly Param="SystemContext" ParamIndex=0
|     `-ParagraphComment 0x55887c3641d0 <col:24, col:50>
|       `-TextComment 0x55887c3641a0 <col:24, col:50> Text="         Exception content."
|-EnumDecl 0x55887c0dae28 <line:822:9, line:829:1> line:822:9
| |-FullComment 0x55887c365300 <line:820:4, col:27>
| | `-ParagraphComment 0x55887c3642b0 <col:4, col:27>
| |   `-TextComment 0x55887c364280 <col:4, col:27> Text=" Machine type definition"
| |-EnumConstantDecl 0x55887c0daf30 <line:823:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:33:44> /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Protocol/DebugSupport.h:823:3 IsaIa32 'int'
| | |-ConstantExpr 0x55887c0daf10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:33:44> 'int'
| | | |-value: Int 332
| | | `-IntegerLiteral 0x55887c0daef0 <col:44> 'int' 332
| | `-FullComment 0x55887c3653d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Protocol/DebugSupport.h:823:55, col:61>
| |   `-ParagraphComment 0x55887c3653a0 <col:55, col:61>
| |     `-TextComment 0x55887c365370 <col:55, col:61> Text=" 0x014C"
| |-EnumConstantDecl 0x55887c0dafe8 <line:824:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:36:44> /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Protocol/DebugSupport.h:824:3 IsaX64 'int'
| | |-ConstantExpr 0x55887c0dafc8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:36:44> 'int'
| | | |-value: Int 34404
| | | `-IntegerLiteral 0x55887c0dafa8 <col:44> 'int' 34404
| | `-FullComment 0x55887c3654a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Protocol/DebugSupport.h:824:55, col:61>
| |   `-ParagraphComment 0x55887c365470 <col:55, col:61>
| |     `-TextComment 0x55887c365440 <col:55, col:61> Text=" 0x8664"
| |-EnumConstantDecl 0x55887c0db0a8 <line:825:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:34:44> /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Protocol/DebugSupport.h:825:3 IsaIpf 'int'
| | |-ConstantExpr 0x55887c0db088 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:34:44> 'int'
| | | |-value: Int 512
| | | `-IntegerLiteral 0x55887c0db068 <col:44> 'int' 512
| | `-FullComment 0x55887c365570 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Protocol/DebugSupport.h:825:55, col:61>
| |   `-ParagraphComment 0x55887c365540 <col:55, col:61>
| |     `-TextComment 0x55887c365510 <col:55, col:61> Text=" 0x0200"
| |-EnumConstantDecl 0x55887c0db168 <line:826:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:35:44> /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Protocol/DebugSupport.h:826:3 IsaEbc 'int'
| | |-ConstantExpr 0x55887c0db148 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:35:44> 'int'
| | | |-value: Int 3772
| | | `-IntegerLiteral 0x55887c0db128 <col:44> 'int' 3772
| | `-FullComment 0x55887c365640 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Protocol/DebugSupport.h:826:55, col:61>
| |   `-ParagraphComment 0x55887c365610 <col:55, col:61>
| |     `-TextComment 0x55887c3655e0 <col:55, col:61> Text=" 0x0EBC"
| |-EnumConstantDecl 0x55887c0db228 <line:827:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:37:44> /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Protocol/DebugSupport.h:827:3 IsaArm 'int'
| | |-ConstantExpr 0x55887c0db208 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:37:44> 'int'
| | | |-value: Int 450
| | | `-IntegerLiteral 0x55887c0db1e8 <col:44> 'int' 450
| | `-FullComment 0x55887c365710 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Protocol/DebugSupport.h:827:55, col:61>
| |   `-ParagraphComment 0x55887c3656e0 <col:55, col:61>
| |     `-TextComment 0x55887c3656b0 <col:55, col:61> Text=" 0x01c2"
| `-EnumConstantDecl 0x55887c0db318 <line:828:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:38:44> /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Protocol/DebugSupport.h:828:3 IsaAArch64 'int'
|   |-ConstantExpr 0x55887c0db2f8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/PeImage.h:38:44> 'int'
|   | |-value: Int 43620
|   | `-IntegerLiteral 0x55887c0db2a8 <col:44> 'int' 43620
|   `-FullComment 0x55887c3657e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Protocol/DebugSupport.h:828:55, col:61>
|     `-ParagraphComment 0x55887c3657b0 <col:55, col:61>
|       `-TextComment 0x55887c365780 <col:55, col:61> Text=" 0xAA64"
|-TypedefDecl 0x55887c0db3c8 <line:822:1, line:829:3> col:3 referenced EFI_INSTRUCTION_SET_ARCHITECTURE 'enum EFI_INSTRUCTION_SET_ARCHITECTURE':'EFI_INSTRUCTION_SET_ARCHITECTURE'
| |-ElaboratedType 0x55887c0db370 'enum EFI_INSTRUCTION_SET_ARCHITECTURE' sugar
| | `-EnumType 0x55887c0daed0 'EFI_INSTRUCTION_SET_ARCHITECTURE'
| |   `-Enum 0x55887c0dae28 ''
| `-FullComment 0x55887c3658b0 <line:820:4, col:27>
|   `-ParagraphComment 0x55887c365880 <col:4, col:27>
|     `-TextComment 0x55887c365850 <col:4, col:27> Text=" Machine type definition"
|-TypedefDecl 0x55887c0db738 <line:846:1, line:851:3> line:848:10 referenced EFI_GET_MAXIMUM_PROCESSOR_INDEX 'EFI_STATUS (*)(EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN *)'
| |-PointerType 0x55887c0db6d0 'EFI_STATUS (*)(EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN *)'
| | `-ParenType 0x55887c0db670 'EFI_STATUS (EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN *)' sugar
| |   `-FunctionProtoType 0x55887c0db630 'EFI_STATUS (EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c0db4d0 'EFI_DEBUG_SUPPORT_PROTOCOL *'
| |     | `-TypedefType 0x55887c0db480 'EFI_DEBUG_SUPPORT_PROTOCOL' sugar
| |     |   |-Typedef 0x55887c0c0018 'EFI_DEBUG_SUPPORT_PROTOCOL'
| |     |   `-ElaboratedType 0x55887c0bffc0 'struct _EFI_DEBUG_SUPPORT_PROTOCOL' sugar
| |     |     `-RecordType 0x55887c0bffa0 'struct _EFI_DEBUG_SUPPORT_PROTOCOL'
| |     |       `-Record 0x55887c0dd348 '_EFI_DEBUG_SUPPORT_PROTOCOL'
| |     `-PointerType 0x55887c052800 'UINTN *'
| |       `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |         |-Typedef 0x55887c04a020 'UINTN'
| |         `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |           |-Typedef 0x55887c049930 'UINT64'
| |           `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c365cb0 <line:836:1, line:843:68>
|   |-ParagraphComment 0x55887c365970 <line:836:1, line:837:61>
|   | |-TextComment 0x55887c365920 <line:836:1, col:80> Text="  Returns the maximum value that may be used for the ProcessorIndex parameter in"
|   | `-TextComment 0x55887c365940 <line:837:1, col:61> Text="  RegisterPeriodicCallback() and RegisterExceptionCallback()."
|   |-ParagraphComment 0x55887c3659c0 <line:839:1, col:2>
|   | `-TextComment 0x55887c365990 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3659e0 <col:3, line:840:2> [in] implicitly Param="This" ParamIndex=0
|   | `-ParagraphComment 0x55887c365a90 <line:839:15, line:840:2>
|   |   |-TextComment 0x55887c365a40 <line:839:15, col:85> Text="                  A pointer to the EFI_DEBUG_SUPPORT_PROTOCOL instance."
|   |   `-TextComment 0x55887c365a60 <line:840:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c365ab0 <col:3, line:841:60> [in] implicitly Param="MaxProcessorIndex" ParamIndex=1
|   | `-ParagraphComment 0x55887c365b70 <line:840:28, line:841:60>
|   |   |-TextComment 0x55887c365b20 <line:840:28, col:98> Text="     Pointer to a caller-allocated UINTN in which the maximum supported"
|   |   `-TextComment 0x55887c365b40 <line:841:1, col:60> Text="                                processor index is returned."
|   |-ParagraphComment 0x55887c365bc0 <line:843:1, col:2>
|   | `-TextComment 0x55887c365b90 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c365be0 <col:3, col:68> Name="retval" Arg[0]="EFI_SUCCESS"
|     `-ParagraphComment 0x55887c365c60 <col:22, col:68>
|       `-TextComment 0x55887c365c30 <col:22, col:68> Text="           The function completed successfully."
|-TypedefDecl 0x55887c0dcae0 <line:868:1, line:874:3> line:870:10 referenced EFI_REGISTER_PERIODIC_CALLBACK 'EFI_STATUS (*)(EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN, EFI_PERIODIC_CALLBACK)'
| |-PointerType 0x55887c0dca70 'EFI_STATUS (*)(EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN, EFI_PERIODIC_CALLBACK)'
| | `-ParenType 0x55887c0dca10 'EFI_STATUS (EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN, EFI_PERIODIC_CALLBACK)' sugar
| |   `-FunctionProtoType 0x55887c0dc9d0 'EFI_STATUS (EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN, EFI_PERIODIC_CALLBACK)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c0db4d0 'EFI_DEBUG_SUPPORT_PROTOCOL *'
| |     | `-TypedefType 0x55887c0db480 'EFI_DEBUG_SUPPORT_PROTOCOL' sugar
| |     |   |-Typedef 0x55887c0c0018 'EFI_DEBUG_SUPPORT_PROTOCOL'
| |     |   `-ElaboratedType 0x55887c0bffc0 'struct _EFI_DEBUG_SUPPORT_PROTOCOL' sugar
| |     |     `-RecordType 0x55887c0bffa0 'struct _EFI_DEBUG_SUPPORT_PROTOCOL'
| |     |       `-Record 0x55887c0dd348 '_EFI_DEBUG_SUPPORT_PROTOCOL'
| |     |-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     | |-Typedef 0x55887c04a020 'UINTN'
| |     | `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |   |-Typedef 0x55887c049930 'UINT64'
| |     |   `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-TypedefType 0x55887c0dc8f0 'EFI_PERIODIC_CALLBACK' sugar
| |       |-Typedef 0x55887c0dada0 'EFI_PERIODIC_CALLBACK'
| |       `-PointerType 0x55887c0dad40 'void (*)(EFI_SYSTEM_CONTEXT)'
| |         `-ParenType 0x55887c0dace0 'void (EFI_SYSTEM_CONTEXT)' sugar
| |           `-FunctionProtoType 0x55887c0dacb0 'void (EFI_SYSTEM_CONTEXT)' cdecl
| |             |-BuiltinType 0x55887bfe9010 'void'
| |             `-TypedefType 0x55887c0da9a0 'EFI_SYSTEM_CONTEXT' sugar
| |               |-Typedef 0x55887c0da860 'EFI_SYSTEM_CONTEXT'
| |               `-ElaboratedType 0x55887c0da7f0 'union EFI_SYSTEM_CONTEXT' sugar
| |                 `-RecordType 0x55887c0da0d0 'EFI_SYSTEM_CONTEXT'
| |                   `-Record 0x55887c0da050 ''
| `-FullComment 0x55887c366370 <line:854:1, line:865:41>
|   |-ParagraphComment 0x55887c365d50 <line:854:1, col:75>
|   | `-TextComment 0x55887c365d20 <col:1, col:75> Text="  Registers a function to be called back periodically in interrupt context."
|   |-ParagraphComment 0x55887c365da0 <line:856:1, col:2>
|   | `-TextComment 0x55887c365d70 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c365dc0 <col:3, line:857:2> [in] implicitly Param="This" ParamIndex=0
|   | `-ParagraphComment 0x55887c365e70 <line:856:15, line:857:2>
|   |   |-TextComment 0x55887c365e20 <line:856:15, col:85> Text="                  A pointer to the EFI_DEBUG_SUPPORT_PROTOCOL instance."
|   |   `-TextComment 0x55887c365e40 <line:857:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c365e90 <col:3, line:858:2> [in] implicitly Param="ProcessorIndex" ParamIndex=1
|   | `-ParagraphComment 0x55887c365f40 <line:857:25, line:858:2>
|   |   |-TextComment 0x55887c365ef0 <line:857:25, col:91> Text="        Specifies which processor the callback function applies to."
|   |   `-TextComment 0x55887c365f10 <line:858:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c365f60 <col:3, line:859:72> [in] implicitly Param="PeriodicCallback" ParamIndex=2
|   | `-ParagraphComment 0x55887c366020 <line:858:27, line:859:72>
|   |   |-TextComment 0x55887c365fd0 <line:858:27, col:98> Text="      A pointer to a function of type PERIODIC_CALLBACK that is the main"
|   |   `-TextComment 0x55887c365ff0 <line:859:1, col:72> Text="                                periodic entry point of the debug agent."
|   |-ParagraphComment 0x55887c366070 <line:861:1, col:2>
|   | `-TextComment 0x55887c366040 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c366090 <col:3, line:862:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c366130 <line:861:22, line:862:2>
|   |   |-TextComment 0x55887c3660e0 <line:861:22, col:68> Text="           The function completed successfully."
|   |   `-TextComment 0x55887c366100 <line:862:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c366150 <col:3, line:864:2> Name="retval" Arg[0]="EFI_ALREADY_STARTED"
|   | `-ParagraphComment 0x55887c366230 <line:862:30, line:864:2>
|   |   |-TextComment 0x55887c3661b0 <line:862:30, col:83> Text="   Non-NULL PeriodicCallback parameter when a callback"
|   |   |-TextComment 0x55887c3661d0 <line:863:1, col:67> Text="                                function was previously registered."
|   |   `-TextComment 0x55887c3661f0 <line:864:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c366250 <col:3, line:865:41> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|     `-ParagraphComment 0x55887c366300 <line:864:31, line:865:41>
|       |-TextComment 0x55887c3662b0 <line:864:31, col:97> Text="  System has insufficient memory resources to register new callback"
|       `-TextComment 0x55887c3662d0 <line:865:1, col:41> Text="                                function."
|-TypedefDecl 0x55887c0dcee8 <line:892:1, line:899:3> line:894:10 referenced EFI_REGISTER_EXCEPTION_CALLBACK 'EFI_STATUS (*)(EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN, EFI_EXCEPTION_CALLBACK, EFI_EXCEPTION_TYPE)'
| |-PointerType 0x55887c0dce70 'EFI_STATUS (*)(EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN, EFI_EXCEPTION_CALLBACK, EFI_EXCEPTION_TYPE)'
| | `-ParenType 0x55887c0dce10 'EFI_STATUS (EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN, EFI_EXCEPTION_CALLBACK, EFI_EXCEPTION_TYPE)' sugar
| |   `-FunctionProtoType 0x55887c0dcdc0 'EFI_STATUS (EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN, EFI_EXCEPTION_CALLBACK, EFI_EXCEPTION_TYPE)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c0db4d0 'EFI_DEBUG_SUPPORT_PROTOCOL *'
| |     | `-TypedefType 0x55887c0db480 'EFI_DEBUG_SUPPORT_PROTOCOL' sugar
| |     |   |-Typedef 0x55887c0c0018 'EFI_DEBUG_SUPPORT_PROTOCOL'
| |     |   `-ElaboratedType 0x55887c0bffc0 'struct _EFI_DEBUG_SUPPORT_PROTOCOL' sugar
| |     |     `-RecordType 0x55887c0bffa0 'struct _EFI_DEBUG_SUPPORT_PROTOCOL'
| |     |       `-Record 0x55887c0dd348 '_EFI_DEBUG_SUPPORT_PROTOCOL'
| |     |-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     | |-Typedef 0x55887c04a020 'UINTN'
| |     | `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |   |-Typedef 0x55887c049930 'UINT64'
| |     |   `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-TypedefType 0x55887c0dcc60 'EFI_EXCEPTION_CALLBACK' sugar
| |     | |-Typedef 0x55887c0dab88 'EFI_EXCEPTION_CALLBACK'
| |     | `-PointerType 0x55887c0dab20 'void (*)(EFI_EXCEPTION_TYPE, EFI_SYSTEM_CONTEXT)'
| |     |   `-ParenType 0x55887c0daac0 'void (EFI_EXCEPTION_TYPE, EFI_SYSTEM_CONTEXT)' sugar
| |     |     `-FunctionProtoType 0x55887c0daa80 'void (EFI_EXCEPTION_TYPE, EFI_SYSTEM_CONTEXT)' cdecl
| |     |       |-BuiltinType 0x55887bfe9010 'void'
| |     |       |-TypedefType 0x55887c0da900 'EFI_EXCEPTION_TYPE' sugar
| |     |       | |-Typedef 0x55887c0c00f0 'EFI_EXCEPTION_TYPE'
| |     |       | `-TypedefType 0x55887c0653c0 'INTN' sugar
| |     |       |   |-Typedef 0x55887c04a0e0 'INTN'
| |     |       |   `-TypedefType 0x55887c04a0b0 'INT64' sugar
| |     |       |     |-Typedef 0x55887c0499d0 'INT64'
| |     |       |     `-BuiltinType 0x55887bfe90f0 'long long'
| |     |       `-TypedefType 0x55887c0da9a0 'EFI_SYSTEM_CONTEXT' sugar
| |     |         |-Typedef 0x55887c0da860 'EFI_SYSTEM_CONTEXT'
| |     |         `-ElaboratedType 0x55887c0da7f0 'union EFI_SYSTEM_CONTEXT' sugar
| |     |           `-RecordType 0x55887c0da0d0 'EFI_SYSTEM_CONTEXT'
| |     |             `-Record 0x55887c0da050 ''
| |     `-TypedefType 0x55887c0da900 'EFI_EXCEPTION_TYPE' sugar
| |       |-Typedef 0x55887c0c00f0 'EFI_EXCEPTION_TYPE'
| |       `-TypedefType 0x55887c0653c0 'INTN' sugar
| |         |-Typedef 0x55887c04a0e0 'INTN'
| |         `-TypedefType 0x55887c04a0b0 'INT64' sugar
| |           |-Typedef 0x55887c0499d0 'INT64'
| |           `-BuiltinType 0x55887bfe90f0 'long long'
| `-FullComment 0x55887c366b10 <line:877:1, line:889:41>
|   |-ParagraphComment 0x55887c366410 <line:877:1, col:76>
|   | `-TextComment 0x55887c3663e0 <col:1, col:76> Text="  Registers a function to be called when a given processor exception occurs."
|   |-ParagraphComment 0x55887c366460 <line:879:1, col:2>
|   | `-TextComment 0x55887c366430 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c366480 <col:3, line:880:2> [in] implicitly Param="This" ParamIndex=0
|   | `-ParagraphComment 0x55887c366530 <line:879:15, line:880:2>
|   |   |-TextComment 0x55887c3664e0 <line:879:15, col:85> Text="                  A pointer to the EFI_DEBUG_SUPPORT_PROTOCOL instance."
|   |   `-TextComment 0x55887c366500 <line:880:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c366550 <col:3, line:881:2> [in] implicitly Param="ProcessorIndex" ParamIndex=1
|   | `-ParagraphComment 0x55887c366600 <line:880:25, line:881:2>
|   |   |-TextComment 0x55887c3665b0 <line:880:25, col:91> Text="        Specifies which processor the callback function applies to."
|   |   `-TextComment 0x55887c3665d0 <line:881:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c366620 <col:3, line:883:2> [in] implicitly Param="ExceptionCallback" ParamIndex=2
|   | `-ParagraphComment 0x55887c366710 <line:881:28, line:883:2>
|   |   |-TextComment 0x55887c366690 <line:881:28, col:97> Text="     A pointer to a function of type EXCEPTION_CALLBACK that is called"
|   |   |-TextComment 0x55887c3666b0 <line:882:1, col:95> Text="                                when the processor exception specified by ExceptionType occurs."
|   |   `-TextComment 0x55887c3666d0 <line:883:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c366730 <col:3, col:76> [in] implicitly Param="ExceptionType" ParamIndex=3
|   | `-ParagraphComment 0x55887c3667c0 <col:24, col:76>
|   |   `-TextComment 0x55887c366790 <col:24, col:76> Text="         Specifies which processor exception to hook."
|   |-ParagraphComment 0x55887c366810 <line:885:1, col:2>
|   | `-TextComment 0x55887c3667e0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c366830 <col:3, line:886:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3668d0 <line:885:22, line:886:2>
|   |   |-TextComment 0x55887c366880 <line:885:22, col:68> Text="           The function completed successfully."
|   |   `-TextComment 0x55887c3668a0 <line:886:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3668f0 <col:3, line:888:2> Name="retval" Arg[0]="EFI_ALREADY_STARTED"
|   | `-ParagraphComment 0x55887c3669d0 <line:886:30, line:888:2>
|   |   |-TextComment 0x55887c366950 <line:886:30, col:83> Text="   Non-NULL PeriodicCallback parameter when a callback"
|   |   |-TextComment 0x55887c366970 <line:887:1, col:67> Text="                                function was previously registered."
|   |   `-TextComment 0x55887c366990 <line:888:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3669f0 <col:3, line:889:41> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|     `-ParagraphComment 0x55887c366aa0 <line:888:31, line:889:41>
|       |-TextComment 0x55887c366a50 <line:888:31, col:97> Text="  System has insufficient memory resources to register new callback"
|       `-TextComment 0x55887c366a70 <line:889:1, col:41> Text="                                function."
|-TypedefDecl 0x55887c0dd2c8 <line:914:1, line:921:3> line:916:10 referenced EFI_INVALIDATE_INSTRUCTION_CACHE 'EFI_STATUS (*)(EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN, void *, UINT64)'
| |-PointerType 0x55887c0dd250 'EFI_STATUS (*)(EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN, void *, UINT64)'
| | `-ParenType 0x55887c0dd1f0 'EFI_STATUS (EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN, void *, UINT64)' sugar
| |   `-FunctionProtoType 0x55887c0dd1a0 'EFI_STATUS (EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN, void *, UINT64)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c0db4d0 'EFI_DEBUG_SUPPORT_PROTOCOL *'
| |     | `-TypedefType 0x55887c0db480 'EFI_DEBUG_SUPPORT_PROTOCOL' sugar
| |     |   |-Typedef 0x55887c0c0018 'EFI_DEBUG_SUPPORT_PROTOCOL'
| |     |   `-ElaboratedType 0x55887c0bffc0 'struct _EFI_DEBUG_SUPPORT_PROTOCOL' sugar
| |     |     `-RecordType 0x55887c0bffa0 'struct _EFI_DEBUG_SUPPORT_PROTOCOL'
| |     |       `-Record 0x55887c0dd348 '_EFI_DEBUG_SUPPORT_PROTOCOL'
| |     |-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     | |-Typedef 0x55887c04a020 'UINTN'
| |     | `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |   |-Typedef 0x55887c049930 'UINT64'
| |     |   `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887bfe9730 'void *'
| |     | `-BuiltinType 0x55887bfe9010 'void'
| |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |       |-Typedef 0x55887c049930 'UINT64'
| |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c3670b0 <line:902:1, line:911:68>
|   |-ParagraphComment 0x55887c366bd0 <line:902:1, line:903:62>
|   | |-TextComment 0x55887c366b80 <line:902:1, col:96> Text="  Invalidates processor instruction cache for a memory range. Subsequent execution in this range"
|   | `-TextComment 0x55887c366ba0 <line:903:1, col:62> Text="  causes a fresh memory fetch to retrieve code to be executed."
|   |-ParagraphComment 0x55887c366c20 <line:905:1, col:2>
|   | `-TextComment 0x55887c366bf0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c366c40 <col:3, line:906:2> [in] implicitly Param="This" ParamIndex=0
|   | `-ParagraphComment 0x55887c366cf0 <line:905:15, line:906:2>
|   |   |-TextComment 0x55887c366ca0 <line:905:15, col:85> Text="                  A pointer to the EFI_DEBUG_SUPPORT_PROTOCOL instance."
|   |   `-TextComment 0x55887c366cc0 <line:906:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c366d10 <col:3, line:907:2> [in] implicitly Param="ProcessorIndex" ParamIndex=1
|   | `-ParagraphComment 0x55887c366dc0 <line:906:25, line:907:2>
|   |   |-TextComment 0x55887c366d70 <line:906:25, col:99> Text="        Specifies which processor's instruction cache is to be invalidated."
|   |   `-TextComment 0x55887c366d90 <line:907:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c366de0 <col:3, line:908:2> [in] implicitly Param="Start" ParamIndex=2
|   | `-ParagraphComment 0x55887c366e90 <line:907:16, line:908:2>
|   |   |-TextComment 0x55887c366e40 <line:907:16, col:98> Text="                 Specifies the physical base of the memory range to be invalidated."
|   |   `-TextComment 0x55887c366e60 <line:908:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c366eb0 <col:3, line:909:52> [in] implicitly Param="Length" ParamIndex=3
|   | `-ParagraphComment 0x55887c366f60 <line:908:17, line:909:52>
|   |   |-TextComment 0x55887c366f10 <line:908:17, col:100> Text="                Specifies the minimum number of bytes in the processor's instruction"
|   |   `-TextComment 0x55887c366f30 <line:909:1, col:52> Text="                                cache to invalidate."
|   |-ParagraphComment 0x55887c366fb0 <line:911:1, col:2>
|   | `-TextComment 0x55887c366f80 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c366fd0 <col:3, col:68> Name="retval" Arg[0]="EFI_SUCCESS"
|     `-ParagraphComment 0x55887c367050 <col:22, col:68>
|       `-TextComment 0x55887c367020 <col:22, col:68> Text="           The function completed successfully."
|-RecordDecl 0x55887c0dd348 prev 0x55887c0bff18 <line:928:1, line:937:1> line:928:8 struct _EFI_DEBUG_SUPPORT_PROTOCOL definition
| |-FullComment 0x55887c3671d0 <line:924:4, line:926:31>
| | `-ParagraphComment 0x55887c3671a0 <line:924:4, line:926:31>
| |   |-TextComment 0x55887c367120 <line:924:4, col:76> Text=" This protocol provides the services to allow the debug agent to register"
| |   |-TextComment 0x55887c367140 <line:925:4, col:75> Text=" callback functions that are called either periodically or when specific"
| |   `-TextComment 0x55887c367160 <line:926:4, col:31> Text=" processor exceptions occur."
| |-FieldDecl 0x55887c0dd430 <line:932:3, col:39> col:39 Isa 'EFI_INSTRUCTION_SET_ARCHITECTURE':'EFI_INSTRUCTION_SET_ARCHITECTURE'
| | `-FullComment 0x55887c3672a0 <line:930:6, col:94>
| |   `-ParagraphComment 0x55887c367270 <col:6, col:94>
| |     `-TextComment 0x55887c367240 <col:6, col:94> Text=" Declares the processor architecture for this instance of the EFI Debug Support protocol."
| |-FieldDecl 0x55887c0dd4b0 <line:933:3, col:39> col:39 GetMaximumProcessorIndex 'EFI_GET_MAXIMUM_PROCESSOR_INDEX':'EFI_STATUS (*)(EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN *)'
| |-FieldDecl 0x55887c0dd530 <line:934:3, col:39> col:39 RegisterPeriodicCallback 'EFI_REGISTER_PERIODIC_CALLBACK':'EFI_STATUS (*)(EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN, EFI_PERIODIC_CALLBACK)'
| |-FieldDecl 0x55887c0dd5b0 <line:935:3, col:39> col:39 RegisterExceptionCallback 'EFI_REGISTER_EXCEPTION_CALLBACK':'EFI_STATUS (*)(EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN, EFI_EXCEPTION_CALLBACK, EFI_EXCEPTION_TYPE)'
| `-FieldDecl 0x55887c0dd630 <line:936:3, col:39> col:39 InvalidateInstructionCache 'EFI_INVALIDATE_INSTRUCTION_CACHE':'EFI_STATUS (*)(EFI_DEBUG_SUPPORT_PROTOCOL *, UINTN, void *, UINT64)'
|-VarDecl 0x55887c0dd690 <line:939:1, col:18> col:18 gEfiDebugSupportProtocolGuid 'EFI_GUID':'GUID' extern
|-TypedefDecl 0x55887c0dd738 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:24:1, col:16> col:16 referenced EFI_STATUS_CODE_TYPE 'UINT32':'unsigned int'
| |-TypedefType 0x55887c04a5d0 'UINT32' sugar
| | |-Typedef 0x55887c049a70 'UINT32'
| | `-BuiltinType 0x55887bfe9150 'unsigned int'
| `-FullComment 0x55887c3673a0 <line:22:4, col:32>
|   `-ParagraphComment 0x55887c367370 <col:4, col:32>
|     `-TextComment 0x55887c367340 <col:4, col:32> Text=" Status Code Type Definition."
|-TypedefDecl 0x55887c0e1918 <line:67:1, col:16> col:16 referenced EFI_STATUS_CODE_VALUE 'UINT32':'unsigned int'
| |-TypedefType 0x55887c04a5d0 'UINT32' sugar
| | |-Typedef 0x55887c049a70 'UINT32'
| | `-BuiltinType 0x55887bfe9150 'unsigned int'
| `-FullComment 0x55887c367470 <line:65:4, col:33>
|   `-ParagraphComment 0x55887c367440 <col:4, col:33>
|     `-TextComment 0x55887c367410 <col:4, col:33> Text=" Status Code Value Definition."
|-RecordDecl 0x55887c0e19f8 <line:84:9, line:97:1> line:84:9 struct definition
| |-FullComment 0x55887c367590 <line:80:4, line:82:41>
| | `-ParagraphComment 0x55887c367560 <line:80:4, line:82:41>
| |   |-TextComment 0x55887c3674e0 <line:80:4, col:51> Text=" Definition of Status Code extended data header."
| |   |-TextComment 0x55887c367500 <line:81:4, col:63> Text=" The data will follow HeaderSize bytes from the beginning of"
| |   `-TextComment 0x55887c367520 <line:82:4, col:41> Text=" the structure and is Size bytes long."
| |-FieldDecl 0x55887c0e1ad8 <line:88:3, col:15> col:15 HeaderSize 'UINT16':'unsigned short'
| | `-FullComment 0x55887c367660 <line:86:6, col:78>
| |   `-ParagraphComment 0x55887c367630 <col:6, col:78>
| |     `-TextComment 0x55887c367600 <col:6, col:78> Text=" The size of the structure. This is specified to enable future expansion."
| |-FieldDecl 0x55887c0e1b68 <line:92:3, col:15> col:15 Size 'UINT16':'unsigned short'
| | `-FullComment 0x55887c367730 <line:90:6, col:92>
| |   `-ParagraphComment 0x55887c367700 <col:6, col:92>
| |     `-TextComment 0x55887c3676d0 <col:6, col:92> Text=" The size of the data in bytes. This does not include the size of the header structure."
| `-FieldDecl 0x55887c0e1bf8 <line:96:3, col:15> col:15 Type 'EFI_GUID':'GUID'
|   `-FullComment 0x55887c367800 <line:94:6, col:45>
|     `-ParagraphComment 0x55887c3677d0 <col:6, col:45>
|       `-TextComment 0x55887c3677a0 <col:6, col:45> Text=" The GUID defining the type of the data."
|-TypedefDecl 0x55887c0e1ca8 <line:84:1, line:97:3> col:3 referenced EFI_STATUS_CODE_DATA 'struct EFI_STATUS_CODE_DATA':'EFI_STATUS_CODE_DATA'
| |-ElaboratedType 0x55887c0e1c50 'struct EFI_STATUS_CODE_DATA' sugar
| | `-RecordType 0x55887c0e1a80 'EFI_STATUS_CODE_DATA'
| |   `-Record 0x55887c0e19f8 ''
| `-FullComment 0x55887c367920 <line:80:4, line:82:41>
|   `-ParagraphComment 0x55887c3678f0 <line:80:4, line:82:41>
|     |-TextComment 0x55887c367870 <line:80:4, col:51> Text=" Definition of Status Code extended data header."
|     |-TextComment 0x55887c367890 <line:81:4, col:63> Text=" The data will follow HeaderSize bytes from the beginning of"
|     `-TextComment 0x55887c3678b0 <line:82:4, col:41> Text=" the structure and is Size bytes long."
|-EnumDecl 0x55887c0ec380 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiS3BootScript.h:37:9, line:51:1> line:37:9
| |-EnumConstantDecl 0x55887c0ec440 <line:38:3> col:3 EfiBootScriptWidthUint8 'int'
| |-EnumConstantDecl 0x55887c0ec490 <line:39:3> col:3 EfiBootScriptWidthUint16 'int'
| |-EnumConstantDecl 0x55887c0ec4e0 <line:40:3> col:3 EfiBootScriptWidthUint32 'int'
| |-EnumConstantDecl 0x55887c0ec530 <line:41:3> col:3 EfiBootScriptWidthUint64 'int'
| |-EnumConstantDecl 0x55887c0ec580 <line:42:3> col:3 EfiBootScriptWidthFifoUint8 'int'
| |-EnumConstantDecl 0x55887c0ec5d0 <line:43:3> col:3 EfiBootScriptWidthFifoUint16 'int'
| |-EnumConstantDecl 0x55887c0ec620 <line:44:3> col:3 EfiBootScriptWidthFifoUint32 'int'
| |-EnumConstantDecl 0x55887c0ec670 <line:45:3> col:3 EfiBootScriptWidthFifoUint64 'int'
| |-EnumConstantDecl 0x55887c0ec6c0 <line:46:3> col:3 EfiBootScriptWidthFillUint8 'int'
| |-EnumConstantDecl 0x55887c0ec710 <line:47:3> col:3 EfiBootScriptWidthFillUint16 'int'
| |-EnumConstantDecl 0x55887c0ec760 <line:48:3> col:3 EfiBootScriptWidthFillUint32 'int'
| |-EnumConstantDecl 0x55887c0ec7b0 <line:49:3> col:3 EfiBootScriptWidthFillUint64 'int'
| `-EnumConstantDecl 0x55887c0ec800 <line:50:3> col:3 EfiBootScriptWidthMaximum 'int'
|-TypedefDecl 0x55887c0ec8a8 <line:37:1, line:51:3> col:3 EFI_BOOT_SCRIPT_WIDTH 'enum EFI_BOOT_SCRIPT_WIDTH':'EFI_BOOT_SCRIPT_WIDTH'
| `-ElaboratedType 0x55887c0ec850 'enum EFI_BOOT_SCRIPT_WIDTH' sugar
|   `-EnumType 0x55887c0ec420 'EFI_BOOT_SCRIPT_WIDTH'
|     `-Enum 0x55887c0ec380 ''
|-RecordDecl 0x55887c107be0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiMultiPhase.h:109:9, line:132:1> line:109:9 struct definition
| |-FullComment 0x55887c3679f0 <line:107:4, col:73>
| | `-ParagraphComment 0x55887c3679c0 <col:4, col:73>
| |   `-TextComment 0x55887c367990 <col:4, col:73> Text=" Structure describing a MMRAM region and its accessibility attributes."
| |-FieldDecl 0x55887c107cb8 <line:115:3, col:27> col:27 PhysicalStart 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | `-FullComment 0x55887c367b10 <line:111:6, line:113:24>
| |   `-ParagraphComment 0x55887c367ae0 <line:111:6, line:113:24>
| |     |-TextComment 0x55887c367a60 <line:111:6, col:84> Text=" Designates the physical address of the MMRAM in memory. This view of memory is"
| |     |-TextComment 0x55887c367a80 <line:112:6, col:91> Text=" the same as seen by I/O-based agents, for example, but it may not be the address seen"
| |     `-TextComment 0x55887c367aa0 <line:113:6, col:24> Text=" by the processors."
| |-FieldDecl 0x55887c107d48 <line:120:3, col:27> col:27 CpuStart 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | `-FullComment 0x55887c367c00 <line:117:6, line:118:66>
| |   `-ParagraphComment 0x55887c367bd0 <line:117:6, line:118:66>
| |     |-TextComment 0x55887c367b80 <line:117:6, col:79> Text=" Designates the address of the MMRAM, as seen by software executing on the"
| |     `-TextComment 0x55887c367ba0 <line:118:6, col:66> Text=" processors. This address may or may not match PhysicalStart."
| |-FieldDecl 0x55887c107dd8 <line:124:3, col:27> col:27 PhysicalSize 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c367cd0 <line:122:6, col:56>
| |   `-ParagraphComment 0x55887c367ca0 <col:6, col:56>
| |     `-TextComment 0x55887c367c70 <col:6, col:56> Text=" Describes the number of bytes in the MMRAM region."
| `-FieldDecl 0x55887c107e68 <line:131:3, col:27> col:27 RegionState 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c367e10 <line:126:6, line:129:22>
|     `-ParagraphComment 0x55887c367de0 <line:126:6, line:129:22>
|       |-TextComment 0x55887c367d40 <line:126:6, col:88> Text=" Describes the accessibility attributes of the MMRAM.  These attributes include the"
|       |-TextComment 0x55887c367d60 <line:127:6, col:86> Text=" hardware state (e.g., Open/Closed/Locked), capability (e.g., cacheable), logical"
|       |-TextComment 0x55887c367d80 <line:128:6, col:87> Text=" allocation (e.g., allocated), and pre-use initialization (e.g., needs testing/ECC"
|       `-TextComment 0x55887c367da0 <line:129:6, col:22> Text=" initialization)."
|-TypedefDecl 0x55887c107f18 <line:109:1, line:132:3> col:3 referenced EFI_MMRAM_DESCRIPTOR 'struct EFI_MMRAM_DESCRIPTOR':'EFI_MMRAM_DESCRIPTOR'
| |-ElaboratedType 0x55887c107ec0 'struct EFI_MMRAM_DESCRIPTOR' sugar
| | `-RecordType 0x55887c107c60 'EFI_MMRAM_DESCRIPTOR'
| |   `-Record 0x55887c107be0 ''
| `-FullComment 0x55887c367ee0 <line:107:4, col:73>
|   `-ParagraphComment 0x55887c367eb0 <col:4, col:73>
|     `-TextComment 0x55887c367e80 <col:4, col:73> Text=" Structure describing a MMRAM region and its accessibility attributes."
|-TypedefDecl 0x55887c107fc0 <line:134:1, col:30> col:30 EFI_SMRAM_DESCRIPTOR 'EFI_MMRAM_DESCRIPTOR':'EFI_MMRAM_DESCRIPTOR'
| `-TypedefType 0x55887c107f90 'EFI_MMRAM_DESCRIPTOR' sugar
|   |-Typedef 0x55887c107f18 'EFI_MMRAM_DESCRIPTOR'
|   `-ElaboratedType 0x55887c107ec0 'struct EFI_MMRAM_DESCRIPTOR' sugar
|     `-RecordType 0x55887c107c60 'EFI_MMRAM_DESCRIPTOR'
|       `-Record 0x55887c107be0 ''
|-RecordDecl 0x55887c108048 <line:139:9, line:150:1> line:139:16 struct _EFI_MM_RESERVED_MMRAM_REGION definition
| |-FullComment 0x55887c367fb0 <line:137:4, col:80>
| | `-ParagraphComment 0x55887c367f80 <col:4, col:80>
| |   `-TextComment 0x55887c367f50 <col:4, col:80> Text=" Structure describing a MMRAM region which cannot be used for the MMRAM heap."
| |-FieldDecl 0x55887c108128 <line:144:3, col:27> col:27 MmramReservedStart 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | `-FullComment 0x55887c3680a0 <line:141:6, line:142:40>
| |   `-ParagraphComment 0x55887c368070 <line:141:6, line:142:40>
| |     |-TextComment 0x55887c368020 <line:141:6, col:85> Text=" Starting address of the reserved MMRAM area, as it appears while MMRAM is open."
| |     `-TextComment 0x55887c368040 <line:142:6, col:40> Text=" Ignored if MmramReservedSize is 0."
| `-FieldDecl 0x55887c1081b8 <line:149:3, col:27> col:27 MmramReservedSize 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c368190 <line:146:6, line:147:22>
|     `-ParagraphComment 0x55887c368160 <line:146:6, line:147:22>
|       |-TextComment 0x55887c368110 <line:146:6, col:87> Text=" Number of bytes occupied by the reserved MMRAM area. A size of zero indicates the"
|       `-TextComment 0x55887c368130 <line:147:6, col:22> Text=" last MMRAM area."
|-TypedefDecl 0x55887c108268 <line:139:1, line:150:3> col:3 EFI_MM_RESERVED_MMRAM_REGION 'struct _EFI_MM_RESERVED_MMRAM_REGION':'struct _EFI_MM_RESERVED_MMRAM_REGION'
| |-ElaboratedType 0x55887c108210 'struct _EFI_MM_RESERVED_MMRAM_REGION' sugar
| | `-RecordType 0x55887c1080d0 'struct _EFI_MM_RESERVED_MMRAM_REGION'
| |   `-Record 0x55887c108048 '_EFI_MM_RESERVED_MMRAM_REGION'
| `-FullComment 0x55887c368260 <line:137:4, col:80>
|   `-ParagraphComment 0x55887c368230 <col:4, col:80>
|     `-TextComment 0x55887c368200 <col:4, col:80> Text=" Structure describing a MMRAM region which cannot be used for the MMRAM heap."
|-EnumDecl 0x55887c1082d8 <line:152:9, line:159:1> line:152:9
| |-EnumConstantDecl 0x55887c1083a0 <line:153:3> col:3 EFI_PCD_TYPE_8 'int'
| |-EnumConstantDecl 0x55887c1083f0 <line:154:3> col:3 EFI_PCD_TYPE_16 'int'
| |-EnumConstantDecl 0x55887c108440 <line:155:3> col:3 EFI_PCD_TYPE_32 'int'
| |-EnumConstantDecl 0x55887c108490 <line:156:3> col:3 EFI_PCD_TYPE_64 'int'
| |-EnumConstantDecl 0x55887c1084e0 <line:157:3> col:3 EFI_PCD_TYPE_BOOL 'int'
| `-EnumConstantDecl 0x55887c108530 <line:158:3> col:3 EFI_PCD_TYPE_PTR 'int'
|-TypedefDecl 0x55887c1085d8 <line:152:1, line:159:3> col:3 referenced EFI_PCD_TYPE 'enum EFI_PCD_TYPE':'EFI_PCD_TYPE'
| `-ElaboratedType 0x55887c108580 'enum EFI_PCD_TYPE' sugar
|   `-EnumType 0x55887c108380 'EFI_PCD_TYPE'
|     `-Enum 0x55887c1082d8 ''
|-RecordDecl 0x55887c108648 <line:161:9, line:179:1> line:161:9 struct definition
| |-FieldDecl 0x55887c108750 <line:166:3, col:19> col:19 PcdType 'EFI_PCD_TYPE':'EFI_PCD_TYPE'
| | `-FullComment 0x55887c368350 <line:163:6, line:164:62>
| |   `-ParagraphComment 0x55887c368320 <line:163:6, line:164:62>
| |     |-TextComment 0x55887c3682d0 <line:163:6, col:76> Text=" The returned information associated with the requested TokenNumber. If"
| |     `-TextComment 0x55887c3682f0 <line:164:6, col:62> Text=" TokenNumber is 0, then PcdType is set to EFI_PCD_TYPE_8."
| |-FieldDecl 0x55887c1087d8 <line:171:3, col:19> col:19 PcdSize 'UINTN':'unsigned long long'
| | `-FullComment 0x55887c368440 <line:168:6, line:169:46>
| |   `-ParagraphComment 0x55887c368410 <line:168:6, line:169:46>
| |     |-TextComment 0x55887c3683c0 <line:168:6, col:81> Text=" The size of the data in bytes associated with the TokenNumber specified. If"
| |     `-TextComment 0x55887c3683e0 <line:169:6, col:46> Text=" TokenNumber is 0, then PcdSize is set 0."
| `-FieldDecl 0x55887c108898 <line:178:3, col:20> col:20 PcdName 'CHAR8 *'
|   `-FullComment 0x55887c368580 <line:173:6, line:176:40>
|     `-ParagraphComment 0x55887c368550 <line:173:6, line:176:40>
|       |-TextComment 0x55887c3684b0 <line:173:6, col:76> Text=" The null-terminated ASCII string associated with a given token. If the"
|       |-TextComment 0x55887c3684d0 <line:174:6, col:85> Text=" TokenNumber specified was 0, then this field corresponds to the null-terminated"
|       |-TextComment 0x55887c3684f0 <line:175:6, col:83> Text=" ASCII string associated with the token's namespace Guid. If NULL, there is no"
|       `-TextComment 0x55887c368510 <line:176:6, col:40> Text=" name associated with this request."
|-TypedefDecl 0x55887c108948 <line:161:1, line:179:3> col:3 EFI_PCD_INFO 'struct EFI_PCD_INFO':'EFI_PCD_INFO'
| `-ElaboratedType 0x55887c1088f0 'struct EFI_PCD_INFO' sugar
|   `-RecordType 0x55887c1086d0 'EFI_PCD_INFO'
|     `-Record 0x55887c108648 ''
|-TypedefDecl 0x55887c10b030 <line:189:1, line:193:3> line:191:10 EFI_AP_PROCEDURE 'void (*)(void *)'
| |-PointerType 0x55887c10afd0 'void (*)(void *)'
| | `-ParenType 0x55887c10af70 'void (void *)' sugar
| |   `-FunctionProtoType 0x55887c10af40 'void (void *)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     `-PointerType 0x55887bfe9730 'void *'
| |       `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3687d0 <line:182:1, line:187:60>
|   |-ParagraphComment 0x55887c368620 <line:182:1, col:77>
|   | `-TextComment 0x55887c3685f0 <col:1, col:77> Text="  The function prototype for invoking a function on an Application Processor."
|   |-ParagraphComment 0x55887c368690 <line:184:1, line:185:22>
|   | |-TextComment 0x55887c368640 <line:184:1, col:66> Text="  This definition is used by the UEFI MP Serices Protocol, and the"
|   | `-TextComment 0x55887c368660 <line:185:1, col:22> Text="  PI SMM System Table."
|   |-ParagraphComment 0x55887c3686e0 <line:187:1, col:2>
|   | `-TextComment 0x55887c3686b0 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c368700 <col:3, col:60> [in,out] explicitly Param="Buffer" ParamIndex=0
|     `-ParagraphComment 0x55887c368790 <col:24, col:60>
|       `-TextComment 0x55887c368760 <col:24, col:60> Text="  The pointer to private data buffer."
|-TypedefDecl 0x55887c10b260 <line:205:1, line:209:3> line:207:10 EFI_AP_PROCEDURE2 'EFI_STATUS (*)(void *)'
| |-PointerType 0x55887c10b200 'EFI_STATUS (*)(void *)'
| | `-ParenType 0x55887c10b1a0 'EFI_STATUS (void *)' sugar
| |   `-FunctionProtoType 0x55887c10b170 'EFI_STATUS (void *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-PointerType 0x55887bfe9730 'void *'
| |       `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c368b10 <line:196:1, line:202:69>
|   |-ParagraphComment 0x55887c368870 <line:196:1, col:77>
|   | `-TextComment 0x55887c368840 <col:1, col:77> Text="  The function prototype for invoking a function on an Application Processor."
|   |-ParagraphComment 0x55887c3688c0 <line:198:1, col:61>
|   | `-TextComment 0x55887c368890 <col:1, col:61> Text="  This definition is used by the UEFI MM MP Serices Protocol."
|   |-ParagraphComment 0x55887c368910 <line:200:1, col:2>
|   | `-TextComment 0x55887c3688e0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c368930 <col:3, col:69> [in] explicitly Param="ProcedureArgument" ParamIndex=0
|   | `-ParagraphComment 0x55887c3689d0 <col:31, col:69>
|   |   `-TextComment 0x55887c3689a0 <col:31, col:69> Text="    The pointer to private data buffer."
|   |-ParagraphComment 0x55887c368a20 <line:202:1, col:2>
|   | `-TextComment 0x55887c3689f0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c368a40 <col:3, col:69> Name="retval" Arg[0]="EFI_SUCCESS"
|     `-ParagraphComment 0x55887c368ac0 <col:22, col:69>
|       `-TextComment 0x55887c368a90 <col:22, col:69> Text="             Excutive the procedure successfully"
|-TypedefDecl 0x55887c10b300 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiPeiCis.h:21:1, col:15> col:15 referenced EFI_PEI_FV_HANDLE 'void *'
| |-PointerType 0x55887bfe9730 'void *'
| | `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c368be0 <line:19:4, col:26>
|   `-ParagraphComment 0x55887c368bb0 <col:4, col:26>
|     `-TextComment 0x55887c368b80 <col:4, col:26> Text=" The handles of EFI FV."
|-TypedefDecl 0x55887c10b3a0 <line:26:1, col:15> col:15 referenced EFI_PEI_FILE_HANDLE 'void *'
| |-PointerType 0x55887bfe9730 'void *'
| | `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c368cb0 <line:24:4, col:27>
|   `-ParagraphComment 0x55887c368c80 <col:4, col:27>
|     `-TextComment 0x55887c368c50 <col:4, col:27> Text=" The handles of EFI FFS."
|-RecordDecl 0x55887c10b428 <line:31:9, col:16> col:16 struct _EFI_PEI_SERVICES
|-TypedefDecl 0x55887c10b528 <col:1, col:34> col:34 referenced EFI_PEI_SERVICES 'struct _EFI_PEI_SERVICES':'struct _EFI_PEI_SERVICES'
| |-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| | `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |   `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| `-FullComment 0x55887c368d80 <line:29:4, col:69>
|   `-ParagraphComment 0x55887c368d50 <col:4, col:69>
|     `-TextComment 0x55887c368d20 <col:4, col:69> Text=" Declare the forward reference data structure for EFI_PEI_SERVICE."
|-RecordDecl 0x55887c10b5c0 <line:36:9, col:16> col:16 struct _EFI_PEI_NOTIFY_DESCRIPTOR
|-TypedefDecl 0x55887c10b6b8 <col:1, col:43> col:43 referenced EFI_PEI_NOTIFY_DESCRIPTOR 'struct _EFI_PEI_NOTIFY_DESCRIPTOR':'struct _EFI_PEI_NOTIFY_DESCRIPTOR'
| |-ElaboratedType 0x55887c10b660 'struct _EFI_PEI_NOTIFY_DESCRIPTOR' sugar
| | `-RecordType 0x55887c10b640 'struct _EFI_PEI_NOTIFY_DESCRIPTOR'
| |   `-Record 0x55887c0de040 '_EFI_PEI_NOTIFY_DESCRIPTOR'
| `-FullComment 0x55887c368e50 <line:34:4, col:79>
|   `-ParagraphComment 0x55887c368e20 <col:4, col:79>
|     `-TextComment 0x55887c368df0 <col:4, col:79> Text=" Declare the forward reference data structure for EFI_PEI_NOTIFY_DESCRIPTOR."
|-RecordDecl 0x55887c10b750 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Ppi/CpuIo.h:19:9, col:16> col:16 struct _EFI_PEI_CPU_IO_PPI
|-TypedefDecl 0x55887c10b848 <col:1, col:36> col:36 referenced EFI_PEI_CPU_IO_PPI 'struct _EFI_PEI_CPU_IO_PPI':'struct _EFI_PEI_CPU_IO_PPI'
| `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
|   `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
|     `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
|-EnumDecl 0x55887c10b8e0 <line:24:9, line:38:1> line:24:9
| |-FullComment 0x55887c368f20 <line:22:4, col:29>
| | `-ParagraphComment 0x55887c368ef0 <col:4, col:29>
| |   `-TextComment 0x55887c368ec0 <col:4, col:29> Text=" EFI_PEI_CPU_IO_PPI_WIDTH."
| |-EnumConstantDecl 0x55887c10b9a0 <line:25:3> col:3 EfiPeiCpuIoWidthUint8 'int'
| |-EnumConstantDecl 0x55887c10b9f0 <line:26:3> col:3 EfiPeiCpuIoWidthUint16 'int'
| |-EnumConstantDecl 0x55887c10ba40 <line:27:3> col:3 EfiPeiCpuIoWidthUint32 'int'
| |-EnumConstantDecl 0x55887c10ba90 <line:28:3> col:3 EfiPeiCpuIoWidthUint64 'int'
| |-EnumConstantDecl 0x55887c10bae0 <line:29:3> col:3 EfiPeiCpuIoWidthFifoUint8 'int'
| |-EnumConstantDecl 0x55887c10bb30 <line:30:3> col:3 EfiPeiCpuIoWidthFifoUint16 'int'
| |-EnumConstantDecl 0x55887c10bb80 <line:31:3> col:3 EfiPeiCpuIoWidthFifoUint32 'int'
| |-EnumConstantDecl 0x55887c10bbd0 <line:32:3> col:3 EfiPeiCpuIoWidthFifoUint64 'int'
| |-EnumConstantDecl 0x55887c10bc20 <line:33:3> col:3 EfiPeiCpuIoWidthFillUint8 'int'
| |-EnumConstantDecl 0x55887c10bc70 <line:34:3> col:3 EfiPeiCpuIoWidthFillUint16 'int'
| |-EnumConstantDecl 0x55887c10bcc0 <line:35:3> col:3 EfiPeiCpuIoWidthFillUint32 'int'
| |-EnumConstantDecl 0x55887c10bd10 <line:36:3> col:3 EfiPeiCpuIoWidthFillUint64 'int'
| `-EnumConstantDecl 0x55887c10bd60 <line:37:3> col:3 EfiPeiCpuIoWidthMaximum 'int'
|-TypedefDecl 0x55887c10be08 <line:24:1, line:38:3> col:3 referenced EFI_PEI_CPU_IO_PPI_WIDTH 'enum EFI_PEI_CPU_IO_PPI_WIDTH':'EFI_PEI_CPU_IO_PPI_WIDTH'
| |-ElaboratedType 0x55887c10bdb0 'enum EFI_PEI_CPU_IO_PPI_WIDTH' sugar
| | `-EnumType 0x55887c10b980 'EFI_PEI_CPU_IO_PPI_WIDTH'
| |   `-Enum 0x55887c10b8e0 ''
| `-FullComment 0x55887c368ff0 <line:22:4, col:29>
|   `-ParagraphComment 0x55887c368fc0 <col:4, col:29>
|     `-TextComment 0x55887c368f90 <col:4, col:29> Text=" EFI_PEI_CPU_IO_PPI_WIDTH."
|-TypedefDecl 0x55887c1115b8 <line:55:1, line:64:3> line:57:10 referenced EFI_PEI_CPU_IO_PPI_IO_MEM 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, EFI_PEI_CPU_IO_PPI_WIDTH, UINT64, UINTN, void *)'
| |-PointerType 0x55887c111530 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, EFI_PEI_CPU_IO_PPI_WIDTH, UINT64, UINTN, void *)'
| | `-ParenType 0x55887c1114d0 'EFI_STATUS (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, EFI_PEI_CPU_IO_PPI_WIDTH, UINT64, UINTN, void *)' sugar
| |   `-FunctionProtoType 0x55887c111470 'EFI_STATUS (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, EFI_PEI_CPU_IO_PPI_WIDTH, UINT64, UINTN, void *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c111160 'const EFI_PEI_CPU_IO_PPI *'
| |     | `-QualType 0x55887c111111 'const EFI_PEI_CPU_IO_PPI' const
| |     |   `-TypedefType 0x55887c111110 'EFI_PEI_CPU_IO_PPI' sugar
| |     |     |-Typedef 0x55887c10b848 'EFI_PEI_CPU_IO_PPI'
| |     |     `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
| |     |       `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
| |     |         `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
| |     |-TypedefType 0x55887c111200 'EFI_PEI_CPU_IO_PPI_WIDTH' sugar
| |     | |-Typedef 0x55887c10be08 'EFI_PEI_CPU_IO_PPI_WIDTH'
| |     | `-ElaboratedType 0x55887c10bdb0 'enum EFI_PEI_CPU_IO_PPI_WIDTH' sugar
| |     |   `-EnumType 0x55887c10b980 'EFI_PEI_CPU_IO_PPI_WIDTH'
| |     |     `-Enum 0x55887c10b8e0 ''
| |     |-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     | |-Typedef 0x55887c049930 'UINT64'
| |     | `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     | |-Typedef 0x55887c04a020 'UINTN'
| |     | `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |   |-Typedef 0x55887c049930 'UINT64'
| |     |   `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-PointerType 0x55887bfe9730 'void *'
| |       `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c36ab80 <line:41:1, line:52:68>
|   |-ParagraphComment 0x55887c369090 <line:41:1, col:61>
|   | `-TextComment 0x55887c369060 <col:1, col:61> Text="  Memory-based access services and I/O-based access services."
|   |-ParagraphComment 0x55887c3690e0 <line:43:1, col:2>
|   | `-TextComment 0x55887c3690b0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c369100 <col:3, line:45:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3691f0 <line:43:30, line:45:2>
|   |   |-TextComment 0x55887c369170 <line:43:30, col:76> Text="  An indirect pointer to the PEI Services Table"
|   |   |-TextComment 0x55887c369190 <line:44:1, col:63> Text="                               published by the PEI Foundation."
|   |   `-TextComment 0x55887c3691b0 <line:45:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c369210 <col:3, line:46:2> [in] explicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c3692c0 <line:45:23, line:46:2>
|   |   |-TextComment 0x55887c369270 <line:45:23, col:75> Text="         The pointer to local data for the interface."
|   |   `-TextComment 0x55887c369290 <line:46:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36a630 <col:3, line:47:2> [in] explicitly Param="Width" ParamIndex=2
|   | `-ParagraphComment 0x55887c36a6e0 <line:46:24, line:47:2>
|   |   |-TextComment 0x55887c36a690 <line:46:24, col:76> Text="        The width of the access. Enumerated in bytes."
|   |   `-TextComment 0x55887c36a6b0 <line:47:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36a700 <col:3, line:48:2> [in] explicitly Param="Address" ParamIndex=3
|   | `-ParagraphComment 0x55887c36a7b0 <line:47:26, line:48:2>
|   |   |-TextComment 0x55887c36a760 <line:47:26, col:66> Text="      The physical address of the access."
|   |   `-TextComment 0x55887c36a780 <line:48:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36a7d0 <col:3, line:49:2> [in] explicitly Param="Count" ParamIndex=4
|   | `-ParagraphComment 0x55887c36a880 <line:48:24, line:49:2>
|   |   |-TextComment 0x55887c36a830 <line:48:24, col:65> Text="        The number of accesses to perform."
|   |   `-TextComment 0x55887c36a850 <line:49:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36a8a0 <col:3, col:63> [in,out] explicitly Param="Buffer" ParamIndex=5
|   | `-ParagraphComment 0x55887c36a940 <col:25, col:63>
|   |   `-TextComment 0x55887c36a910 <col:25, col:63> Text="       A pointer to the buffer of data."
|   |-ParagraphComment 0x55887c36a990 <line:51:1, col:2>
|   | `-TextComment 0x55887c36a960 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c36a9b0 <col:3, line:52:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c36aa50 <line:51:22, line:52:2>
|   |   |-TextComment 0x55887c36aa00 <line:51:22, col:69> Text="            The function completed successfully."
|   |   `-TextComment 0x55887c36aa20 <line:52:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c36aa70 <col:3, col:68> Name="retval" Arg[0]="EFI_NOT_YET_AVAILABLE"
|     `-ParagraphComment 0x55887c36ab00 <col:32, col:68>
|       `-TextComment 0x55887c36aad0 <col:32, col:68> Text="  The service has not been installed."
|-RecordDecl 0x55887c111638 <line:69:9, line:78:1> line:69:9 struct definition
| |-FullComment 0x55887c36ac50 <line:67:4, col:29>
| | `-ParagraphComment 0x55887c36ac20 <col:4, col:29>
| |   `-TextComment 0x55887c36abf0 <col:4, col:29> Text=" EFI_PEI_CPU_IO_PPI_ACCESS"
| |-FieldDecl 0x55887c111740 <line:73:3, col:32> col:32 Read 'EFI_PEI_CPU_IO_PPI_IO_MEM':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, EFI_PEI_CPU_IO_PPI_WIDTH, UINT64, UINTN, void *)'
| | `-FullComment 0x55887c36ad20 <line:71:6, col:74>
| |   `-ParagraphComment 0x55887c36acf0 <col:6, col:74>
| |     `-TextComment 0x55887c36acc0 <col:6, col:74> Text=" This service provides the various modalities of memory and I/O read."
| `-FieldDecl 0x55887c1117c8 <line:77:3, col:32> col:32 Write 'EFI_PEI_CPU_IO_PPI_IO_MEM':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, EFI_PEI_CPU_IO_PPI_WIDTH, UINT64, UINTN, void *)'
|   `-FullComment 0x55887c36adf0 <line:75:6, col:75>
|     `-ParagraphComment 0x55887c36adc0 <col:6, col:75>
|       `-TextComment 0x55887c36ad90 <col:6, col:75> Text=" This service provides the various modalities of memory and I/O write."
|-TypedefDecl 0x55887c111878 <line:69:1, line:78:3> col:3 referenced EFI_PEI_CPU_IO_PPI_ACCESS 'struct EFI_PEI_CPU_IO_PPI_ACCESS':'EFI_PEI_CPU_IO_PPI_ACCESS'
| |-ElaboratedType 0x55887c111820 'struct EFI_PEI_CPU_IO_PPI_ACCESS' sugar
| | `-RecordType 0x55887c1116c0 'EFI_PEI_CPU_IO_PPI_ACCESS'
| |   `-Record 0x55887c111638 ''
| `-FullComment 0x55887c36aec0 <line:67:4, col:29>
|   `-ParagraphComment 0x55887c36ae90 <col:4, col:29>
|     `-TextComment 0x55887c36ae60 <col:4, col:29> Text=" EFI_PEI_CPU_IO_PPI_ACCESS"
|-TypedefDecl 0x55887c111bd0 <line:91:1, line:97:3> line:93:10 referenced EFI_PEI_CPU_IO_PPI_IO_READ8 'UINT8 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| |-PointerType 0x55887c111b60 'UINT8 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| | `-ParenType 0x55887c111b00 'UINT8 (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)' sugar
| |   `-FunctionProtoType 0x55887c111ac0 'UINT8 (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)' cdecl
| |     |-TypedefType 0x55887c04a730 'UINT8' sugar
| |     | |-Typedef 0x55887c049e30 'UINT8'
| |     | `-BuiltinType 0x55887bfe9110 'unsigned char'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c111160 'const EFI_PEI_CPU_IO_PPI *'
| |     | `-QualType 0x55887c111111 'const EFI_PEI_CPU_IO_PPI' const
| |     |   `-TypedefType 0x55887c111110 'EFI_PEI_CPU_IO_PPI' sugar
| |     |     |-Typedef 0x55887c10b848 'EFI_PEI_CPU_IO_PPI'
| |     |     `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
| |     |       `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
| |     |         `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
| |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |       |-Typedef 0x55887c049930 'UINT64'
| |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c36b370 <line:81:1, line:88:54>
|   |-ParagraphComment 0x55887c36af60 <line:81:1, col:28>
|   | `-TextComment 0x55887c36af30 <col:1, col:28> Text="  8-bit I/O read operations."
|   |-ParagraphComment 0x55887c36afb0 <line:83:1, col:2>
|   | `-TextComment 0x55887c36af80 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36afd0 <col:3, line:85:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c36b0c0 <line:83:25, line:85:2>
|   |   |-TextComment 0x55887c36b040 <line:83:25, col:81> Text="  An indirect pointer to the PEI Services Table published"
|   |   |-TextComment 0x55887c36b060 <line:84:1, col:48> Text="                          by the PEI Foundation."
|   |   `-TextComment 0x55887c36b080 <line:85:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36b0e0 <col:3, line:86:2> [in] explicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c36b190 <line:85:18, line:86:2>
|   |   |-TextComment 0x55887c36b140 <line:85:18, col:70> Text="         The pointer to local data for the interface."
|   |   `-TextComment 0x55887c36b160 <line:86:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36b1b0 <col:3, col:61> [in] explicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c36b240 <col:21, col:61>
|   |   `-TextComment 0x55887c36b210 <col:21, col:61> Text="      The physical address of the access."
|   |-ParagraphComment 0x55887c36b290 <line:88:1, col:2>
|   | `-TextComment 0x55887c36b260 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c36b2b0 <col:3, col:54> Name="return"
|     `-ParagraphComment 0x55887c36b310 <col:10, col:54>
|       `-TextComment 0x55887c36b2e0 <col:10, col:54> Text="  An 8-bit value returned from the I/O space."
|-TypedefDecl 0x55887c111f20 <line:110:1, line:116:3> line:112:10 referenced EFI_PEI_CPU_IO_PPI_IO_READ16 'UINT16 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| |-PointerType 0x55887c111eb0 'UINT16 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| | `-ParenType 0x55887c111e50 'UINT16 (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)' sugar
| |   `-FunctionProtoType 0x55887c111e10 'UINT16 (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)' cdecl
| |     |-TypedefType 0x55887c04a650 'UINT16' sugar
| |     | |-Typedef 0x55887c049bb0 'UINT16'
| |     | `-BuiltinType 0x55887bfe9130 'unsigned short'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c111160 'const EFI_PEI_CPU_IO_PPI *'
| |     | `-QualType 0x55887c111111 'const EFI_PEI_CPU_IO_PPI' const
| |     |   `-TypedefType 0x55887c111110 'EFI_PEI_CPU_IO_PPI' sugar
| |     |     |-Typedef 0x55887c10b848 'EFI_PEI_CPU_IO_PPI'
| |     |     `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
| |     |       `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
| |     |         `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
| |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |       |-Typedef 0x55887c049930 'UINT64'
| |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c36b820 <line:100:1, line:107:54>
|   |-ParagraphComment 0x55887c36b410 <line:100:1, col:29>
|   | `-TextComment 0x55887c36b3e0 <col:1, col:29> Text="  16-bit I/O read operations."
|   |-ParagraphComment 0x55887c36b460 <line:102:1, col:2>
|   | `-TextComment 0x55887c36b430 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36b480 <col:3, line:104:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c36b570 <line:102:25, line:104:2>
|   |   |-TextComment 0x55887c36b4f0 <line:102:25, col:81> Text="  An indirect pointer to the PEI Services Table published"
|   |   |-TextComment 0x55887c36b510 <line:103:1, col:48> Text="                          by the PEI Foundation."
|   |   `-TextComment 0x55887c36b530 <line:104:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36b590 <col:3, line:105:2> [in] explicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c36b640 <line:104:18, line:105:2>
|   |   |-TextComment 0x55887c36b5f0 <line:104:18, col:70> Text="         The pointer to local data for the interface."
|   |   `-TextComment 0x55887c36b610 <line:105:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36b660 <col:3, col:61> [in] explicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c36b6f0 <col:21, col:61>
|   |   `-TextComment 0x55887c36b6c0 <col:21, col:61> Text="      The physical address of the access."
|   |-ParagraphComment 0x55887c36b740 <line:107:1, col:2>
|   | `-TextComment 0x55887c36b710 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c36b760 <col:3, col:54> Name="return"
|     `-ParagraphComment 0x55887c36b7c0 <col:10, col:54>
|       `-TextComment 0x55887c36b790 <col:10, col:54> Text="  A 16-bit value returned from the I/O space."
|-TypedefDecl 0x55887c113aa0 <line:129:1, line:135:3> line:131:10 referenced EFI_PEI_CPU_IO_PPI_IO_READ32 'UINT32 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| |-PointerType 0x55887c113a30 'UINT32 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| | `-ParenType 0x55887c1139d0 'UINT32 (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)' sugar
| |   `-FunctionProtoType 0x55887c113990 'UINT32 (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)' cdecl
| |     |-TypedefType 0x55887c04a5d0 'UINT32' sugar
| |     | |-Typedef 0x55887c049a70 'UINT32'
| |     | `-BuiltinType 0x55887bfe9150 'unsigned int'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c111160 'const EFI_PEI_CPU_IO_PPI *'
| |     | `-QualType 0x55887c111111 'const EFI_PEI_CPU_IO_PPI' const
| |     |   `-TypedefType 0x55887c111110 'EFI_PEI_CPU_IO_PPI' sugar
| |     |     |-Typedef 0x55887c10b848 'EFI_PEI_CPU_IO_PPI'
| |     |     `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
| |     |       `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
| |     |         `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
| |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |       |-Typedef 0x55887c049930 'UINT64'
| |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c36bcd0 <line:119:1, line:126:54>
|   |-ParagraphComment 0x55887c36b8c0 <line:119:1, col:29>
|   | `-TextComment 0x55887c36b890 <col:1, col:29> Text="  32-bit I/O read operations."
|   |-ParagraphComment 0x55887c36b910 <line:121:1, col:2>
|   | `-TextComment 0x55887c36b8e0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36b930 <col:3, line:123:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c36ba20 <line:121:25, line:123:2>
|   |   |-TextComment 0x55887c36b9a0 <line:121:25, col:81> Text="  An indirect pointer to the PEI Services Table published"
|   |   |-TextComment 0x55887c36b9c0 <line:122:1, col:48> Text="                          by the PEI Foundation."
|   |   `-TextComment 0x55887c36b9e0 <line:123:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36ba40 <col:3, line:124:2> [in] explicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c36baf0 <line:123:18, line:124:2>
|   |   |-TextComment 0x55887c36baa0 <line:123:18, col:70> Text="         The pointer to local data for the interface."
|   |   `-TextComment 0x55887c36bac0 <line:124:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36bb10 <col:3, col:61> [in] explicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c36bba0 <col:21, col:61>
|   |   `-TextComment 0x55887c36bb70 <col:21, col:61> Text="      The physical address of the access."
|   |-ParagraphComment 0x55887c36bbf0 <line:126:1, col:2>
|   | `-TextComment 0x55887c36bbc0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c36bc10 <col:3, col:54> Name="return"
|     `-ParagraphComment 0x55887c36bc70 <col:10, col:54>
|       `-TextComment 0x55887c36bc40 <col:10, col:54> Text="  A 32-bit value returned from the I/O space."
|-TypedefDecl 0x55887c113df0 <line:148:1, line:154:3> line:150:10 referenced EFI_PEI_CPU_IO_PPI_IO_READ64 'UINT64 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| |-PointerType 0x55887c113d80 'UINT64 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| | `-ParenType 0x55887c113d20 'UINT64 (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)' sugar
| |   `-FunctionProtoType 0x55887c113ce0 'UINT64 (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)' cdecl
| |     |-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     | |-Typedef 0x55887c049930 'UINT64'
| |     | `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c111160 'const EFI_PEI_CPU_IO_PPI *'
| |     | `-QualType 0x55887c111111 'const EFI_PEI_CPU_IO_PPI' const
| |     |   `-TypedefType 0x55887c111110 'EFI_PEI_CPU_IO_PPI' sugar
| |     |     |-Typedef 0x55887c10b848 'EFI_PEI_CPU_IO_PPI'
| |     |     `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
| |     |       `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
| |     |         `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
| |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |       |-Typedef 0x55887c049930 'UINT64'
| |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c36c180 <line:138:1, line:145:54>
|   |-ParagraphComment 0x55887c36bd70 <line:138:1, col:29>
|   | `-TextComment 0x55887c36bd40 <col:1, col:29> Text="  64-bit I/O read operations."
|   |-ParagraphComment 0x55887c36bdc0 <line:140:1, col:2>
|   | `-TextComment 0x55887c36bd90 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36bde0 <col:3, line:142:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c36bed0 <line:140:25, line:142:2>
|   |   |-TextComment 0x55887c36be50 <line:140:25, col:81> Text="  An indirect pointer to the PEI Services Table published"
|   |   |-TextComment 0x55887c36be70 <line:141:1, col:48> Text="                          by the PEI Foundation."
|   |   `-TextComment 0x55887c36be90 <line:142:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36bef0 <col:3, line:143:2> [in] explicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c36bfa0 <line:142:18, line:143:2>
|   |   |-TextComment 0x55887c36bf50 <line:142:18, col:70> Text="         The pointer to local data for the interface."
|   |   `-TextComment 0x55887c36bf70 <line:143:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36bfc0 <col:3, col:61> [in] explicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c36c050 <col:21, col:61>
|   |   `-TextComment 0x55887c36c020 <col:21, col:61> Text="      The physical address of the access."
|   |-ParagraphComment 0x55887c36c0a0 <line:145:1, col:2>
|   | `-TextComment 0x55887c36c070 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c36c0c0 <col:3, col:54> Name="return"
|     `-ParagraphComment 0x55887c36c120 <col:10, col:54>
|       `-TextComment 0x55887c36c0f0 <col:10, col:54> Text="  A 64-bit value returned from the I/O space."
|-TypedefDecl 0x55887c1141d8 <line:166:1, line:173:3> line:168:10 referenced EFI_PEI_CPU_IO_PPI_IO_WRITE8 'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT8)'
| |-PointerType 0x55887c114160 'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT8)'
| | `-ParenType 0x55887c114100 'void (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT8)' sugar
| |   `-FunctionProtoType 0x55887c1140b0 'void (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT8)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c111160 'const EFI_PEI_CPU_IO_PPI *'
| |     | `-QualType 0x55887c111111 'const EFI_PEI_CPU_IO_PPI' const
| |     |   `-TypedefType 0x55887c111110 'EFI_PEI_CPU_IO_PPI' sugar
| |     |     |-Typedef 0x55887c10b848 'EFI_PEI_CPU_IO_PPI'
| |     |     `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
| |     |       `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
| |     |         `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
| |     |-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     | |-Typedef 0x55887c049930 'UINT64'
| |     | `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-TypedefType 0x55887c04a730 'UINT8' sugar
| |       |-Typedef 0x55887c049e30 'UINT8'
| |       `-BuiltinType 0x55887bfe9110 'unsigned char'
| `-FullComment 0x55887c36d700 <line:157:1, line:163:44>
|   |-ParagraphComment 0x55887c36c220 <line:157:1, col:29>
|   | `-TextComment 0x55887c36c1f0 <col:1, col:29> Text="  8-bit I/O write operations."
|   |-ParagraphComment 0x55887c36c270 <line:159:1, col:2>
|   | `-TextComment 0x55887c36c240 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36c290 <col:3, line:161:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c36c380 <line:159:25, line:161:2>
|   |   |-TextComment 0x55887c36c300 <line:159:25, col:81> Text="  An indirect pointer to the PEI Services Table published"
|   |   |-TextComment 0x55887c36c320 <line:160:1, col:48> Text="                          by the PEI Foundation."
|   |   `-TextComment 0x55887c36c340 <line:161:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36c3a0 <col:3, line:162:2> [in] explicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c36c450 <line:161:18, line:162:2>
|   |   |-TextComment 0x55887c36c400 <line:161:18, col:70> Text="         The pointer to local data for the interface."
|   |   `-TextComment 0x55887c36c420 <line:162:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36c470 <col:3, line:163:2> [in] explicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c36c520 <line:162:21, line:163:2>
|   |   |-TextComment 0x55887c36c4d0 <line:162:21, col:61> Text="      The physical address of the access."
|   |   `-TextComment 0x55887c36c4f0 <line:163:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c36c540 <col:3, col:44> [in] explicitly Param="Data" ParamIndex=3
|     `-ParagraphComment 0x55887c36c5d0 <col:18, col:44>
|       `-TextComment 0x55887c36c5a0 <col:18, col:44> Text="         The data to write."
|-TypedefDecl 0x55887c1145b8 <line:185:1, line:192:3> line:187:10 referenced EFI_PEI_CPU_IO_PPI_IO_WRITE16 'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT16)'
| |-PointerType 0x55887c114540 'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT16)'
| | `-ParenType 0x55887c1144e0 'void (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT16)' sugar
| |   `-FunctionProtoType 0x55887c114490 'void (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT16)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c111160 'const EFI_PEI_CPU_IO_PPI *'
| |     | `-QualType 0x55887c111111 'const EFI_PEI_CPU_IO_PPI' const
| |     |   `-TypedefType 0x55887c111110 'EFI_PEI_CPU_IO_PPI' sugar
| |     |     |-Typedef 0x55887c10b848 'EFI_PEI_CPU_IO_PPI'
| |     |     `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
| |     |       `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
| |     |         `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
| |     |-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     | |-Typedef 0x55887c049930 'UINT64'
| |     | `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-TypedefType 0x55887c04a650 'UINT16' sugar
| |       |-Typedef 0x55887c049bb0 'UINT16'
| |       `-BuiltinType 0x55887bfe9130 'unsigned short'
| `-FullComment 0x55887c36dba0 <line:176:1, line:182:44>
|   |-ParagraphComment 0x55887c36d7a0 <line:176:1, col:30>
|   | `-TextComment 0x55887c36d770 <col:1, col:30> Text="  16-bit I/O write operations."
|   |-ParagraphComment 0x55887c36d7f0 <line:178:1, col:2>
|   | `-TextComment 0x55887c36d7c0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36d810 <col:3, line:180:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c36d900 <line:178:25, line:180:2>
|   |   |-TextComment 0x55887c36d880 <line:178:25, col:81> Text="  An indirect pointer to the PEI Services Table published"
|   |   |-TextComment 0x55887c36d8a0 <line:179:1, col:48> Text="                          by the PEI Foundation."
|   |   `-TextComment 0x55887c36d8c0 <line:180:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36d920 <col:3, line:181:2> [in] explicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c36d9d0 <line:180:18, line:181:2>
|   |   |-TextComment 0x55887c36d980 <line:180:18, col:70> Text="         The pointer to local data for the interface."
|   |   `-TextComment 0x55887c36d9a0 <line:181:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36d9f0 <col:3, line:182:2> [in] explicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c36daa0 <line:181:21, line:182:2>
|   |   |-TextComment 0x55887c36da50 <line:181:21, col:61> Text="      The physical address of the access."
|   |   `-TextComment 0x55887c36da70 <line:182:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c36dac0 <col:3, col:44> [in] explicitly Param="Data" ParamIndex=3
|     `-ParagraphComment 0x55887c36db50 <col:18, col:44>
|       `-TextComment 0x55887c36db20 <col:18, col:44> Text="         The data to write."
|-TypedefDecl 0x55887c1161d8 <line:204:1, line:211:3> line:206:10 referenced EFI_PEI_CPU_IO_PPI_IO_WRITE32 'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT32)'
| |-PointerType 0x55887c116160 'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT32)'
| | `-ParenType 0x55887c116100 'void (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT32)' sugar
| |   `-FunctionProtoType 0x55887c1160b0 'void (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT32)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c111160 'const EFI_PEI_CPU_IO_PPI *'
| |     | `-QualType 0x55887c111111 'const EFI_PEI_CPU_IO_PPI' const
| |     |   `-TypedefType 0x55887c111110 'EFI_PEI_CPU_IO_PPI' sugar
| |     |     |-Typedef 0x55887c10b848 'EFI_PEI_CPU_IO_PPI'
| |     |     `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
| |     |       `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
| |     |         `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
| |     |-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     | |-Typedef 0x55887c049930 'UINT64'
| |     | `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-TypedefType 0x55887c04a5d0 'UINT32' sugar
| |       |-Typedef 0x55887c049a70 'UINT32'
| |       `-BuiltinType 0x55887bfe9150 'unsigned int'
| `-FullComment 0x55887c36e040 <line:195:1, line:201:44>
|   |-ParagraphComment 0x55887c36dc40 <line:195:1, col:30>
|   | `-TextComment 0x55887c36dc10 <col:1, col:30> Text="  32-bit I/O write operations."
|   |-ParagraphComment 0x55887c36dc90 <line:197:1, col:2>
|   | `-TextComment 0x55887c36dc60 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36dcb0 <col:3, line:199:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c36dda0 <line:197:25, line:199:2>
|   |   |-TextComment 0x55887c36dd20 <line:197:25, col:81> Text="  An indirect pointer to the PEI Services Table published"
|   |   |-TextComment 0x55887c36dd40 <line:198:1, col:48> Text="                          by the PEI Foundation."
|   |   `-TextComment 0x55887c36dd60 <line:199:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36ddc0 <col:3, line:200:2> [in] explicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c36de70 <line:199:18, line:200:2>
|   |   |-TextComment 0x55887c36de20 <line:199:18, col:70> Text="         The pointer to local data for the interface."
|   |   `-TextComment 0x55887c36de40 <line:200:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36de90 <col:3, line:201:2> [in] explicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c36df40 <line:200:21, line:201:2>
|   |   |-TextComment 0x55887c36def0 <line:200:21, col:61> Text="      The physical address of the access."
|   |   `-TextComment 0x55887c36df10 <line:201:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c36df60 <col:3, col:44> [in] explicitly Param="Data" ParamIndex=3
|     `-ParagraphComment 0x55887c36dff0 <col:18, col:44>
|       `-TextComment 0x55887c36dfc0 <col:18, col:44> Text="         The data to write."
|-TypedefDecl 0x55887c1165b8 <line:223:1, line:230:3> line:225:10 referenced EFI_PEI_CPU_IO_PPI_IO_WRITE64 'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT64)'
| |-PointerType 0x55887c116540 'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT64)'
| | `-ParenType 0x55887c1164e0 'void (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT64)' sugar
| |   `-FunctionProtoType 0x55887c116490 'void (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT64)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c111160 'const EFI_PEI_CPU_IO_PPI *'
| |     | `-QualType 0x55887c111111 'const EFI_PEI_CPU_IO_PPI' const
| |     |   `-TypedefType 0x55887c111110 'EFI_PEI_CPU_IO_PPI' sugar
| |     |     |-Typedef 0x55887c10b848 'EFI_PEI_CPU_IO_PPI'
| |     |     `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
| |     |       `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
| |     |         `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
| |     |-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     | |-Typedef 0x55887c049930 'UINT64'
| |     | `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |       |-Typedef 0x55887c049930 'UINT64'
| |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c36e4e0 <line:214:1, line:220:44>
|   |-ParagraphComment 0x55887c36e0e0 <line:214:1, col:30>
|   | `-TextComment 0x55887c36e0b0 <col:1, col:30> Text="  64-bit I/O write operations."
|   |-ParagraphComment 0x55887c36e130 <line:216:1, col:2>
|   | `-TextComment 0x55887c36e100 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36e150 <col:3, line:218:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c36e240 <line:216:25, line:218:2>
|   |   |-TextComment 0x55887c36e1c0 <line:216:25, col:81> Text="  An indirect pointer to the PEI Services Table published"
|   |   |-TextComment 0x55887c36e1e0 <line:217:1, col:48> Text="                          by the PEI Foundation."
|   |   `-TextComment 0x55887c36e200 <line:218:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36e260 <col:3, line:219:2> [in] explicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c36e310 <line:218:18, line:219:2>
|   |   |-TextComment 0x55887c36e2c0 <line:218:18, col:70> Text="         The pointer to local data for the interface."
|   |   `-TextComment 0x55887c36e2e0 <line:219:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36e330 <col:3, line:220:2> [in] explicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c36e3e0 <line:219:21, line:220:2>
|   |   |-TextComment 0x55887c36e390 <line:219:21, col:61> Text="      The physical address of the access."
|   |   `-TextComment 0x55887c36e3b0 <line:220:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c36e400 <col:3, col:44> [in] explicitly Param="Data" ParamIndex=3
|     `-ParagraphComment 0x55887c36e490 <col:18, col:44>
|       `-TextComment 0x55887c36e460 <col:18, col:44> Text="         The data to write."
|-TypedefDecl 0x55887c1167f0 <line:243:1, line:249:3> line:245:10 referenced EFI_PEI_CPU_IO_PPI_MEM_READ8 'UINT8 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| |-PointerType 0x55887c111b60 'UINT8 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| | `-ParenType 0x55887c111b00 'UINT8 (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)' sugar
| |   `-FunctionProtoType 0x55887c111ac0 'UINT8 (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)' cdecl
| |     |-TypedefType 0x55887c04a730 'UINT8' sugar
| |     | |-Typedef 0x55887c049e30 'UINT8'
| |     | `-BuiltinType 0x55887bfe9110 'unsigned char'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c111160 'const EFI_PEI_CPU_IO_PPI *'
| |     | `-QualType 0x55887c111111 'const EFI_PEI_CPU_IO_PPI' const
| |     |   `-TypedefType 0x55887c111110 'EFI_PEI_CPU_IO_PPI' sugar
| |     |     |-Typedef 0x55887c10b848 'EFI_PEI_CPU_IO_PPI'
| |     |     `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
| |     |       `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
| |     |         `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
| |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |       |-Typedef 0x55887c049930 'UINT64'
| |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c36e990 <line:233:1, line:240:57>
|   |-ParagraphComment 0x55887c36e580 <line:233:1, col:31>
|   | `-TextComment 0x55887c36e550 <col:1, col:31> Text="  8-bit memory read operations."
|   |-ParagraphComment 0x55887c36e5d0 <line:235:1, col:2>
|   | `-TextComment 0x55887c36e5a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36e5f0 <col:3, line:237:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c36e6e0 <line:235:25, line:237:2>
|   |   |-TextComment 0x55887c36e660 <line:235:25, col:81> Text="  An indirect pointer to the PEI Services Table published"
|   |   |-TextComment 0x55887c36e680 <line:236:1, col:48> Text="                          by the PEI Foundation."
|   |   `-TextComment 0x55887c36e6a0 <line:237:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36e700 <col:3, line:238:2> [in] explicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c36e7b0 <line:237:18, line:238:2>
|   |   |-TextComment 0x55887c36e760 <line:237:18, col:70> Text="         The pointer to local data for the interface."
|   |   `-TextComment 0x55887c36e780 <line:238:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36e7d0 <col:3, col:61> [in] explicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c36e860 <col:21, col:61>
|   |   `-TextComment 0x55887c36e830 <col:21, col:61> Text="      The physical address of the access."
|   |-ParagraphComment 0x55887c36e8b0 <line:240:1, col:2>
|   | `-TextComment 0x55887c36e880 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c36e8d0 <col:3, col:57> Name="return"
|     `-ParagraphComment 0x55887c36e930 <col:10, col:57>
|       `-TextComment 0x55887c36e900 <col:10, col:57> Text="  An 8-bit value returned from the memory space."
|-TypedefDecl 0x55887c116a30 <line:262:1, line:268:3> line:264:10 referenced EFI_PEI_CPU_IO_PPI_MEM_READ16 'UINT16 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| |-PointerType 0x55887c111eb0 'UINT16 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| | `-ParenType 0x55887c111e50 'UINT16 (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)' sugar
| |   `-FunctionProtoType 0x55887c111e10 'UINT16 (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)' cdecl
| |     |-TypedefType 0x55887c04a650 'UINT16' sugar
| |     | |-Typedef 0x55887c049bb0 'UINT16'
| |     | `-BuiltinType 0x55887bfe9130 'unsigned short'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c111160 'const EFI_PEI_CPU_IO_PPI *'
| |     | `-QualType 0x55887c111111 'const EFI_PEI_CPU_IO_PPI' const
| |     |   `-TypedefType 0x55887c111110 'EFI_PEI_CPU_IO_PPI' sugar
| |     |     |-Typedef 0x55887c10b848 'EFI_PEI_CPU_IO_PPI'
| |     |     `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
| |     |       `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
| |     |         `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
| |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |       |-Typedef 0x55887c049930 'UINT64'
| |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c36ee40 <line:252:1, line:259:57>
|   |-ParagraphComment 0x55887c36ea30 <line:252:1, col:32>
|   | `-TextComment 0x55887c36ea00 <col:1, col:32> Text="  16-bit memory read operations."
|   |-ParagraphComment 0x55887c36ea80 <line:254:1, col:2>
|   | `-TextComment 0x55887c36ea50 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36eaa0 <col:3, line:256:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c36eb90 <line:254:25, line:256:2>
|   |   |-TextComment 0x55887c36eb10 <line:254:25, col:81> Text="  An indirect pointer to the PEI Services Table published"
|   |   |-TextComment 0x55887c36eb30 <line:255:1, col:48> Text="                          by the PEI Foundation."
|   |   `-TextComment 0x55887c36eb50 <line:256:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36ebb0 <col:3, line:257:2> [in] explicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c36ec60 <line:256:18, line:257:2>
|   |   |-TextComment 0x55887c36ec10 <line:256:18, col:70> Text="         The pointer to local data for the interface."
|   |   `-TextComment 0x55887c36ec30 <line:257:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36ec80 <col:3, col:61> [in] explicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c36ed10 <col:21, col:61>
|   |   `-TextComment 0x55887c36ece0 <col:21, col:61> Text="      The physical address of the access."
|   |-ParagraphComment 0x55887c36ed60 <line:259:1, col:2>
|   | `-TextComment 0x55887c36ed30 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c36ed80 <col:3, col:57> Name="return"
|     `-ParagraphComment 0x55887c36ede0 <col:10, col:57>
|       `-TextComment 0x55887c36edb0 <col:10, col:57> Text="  A 16-bit value returned from the memory space."
|-TypedefDecl 0x55887c116c70 <line:281:1, line:287:3> line:283:10 referenced EFI_PEI_CPU_IO_PPI_MEM_READ32 'UINT32 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| |-PointerType 0x55887c113a30 'UINT32 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| | `-ParenType 0x55887c1139d0 'UINT32 (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)' sugar
| |   `-FunctionProtoType 0x55887c113990 'UINT32 (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)' cdecl
| |     |-TypedefType 0x55887c04a5d0 'UINT32' sugar
| |     | |-Typedef 0x55887c049a70 'UINT32'
| |     | `-BuiltinType 0x55887bfe9150 'unsigned int'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c111160 'const EFI_PEI_CPU_IO_PPI *'
| |     | `-QualType 0x55887c111111 'const EFI_PEI_CPU_IO_PPI' const
| |     |   `-TypedefType 0x55887c111110 'EFI_PEI_CPU_IO_PPI' sugar
| |     |     |-Typedef 0x55887c10b848 'EFI_PEI_CPU_IO_PPI'
| |     |     `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
| |     |       `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
| |     |         `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
| |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |       |-Typedef 0x55887c049930 'UINT64'
| |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c36f2f0 <line:271:1, line:278:57>
|   |-ParagraphComment 0x55887c36eee0 <line:271:1, col:32>
|   | `-TextComment 0x55887c36eeb0 <col:1, col:32> Text="  32-bit memory read operations."
|   |-ParagraphComment 0x55887c36ef30 <line:273:1, col:2>
|   | `-TextComment 0x55887c36ef00 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36ef50 <col:3, line:275:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c36f040 <line:273:25, line:275:2>
|   |   |-TextComment 0x55887c36efc0 <line:273:25, col:81> Text="  An indirect pointer to the PEI Services Table published"
|   |   |-TextComment 0x55887c36efe0 <line:274:1, col:48> Text="                          by the PEI Foundation."
|   |   `-TextComment 0x55887c36f000 <line:275:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36f060 <col:3, line:276:2> [in] explicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c36f110 <line:275:18, line:276:2>
|   |   |-TextComment 0x55887c36f0c0 <line:275:18, col:70> Text="         The pointer to local data for the interface."
|   |   `-TextComment 0x55887c36f0e0 <line:276:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36f130 <col:3, col:61> [in] explicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c36f1c0 <col:21, col:61>
|   |   `-TextComment 0x55887c36f190 <col:21, col:61> Text="      The physical address of the access."
|   |-ParagraphComment 0x55887c36f210 <line:278:1, col:2>
|   | `-TextComment 0x55887c36f1e0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c36f230 <col:3, col:57> Name="return"
|     `-ParagraphComment 0x55887c36f290 <col:10, col:57>
|       `-TextComment 0x55887c36f260 <col:10, col:57> Text="  A 32-bit value returned from the memory space."
|-TypedefDecl 0x55887c116eb0 <line:300:1, line:306:3> line:302:10 referenced EFI_PEI_CPU_IO_PPI_MEM_READ64 'UINT64 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| |-PointerType 0x55887c113d80 'UINT64 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| | `-ParenType 0x55887c113d20 'UINT64 (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)' sugar
| |   `-FunctionProtoType 0x55887c113ce0 'UINT64 (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)' cdecl
| |     |-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     | |-Typedef 0x55887c049930 'UINT64'
| |     | `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c111160 'const EFI_PEI_CPU_IO_PPI *'
| |     | `-QualType 0x55887c111111 'const EFI_PEI_CPU_IO_PPI' const
| |     |   `-TypedefType 0x55887c111110 'EFI_PEI_CPU_IO_PPI' sugar
| |     |     |-Typedef 0x55887c10b848 'EFI_PEI_CPU_IO_PPI'
| |     |     `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
| |     |       `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
| |     |         `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
| |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |       |-Typedef 0x55887c049930 'UINT64'
| |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c36f7d0 <line:290:1, line:297:57>
|   |-ParagraphComment 0x55887c36f390 <line:290:1, col:32>
|   | `-TextComment 0x55887c36f360 <col:1, col:32> Text="  64-bit memory read operations."
|   |-ParagraphComment 0x55887c36f3e0 <line:292:1, col:2>
|   | `-TextComment 0x55887c36f3b0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36f400 <col:3, line:294:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c36f4f0 <line:292:25, line:294:2>
|   |   |-TextComment 0x55887c36f470 <line:292:25, col:81> Text="  An indirect pointer to the PEI Services Table published"
|   |   |-TextComment 0x55887c36f490 <line:293:1, col:48> Text="                          by the PEI Foundation."
|   |   `-TextComment 0x55887c36f4b0 <line:294:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36f510 <col:3, line:295:2> [in] explicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c36f5c0 <line:294:18, line:295:2>
|   |   |-TextComment 0x55887c36f570 <line:294:18, col:70> Text="         The pointer to local data for the interface."
|   |   `-TextComment 0x55887c36f590 <line:295:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36f5e0 <col:3, col:61> [in] explicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c36f670 <col:21, col:61>
|   |   `-TextComment 0x55887c36f640 <col:21, col:61> Text="      The physical address of the access."
|   |-ParagraphComment 0x55887c36f6c0 <line:297:1, col:2>
|   | `-TextComment 0x55887c36f690 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c36f710 <col:3, col:57> Name="return"
|     `-ParagraphComment 0x55887c36f770 <col:10, col:57>
|       `-TextComment 0x55887c36f740 <col:10, col:57> Text="  A 64-bit value returned from the memory space."
|-TypedefDecl 0x55887c1171a8 <line:318:1, line:325:3> line:320:10 referenced EFI_PEI_CPU_IO_PPI_MEM_WRITE8 'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT8)'
| |-PointerType 0x55887c114160 'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT8)'
| | `-ParenType 0x55887c114100 'void (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT8)' sugar
| |   `-FunctionProtoType 0x55887c1140b0 'void (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT8)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c111160 'const EFI_PEI_CPU_IO_PPI *'
| |     | `-QualType 0x55887c111111 'const EFI_PEI_CPU_IO_PPI' const
| |     |   `-TypedefType 0x55887c111110 'EFI_PEI_CPU_IO_PPI' sugar
| |     |     |-Typedef 0x55887c10b848 'EFI_PEI_CPU_IO_PPI'
| |     |     `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
| |     |       `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
| |     |         `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
| |     |-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     | |-Typedef 0x55887c049930 'UINT64'
| |     | `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-TypedefType 0x55887c04a730 'UINT8' sugar
| |       |-Typedef 0x55887c049e30 'UINT8'
| |       `-BuiltinType 0x55887bfe9110 'unsigned char'
| `-FullComment 0x55887c36fc70 <line:309:1, line:315:44>
|   |-ParagraphComment 0x55887c36f870 <line:309:1, col:32>
|   | `-TextComment 0x55887c36f840 <col:1, col:32> Text="  8-bit memory write operations."
|   |-ParagraphComment 0x55887c36f8c0 <line:311:1, col:2>
|   | `-TextComment 0x55887c36f890 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36f8e0 <col:3, line:313:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c36f9d0 <line:311:25, line:313:2>
|   |   |-TextComment 0x55887c36f950 <line:311:25, col:81> Text="  An indirect pointer to the PEI Services Table published"
|   |   |-TextComment 0x55887c36f970 <line:312:1, col:48> Text="                          by the PEI Foundation."
|   |   `-TextComment 0x55887c36f990 <line:313:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36f9f0 <col:3, line:314:2> [in] explicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c36faa0 <line:313:18, line:314:2>
|   |   |-TextComment 0x55887c36fa50 <line:313:18, col:70> Text="         The pointer to local data for the interface."
|   |   `-TextComment 0x55887c36fa70 <line:314:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36fac0 <col:3, line:315:2> [in] explicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c36fb70 <line:314:21, line:315:2>
|   |   |-TextComment 0x55887c36fb20 <line:314:21, col:61> Text="      The physical address of the access."
|   |   `-TextComment 0x55887c36fb40 <line:315:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c36fb90 <col:3, col:44> [in] explicitly Param="Data" ParamIndex=3
|     `-ParagraphComment 0x55887c36fc20 <col:18, col:44>
|       `-TextComment 0x55887c36fbf0 <col:18, col:44> Text="         The data to write."
|-TypedefDecl 0x55887c117460 <line:337:1, line:344:3> line:339:10 referenced EFI_PEI_CPU_IO_PPI_MEM_WRITE16 'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT16)'
| |-PointerType 0x55887c114540 'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT16)'
| | `-ParenType 0x55887c1144e0 'void (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT16)' sugar
| |   `-FunctionProtoType 0x55887c114490 'void (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT16)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c111160 'const EFI_PEI_CPU_IO_PPI *'
| |     | `-QualType 0x55887c111111 'const EFI_PEI_CPU_IO_PPI' const
| |     |   `-TypedefType 0x55887c111110 'EFI_PEI_CPU_IO_PPI' sugar
| |     |     |-Typedef 0x55887c10b848 'EFI_PEI_CPU_IO_PPI'
| |     |     `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
| |     |       `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
| |     |         `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
| |     |-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     | |-Typedef 0x55887c049930 'UINT64'
| |     | `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-TypedefType 0x55887c04a650 'UINT16' sugar
| |       |-Typedef 0x55887c049bb0 'UINT16'
| |       `-BuiltinType 0x55887bfe9130 'unsigned short'
| `-FullComment 0x55887c370110 <line:328:1, line:334:44>
|   |-ParagraphComment 0x55887c36fd10 <line:328:1, col:33>
|   | `-TextComment 0x55887c36fce0 <col:1, col:33> Text="  16-bit memory write operations."
|   |-ParagraphComment 0x55887c36fd60 <line:330:1, col:2>
|   | `-TextComment 0x55887c36fd30 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36fd80 <col:3, line:332:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c36fe70 <line:330:25, line:332:2>
|   |   |-TextComment 0x55887c36fdf0 <line:330:25, col:81> Text="  An indirect pointer to the PEI Services Table published"
|   |   |-TextComment 0x55887c36fe10 <line:331:1, col:48> Text="                          by the PEI Foundation."
|   |   `-TextComment 0x55887c36fe30 <line:332:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36fe90 <col:3, line:333:2> [in] explicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c36ff40 <line:332:18, line:333:2>
|   |   |-TextComment 0x55887c36fef0 <line:332:18, col:70> Text="         The pointer to local data for the interface."
|   |   `-TextComment 0x55887c36ff10 <line:333:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c36ff60 <col:3, line:334:2> [in] explicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c370010 <line:333:21, line:334:2>
|   |   |-TextComment 0x55887c36ffc0 <line:333:21, col:61> Text="      The physical address of the access."
|   |   `-TextComment 0x55887c36ffe0 <line:334:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c370030 <col:3, col:44> [in] explicitly Param="Data" ParamIndex=3
|     `-ParagraphComment 0x55887c3700c0 <col:18, col:44>
|       `-TextComment 0x55887c370090 <col:18, col:44> Text="         The data to write."
|-TypedefDecl 0x55887c117720 <line:356:1, line:363:3> line:358:10 referenced EFI_PEI_CPU_IO_PPI_MEM_WRITE32 'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT32)'
| |-PointerType 0x55887c116160 'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT32)'
| | `-ParenType 0x55887c116100 'void (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT32)' sugar
| |   `-FunctionProtoType 0x55887c1160b0 'void (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT32)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c111160 'const EFI_PEI_CPU_IO_PPI *'
| |     | `-QualType 0x55887c111111 'const EFI_PEI_CPU_IO_PPI' const
| |     |   `-TypedefType 0x55887c111110 'EFI_PEI_CPU_IO_PPI' sugar
| |     |     |-Typedef 0x55887c10b848 'EFI_PEI_CPU_IO_PPI'
| |     |     `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
| |     |       `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
| |     |         `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
| |     |-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     | |-Typedef 0x55887c049930 'UINT64'
| |     | `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-TypedefType 0x55887c04a5d0 'UINT32' sugar
| |       |-Typedef 0x55887c049a70 'UINT32'
| |       `-BuiltinType 0x55887bfe9150 'unsigned int'
| `-FullComment 0x55887c3705b0 <line:347:1, line:353:44>
|   |-ParagraphComment 0x55887c3701b0 <line:347:1, col:33>
|   | `-TextComment 0x55887c370180 <col:1, col:33> Text="  32-bit memory write operations."
|   |-ParagraphComment 0x55887c370200 <line:349:1, col:2>
|   | `-TextComment 0x55887c3701d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c370220 <col:3, line:351:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c370310 <line:349:25, line:351:2>
|   |   |-TextComment 0x55887c370290 <line:349:25, col:81> Text="  An indirect pointer to the PEI Services Table published"
|   |   |-TextComment 0x55887c3702b0 <line:350:1, col:48> Text="                          by the PEI Foundation."
|   |   `-TextComment 0x55887c3702d0 <line:351:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c370330 <col:3, line:352:2> [in] explicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c3703e0 <line:351:18, line:352:2>
|   |   |-TextComment 0x55887c370390 <line:351:18, col:70> Text="         The pointer to local data for the interface."
|   |   `-TextComment 0x55887c3703b0 <line:352:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c370400 <col:3, line:353:2> [in] explicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c3704b0 <line:352:21, line:353:2>
|   |   |-TextComment 0x55887c370460 <line:352:21, col:61> Text="      The physical address of the access."
|   |   `-TextComment 0x55887c370480 <line:353:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3704d0 <col:3, col:44> [in] explicitly Param="Data" ParamIndex=3
|     `-ParagraphComment 0x55887c370560 <col:18, col:44>
|       `-TextComment 0x55887c370530 <col:18, col:44> Text="         The data to write."
|-TypedefDecl 0x55887c1179e0 <line:375:1, line:382:3> line:377:10 referenced EFI_PEI_CPU_IO_PPI_MEM_WRITE64 'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT64)'
| |-PointerType 0x55887c116540 'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT64)'
| | `-ParenType 0x55887c1164e0 'void (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT64)' sugar
| |   `-FunctionProtoType 0x55887c116490 'void (const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT64)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c111160 'const EFI_PEI_CPU_IO_PPI *'
| |     | `-QualType 0x55887c111111 'const EFI_PEI_CPU_IO_PPI' const
| |     |   `-TypedefType 0x55887c111110 'EFI_PEI_CPU_IO_PPI' sugar
| |     |     |-Typedef 0x55887c10b848 'EFI_PEI_CPU_IO_PPI'
| |     |     `-ElaboratedType 0x55887c10b7f0 'struct _EFI_PEI_CPU_IO_PPI' sugar
| |     |       `-RecordType 0x55887c10b7d0 'struct _EFI_PEI_CPU_IO_PPI'
| |     |         `-Record 0x55887c117a68 '_EFI_PEI_CPU_IO_PPI'
| |     |-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     | |-Typedef 0x55887c049930 'UINT64'
| |     | `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |       |-Typedef 0x55887c049930 'UINT64'
| |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c370a50 <line:366:1, line:372:44>
|   |-ParagraphComment 0x55887c370650 <line:366:1, col:33>
|   | `-TextComment 0x55887c370620 <col:1, col:33> Text="  64-bit memory write operations."
|   |-ParagraphComment 0x55887c3706a0 <line:368:1, col:2>
|   | `-TextComment 0x55887c370670 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3706c0 <col:3, line:370:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3707b0 <line:368:25, line:370:2>
|   |   |-TextComment 0x55887c370730 <line:368:25, col:81> Text="  An indirect pointer to the PEI Services Table published"
|   |   |-TextComment 0x55887c370750 <line:369:1, col:48> Text="                          by the PEI Foundation."
|   |   `-TextComment 0x55887c370770 <line:370:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3707d0 <col:3, line:371:2> [in] explicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c370880 <line:370:18, line:371:2>
|   |   |-TextComment 0x55887c370830 <line:370:18, col:70> Text="         The pointer to local data for the interface."
|   |   `-TextComment 0x55887c370850 <line:371:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3708a0 <col:3, line:372:2> [in] explicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c370950 <line:371:21, line:372:2>
|   |   |-TextComment 0x55887c370900 <line:371:21, col:61> Text="      The physical address of the access."
|   |   `-TextComment 0x55887c370920 <line:372:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c370970 <col:3, col:44> [in] explicitly Param="Data" ParamIndex=3
|     `-ParagraphComment 0x55887c370a00 <col:18, col:44>
|       `-TextComment 0x55887c3709d0 <col:18, col:44> Text="         The data to write."
|-RecordDecl 0x55887c117a68 prev 0x55887c10b750 <line:389:1, line:418:1> line:389:8 struct _EFI_PEI_CPU_IO_PPI definition
| |-FullComment 0x55887c370b70 <line:385:4, line:387:18>
| | `-ParagraphComment 0x55887c370b40 <line:385:4, line:387:18>
| |   |-TextComment 0x55887c370ac0 <line:385:4, col:71> Text=" EFI_PEI_CPU_IO_PPI provides a set of memory and I/O-based services."
| |   |-TextComment 0x55887c370ae0 <line:386:4, col:77> Text=" The perspective of the services is that of the processor, not that of the"
| |   `-TextComment 0x55887c370b00 <line:387:4, col:18> Text=" bus or system."
| |-FieldDecl 0x55887c117b50 <line:393:3, col:37> col:37 Mem 'EFI_PEI_CPU_IO_PPI_ACCESS':'EFI_PEI_CPU_IO_PPI_ACCESS'
| | `-FullComment 0x55887c370c40 <line:391:6, col:43>
| |   `-ParagraphComment 0x55887c370c10 <col:6, col:43>
| |     `-TextComment 0x55887c370be0 <col:6, col:43> Text=" Collection of memory-access services."
| |-FieldDecl 0x55887c117bd8 <line:397:3, col:37> col:37 Io 'EFI_PEI_CPU_IO_PPI_ACCESS':'EFI_PEI_CPU_IO_PPI_ACCESS'
| | `-FullComment 0x55887c370d10 <line:395:6, col:40>
| |   `-ParagraphComment 0x55887c370ce0 <col:6, col:40>
| |     `-TextComment 0x55887c370cb0 <col:6, col:40> Text=" Collection of I/O-access services."
| |-FieldDecl 0x55887c117c60 <line:399:3, col:37> col:37 IoRead8 'EFI_PEI_CPU_IO_PPI_IO_READ8':'UINT8 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| |-FieldDecl 0x55887c117ce0 <line:400:3, col:37> col:37 IoRead16 'EFI_PEI_CPU_IO_PPI_IO_READ16':'UINT16 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| |-FieldDecl 0x55887c117d60 <line:401:3, col:37> col:37 IoRead32 'EFI_PEI_CPU_IO_PPI_IO_READ32':'UINT32 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| |-FieldDecl 0x55887c117de0 <line:402:3, col:37> col:37 IoRead64 'EFI_PEI_CPU_IO_PPI_IO_READ64':'UINT64 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| |-FieldDecl 0x55887c117e60 <line:404:3, col:37> col:37 IoWrite8 'EFI_PEI_CPU_IO_PPI_IO_WRITE8':'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT8)'
| |-FieldDecl 0x55887c117ee0 <line:405:3, col:37> col:37 IoWrite16 'EFI_PEI_CPU_IO_PPI_IO_WRITE16':'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT16)'
| |-FieldDecl 0x55887c117f60 <line:406:3, col:37> col:37 IoWrite32 'EFI_PEI_CPU_IO_PPI_IO_WRITE32':'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT32)'
| |-FieldDecl 0x55887c119020 <line:407:3, col:37> col:37 IoWrite64 'EFI_PEI_CPU_IO_PPI_IO_WRITE64':'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT64)'
| |-FieldDecl 0x55887c1190a0 <line:409:3, col:37> col:37 MemRead8 'EFI_PEI_CPU_IO_PPI_MEM_READ8':'UINT8 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| |-FieldDecl 0x55887c119120 <line:410:3, col:37> col:37 MemRead16 'EFI_PEI_CPU_IO_PPI_MEM_READ16':'UINT16 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| |-FieldDecl 0x55887c1191a0 <line:411:3, col:37> col:37 MemRead32 'EFI_PEI_CPU_IO_PPI_MEM_READ32':'UINT32 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| |-FieldDecl 0x55887c119220 <line:412:3, col:37> col:37 MemRead64 'EFI_PEI_CPU_IO_PPI_MEM_READ64':'UINT64 (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64)'
| |-FieldDecl 0x55887c1192a0 <line:414:3, col:37> col:37 MemWrite8 'EFI_PEI_CPU_IO_PPI_MEM_WRITE8':'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT8)'
| |-FieldDecl 0x55887c119320 <line:415:3, col:37> col:37 MemWrite16 'EFI_PEI_CPU_IO_PPI_MEM_WRITE16':'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT16)'
| |-FieldDecl 0x55887c1193a0 <line:416:3, col:37> col:37 MemWrite32 'EFI_PEI_CPU_IO_PPI_MEM_WRITE32':'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT32)'
| `-FieldDecl 0x55887c119420 <line:417:3, col:37> col:37 MemWrite64 'EFI_PEI_CPU_IO_PPI_MEM_WRITE64':'void (*)(const EFI_PEI_SERVICES **, const EFI_PEI_CPU_IO_PPI *, UINT64, UINT64)'
|-VarDecl 0x55887c1194e0 <line:420:1, col:18> col:18 gEfiPeiCpuIoPpiInstalledGuid 'EFI_GUID':'GUID' extern
|-RecordDecl 0x55887c1195d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:43:9, line:57:1> line:43:9 struct definition
| |-FullComment 0x55887c370de0 <line:41:4, col:73>
| | `-ParagraphComment 0x55887c370db0 <col:4, col:73>
| |   `-TextComment 0x55887c370d80 <col:4, col:73> Text=" The x64 architecture context buffer used by SetJump() and LongJump()."
| |-FieldDecl 0x55887c119690 <line:44:3, col:13> col:13 Rbx 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1196f0 <line:45:3, col:13> col:13 Rsp 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c119750 <line:46:3, col:13> col:13 Rbp 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1197b0 <line:47:3, col:13> col:13 Rdi 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c119810 <line:48:3, col:13> col:13 Rsi 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c119870 <line:49:3, col:13> col:13 R12 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1198d0 <line:50:3, col:13> col:13 R13 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c119930 <line:51:3, col:13> col:13 R14 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c119990 <line:52:3, col:13> col:13 R15 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1199f0 <line:53:3, col:13> col:13 Rip 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c119a50 <line:54:3, col:13> col:13 MxCsr 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c119b78 <line:55:3, col:26> col:13 XmmBuffer 'UINT8[160]'
| | `-FullComment 0x55887c370eb0 <col:57, col:68>
| |   `-ParagraphComment 0x55887c370e80 <col:57, col:68>
| |     `-TextComment 0x55887c370e50 <col:57, col:68> Text=" XMM6-XMM15."
| `-FieldDecl 0x55887c119c08 <line:56:3, col:13> col:13 Ssp 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c119cb8 <line:43:1, line:57:3> col:3 referenced BASE_LIBRARY_JUMP_BUFFER 'struct BASE_LIBRARY_JUMP_BUFFER':'BASE_LIBRARY_JUMP_BUFFER'
| |-ElaboratedType 0x55887c119c60 'struct BASE_LIBRARY_JUMP_BUFFER' sugar
| | `-RecordType 0x55887c119660 'BASE_LIBRARY_JUMP_BUFFER'
| |   `-Record 0x55887c1195d8 ''
| `-FullComment 0x55887c370f80 <line:41:4, col:73>
|   `-ParagraphComment 0x55887c370f50 <col:4, col:73>
|     `-TextComment 0x55887c370f20 <col:4, col:73> Text=" The x64 architecture context buffer used by SetJump() and LongJump()."
|-FunctionDecl 0x55887c119f48 <line:254:1, line:259:3> line:256:1 StrnLenS 'UINTN (const CHAR16 *, UINTN)'
| |-ParmVarDecl 0x55887c119db8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:257:21> col:21 String 'const CHAR16 *'
| |-ParmVarDecl 0x55887c119e30 <line:258:6, col:20> col:20 MaxSize 'UINTN':'unsigned long long'
| `-FullComment 0x55887c371570 <line:239:1, line:251:79>
|   |-ParagraphComment 0x55887c371020 <line:239:1, col:57>
|   | `-TextComment 0x55887c370ff0 <col:1, col:57> Text="  Returns the length of a Null-terminated Unicode string."
|   |-ParagraphComment 0x55887c371070 <line:241:1, col:54>
|   | `-TextComment 0x55887c371040 <col:1, col:54> Text="  This function is similar as strlen_s defined in C11."
|   |-ParagraphComment 0x55887c3710c0 <line:243:1, col:63>
|   | `-TextComment 0x55887c371090 <col:1, col:63> Text="  If String is not aligned on a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c371110 <line:245:1, col:2>
|   | `-TextComment 0x55887c3710e0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c371130 <col:3, line:246:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c3711e0 <line:245:17, line:246:2>
|   |   |-TextComment 0x55887c371190 <line:245:17, col:65> Text="   A pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c3711b0 <line:246:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c371200 <col:3, line:247:57> [in] implicitly Param="MaxSize" ParamIndex=1
|   | `-ParagraphComment 0x55887c3712b0 <line:246:18, line:247:57>
|   |   |-TextComment 0x55887c371260 <line:246:18, col:60> Text="  The maximum number of Destination Unicode"
|   |   `-TextComment 0x55887c371280 <line:247:1, col:57> Text="                   char, including terminating null char."
|   |-ParagraphComment 0x55887c371300 <line:249:1, col:2>
|   | `-TextComment 0x55887c3712d0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c371320 <col:3, line:250:2> Name="retval" Arg[0]="0"
|   | `-ParagraphComment 0x55887c3713c0 <line:249:12, line:250:2>
|   |   |-TextComment 0x55887c371370 <line:249:12, col:37> Text="        If String is NULL."
|   |   `-TextComment 0x55887c371390 <line:250:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3713e0 <col:3, line:251:2> Name="retval" Arg[0]="MaxSize"
|   | `-ParagraphComment 0x55887c371480 <line:250:18, line:251:2>
|   |   |-TextComment 0x55887c371430 <line:250:18, col:91> Text="  If there is no null character in the first MaxSize characters of String."
|   |   `-TextComment 0x55887c371450 <line:251:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3714a0 <col:3, col:79> Name="return"
|     `-ParagraphComment 0x55887c371500 <col:10, col:79>
|       `-TextComment 0x55887c3714d0 <col:10, col:79> Text=" The number of characters that percede the terminating null character."
|-FunctionDecl 0x55887c11c738 <line:282:1, line:287:3> line:284:1 StrnSizeS 'UINTN (const CHAR16 *, UINTN)'
| |-ParmVarDecl 0x55887c11c628 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:285:21> col:21 String 'const CHAR16 *'
| |-ParmVarDecl 0x55887c11c6a0 <line:286:6, col:20> col:20 MaxSize 'UINTN':'unsigned long long'
| `-FullComment 0x55887c371c20 <line:262:1, line:279:30>
|   |-ParagraphComment 0x55887c371630 <line:262:1, line:263:18>
|   | |-TextComment 0x55887c3715e0 <line:262:1, col:78> Text="  Returns the size of a Null-terminated Unicode string in bytes, including the"
|   | `-TextComment 0x55887c371600 <line:263:1, col:18> Text="  Null terminator."
|   |-ParagraphComment 0x55887c3716a0 <line:265:1, line:266:62>
|   | |-TextComment 0x55887c371650 <line:265:1, col:70> Text="  This function returns the size of the Null-terminated Unicode string"
|   | `-TextComment 0x55887c371670 <line:266:1, col:62> Text="  specified by String in bytes, including the Null terminator."
|   |-ParagraphComment 0x55887c3716f0 <line:268:1, col:63>
|   | `-TextComment 0x55887c3716c0 <col:1, col:63> Text="  If String is not aligned on a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c371750 <line:270:1, col:2>
|   | `-TextComment 0x55887c371720 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c371770 <col:3, line:271:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c371820 <line:270:17, line:271:2>
|   |   |-TextComment 0x55887c3717d0 <line:270:17, col:65> Text="   A pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c3717f0 <line:271:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c371840 <col:3, line:272:55> [in] implicitly Param="MaxSize" ParamIndex=1
|   | `-ParagraphComment 0x55887c3718f0 <line:271:18, line:272:55>
|   |   |-TextComment 0x55887c3718a0 <line:271:18, col:60> Text="  The maximum number of Destination Unicode"
|   |   `-TextComment 0x55887c3718c0 <line:272:1, col:55> Text="                   char, including the Null terminator."
|   |-ParagraphComment 0x55887c371940 <line:274:1, col:2>
|   | `-TextComment 0x55887c371910 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c371960 <col:3, line:275:2> Name="retval" Arg[0]="0"
|   | `-ParagraphComment 0x55887c371a00 <line:274:12, line:275:2>
|   |   |-TextComment 0x55887c3719b0 <line:274:12, col:31> Text="  If String is NULL."
|   |   `-TextComment 0x55887c3719d0 <line:275:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c371a20 <col:3, line:278:2> Name="retval" Arg[0]="(sizeof"
|   | `-ParagraphComment 0x55887c371b10 <line:275:18, line:278:2>
|   |   |-TextComment 0x55887c371a70 <line:275:18, col:43> Text=" (CHAR16) * (MaxSize + 1))"
|   |   |-TextComment 0x55887c371a90 <line:276:1, col:78> Text="             If there is no Null terminator in the first MaxSize characters of"
|   |   |-TextComment 0x55887c371ab0 <line:277:1, col:20> Text="             String."
|   |   `-TextComment 0x55887c371ad0 <line:278:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c371b30 <col:3, line:279:30> Name="return"
|     `-ParagraphComment 0x55887c371bb0 <line:278:10, line:279:30>
|       |-TextComment 0x55887c371b60 <line:278:10, col:76> Text=" The size of the Null-terminated Unicode string in bytes, including"
|       `-TextComment 0x55887c371b80 <line:279:1, col:30> Text="          the Null terminator."
|-FunctionDecl 0x55887c11ca98 <line:315:1, line:321:3> line:317:1 StrCpyS 'RETURN_STATUS (CHAR16 *, UINTN, const CHAR16 *)'
| |-ParmVarDecl 0x55887c11c888 <line:318:7, col:22> col:22 Destination 'CHAR16 *'
| |-ParmVarDecl 0x55887c11c900 <line:319:7, col:21> col:21 DestMax 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c11c978 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:320:22> col:22 Source 'const CHAR16 *'
| `-FullComment 0x55887c372580 <line:290:1, line:313:69>
|   |-ParagraphComment 0x55887c371ce0 <line:290:1, line:291:41>
|   | |-TextComment 0x55887c371c90 <line:290:1, col:78> Text="  Copies the string pointed to by Source (including the terminating null char)"
|   | `-TextComment 0x55887c371cb0 <line:291:1, col:41> Text="  to the array pointed to by Destination."
|   |-ParagraphComment 0x55887c371d30 <line:293:1, col:54>
|   | `-TextComment 0x55887c371d00 <col:1, col:54> Text="  This function is similar as strcpy_s defined in C11."
|   |-ParagraphComment 0x55887c371da0 <line:295:1, line:296:63>
|   | |-TextComment 0x55887c371d50 <line:295:1, col:68> Text="  If Destination is not aligned on a 16-bit boundary, then ASSERT()."
|   | `-TextComment 0x55887c371d70 <line:296:1, col:63> Text="  If Source is not aligned on a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c371df0 <line:298:1, col:62>
|   | `-TextComment 0x55887c371dc0 <col:1, col:62> Text="  If an error is returned, then the Destination is unmodified."
|   |-ParagraphComment 0x55887c371e40 <line:300:1, col:2>
|   | `-TextComment 0x55887c371e10 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c371e60 <col:3, line:301:2> [in] implicitly Param="Destination" ParamIndex=0
|   | `-ParagraphComment 0x55887c371f10 <line:300:22, line:301:2>
|   |   |-TextComment 0x55887c371ec0 <line:300:22, col:81> Text="              A pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c371ee0 <line:301:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c371f30 <col:3, line:303:2> [in] implicitly Param="DestMax" ParamIndex=1
|   | `-ParagraphComment 0x55887c372010 <line:301:18, line:303:2>
|   |   |-TextComment 0x55887c371f90 <line:301:18, col:76> Text="                  The maximum number of Destination Unicode"
|   |   |-TextComment 0x55887c371fb0 <line:302:1, col:73> Text="                                   char, including terminating null char."
|   |   `-TextComment 0x55887c371fd0 <line:303:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c372030 <col:3, col:81> [in] implicitly Param="Source" ParamIndex=2
|   | `-ParagraphComment 0x55887c3720c0 <col:17, col:81>
|   |   `-TextComment 0x55887c372090 <col:17, col:81> Text="                   A pointer to a Null-terminated Unicode string."
|   |-ParagraphComment 0x55887c372110 <line:305:1, col:2>
|   | `-TextComment 0x55887c3720e0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c372130 <col:3, line:306:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c3721d0 <line:305:25, line:306:2>
|   |   |-TextComment 0x55887c372180 <line:305:25, col:52> Text="           String is copied."
|   |   `-TextComment 0x55887c3721a0 <line:306:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3721f0 <col:3, line:307:2> Name="retval" Arg[0]="RETURN_BUFFER_TOO_SMALL"
|   | `-ParagraphComment 0x55887c3722a0 <line:306:34, line:307:2>
|   |   |-TextComment 0x55887c372250 <line:306:34, col:81> Text="  If DestMax is NOT greater than StrLen(Source)."
|   |   `-TextComment 0x55887c372270 <line:307:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3722c0 <col:3, line:313:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c372440 <line:307:35, line:313:2>
|   |   |-TextComment 0x55887c372320 <line:307:35, col:58> Text=" If Destination is NULL."
|   |   |-TextComment 0x55887c372340 <line:308:1, col:53> Text="                                   If Source is NULL."
|   |   |-TextComment 0x55887c372360 <line:309:1, col:80> Text="                                   If PcdMaximumUnicodeStringLength is not zero,"
|   |   |-TextComment 0x55887c372380 <line:310:1, col:63> Text="                                    and DestMax is greater than"
|   |   |-TextComment 0x55887c3723a0 <line:311:1, col:66> Text="                                    PcdMaximumUnicodeStringLength."
|   |   |-TextComment 0x55887c3723c0 <line:312:1, col:51> Text="                                   If DestMax is 0."
|   |   `-TextComment 0x55887c3723e0 <line:313:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c372460 <col:3, col:69> Name="retval" Arg[0]="RETURN_ACCESS_DENIED"
|     `-ParagraphComment 0x55887c3724f0 <col:31, col:69>
|       `-TextComment 0x55887c3724c0 <col:31, col:69> Text="     If Source and Destination overlap."
|-FunctionDecl 0x55887c11ce38 <line:352:1, line:359:3> line:354:1 StrnCpyS 'RETURN_STATUS (CHAR16 *, UINTN, const CHAR16 *, UINTN)'
| |-ParmVarDecl 0x55887c11cb88 <line:355:7, col:22> col:22 Destination 'CHAR16 *'
| |-ParmVarDecl 0x55887c11cc00 <line:356:7, col:21> col:21 DestMax 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c11cc78 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:357:22> col:22 Source 'const CHAR16 *'
| |-ParmVarDecl 0x55887c11ccf0 <line:358:7, col:21> col:21 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c373010 <line:324:1, line:350:69>
|   |-ParagraphComment 0x55887c372670 <line:324:1, line:326:57>
|   | |-TextComment 0x55887c3725f0 <line:324:1, col:75> Text="  Copies not more than Length successive char from the string pointed to by"
|   | |-TextComment 0x55887c372610 <line:325:1, col:79> Text="  Source to the array pointed to by Destination. If no null char is copied from"
|   | `-TextComment 0x55887c372630 <line:326:1, col:57> Text="  Source, then Destination[Length] is always set to null."
|   |-ParagraphComment 0x55887c3726c0 <line:328:1, col:55>
|   | `-TextComment 0x55887c372690 <col:1, col:55> Text="  This function is similar as strncpy_s defined in C11."
|   |-ParagraphComment 0x55887c372730 <line:330:1, line:331:78>
|   | |-TextComment 0x55887c3726e0 <line:330:1, col:83> Text="  If Length > 0 and Destination is not aligned on a 16-bit boundary, then ASSERT()."
|   | `-TextComment 0x55887c372700 <line:331:1, col:78> Text="  If Length > 0 and Source is not aligned on a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c372780 <line:333:1, col:62>
|   | `-TextComment 0x55887c372750 <col:1, col:62> Text="  If an error is returned, then the Destination is unmodified."
|   |-ParagraphComment 0x55887c3727d0 <line:335:1, col:2>
|   | `-TextComment 0x55887c3727a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3727f0 <col:3, line:336:2> [in] implicitly Param="Destination" ParamIndex=0
|   | `-ParagraphComment 0x55887c3728a0 <line:335:22, line:336:2>
|   |   |-TextComment 0x55887c372850 <line:335:22, col:81> Text="              A pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c372870 <line:336:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3728c0 <col:3, line:338:2> [in] implicitly Param="DestMax" ParamIndex=1
|   | `-ParagraphComment 0x55887c3729a0 <line:336:18, line:338:2>
|   |   |-TextComment 0x55887c372920 <line:336:18, col:76> Text="                  The maximum number of Destination Unicode"
|   |   |-TextComment 0x55887c372940 <line:337:1, col:73> Text="                                   char, including terminating null char."
|   |   `-TextComment 0x55887c372960 <line:338:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3729c0 <col:3, line:339:2> [in] implicitly Param="Source" ParamIndex=2
|   | `-ParagraphComment 0x55887c372a70 <line:338:17, line:339:2>
|   |   |-TextComment 0x55887c372a20 <line:338:17, col:81> Text="                   A pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c372a40 <line:339:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c372a90 <col:3, col:84> [in] implicitly Param="Length" ParamIndex=3
|   | `-ParagraphComment 0x55887c372b20 <col:17, col:84>
|   |   `-TextComment 0x55887c372af0 <col:17, col:84> Text="                   The maximum number of Unicode characters to copy."
|   |-ParagraphComment 0x55887c372b70 <line:341:1, col:2>
|   | `-TextComment 0x55887c372b40 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c372b90 <col:3, line:342:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c372c30 <line:341:25, line:342:2>
|   |   |-TextComment 0x55887c372be0 <line:341:25, col:52> Text="           String is copied."
|   |   `-TextComment 0x55887c372c00 <line:342:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c372c50 <col:3, line:344:2> Name="retval" Arg[0]="RETURN_BUFFER_TOO_SMALL"
|   | `-ParagraphComment 0x55887c372d30 <line:342:34, line:344:2>
|   |   |-TextComment 0x55887c372cb0 <line:342:34, col:65> Text="  If DestMax is NOT greater than"
|   |   |-TextComment 0x55887c372cd0 <line:343:1, col:63> Text="                                   MIN(StrLen(Source), Length)."
|   |   `-TextComment 0x55887c372cf0 <line:344:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c372d50 <col:3, line:350:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c372ed0 <line:344:35, line:350:2>
|   |   |-TextComment 0x55887c372db0 <line:344:35, col:58> Text=" If Destination is NULL."
|   |   |-TextComment 0x55887c372dd0 <line:345:1, col:53> Text="                                   If Source is NULL."
|   |   |-TextComment 0x55887c372df0 <line:346:1, col:80> Text="                                   If PcdMaximumUnicodeStringLength is not zero,"
|   |   |-TextComment 0x55887c372e10 <line:347:1, col:63> Text="                                    and DestMax is greater than"
|   |   |-TextComment 0x55887c372e30 <line:348:1, col:66> Text="                                    PcdMaximumUnicodeStringLength."
|   |   |-TextComment 0x55887c372e50 <line:349:1, col:51> Text="                                   If DestMax is 0."
|   |   `-TextComment 0x55887c372e70 <line:350:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c372ef0 <col:3, col:69> Name="retval" Arg[0]="RETURN_ACCESS_DENIED"
|     `-ParagraphComment 0x55887c372f80 <col:31, col:69>
|       `-TextComment 0x55887c372f50 <col:31, col:69> Text="     If Source and Destination overlap."
|-FunctionDecl 0x55887c11d0c8 <line:390:1, line:396:3> line:392:1 StrCatS 'RETURN_STATUS (CHAR16 *, UINTN, const CHAR16 *)'
| |-ParmVarDecl 0x55887c11cf38 <line:393:10, col:25> col:25 Destination 'CHAR16 *'
| |-ParmVarDecl 0x55887c11cfb0 <line:394:10, col:24> col:24 DestMax 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c11d028 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:395:25> col:25 Source 'const CHAR16 *'
| `-FullComment 0x55887c373ab0 <line:362:1, line:388:69>
|   |-ParagraphComment 0x55887c3730d0 <line:362:1, line:363:64>
|   | |-TextComment 0x55887c373080 <line:362:1, col:78> Text="  Appends a copy of the string pointed to by Source (including the terminating"
|   | `-TextComment 0x55887c3730a0 <line:363:1, col:64> Text="  null char) to the end of the string pointed to by Destination."
|   |-ParagraphComment 0x55887c373120 <line:365:1, col:54>
|   | `-TextComment 0x55887c3730f0 <col:1, col:54> Text="  This function is similar as strcat_s defined in C11."
|   |-ParagraphComment 0x55887c373190 <line:367:1, line:368:63>
|   | |-TextComment 0x55887c373140 <line:367:1, col:68> Text="  If Destination is not aligned on a 16-bit boundary, then ASSERT()."
|   | `-TextComment 0x55887c373160 <line:368:1, col:63> Text="  If Source is not aligned on a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c3731e0 <line:370:1, col:62>
|   | `-TextComment 0x55887c3731b0 <col:1, col:62> Text="  If an error is returned, then the Destination is unmodified."
|   |-ParagraphComment 0x55887c373230 <line:372:1, col:2>
|   | `-TextComment 0x55887c373200 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c373250 <col:3, line:373:2> [in] implicitly Param="Destination" ParamIndex=0
|   | `-ParagraphComment 0x55887c373300 <line:372:22, line:373:2>
|   |   |-TextComment 0x55887c3732b0 <line:372:22, col:81> Text="              A pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c3732d0 <line:373:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c373320 <col:3, line:375:2> [in] implicitly Param="DestMax" ParamIndex=1
|   | `-ParagraphComment 0x55887c373400 <line:373:18, line:375:2>
|   |   |-TextComment 0x55887c373380 <line:373:18, col:76> Text="                  The maximum number of Destination Unicode"
|   |   |-TextComment 0x55887c3733a0 <line:374:1, col:73> Text="                                   char, including terminating null char."
|   |   `-TextComment 0x55887c3733c0 <line:375:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c373420 <col:3, col:81> [in] implicitly Param="Source" ParamIndex=2
|   | `-ParagraphComment 0x55887c3734b0 <col:17, col:81>
|   |   `-TextComment 0x55887c373480 <col:17, col:81> Text="                   A pointer to a Null-terminated Unicode string."
|   |-ParagraphComment 0x55887c373500 <line:377:1, col:2>
|   | `-TextComment 0x55887c3734d0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c373520 <col:3, line:378:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c3735c0 <line:377:25, line:378:2>
|   |   |-TextComment 0x55887c373570 <line:377:25, col:54> Text="           String is appended."
|   |   `-TextComment 0x55887c373590 <line:378:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3735e0 <col:3, line:380:2> Name="retval" Arg[0]="RETURN_BAD_BUFFER_SIZE"
|   | `-ParagraphComment 0x55887c3736c0 <line:378:33, line:380:2>
|   |   |-TextComment 0x55887c373640 <line:378:33, col:65> Text="   If DestMax is NOT greater than"
|   |   |-TextComment 0x55887c373660 <line:379:1, col:55> Text="                                   StrLen(Destination)."
|   |   `-TextComment 0x55887c373680 <line:380:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3736e0 <col:3, line:382:2> Name="retval" Arg[0]="RETURN_BUFFER_TOO_SMALL"
|   | `-ParagraphComment 0x55887c3737d0 <line:380:34, line:382:2>
|   |   |-TextComment 0x55887c373750 <line:380:34, col:76> Text="  If (DestMax - StrLen(Destination)) is NOT"
|   |   |-TextComment 0x55887c373770 <line:381:1, col:63> Text="                                   greater than StrLen(Source)."
|   |   `-TextComment 0x55887c373790 <line:382:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3737f0 <col:3, line:388:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c373970 <line:382:35, line:388:2>
|   |   |-TextComment 0x55887c373850 <line:382:35, col:58> Text=" If Destination is NULL."
|   |   |-TextComment 0x55887c373870 <line:383:1, col:53> Text="                                   If Source is NULL."
|   |   |-TextComment 0x55887c373890 <line:384:1, col:80> Text="                                   If PcdMaximumUnicodeStringLength is not zero,"
|   |   |-TextComment 0x55887c3738b0 <line:385:1, col:63> Text="                                    and DestMax is greater than"
|   |   |-TextComment 0x55887c3738d0 <line:386:1, col:66> Text="                                    PcdMaximumUnicodeStringLength."
|   |   |-TextComment 0x55887c3738f0 <line:387:1, col:51> Text="                                   If DestMax is 0."
|   |   `-TextComment 0x55887c373910 <line:388:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c373990 <col:3, col:69> Name="retval" Arg[0]="RETURN_ACCESS_DENIED"
|     `-ParagraphComment 0x55887c373a20 <col:31, col:69>
|       `-TextComment 0x55887c3739f0 <col:31, col:69> Text="     If Source and Destination overlap."
|-FunctionDecl 0x55887c11d3c8 <line:430:1, line:437:3> line:432:1 StrnCatS 'RETURN_STATUS (CHAR16 *, UINTN, const CHAR16 *, UINTN)'
| |-ParmVarDecl 0x55887c11d1b8 <line:433:10, col:25> col:25 Destination 'CHAR16 *'
| |-ParmVarDecl 0x55887c11d230 <line:434:10, col:24> col:24 DestMax 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c11d2a8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:435:25> col:25 Source 'const CHAR16 *'
| |-ParmVarDecl 0x55887c11d320 <line:436:10, col:24> col:24 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c374670 <line:399:1, line:428:69>
|   |-ParagraphComment 0x55887c373bc0 <line:399:1, line:402:14>
|   | |-TextComment 0x55887c373b20 <line:399:1, col:76> Text="  Appends not more than Length successive char from the string pointed to by"
|   | |-TextComment 0x55887c373b40 <line:400:1, col:79> Text="  Source to the end of the string pointed to by Destination. If no null char is"
|   | |-TextComment 0x55887c373b60 <line:401:1, col:78> Text="  copied from Source, then Destination[StrLen(Destination) + Length] is always"
|   | `-TextComment 0x55887c373b80 <line:402:1, col:14> Text="  set to null."
|   |-ParagraphComment 0x55887c373c10 <line:404:1, col:55>
|   | `-TextComment 0x55887c373be0 <col:1, col:55> Text="  This function is similar as strncat_s defined in C11."
|   |-ParagraphComment 0x55887c373c80 <line:406:1, line:407:63>
|   | |-TextComment 0x55887c373c30 <line:406:1, col:68> Text="  If Destination is not aligned on a 16-bit boundary, then ASSERT()."
|   | `-TextComment 0x55887c373c50 <line:407:1, col:63> Text="  If Source is not aligned on a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c373cd0 <line:409:1, col:62>
|   | `-TextComment 0x55887c373ca0 <col:1, col:62> Text="  If an error is returned, then the Destination is unmodified."
|   |-ParagraphComment 0x55887c373d20 <line:411:1, col:2>
|   | `-TextComment 0x55887c373cf0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c373d40 <col:3, line:412:2> [in] implicitly Param="Destination" ParamIndex=0
|   | `-ParagraphComment 0x55887c373df0 <line:411:22, line:412:2>
|   |   |-TextComment 0x55887c373da0 <line:411:22, col:81> Text="              A pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c373dc0 <line:412:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c373e10 <col:3, line:414:2> [in] implicitly Param="DestMax" ParamIndex=1
|   | `-ParagraphComment 0x55887c373ef0 <line:412:18, line:414:2>
|   |   |-TextComment 0x55887c373e70 <line:412:18, col:76> Text="                  The maximum number of Destination Unicode"
|   |   |-TextComment 0x55887c373e90 <line:413:1, col:73> Text="                                   char, including terminating null char."
|   |   `-TextComment 0x55887c373eb0 <line:414:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c373f10 <col:3, line:415:2> [in] implicitly Param="Source" ParamIndex=2
|   | `-ParagraphComment 0x55887c373fc0 <line:414:17, line:415:2>
|   |   |-TextComment 0x55887c373f70 <line:414:17, col:81> Text="                   A pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c373f90 <line:415:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c373fe0 <col:3, col:84> [in] implicitly Param="Length" ParamIndex=3
|   | `-ParagraphComment 0x55887c374070 <col:17, col:84>
|   |   `-TextComment 0x55887c374040 <col:17, col:84> Text="                   The maximum number of Unicode characters to copy."
|   |-ParagraphComment 0x55887c3740c0 <line:417:1, col:2>
|   | `-TextComment 0x55887c374090 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3740e0 <col:3, line:418:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c374180 <line:417:25, line:418:2>
|   |   |-TextComment 0x55887c374130 <line:417:25, col:54> Text="           String is appended."
|   |   `-TextComment 0x55887c374150 <line:418:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3741a0 <col:3, line:420:2> Name="retval" Arg[0]="RETURN_BAD_BUFFER_SIZE"
|   | `-ParagraphComment 0x55887c374280 <line:418:33, line:420:2>
|   |   |-TextComment 0x55887c374200 <line:418:33, col:65> Text="   If DestMax is NOT greater than"
|   |   |-TextComment 0x55887c374220 <line:419:1, col:55> Text="                                   StrLen(Destination)."
|   |   `-TextComment 0x55887c374240 <line:420:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3742a0 <col:3, line:422:2> Name="retval" Arg[0]="RETURN_BUFFER_TOO_SMALL"
|   | `-ParagraphComment 0x55887c374380 <line:420:34, line:422:2>
|   |   |-TextComment 0x55887c374300 <line:420:34, col:76> Text="  If (DestMax - StrLen(Destination)) is NOT"
|   |   |-TextComment 0x55887c374320 <line:421:1, col:76> Text="                                   greater than MIN(StrLen(Source), Length)."
|   |   `-TextComment 0x55887c374340 <line:422:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3743a0 <col:3, line:428:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c374520 <line:422:35, line:428:2>
|   |   |-TextComment 0x55887c374400 <line:422:35, col:58> Text=" If Destination is NULL."
|   |   |-TextComment 0x55887c374420 <line:423:1, col:53> Text="                                   If Source is NULL."
|   |   |-TextComment 0x55887c374440 <line:424:1, col:80> Text="                                   If PcdMaximumUnicodeStringLength is not zero,"
|   |   |-TextComment 0x55887c374460 <line:425:1, col:63> Text="                                    and DestMax is greater than"
|   |   |-TextComment 0x55887c374480 <line:426:1, col:66> Text="                                    PcdMaximumUnicodeStringLength."
|   |   |-TextComment 0x55887c3744a0 <line:427:1, col:51> Text="                                   If DestMax is 0."
|   |   `-TextComment 0x55887c3744c0 <line:428:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c374540 <col:3, col:69> Name="retval" Arg[0]="RETURN_ACCESS_DENIED"
|     `-ParagraphComment 0x55887c3745d0 <col:31, col:69>
|       `-TextComment 0x55887c3745a0 <col:31, col:69> Text="     If Source and Destination overlap."
|-FunctionDecl 0x55887c11d798 <line:482:1, line:488:3> line:484:1 StrDecimalToUintnS 'RETURN_STATUS (const CHAR16 *, CHAR16 **, UINTN *)'
| |-ParmVarDecl 0x55887c11d4c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:485:22> col:22 String 'const CHAR16 *'
| |-ParmVarDecl 0x55887c11d600 <line:486:13, col:23> col:23 EndPointer 'CHAR16 **'
| |-ParmVarDecl 0x55887c11d678 <line:487:13, col:22> col:22 Data 'UINTN *'
| `-FullComment 0x55887c3751a0 <line:440:1, line:479:62>
|   |-ParagraphComment 0x55887c374710 <line:440:1, col:76>
|   | `-TextComment 0x55887c3746e0 <col:1, col:76> Text="  Convert a Null-terminated Unicode decimal string to a value of type UINTN."
|   |-ParagraphComment 0x55887c3747b0 <line:442:1, line:444:33>
|   | |-TextComment 0x55887c374730 <line:442:1, col:77> Text="  This function outputs a value of type UINTN by interpreting the contents of"
|   | |-TextComment 0x55887c374750 <line:443:1, col:79> Text="  the Unicode string specified by String as a decimal number. The format of the"
|   | `-TextComment 0x55887c374770 <line:444:1, col:33> Text="  input Unicode string String is:"
|   |-ParagraphComment 0x55887c374800 <line:446:1, col:44>
|   | `-TextComment 0x55887c3747d0 <col:1, col:44> Text="                  [spaces] [decimal digits]."
|   |-ParagraphComment 0x55887c3748f0 <line:448:1, line:452:74>
|   | |-TextComment 0x55887c374820 <line:448:1, col:76> Text="  The valid decimal digit character is in the range [0-9]. The function will"
|   | |-TextComment 0x55887c374840 <line:449:1, col:71> Text="  ignore the pad space, which includes spaces or tab characters, before"
|   | |-TextComment 0x55887c374860 <line:450:1, col:78> Text="  [decimal digits]. The running zero in the beginning of [decimal digits] will"
|   | |-TextComment 0x55887c374880 <line:451:1, col:77> Text="  be ignored. Then, the function stops at the first character that is a not a"
|   | `-TextComment 0x55887c3748a0 <line:452:1, col:74> Text="  valid decimal character or a Null-terminator, whichever one comes first."
|   |-ParagraphComment 0x55887c374940 <line:454:1, col:63>
|   | `-TextComment 0x55887c374910 <col:1, col:63> Text="  If String is not aligned in a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c374a00 <line:456:1, line:459:57>
|   | |-TextComment 0x55887c374960 <line:456:1, col:77> Text="  If String has no valid decimal digits in the above format, then 0 is stored"
|   | |-TextComment 0x55887c374980 <line:457:1, col:37> Text="  at the location pointed to by Data."
|   | |-TextComment 0x55887c3749a0 <line:458:1, col:78> Text="  If the number represented by String exceeds the range defined by UINTN, then"
|   | `-TextComment 0x55887c3749c0 <line:459:1, col:57> Text="  MAX_UINTN is stored at the location pointed to by Data."
|   |-ParagraphComment 0x55887c374ac0 <line:461:1, line:464:50>
|   | |-TextComment 0x55887c374a20 <line:461:1, col:77> Text="  If EndPointer is not NULL, a pointer to the character that stopped the scan"
|   | |-TextComment 0x55887c374a40 <line:462:1, col:76> Text="  is stored at the location pointed to by EndPointer. If String has no valid"
|   | |-TextComment 0x55887c374a60 <line:463:1, col:76> Text="  decimal digits right after the optional pad spaces, the value of String is"
|   | `-TextComment 0x55887c374a80 <line:464:1, col:50> Text="  stored at the location pointed to by EndPointer."
|   |-ParagraphComment 0x55887c374b10 <line:466:1, col:2>
|   | `-TextComment 0x55887c374ae0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c374b30 <col:3, line:467:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c374be0 <line:466:17, line:467:2>
|   |   |-TextComment 0x55887c374b90 <line:466:17, col:79> Text="                   Pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c374bb0 <line:467:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c374c00 <col:3, line:468:2> [in] implicitly Param="EndPointer" ParamIndex=1
|   | `-ParagraphComment 0x55887c374cb0 <line:467:21, line:468:2>
|   |   |-TextComment 0x55887c374c60 <line:467:21, col:72> Text="               Pointer to character that stops scan."
|   |   `-TextComment 0x55887c374c80 <line:468:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c374cd0 <col:3, col:66> [in] implicitly Param="Data" ParamIndex=2
|   | `-ParagraphComment 0x55887c374d60 <col:15, col:66>
|   |   `-TextComment 0x55887c374d30 <col:15, col:66> Text="                     Pointer to the converted value."
|   |-ParagraphComment 0x55887c374db0 <line:470:1, col:2>
|   | `-TextComment 0x55887c374d80 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c374dd0 <col:3, line:471:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c374e70 <line:470:25, line:471:2>
|   |   |-TextComment 0x55887c374e20 <line:470:25, col:67> Text="           Value is translated from String."
|   |   `-TextComment 0x55887c374e40 <line:471:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c374e90 <col:3, line:478:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c375030 <line:471:35, line:478:2>
|   |   |-TextComment 0x55887c374ef0 <line:471:35, col:53> Text=" If String is NULL."
|   |   |-TextComment 0x55887c374f10 <line:472:1, col:51> Text="                                   If Data is NULL."
|   |   |-TextComment 0x55887c374f30 <line:473:1, col:74> Text="                                   If PcdMaximumUnicodeStringLength is not"
|   |   |-TextComment 0x55887c374f50 <line:474:1, col:70> Text="                                   zero, and String contains more than"
|   |   |-TextComment 0x55887c374f70 <line:475:1, col:72> Text="                                   PcdMaximumUnicodeStringLength Unicode"
|   |   |-TextComment 0x55887c374f90 <line:476:1, col:64> Text="                                   characters, not including the"
|   |   |-TextComment 0x55887c374fb0 <line:477:1, col:51> Text="                                   Null-terminator."
|   |   `-TextComment 0x55887c374fd0 <line:478:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c375050 <col:3, line:479:62> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|     `-ParagraphComment 0x55887c375100 <line:478:29, line:479:62>
|       |-TextComment 0x55887c3750b0 <line:478:29, col:78> Text="       If the number represented by String exceeds"
|       `-TextComment 0x55887c3750d0 <line:479:1, col:62> Text="                                   the range defined by UINTN."
|-FunctionDecl 0x55887c11da88 <line:533:1, line:539:3> line:535:1 StrDecimalToUint64S 'RETURN_STATUS (const CHAR16 *, CHAR16 **, UINT64 *)'
| |-ParmVarDecl 0x55887c11d888 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:536:22> col:22 String 'const CHAR16 *'
| |-ParmVarDecl 0x55887c11d908 <line:537:13, col:23> col:23 EndPointer 'CHAR16 **'
| |-ParmVarDecl 0x55887c11d9a8 <line:538:13, col:22> col:22 Data 'UINT64 *'
| `-FullComment 0x55887c375ce0 <line:491:1, line:530:63>
|   |-ParagraphComment 0x55887c375240 <line:491:1, col:77>
|   | `-TextComment 0x55887c375210 <col:1, col:77> Text="  Convert a Null-terminated Unicode decimal string to a value of type UINT64."
|   |-ParagraphComment 0x55887c3752e0 <line:493:1, line:495:33>
|   | |-TextComment 0x55887c375260 <line:493:1, col:78> Text="  This function outputs a value of type UINT64 by interpreting the contents of"
|   | |-TextComment 0x55887c375280 <line:494:1, col:79> Text="  the Unicode string specified by String as a decimal number. The format of the"
|   | `-TextComment 0x55887c3752a0 <line:495:1, col:33> Text="  input Unicode string String is:"
|   |-ParagraphComment 0x55887c375330 <line:497:1, col:44>
|   | `-TextComment 0x55887c375300 <col:1, col:44> Text="                  [spaces] [decimal digits]."
|   |-ParagraphComment 0x55887c375420 <line:499:1, line:503:74>
|   | |-TextComment 0x55887c375350 <line:499:1, col:76> Text="  The valid decimal digit character is in the range [0-9]. The function will"
|   | |-TextComment 0x55887c375370 <line:500:1, col:71> Text="  ignore the pad space, which includes spaces or tab characters, before"
|   | |-TextComment 0x55887c375390 <line:501:1, col:78> Text="  [decimal digits]. The running zero in the beginning of [decimal digits] will"
|   | |-TextComment 0x55887c3753b0 <line:502:1, col:77> Text="  be ignored. Then, the function stops at the first character that is a not a"
|   | `-TextComment 0x55887c3753d0 <line:503:1, col:74> Text="  valid decimal character or a Null-terminator, whichever one comes first."
|   |-ParagraphComment 0x55887c375470 <line:505:1, col:63>
|   | `-TextComment 0x55887c375440 <col:1, col:63> Text="  If String is not aligned in a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c375530 <line:507:1, line:510:58>
|   | |-TextComment 0x55887c375490 <line:507:1, col:77> Text="  If String has no valid decimal digits in the above format, then 0 is stored"
|   | |-TextComment 0x55887c3754b0 <line:508:1, col:37> Text="  at the location pointed to by Data."
|   | |-TextComment 0x55887c3754d0 <line:509:1, col:79> Text="  If the number represented by String exceeds the range defined by UINT64, then"
|   | `-TextComment 0x55887c3754f0 <line:510:1, col:58> Text="  MAX_UINT64 is stored at the location pointed to by Data."
|   |-ParagraphComment 0x55887c3755f0 <line:512:1, line:515:50>
|   | |-TextComment 0x55887c375550 <line:512:1, col:77> Text="  If EndPointer is not NULL, a pointer to the character that stopped the scan"
|   | |-TextComment 0x55887c375570 <line:513:1, col:76> Text="  is stored at the location pointed to by EndPointer. If String has no valid"
|   | |-TextComment 0x55887c375590 <line:514:1, col:76> Text="  decimal digits right after the optional pad spaces, the value of String is"
|   | `-TextComment 0x55887c3755b0 <line:515:1, col:50> Text="  stored at the location pointed to by EndPointer."
|   |-ParagraphComment 0x55887c375640 <line:517:1, col:2>
|   | `-TextComment 0x55887c375610 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c375660 <col:3, line:518:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c375710 <line:517:17, line:518:2>
|   |   |-TextComment 0x55887c3756c0 <line:517:17, col:79> Text="                   Pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c3756e0 <line:518:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c375740 <col:3, line:519:2> [in] implicitly Param="EndPointer" ParamIndex=1
|   | `-ParagraphComment 0x55887c3757f0 <line:518:21, line:519:2>
|   |   |-TextComment 0x55887c3757a0 <line:518:21, col:72> Text="               Pointer to character that stops scan."
|   |   `-TextComment 0x55887c3757c0 <line:519:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c375810 <col:3, col:66> [in] implicitly Param="Data" ParamIndex=2
|   | `-ParagraphComment 0x55887c3758a0 <col:15, col:66>
|   |   `-TextComment 0x55887c375870 <col:15, col:66> Text="                     Pointer to the converted value."
|   |-ParagraphComment 0x55887c3758f0 <line:521:1, col:2>
|   | `-TextComment 0x55887c3758c0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c375910 <col:3, line:522:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c3759b0 <line:521:25, line:522:2>
|   |   |-TextComment 0x55887c375960 <line:521:25, col:67> Text="           Value is translated from String."
|   |   `-TextComment 0x55887c375980 <line:522:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3759d0 <col:3, line:529:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c375b70 <line:522:35, line:529:2>
|   |   |-TextComment 0x55887c375a30 <line:522:35, col:53> Text=" If String is NULL."
|   |   |-TextComment 0x55887c375a50 <line:523:1, col:51> Text="                                   If Data is NULL."
|   |   |-TextComment 0x55887c375a70 <line:524:1, col:74> Text="                                   If PcdMaximumUnicodeStringLength is not"
|   |   |-TextComment 0x55887c375a90 <line:525:1, col:70> Text="                                   zero, and String contains more than"
|   |   |-TextComment 0x55887c375ab0 <line:526:1, col:72> Text="                                   PcdMaximumUnicodeStringLength Unicode"
|   |   |-TextComment 0x55887c375ad0 <line:527:1, col:64> Text="                                   characters, not including the"
|   |   |-TextComment 0x55887c375af0 <line:528:1, col:51> Text="                                   Null-terminator."
|   |   `-TextComment 0x55887c375b10 <line:529:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c375b90 <col:3, line:530:63> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|     `-ParagraphComment 0x55887c375c40 <line:529:29, line:530:63>
|       |-TextComment 0x55887c375bf0 <line:529:29, col:78> Text="       If the number represented by String exceeds"
|       `-TextComment 0x55887c375c10 <line:530:1, col:63> Text="                                   the range defined by UINT64."
|-FunctionDecl 0x55887c11dd10 <line:589:1, line:595:3> line:591:1 StrHexToUintnS 'RETURN_STATUS (const CHAR16 *, CHAR16 **, UINTN *)'
| |-ParmVarDecl 0x55887c11db78 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:592:22> col:22 String 'const CHAR16 *'
| |-ParmVarDecl 0x55887c11dbf8 <line:593:13, col:23> col:23 EndPointer 'CHAR16 **'
| |-ParmVarDecl 0x55887c11dc70 <line:594:13, col:22> col:22 Data 'UINTN *'
| `-FullComment 0x55887c3768d0 <line:542:1, line:586:62>
|   |-ParagraphComment 0x55887c375da0 <line:542:1, line:543:8>
|   | |-TextComment 0x55887c375d50 <line:542:1, col:73> Text="  Convert a Null-terminated Unicode hexadecimal string to a value of type"
|   | `-TextComment 0x55887c375d70 <line:543:1, col:8> Text="  UINTN."
|   |-ParagraphComment 0x55887c375e40 <line:545:1, line:547:37>
|   | |-TextComment 0x55887c375dc0 <line:545:1, col:77> Text="  This function outputs a value of type UINTN by interpreting the contents of"
|   | |-TextComment 0x55887c375de0 <line:546:1, col:79> Text="  the Unicode string specified by String as a hexadecimal number. The format of"
|   | `-TextComment 0x55887c375e00 <line:547:1, col:37> Text="  the input Unicode string String is:"
|   |-ParagraphComment 0x55887c375e90 <line:549:1, col:57>
|   | `-TextComment 0x55887c375e60 <col:1, col:57> Text="                  [spaces][zeros][x][hexadecimal digits]."
|   |-ParagraphComment 0x55887c376020 <line:551:1, line:559:28>
|   | |-TextComment 0x55887c375eb0 <line:551:1, col:79> Text="  The valid hexadecimal digit character is in the range [0-9], [a-f] and [A-F]."
|   | |-TextComment 0x55887c375ed0 <line:552:1, col:74> Text="  The prefix "0x" is optional. Both "x" and "X" is allowed in "0x" prefix."
|   | |-TextComment 0x55887c375ef0 <line:553:1, col:78> Text="  If "x" appears in the input string, it must be prefixed with at least one 0."
|   | |-TextComment 0x55887c375f10 <line:554:1, col:70> Text="  The function will ignore the pad space, which includes spaces or tab"
|   | |-TextComment 0x55887c375f30 <line:555:1, col:74> Text="  characters, before [zeros], [x] or [hexadecimal digit]. The running zero"
|   | |-TextComment 0x55887c375f50 <line:556:1, col:78> Text="  before [x] or [hexadecimal digit] will be ignored. Then, the decoding starts"
|   | |-TextComment 0x55887c375f70 <line:557:1, col:77> Text="  after [x] or the first valid hexadecimal digit. Then, the function stops at"
|   | |-TextComment 0x55887c375f90 <line:558:1, col:74> Text="  the first character that is a not a valid hexadecimal character or NULL,"
|   | `-TextComment 0x55887c375fb0 <line:559:1, col:28> Text="  whichever one comes first."
|   |-ParagraphComment 0x55887c376070 <line:561:1, col:63>
|   | `-TextComment 0x55887c376040 <col:1, col:63> Text="  If String is not aligned in a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c376130 <line:563:1, line:566:57>
|   | |-TextComment 0x55887c376090 <line:563:1, col:74> Text="  If String has no valid hexadecimal digits in the above format, then 0 is"
|   | |-TextComment 0x55887c3760b0 <line:564:1, col:44> Text="  stored at the location pointed to by Data."
|   | |-TextComment 0x55887c3760d0 <line:565:1, col:78> Text="  If the number represented by String exceeds the range defined by UINTN, then"
|   | `-TextComment 0x55887c3760f0 <line:566:1, col:57> Text="  MAX_UINTN is stored at the location pointed to by Data."
|   |-ParagraphComment 0x55887c3761f0 <line:568:1, line:571:53>
|   | |-TextComment 0x55887c376150 <line:568:1, col:77> Text="  If EndPointer is not NULL, a pointer to the character that stopped the scan"
|   | |-TextComment 0x55887c376170 <line:569:1, col:76> Text="  is stored at the location pointed to by EndPointer. If String has no valid"
|   | |-TextComment 0x55887c376190 <line:570:1, col:77> Text="  hexadecimal digits right after the optional pad spaces, the value of String"
|   | `-TextComment 0x55887c3761b0 <line:571:1, col:53> Text="  is stored at the location pointed to by EndPointer."
|   |-ParagraphComment 0x55887c376240 <line:573:1, col:2>
|   | `-TextComment 0x55887c376210 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c376260 <col:3, line:574:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c376310 <line:573:17, line:574:2>
|   |   |-TextComment 0x55887c3762c0 <line:573:17, col:79> Text="                   Pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c3762e0 <line:574:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c376330 <col:3, line:575:2> [in] implicitly Param="EndPointer" ParamIndex=1
|   | `-ParagraphComment 0x55887c3763e0 <line:574:21, line:575:2>
|   |   |-TextComment 0x55887c376390 <line:574:21, col:72> Text="               Pointer to character that stops scan."
|   |   `-TextComment 0x55887c3763b0 <line:575:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c376400 <col:3, col:66> [in] implicitly Param="Data" ParamIndex=2
|   | `-ParagraphComment 0x55887c376490 <col:15, col:66>
|   |   `-TextComment 0x55887c376460 <col:15, col:66> Text="                     Pointer to the converted value."
|   |-ParagraphComment 0x55887c3764e0 <line:577:1, col:2>
|   | `-TextComment 0x55887c3764b0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c376500 <col:3, line:578:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c3765a0 <line:577:25, line:578:2>
|   |   |-TextComment 0x55887c376550 <line:577:25, col:67> Text="           Value is translated from String."
|   |   `-TextComment 0x55887c376570 <line:578:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3765c0 <col:3, line:585:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c376760 <line:578:35, line:585:2>
|   |   |-TextComment 0x55887c376620 <line:578:35, col:53> Text=" If String is NULL."
|   |   |-TextComment 0x55887c376640 <line:579:1, col:51> Text="                                   If Data is NULL."
|   |   |-TextComment 0x55887c376660 <line:580:1, col:74> Text="                                   If PcdMaximumUnicodeStringLength is not"
|   |   |-TextComment 0x55887c376680 <line:581:1, col:70> Text="                                   zero, and String contains more than"
|   |   |-TextComment 0x55887c3766a0 <line:582:1, col:72> Text="                                   PcdMaximumUnicodeStringLength Unicode"
|   |   |-TextComment 0x55887c3766c0 <line:583:1, col:64> Text="                                   characters, not including the"
|   |   |-TextComment 0x55887c3766e0 <line:584:1, col:51> Text="                                   Null-terminator."
|   |   `-TextComment 0x55887c376700 <line:585:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c376780 <col:3, line:586:62> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|     `-ParagraphComment 0x55887c376830 <line:585:29, line:586:62>
|       |-TextComment 0x55887c3767e0 <line:585:29, col:78> Text="       If the number represented by String exceeds"
|       `-TextComment 0x55887c376800 <line:586:1, col:62> Text="                                   the range defined by UINTN."
|-FunctionDecl 0x55887c11dfa0 <line:645:1, line:651:3> line:647:1 StrHexToUint64S 'RETURN_STATUS (const CHAR16 *, CHAR16 **, UINT64 *)'
| |-ParmVarDecl 0x55887c11de08 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:648:22> col:22 String 'const CHAR16 *'
| |-ParmVarDecl 0x55887c11de88 <line:649:13, col:23> col:23 EndPointer 'CHAR16 **'
| |-ParmVarDecl 0x55887c11df00 <line:650:13, col:22> col:22 Data 'UINT64 *'
| `-FullComment 0x55887c3774c0 <line:598:1, line:642:63>
|   |-ParagraphComment 0x55887c376990 <line:598:1, line:599:9>
|   | |-TextComment 0x55887c376940 <line:598:1, col:73> Text="  Convert a Null-terminated Unicode hexadecimal string to a value of type"
|   | `-TextComment 0x55887c376960 <line:599:1, col:9> Text="  UINT64."
|   |-ParagraphComment 0x55887c376a30 <line:601:1, line:603:37>
|   | |-TextComment 0x55887c3769b0 <line:601:1, col:78> Text="  This function outputs a value of type UINT64 by interpreting the contents of"
|   | |-TextComment 0x55887c3769d0 <line:602:1, col:79> Text="  the Unicode string specified by String as a hexadecimal number. The format of"
|   | `-TextComment 0x55887c3769f0 <line:603:1, col:37> Text="  the input Unicode string String is:"
|   |-ParagraphComment 0x55887c376a80 <line:605:1, col:57>
|   | `-TextComment 0x55887c376a50 <col:1, col:57> Text="                  [spaces][zeros][x][hexadecimal digits]."
|   |-ParagraphComment 0x55887c376c10 <line:607:1, line:615:28>
|   | |-TextComment 0x55887c376aa0 <line:607:1, col:79> Text="  The valid hexadecimal digit character is in the range [0-9], [a-f] and [A-F]."
|   | |-TextComment 0x55887c376ac0 <line:608:1, col:74> Text="  The prefix "0x" is optional. Both "x" and "X" is allowed in "0x" prefix."
|   | |-TextComment 0x55887c376ae0 <line:609:1, col:78> Text="  If "x" appears in the input string, it must be prefixed with at least one 0."
|   | |-TextComment 0x55887c376b00 <line:610:1, col:70> Text="  The function will ignore the pad space, which includes spaces or tab"
|   | |-TextComment 0x55887c376b20 <line:611:1, col:74> Text="  characters, before [zeros], [x] or [hexadecimal digit]. The running zero"
|   | |-TextComment 0x55887c376b40 <line:612:1, col:78> Text="  before [x] or [hexadecimal digit] will be ignored. Then, the decoding starts"
|   | |-TextComment 0x55887c376b60 <line:613:1, col:77> Text="  after [x] or the first valid hexadecimal digit. Then, the function stops at"
|   | |-TextComment 0x55887c376b80 <line:614:1, col:74> Text="  the first character that is a not a valid hexadecimal character or NULL,"
|   | `-TextComment 0x55887c376ba0 <line:615:1, col:28> Text="  whichever one comes first."
|   |-ParagraphComment 0x55887c376c60 <line:617:1, col:63>
|   | `-TextComment 0x55887c376c30 <col:1, col:63> Text="  If String is not aligned in a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c376d20 <line:619:1, line:622:58>
|   | |-TextComment 0x55887c376c80 <line:619:1, col:74> Text="  If String has no valid hexadecimal digits in the above format, then 0 is"
|   | |-TextComment 0x55887c376ca0 <line:620:1, col:44> Text="  stored at the location pointed to by Data."
|   | |-TextComment 0x55887c376cc0 <line:621:1, col:79> Text="  If the number represented by String exceeds the range defined by UINT64, then"
|   | `-TextComment 0x55887c376ce0 <line:622:1, col:58> Text="  MAX_UINT64 is stored at the location pointed to by Data."
|   |-ParagraphComment 0x55887c376de0 <line:624:1, line:627:53>
|   | |-TextComment 0x55887c376d40 <line:624:1, col:77> Text="  If EndPointer is not NULL, a pointer to the character that stopped the scan"
|   | |-TextComment 0x55887c376d60 <line:625:1, col:76> Text="  is stored at the location pointed to by EndPointer. If String has no valid"
|   | |-TextComment 0x55887c376d80 <line:626:1, col:77> Text="  hexadecimal digits right after the optional pad spaces, the value of String"
|   | `-TextComment 0x55887c376da0 <line:627:1, col:53> Text="  is stored at the location pointed to by EndPointer."
|   |-ParagraphComment 0x55887c376e30 <line:629:1, col:2>
|   | `-TextComment 0x55887c376e00 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c376e50 <col:3, line:630:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c376f00 <line:629:17, line:630:2>
|   |   |-TextComment 0x55887c376eb0 <line:629:17, col:79> Text="                   Pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c376ed0 <line:630:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c376f20 <col:3, line:631:2> [in] implicitly Param="EndPointer" ParamIndex=1
|   | `-ParagraphComment 0x55887c376fd0 <line:630:21, line:631:2>
|   |   |-TextComment 0x55887c376f80 <line:630:21, col:72> Text="               Pointer to character that stops scan."
|   |   `-TextComment 0x55887c376fa0 <line:631:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c376ff0 <col:3, col:66> [in] implicitly Param="Data" ParamIndex=2
|   | `-ParagraphComment 0x55887c377080 <col:15, col:66>
|   |   `-TextComment 0x55887c377050 <col:15, col:66> Text="                     Pointer to the converted value."
|   |-ParagraphComment 0x55887c3770d0 <line:633:1, col:2>
|   | `-TextComment 0x55887c3770a0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3770f0 <col:3, line:634:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c377190 <line:633:25, line:634:2>
|   |   |-TextComment 0x55887c377140 <line:633:25, col:67> Text="           Value is translated from String."
|   |   `-TextComment 0x55887c377160 <line:634:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3771b0 <col:3, line:641:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c377350 <line:634:35, line:641:2>
|   |   |-TextComment 0x55887c377210 <line:634:35, col:53> Text=" If String is NULL."
|   |   |-TextComment 0x55887c377230 <line:635:1, col:51> Text="                                   If Data is NULL."
|   |   |-TextComment 0x55887c377250 <line:636:1, col:74> Text="                                   If PcdMaximumUnicodeStringLength is not"
|   |   |-TextComment 0x55887c377270 <line:637:1, col:70> Text="                                   zero, and String contains more than"
|   |   |-TextComment 0x55887c377290 <line:638:1, col:72> Text="                                   PcdMaximumUnicodeStringLength Unicode"
|   |   |-TextComment 0x55887c3772b0 <line:639:1, col:64> Text="                                   characters, not including the"
|   |   |-TextComment 0x55887c3772d0 <line:640:1, col:51> Text="                                   Null-terminator."
|   |   `-TextComment 0x55887c3772f0 <line:641:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c377370 <col:3, line:642:63> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|     `-ParagraphComment 0x55887c377420 <line:641:29, line:642:63>
|       |-TextComment 0x55887c3773d0 <line:641:29, col:78> Text="       If the number represented by String exceeds"
|       `-TextComment 0x55887c3773f0 <line:642:1, col:63> Text="                                   the range defined by UINT64."
|-FunctionDecl 0x55887c11e258 <line:667:1, line:672:3> line:669:1 AsciiStrnLenS 'UINTN (const CHAR8 *, UINTN)'
| |-ParmVarDecl 0x55887c11e0c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:670:20> col:20 String 'const CHAR8 *'
| |-ParmVarDecl 0x55887c11e140 <line:671:6, col:19> col:19 MaxSize 'UINTN':'unsigned long long'
| `-FullComment 0x55887c377a80 <line:654:1, line:664:79>
|   |-ParagraphComment 0x55887c377560 <line:654:1, col:55>
|   | `-TextComment 0x55887c377530 <col:1, col:55> Text="  Returns the length of a Null-terminated Ascii string."
|   |-ParagraphComment 0x55887c3775b0 <line:656:1, col:54>
|   | `-TextComment 0x55887c377580 <col:1, col:54> Text="  This function is similar as strlen_s defined in C11."
|   |-ParagraphComment 0x55887c377600 <line:658:1, col:2>
|   | `-TextComment 0x55887c3775d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c377620 <col:3, line:659:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c3776d0 <line:658:17, line:659:2>
|   |   |-TextComment 0x55887c377680 <line:658:17, col:63> Text="   A pointer to a Null-terminated Ascii string."
|   |   `-TextComment 0x55887c3776a0 <line:659:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3776f0 <col:3, line:660:57> [in] implicitly Param="MaxSize" ParamIndex=1
|   | `-ParagraphComment 0x55887c3777c0 <line:659:18, line:660:57>
|   |   |-TextComment 0x55887c377770 <line:659:18, col:58> Text="  The maximum number of Destination Ascii"
|   |   `-TextComment 0x55887c377790 <line:660:1, col:57> Text="                   char, including terminating null char."
|   |-ParagraphComment 0x55887c377810 <line:662:1, col:2>
|   | `-TextComment 0x55887c3777e0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c377830 <col:3, line:663:2> Name="retval" Arg[0]="0"
|   | `-ParagraphComment 0x55887c3778d0 <line:662:12, line:663:2>
|   |   |-TextComment 0x55887c377880 <line:662:12, col:37> Text="        If String is NULL."
|   |   `-TextComment 0x55887c3778a0 <line:663:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3778f0 <col:3, line:664:2> Name="retval" Arg[0]="MaxSize"
|   | `-ParagraphComment 0x55887c377990 <line:663:18, line:664:2>
|   |   |-TextComment 0x55887c377940 <line:663:18, col:91> Text="  If there is no null character in the first MaxSize characters of String."
|   |   `-TextComment 0x55887c377960 <line:664:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3779b0 <col:3, col:79> Name="return"
|     `-ParagraphComment 0x55887c377a10 <col:10, col:79>
|       `-TextComment 0x55887c3779e0 <col:10, col:79> Text=" The number of characters that percede the terminating null character."
|-FunctionDecl 0x55887c11e458 <line:693:1, line:698:3> line:695:1 AsciiStrnSizeS 'UINTN (const CHAR8 *, UINTN)'
| |-ParmVarDecl 0x55887c11e348 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:696:20> col:20 String 'const CHAR8 *'
| |-ParmVarDecl 0x55887c11e3c0 <line:697:6, col:19> col:19 MaxSize 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3780d0 <line:675:1, line:690:26>
|   |-ParagraphComment 0x55887c377b40 <line:675:1, line:676:18>
|   | |-TextComment 0x55887c377af0 <line:675:1, col:76> Text="  Returns the size of a Null-terminated Ascii string in bytes, including the"
|   | `-TextComment 0x55887c377b10 <line:676:1, col:18> Text="  Null terminator."
|   |-ParagraphComment 0x55887c377bb0 <line:678:1, line:679:52>
|   | |-TextComment 0x55887c377b60 <line:678:1, col:78> Text="  This function returns the size of the Null-terminated Ascii string specified"
|   | `-TextComment 0x55887c377b80 <line:679:1, col:52> Text="  by String in bytes, including the Null terminator."
|   |-ParagraphComment 0x55887c377c00 <line:681:1, col:2>
|   | `-TextComment 0x55887c377bd0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c377c20 <col:3, line:682:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c377cd0 <line:681:17, line:682:2>
|   |   |-TextComment 0x55887c377c80 <line:681:17, col:63> Text="   A pointer to a Null-terminated Ascii string."
|   |   `-TextComment 0x55887c377ca0 <line:682:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c377cf0 <col:3, line:683:55> [in] implicitly Param="MaxSize" ParamIndex=1
|   | `-ParagraphComment 0x55887c377da0 <line:682:18, line:683:55>
|   |   |-TextComment 0x55887c377d50 <line:682:18, col:58> Text="  The maximum number of Destination Ascii"
|   |   `-TextComment 0x55887c377d70 <line:683:1, col:55> Text="                   char, including the Null terminator."
|   |-ParagraphComment 0x55887c377df0 <line:685:1, col:2>
|   | `-TextComment 0x55887c377dc0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c377e10 <col:3, line:686:2> Name="retval" Arg[0]="0"
|   | `-ParagraphComment 0x55887c377eb0 <line:685:12, line:686:2>
|   |   |-TextComment 0x55887c377e60 <line:685:12, col:31> Text="  If String is NULL."
|   |   `-TextComment 0x55887c377e80 <line:686:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c377ed0 <col:3, line:689:2> Name="retval" Arg[0]="(sizeof"
|   | `-ParagraphComment 0x55887c377fc0 <line:686:18, line:689:2>
|   |   |-TextComment 0x55887c377f20 <line:686:18, col:42> Text=" (CHAR8) * (MaxSize + 1))"
|   |   |-TextComment 0x55887c377f40 <line:687:1, col:78> Text="             If there is no Null terminator in the first MaxSize characters of"
|   |   |-TextComment 0x55887c377f60 <line:688:1, col:20> Text="             String."
|   |   `-TextComment 0x55887c377f80 <line:689:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c377fe0 <col:3, line:690:26> Name="return"
|     `-ParagraphComment 0x55887c378060 <line:689:10, line:690:26>
|       |-TextComment 0x55887c378010 <line:689:10, col:78> Text=" The size of the Null-terminated Ascii string in bytes, including the"
|       `-TextComment 0x55887c378030 <line:690:1, col:26> Text="          Null terminator."
|-FunctionDecl 0x55887c11e7a8 <line:723:1, line:729:3> line:725:1 AsciiStrCpyS 'RETURN_STATUS (CHAR8 *, UINTN, const CHAR8 *)'
| |-ParmVarDecl 0x55887c11e548 <line:726:7, col:21> col:21 Destination 'CHAR8 *'
| |-ParmVarDecl 0x55887c11e610 <line:727:7, col:20> col:20 DestMax 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c11e688 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:728:21> col:21 Source 'const CHAR8 *'
| `-FullComment 0x55887c3789b0 <line:701:1, line:721:69>
|   |-ParagraphComment 0x55887c378190 <line:701:1, line:702:41>
|   | |-TextComment 0x55887c378140 <line:701:1, col:78> Text="  Copies the string pointed to by Source (including the terminating null char)"
|   | `-TextComment 0x55887c378160 <line:702:1, col:41> Text="  to the array pointed to by Destination."
|   |-ParagraphComment 0x55887c3781e0 <line:704:1, col:54>
|   | `-TextComment 0x55887c3781b0 <col:1, col:54> Text="  This function is similar as strcpy_s defined in C11."
|   |-ParagraphComment 0x55887c378230 <line:706:1, col:62>
|   | `-TextComment 0x55887c378200 <col:1, col:62> Text="  If an error is returned, then the Destination is unmodified."
|   |-ParagraphComment 0x55887c378280 <line:708:1, col:2>
|   | `-TextComment 0x55887c378250 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3782a0 <col:3, line:709:2> [in] implicitly Param="Destination" ParamIndex=0
|   | `-ParagraphComment 0x55887c378350 <line:708:22, line:709:2>
|   |   |-TextComment 0x55887c378300 <line:708:22, col:79> Text="              A pointer to a Null-terminated Ascii string."
|   |   `-TextComment 0x55887c378320 <line:709:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c378370 <col:3, line:711:2> [in] implicitly Param="DestMax" ParamIndex=1
|   | `-ParagraphComment 0x55887c378450 <line:709:18, line:711:2>
|   |   |-TextComment 0x55887c3783d0 <line:709:18, col:74> Text="                  The maximum number of Destination Ascii"
|   |   |-TextComment 0x55887c3783f0 <line:710:1, col:73> Text="                                   char, including terminating null char."
|   |   `-TextComment 0x55887c378410 <line:711:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c378470 <col:3, col:79> [in] implicitly Param="Source" ParamIndex=2
|   | `-ParagraphComment 0x55887c378500 <col:17, col:79>
|   |   `-TextComment 0x55887c3784d0 <col:17, col:79> Text="                   A pointer to a Null-terminated Ascii string."
|   |-ParagraphComment 0x55887c378550 <line:713:1, col:2>
|   | `-TextComment 0x55887c378520 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c378570 <col:3, line:714:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c378610 <line:713:25, line:714:2>
|   |   |-TextComment 0x55887c3785c0 <line:713:25, col:52> Text="           String is copied."
|   |   `-TextComment 0x55887c3785e0 <line:714:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c378630 <col:3, line:715:2> Name="retval" Arg[0]="RETURN_BUFFER_TOO_SMALL"
|   | `-ParagraphComment 0x55887c3786e0 <line:714:34, line:715:2>
|   |   |-TextComment 0x55887c378690 <line:714:34, col:81> Text="  If DestMax is NOT greater than StrLen(Source)."
|   |   `-TextComment 0x55887c3786b0 <line:715:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c378700 <col:3, line:721:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c378880 <line:715:35, line:721:2>
|   |   |-TextComment 0x55887c378760 <line:715:35, col:58> Text=" If Destination is NULL."
|   |   |-TextComment 0x55887c378780 <line:716:1, col:53> Text="                                   If Source is NULL."
|   |   |-TextComment 0x55887c3787a0 <line:717:1, col:78> Text="                                   If PcdMaximumAsciiStringLength is not zero,"
|   |   |-TextComment 0x55887c3787c0 <line:718:1, col:63> Text="                                    and DestMax is greater than"
|   |   |-TextComment 0x55887c3787e0 <line:719:1, col:64> Text="                                    PcdMaximumAsciiStringLength."
|   |   |-TextComment 0x55887c378800 <line:720:1, col:51> Text="                                   If DestMax is 0."
|   |   `-TextComment 0x55887c378820 <line:721:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3788a0 <col:3, col:69> Name="retval" Arg[0]="RETURN_ACCESS_DENIED"
|     `-ParagraphComment 0x55887c378930 <col:31, col:69>
|       `-TextComment 0x55887c378900 <col:31, col:69> Text="     If Source and Destination overlap."
|-FunctionDecl 0x55887c11eb48 <line:757:1, line:764:3> line:759:1 AsciiStrnCpyS 'RETURN_STATUS (CHAR8 *, UINTN, const CHAR8 *, UINTN)'
| |-ParmVarDecl 0x55887c11e898 <line:760:7, col:21> col:21 Destination 'CHAR8 *'
| |-ParmVarDecl 0x55887c11e910 <line:761:7, col:20> col:20 DestMax 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c11e988 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:762:21> col:21 Source 'const CHAR8 *'
| |-ParmVarDecl 0x55887c11ea00 <line:763:7, col:20> col:20 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3793d0 <line:732:1, line:755:69>
|   |-ParagraphComment 0x55887c378aa0 <line:732:1, line:734:57>
|   | |-TextComment 0x55887c378a20 <line:732:1, col:75> Text="  Copies not more than Length successive char from the string pointed to by"
|   | |-TextComment 0x55887c378a40 <line:733:1, col:79> Text="  Source to the array pointed to by Destination. If no null char is copied from"
|   | `-TextComment 0x55887c378a60 <line:734:1, col:57> Text="  Source, then Destination[Length] is always set to null."
|   |-ParagraphComment 0x55887c378af0 <line:736:1, col:55>
|   | `-TextComment 0x55887c378ac0 <col:1, col:55> Text="  This function is similar as strncpy_s defined in C11."
|   |-ParagraphComment 0x55887c378b40 <line:738:1, col:62>
|   | `-TextComment 0x55887c378b10 <col:1, col:62> Text="  If an error is returned, then the Destination is unmodified."
|   |-ParagraphComment 0x55887c378b90 <line:740:1, col:2>
|   | `-TextComment 0x55887c378b60 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c378bb0 <col:3, line:741:2> [in] implicitly Param="Destination" ParamIndex=0
|   | `-ParagraphComment 0x55887c378c60 <line:740:22, line:741:2>
|   |   |-TextComment 0x55887c378c10 <line:740:22, col:79> Text="              A pointer to a Null-terminated Ascii string."
|   |   `-TextComment 0x55887c378c30 <line:741:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c378c80 <col:3, line:743:2> [in] implicitly Param="DestMax" ParamIndex=1
|   | `-ParagraphComment 0x55887c378d60 <line:741:18, line:743:2>
|   |   |-TextComment 0x55887c378ce0 <line:741:18, col:74> Text="                  The maximum number of Destination Ascii"
|   |   |-TextComment 0x55887c378d00 <line:742:1, col:73> Text="                                   char, including terminating null char."
|   |   `-TextComment 0x55887c378d20 <line:743:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c378d80 <col:3, line:744:2> [in] implicitly Param="Source" ParamIndex=2
|   | `-ParagraphComment 0x55887c378e30 <line:743:17, line:744:2>
|   |   |-TextComment 0x55887c378de0 <line:743:17, col:79> Text="                   A pointer to a Null-terminated Ascii string."
|   |   `-TextComment 0x55887c378e00 <line:744:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c378e50 <col:3, col:82> [in] implicitly Param="Length" ParamIndex=3
|   | `-ParagraphComment 0x55887c378ee0 <col:17, col:82>
|   |   `-TextComment 0x55887c378eb0 <col:17, col:82> Text="                   The maximum number of Ascii characters to copy."
|   |-ParagraphComment 0x55887c378f30 <line:746:1, col:2>
|   | `-TextComment 0x55887c378f00 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c378f50 <col:3, line:747:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c378ff0 <line:746:25, line:747:2>
|   |   |-TextComment 0x55887c378fa0 <line:746:25, col:52> Text="           String is copied."
|   |   `-TextComment 0x55887c378fc0 <line:747:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c379010 <col:3, line:749:2> Name="retval" Arg[0]="RETURN_BUFFER_TOO_SMALL"
|   | `-ParagraphComment 0x55887c3790f0 <line:747:34, line:749:2>
|   |   |-TextComment 0x55887c379070 <line:747:34, col:65> Text="  If DestMax is NOT greater than"
|   |   |-TextComment 0x55887c379090 <line:748:1, col:63> Text="                                   MIN(StrLen(Source), Length)."
|   |   `-TextComment 0x55887c3790b0 <line:749:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c379110 <col:3, line:755:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c379290 <line:749:35, line:755:2>
|   |   |-TextComment 0x55887c379170 <line:749:35, col:58> Text=" If Destination is NULL."
|   |   |-TextComment 0x55887c379190 <line:750:1, col:53> Text="                                   If Source is NULL."
|   |   |-TextComment 0x55887c3791b0 <line:751:1, col:78> Text="                                   If PcdMaximumAsciiStringLength is not zero,"
|   |   |-TextComment 0x55887c3791d0 <line:752:1, col:63> Text="                                    and DestMax is greater than"
|   |   |-TextComment 0x55887c3791f0 <line:753:1, col:64> Text="                                    PcdMaximumAsciiStringLength."
|   |   |-TextComment 0x55887c379210 <line:754:1, col:51> Text="                                   If DestMax is 0."
|   |   `-TextComment 0x55887c379230 <line:755:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3792b0 <col:3, col:69> Name="retval" Arg[0]="RETURN_ACCESS_DENIED"
|     `-ParagraphComment 0x55887c379340 <col:31, col:69>
|       `-TextComment 0x55887c379310 <col:31, col:69> Text="     If Source and Destination overlap."
|-FunctionDecl 0x55887c11edd8 <line:792:1, line:798:3> line:794:1 AsciiStrCatS 'RETURN_STATUS (CHAR8 *, UINTN, const CHAR8 *)'
| |-ParmVarDecl 0x55887c11ec48 <line:795:10, col:24> col:24 Destination 'CHAR8 *'
| |-ParmVarDecl 0x55887c11ecc0 <line:796:10, col:23> col:23 DestMax 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c11ed38 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:797:24> col:24 Source 'const CHAR8 *'
| `-FullComment 0x55887c3815c0 <line:767:1, line:790:69>
|   |-ParagraphComment 0x55887c379490 <line:767:1, line:768:64>
|   | |-TextComment 0x55887c379440 <line:767:1, col:78> Text="  Appends a copy of the string pointed to by Source (including the terminating"
|   | `-TextComment 0x55887c379460 <line:768:1, col:64> Text="  null char) to the end of the string pointed to by Destination."
|   |-ParagraphComment 0x55887c3794e0 <line:770:1, col:54>
|   | `-TextComment 0x55887c3794b0 <col:1, col:54> Text="  This function is similar as strcat_s defined in C11."
|   |-ParagraphComment 0x55887c379530 <line:772:1, col:62>
|   | `-TextComment 0x55887c379500 <col:1, col:62> Text="  If an error is returned, then the Destination is unmodified."
|   |-ParagraphComment 0x55887c379580 <line:774:1, col:2>
|   | `-TextComment 0x55887c379550 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3795a0 <col:3, line:775:2> [in] implicitly Param="Destination" ParamIndex=0
|   | `-ParagraphComment 0x55887c379650 <line:774:22, line:775:2>
|   |   |-TextComment 0x55887c379600 <line:774:22, col:79> Text="              A pointer to a Null-terminated Ascii string."
|   |   `-TextComment 0x55887c379620 <line:775:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c379670 <col:3, line:777:2> [in] implicitly Param="DestMax" ParamIndex=1
|   | `-ParagraphComment 0x55887c380f20 <line:775:18, line:777:2>
|   |   |-TextComment 0x55887c3796d0 <line:775:18, col:74> Text="                  The maximum number of Destination Ascii"
|   |   |-TextComment 0x55887c3796f0 <line:776:1, col:73> Text="                                   char, including terminating null char."
|   |   `-TextComment 0x55887c379710 <line:777:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c380f40 <col:3, col:79> [in] implicitly Param="Source" ParamIndex=2
|   | `-ParagraphComment 0x55887c380fd0 <col:17, col:79>
|   |   `-TextComment 0x55887c380fa0 <col:17, col:79> Text="                   A pointer to a Null-terminated Ascii string."
|   |-ParagraphComment 0x55887c381020 <line:779:1, col:2>
|   | `-TextComment 0x55887c380ff0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c381040 <col:3, line:780:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c3810e0 <line:779:25, line:780:2>
|   |   |-TextComment 0x55887c381090 <line:779:25, col:54> Text="           String is appended."
|   |   `-TextComment 0x55887c3810b0 <line:780:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c381100 <col:3, line:782:2> Name="retval" Arg[0]="RETURN_BAD_BUFFER_SIZE"
|   | `-ParagraphComment 0x55887c3811e0 <line:780:33, line:782:2>
|   |   |-TextComment 0x55887c381160 <line:780:33, col:65> Text="   If DestMax is NOT greater than"
|   |   |-TextComment 0x55887c381180 <line:781:1, col:55> Text="                                   StrLen(Destination)."
|   |   `-TextComment 0x55887c3811a0 <line:782:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c381200 <col:3, line:784:2> Name="retval" Arg[0]="RETURN_BUFFER_TOO_SMALL"
|   | `-ParagraphComment 0x55887c3812e0 <line:782:34, line:784:2>
|   |   |-TextComment 0x55887c381260 <line:782:34, col:76> Text="  If (DestMax - StrLen(Destination)) is NOT"
|   |   |-TextComment 0x55887c381280 <line:783:1, col:63> Text="                                   greater than StrLen(Source)."
|   |   `-TextComment 0x55887c3812a0 <line:784:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c381300 <col:3, line:790:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c381480 <line:784:35, line:790:2>
|   |   |-TextComment 0x55887c381360 <line:784:35, col:58> Text=" If Destination is NULL."
|   |   |-TextComment 0x55887c381380 <line:785:1, col:53> Text="                                   If Source is NULL."
|   |   |-TextComment 0x55887c3813a0 <line:786:1, col:78> Text="                                   If PcdMaximumAsciiStringLength is not zero,"
|   |   |-TextComment 0x55887c3813c0 <line:787:1, col:63> Text="                                    and DestMax is greater than"
|   |   |-TextComment 0x55887c3813e0 <line:788:1, col:64> Text="                                    PcdMaximumAsciiStringLength."
|   |   |-TextComment 0x55887c381400 <line:789:1, col:51> Text="                                   If DestMax is 0."
|   |   `-TextComment 0x55887c381420 <line:790:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3814a0 <col:3, col:69> Name="retval" Arg[0]="RETURN_ACCESS_DENIED"
|     `-ParagraphComment 0x55887c381530 <col:31, col:69>
|       `-TextComment 0x55887c381500 <col:31, col:69> Text="     If Source and Destination overlap."
|-FunctionDecl 0x55887c11f0d8 <line:829:1, line:836:3> line:831:1 AsciiStrnCatS 'RETURN_STATUS (CHAR8 *, UINTN, const CHAR8 *, UINTN)'
| |-ParmVarDecl 0x55887c11eec8 <line:832:10, col:24> col:24 Destination 'CHAR8 *'
| |-ParmVarDecl 0x55887c11ef40 <line:833:10, col:23> col:23 DestMax 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c11efb8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:834:24> col:24 Source 'const CHAR8 *'
| |-ParmVarDecl 0x55887c11f030 <line:835:10, col:23> col:23 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c382100 <line:801:1, line:827:69>
|   |-ParagraphComment 0x55887c3816d0 <line:801:1, line:804:14>
|   | |-TextComment 0x55887c381630 <line:801:1, col:76> Text="  Appends not more than Length successive char from the string pointed to by"
|   | |-TextComment 0x55887c381650 <line:802:1, col:79> Text="  Source to the end of the string pointed to by Destination. If no null char is"
|   | |-TextComment 0x55887c381670 <line:803:1, col:78> Text="  copied from Source, then Destination[StrLen(Destination) + Length] is always"
|   | `-TextComment 0x55887c381690 <line:804:1, col:14> Text="  set to null."
|   |-ParagraphComment 0x55887c381720 <line:806:1, col:55>
|   | `-TextComment 0x55887c3816f0 <col:1, col:55> Text="  This function is similar as strncat_s defined in C11."
|   |-ParagraphComment 0x55887c381770 <line:808:1, col:62>
|   | `-TextComment 0x55887c381740 <col:1, col:62> Text="  If an error is returned, then the Destination is unmodified."
|   |-ParagraphComment 0x55887c3817c0 <line:810:1, col:2>
|   | `-TextComment 0x55887c381790 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3817e0 <col:3, line:811:2> [in] implicitly Param="Destination" ParamIndex=0
|   | `-ParagraphComment 0x55887c381890 <line:810:22, line:811:2>
|   |   |-TextComment 0x55887c381840 <line:810:22, col:79> Text="              A pointer to a Null-terminated Ascii string."
|   |   `-TextComment 0x55887c381860 <line:811:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3818b0 <col:3, line:813:2> [in] implicitly Param="DestMax" ParamIndex=1
|   | `-ParagraphComment 0x55887c381990 <line:811:18, line:813:2>
|   |   |-TextComment 0x55887c381910 <line:811:18, col:74> Text="                  The maximum number of Destination Ascii"
|   |   |-TextComment 0x55887c381930 <line:812:1, col:73> Text="                                   char, including terminating null char."
|   |   `-TextComment 0x55887c381950 <line:813:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3819b0 <col:3, line:814:2> [in] implicitly Param="Source" ParamIndex=2
|   | `-ParagraphComment 0x55887c381a60 <line:813:17, line:814:2>
|   |   |-TextComment 0x55887c381a10 <line:813:17, col:79> Text="                   A pointer to a Null-terminated Ascii string."
|   |   `-TextComment 0x55887c381a30 <line:814:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c381a80 <col:3, col:82> [in] implicitly Param="Length" ParamIndex=3
|   | `-ParagraphComment 0x55887c381b10 <col:17, col:82>
|   |   `-TextComment 0x55887c381ae0 <col:17, col:82> Text="                   The maximum number of Ascii characters to copy."
|   |-ParagraphComment 0x55887c381b60 <line:816:1, col:2>
|   | `-TextComment 0x55887c381b30 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c381b80 <col:3, line:817:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c381c20 <line:816:25, line:817:2>
|   |   |-TextComment 0x55887c381bd0 <line:816:25, col:54> Text="           String is appended."
|   |   `-TextComment 0x55887c381bf0 <line:817:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c381c40 <col:3, line:819:2> Name="retval" Arg[0]="RETURN_BAD_BUFFER_SIZE"
|   | `-ParagraphComment 0x55887c381d20 <line:817:33, line:819:2>
|   |   |-TextComment 0x55887c381ca0 <line:817:33, col:65> Text="   If DestMax is NOT greater than"
|   |   |-TextComment 0x55887c381cc0 <line:818:1, col:55> Text="                                   StrLen(Destination)."
|   |   `-TextComment 0x55887c381ce0 <line:819:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c381d40 <col:3, line:821:2> Name="retval" Arg[0]="RETURN_BUFFER_TOO_SMALL"
|   | `-ParagraphComment 0x55887c381e20 <line:819:34, line:821:2>
|   |   |-TextComment 0x55887c381da0 <line:819:34, col:76> Text="  If (DestMax - StrLen(Destination)) is NOT"
|   |   |-TextComment 0x55887c381dc0 <line:820:1, col:76> Text="                                   greater than MIN(StrLen(Source), Length)."
|   |   `-TextComment 0x55887c381de0 <line:821:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c381e40 <col:3, line:827:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c381fc0 <line:821:35, line:827:2>
|   |   |-TextComment 0x55887c381ea0 <line:821:35, col:58> Text=" If Destination is NULL."
|   |   |-TextComment 0x55887c381ec0 <line:822:1, col:53> Text="                                   If Source is NULL."
|   |   |-TextComment 0x55887c381ee0 <line:823:1, col:78> Text="                                   If PcdMaximumAsciiStringLength is not zero,"
|   |   |-TextComment 0x55887c381f00 <line:824:1, col:63> Text="                                    and DestMax is greater than"
|   |   |-TextComment 0x55887c381f20 <line:825:1, col:64> Text="                                    PcdMaximumAsciiStringLength."
|   |   |-TextComment 0x55887c381f40 <line:826:1, col:51> Text="                                   If DestMax is 0."
|   |   `-TextComment 0x55887c381f60 <line:827:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c381fe0 <col:3, col:69> Name="retval" Arg[0]="RETURN_ACCESS_DENIED"
|     `-ParagraphComment 0x55887c382070 <col:31, col:69>
|       `-TextComment 0x55887c382040 <col:31, col:69> Text="     If Source and Destination overlap."
|-FunctionDecl 0x55887c11f448 <line:879:1, line:885:3> line:881:1 AsciiStrDecimalToUintnS 'RETURN_STATUS (const CHAR8 *, CHAR8 **, UINTN *)'
| |-ParmVarDecl 0x55887c11f1d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:882:21> col:21 String 'const CHAR8 *'
| |-ParmVarDecl 0x55887c11f2b0 <line:883:13, col:22> col:22 EndPointer 'CHAR8 **'
| |-ParmVarDecl 0x55887c11f328 <line:884:13, col:21> col:21 Data 'UINTN *'
| `-FullComment 0x55887c382bd0 <line:839:1, line:876:62>
|   |-ParagraphComment 0x55887c3821a0 <line:839:1, col:74>
|   | `-TextComment 0x55887c382170 <col:1, col:74> Text="  Convert a Null-terminated Ascii decimal string to a value of type UINTN."
|   |-ParagraphComment 0x55887c382240 <line:841:1, line:843:31>
|   | |-TextComment 0x55887c3821c0 <line:841:1, col:77> Text="  This function outputs a value of type UINTN by interpreting the contents of"
|   | |-TextComment 0x55887c3821e0 <line:842:1, col:77> Text="  the Ascii string specified by String as a decimal number. The format of the"
|   | `-TextComment 0x55887c382200 <line:843:1, col:31> Text="  input Ascii string String is:"
|   |-ParagraphComment 0x55887c382290 <line:845:1, col:44>
|   | `-TextComment 0x55887c382260 <col:1, col:44> Text="                  [spaces] [decimal digits]."
|   |-ParagraphComment 0x55887c382380 <line:847:1, line:851:74>
|   | |-TextComment 0x55887c3822b0 <line:847:1, col:76> Text="  The valid decimal digit character is in the range [0-9]. The function will"
|   | |-TextComment 0x55887c3822d0 <line:848:1, col:71> Text="  ignore the pad space, which includes spaces or tab characters, before"
|   | |-TextComment 0x55887c3822f0 <line:849:1, col:78> Text="  [decimal digits]. The running zero in the beginning of [decimal digits] will"
|   | |-TextComment 0x55887c382310 <line:850:1, col:77> Text="  be ignored. Then, the function stops at the first character that is a not a"
|   | `-TextComment 0x55887c382330 <line:851:1, col:74> Text="  valid decimal character or a Null-terminator, whichever one comes first."
|   |-ParagraphComment 0x55887c382440 <line:853:1, line:856:57>
|   | |-TextComment 0x55887c3823a0 <line:853:1, col:77> Text="  If String has no valid decimal digits in the above format, then 0 is stored"
|   | |-TextComment 0x55887c3823c0 <line:854:1, col:37> Text="  at the location pointed to by Data."
|   | |-TextComment 0x55887c3823e0 <line:855:1, col:78> Text="  If the number represented by String exceeds the range defined by UINTN, then"
|   | `-TextComment 0x55887c382400 <line:856:1, col:57> Text="  MAX_UINTN is stored at the location pointed to by Data."
|   |-ParagraphComment 0x55887c382500 <line:858:1, line:861:50>
|   | |-TextComment 0x55887c382460 <line:858:1, col:77> Text="  If EndPointer is not NULL, a pointer to the character that stopped the scan"
|   | |-TextComment 0x55887c382480 <line:859:1, col:76> Text="  is stored at the location pointed to by EndPointer. If String has no valid"
|   | |-TextComment 0x55887c3824a0 <line:860:1, col:76> Text="  decimal digits right after the optional pad spaces, the value of String is"
|   | `-TextComment 0x55887c3824c0 <line:861:1, col:50> Text="  stored at the location pointed to by EndPointer."
|   |-ParagraphComment 0x55887c382550 <line:863:1, col:2>
|   | `-TextComment 0x55887c382520 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c382570 <col:3, line:864:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c382620 <line:863:17, line:864:2>
|   |   |-TextComment 0x55887c3825d0 <line:863:17, col:77> Text="                   Pointer to a Null-terminated Ascii string."
|   |   `-TextComment 0x55887c3825f0 <line:864:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c382640 <col:3, line:865:2> [in] implicitly Param="EndPointer" ParamIndex=1
|   | `-ParagraphComment 0x55887c3826f0 <line:864:21, line:865:2>
|   |   |-TextComment 0x55887c3826a0 <line:864:21, col:72> Text="               Pointer to character that stops scan."
|   |   `-TextComment 0x55887c3826c0 <line:865:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c382710 <col:3, col:66> [in] implicitly Param="Data" ParamIndex=2
|   | `-ParagraphComment 0x55887c3827a0 <col:15, col:66>
|   |   `-TextComment 0x55887c382770 <col:15, col:66> Text="                     Pointer to the converted value."
|   |-ParagraphComment 0x55887c3827f0 <line:867:1, col:2>
|   | `-TextComment 0x55887c3827c0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c382810 <col:3, line:868:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c3828b0 <line:867:25, line:868:2>
|   |   |-TextComment 0x55887c382860 <line:867:25, col:67> Text="           Value is translated from String."
|   |   `-TextComment 0x55887c382880 <line:868:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3828d0 <col:3, line:875:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c382a70 <line:868:35, line:875:2>
|   |   |-TextComment 0x55887c382930 <line:868:35, col:53> Text=" If String is NULL."
|   |   |-TextComment 0x55887c382950 <line:869:1, col:51> Text="                                   If Data is NULL."
|   |   |-TextComment 0x55887c382970 <line:870:1, col:78> Text="                                   If PcdMaximumAsciiStringLength is not zero,"
|   |   |-TextComment 0x55887c382990 <line:871:1, col:64> Text="                                   and String contains more than"
|   |   |-TextComment 0x55887c3829b0 <line:872:1, col:68> Text="                                   PcdMaximumAsciiStringLength Ascii"
|   |   |-TextComment 0x55887c3829d0 <line:873:1, col:64> Text="                                   characters, not including the"
|   |   |-TextComment 0x55887c3829f0 <line:874:1, col:51> Text="                                   Null-terminator."
|   |   `-TextComment 0x55887c382a10 <line:875:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c382a90 <col:3, line:876:62> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|     `-ParagraphComment 0x55887c382b40 <line:875:29, line:876:62>
|       |-TextComment 0x55887c382af0 <line:875:29, col:78> Text="       If the number represented by String exceeds"
|       `-TextComment 0x55887c382b10 <line:876:1, col:62> Text="                                   the range defined by UINTN."
|-FunctionDecl 0x55887c11f778 <line:928:1, line:934:3> line:930:1 AsciiStrDecimalToUint64S 'RETURN_STATUS (const CHAR8 *, CHAR8 **, UINT64 *)'
| |-ParmVarDecl 0x55887c11f538 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:931:22> col:22 String 'const CHAR8 *'
| |-ParmVarDecl 0x55887c11f620 <line:932:13, col:23> col:23 EndPointer 'CHAR8 **'
| |-ParmVarDecl 0x55887c11f698 <line:933:13, col:22> col:22 Data 'UINT64 *'
| `-FullComment 0x55887c3836c0 <line:888:1, line:925:63>
|   |-ParagraphComment 0x55887c382c70 <line:888:1, col:75>
|   | `-TextComment 0x55887c382c40 <col:1, col:75> Text="  Convert a Null-terminated Ascii decimal string to a value of type UINT64."
|   |-ParagraphComment 0x55887c382d10 <line:890:1, line:892:31>
|   | |-TextComment 0x55887c382c90 <line:890:1, col:78> Text="  This function outputs a value of type UINT64 by interpreting the contents of"
|   | |-TextComment 0x55887c382cb0 <line:891:1, col:77> Text="  the Ascii string specified by String as a decimal number. The format of the"
|   | `-TextComment 0x55887c382cd0 <line:892:1, col:31> Text="  input Ascii string String is:"
|   |-ParagraphComment 0x55887c382d60 <line:894:1, col:44>
|   | `-TextComment 0x55887c382d30 <col:1, col:44> Text="                  [spaces] [decimal digits]."
|   |-ParagraphComment 0x55887c382e50 <line:896:1, line:900:74>
|   | |-TextComment 0x55887c382d80 <line:896:1, col:76> Text="  The valid decimal digit character is in the range [0-9]. The function will"
|   | |-TextComment 0x55887c382da0 <line:897:1, col:71> Text="  ignore the pad space, which includes spaces or tab characters, before"
|   | |-TextComment 0x55887c382dc0 <line:898:1, col:78> Text="  [decimal digits]. The running zero in the beginning of [decimal digits] will"
|   | |-TextComment 0x55887c382de0 <line:899:1, col:77> Text="  be ignored. Then, the function stops at the first character that is a not a"
|   | `-TextComment 0x55887c382e00 <line:900:1, col:74> Text="  valid decimal character or a Null-terminator, whichever one comes first."
|   |-ParagraphComment 0x55887c382f30 <line:902:1, line:905:58>
|   | |-TextComment 0x55887c382e70 <line:902:1, col:77> Text="  If String has no valid decimal digits in the above format, then 0 is stored"
|   | |-TextComment 0x55887c382e90 <line:903:1, col:37> Text="  at the location pointed to by Data."
|   | |-TextComment 0x55887c382eb0 <line:904:1, col:79> Text="  If the number represented by String exceeds the range defined by UINT64, then"
|   | `-TextComment 0x55887c382ed0 <line:905:1, col:58> Text="  MAX_UINT64 is stored at the location pointed to by Data."
|   |-ParagraphComment 0x55887c382ff0 <line:907:1, line:910:50>
|   | |-TextComment 0x55887c382f50 <line:907:1, col:77> Text="  If EndPointer is not NULL, a pointer to the character that stopped the scan"
|   | |-TextComment 0x55887c382f70 <line:908:1, col:76> Text="  is stored at the location pointed to by EndPointer. If String has no valid"
|   | |-TextComment 0x55887c382f90 <line:909:1, col:76> Text="  decimal digits right after the optional pad spaces, the value of String is"
|   | `-TextComment 0x55887c382fb0 <line:910:1, col:50> Text="  stored at the location pointed to by EndPointer."
|   |-ParagraphComment 0x55887c383040 <line:912:1, col:2>
|   | `-TextComment 0x55887c383010 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c383060 <col:3, line:913:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c383110 <line:912:17, line:913:2>
|   |   |-TextComment 0x55887c3830c0 <line:912:17, col:77> Text="                   Pointer to a Null-terminated Ascii string."
|   |   `-TextComment 0x55887c3830e0 <line:913:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c383130 <col:3, line:914:2> [in] implicitly Param="EndPointer" ParamIndex=1
|   | `-ParagraphComment 0x55887c3831e0 <line:913:21, line:914:2>
|   |   |-TextComment 0x55887c383190 <line:913:21, col:72> Text="               Pointer to character that stops scan."
|   |   `-TextComment 0x55887c3831b0 <line:914:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c383200 <col:3, col:66> [in] implicitly Param="Data" ParamIndex=2
|   | `-ParagraphComment 0x55887c383290 <col:15, col:66>
|   |   `-TextComment 0x55887c383260 <col:15, col:66> Text="                     Pointer to the converted value."
|   |-ParagraphComment 0x55887c3832e0 <line:916:1, col:2>
|   | `-TextComment 0x55887c3832b0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c383300 <col:3, line:917:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c3833a0 <line:916:25, line:917:2>
|   |   |-TextComment 0x55887c383350 <line:916:25, col:67> Text="           Value is translated from String."
|   |   `-TextComment 0x55887c383370 <line:917:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3833c0 <col:3, line:924:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c383560 <line:917:35, line:924:2>
|   |   |-TextComment 0x55887c383420 <line:917:35, col:53> Text=" If String is NULL."
|   |   |-TextComment 0x55887c383440 <line:918:1, col:51> Text="                                   If Data is NULL."
|   |   |-TextComment 0x55887c383460 <line:919:1, col:78> Text="                                   If PcdMaximumAsciiStringLength is not zero,"
|   |   |-TextComment 0x55887c383480 <line:920:1, col:64> Text="                                   and String contains more than"
|   |   |-TextComment 0x55887c3834a0 <line:921:1, col:68> Text="                                   PcdMaximumAsciiStringLength Ascii"
|   |   |-TextComment 0x55887c3834c0 <line:922:1, col:64> Text="                                   characters, not including the"
|   |   |-TextComment 0x55887c3834e0 <line:923:1, col:51> Text="                                   Null-terminator."
|   |   `-TextComment 0x55887c383500 <line:924:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c383580 <col:3, line:925:63> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|     `-ParagraphComment 0x55887c383630 <line:924:29, line:925:63>
|       |-TextComment 0x55887c3835e0 <line:924:29, col:78> Text="       If the number represented by String exceeds"
|       `-TextComment 0x55887c383600 <line:925:1, col:63> Text="                                   the range defined by UINT64."
|-FunctionDecl 0x55887c11fa00 <line:981:1, line:987:3> line:983:1 AsciiStrHexToUintnS 'RETURN_STATUS (const CHAR8 *, CHAR8 **, UINTN *)'
| |-ParmVarDecl 0x55887c11f868 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:984:21> col:21 String 'const CHAR8 *'
| |-ParmVarDecl 0x55887c11f8e8 <line:985:13, col:22> col:22 EndPointer 'CHAR8 **'
| |-ParmVarDecl 0x55887c11f960 <line:986:13, col:21> col:21 Data 'UINTN *'
| `-FullComment 0x55887c384230 <line:937:1, line:978:62>
|   |-ParagraphComment 0x55887c383760 <line:937:1, col:78>
|   | `-TextComment 0x55887c383730 <col:1, col:78> Text="  Convert a Null-terminated Ascii hexadecimal string to a value of type UINTN."
|   |-ParagraphComment 0x55887c383800 <line:939:1, line:941:35>
|   | |-TextComment 0x55887c383780 <line:939:1, col:77> Text="  This function outputs a value of type UINTN by interpreting the contents of"
|   | |-TextComment 0x55887c3837a0 <line:940:1, col:77> Text="  the Ascii string specified by String as a hexadecimal number. The format of"
|   | `-TextComment 0x55887c3837c0 <line:941:1, col:35> Text="  the input Ascii string String is:"
|   |-ParagraphComment 0x55887c383850 <line:943:1, col:57>
|   | `-TextComment 0x55887c383820 <col:1, col:57> Text="                  [spaces][zeros][x][hexadecimal digits]."
|   |-ParagraphComment 0x55887c3839e0 <line:945:1, line:953:27>
|   | |-TextComment 0x55887c383870 <line:945:1, col:79> Text="  The valid hexadecimal digit character is in the range [0-9], [a-f] and [A-F]."
|   | |-TextComment 0x55887c383890 <line:946:1, col:77> Text="  The prefix "0x" is optional. Both "x" and "X" is allowed in "0x" prefix. If"
|   | |-TextComment 0x55887c3838b0 <line:947:1, col:79> Text="  "x" appears in the input string, it must be prefixed with at least one 0. The"
|   | |-TextComment 0x55887c3838d0 <line:948:1, col:78> Text="  function will ignore the pad space, which includes spaces or tab characters,"
|   | |-TextComment 0x55887c3838f0 <line:949:1, col:77> Text="  before [zeros], [x] or [hexadecimal digits]. The running zero before [x] or"
|   | |-TextComment 0x55887c383910 <line:950:1, col:78> Text="  [hexadecimal digits] will be ignored. Then, the decoding starts after [x] or"
|   | |-TextComment 0x55887c383930 <line:951:1, col:74> Text="  the first valid hexadecimal digit. Then, the function stops at the first"
|   | |-TextComment 0x55887c383950 <line:952:1, col:75> Text="  character that is a not a valid hexadecimal character or Null-terminator,"
|   | `-TextComment 0x55887c383970 <line:953:1, col:27> Text="  whichever on comes first."
|   |-ParagraphComment 0x55887c383aa0 <line:955:1, line:958:57>
|   | |-TextComment 0x55887c383a00 <line:955:1, col:74> Text="  If String has no valid hexadecimal digits in the above format, then 0 is"
|   | |-TextComment 0x55887c383a20 <line:956:1, col:44> Text="  stored at the location pointed to by Data."
|   | |-TextComment 0x55887c383a40 <line:957:1, col:78> Text="  If the number represented by String exceeds the range defined by UINTN, then"
|   | `-TextComment 0x55887c383a60 <line:958:1, col:57> Text="  MAX_UINTN is stored at the location pointed to by Data."
|   |-ParagraphComment 0x55887c383b60 <line:960:1, line:963:53>
|   | |-TextComment 0x55887c383ac0 <line:960:1, col:77> Text="  If EndPointer is not NULL, a pointer to the character that stopped the scan"
|   | |-TextComment 0x55887c383ae0 <line:961:1, col:76> Text="  is stored at the location pointed to by EndPointer. If String has no valid"
|   | |-TextComment 0x55887c383b00 <line:962:1, col:77> Text="  hexadecimal digits right after the optional pad spaces, the value of String"
|   | `-TextComment 0x55887c383b20 <line:963:1, col:53> Text="  is stored at the location pointed to by EndPointer."
|   |-ParagraphComment 0x55887c383bb0 <line:965:1, col:2>
|   | `-TextComment 0x55887c383b80 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c383bd0 <col:3, line:966:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c383c80 <line:965:17, line:966:2>
|   |   |-TextComment 0x55887c383c30 <line:965:17, col:77> Text="                   Pointer to a Null-terminated Ascii string."
|   |   `-TextComment 0x55887c383c50 <line:966:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c383ca0 <col:3, line:967:2> [in] implicitly Param="EndPointer" ParamIndex=1
|   | `-ParagraphComment 0x55887c383d50 <line:966:21, line:967:2>
|   |   |-TextComment 0x55887c383d00 <line:966:21, col:72> Text="               Pointer to character that stops scan."
|   |   `-TextComment 0x55887c383d20 <line:967:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c383d70 <col:3, col:66> [in] implicitly Param="Data" ParamIndex=2
|   | `-ParagraphComment 0x55887c383e00 <col:15, col:66>
|   |   `-TextComment 0x55887c383dd0 <col:15, col:66> Text="                     Pointer to the converted value."
|   |-ParagraphComment 0x55887c383e50 <line:969:1, col:2>
|   | `-TextComment 0x55887c383e20 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c383e70 <col:3, line:970:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c383f10 <line:969:25, line:970:2>
|   |   |-TextComment 0x55887c383ec0 <line:969:25, col:67> Text="           Value is translated from String."
|   |   `-TextComment 0x55887c383ee0 <line:970:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c383f30 <col:3, line:977:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c3840d0 <line:970:35, line:977:2>
|   |   |-TextComment 0x55887c383f90 <line:970:35, col:53> Text=" If String is NULL."
|   |   |-TextComment 0x55887c383fb0 <line:971:1, col:51> Text="                                   If Data is NULL."
|   |   |-TextComment 0x55887c383fd0 <line:972:1, col:78> Text="                                   If PcdMaximumAsciiStringLength is not zero,"
|   |   |-TextComment 0x55887c383ff0 <line:973:1, col:64> Text="                                   and String contains more than"
|   |   |-TextComment 0x55887c384010 <line:974:1, col:68> Text="                                   PcdMaximumAsciiStringLength Ascii"
|   |   |-TextComment 0x55887c384030 <line:975:1, col:64> Text="                                   characters, not including the"
|   |   |-TextComment 0x55887c384050 <line:976:1, col:51> Text="                                   Null-terminator."
|   |   `-TextComment 0x55887c384070 <line:977:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3840f0 <col:3, line:978:62> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|     `-ParagraphComment 0x55887c3841a0 <line:977:29, line:978:62>
|       |-TextComment 0x55887c384150 <line:977:29, col:78> Text="       If the number represented by String exceeds"
|       `-TextComment 0x55887c384170 <line:978:1, col:62> Text="                                   the range defined by UINTN."
|-FunctionDecl 0x55887c11fc90 <line:1034:1, line:1040:3> line:1036:1 AsciiStrHexToUint64S 'RETURN_STATUS (const CHAR8 *, CHAR8 **, UINT64 *)'
| |-ParmVarDecl 0x55887c11faf8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1037:22> col:22 String 'const CHAR8 *'
| |-ParmVarDecl 0x55887c11fb78 <line:1038:13, col:23> col:23 EndPointer 'CHAR8 **'
| |-ParmVarDecl 0x55887c11fbf0 <line:1039:13, col:22> col:22 Data 'UINT64 *'
| `-FullComment 0x55887c384da0 <line:990:1, line:1031:63>
|   |-ParagraphComment 0x55887c3842d0 <line:990:1, col:79>
|   | `-TextComment 0x55887c3842a0 <col:1, col:79> Text="  Convert a Null-terminated Ascii hexadecimal string to a value of type UINT64."
|   |-ParagraphComment 0x55887c384370 <line:992:1, line:994:35>
|   | |-TextComment 0x55887c3842f0 <line:992:1, col:78> Text="  This function outputs a value of type UINT64 by interpreting the contents of"
|   | |-TextComment 0x55887c384310 <line:993:1, col:77> Text="  the Ascii string specified by String as a hexadecimal number. The format of"
|   | `-TextComment 0x55887c384330 <line:994:1, col:35> Text="  the input Ascii string String is:"
|   |-ParagraphComment 0x55887c3843c0 <line:996:1, col:57>
|   | `-TextComment 0x55887c384390 <col:1, col:57> Text="                  [spaces][zeros][x][hexadecimal digits]."
|   |-ParagraphComment 0x55887c384550 <line:998:1, line:1006:27>
|   | |-TextComment 0x55887c3843e0 <line:998:1, col:79> Text="  The valid hexadecimal digit character is in the range [0-9], [a-f] and [A-F]."
|   | |-TextComment 0x55887c384400 <line:999:1, col:77> Text="  The prefix "0x" is optional. Both "x" and "X" is allowed in "0x" prefix. If"
|   | |-TextComment 0x55887c384420 <line:1000:1, col:79> Text="  "x" appears in the input string, it must be prefixed with at least one 0. The"
|   | |-TextComment 0x55887c384440 <line:1001:1, col:78> Text="  function will ignore the pad space, which includes spaces or tab characters,"
|   | |-TextComment 0x55887c384460 <line:1002:1, col:77> Text="  before [zeros], [x] or [hexadecimal digits]. The running zero before [x] or"
|   | |-TextComment 0x55887c384480 <line:1003:1, col:78> Text="  [hexadecimal digits] will be ignored. Then, the decoding starts after [x] or"
|   | |-TextComment 0x55887c3844a0 <line:1004:1, col:74> Text="  the first valid hexadecimal digit. Then, the function stops at the first"
|   | |-TextComment 0x55887c3844c0 <line:1005:1, col:75> Text="  character that is a not a valid hexadecimal character or Null-terminator,"
|   | `-TextComment 0x55887c3844e0 <line:1006:1, col:27> Text="  whichever on comes first."
|   |-ParagraphComment 0x55887c384610 <line:1008:1, line:1011:58>
|   | |-TextComment 0x55887c384570 <line:1008:1, col:74> Text="  If String has no valid hexadecimal digits in the above format, then 0 is"
|   | |-TextComment 0x55887c384590 <line:1009:1, col:44> Text="  stored at the location pointed to by Data."
|   | |-TextComment 0x55887c3845b0 <line:1010:1, col:79> Text="  If the number represented by String exceeds the range defined by UINT64, then"
|   | `-TextComment 0x55887c3845d0 <line:1011:1, col:58> Text="  MAX_UINT64 is stored at the location pointed to by Data."
|   |-ParagraphComment 0x55887c3846d0 <line:1013:1, line:1016:53>
|   | |-TextComment 0x55887c384630 <line:1013:1, col:77> Text="  If EndPointer is not NULL, a pointer to the character that stopped the scan"
|   | |-TextComment 0x55887c384650 <line:1014:1, col:76> Text="  is stored at the location pointed to by EndPointer. If String has no valid"
|   | |-TextComment 0x55887c384670 <line:1015:1, col:77> Text="  hexadecimal digits right after the optional pad spaces, the value of String"
|   | `-TextComment 0x55887c384690 <line:1016:1, col:53> Text="  is stored at the location pointed to by EndPointer."
|   |-ParagraphComment 0x55887c384720 <line:1018:1, col:2>
|   | `-TextComment 0x55887c3846f0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c384740 <col:3, line:1019:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c3847f0 <line:1018:17, line:1019:2>
|   |   |-TextComment 0x55887c3847a0 <line:1018:17, col:77> Text="                   Pointer to a Null-terminated Ascii string."
|   |   `-TextComment 0x55887c3847c0 <line:1019:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c384810 <col:3, line:1020:2> [in] implicitly Param="EndPointer" ParamIndex=1
|   | `-ParagraphComment 0x55887c3848c0 <line:1019:21, line:1020:2>
|   |   |-TextComment 0x55887c384870 <line:1019:21, col:72> Text="               Pointer to character that stops scan."
|   |   `-TextComment 0x55887c384890 <line:1020:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3848e0 <col:3, col:66> [in] implicitly Param="Data" ParamIndex=2
|   | `-ParagraphComment 0x55887c384970 <col:15, col:66>
|   |   `-TextComment 0x55887c384940 <col:15, col:66> Text="                     Pointer to the converted value."
|   |-ParagraphComment 0x55887c3849c0 <line:1022:1, col:2>
|   | `-TextComment 0x55887c384990 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3849e0 <col:3, line:1023:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c384a80 <line:1022:25, line:1023:2>
|   |   |-TextComment 0x55887c384a30 <line:1022:25, col:67> Text="           Value is translated from String."
|   |   `-TextComment 0x55887c384a50 <line:1023:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c384aa0 <col:3, line:1030:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c384c40 <line:1023:35, line:1030:2>
|   |   |-TextComment 0x55887c384b00 <line:1023:35, col:53> Text=" If String is NULL."
|   |   |-TextComment 0x55887c384b20 <line:1024:1, col:51> Text="                                   If Data is NULL."
|   |   |-TextComment 0x55887c384b40 <line:1025:1, col:78> Text="                                   If PcdMaximumAsciiStringLength is not zero,"
|   |   |-TextComment 0x55887c384b60 <line:1026:1, col:64> Text="                                   and String contains more than"
|   |   |-TextComment 0x55887c384b80 <line:1027:1, col:68> Text="                                   PcdMaximumAsciiStringLength Ascii"
|   |   |-TextComment 0x55887c384ba0 <line:1028:1, col:64> Text="                                   characters, not including the"
|   |   |-TextComment 0x55887c384bc0 <line:1029:1, col:51> Text="                                   Null-terminator."
|   |   `-TextComment 0x55887c384be0 <line:1030:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c384c60 <col:3, line:1031:63> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|     `-ParagraphComment 0x55887c384d10 <line:1030:29, line:1031:63>
|       |-TextComment 0x55887c384cc0 <line:1030:29, col:78> Text="       If the number represented by String exceeds"
|       `-TextComment 0x55887c384ce0 <line:1031:1, col:63> Text="                                   the range defined by UINT64."
|-FunctionDecl 0x55887c11fe78 <line:1059:1, line:1063:3> line:1061:1 StrLen 'UINTN (const CHAR16 *)'
| |-ParmVarDecl 0x55887c11fd88 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1062:26> col:26 String 'const CHAR16 *'
| `-FullComment 0x55887c3851e0 <line:1043:1, line:1056:31>
|   |-ParagraphComment 0x55887c384e40 <line:1043:1, col:57>
|   | `-TextComment 0x55887c384e10 <col:1, col:57> Text="  Returns the length of a Null-terminated Unicode string."
|   |-ParagraphComment 0x55887c384eb0 <line:1045:1, line:1046:37>
|   | |-TextComment 0x55887c384e60 <line:1045:1, col:79> Text="  This function returns the number of Unicode characters in the Null-terminated"
|   | `-TextComment 0x55887c384e80 <line:1046:1, col:37> Text="  Unicode string specified by String."
|   |-ParagraphComment 0x55887c384fb0 <line:1048:1, line:1052:33>
|   | |-TextComment 0x55887c384ed0 <line:1048:1, col:35> Text="  If String is NULL, then ASSERT()."
|   | |-TextComment 0x55887c384ef0 <line:1049:1, col:63> Text="  If String is not aligned on a 16-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c384f10 <line:1050:1, col:77> Text="  If PcdMaximumUnicodeStringLength is not zero, and String contains more than"
|   | |-TextComment 0x55887c384f40 <line:1051:1, col:68> Text="  PcdMaximumUnicodeStringLength Unicode characters not including the"
|   | `-TextComment 0x55887c384f60 <line:1052:1, col:33> Text="  Null-terminator, then ASSERT()."
|   |-ParagraphComment 0x55887c385000 <line:1054:1, col:2>
|   | `-TextComment 0x55887c384fd0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c385020 <col:3, col:62> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c3850b0 <col:17, col:62>
|   |   `-TextComment 0x55887c385080 <col:17, col:62> Text="  Pointer to a Null-terminated Unicode string."
|   |-ParagraphComment 0x55887c385100 <line:1056:1, col:2>
|   | `-TextComment 0x55887c3850d0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c385120 <col:3, col:31> Name="return"
|     `-ParagraphComment 0x55887c385180 <col:10, col:31>
|       `-TextComment 0x55887c385150 <col:10, col:31> Text=" The length of String."
|-FunctionDecl 0x55887c11ffe8 <line:1083:1, line:1087:3> line:1085:1 StrSize 'UINTN (const CHAR16 *)'
| |-ParmVarDecl 0x55887c11ff58 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1086:26> col:26 String 'const CHAR16 *'
| `-FullComment 0x55887c385630 <line:1066:1, line:1080:29>
|   |-ParagraphComment 0x55887c3852a0 <line:1066:1, line:1067:18>
|   | |-TextComment 0x55887c385250 <line:1066:1, col:78> Text="  Returns the size of a Null-terminated Unicode string in bytes, including the"
|   | `-TextComment 0x55887c385270 <line:1067:1, col:18> Text="  Null terminator."
|   |-ParagraphComment 0x55887c385310 <line:1069:1, line:1070:22>
|   | |-TextComment 0x55887c3852c0 <line:1069:1, col:81> Text="  This function returns the size, in bytes, of the Null-terminated Unicode string"
|   | `-TextComment 0x55887c3852e0 <line:1070:1, col:22> Text="  specified by String."
|   |-ParagraphComment 0x55887c385400 <line:1072:1, line:1076:33>
|   | |-TextComment 0x55887c385330 <line:1072:1, col:35> Text="  If String is NULL, then ASSERT()."
|   | |-TextComment 0x55887c385350 <line:1073:1, col:63> Text="  If String is not aligned on a 16-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c385370 <line:1074:1, col:77> Text="  If PcdMaximumUnicodeStringLength is not zero, and String contains more than"
|   | |-TextComment 0x55887c385390 <line:1075:1, col:68> Text="  PcdMaximumUnicodeStringLength Unicode characters not including the"
|   | `-TextComment 0x55887c3853b0 <line:1076:1, col:33> Text="  Null-terminator, then ASSERT()."
|   |-ParagraphComment 0x55887c385450 <line:1078:1, col:2>
|   | `-TextComment 0x55887c385420 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c385470 <col:3, col:66> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c385500 <col:17, col:66>
|   |   `-TextComment 0x55887c3854d0 <col:17, col:66> Text="  The pointer to a Null-terminated Unicode string."
|   |-ParagraphComment 0x55887c385550 <line:1080:1, col:2>
|   | `-TextComment 0x55887c385520 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c385570 <col:3, col:29> Name="return"
|     `-ParagraphComment 0x55887c3855d0 <col:10, col:29>
|       `-TextComment 0x55887c3855a0 <col:10, col:29> Text=" The size of String."
|-FunctionDecl 0x55887c120258 <line:1117:1, line:1122:3> line:1119:1 StrCmp 'INTN (const CHAR16 *, const CHAR16 *)'
| |-ParmVarDecl 0x55887c1200c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1120:26> col:26 FirstString 'const CHAR16 *'
| |-ParmVarDecl 0x55887c120140 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1121:26> col:26 SecondString 'const CHAR16 *'
| `-FullComment 0x55887c385d60 <line:1090:1, line:1114:62>
|   |-ParagraphComment 0x55887c3856f0 <line:1090:1, line:1091:50>
|   | |-TextComment 0x55887c3856a0 <line:1090:1, col:74> Text="  Compares two Null-terminated Unicode strings, and returns the difference"
|   | `-TextComment 0x55887c3856c0 <line:1091:1, col:50> Text="  between the first mismatched Unicode characters."
|   |-ParagraphComment 0x55887c3857e0 <line:1093:1, line:1097:46>
|   | |-TextComment 0x55887c385710 <line:1093:1, col:78> Text="  This function compares the Null-terminated Unicode string FirstString to the"
|   | |-TextComment 0x55887c385730 <line:1094:1, col:77> Text="  Null-terminated Unicode string SecondString. If FirstString is identical to"
|   | |-TextComment 0x55887c385750 <line:1095:1, col:78> Text="  SecondString, then 0 is returned. Otherwise, the value returned is the first"
|   | |-TextComment 0x55887c385770 <line:1096:1, col:72> Text="  mismatched Unicode character in SecondString subtracted from the first"
|   | `-TextComment 0x55887c385790 <line:1097:1, col:46> Text="  mismatched Unicode character in FirstString."
|   |-ParagraphComment 0x55887c385990 <line:1099:1, line:1108:33>
|   | |-TextComment 0x55887c385800 <line:1099:1, col:40> Text="  If FirstString is NULL, then ASSERT()."
|   | |-TextComment 0x55887c385820 <line:1100:1, col:68> Text="  If FirstString is not aligned on a 16-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c385840 <line:1101:1, col:41> Text="  If SecondString is NULL, then ASSERT()."
|   | |-TextComment 0x55887c385860 <line:1102:1, col:69> Text="  If SecondString is not aligned on a 16-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c385880 <line:1103:1, col:77> Text="  If PcdMaximumUnicodeStringLength is not zero, and FirstString contains more"
|   | |-TextComment 0x55887c3858a0 <line:1104:1, col:73> Text="  than PcdMaximumUnicodeStringLength Unicode characters not including the"
|   | |-TextComment 0x55887c3858c0 <line:1105:1, col:33> Text="  Null-terminator, then ASSERT()."
|   | |-TextComment 0x55887c3858e0 <line:1106:1, col:78> Text="  If PcdMaximumUnicodeStringLength is not zero, and SecondString contains more"
|   | |-TextComment 0x55887c385900 <line:1107:1, col:74> Text="  than PcdMaximumUnicodeStringLength Unicode characters, not including the"
|   | `-TextComment 0x55887c385920 <line:1108:1, col:33> Text="  Null-terminator, then ASSERT()."
|   |-ParagraphComment 0x55887c3859e0 <line:1110:1, col:2>
|   | `-TextComment 0x55887c3859b0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c385a00 <col:3, line:1111:2> [in] implicitly Param="FirstString" ParamIndex=0
|   | `-ParagraphComment 0x55887c385ab0 <line:1110:22, line:1111:2>
|   |   |-TextComment 0x55887c385a60 <line:1110:22, col:72> Text="   The pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c385a80 <line:1111:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c385ad0 <col:3, col:72> [in] implicitly Param="SecondString" ParamIndex=1
|   | `-ParagraphComment 0x55887c385b60 <col:23, col:72>
|   |   `-TextComment 0x55887c385b30 <col:23, col:72> Text="  The pointer to a Null-terminated Unicode string."
|   |-ParagraphComment 0x55887c385bb0 <line:1113:1, col:2>
|   | `-TextComment 0x55887c385b80 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c385bd0 <col:3, line:1114:2> Name="retval" Arg[0]="0"
|   | `-ParagraphComment 0x55887c385c70 <line:1113:12, line:1114:2>
|   |   |-TextComment 0x55887c385c20 <line:1113:12, col:58> Text="      FirstString is identical to SecondString."
|   |   `-TextComment 0x55887c385c40 <line:1114:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c385c90 <col:3, col:62> Name="return"
|     `-ParagraphComment 0x55887c385cf0 <col:10, col:62>
|       `-TextComment 0x55887c385cc0 <col:10, col:62> Text=" others FirstString is not identical to SecondString."
|-FunctionDecl 0x55887c120558 <line:1156:1, line:1162:3> line:1158:1 StrnCmp 'INTN (const CHAR16 *, const CHAR16 *, UINTN)'
| |-ParmVarDecl 0x55887c120348 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1159:26> col:26 FirstString 'const CHAR16 *'
| |-ParmVarDecl 0x55887c1203c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1160:26> col:26 SecondString 'const CHAR16 *'
| |-ParmVarDecl 0x55887c120438 <line:1161:11, col:25> col:25 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3865d0 <line:1125:1, line:1153:62>
|   |-ParagraphComment 0x55887c385e20 <line:1125:1, line:1126:77>
|   | |-TextComment 0x55887c385dd0 <line:1125:1, col:88> Text="  Compares up to a specified length the contents of two Null-terminated Unicode strings,"
|   | `-TextComment 0x55887c385df0 <line:1126:1, col:77> Text="  and returns the difference between the first mismatched Unicode characters."
|   |-ParagraphComment 0x55887c385f30 <line:1128:1, line:1133:72>
|   | |-TextComment 0x55887c385e40 <line:1128:1, col:78> Text="  This function compares the Null-terminated Unicode string FirstString to the"
|   | |-TextComment 0x55887c385e60 <line:1129:1, col:70> Text="  Null-terminated Unicode string SecondString. At most, Length Unicode"
|   | |-TextComment 0x55887c385e80 <line:1130:1, col:69> Text="  characters will be compared. If Length is 0, then 0 is returned. If"
|   | |-TextComment 0x55887c385ea0 <line:1131:1, col:78> Text="  FirstString is identical to SecondString, then 0 is returned. Otherwise, the"
|   | |-TextComment 0x55887c385ec0 <line:1132:1, col:74> Text="  value returned is the first mismatched Unicode character in SecondString"
|   | `-TextComment 0x55887c385ee0 <line:1133:1, col:72> Text="  subtracted from the first mismatched Unicode character in FirstString."
|   |-ParagraphComment 0x55887c386130 <line:1135:1, line:1146:16>
|   | |-TextComment 0x55887c385f50 <line:1135:1, col:55> Text="  If Length > 0 and FirstString is NULL, then ASSERT()."
|   | |-TextComment 0x55887c385f70 <line:1136:1, col:83> Text="  If Length > 0 and FirstString is not aligned on a 16-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c385f90 <line:1137:1, col:56> Text="  If Length > 0 and SecondString is NULL, then ASSERT()."
|   | |-TextComment 0x55887c385fb0 <line:1138:1, col:84> Text="  If Length > 0 and SecondString is not aligned on a 16-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c385fd0 <line:1139:1, col:74> Text="  If PcdMaximumUnicodeStringLength is not zero, and Length is greater than"
|   | |-TextComment 0x55887c385ff0 <line:1140:1, col:47> Text="  PcdMaximumUnicodeStringLength, then ASSERT()."
|   | |-TextComment 0x55887c386010 <line:1141:1, col:82> Text="  If PcdMaximumUnicodeStringLength is not zero, and FirstString contains more than"
|   | |-TextComment 0x55887c386030 <line:1142:1, col:86> Text="  PcdMaximumUnicodeStringLength Unicode characters, not including the Null-terminator,"
|   | |-TextComment 0x55887c386050 <line:1143:1, col:16> Text="  then ASSERT()."
|   | |-TextComment 0x55887c386070 <line:1144:1, col:83> Text="  If PcdMaximumUnicodeStringLength is not zero, and SecondString contains more than"
|   | |-TextComment 0x55887c386090 <line:1145:1, col:86> Text="  PcdMaximumUnicodeStringLength Unicode characters, not including the Null-terminator,"
|   | `-TextComment 0x55887c3860b0 <line:1146:1, col:16> Text="  then ASSERT()."
|   |-ParagraphComment 0x55887c386180 <line:1148:1, col:2>
|   | `-TextComment 0x55887c386150 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3861a0 <col:3, line:1149:2> [in] implicitly Param="FirstString" ParamIndex=0
|   | `-ParagraphComment 0x55887c386250 <line:1148:22, line:1149:2>
|   |   |-TextComment 0x55887c386200 <line:1148:22, col:72> Text="   The pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c386220 <line:1149:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c386270 <col:3, line:1150:2> [in] implicitly Param="SecondString" ParamIndex=1
|   | `-ParagraphComment 0x55887c386320 <line:1149:23, line:1150:2>
|   |   |-TextComment 0x55887c3862d0 <line:1149:23, col:72> Text="  The pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c3862f0 <line:1150:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c386340 <col:3, col:76> [in] implicitly Param="Length" ParamIndex=2
|   | `-ParagraphComment 0x55887c3863d0 <col:17, col:76>
|   |   `-TextComment 0x55887c3863a0 <col:17, col:76> Text="        The maximum number of Unicode characters to compare."
|   |-ParagraphComment 0x55887c386420 <line:1152:1, col:2>
|   | `-TextComment 0x55887c3863f0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c386440 <col:3, line:1153:2> Name="retval" Arg[0]="0"
|   | `-ParagraphComment 0x55887c3864e0 <line:1152:12, line:1153:2>
|   |   |-TextComment 0x55887c386490 <line:1152:12, col:58> Text="      FirstString is identical to SecondString."
|   |   `-TextComment 0x55887c3864b0 <line:1153:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c386500 <col:3, col:62> Name="return"
|     `-ParagraphComment 0x55887c386560 <col:10, col:62>
|       `-TextComment 0x55887c386530 <col:10, col:62> Text=" others FirstString is not identical to SecondString."
|-FunctionDecl 0x55887c1207f8 <line:1189:1, line:1194:3> line:1191:1 StrStr 'CHAR16 *(const CHAR16 *, const CHAR16 *)'
| |-ParmVarDecl 0x55887c120668 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1192:26> col:26 String 'const CHAR16 *'
| |-ParmVarDecl 0x55887c1206e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1193:26> col:26 SearchString 'const CHAR16 *'
| `-FullComment 0x55887c386c80 <line:1165:1, line:1186:46>
|   |-ParagraphComment 0x55887c386690 <line:1165:1, line:1166:38>
|   | |-TextComment 0x55887c386640 <line:1165:1, col:70> Text="  Returns the first occurrence of a Null-terminated Unicode sub-string"
|   | `-TextComment 0x55887c386660 <line:1166:1, col:38> Text="  in a Null-terminated Unicode string."
|   |-ParagraphComment 0x55887c386750 <line:1168:1, line:1171:62>
|   | |-TextComment 0x55887c3866b0 <line:1168:1, col:72> Text="  This function scans the contents of the Null-terminated Unicode string"
|   | |-TextComment 0x55887c3866d0 <line:1169:1, col:71> Text="  specified by String and returns the first occurrence of SearchString."
|   | |-TextComment 0x55887c3866f0 <line:1170:1, col:68> Text="  If SearchString is not found in String, then NULL is returned.  If"
|   | `-TextComment 0x55887c386710 <line:1171:1, col:62> Text="  the length of SearchString is zero, then String is returned."
|   |-ParagraphComment 0x55887c386810 <line:1173:1, line:1176:69>
|   | |-TextComment 0x55887c386770 <line:1173:1, col:35> Text="  If String is NULL, then ASSERT()."
|   | |-TextComment 0x55887c386790 <line:1174:1, col:63> Text="  If String is not aligned on a 16-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c3867b0 <line:1175:1, col:41> Text="  If SearchString is NULL, then ASSERT()."
|   | `-TextComment 0x55887c3867d0 <line:1176:1, col:69> Text="  If SearchString is not aligned on a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c3868b0 <line:1178:1, line:1180:63>
|   | |-TextComment 0x55887c386830 <line:1178:1, col:64> Text="  If PcdMaximumUnicodeStringLength is not zero, and SearchString"
|   | |-TextComment 0x55887c386850 <line:1179:1, col:68> Text="  or String contains more than PcdMaximumUnicodeStringLength Unicode"
|   | `-TextComment 0x55887c386870 <line:1180:1, col:63> Text="  characters, not including the Null-terminator, then ASSERT()."
|   |-ParagraphComment 0x55887c386900 <line:1182:1, col:2>
|   | `-TextComment 0x55887c3868d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c386920 <col:3, line:1183:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c3869d0 <line:1182:17, line:1183:2>
|   |   |-TextComment 0x55887c386980 <line:1182:17, col:74> Text="          The pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c3869a0 <line:1183:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3869f0 <col:3, col:88> [in] implicitly Param="SearchString" ParamIndex=1
|   | `-ParagraphComment 0x55887c386a80 <col:23, col:88>
|   |   `-TextComment 0x55887c386a50 <col:23, col:88> Text="    The pointer to a Null-terminated Unicode string to search for."
|   |-ParagraphComment 0x55887c386ad0 <line:1185:1, col:2>
|   | `-TextComment 0x55887c386aa0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c386af0 <col:3, line:1186:2> Name="retval" Arg[0]="NULL"
|   | `-ParagraphComment 0x55887c386b90 <line:1185:15, line:1186:2>
|   |   |-TextComment 0x55887c386b40 <line:1185:15, col:72> Text="            If the SearchString does not appear in String."
|   |   `-TextComment 0x55887c386b60 <line:1186:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c386bb0 <col:3, col:46> Name="return"
|     `-ParagraphComment 0x55887c386c10 <col:10, col:46>
|       `-TextComment 0x55887c386be0 <col:10, col:46> Text=" others          If there is a match."
|-FunctionDecl 0x55887c120978 <line:1230:1, line:1234:3> line:1232:1 StrDecimalToUintn 'UINTN (const CHAR16 *)'
| |-ParmVarDecl 0x55887c1208e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1233:26> col:26 String 'const CHAR16 *'
| `-FullComment 0x55887c387390 <line:1197:1, line:1227:39>
|   |-ParagraphComment 0x55887c386d40 <line:1197:1, line:1198:13>
|   | |-TextComment 0x55887c386cf0 <line:1197:1, col:64> Text="  Convert a Null-terminated Unicode decimal string to a value of"
|   | `-TextComment 0x55887c386d10 <line:1198:1, col:13> Text="  type UINTN."
|   |-ParagraphComment 0x55887c386de0 <line:1200:1, line:1202:40>
|   | |-TextComment 0x55887c386d60 <line:1200:1, col:74> Text="  This function returns a value of type UINTN by interpreting the contents"
|   | |-TextComment 0x55887c386d80 <line:1201:1, col:75> Text="  of the Unicode string specified by String as a decimal number. The format"
|   | `-TextComment 0x55887c386da0 <line:1202:1, col:40> Text="  of the input Unicode string String is:"
|   |-ParagraphComment 0x55887c386e30 <line:1204:1, col:44>
|   | `-TextComment 0x55887c386e00 <col:1, col:44> Text="                  [spaces] [decimal digits]."
|   |-ParagraphComment 0x55887c386f50 <line:1206:1, line:1211:50>
|   | |-TextComment 0x55887c386e50 <line:1206:1, col:62> Text="  The valid decimal digit character is in the range [0-9]. The"
|   | |-TextComment 0x55887c386e70 <line:1207:1, col:62> Text="  function will ignore the pad space, which includes spaces or"
|   | |-TextComment 0x55887c386e90 <line:1208:1, col:66> Text="  tab characters, before [decimal digits]. The running zero in the"
|   | |-TextComment 0x55887c386eb0 <line:1209:1, col:67> Text="  beginning of [decimal digits] will be ignored. Then, the function"
|   | |-TextComment 0x55887c386ed0 <line:1210:1, col:70> Text="  stops at the first character that is a not a valid decimal character"
|   | `-TextComment 0x55887c386ef0 <line:1211:1, col:50> Text="  or a Null-terminator, whichever one comes first."
|   |-ParagraphComment 0x55887c387090 <line:1213:1, line:1219:60>
|   | |-TextComment 0x55887c386f70 <line:1213:1, col:35> Text="  If String is NULL, then ASSERT()."
|   | |-TextComment 0x55887c386f90 <line:1214:1, col:63> Text="  If String is not aligned in a 16-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c386fb0 <line:1215:1, col:52> Text="  If String has only pad spaces, then 0 is returned."
|   | |-TextComment 0x55887c386fd0 <line:1216:1, col:54> Text="  If String has no pad spaces or valid decimal digits,"
|   | |-TextComment 0x55887c386ff0 <line:1217:1, col:21> Text="  then 0 is returned."
|   | |-TextComment 0x55887c387010 <line:1218:1, col:57> Text="  If the number represented by String overflows according"
|   | `-TextComment 0x55887c387030 <line:1219:1, col:60> Text="  to the range defined by UINTN, then MAX_UINTN is returned."
|   |-ParagraphComment 0x55887c387130 <line:1221:1, line:1223:37>
|   | |-TextComment 0x55887c3870b0 <line:1221:1, col:67> Text="  If PcdMaximumUnicodeStringLength is not zero, and String contains"
|   | |-TextComment 0x55887c3870d0 <line:1222:1, col:74> Text="  more than PcdMaximumUnicodeStringLength Unicode characters not including"
|   | `-TextComment 0x55887c3870f0 <line:1223:1, col:37> Text="  the Null-terminator, then ASSERT()."
|   |-ParagraphComment 0x55887c387180 <line:1225:1, col:2>
|   | `-TextComment 0x55887c387150 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3871a0 <col:3, col:70> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c387230 <col:17, col:70>
|   |   `-TextComment 0x55887c387200 <col:17, col:70> Text="      The pointer to a Null-terminated Unicode string."
|   |-ParagraphComment 0x55887c387280 <line:1227:1, col:2>
|   | `-TextComment 0x55887c387250 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3872a0 <col:3, col:39> Name="retval" Arg[0]="Value"
|     `-ParagraphComment 0x55887c387320 <col:16, col:39>
|       `-TextComment 0x55887c3872f0 <col:16, col:39> Text=" translated from String."
|-FunctionDecl 0x55887c120b18 <line:1270:1, line:1274:3> line:1272:1 StrDecimalToUint64 'UINT64 (const CHAR16 *)'
| |-ParmVarDecl 0x55887c120a58 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1273:26> col:26 String 'const CHAR16 *'
| `-FullComment 0x55887c387a90 <line:1237:1, line:1267:39>
|   |-ParagraphComment 0x55887c387450 <line:1237:1, line:1238:14>
|   | |-TextComment 0x55887c387400 <line:1237:1, col:64> Text="  Convert a Null-terminated Unicode decimal string to a value of"
|   | `-TextComment 0x55887c387420 <line:1238:1, col:14> Text="  type UINT64."
|   |-ParagraphComment 0x55887c3874f0 <line:1240:1, line:1242:40>
|   | |-TextComment 0x55887c387470 <line:1240:1, col:75> Text="  This function returns a value of type UINT64 by interpreting the contents"
|   | |-TextComment 0x55887c387490 <line:1241:1, col:75> Text="  of the Unicode string specified by String as a decimal number. The format"
|   | `-TextComment 0x55887c3874b0 <line:1242:1, col:40> Text="  of the input Unicode string String is:"
|   |-ParagraphComment 0x55887c387540 <line:1244:1, col:44>
|   | `-TextComment 0x55887c387510 <col:1, col:44> Text="                  [spaces] [decimal digits]."
|   |-ParagraphComment 0x55887c387650 <line:1246:1, line:1251:50>
|   | |-TextComment 0x55887c387560 <line:1246:1, col:62> Text="  The valid decimal digit character is in the range [0-9]. The"
|   | |-TextComment 0x55887c387580 <line:1247:1, col:62> Text="  function will ignore the pad space, which includes spaces or"
|   | |-TextComment 0x55887c3875a0 <line:1248:1, col:66> Text="  tab characters, before [decimal digits]. The running zero in the"
|   | |-TextComment 0x55887c3875c0 <line:1249:1, col:67> Text="  beginning of [decimal digits] will be ignored. Then, the function"
|   | |-TextComment 0x55887c3875e0 <line:1250:1, col:70> Text="  stops at the first character that is a not a valid decimal character"
|   | `-TextComment 0x55887c387600 <line:1251:1, col:50> Text="  or a Null-terminator, whichever one comes first."
|   |-ParagraphComment 0x55887c387790 <line:1253:1, line:1259:62>
|   | |-TextComment 0x55887c387670 <line:1253:1, col:35> Text="  If String is NULL, then ASSERT()."
|   | |-TextComment 0x55887c387690 <line:1254:1, col:63> Text="  If String is not aligned in a 16-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c3876b0 <line:1255:1, col:52> Text="  If String has only pad spaces, then 0 is returned."
|   | |-TextComment 0x55887c3876d0 <line:1256:1, col:54> Text="  If String has no pad spaces or valid decimal digits,"
|   | |-TextComment 0x55887c3876f0 <line:1257:1, col:21> Text="  then 0 is returned."
|   | |-TextComment 0x55887c387710 <line:1258:1, col:57> Text="  If the number represented by String overflows according"
|   | `-TextComment 0x55887c387730 <line:1259:1, col:62> Text="  to the range defined by UINT64, then MAX_UINT64 is returned."
|   |-ParagraphComment 0x55887c387830 <line:1261:1, line:1263:37>
|   | |-TextComment 0x55887c3877b0 <line:1261:1, col:67> Text="  If PcdMaximumUnicodeStringLength is not zero, and String contains"
|   | |-TextComment 0x55887c3877d0 <line:1262:1, col:74> Text="  more than PcdMaximumUnicodeStringLength Unicode characters not including"
|   | `-TextComment 0x55887c3877f0 <line:1263:1, col:37> Text="  the Null-terminator, then ASSERT()."
|   |-ParagraphComment 0x55887c387880 <line:1265:1, col:2>
|   | `-TextComment 0x55887c387850 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3878a0 <col:3, col:74> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c387930 <col:17, col:74>
|   |   `-TextComment 0x55887c387900 <col:17, col:74> Text="          The pointer to a Null-terminated Unicode string."
|   |-ParagraphComment 0x55887c387980 <line:1267:1, col:2>
|   | `-TextComment 0x55887c387950 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3879a0 <col:3, col:39> Name="retval" Arg[0]="Value"
|     `-ParagraphComment 0x55887c387a20 <col:16, col:39>
|       `-TextComment 0x55887c3879f0 <col:16, col:39> Text=" translated from String."
|-FunctionDecl 0x55887c120c88 <line:1311:1, line:1315:3> line:1313:1 StrHexToUintn 'UINTN (const CHAR16 *)'
| |-ParmVarDecl 0x55887c120bf8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1314:26> col:26 String 'const CHAR16 *'
| `-FullComment 0x55887c3881c0 <line:1277:1, line:1308:39>
|   |-ParagraphComment 0x55887c387b30 <line:1277:1, col:80>
|   | `-TextComment 0x55887c387b00 <col:1, col:80> Text="  Convert a Null-terminated Unicode hexadecimal string to a value of type UINTN."
|   |-ParagraphComment 0x55887c387bd0 <line:1279:1, line:1281:51>
|   | |-TextComment 0x55887c387b50 <line:1279:1, col:74> Text="  This function returns a value of type UINTN by interpreting the contents"
|   | |-TextComment 0x55887c387b70 <line:1280:1, col:68> Text="  of the Unicode string specified by String as a hexadecimal number."
|   | `-TextComment 0x55887c387b90 <line:1281:1, col:51> Text="  The format of the input Unicode string String is:"
|   |-ParagraphComment 0x55887c387c20 <line:1283:1, col:57>
|   | `-TextComment 0x55887c387bf0 <col:1, col:57> Text="                  [spaces][zeros][x][hexadecimal digits]."
|   |-ParagraphComment 0x55887c387d80 <line:1285:1, line:1292:81>
|   | |-TextComment 0x55887c387c40 <line:1285:1, col:79> Text="  The valid hexadecimal digit character is in the range [0-9], [a-f] and [A-F]."
|   | |-TextComment 0x55887c387c60 <line:1286:1, col:74> Text="  The prefix "0x" is optional. Both "x" and "X" is allowed in "0x" prefix."
|   | |-TextComment 0x55887c387c80 <line:1287:1, col:78> Text="  If "x" appears in the input string, it must be prefixed with at least one 0."
|   | |-TextComment 0x55887c387ca0 <line:1288:1, col:82> Text="  The function will ignore the pad space, which includes spaces or tab characters,"
|   | |-TextComment 0x55887c387cc0 <line:1289:1, col:76> Text="  before [zeros], [x] or [hexadecimal digit]. The running zero before [x] or"
|   | |-TextComment 0x55887c387ce0 <line:1290:1, col:81> Text="  [hexadecimal digit] will be ignored. Then, the decoding starts after [x] or the"
|   | |-TextComment 0x55887c387d00 <line:1291:1, col:80> Text="  first valid hexadecimal digit. Then, the function stops at the first character"
|   | `-TextComment 0x55887c387d20 <line:1292:1, col:81> Text="  that is a not a valid hexadecimal character or NULL, whichever one comes first."
|   |-ParagraphComment 0x55887c387ec0 <line:1294:1, line:1300:36>
|   | |-TextComment 0x55887c387da0 <line:1294:1, col:35> Text="  If String is NULL, then ASSERT()."
|   | |-TextComment 0x55887c387dc0 <line:1295:1, col:63> Text="  If String is not aligned in a 16-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c387de0 <line:1296:1, col:55> Text="  If String has only pad spaces, then zero is returned."
|   | |-TextComment 0x55887c387e00 <line:1297:1, col:81> Text="  If String has no leading pad spaces, leading zeros or valid hexadecimal digits,"
|   | |-TextComment 0x55887c387e20 <line:1298:1, col:24> Text="  then zero is returned."
|   | |-TextComment 0x55887c387e40 <line:1299:1, col:81> Text="  If the number represented by String overflows according to the range defined by"
|   | `-TextComment 0x55887c387e60 <line:1300:1, col:36> Text="  UINTN, then MAX_UINTN is returned."
|   |-ParagraphComment 0x55887c387f60 <line:1302:1, line:1304:16>
|   | |-TextComment 0x55887c387ee0 <line:1302:1, col:77> Text="  If PcdMaximumUnicodeStringLength is not zero, and String contains more than"
|   | |-TextComment 0x55887c387f00 <line:1303:1, col:85> Text="  PcdMaximumUnicodeStringLength Unicode characters not including the Null-terminator,"
|   | `-TextComment 0x55887c387f20 <line:1304:1, col:16> Text="  then ASSERT()."
|   |-ParagraphComment 0x55887c387fb0 <line:1306:1, col:2>
|   | `-TextComment 0x55887c387f80 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c387fd0 <col:3, col:74> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c388060 <col:17, col:74>
|   |   `-TextComment 0x55887c388030 <col:17, col:74> Text="          The pointer to a Null-terminated Unicode string."
|   |-ParagraphComment 0x55887c3880b0 <line:1308:1, col:2>
|   | `-TextComment 0x55887c388080 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3880d0 <col:3, col:39> Name="retval" Arg[0]="Value"
|     `-ParagraphComment 0x55887c388150 <col:16, col:39>
|       `-TextComment 0x55887c388120 <col:16, col:39> Text=" translated from String."
|-FunctionDecl 0x55887c120df8 <line:1352:1, line:1356:3> line:1354:1 StrHexToUint64 'UINT64 (const CHAR16 *)'
| |-ParmVarDecl 0x55887c120d68 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1355:26> col:26 String 'const CHAR16 *'
| `-FullComment 0x55887c3888f0 <line:1318:1, line:1349:39>
|   |-ParagraphComment 0x55887c388260 <line:1318:1, col:81>
|   | `-TextComment 0x55887c388230 <col:1, col:81> Text="  Convert a Null-terminated Unicode hexadecimal string to a value of type UINT64."
|   |-ParagraphComment 0x55887c388300 <line:1320:1, line:1322:50>
|   | |-TextComment 0x55887c388280 <line:1320:1, col:75> Text="  This function returns a value of type UINT64 by interpreting the contents"
|   | |-TextComment 0x55887c3882a0 <line:1321:1, col:68> Text="  of the Unicode string specified by String as a hexadecimal number."
|   | `-TextComment 0x55887c3882c0 <line:1322:1, col:50> Text="  The format of the input Unicode string String is"
|   |-ParagraphComment 0x55887c388350 <line:1324:1, col:57>
|   | `-TextComment 0x55887c388320 <col:1, col:57> Text="                  [spaces][zeros][x][hexadecimal digits]."
|   |-ParagraphComment 0x55887c3884b0 <line:1326:1, line:1333:73>
|   | |-TextComment 0x55887c388370 <line:1326:1, col:79> Text="  The valid hexadecimal digit character is in the range [0-9], [a-f] and [A-F]."
|   | |-TextComment 0x55887c388390 <line:1327:1, col:74> Text="  The prefix "0x" is optional. Both "x" and "X" is allowed in "0x" prefix."
|   | |-TextComment 0x55887c3883b0 <line:1328:1, col:78> Text="  If "x" appears in the input string, it must be prefixed with at least one 0."
|   | |-TextComment 0x55887c3883d0 <line:1329:1, col:82> Text="  The function will ignore the pad space, which includes spaces or tab characters,"
|   | |-TextComment 0x55887c3883f0 <line:1330:1, col:76> Text="  before [zeros], [x] or [hexadecimal digit]. The running zero before [x] or"
|   | |-TextComment 0x55887c388410 <line:1331:1, col:81> Text="  [hexadecimal digit] will be ignored. Then, the decoding starts after [x] or the"
|   | |-TextComment 0x55887c388430 <line:1332:1, col:88> Text="  first valid hexadecimal digit. Then, the function stops at the first character that is"
|   | `-TextComment 0x55887c388450 <line:1333:1, col:73> Text="  a not a valid hexadecimal character or NULL, whichever one comes first."
|   |-ParagraphComment 0x55887c3885f0 <line:1335:1, line:1341:38>
|   | |-TextComment 0x55887c3884d0 <line:1335:1, col:35> Text="  If String is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3884f0 <line:1336:1, col:63> Text="  If String is not aligned in a 16-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c388510 <line:1337:1, col:55> Text="  If String has only pad spaces, then zero is returned."
|   | |-TextComment 0x55887c388530 <line:1338:1, col:81> Text="  If String has no leading pad spaces, leading zeros or valid hexadecimal digits,"
|   | |-TextComment 0x55887c388550 <line:1339:1, col:24> Text="  then zero is returned."
|   | |-TextComment 0x55887c388570 <line:1340:1, col:81> Text="  If the number represented by String overflows according to the range defined by"
|   | `-TextComment 0x55887c388590 <line:1341:1, col:38> Text="  UINT64, then MAX_UINT64 is returned."
|   |-ParagraphComment 0x55887c388690 <line:1343:1, line:1345:16>
|   | |-TextComment 0x55887c388610 <line:1343:1, col:77> Text="  If PcdMaximumUnicodeStringLength is not zero, and String contains more than"
|   | |-TextComment 0x55887c388630 <line:1344:1, col:85> Text="  PcdMaximumUnicodeStringLength Unicode characters not including the Null-terminator,"
|   | `-TextComment 0x55887c388650 <line:1345:1, col:16> Text="  then ASSERT()."
|   |-ParagraphComment 0x55887c3886e0 <line:1347:1, col:2>
|   | `-TextComment 0x55887c3886b0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c388700 <col:3, col:74> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c388790 <col:17, col:74>
|   |   `-TextComment 0x55887c388760 <col:17, col:74> Text="          The pointer to a Null-terminated Unicode string."
|   |-ParagraphComment 0x55887c3887e0 <line:1349:1, col:2>
|   | `-TextComment 0x55887c3887b0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c388800 <col:3, col:39> Name="retval" Arg[0]="Value"
|     `-ParagraphComment 0x55887c388880 <col:16, col:39>
|       `-TextComment 0x55887c388850 <col:16, col:39> Text=" translated from String."
|-FunctionDecl 0x55887c1211e8 <line:1408:1, line:1415:3> line:1410:1 StrToIpv6Address 'RETURN_STATUS (const CHAR16 *, CHAR16 **, IPv6_ADDRESS *, UINT8 *)'
| |-ParmVarDecl 0x55887c120ed8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1411:22> col:22 String 'const CHAR16 *'
| |-ParmVarDecl 0x55887c120f58 <line:1412:7, col:23> col:23 EndPointer 'CHAR16 **'
| |-ParmVarDecl 0x55887c121028 <line:1413:7, col:22> col:22 Address 'IPv6_ADDRESS *'
| |-ParmVarDecl 0x55887c1210a0 <line:1414:7, col:22> col:22 PrefixLength 'UINT8 *'
| `-FullComment 0x55887c3895f0 <line:1359:1, line:1405:48>
|   |-ParagraphComment 0x55887c388990 <line:1359:1, col:77>
|   | `-TextComment 0x55887c388960 <col:1, col:77> Text="  Convert a Null-terminated Unicode string to IPv6 address and prefix length."
|   |-ParagraphComment 0x55887c388a30 <line:1361:1, line:1363:73>
|   | |-TextComment 0x55887c3889b0 <line:1361:1, col:75> Text="  This function outputs a value of type IPv6_ADDRESS and may output a value"
|   | |-TextComment 0x55887c3889d0 <line:1362:1, col:76> Text="  of type UINT8 by interpreting the contents of the Unicode string specified"
|   | `-TextComment 0x55887c3889f0 <line:1363:1, col:73> Text="  by String. The format of the input Unicode string String is as follows:"
|   |-ParagraphComment 0x55887c388a80 <line:1365:1, col:37>
|   | `-TextComment 0x55887c388a50 <col:1, col:37> Text="                  X:X:X:X:X:X:X:X[/P]"
|   |-ParagraphComment 0x55887c388b70 <line:1367:1, line:1371:29>
|   | |-TextComment 0x55887c388aa0 <line:1367:1, col:83> Text="  X contains one to four hexadecimal digit characters in the range [0-9], [a-f] and"
|   | |-TextComment 0x55887c388ac0 <line:1368:1, col:82> Text="  [A-F]. X is converted to a value of type UINT16, whose low byte is stored in low"
|   | |-TextComment 0x55887c388ae0 <line:1369:1, col:83> Text="  memory address and high byte is stored in high memory address. P contains decimal"
|   | |-TextComment 0x55887c388b00 <line:1370:1, col:82> Text="  digit characters in the range [0-9]. The running zero in the beginning of P will"
|   | `-TextComment 0x55887c388b20 <line:1371:1, col:29> Text="  be ignored. /P is optional."
|   |-ParagraphComment 0x55887c388be0 <line:1373:1, line:1374:72>
|   | |-TextComment 0x55887c388b90 <line:1373:1, col:81> Text="  When /P is not in the String, the function stops at the first character that is"
|   | `-TextComment 0x55887c388bb0 <line:1374:1, col:72> Text="  not a valid hexadecimal digit character after eight X's are converted."
|   |-ParagraphComment 0x55887c388c50 <line:1376:1, line:1377:55>
|   | |-TextComment 0x55887c388c00 <line:1376:1, col:81> Text="  When /P is in the String, the function stops at the first character that is not"
|   | `-TextComment 0x55887c388c20 <line:1377:1, col:55> Text="  a valid decimal digit character after P is converted."
|   |-ParagraphComment 0x55887c388cc0 <line:1379:1, line:1380:46>
|   | |-TextComment 0x55887c388c70 <line:1379:1, col:78> Text="  "::" can be used to compress one or more groups of X when X contains only 0."
|   | `-TextComment 0x55887c388c90 <line:1380:1, col:46> Text="  The "::" can only appear once in the String."
|   |-ParagraphComment 0x55887c388d10 <line:1382:1, col:63>
|   | `-TextComment 0x55887c388ce0 <col:1, col:63> Text="  If String is not aligned in a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c388db0 <line:1384:1, line:1386:16>
|   | |-TextComment 0x55887c388d30 <line:1384:1, col:76> Text="  If EndPointer is not NULL and Address is translated from String, a pointer"
|   | |-TextComment 0x55887c388d50 <line:1385:1, col:77> Text="  to the character that stopped the scan is stored at the location pointed to"
|   | `-TextComment 0x55887c388d70 <line:1386:1, col:16> Text="  by EndPointer."
|   |-ParagraphComment 0x55887c388e00 <line:1388:1, col:2>
|   | `-TextComment 0x55887c388dd0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c388e20 <col:3, line:1389:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c388ed0 <line:1388:17, line:1389:2>
|   |   |-TextComment 0x55887c388e80 <line:1388:17, col:79> Text="                   Pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c388ea0 <line:1389:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c388ef0 <col:3, line:1390:2> [in] implicitly Param="EndPointer" ParamIndex=1
|   | `-ParagraphComment 0x55887c388fa0 <line:1389:21, line:1390:2>
|   |   |-TextComment 0x55887c388f50 <line:1389:21, col:72> Text="               Pointer to character that stops scan."
|   |   `-TextComment 0x55887c388f70 <line:1390:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c388fc0 <col:3, line:1391:2> [in] implicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c389070 <line:1390:18, line:1391:2>
|   |   |-TextComment 0x55887c389020 <line:1390:18, col:73> Text="                  Pointer to the converted IPv6 address."
|   |   `-TextComment 0x55887c389040 <line:1391:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c389090 <col:3, line:1393:53> [in] implicitly Param="PrefixLength" ParamIndex=3
|   | `-ParagraphComment 0x55887c389170 <line:1391:23, line:1393:53>
|   |   |-TextComment 0x55887c3890f0 <line:1391:23, col:79> Text="             Pointer to the converted IPv6 address prefix"
|   |   |-TextComment 0x55887c389110 <line:1392:1, col:75> Text="                                   length. MAX_UINT8 is returned when /P is"
|   |   `-TextComment 0x55887c389130 <line:1393:1, col:53> Text="                                   not in the String."
|   |-ParagraphComment 0x55887c3891c0 <line:1395:1, col:2>
|   | `-TextComment 0x55887c389190 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3891e0 <col:3, line:1396:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c389280 <line:1395:25, line:1396:2>
|   |   |-TextComment 0x55887c389230 <line:1395:25, col:69> Text="           Address is translated from String."
|   |   `-TextComment 0x55887c389250 <line:1396:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3892a0 <col:3, line:1398:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c389380 <line:1396:35, line:1398:2>
|   |   |-TextComment 0x55887c389300 <line:1396:35, col:53> Text=" If String is NULL."
|   |   |-TextComment 0x55887c389320 <line:1397:1, col:51> Text="                                   If Data is NULL."
|   |   `-TextComment 0x55887c389340 <line:1398:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3893a0 <col:3, line:1405:48> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|     `-ParagraphComment 0x55887c389540 <line:1398:29, line:1405:48>
|       |-TextComment 0x55887c389400 <line:1398:29, col:75> Text="       If X contains more than four hexadecimal"
|       |-TextComment 0x55887c389420 <line:1399:1, col:53> Text="                                    digit characters."
|       |-TextComment 0x55887c389440 <line:1400:1, col:74> Text="                                   If String contains "::" and number of X"
|       |-TextComment 0x55887c389460 <line:1401:1, col:55> Text="                                    is not less than 8."
|       |-TextComment 0x55887c389480 <line:1402:1, col:75> Text="                                   If P starts with character that is not a"
|       |-TextComment 0x55887c3894a0 <line:1403:1, col:66> Text="                                    valid decimal digit character."
|       |-TextComment 0x55887c3894c0 <line:1404:1, col:73> Text="                                   If the decimal number converted from P"
|       `-TextComment 0x55887c3894e0 <line:1405:1, col:48> Text="                                    exceeds 128."
|-FunctionDecl 0x55887c121640 <line:1458:1, line:1465:3> line:1460:1 StrToIpv4Address 'RETURN_STATUS (const CHAR16 *, CHAR16 **, IPv4_ADDRESS *, UINT8 *)'
| |-ParmVarDecl 0x55887c1212e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1461:22> col:22 String 'const CHAR16 *'
| |-ParmVarDecl 0x55887c121368 <line:1462:7, col:23> col:23 EndPointer 'CHAR16 **'
| |-ParmVarDecl 0x55887c121438 <line:1463:7, col:22> col:22 Address 'IPv4_ADDRESS *'
| |-ParmVarDecl 0x55887c1214b0 <line:1464:7, col:22> col:22 PrefixLength 'UINT8 *'
| `-FullComment 0x55887c38a190 <line:1418:1, line:1455:47>
|   |-ParagraphComment 0x55887c389690 <line:1418:1, col:77>
|   | `-TextComment 0x55887c389660 <col:1, col:77> Text="  Convert a Null-terminated Unicode string to IPv4 address and prefix length."
|   |-ParagraphComment 0x55887c389730 <line:1420:1, line:1422:73>
|   | |-TextComment 0x55887c3896b0 <line:1420:1, col:75> Text="  This function outputs a value of type IPv4_ADDRESS and may output a value"
|   | |-TextComment 0x55887c3896d0 <line:1421:1, col:76> Text="  of type UINT8 by interpreting the contents of the Unicode string specified"
|   | `-TextComment 0x55887c3896f0 <line:1422:1, col:73> Text="  by String. The format of the input Unicode string String is as follows:"
|   |-ParagraphComment 0x55887c389780 <line:1424:1, col:29>
|   | `-TextComment 0x55887c389750 <col:1, col:29> Text="                  D.D.D.D[/P]"
|   |-ParagraphComment 0x55887c3897f0 <line:1426:1, line:1427:59>
|   | |-TextComment 0x55887c3897a0 <line:1426:1, col:78> Text="  D and P are decimal digit characters in the range [0-9]. The running zero in"
|   | `-TextComment 0x55887c3897c0 <line:1427:1, col:59> Text="  the beginning of D and P will be ignored. /P is optional."
|   |-ParagraphComment 0x55887c389860 <line:1429:1, line:1430:67>
|   | |-TextComment 0x55887c389810 <line:1429:1, col:81> Text="  When /P is not in the String, the function stops at the first character that is"
|   | `-TextComment 0x55887c389830 <line:1430:1, col:67> Text="  not a valid decimal digit character after four D's are converted."
|   |-ParagraphComment 0x55887c3898d0 <line:1432:1, line:1433:55>
|   | |-TextComment 0x55887c389880 <line:1432:1, col:81> Text="  When /P is in the String, the function stops at the first character that is not"
|   | `-TextComment 0x55887c3898a0 <line:1433:1, col:55> Text="  a valid decimal digit character after P is converted."
|   |-ParagraphComment 0x55887c389920 <line:1435:1, col:63>
|   | `-TextComment 0x55887c3898f0 <col:1, col:63> Text="  If String is not aligned in a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c3899c0 <line:1437:1, line:1439:16>
|   | |-TextComment 0x55887c389940 <line:1437:1, col:76> Text="  If EndPointer is not NULL and Address is translated from String, a pointer"
|   | |-TextComment 0x55887c389960 <line:1438:1, col:77> Text="  to the character that stopped the scan is stored at the location pointed to"
|   | `-TextComment 0x55887c389980 <line:1439:1, col:16> Text="  by EndPointer."
|   |-ParagraphComment 0x55887c389a10 <line:1441:1, col:2>
|   | `-TextComment 0x55887c3899e0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c389a30 <col:3, line:1442:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c389ae0 <line:1441:17, line:1442:2>
|   |   |-TextComment 0x55887c389a90 <line:1441:17, col:79> Text="                   Pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c389ab0 <line:1442:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c389b00 <col:3, line:1443:2> [in] implicitly Param="EndPointer" ParamIndex=1
|   | `-ParagraphComment 0x55887c389bb0 <line:1442:21, line:1443:2>
|   |   |-TextComment 0x55887c389b60 <line:1442:21, col:72> Text="               Pointer to character that stops scan."
|   |   `-TextComment 0x55887c389b80 <line:1443:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c389bd0 <col:3, line:1444:2> [in] implicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c389c80 <line:1443:18, line:1444:2>
|   |   |-TextComment 0x55887c389c30 <line:1443:18, col:73> Text="                  Pointer to the converted IPv4 address."
|   |   `-TextComment 0x55887c389c50 <line:1444:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c389ca0 <col:3, line:1446:53> [in] implicitly Param="PrefixLength" ParamIndex=3
|   | `-ParagraphComment 0x55887c389d80 <line:1444:23, line:1446:53>
|   |   |-TextComment 0x55887c389d00 <line:1444:23, col:79> Text="             Pointer to the converted IPv4 address prefix"
|   |   |-TextComment 0x55887c389d20 <line:1445:1, col:75> Text="                                   length. MAX_UINT8 is returned when /P is"
|   |   `-TextComment 0x55887c389d40 <line:1446:1, col:53> Text="                                   not in the String."
|   |-ParagraphComment 0x55887c389dd0 <line:1448:1, col:2>
|   | `-TextComment 0x55887c389da0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c389df0 <col:3, line:1449:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c389e90 <line:1448:25, line:1449:2>
|   |   |-TextComment 0x55887c389e40 <line:1448:25, col:69> Text="           Address is translated from String."
|   |   `-TextComment 0x55887c389e60 <line:1449:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c389eb0 <col:3, line:1451:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c389f90 <line:1449:35, line:1451:2>
|   |   |-TextComment 0x55887c389f10 <line:1449:35, col:53> Text=" If String is NULL."
|   |   |-TextComment 0x55887c389f30 <line:1450:1, col:51> Text="                                   If Data is NULL."
|   |   `-TextComment 0x55887c389f50 <line:1451:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c389fb0 <col:3, line:1455:47> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|     `-ParagraphComment 0x55887c38a0e0 <line:1451:29, line:1455:47>
|       |-TextComment 0x55887c38a010 <line:1451:29, col:74> Text="       If String is not in the correct format."
|       |-TextComment 0x55887c38a030 <line:1452:1, col:73> Text="                                   If any decimal number converted from D"
|       |-TextComment 0x55887c38a050 <line:1453:1, col:48> Text="                                    exceeds 255."
|       |-TextComment 0x55887c38a070 <line:1454:1, col:73> Text="                                   If the decimal number converted from P"
|       `-TextComment 0x55887c38a090 <line:1455:1, col:47> Text="                                    exceeds 32."
|-FunctionDecl 0x55887c121918 <line:1511:1, line:1516:3> line:1513:1 StrToGuid 'RETURN_STATUS (const CHAR16 *, GUID *)'
| |-ParmVarDecl 0x55887c121738 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1514:22> col:22 String 'const CHAR16 *'
| |-ParmVarDecl 0x55887c121808 <line:1515:7, col:22> col:22 Guid 'GUID *'
| `-FullComment 0x55887c38abf0 <line:1470:1, line:1508:72>
|   |-ParagraphComment 0x55887c38a250 <line:1470:1, line:1471:11>
|   | |-TextComment 0x55887c38a200 <line:1470:1, col:66> Text="  Convert a Null-terminated Unicode GUID string to a value of type"
|   | `-TextComment 0x55887c38a220 <line:1471:1, col:11> Text="  EFI_GUID."
|   |-ParagraphComment 0x55887c38a2f0 <line:1473:1, line:1475:62>
|   | |-TextComment 0x55887c38a270 <line:1473:1, col:68> Text="  This function outputs a GUID value by interpreting the contents of"
|   | |-TextComment 0x55887c38a290 <line:1474:1, col:65> Text="  the Unicode string specified by String. The format of the input"
|   | `-TextComment 0x55887c38a2b0 <line:1475:1, col:62> Text="  Unicode string String consists of 36 characters, as follows:"
|   |-ParagraphComment 0x55887c38a340 <line:1477:1, col:54>
|   | `-TextComment 0x55887c38a310 <col:1, col:54> Text="                  aabbccdd-eeff-gghh-iijj-kkllmmnnoopp"
|   |-ParagraphComment 0x55887c38a3b0 <line:1479:1, line:1480:69>
|   | |-TextComment 0x55887c38a360 <line:1479:1, col:68> Text="  The pairs aa - pp are two characters in the range [0-9], [a-f] and"
|   | `-TextComment 0x55887c38a380 <line:1480:1, col:69> Text="  [A-F], with each pair representing a single byte hexadecimal value."
|   |-ParagraphComment 0x55887c38a680 <line:1482:1, line:1498:42>
|   | |-TextComment 0x55887c38a3d0 <line:1482:1, col:70> Text="  The mapping between String and the EFI_GUID structure is as follows:"
|   | |-TextComment 0x55887c38a3f0 <line:1483:1, col:42> Text="                  aa          Data1[24:31]"
|   | |-TextComment 0x55887c38a410 <line:1484:1, col:42> Text="                  bb          Data1[16:23]"
|   | |-TextComment 0x55887c38a430 <line:1485:1, col:41> Text="                  cc          Data1[8:15]"
|   | |-TextComment 0x55887c38a450 <line:1486:1, col:40> Text="                  dd          Data1[0:7]"
|   | |-TextComment 0x55887c38a470 <line:1487:1, col:41> Text="                  ee          Data2[8:15]"
|   | |-TextComment 0x55887c38a490 <line:1488:1, col:40> Text="                  ff          Data2[0:7]"
|   | |-TextComment 0x55887c38a4b0 <line:1489:1, col:41> Text="                  gg          Data3[8:15]"
|   | |-TextComment 0x55887c38a4d0 <line:1490:1, col:40> Text="                  hh          Data3[0:7]"
|   | |-TextComment 0x55887c38a4f0 <line:1491:1, col:40> Text="                  ii          Data4[0:7]"
|   | |-TextComment 0x55887c38a510 <line:1492:1, col:41> Text="                  jj          Data4[8:15]"
|   | |-TextComment 0x55887c38a530 <line:1493:1, col:42> Text="                  kk          Data4[16:23]"
|   | |-TextComment 0x55887c38a550 <line:1494:1, col:42> Text="                  ll          Data4[24:31]"
|   | |-TextComment 0x55887c38a570 <line:1495:1, col:42> Text="                  mm          Data4[32:39]"
|   | |-TextComment 0x55887c38a590 <line:1496:1, col:42> Text="                  nn          Data4[40:47]"
|   | |-TextComment 0x55887c38a5b0 <line:1497:1, col:42> Text="                  oo          Data4[48:55]"
|   | `-TextComment 0x55887c38a5d0 <line:1498:1, col:42> Text="                  pp          Data4[56:63]"
|   |-ParagraphComment 0x55887c38a6d0 <line:1500:1, col:63>
|   | `-TextComment 0x55887c38a6a0 <col:1, col:63> Text="  If String is not aligned in a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c38a720 <line:1502:1, col:2>
|   | `-TextComment 0x55887c38a6f0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38a740 <col:3, line:1503:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c38a7f0 <line:1502:17, line:1503:2>
|   |   |-TextComment 0x55887c38a7a0 <line:1502:17, col:79> Text="                   Pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c38a7c0 <line:1503:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38a810 <col:3, col:65> [in] implicitly Param="Guid" ParamIndex=1
|   | `-ParagraphComment 0x55887c38a8a0 <col:15, col:65>
|   |   `-TextComment 0x55887c38a870 <col:15, col:65> Text="                     Pointer to the converted GUID."
|   |-ParagraphComment 0x55887c38a8f0 <line:1505:1, col:2>
|   | `-TextComment 0x55887c38a8c0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c38a910 <col:3, line:1506:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c38a9b0 <line:1505:25, line:1506:2>
|   |   |-TextComment 0x55887c38a960 <line:1505:25, col:66> Text="           Guid is translated from String."
|   |   `-TextComment 0x55887c38a980 <line:1506:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c38a9d0 <col:3, line:1508:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c38aab0 <line:1506:35, line:1508:2>
|   |   |-TextComment 0x55887c38aa30 <line:1506:35, col:53> Text=" If String is NULL."
|   |   |-TextComment 0x55887c38aa50 <line:1507:1, col:51> Text="                                   If Data is NULL."
|   |   `-TextComment 0x55887c38aa70 <line:1508:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c38aad0 <col:3, col:72> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|     `-ParagraphComment 0x55887c38ab60 <col:29, col:72>
|       `-TextComment 0x55887c38ab30 <col:29, col:72> Text="       If String is not as the above format."
|-FunctionDecl 0x55887c121cb8 <line:1551:1, line:1558:3> line:1553:1 StrHexToBytes 'RETURN_STATUS (const CHAR16 *, UINTN, UINT8 *, UINTN)'
| |-ParmVarDecl 0x55887c121a08 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1554:22> col:22 String 'const CHAR16 *'
| |-ParmVarDecl 0x55887c121a80 <line:1555:7, col:21> col:21 Length 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c121af8 <line:1556:7, col:22> col:22 Buffer 'UINT8 *'
| |-ParmVarDecl 0x55887c121b70 <line:1557:7, col:21> col:21 MaxBufferSize 'UINTN':'unsigned long long'
| `-FullComment 0x55887c38f750 <line:1519:1, line:1549:78>
|   |-ParagraphComment 0x55887c38ac90 <line:1519:1, col:71>
|   | `-TextComment 0x55887c38ac60 <col:1, col:71> Text="  Convert a Null-terminated Unicode hexadecimal string to a byte array."
|   |-ParagraphComment 0x55887c38ad30 <line:1521:1, line:1523:37>
|   | |-TextComment 0x55887c38acb0 <line:1521:1, col:68> Text="  This function outputs a byte array by interpreting the contents of"
|   | |-TextComment 0x55887c38acd0 <line:1522:1, col:77> Text="  the Unicode string specified by String in hexadecimal format. The format of"
|   | `-TextComment 0x55887c38acf0 <line:1523:1, col:37> Text="  the input Unicode string String is:"
|   |-ParagraphComment 0x55887c38ad80 <line:1525:1, col:23>
|   | `-TextComment 0x55887c38ad50 <col:1, col:23> Text="                  [XX]*"
|   |-ParagraphComment 0x55887c38ae40 <line:1527:1, line:1530:21>
|   | |-TextComment 0x55887c38ada0 <line:1527:1, col:73> Text="  X is a hexadecimal digit character in the range [0-9], [a-f] and [A-F]."
|   | |-TextComment 0x55887c38adc0 <line:1528:1, col:78> Text="  The function decodes every two hexadecimal digit characters as one byte. The"
|   | |-TextComment 0x55887c38ade0 <line:1529:1, col:73> Text="  decoding stops after Length of characters and outputs Buffer containing"
|   | `-TextComment 0x55887c38ae00 <line:1530:1, col:21> Text="  (Length / 2) bytes."
|   |-ParagraphComment 0x55887c38ae90 <line:1532:1, col:63>
|   | `-TextComment 0x55887c38ae60 <col:1, col:63> Text="  If String is not aligned in a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c38aee0 <line:1534:1, col:2>
|   | `-TextComment 0x55887c38aeb0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38af00 <col:3, line:1535:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c38efe0 <line:1534:17, line:1535:2>
|   |   |-TextComment 0x55887c38ef90 <line:1534:17, col:79> Text="                   Pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c38efb0 <line:1535:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38f000 <col:3, line:1536:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c38f0b0 <line:1535:17, line:1536:2>
|   |   |-TextComment 0x55887c38f060 <line:1535:17, col:78> Text="                   The number of Unicode characters to decode."
|   |   `-TextComment 0x55887c38f080 <line:1536:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38f0d0 <col:3, line:1537:2> [in] implicitly Param="Buffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c38f180 <line:1536:17, line:1537:2>
|   |   |-TextComment 0x55887c38f130 <line:1536:17, col:72> Text="                   Pointer to the converted bytes array."
|   |   `-TextComment 0x55887c38f150 <line:1537:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38f1a0 <col:3, col:62> [in] implicitly Param="MaxBufferSize" ParamIndex=3
|   | `-ParagraphComment 0x55887c38f230 <col:24, col:62>
|   |   `-TextComment 0x55887c38f200 <col:24, col:62> Text="            The maximum size of Buffer."
|   |-ParagraphComment 0x55887c38f280 <line:1539:1, col:2>
|   | `-TextComment 0x55887c38f250 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c38f2a0 <col:3, line:1540:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c38f340 <line:1539:25, line:1540:2>
|   |   |-TextComment 0x55887c38f2f0 <line:1539:25, col:68> Text="           Buffer is translated from String."
|   |   `-TextComment 0x55887c38f310 <line:1540:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c38f360 <col:3, line:1546:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c38f4e0 <line:1540:35, line:1546:2>
|   |   |-TextComment 0x55887c38f3c0 <line:1540:35, col:53> Text=" If String is NULL."
|   |   |-TextComment 0x55887c38f3e0 <line:1541:1, col:51> Text="                                   If Data is NULL."
|   |   |-TextComment 0x55887c38f400 <line:1542:1, col:66> Text="                                   If Length is not multiple of 2."
|   |   |-TextComment 0x55887c38f420 <line:1543:1, col:80> Text="                                   If PcdMaximumUnicodeStringLength is not zero,"
|   |   |-TextComment 0x55887c38f440 <line:1544:1, col:62> Text="                                    and Length is greater than"
|   |   |-TextComment 0x55887c38f460 <line:1545:1, col:66> Text="                                    PcdMaximumUnicodeStringLength."
|   |   `-TextComment 0x55887c38f480 <line:1546:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c38f500 <col:3, line:1549:2> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|   | `-ParagraphComment 0x55887c38f600 <line:1546:29, line:1549:2>
|   |   |-TextComment 0x55887c38f560 <line:1546:29, col:78> Text="       If Length of characters from String contain"
|   |   |-TextComment 0x55887c38f580 <line:1547:1, col:77> Text="                                    a character that is not valid hexadecimal"
|   |   |-TextComment 0x55887c38f5a0 <line:1548:1, col:75> Text="                                    digit characters, or a Null-terminator."
|   |   `-TextComment 0x55887c38f5c0 <line:1549:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c38f620 <col:3, col:78> Name="retval" Arg[0]="RETURN_BUFFER_TOO_SMALL"
|     `-ParagraphComment 0x55887c38f6b0 <col:34, col:78>
|       `-TextComment 0x55887c38f680 <col:34, col:78> Text="  If MaxBufferSize is less than (Length / 2)."
|-FunctionDecl 0x55887c121fc8 <line:1600:1, line:1606:3> line:1602:1 UnicodeStrToAsciiStrS 'RETURN_STATUS (const CHAR16 *, CHAR8 *, UINTN)'
| |-ParmVarDecl 0x55887c121db8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1603:26> col:26 Source 'const CHAR16 *'
| |-ParmVarDecl 0x55887c121e30 <line:1604:11, col:26> col:26 Destination 'CHAR8 *'
| |-ParmVarDecl 0x55887c121ea8 <line:1605:11, col:25> col:25 DestMax 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3902a0 <line:1561:1, line:1597:69>
|   |-ParagraphComment 0x55887c38f810 <line:1561:1, line:1562:15>
|   | |-TextComment 0x55887c38f7c0 <line:1561:1, col:63> Text="  Convert a Null-terminated Unicode string to a Null-terminated"
|   | `-TextComment 0x55887c38f7e0 <line:1562:1, col:15> Text="  ASCII string."
|   |-ParagraphComment 0x55887c38f860 <line:1564:1, col:43>
|   | `-TextComment 0x55887c38f830 <col:1, col:43> Text="  This function is similar to AsciiStrCpyS."
|   |-ParagraphComment 0x55887c38f920 <line:1566:1, line:1569:66>
|   | |-TextComment 0x55887c38f880 <line:1566:1, col:65> Text="  This function converts the content of the Unicode string Source"
|   | |-TextComment 0x55887c38f8a0 <line:1567:1, col:64> Text="  to the ASCII string Destination by copying the lower 8 bits of"
|   | |-TextComment 0x55887c38f8c0 <line:1568:1, col:66> Text="  each Unicode character. The function terminates the ASCII string"
|   | `-TextComment 0x55887c38f8e0 <line:1569:1, col:66> Text="  Destination by appending a Null-terminator character at the end."
|   |-ParagraphComment 0x55887c38f990 <line:1571:1, line:1572:74>
|   | |-TextComment 0x55887c38f940 <line:1571:1, col:81> Text="  The caller is responsible to make sure Destination points to a buffer with size"
|   | `-TextComment 0x55887c38f960 <line:1572:1, col:74> Text="  equal or greater than ((StrLen (Source) + 1) * sizeof (CHAR8)) in bytes."
|   |-ParagraphComment 0x55887c38fa00 <line:1574:1, line:1575:34>
|   | |-TextComment 0x55887c38f9b0 <line:1574:1, col:63> Text="  If any Unicode characters in Source contain non-zero value in"
|   | `-TextComment 0x55887c38f9d0 <line:1575:1, col:34> Text="  the upper 8 bits, then ASSERT()."
|   |-ParagraphComment 0x55887c38fa50 <line:1577:1, col:63>
|   | `-TextComment 0x55887c38fa20 <col:1, col:63> Text="  If Source is not aligned on a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c38faa0 <line:1579:1, col:62>
|   | `-TextComment 0x55887c38fa70 <col:1, col:62> Text="  If an error is returned, then the Destination is unmodified."
|   |-ParagraphComment 0x55887c38faf0 <line:1581:1, col:2>
|   | `-TextComment 0x55887c38fac0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38fb10 <col:3, line:1582:2> [in] implicitly Param="Source" ParamIndex=0
|   | `-ParagraphComment 0x55887c38fbc0 <line:1581:17, line:1582:2>
|   |   |-TextComment 0x55887c38fb70 <line:1581:17, col:72> Text="        The pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c38fb90 <line:1582:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38fbe0 <col:3, line:1583:2> [in] implicitly Param="Destination" ParamIndex=1
|   | `-ParagraphComment 0x55887c38fc90 <line:1582:22, line:1583:2>
|   |   |-TextComment 0x55887c38fc40 <line:1582:22, col:70> Text="   The pointer to a Null-terminated ASCII string."
|   |   `-TextComment 0x55887c38fc60 <line:1583:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38fcb0 <col:3, line:1584:62> [in] implicitly Param="DestMax" ParamIndex=2
|   | `-ParagraphComment 0x55887c38fd60 <line:1583:18, line:1584:62>
|   |   |-TextComment 0x55887c38fd10 <line:1583:18, col:63> Text="       The maximum number of Destination Ascii"
|   |   `-TextComment 0x55887c38fd30 <line:1584:1, col:62> Text="                        char, including terminating null char."
|   |-ParagraphComment 0x55887c38fdb0 <line:1586:1, col:2>
|   | `-TextComment 0x55887c38fd80 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c38fdd0 <col:3, line:1587:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c38fe70 <line:1586:25, line:1587:2>
|   |   |-TextComment 0x55887c38fe20 <line:1586:25, col:55> Text="           String is converted."
|   |   `-TextComment 0x55887c38fe40 <line:1587:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c38fe90 <col:3, line:1588:2> Name="retval" Arg[0]="RETURN_BUFFER_TOO_SMALL"
|   | `-ParagraphComment 0x55887c38ff40 <line:1587:34, line:1588:2>
|   |   |-TextComment 0x55887c38fef0 <line:1587:34, col:81> Text="  If DestMax is NOT greater than StrLen(Source)."
|   |   `-TextComment 0x55887c38ff10 <line:1588:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c38ff60 <col:3, line:1597:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c390150 <line:1588:35, line:1597:2>
|   |   |-TextComment 0x55887c38ffc0 <line:1588:35, col:58> Text=" If Destination is NULL."
|   |   |-TextComment 0x55887c38ffe0 <line:1589:1, col:53> Text="                                   If Source is NULL."
|   |   |-TextComment 0x55887c390000 <line:1590:1, col:78> Text="                                   If PcdMaximumAsciiStringLength is not zero,"
|   |   |-TextComment 0x55887c390020 <line:1591:1, col:63> Text="                                    and DestMax is greater than"
|   |   |-TextComment 0x55887c390040 <line:1592:1, col:64> Text="                                    PcdMaximumAsciiStringLength."
|   |   |-TextComment 0x55887c390060 <line:1593:1, col:80> Text="                                   If PcdMaximumUnicodeStringLength is not zero,"
|   |   |-TextComment 0x55887c390080 <line:1594:1, col:63> Text="                                    and DestMax is greater than"
|   |   |-TextComment 0x55887c3900a0 <line:1595:1, col:66> Text="                                    PcdMaximumUnicodeStringLength."
|   |   |-TextComment 0x55887c3900c0 <line:1596:1, col:51> Text="                                   If DestMax is 0."
|   |   `-TextComment 0x55887c3900e0 <line:1597:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c390170 <col:3, col:69> Name="retval" Arg[0]="RETURN_ACCESS_DENIED"
|     `-ParagraphComment 0x55887c390200 <col:31, col:69>
|       `-TextComment 0x55887c3901d0 <col:31, col:69> Text="     If Source and Destination overlap."
|-FunctionDecl 0x55887c1223e8 <line:1651:1, line:1659:3> line:1653:1 UnicodeStrnToAsciiStrS 'RETURN_STATUS (const CHAR16 *, UINTN, CHAR8 *, UINTN, UINTN *)'
| |-ParmVarDecl 0x55887c1220b8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1654:26> col:26 Source 'const CHAR16 *'
| |-ParmVarDecl 0x55887c122130 <line:1655:11, col:25> col:25 Length 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1221a8 <line:1656:11, col:26> col:26 Destination 'CHAR8 *'
| |-ParmVarDecl 0x55887c122220 <line:1657:11, col:25> col:25 DestMax 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c122298 <line:1658:11, col:26> col:26 DestinationLength 'UINTN *'
| `-FullComment 0x55887c391000 <line:1609:1, line:1648:70>
|   |-ParagraphComment 0x55887c390390 <line:1609:1, line:1611:62>
|   | |-TextComment 0x55887c390310 <line:1609:1, col:75> Text="  Convert not more than Length successive characters from a Null-terminated"
|   | |-TextComment 0x55887c390330 <line:1610:1, col:77> Text="  Unicode string to a Null-terminated Ascii string. If no null char is copied"
|   | `-TextComment 0x55887c390350 <line:1611:1, col:62> Text="  from Source, then Destination[Length] is always set to null."
|   |-ParagraphComment 0x55887c390450 <line:1613:1, line:1616:66>
|   | |-TextComment 0x55887c3903b0 <line:1613:1, col:76> Text="  This function converts not more than Length successive characters from the"
|   | |-TextComment 0x55887c3903d0 <line:1614:1, col:78> Text="  Unicode string Source to the Ascii string Destination by copying the lower 8"
|   | |-TextComment 0x55887c3903f0 <line:1615:1, col:74> Text="  bits of each Unicode character. The function terminates the Ascii string"
|   | `-TextComment 0x55887c390410 <line:1616:1, col:66> Text="  Destination by appending a Null-terminator character at the end."
|   |-ParagraphComment 0x55887c3904c0 <line:1618:1, line:1619:74>
|   | |-TextComment 0x55887c390470 <line:1618:1, col:81> Text="  The caller is responsible to make sure Destination points to a buffer with size"
|   | `-TextComment 0x55887c390490 <line:1619:1, col:74> Text="  equal or greater than ((StrLen (Source) + 1) * sizeof (CHAR8)) in bytes."
|   |-ParagraphComment 0x55887c390560 <line:1621:1, line:1623:63>
|   | |-TextComment 0x55887c3904e0 <line:1621:1, col:75> Text="  If any Unicode characters in Source contain non-zero value in the upper 8"
|   | |-TextComment 0x55887c390500 <line:1622:1, col:22> Text="  bits, then ASSERT()."
|   | `-TextComment 0x55887c390520 <line:1623:1, col:63> Text="  If Source is not aligned on a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c3905b0 <line:1625:1, col:62>
|   | `-TextComment 0x55887c390580 <col:1, col:62> Text="  If an error is returned, then the Destination is unmodified."
|   |-ParagraphComment 0x55887c390600 <line:1627:1, col:2>
|   | `-TextComment 0x55887c3905d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c390620 <col:3, line:1628:2> [in] implicitly Param="Source" ParamIndex=0
|   | `-ParagraphComment 0x55887c3906d0 <line:1627:17, line:1628:2>
|   |   |-TextComment 0x55887c390680 <line:1627:17, col:77> Text="             The pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c3906a0 <line:1628:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3906f0 <col:3, line:1630:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c3907d0 <line:1628:17, line:1630:2>
|   |   |-TextComment 0x55887c390750 <line:1628:17, col:72> Text="             The maximum number of Unicode characters to"
|   |   |-TextComment 0x55887c390770 <line:1629:1, col:37> Text="                             convert."
|   |   `-TextComment 0x55887c390790 <line:1630:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3907f0 <col:3, line:1631:2> [in] implicitly Param="Destination" ParamIndex=2
|   | `-ParagraphComment 0x55887c3908a0 <line:1630:22, line:1631:2>
|   |   |-TextComment 0x55887c390850 <line:1630:22, col:75> Text="        The pointer to a Null-terminated Ascii string."
|   |   `-TextComment 0x55887c390870 <line:1631:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3908c0 <col:3, line:1633:2> [in] implicitly Param="DestMax" ParamIndex=3
|   | `-ParagraphComment 0x55887c3909a0 <line:1631:18, line:1633:2>
|   |   |-TextComment 0x55887c390920 <line:1631:18, col:68> Text="            The maximum number of Destination Ascii"
|   |   |-TextComment 0x55887c390940 <line:1632:1, col:67> Text="                             char, including terminating null char."
|   |   `-TextComment 0x55887c390960 <line:1633:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3909c0 <col:3, col:72> [in] implicitly Param="DestinationLength" ParamIndex=4
|   | `-ParagraphComment 0x55887c390a60 <col:28, col:72>
|   |   `-TextComment 0x55887c390a30 <col:28, col:72> Text="  The number of Unicode characters converted."
|   |-ParagraphComment 0x55887c390ab0 <line:1635:1, col:2>
|   | `-TextComment 0x55887c390a80 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c390ad0 <col:3, line:1636:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c390b70 <line:1635:25, line:1636:2>
|   |   |-TextComment 0x55887c390b20 <line:1635:25, col:56> Text="            String is converted."
|   |   `-TextComment 0x55887c390b40 <line:1636:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c390b90 <col:3, line:1646:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c390db0 <line:1636:35, line:1646:2>
|   |   |-TextComment 0x55887c390bf0 <line:1636:35, col:59> Text="  If Destination is NULL."
|   |   |-TextComment 0x55887c390c10 <line:1637:1, col:54> Text="                                    If Source is NULL."
|   |   |-TextComment 0x55887c390c30 <line:1638:1, col:65> Text="                                    If DestinationLength is NULL."
|   |   |-TextComment 0x55887c390c50 <line:1639:1, col:79> Text="                                    If PcdMaximumAsciiStringLength is not zero,"
|   |   |-TextComment 0x55887c390c70 <line:1640:1, col:73> Text="                                    and Length or DestMax is greater than"
|   |   |-TextComment 0x55887c390c90 <line:1641:1, col:64> Text="                                    PcdMaximumAsciiStringLength."
|   |   |-TextComment 0x55887c390cb0 <line:1642:1, col:75> Text="                                    If PcdMaximumUnicodeStringLength is not"
|   |   |-TextComment 0x55887c390cd0 <line:1643:1, col:79> Text="                                    zero, and Length or DestMax is greater than"
|   |   |-TextComment 0x55887c390cf0 <line:1644:1, col:66> Text="                                    PcdMaximumUnicodeStringLength."
|   |   |-TextComment 0x55887c390d10 <line:1645:1, col:52> Text="                                    If DestMax is 0."
|   |   `-TextComment 0x55887c390d30 <line:1646:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c390dd0 <col:3, line:1648:2> Name="retval" Arg[0]="RETURN_BUFFER_TOO_SMALL"
|   | `-ParagraphComment 0x55887c390eb0 <line:1646:34, line:1648:2>
|   |   |-TextComment 0x55887c390e30 <line:1646:34, col:66> Text="   If DestMax is NOT greater than"
|   |   |-TextComment 0x55887c390e50 <line:1647:1, col:64> Text="                                    MIN(StrLen(Source), Length)."
|   |   `-TextComment 0x55887c390e70 <line:1648:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c390ed0 <col:3, col:70> Name="retval" Arg[0]="RETURN_ACCESS_DENIED"
|     `-ParagraphComment 0x55887c390f60 <col:31, col:70>
|       `-TextComment 0x55887c390f30 <col:31, col:70> Text="      If Source and Destination overlap."
|-FunctionDecl 0x55887c124670 <line:1678:1, line:1682:3> line:1680:1 AsciiStrLen 'UINTN (const CHAR8 *)'
| |-ParmVarDecl 0x55887c1224e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1681:25> col:25 String 'const CHAR8 *'
| `-FullComment 0x55887c391430 <line:1662:1, line:1675:31>
|   |-ParagraphComment 0x55887c3910a0 <line:1662:1, col:55>
|   | `-TextComment 0x55887c391070 <col:1, col:55> Text="  Returns the length of a Null-terminated ASCII string."
|   |-ParagraphComment 0x55887c391110 <line:1664:1, line:1665:35>
|   | |-TextComment 0x55887c3910c0 <line:1664:1, col:77> Text="  This function returns the number of ASCII characters in the Null-terminated"
|   | `-TextComment 0x55887c3910e0 <line:1665:1, col:35> Text="  ASCII string specified by String."
|   |-ParagraphComment 0x55887c391200 <line:1667:1, line:1671:16>
|   | |-TextComment 0x55887c391130 <line:1667:1, col:55> Text="  If Length > 0 and Destination is NULL, then ASSERT()."
|   | |-TextComment 0x55887c391150 <line:1668:1, col:50> Text="  If Length > 0 and Source is NULL, then ASSERT()."
|   | |-TextComment 0x55887c391170 <line:1669:1, col:74> Text="  If PcdMaximumAsciiStringLength is not zero and String contains more than"
|   | |-TextComment 0x55887c391190 <line:1670:1, col:81> Text="  PcdMaximumAsciiStringLength ASCII characters not including the Null-terminator,"
|   | `-TextComment 0x55887c3911b0 <line:1671:1, col:16> Text="  then ASSERT()."
|   |-ParagraphComment 0x55887c391250 <line:1673:1, col:2>
|   | `-TextComment 0x55887c391220 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c391270 <col:3, col:64> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c391300 <col:17, col:64>
|   |   `-TextComment 0x55887c3912d0 <col:17, col:64> Text="  The pointer to a Null-terminated ASCII string."
|   |-ParagraphComment 0x55887c391350 <line:1675:1, col:2>
|   | `-TextComment 0x55887c391320 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c391370 <col:3, col:31> Name="return"
|     `-ParagraphComment 0x55887c3913d0 <col:10, col:31>
|       `-TextComment 0x55887c3913a0 <col:10, col:31> Text=" The length of String."
|-FunctionDecl 0x55887c1247e8 <line:1701:1, line:1705:3> line:1703:1 AsciiStrSize 'UINTN (const CHAR8 *)'
| |-ParmVarDecl 0x55887c124758 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1704:25> col:25 String 'const CHAR8 *'
| `-FullComment 0x55887c391850 <line:1685:1, line:1698:29>
|   |-ParagraphComment 0x55887c3914f0 <line:1685:1, line:1686:18>
|   | |-TextComment 0x55887c3914a0 <line:1685:1, col:76> Text="  Returns the size of a Null-terminated ASCII string in bytes, including the"
|   | `-TextComment 0x55887c3914c0 <line:1686:1, col:18> Text="  Null terminator."
|   |-ParagraphComment 0x55887c391560 <line:1688:1, line:1689:22>
|   | |-TextComment 0x55887c391510 <line:1688:1, col:79> Text="  This function returns the size, in bytes, of the Null-terminated ASCII string"
|   | `-TextComment 0x55887c391530 <line:1689:1, col:22> Text="  specified by String."
|   |-ParagraphComment 0x55887c391620 <line:1691:1, line:1694:16>
|   | |-TextComment 0x55887c391580 <line:1691:1, col:35> Text="  If String is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3915a0 <line:1692:1, col:74> Text="  If PcdMaximumAsciiStringLength is not zero and String contains more than"
|   | |-TextComment 0x55887c3915c0 <line:1693:1, col:81> Text="  PcdMaximumAsciiStringLength ASCII characters not including the Null-terminator,"
|   | `-TextComment 0x55887c3915e0 <line:1694:1, col:16> Text="  then ASSERT()."
|   |-ParagraphComment 0x55887c391670 <line:1696:1, col:2>
|   | `-TextComment 0x55887c391640 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c391690 <col:3, col:64> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c391720 <col:17, col:64>
|   |   `-TextComment 0x55887c3916f0 <col:17, col:64> Text="  The pointer to a Null-terminated ASCII string."
|   |-ParagraphComment 0x55887c391770 <line:1698:1, col:2>
|   | `-TextComment 0x55887c391740 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c391790 <col:3, col:29> Name="return"
|     `-ParagraphComment 0x55887c3917f0 <col:10, col:29>
|       `-TextComment 0x55887c3917c0 <col:10, col:29> Text=" The size of String."
|-FunctionDecl 0x55887c124a58 <line:1733:1, line:1738:3> line:1735:1 AsciiStrCmp 'INTN (const CHAR8 *, const CHAR8 *)'
| |-ParmVarDecl 0x55887c1248c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1736:25> col:25 FirstString 'const CHAR8 *'
| |-ParmVarDecl 0x55887c124940 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1737:25> col:25 SecondString 'const CHAR8 *'
| `-FullComment 0x55887c391f50 <line:1708:1, line:1730:64>
|   |-ParagraphComment 0x55887c391910 <line:1708:1, line:1709:48>
|   | |-TextComment 0x55887c3918c0 <line:1708:1, col:72> Text="  Compares two Null-terminated ASCII strings, and returns the difference"
|   | `-TextComment 0x55887c3918e0 <line:1709:1, col:48> Text="  between the first mismatched ASCII characters."
|   |-ParagraphComment 0x55887c391a00 <line:1711:1, line:1715:44>
|   | |-TextComment 0x55887c391930 <line:1711:1, col:76> Text="  This function compares the Null-terminated ASCII string FirstString to the"
|   | |-TextComment 0x55887c391950 <line:1712:1, col:75> Text="  Null-terminated ASCII string SecondString. If FirstString is identical to"
|   | |-TextComment 0x55887c391970 <line:1713:1, col:78> Text="  SecondString, then 0 is returned. Otherwise, the value returned is the first"
|   | |-TextComment 0x55887c391990 <line:1714:1, col:70> Text="  mismatched ASCII character in SecondString subtracted from the first"
|   | `-TextComment 0x55887c3919b0 <line:1715:1, col:44> Text="  mismatched ASCII character in FirstString."
|   |-ParagraphComment 0x55887c391b60 <line:1717:1, line:1724:33>
|   | |-TextComment 0x55887c391a20 <line:1717:1, col:40> Text="  If FirstString is NULL, then ASSERT()."
|   | |-TextComment 0x55887c391a40 <line:1718:1, col:41> Text="  If SecondString is NULL, then ASSERT()."
|   | |-TextComment 0x55887c391a60 <line:1719:1, col:79> Text="  If PcdMaximumAsciiStringLength is not zero and FirstString contains more than"
|   | |-TextComment 0x55887c391a80 <line:1720:1, col:81> Text="  PcdMaximumAsciiStringLength ASCII characters not including the Null-terminator,"
|   | |-TextComment 0x55887c391aa0 <line:1721:1, col:16> Text="  then ASSERT()."
|   | |-TextComment 0x55887c391ac0 <line:1722:1, col:75> Text="  If PcdMaximumAsciiStringLength is not zero and SecondString contains more"
|   | |-TextComment 0x55887c391ae0 <line:1723:1, col:69> Text="  than PcdMaximumAsciiStringLength ASCII characters not including the"
|   | `-TextComment 0x55887c391b00 <line:1724:1, col:33> Text="  Null-terminator, then ASSERT()."
|   |-ParagraphComment 0x55887c391bb0 <line:1726:1, col:2>
|   | `-TextComment 0x55887c391b80 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c391bd0 <col:3, line:1727:2> [in] implicitly Param="FirstString" ParamIndex=0
|   | `-ParagraphComment 0x55887c391c80 <line:1726:22, line:1727:2>
|   |   |-TextComment 0x55887c391c30 <line:1726:22, col:70> Text="   The pointer to a Null-terminated ASCII string."
|   |   `-TextComment 0x55887c391c50 <line:1727:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c391ca0 <col:3, col:70> [in] implicitly Param="SecondString" ParamIndex=1
|   | `-ParagraphComment 0x55887c391d30 <col:23, col:70>
|   |   `-TextComment 0x55887c391d00 <col:23, col:70> Text="  The pointer to a Null-terminated ASCII string."
|   |-ParagraphComment 0x55887c391d80 <line:1729:1, col:2>
|   | `-TextComment 0x55887c391d50 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c391da0 <col:3, line:1730:2> Name="retval" Arg[0]="==0"
|   | `-ParagraphComment 0x55887c391e40 <line:1729:14, line:1730:2>
|   |   |-TextComment 0x55887c391df0 <line:1729:14, col:60> Text="      FirstString is identical to SecondString."
|   |   `-TextComment 0x55887c391e10 <line:1730:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c391e60 <col:3, col:64> Name="retval" Arg[0]="!=0"
|     `-ParagraphComment 0x55887c391ee0 <col:14, col:64>
|       `-TextComment 0x55887c391eb0 <col:14, col:64> Text="      FirstString is not identical to SecondString."
|-FunctionDecl 0x55887c124c58 <line:1769:1, line:1774:3> line:1771:1 AsciiStriCmp 'INTN (const CHAR8 *, const CHAR8 *)'
| |-ParmVarDecl 0x55887c124b48 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1772:25> col:25 FirstString 'const CHAR8 *'
| |-ParmVarDecl 0x55887c124bc0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1773:25> col:25 SecondString 'const CHAR8 *'
| `-FullComment 0x55887c3926c0 <line:1741:1, line:1766:41>
|   |-ParagraphComment 0x55887c392010 <line:1741:1, line:1742:75>
|   | |-TextComment 0x55887c391fc0 <line:1741:1, col:78> Text="  Performs a case insensitive comparison of two Null-terminated ASCII strings,"
|   | `-TextComment 0x55887c391fe0 <line:1742:1, col:75> Text="  and returns the difference between the first mismatched ASCII characters."
|   |-ParagraphComment 0x55887c392120 <line:1744:1, line:1749:17>
|   | |-TextComment 0x55887c392030 <line:1744:1, col:77> Text="  This function performs a case insensitive comparison of the Null-terminated"
|   | |-TextComment 0x55887c392050 <line:1745:1, col:79> Text="  ASCII string FirstString to the Null-terminated ASCII string SecondString. If"
|   | |-TextComment 0x55887c392070 <line:1746:1, col:78> Text="  FirstString is identical to SecondString, then 0 is returned. Otherwise, the"
|   | |-TextComment 0x55887c392090 <line:1747:1, col:70> Text="  value returned is the first mismatched lower case ASCII character in"
|   | |-TextComment 0x55887c3920b0 <line:1748:1, col:78> Text="  SecondString subtracted from the first mismatched lower case ASCII character"
|   | `-TextComment 0x55887c3920d0 <line:1749:1, col:17> Text="  in FirstString."
|   |-ParagraphComment 0x55887c392280 <line:1751:1, line:1758:33>
|   | |-TextComment 0x55887c392140 <line:1751:1, col:40> Text="  If FirstString is NULL, then ASSERT()."
|   | |-TextComment 0x55887c392160 <line:1752:1, col:41> Text="  If SecondString is NULL, then ASSERT()."
|   | |-TextComment 0x55887c392180 <line:1753:1, col:79> Text="  If PcdMaximumAsciiStringLength is not zero and FirstString contains more than"
|   | |-TextComment 0x55887c3921a0 <line:1754:1, col:81> Text="  PcdMaximumAsciiStringLength ASCII characters not including the Null-terminator,"
|   | |-TextComment 0x55887c3921c0 <line:1755:1, col:16> Text="  then ASSERT()."
|   | |-TextComment 0x55887c3921e0 <line:1756:1, col:75> Text="  If PcdMaximumAsciiStringLength is not zero and SecondString contains more"
|   | |-TextComment 0x55887c392200 <line:1757:1, col:69> Text="  than PcdMaximumAsciiStringLength ASCII characters not including the"
|   | `-TextComment 0x55887c392220 <line:1758:1, col:33> Text="  Null-terminator, then ASSERT()."
|   |-ParagraphComment 0x55887c3922d0 <line:1760:1, col:2>
|   | `-TextComment 0x55887c3922a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3922f0 <col:3, line:1761:2> [in] implicitly Param="FirstString" ParamIndex=0
|   | `-ParagraphComment 0x55887c3923a0 <line:1760:22, line:1761:2>
|   |   |-TextComment 0x55887c392350 <line:1760:22, col:70> Text="   The pointer to a Null-terminated ASCII string."
|   |   `-TextComment 0x55887c392370 <line:1761:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3923c0 <col:3, col:70> [in] implicitly Param="SecondString" ParamIndex=1
|   | `-ParagraphComment 0x55887c392450 <col:23, col:70>
|   |   `-TextComment 0x55887c392420 <col:23, col:70> Text="  The pointer to a Null-terminated ASCII string."
|   |-ParagraphComment 0x55887c3924a0 <line:1763:1, col:2>
|   | `-TextComment 0x55887c392470 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3924c0 <col:3, line:1765:2> Name="retval" Arg[0]="==0"
|   | `-ParagraphComment 0x55887c392590 <line:1763:14, line:1765:2>
|   |   |-TextComment 0x55887c392510 <line:1763:14, col:80> Text="    FirstString is identical to SecondString using case insensitive"
|   |   |-TextComment 0x55887c392530 <line:1764:1, col:29> Text="                 comparisons."
|   |   `-TextComment 0x55887c392550 <line:1765:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3925b0 <col:3, line:1766:41> Name="retval" Arg[0]="!=0"
|     `-ParagraphComment 0x55887c392650 <line:1765:14, line:1766:41>
|       |-TextComment 0x55887c392600 <line:1765:14, col:72> Text="    FirstString is not identical to SecondString using case"
|       `-TextComment 0x55887c392620 <line:1766:1, col:41> Text="                 insensitive comparisons."
|-FunctionDecl 0x55887c124f58 <line:1806:1, line:1812:3> line:1808:1 AsciiStrnCmp 'INTN (const CHAR8 *, const CHAR8 *, UINTN)'
| |-ParmVarDecl 0x55887c124d48 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1809:25> col:25 FirstString 'const CHAR8 *'
| |-ParmVarDecl 0x55887c124dc0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1810:25> col:25 SecondString 'const CHAR8 *'
| |-ParmVarDecl 0x55887c124e38 <line:1811:11, col:24> col:24 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c392f00 <line:1777:1, line:1803:65>
|   |-ParagraphComment 0x55887c392780 <line:1777:1, line:1778:63>
|   | |-TextComment 0x55887c392730 <line:1777:1, col:78> Text="  Compares two Null-terminated ASCII strings with maximum lengths, and returns"
|   | `-TextComment 0x55887c392750 <line:1778:1, col:63> Text="  the difference between the first mismatched ASCII characters."
|   |-ParagraphComment 0x55887c392890 <line:1780:1, line:1785:50>
|   | |-TextComment 0x55887c3927a0 <line:1780:1, col:76> Text="  This function compares the Null-terminated ASCII string FirstString to the"
|   | |-TextComment 0x55887c3927c0 <line:1781:1, col:78> Text="  Null-terminated ASCII  string SecondString. At most, Length ASCII characters"
|   | |-TextComment 0x55887c3927e0 <line:1782:1, col:73> Text="  will be compared. If Length is 0, then 0 is returned. If FirstString is"
|   | |-TextComment 0x55887c392800 <line:1783:1, col:78> Text="  identical to SecondString, then 0 is returned. Otherwise, the value returned"
|   | |-TextComment 0x55887c392820 <line:1784:1, col:77> Text="  is the first mismatched ASCII character in SecondString subtracted from the"
|   | `-TextComment 0x55887c392840 <line:1785:1, col:50> Text="  first mismatched ASCII character in FirstString."
|   |-ParagraphComment 0x55887c392a40 <line:1787:1, line:1796:16>
|   | |-TextComment 0x55887c3928b0 <line:1787:1, col:55> Text="  If Length > 0 and FirstString is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3928d0 <line:1788:1, col:56> Text="  If Length > 0 and SecondString is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3928f0 <line:1789:1, col:72> Text="  If PcdMaximumAsciiStringLength is not zero, and Length is greater than"
|   | |-TextComment 0x55887c392910 <line:1790:1, col:45> Text="  PcdMaximumAsciiStringLength, then ASSERT()."
|   | |-TextComment 0x55887c392930 <line:1791:1, col:80> Text="  If PcdMaximumAsciiStringLength is not zero, and FirstString contains more than"
|   | |-TextComment 0x55887c392950 <line:1792:1, col:82> Text="  PcdMaximumAsciiStringLength ASCII characters, not including the Null-terminator,"
|   | |-TextComment 0x55887c392970 <line:1793:1, col:16> Text="  then ASSERT()."
|   | |-TextComment 0x55887c392990 <line:1794:1, col:81> Text="  If PcdMaximumAsciiStringLength is not zero, and SecondString contains more than"
|   | |-TextComment 0x55887c3929b0 <line:1795:1, col:82> Text="  PcdMaximumAsciiStringLength ASCII characters, not including the Null-terminator,"
|   | `-TextComment 0x55887c3929d0 <line:1796:1, col:16> Text="  then ASSERT()."
|   |-ParagraphComment 0x55887c392a90 <line:1798:1, col:2>
|   | `-TextComment 0x55887c392a60 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c392ab0 <col:3, line:1799:2> [in] implicitly Param="FirstString" ParamIndex=0
|   | `-ParagraphComment 0x55887c392b60 <line:1798:22, line:1799:2>
|   |   |-TextComment 0x55887c392b10 <line:1798:22, col:70> Text="   The pointer to a Null-terminated ASCII string."
|   |   `-TextComment 0x55887c392b30 <line:1799:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c392b80 <col:3, line:1800:2> [in] implicitly Param="SecondString" ParamIndex=1
|   | `-ParagraphComment 0x55887c392c30 <line:1799:23, line:1800:2>
|   |   |-TextComment 0x55887c392be0 <line:1799:23, col:70> Text="  The pointer to a Null-terminated ASCII string."
|   |   `-TextComment 0x55887c392c00 <line:1800:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c392c50 <col:3, col:75> [in] implicitly Param="Length" ParamIndex=2
|   | `-ParagraphComment 0x55887c392ce0 <col:17, col:75>
|   |   `-TextComment 0x55887c392cb0 <col:17, col:75> Text="        The maximum number of ASCII characters for compare."
|   |-ParagraphComment 0x55887c392d30 <line:1802:1, col:2>
|   | `-TextComment 0x55887c392d00 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c392d50 <col:3, line:1803:2> Name="retval" Arg[0]="==0"
|   | `-ParagraphComment 0x55887c392df0 <line:1802:14, line:1803:2>
|   |   |-TextComment 0x55887c392da0 <line:1802:14, col:61> Text="       FirstString is identical to SecondString."
|   |   `-TextComment 0x55887c392dc0 <line:1803:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c392e10 <col:3, col:65> Name="retval" Arg[0]="!=0"
|     `-ParagraphComment 0x55887c392e90 <col:14, col:65>
|       `-TextComment 0x55887c392e60 <col:14, col:65> Text="       FirstString is not identical to SecondString."
|-FunctionDecl 0x55887c1251d8 <line:1838:1, line:1843:3> line:1840:1 AsciiStrStr 'CHAR8 *(const CHAR8 *, const CHAR8 *)'
| |-ParmVarDecl 0x55887c125048 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1841:25> col:25 String 'const CHAR8 *'
| |-ParmVarDecl 0x55887c1250c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1842:25> col:25 SearchString 'const CHAR8 *'
| `-FullComment 0x55887c3935b0 <line:1815:1, line:1835:78>
|   |-ParagraphComment 0x55887c392fd0 <line:1815:1, line:1816:36>
|   | |-TextComment 0x55887c392f80 <line:1815:1, col:68> Text="  Returns the first occurrence of a Null-terminated ASCII sub-string"
|   | `-TextComment 0x55887c392fa0 <line:1816:1, col:36> Text="  in a Null-terminated ASCII string."
|   |-ParagraphComment 0x55887c393090 <line:1818:1, line:1821:26>
|   | |-TextComment 0x55887c392ff0 <line:1818:1, col:74> Text="  This function scans the contents of the ASCII string specified by String"
|   | |-TextComment 0x55887c393010 <line:1819:1, col:74> Text="  and returns the first occurrence of SearchString. If SearchString is not"
|   | |-TextComment 0x55887c393030 <line:1820:1, col:80> Text="  found in String, then NULL is returned. If the length of SearchString is zero,"
|   | `-TextComment 0x55887c393050 <line:1821:1, col:26> Text="  then String is returned."
|   |-ParagraphComment 0x55887c393100 <line:1823:1, line:1824:41>
|   | |-TextComment 0x55887c3930b0 <line:1823:1, col:35> Text="  If String is NULL, then ASSERT()."
|   | `-TextComment 0x55887c3930d0 <line:1824:1, col:41> Text="  If SearchString is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3931a0 <line:1826:1, line:1828:51>
|   | |-TextComment 0x55887c393120 <line:1826:1, col:65> Text="  If PcdMaximumAsciiStringLength is not zero, and SearchString or"
|   | |-TextComment 0x55887c393140 <line:1827:1, col:74> Text="  String contains more than PcdMaximumAsciiStringLength Unicode characters"
|   | `-TextComment 0x55887c393160 <line:1828:1, col:51> Text="  not including the Null-terminator, then ASSERT()."
|   |-ParagraphComment 0x55887c3931f0 <line:1830:1, col:2>
|   | `-TextComment 0x55887c3931c0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c393210 <col:3, line:1831:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c3932c0 <line:1830:17, line:1831:2>
|   |   |-TextComment 0x55887c393270 <line:1830:17, col:72> Text="          The pointer to a Null-terminated ASCII string."
|   |   `-TextComment 0x55887c393290 <line:1831:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3932e0 <col:3, col:86> [in] implicitly Param="SearchString" ParamIndex=1
|   | `-ParagraphComment 0x55887c393370 <col:23, col:86>
|   |   `-TextComment 0x55887c393340 <col:23, col:86> Text="    The pointer to a Null-terminated ASCII string to search for."
|   |-ParagraphComment 0x55887c3933c0 <line:1833:1, col:2>
|   | `-TextComment 0x55887c393390 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3933e0 <col:3, line:1834:2> Name="retval" Arg[0]="NULL"
|   | `-ParagraphComment 0x55887c393480 <line:1833:15, line:1834:2>
|   |   |-TextComment 0x55887c393430 <line:1833:15, col:72> Text="            If the SearchString does not appear in String."
|   |   `-TextComment 0x55887c393450 <line:1834:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3934a0 <col:3, line:1835:78> Name="retval" Arg[0]="others"
|     `-ParagraphComment 0x55887c393540 <line:1834:17, line:1835:78>
|       |-TextComment 0x55887c3934f0 <line:1834:17, col:93> Text="          If there is a match return the first occurrence of SearchingString."
|       `-TextComment 0x55887c393510 <line:1835:1, col:78> Text="                          If the length of SearchString is zero,return String."
|-FunctionDecl 0x55887c125358 <line:1875:1, line:1879:3> line:1877:1 AsciiStrDecimalToUintn 'UINTN (const CHAR8 *)'
| |-ParmVarDecl 0x55887c1252c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1878:25> col:25 String 'const CHAR8 *'
| `-FullComment 0x55887c393c10 <line:1846:1, line:1872:43>
|   |-ParagraphComment 0x55887c393670 <line:1846:1, line:1847:8>
|   | |-TextComment 0x55887c393620 <line:1846:1, col:67> Text="  Convert a Null-terminated ASCII decimal string to a value of type"
|   | `-TextComment 0x55887c393640 <line:1847:1, col:8> Text="  UINTN."
|   |-ParagraphComment 0x55887c393710 <line:1849:1, line:1851:25>
|   | |-TextComment 0x55887c393690 <line:1849:1, col:74> Text="  This function returns a value of type UINTN by interpreting the contents"
|   | |-TextComment 0x55887c3936b0 <line:1850:1, col:73> Text="  of the ASCII string String as a decimal number. The format of the input"
|   | `-TextComment 0x55887c3936d0 <line:1851:1, col:25> Text="  ASCII string String is:"
|   |-ParagraphComment 0x55887c393760 <line:1853:1, col:46>
|   | `-TextComment 0x55887c393730 <col:1, col:46> Text="                    [spaces] [decimal digits]."
|   |-ParagraphComment 0x55887c393850 <line:1855:1, line:1859:44>
|   | |-TextComment 0x55887c393780 <line:1855:1, col:76> Text="  The valid decimal digit character is in the range [0-9]. The function will"
|   | |-TextComment 0x55887c3937a0 <line:1856:1, col:83> Text="  ignore the pad space, which includes spaces or tab characters, before the digits."
|   | |-TextComment 0x55887c3937c0 <line:1857:1, col:82> Text="  The running zero in the beginning of [decimal digits] will be ignored. Then, the"
|   | |-TextComment 0x55887c3937e0 <line:1858:1, col:82> Text="  function stops at the first character that is a not a valid decimal character or"
|   | `-TextComment 0x55887c393800 <line:1859:1, col:44> Text="  Null-terminator, whichever on comes first."
|   |-ParagraphComment 0x55887c3939b0 <line:1861:1, line:1868:16>
|   | |-TextComment 0x55887c393870 <line:1861:1, col:52> Text="  If String has only pad spaces, then 0 is returned."
|   | |-TextComment 0x55887c393890 <line:1862:1, col:74> Text="  If String has no pad spaces or valid decimal digits, then 0 is returned."
|   | |-TextComment 0x55887c3938b0 <line:1863:1, col:81> Text="  If the number represented by String overflows according to the range defined by"
|   | |-TextComment 0x55887c3938d0 <line:1864:1, col:36> Text="  UINTN, then MAX_UINTN is returned."
|   | |-TextComment 0x55887c3938f0 <line:1865:1, col:35> Text="  If String is NULL, then ASSERT()."
|   | |-TextComment 0x55887c393910 <line:1866:1, col:75> Text="  If PcdMaximumAsciiStringLength is not zero, and String contains more than"
|   | |-TextComment 0x55887c393930 <line:1867:1, col:81> Text="  PcdMaximumAsciiStringLength ASCII characters not including the Null-terminator,"
|   | `-TextComment 0x55887c393950 <line:1868:1, col:16> Text="  then ASSERT()."
|   |-ParagraphComment 0x55887c393a00 <line:1870:1, col:2>
|   | `-TextComment 0x55887c3939d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c393a20 <col:3, col:72> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c393ab0 <col:17, col:72>
|   |   `-TextComment 0x55887c393a80 <col:17, col:72> Text="          The pointer to a Null-terminated ASCII string."
|   |-ParagraphComment 0x55887c393b00 <line:1872:1, col:2>
|   | `-TextComment 0x55887c393ad0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c393b20 <col:3, col:43> Name="retval" Arg[0]="The"
|     `-ParagraphComment 0x55887c393ba0 <col:14, col:43>
|       `-TextComment 0x55887c393b70 <col:14, col:43> Text=" value translated from String."
|-FunctionDecl 0x55887c1254f8 <line:1911:1, line:1915:3> line:1913:1 AsciiStrDecimalToUint64 'UINT64 (const CHAR8 *)'
| |-ParmVarDecl 0x55887c125438 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1914:25> col:25 String 'const CHAR8 *'
| `-FullComment 0x55887c394270 <line:1882:1, line:1908:39>
|   |-ParagraphComment 0x55887c393cd0 <line:1882:1, line:1883:9>
|   | |-TextComment 0x55887c393c80 <line:1882:1, col:67> Text="  Convert a Null-terminated ASCII decimal string to a value of type"
|   | `-TextComment 0x55887c393ca0 <line:1883:1, col:9> Text="  UINT64."
|   |-ParagraphComment 0x55887c393d70 <line:1885:1, line:1887:25>
|   | |-TextComment 0x55887c393cf0 <line:1885:1, col:75> Text="  This function returns a value of type UINT64 by interpreting the contents"
|   | |-TextComment 0x55887c393d10 <line:1886:1, col:73> Text="  of the ASCII string String as a decimal number. The format of the input"
|   | `-TextComment 0x55887c393d30 <line:1887:1, col:25> Text="  ASCII string String is:"
|   |-ParagraphComment 0x55887c393dc0 <line:1889:1, col:46>
|   | `-TextComment 0x55887c393d90 <col:1, col:46> Text="                    [spaces] [decimal digits]."
|   |-ParagraphComment 0x55887c393eb0 <line:1891:1, line:1895:44>
|   | |-TextComment 0x55887c393de0 <line:1891:1, col:76> Text="  The valid decimal digit character is in the range [0-9]. The function will"
|   | |-TextComment 0x55887c393e00 <line:1892:1, col:83> Text="  ignore the pad space, which includes spaces or tab characters, before the digits."
|   | |-TextComment 0x55887c393e20 <line:1893:1, col:82> Text="  The running zero in the beginning of [decimal digits] will be ignored. Then, the"
|   | |-TextComment 0x55887c393e40 <line:1894:1, col:82> Text="  function stops at the first character that is a not a valid decimal character or"
|   | `-TextComment 0x55887c393e60 <line:1895:1, col:44> Text="  Null-terminator, whichever on comes first."
|   |-ParagraphComment 0x55887c394010 <line:1897:1, line:1904:16>
|   | |-TextComment 0x55887c393ed0 <line:1897:1, col:52> Text="  If String has only pad spaces, then 0 is returned."
|   | |-TextComment 0x55887c393ef0 <line:1898:1, col:74> Text="  If String has no pad spaces or valid decimal digits, then 0 is returned."
|   | |-TextComment 0x55887c393f10 <line:1899:1, col:81> Text="  If the number represented by String overflows according to the range defined by"
|   | |-TextComment 0x55887c393f30 <line:1900:1, col:38> Text="  UINT64, then MAX_UINT64 is returned."
|   | |-TextComment 0x55887c393f50 <line:1901:1, col:35> Text="  If String is NULL, then ASSERT()."
|   | |-TextComment 0x55887c393f70 <line:1902:1, col:75> Text="  If PcdMaximumAsciiStringLength is not zero, and String contains more than"
|   | |-TextComment 0x55887c393f90 <line:1903:1, col:81> Text="  PcdMaximumAsciiStringLength ASCII characters not including the Null-terminator,"
|   | `-TextComment 0x55887c393fb0 <line:1904:1, col:16> Text="  then ASSERT()."
|   |-ParagraphComment 0x55887c394060 <line:1906:1, col:2>
|   | `-TextComment 0x55887c394030 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c394080 <col:3, col:72> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c394110 <col:17, col:72>
|   |   `-TextComment 0x55887c3940e0 <col:17, col:72> Text="          The pointer to a Null-terminated ASCII string."
|   |-ParagraphComment 0x55887c394160 <line:1908:1, col:2>
|   | `-TextComment 0x55887c394130 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c394180 <col:3, col:39> Name="retval" Arg[0]="Value"
|     `-ParagraphComment 0x55887c394200 <col:16, col:39>
|       `-TextComment 0x55887c3941d0 <col:16, col:39> Text=" translated from String."
|-FunctionDecl 0x55887c125680 <line:1951:1, line:1955:3> line:1953:1 AsciiStrHexToUintn 'UINTN (const CHAR8 *)'
| |-ParmVarDecl 0x55887c1255d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1954:25> col:25 String 'const CHAR8 *'
| `-FullComment 0x55887c394970 <line:1918:1, line:1948:39>
|   |-ParagraphComment 0x55887c394310 <line:1918:1, col:78>
|   | `-TextComment 0x55887c3942e0 <col:1, col:78> Text="  Convert a Null-terminated ASCII hexadecimal string to a value of type UINTN."
|   |-ParagraphComment 0x55887c3943b0 <line:1920:1, line:1922:19>
|   | |-TextComment 0x55887c394330 <line:1920:1, col:77> Text="  This function returns a value of type UINTN by interpreting the contents of"
|   | |-TextComment 0x55887c394350 <line:1921:1, col:80> Text="  the ASCII string String as a hexadecimal number. The format of the input ASCII"
|   | `-TextComment 0x55887c394370 <line:1922:1, col:19> Text="  string String is:"
|   |-ParagraphComment 0x55887c394400 <line:1924:1, col:57>
|   | `-TextComment 0x55887c3943d0 <col:1, col:57> Text="                  [spaces][zeros][x][hexadecimal digits]."
|   |-ParagraphComment 0x55887c394560 <line:1926:1, line:1933:69>
|   | |-TextComment 0x55887c394420 <line:1926:1, col:79> Text="  The valid hexadecimal digit character is in the range [0-9], [a-f] and [A-F]."
|   | |-TextComment 0x55887c394440 <line:1927:1, col:81> Text="  The prefix "0x" is optional. Both "x" and "X" is allowed in "0x" prefix. If "x""
|   | |-TextComment 0x55887c394460 <line:1928:1, col:84> Text="  appears in the input string, it must be prefixed with at least one 0. The function"
|   | |-TextComment 0x55887c394480 <line:1929:1, col:85> Text="  will ignore the pad space, which includes spaces or tab characters, before [zeros],"
|   | |-TextComment 0x55887c3944a0 <line:1930:1, col:82> Text="  [x] or [hexadecimal digits]. The running zero before [x] or [hexadecimal digits]"
|   | |-TextComment 0x55887c3944c0 <line:1931:1, col:85> Text="  will be ignored. Then, the decoding starts after [x] or the first valid hexadecimal"
|   | |-TextComment 0x55887c3944e0 <line:1932:1, col:78> Text="  digit. Then, the function stops at the first character that is a not a valid"
|   | `-TextComment 0x55887c394500 <line:1933:1, col:69> Text="  hexadecimal character or Null-terminator, whichever on comes first."
|   |-ParagraphComment 0x55887c394600 <line:1935:1, line:1937:16>
|   | |-TextComment 0x55887c394580 <line:1935:1, col:52> Text="  If String has only pad spaces, then 0 is returned."
|   | |-TextComment 0x55887c3945a0 <line:1936:1, col:86> Text="  If String has no leading pad spaces, leading zeros or valid hexadecimal digits, then"
|   | `-TextComment 0x55887c3945c0 <line:1937:1, col:16> Text="  0 is returned."
|   |-ParagraphComment 0x55887c394710 <line:1939:1, line:1944:37>
|   | |-TextComment 0x55887c394620 <line:1939:1, col:88> Text="  If the number represented by String overflows according to the range defined by UINTN,"
|   | |-TextComment 0x55887c394640 <line:1940:1, col:29> Text="  then MAX_UINTN is returned."
|   | |-TextComment 0x55887c394660 <line:1941:1, col:35> Text="  If String is NULL, then ASSERT()."
|   | |-TextComment 0x55887c394680 <line:1942:1, col:45> Text="  If PcdMaximumAsciiStringLength is not zero,"
|   | |-TextComment 0x55887c3946a0 <line:1943:1, col:90> Text="  and String contains more than PcdMaximumAsciiStringLength ASCII characters not including"
|   | `-TextComment 0x55887c3946c0 <line:1944:1, col:37> Text="  the Null-terminator, then ASSERT()."
|   |-ParagraphComment 0x55887c394760 <line:1946:1, col:2>
|   | `-TextComment 0x55887c394730 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c394780 <col:3, col:72> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c394810 <col:17, col:72>
|   |   `-TextComment 0x55887c3947e0 <col:17, col:72> Text="          The pointer to a Null-terminated ASCII string."
|   |-ParagraphComment 0x55887c394860 <line:1948:1, col:2>
|   | `-TextComment 0x55887c394830 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c394880 <col:3, col:39> Name="retval" Arg[0]="Value"
|     `-ParagraphComment 0x55887c394900 <col:16, col:39>
|       `-TextComment 0x55887c3948d0 <col:16, col:39> Text=" translated from String."
|-FunctionDecl 0x55887c1257f8 <line:1991:1, line:1995:3> line:1993:1 AsciiStrHexToUint64 'UINT64 (const CHAR8 *)'
| |-ParmVarDecl 0x55887c125768 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:1994:25> col:25 String 'const CHAR8 *'
| `-FullComment 0x55887c395070 <line:1958:1, line:1988:39>
|   |-ParagraphComment 0x55887c394a10 <line:1958:1, col:79>
|   | `-TextComment 0x55887c3949e0 <col:1, col:79> Text="  Convert a Null-terminated ASCII hexadecimal string to a value of type UINT64."
|   |-ParagraphComment 0x55887c394ab0 <line:1960:1, line:1962:19>
|   | |-TextComment 0x55887c394a30 <line:1960:1, col:78> Text="  This function returns a value of type UINT64 by interpreting the contents of"
|   | |-TextComment 0x55887c394a50 <line:1961:1, col:80> Text="  the ASCII string String as a hexadecimal number. The format of the input ASCII"
|   | `-TextComment 0x55887c394a70 <line:1962:1, col:19> Text="  string String is:"
|   |-ParagraphComment 0x55887c394b00 <line:1964:1, col:57>
|   | `-TextComment 0x55887c394ad0 <col:1, col:57> Text="                  [spaces][zeros][x][hexadecimal digits]."
|   |-ParagraphComment 0x55887c394c60 <line:1966:1, line:1973:69>
|   | |-TextComment 0x55887c394b20 <line:1966:1, col:79> Text="  The valid hexadecimal digit character is in the range [0-9], [a-f] and [A-F]."
|   | |-TextComment 0x55887c394b40 <line:1967:1, col:81> Text="  The prefix "0x" is optional. Both "x" and "X" is allowed in "0x" prefix. If "x""
|   | |-TextComment 0x55887c394b60 <line:1968:1, col:84> Text="  appears in the input string, it must be prefixed with at least one 0. The function"
|   | |-TextComment 0x55887c394b80 <line:1969:1, col:85> Text="  will ignore the pad space, which includes spaces or tab characters, before [zeros],"
|   | |-TextComment 0x55887c394ba0 <line:1970:1, col:82> Text="  [x] or [hexadecimal digits]. The running zero before [x] or [hexadecimal digits]"
|   | |-TextComment 0x55887c394bc0 <line:1971:1, col:85> Text="  will be ignored. Then, the decoding starts after [x] or the first valid hexadecimal"
|   | |-TextComment 0x55887c394be0 <line:1972:1, col:78> Text="  digit. Then, the function stops at the first character that is a not a valid"
|   | `-TextComment 0x55887c394c00 <line:1973:1, col:69> Text="  hexadecimal character or Null-terminator, whichever on comes first."
|   |-ParagraphComment 0x55887c394d00 <line:1975:1, line:1977:16>
|   | |-TextComment 0x55887c394c80 <line:1975:1, col:52> Text="  If String has only pad spaces, then 0 is returned."
|   | |-TextComment 0x55887c394ca0 <line:1976:1, col:86> Text="  If String has no leading pad spaces, leading zeros or valid hexadecimal digits, then"
|   | `-TextComment 0x55887c394cc0 <line:1977:1, col:16> Text="  0 is returned."
|   |-ParagraphComment 0x55887c394e10 <line:1979:1, line:1984:37>
|   | |-TextComment 0x55887c394d20 <line:1979:1, col:89> Text="  If the number represented by String overflows according to the range defined by UINT64,"
|   | |-TextComment 0x55887c394d40 <line:1980:1, col:30> Text="  then MAX_UINT64 is returned."
|   | |-TextComment 0x55887c394d60 <line:1981:1, col:35> Text="  If String is NULL, then ASSERT()."
|   | |-TextComment 0x55887c394d80 <line:1982:1, col:45> Text="  If PcdMaximumAsciiStringLength is not zero,"
|   | |-TextComment 0x55887c394da0 <line:1983:1, col:90> Text="  and String contains more than PcdMaximumAsciiStringLength ASCII characters not including"
|   | `-TextComment 0x55887c394dc0 <line:1984:1, col:37> Text="  the Null-terminator, then ASSERT()."
|   |-ParagraphComment 0x55887c394e60 <line:1986:1, col:2>
|   | `-TextComment 0x55887c394e30 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c394e80 <col:3, col:72> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c394f10 <col:17, col:72>
|   |   `-TextComment 0x55887c394ee0 <col:17, col:72> Text="          The pointer to a Null-terminated ASCII string."
|   |-ParagraphComment 0x55887c394f60 <line:1988:1, col:2>
|   | `-TextComment 0x55887c394f30 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c394f80 <col:3, col:39> Name="retval" Arg[0]="Value"
|     `-ParagraphComment 0x55887c395000 <col:16, col:39>
|       `-TextComment 0x55887c394fd0 <col:16, col:39> Text=" translated from String."
|-FunctionDecl 0x55887c125b88 <line:2045:1, line:2052:3> line:2047:1 AsciiStrToIpv6Address 'RETURN_STATUS (const CHAR8 *, CHAR8 **, IPv6_ADDRESS *, UINT8 *)'
| |-ParmVarDecl 0x55887c1258d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2048:22> col:22 String 'const CHAR8 *'
| |-ParmVarDecl 0x55887c125958 <line:2049:7, col:23> col:23 EndPointer 'CHAR8 **'
| |-ParmVarDecl 0x55887c1259d0 <line:2050:7, col:22> col:22 Address 'IPv6_ADDRESS *'
| |-ParmVarDecl 0x55887c125a48 <line:2051:7, col:22> col:22 PrefixLength 'UINT8 *'
| `-FullComment 0x55887c395d20 <line:1998:1, line:2042:48>
|   |-ParagraphComment 0x55887c395110 <line:1998:1, col:75>
|   | `-TextComment 0x55887c3950e0 <col:1, col:75> Text="  Convert a Null-terminated ASCII string to IPv6 address and prefix length."
|   |-ParagraphComment 0x55887c3951b0 <line:2000:1, line:2002:71>
|   | |-TextComment 0x55887c395130 <line:2000:1, col:75> Text="  This function outputs a value of type IPv6_ADDRESS and may output a value"
|   | |-TextComment 0x55887c395150 <line:2001:1, col:74> Text="  of type UINT8 by interpreting the contents of the ASCII string specified"
|   | `-TextComment 0x55887c395170 <line:2002:1, col:71> Text="  by String. The format of the input ASCII string String is as follows:"
|   |-ParagraphComment 0x55887c395200 <line:2004:1, col:37>
|   | `-TextComment 0x55887c3951d0 <col:1, col:37> Text="                  X:X:X:X:X:X:X:X[/P]"
|   |-ParagraphComment 0x55887c3952f0 <line:2006:1, line:2010:29>
|   | |-TextComment 0x55887c395220 <line:2006:1, col:83> Text="  X contains one to four hexadecimal digit characters in the range [0-9], [a-f] and"
|   | |-TextComment 0x55887c395240 <line:2007:1, col:82> Text="  [A-F]. X is converted to a value of type UINT16, whose low byte is stored in low"
|   | |-TextComment 0x55887c395260 <line:2008:1, col:83> Text="  memory address and high byte is stored in high memory address. P contains decimal"
|   | |-TextComment 0x55887c395280 <line:2009:1, col:82> Text="  digit characters in the range [0-9]. The running zero in the beginning of P will"
|   | `-TextComment 0x55887c3952a0 <line:2010:1, col:29> Text="  be ignored. /P is optional."
|   |-ParagraphComment 0x55887c395360 <line:2012:1, line:2013:72>
|   | |-TextComment 0x55887c395310 <line:2012:1, col:81> Text="  When /P is not in the String, the function stops at the first character that is"
|   | `-TextComment 0x55887c395330 <line:2013:1, col:72> Text="  not a valid hexadecimal digit character after eight X's are converted."
|   |-ParagraphComment 0x55887c3953d0 <line:2015:1, line:2016:55>
|   | |-TextComment 0x55887c395380 <line:2015:1, col:81> Text="  When /P is in the String, the function stops at the first character that is not"
|   | `-TextComment 0x55887c3953a0 <line:2016:1, col:55> Text="  a valid decimal digit character after P is converted."
|   |-ParagraphComment 0x55887c395440 <line:2018:1, line:2019:46>
|   | |-TextComment 0x55887c3953f0 <line:2018:1, col:78> Text="  "::" can be used to compress one or more groups of X when X contains only 0."
|   | `-TextComment 0x55887c395410 <line:2019:1, col:46> Text="  The "::" can only appear once in the String."
|   |-ParagraphComment 0x55887c3954e0 <line:2021:1, line:2023:16>
|   | |-TextComment 0x55887c395460 <line:2021:1, col:76> Text="  If EndPointer is not NULL and Address is translated from String, a pointer"
|   | |-TextComment 0x55887c395480 <line:2022:1, col:77> Text="  to the character that stopped the scan is stored at the location pointed to"
|   | `-TextComment 0x55887c3954a0 <line:2023:1, col:16> Text="  by EndPointer."
|   |-ParagraphComment 0x55887c395530 <line:2025:1, col:2>
|   | `-TextComment 0x55887c395500 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c395550 <col:3, line:2026:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c395600 <line:2025:17, line:2026:2>
|   |   |-TextComment 0x55887c3955b0 <line:2025:17, col:77> Text="                   Pointer to a Null-terminated ASCII string."
|   |   `-TextComment 0x55887c3955d0 <line:2026:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c395620 <col:3, line:2027:2> [in] implicitly Param="EndPointer" ParamIndex=1
|   | `-ParagraphComment 0x55887c3956d0 <line:2026:21, line:2027:2>
|   |   |-TextComment 0x55887c395680 <line:2026:21, col:72> Text="               Pointer to character that stops scan."
|   |   `-TextComment 0x55887c3956a0 <line:2027:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3956f0 <col:3, line:2028:2> [in] implicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c3957a0 <line:2027:18, line:2028:2>
|   |   |-TextComment 0x55887c395750 <line:2027:18, col:73> Text="                  Pointer to the converted IPv6 address."
|   |   `-TextComment 0x55887c395770 <line:2028:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3957c0 <col:3, line:2030:53> [in] implicitly Param="PrefixLength" ParamIndex=3
|   | `-ParagraphComment 0x55887c3958a0 <line:2028:23, line:2030:53>
|   |   |-TextComment 0x55887c395820 <line:2028:23, col:79> Text="             Pointer to the converted IPv6 address prefix"
|   |   |-TextComment 0x55887c395840 <line:2029:1, col:75> Text="                                   length. MAX_UINT8 is returned when /P is"
|   |   `-TextComment 0x55887c395860 <line:2030:1, col:53> Text="                                   not in the String."
|   |-ParagraphComment 0x55887c3958f0 <line:2032:1, col:2>
|   | `-TextComment 0x55887c3958c0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c395910 <col:3, line:2033:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c3959b0 <line:2032:25, line:2033:2>
|   |   |-TextComment 0x55887c395960 <line:2032:25, col:69> Text="           Address is translated from String."
|   |   `-TextComment 0x55887c395980 <line:2033:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3959d0 <col:3, line:2035:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c395ab0 <line:2033:35, line:2035:2>
|   |   |-TextComment 0x55887c395a30 <line:2033:35, col:53> Text=" If String is NULL."
|   |   |-TextComment 0x55887c395a50 <line:2034:1, col:51> Text="                                   If Data is NULL."
|   |   `-TextComment 0x55887c395a70 <line:2035:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c395ad0 <col:3, line:2042:48> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|     `-ParagraphComment 0x55887c395c70 <line:2035:29, line:2042:48>
|       |-TextComment 0x55887c395b30 <line:2035:29, col:75> Text="       If X contains more than four hexadecimal"
|       |-TextComment 0x55887c395b50 <line:2036:1, col:53> Text="                                    digit characters."
|       |-TextComment 0x55887c395b70 <line:2037:1, col:74> Text="                                   If String contains "::" and number of X"
|       |-TextComment 0x55887c395b90 <line:2038:1, col:55> Text="                                    is not less than 8."
|       |-TextComment 0x55887c395bb0 <line:2039:1, col:75> Text="                                   If P starts with character that is not a"
|       |-TextComment 0x55887c395bd0 <line:2040:1, col:66> Text="                                    valid decimal digit character."
|       |-TextComment 0x55887c395bf0 <line:2041:1, col:73> Text="                                   If the decimal number converted from P"
|       `-TextComment 0x55887c395c10 <line:2042:1, col:48> Text="                                    exceeds 128."
|-FunctionDecl 0x55887c125f38 <line:2093:1, line:2100:3> line:2095:1 AsciiStrToIpv4Address 'RETURN_STATUS (const CHAR8 *, CHAR8 **, IPv4_ADDRESS *, UINT8 *)'
| |-ParmVarDecl 0x55887c125c88 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2096:22> col:22 String 'const CHAR8 *'
| |-ParmVarDecl 0x55887c125d08 <line:2097:7, col:23> col:23 EndPointer 'CHAR8 **'
| |-ParmVarDecl 0x55887c125d80 <line:2098:7, col:22> col:22 Address 'IPv4_ADDRESS *'
| |-ParmVarDecl 0x55887c125df8 <line:2099:7, col:22> col:22 PrefixLength 'UINT8 *'
| `-FullComment 0x55887c396860 <line:2055:1, line:2090:47>
|   |-ParagraphComment 0x55887c395dc0 <line:2055:1, col:75>
|   | `-TextComment 0x55887c395d90 <col:1, col:75> Text="  Convert a Null-terminated ASCII string to IPv4 address and prefix length."
|   |-ParagraphComment 0x55887c395e60 <line:2057:1, line:2059:71>
|   | |-TextComment 0x55887c395de0 <line:2057:1, col:75> Text="  This function outputs a value of type IPv4_ADDRESS and may output a value"
|   | |-TextComment 0x55887c395e00 <line:2058:1, col:74> Text="  of type UINT8 by interpreting the contents of the ASCII string specified"
|   | `-TextComment 0x55887c395e20 <line:2059:1, col:71> Text="  by String. The format of the input ASCII string String is as follows:"
|   |-ParagraphComment 0x55887c395eb0 <line:2061:1, col:29>
|   | `-TextComment 0x55887c395e80 <col:1, col:29> Text="                  D.D.D.D[/P]"
|   |-ParagraphComment 0x55887c395f20 <line:2063:1, line:2064:59>
|   | |-TextComment 0x55887c395ed0 <line:2063:1, col:78> Text="  D and P are decimal digit characters in the range [0-9]. The running zero in"
|   | `-TextComment 0x55887c395ef0 <line:2064:1, col:59> Text="  the beginning of D and P will be ignored. /P is optional."
|   |-ParagraphComment 0x55887c395f90 <line:2066:1, line:2067:67>
|   | |-TextComment 0x55887c395f40 <line:2066:1, col:81> Text="  When /P is not in the String, the function stops at the first character that is"
|   | `-TextComment 0x55887c395f60 <line:2067:1, col:67> Text="  not a valid decimal digit character after four D's are converted."
|   |-ParagraphComment 0x55887c396000 <line:2069:1, line:2070:55>
|   | |-TextComment 0x55887c395fb0 <line:2069:1, col:81> Text="  When /P is in the String, the function stops at the first character that is not"
|   | `-TextComment 0x55887c395fd0 <line:2070:1, col:55> Text="  a valid decimal digit character after P is converted."
|   |-ParagraphComment 0x55887c3960a0 <line:2072:1, line:2074:16>
|   | |-TextComment 0x55887c396020 <line:2072:1, col:76> Text="  If EndPointer is not NULL and Address is translated from String, a pointer"
|   | |-TextComment 0x55887c396040 <line:2073:1, col:77> Text="  to the character that stopped the scan is stored at the location pointed to"
|   | `-TextComment 0x55887c396060 <line:2074:1, col:16> Text="  by EndPointer."
|   |-ParagraphComment 0x55887c3960f0 <line:2076:1, col:2>
|   | `-TextComment 0x55887c3960c0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c396110 <col:3, line:2077:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c3961c0 <line:2076:17, line:2077:2>
|   |   |-TextComment 0x55887c396170 <line:2076:17, col:77> Text="                   Pointer to a Null-terminated ASCII string."
|   |   `-TextComment 0x55887c396190 <line:2077:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3961e0 <col:3, line:2078:2> [in] implicitly Param="EndPointer" ParamIndex=1
|   | `-ParagraphComment 0x55887c396290 <line:2077:21, line:2078:2>
|   |   |-TextComment 0x55887c396240 <line:2077:21, col:72> Text="               Pointer to character that stops scan."
|   |   `-TextComment 0x55887c396260 <line:2078:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3962b0 <col:3, line:2079:2> [in] implicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c396360 <line:2078:18, line:2079:2>
|   |   |-TextComment 0x55887c396310 <line:2078:18, col:73> Text="                  Pointer to the converted IPv4 address."
|   |   `-TextComment 0x55887c396330 <line:2079:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c396380 <col:3, line:2081:53> [in] implicitly Param="PrefixLength" ParamIndex=3
|   | `-ParagraphComment 0x55887c396460 <line:2079:23, line:2081:53>
|   |   |-TextComment 0x55887c3963e0 <line:2079:23, col:79> Text="             Pointer to the converted IPv4 address prefix"
|   |   |-TextComment 0x55887c396400 <line:2080:1, col:75> Text="                                   length. MAX_UINT8 is returned when /P is"
|   |   `-TextComment 0x55887c396420 <line:2081:1, col:53> Text="                                   not in the String."
|   |-ParagraphComment 0x55887c3964b0 <line:2083:1, col:2>
|   | `-TextComment 0x55887c396480 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3964d0 <col:3, line:2084:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c396570 <line:2083:25, line:2084:2>
|   |   |-TextComment 0x55887c396520 <line:2083:25, col:69> Text="           Address is translated from String."
|   |   `-TextComment 0x55887c396540 <line:2084:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c396590 <col:3, line:2086:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c396670 <line:2084:35, line:2086:2>
|   |   |-TextComment 0x55887c3965f0 <line:2084:35, col:53> Text=" If String is NULL."
|   |   |-TextComment 0x55887c396610 <line:2085:1, col:51> Text="                                   If Data is NULL."
|   |   `-TextComment 0x55887c396630 <line:2086:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c396690 <col:3, line:2090:47> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|     `-ParagraphComment 0x55887c3967c0 <line:2086:29, line:2090:47>
|       |-TextComment 0x55887c3966f0 <line:2086:29, col:74> Text="       If String is not in the correct format."
|       |-TextComment 0x55887c396710 <line:2087:1, col:73> Text="                                   If any decimal number converted from D"
|       |-TextComment 0x55887c396730 <line:2088:1, col:48> Text="                                    exceeds 255."
|       |-TextComment 0x55887c396750 <line:2089:1, col:73> Text="                                   If the decimal number converted from P"
|       `-TextComment 0x55887c396770 <line:2090:1, col:47> Text="                                    exceeds 32."
|-FunctionDecl 0x55887c1261c8 <line:2142:1, line:2147:3> line:2144:1 AsciiStrToGuid 'RETURN_STATUS (const CHAR8 *, GUID *)'
| |-ParmVarDecl 0x55887c126038 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2145:21> col:21 String 'const CHAR8 *'
| |-ParmVarDecl 0x55887c1260b0 <line:2146:7, col:21> col:21 Guid 'GUID *'
| `-FullComment 0x55887c397280 <line:2103:1, line:2139:72>
|   |-ParagraphComment 0x55887c396920 <line:2103:1, line:2104:11>
|   | |-TextComment 0x55887c3968d0 <line:2103:1, col:64> Text="  Convert a Null-terminated ASCII GUID string to a value of type"
|   | `-TextComment 0x55887c3968f0 <line:2104:1, col:11> Text="  EFI_GUID."
|   |-ParagraphComment 0x55887c3969c0 <line:2106:1, line:2108:60>
|   | |-TextComment 0x55887c396940 <line:2106:1, col:68> Text="  This function outputs a GUID value by interpreting the contents of"
|   | |-TextComment 0x55887c396960 <line:2107:1, col:63> Text="  the ASCII string specified by String. The format of the input"
|   | `-TextComment 0x55887c396980 <line:2108:1, col:60> Text="  ASCII string String consists of 36 characters, as follows:"
|   |-ParagraphComment 0x55887c396a10 <line:2110:1, col:54>
|   | `-TextComment 0x55887c3969e0 <col:1, col:54> Text="                  aabbccdd-eeff-gghh-iijj-kkllmmnnoopp"
|   |-ParagraphComment 0x55887c396a80 <line:2112:1, line:2113:69>
|   | |-TextComment 0x55887c396a30 <line:2112:1, col:68> Text="  The pairs aa - pp are two characters in the range [0-9], [a-f] and"
|   | `-TextComment 0x55887c396a50 <line:2113:1, col:69> Text="  [A-F], with each pair representing a single byte hexadecimal value."
|   |-ParagraphComment 0x55887c396d50 <line:2115:1, line:2131:42>
|   | |-TextComment 0x55887c396aa0 <line:2115:1, col:70> Text="  The mapping between String and the EFI_GUID structure is as follows:"
|   | |-TextComment 0x55887c396ac0 <line:2116:1, col:42> Text="                  aa          Data1[24:31]"
|   | |-TextComment 0x55887c396ae0 <line:2117:1, col:42> Text="                  bb          Data1[16:23]"
|   | |-TextComment 0x55887c396b00 <line:2118:1, col:41> Text="                  cc          Data1[8:15]"
|   | |-TextComment 0x55887c396b20 <line:2119:1, col:40> Text="                  dd          Data1[0:7]"
|   | |-TextComment 0x55887c396b40 <line:2120:1, col:41> Text="                  ee          Data2[8:15]"
|   | |-TextComment 0x55887c396b60 <line:2121:1, col:40> Text="                  ff          Data2[0:7]"
|   | |-TextComment 0x55887c396b80 <line:2122:1, col:41> Text="                  gg          Data3[8:15]"
|   | |-TextComment 0x55887c396ba0 <line:2123:1, col:40> Text="                  hh          Data3[0:7]"
|   | |-TextComment 0x55887c396bc0 <line:2124:1, col:40> Text="                  ii          Data4[0:7]"
|   | |-TextComment 0x55887c396be0 <line:2125:1, col:41> Text="                  jj          Data4[8:15]"
|   | |-TextComment 0x55887c396c00 <line:2126:1, col:42> Text="                  kk          Data4[16:23]"
|   | |-TextComment 0x55887c396c20 <line:2127:1, col:42> Text="                  ll          Data4[24:31]"
|   | |-TextComment 0x55887c396c40 <line:2128:1, col:42> Text="                  mm          Data4[32:39]"
|   | |-TextComment 0x55887c396c60 <line:2129:1, col:42> Text="                  nn          Data4[40:47]"
|   | |-TextComment 0x55887c396c80 <line:2130:1, col:42> Text="                  oo          Data4[48:55]"
|   | `-TextComment 0x55887c396ca0 <line:2131:1, col:42> Text="                  pp          Data4[56:63]"
|   |-ParagraphComment 0x55887c396da0 <line:2133:1, col:2>
|   | `-TextComment 0x55887c396d70 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c396dc0 <col:3, line:2134:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c396e70 <line:2133:17, line:2134:2>
|   |   |-TextComment 0x55887c396e20 <line:2133:17, col:77> Text="                   Pointer to a Null-terminated ASCII string."
|   |   `-TextComment 0x55887c396e40 <line:2134:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c396e90 <col:3, col:65> [in] implicitly Param="Guid" ParamIndex=1
|   | `-ParagraphComment 0x55887c396f20 <col:15, col:65>
|   |   `-TextComment 0x55887c396ef0 <col:15, col:65> Text="                     Pointer to the converted GUID."
|   |-ParagraphComment 0x55887c396f90 <line:2136:1, col:2>
|   | `-TextComment 0x55887c396f40 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c396fb0 <col:3, line:2137:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c397050 <line:2136:25, line:2137:2>
|   |   |-TextComment 0x55887c397000 <line:2136:25, col:66> Text="           Guid is translated from String."
|   |   `-TextComment 0x55887c397020 <line:2137:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c397070 <col:3, line:2139:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c397150 <line:2137:35, line:2139:2>
|   |   |-TextComment 0x55887c3970d0 <line:2137:35, col:53> Text=" If String is NULL."
|   |   |-TextComment 0x55887c3970f0 <line:2138:1, col:51> Text="                                   If Data is NULL."
|   |   `-TextComment 0x55887c397110 <line:2139:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c397170 <col:3, col:72> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|     `-ParagraphComment 0x55887c397200 <col:29, col:72>
|       `-TextComment 0x55887c3971d0 <col:29, col:72> Text="       If String is not as the above format."
|-FunctionDecl 0x55887c126568 <line:2180:1, line:2187:3> line:2182:1 AsciiStrHexToBytes 'RETURN_STATUS (const CHAR8 *, UINTN, UINT8 *, UINTN)'
| |-ParmVarDecl 0x55887c1262b8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2183:21> col:21 String 'const CHAR8 *'
| |-ParmVarDecl 0x55887c126330 <line:2184:7, col:20> col:20 Length 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1263a8 <line:2185:7, col:21> col:21 Buffer 'UINT8 *'
| |-ParmVarDecl 0x55887c126420 <line:2186:7, col:20> col:20 MaxBufferSize 'UINTN':'unsigned long long'
| `-FullComment 0x55887c397d50 <line:2150:1, line:2178:78>
|   |-ParagraphComment 0x55887c397320 <line:2150:1, col:69>
|   | `-TextComment 0x55887c3972f0 <col:1, col:69> Text="  Convert a Null-terminated ASCII hexadecimal string to a byte array."
|   |-ParagraphComment 0x55887c3973c0 <line:2152:1, line:2154:35>
|   | |-TextComment 0x55887c397340 <line:2152:1, col:68> Text="  This function outputs a byte array by interpreting the contents of"
|   | |-TextComment 0x55887c397360 <line:2153:1, col:75> Text="  the ASCII string specified by String in hexadecimal format. The format of"
|   | `-TextComment 0x55887c397380 <line:2154:1, col:35> Text="  the input ASCII string String is:"
|   |-ParagraphComment 0x55887c397410 <line:2156:1, col:23>
|   | `-TextComment 0x55887c3973e0 <col:1, col:23> Text="                  [XX]*"
|   |-ParagraphComment 0x55887c3974d0 <line:2158:1, line:2161:21>
|   | |-TextComment 0x55887c397430 <line:2158:1, col:73> Text="  X is a hexadecimal digit character in the range [0-9], [a-f] and [A-F]."
|   | |-TextComment 0x55887c397450 <line:2159:1, col:78> Text="  The function decodes every two hexadecimal digit characters as one byte. The"
|   | |-TextComment 0x55887c397470 <line:2160:1, col:73> Text="  decoding stops after Length of characters and outputs Buffer containing"
|   | `-TextComment 0x55887c397490 <line:2161:1, col:21> Text="  (Length / 2) bytes."
|   |-ParagraphComment 0x55887c397520 <line:2163:1, col:2>
|   | `-TextComment 0x55887c3974f0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c397540 <col:3, line:2164:2> [in] implicitly Param="String" ParamIndex=0
|   | `-ParagraphComment 0x55887c3975f0 <line:2163:17, line:2164:2>
|   |   |-TextComment 0x55887c3975a0 <line:2163:17, col:77> Text="                   Pointer to a Null-terminated ASCII string."
|   |   `-TextComment 0x55887c3975c0 <line:2164:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c397610 <col:3, line:2165:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c3976c0 <line:2164:17, line:2165:2>
|   |   |-TextComment 0x55887c397670 <line:2164:17, col:76> Text="                   The number of ASCII characters to decode."
|   |   `-TextComment 0x55887c397690 <line:2165:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3976e0 <col:3, line:2166:2> [in] implicitly Param="Buffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c397790 <line:2165:17, line:2166:2>
|   |   |-TextComment 0x55887c397740 <line:2165:17, col:72> Text="                   Pointer to the converted bytes array."
|   |   `-TextComment 0x55887c397760 <line:2166:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3977b0 <col:3, col:62> [in] implicitly Param="MaxBufferSize" ParamIndex=3
|   | `-ParagraphComment 0x55887c397840 <col:24, col:62>
|   |   `-TextComment 0x55887c397810 <col:24, col:62> Text="            The maximum size of Buffer."
|   |-ParagraphComment 0x55887c397890 <line:2168:1, col:2>
|   | `-TextComment 0x55887c397860 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3978b0 <col:3, line:2169:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c397950 <line:2168:25, line:2169:2>
|   |   |-TextComment 0x55887c397900 <line:2168:25, col:68> Text="           Buffer is translated from String."
|   |   `-TextComment 0x55887c397920 <line:2169:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c397970 <col:3, line:2175:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c397af0 <line:2169:35, line:2175:2>
|   |   |-TextComment 0x55887c3979d0 <line:2169:35, col:53> Text=" If String is NULL."
|   |   |-TextComment 0x55887c3979f0 <line:2170:1, col:51> Text="                                   If Data is NULL."
|   |   |-TextComment 0x55887c397a10 <line:2171:1, col:66> Text="                                   If Length is not multiple of 2."
|   |   |-TextComment 0x55887c397a30 <line:2172:1, col:78> Text="                                   If PcdMaximumAsciiStringLength is not zero,"
|   |   |-TextComment 0x55887c397a50 <line:2173:1, col:62> Text="                                    and Length is greater than"
|   |   |-TextComment 0x55887c397a70 <line:2174:1, col:64> Text="                                    PcdMaximumAsciiStringLength."
|   |   `-TextComment 0x55887c397a90 <line:2175:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c397b10 <col:3, line:2178:2> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|   | `-ParagraphComment 0x55887c397c10 <line:2175:29, line:2178:2>
|   |   |-TextComment 0x55887c397b70 <line:2175:29, col:78> Text="       If Length of characters from String contain"
|   |   |-TextComment 0x55887c397b90 <line:2176:1, col:77> Text="                                    a character that is not valid hexadecimal"
|   |   |-TextComment 0x55887c397bb0 <line:2177:1, col:75> Text="                                    digit characters, or a Null-terminator."
|   |   `-TextComment 0x55887c397bd0 <line:2178:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c397c30 <col:3, col:78> Name="retval" Arg[0]="RETURN_BUFFER_TOO_SMALL"
|     `-ParagraphComment 0x55887c397cc0 <col:34, col:78>
|       `-TextComment 0x55887c397c90 <col:34, col:78> Text="  If MaxBufferSize is less than (Length / 2)."
|-FunctionDecl 0x55887c1268a8 <line:2225:1, line:2231:3> line:2227:1 AsciiStrToUnicodeStrS 'RETURN_STATUS (const CHAR8 *, CHAR16 *, UINTN)'
| |-ParmVarDecl 0x55887c126690 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2228:25> col:25 Source 'const CHAR8 *'
| |-ParmVarDecl 0x55887c126708 <line:2229:11, col:25> col:25 Destination 'CHAR16 *'
| |-ParmVarDecl 0x55887c126780 <line:2230:11, col:24> col:24 DestMax 'UINTN':'unsigned long long'
| `-FullComment 0x55887c398810 <line:2190:1, line:2222:69>
|   |-ParagraphComment 0x55887c397e10 <line:2190:1, line:2191:17>
|   | |-TextComment 0x55887c397dc0 <line:2190:1, col:63> Text="  Convert one Null-terminated ASCII string to a Null-terminated"
|   | `-TextComment 0x55887c397de0 <line:2191:1, col:17> Text="  Unicode string."
|   |-ParagraphComment 0x55887c397e60 <line:2193:1, col:38>
|   | `-TextComment 0x55887c397e30 <col:1, col:38> Text="  This function is similar to StrCpyS."
|   |-ParagraphComment 0x55887c397f00 <line:2195:1, line:2197:51>
|   | |-TextComment 0x55887c397e80 <line:2195:1, col:79> Text="  This function converts the contents of the ASCII string Source to the Unicode"
|   | |-TextComment 0x55887c397ea0 <line:2196:1, col:79> Text="  string Destination. The function terminates the Unicode string Destination by"
|   | `-TextComment 0x55887c397ec0 <line:2197:1, col:51> Text="  appending a Null-terminator character at the end."
|   |-ParagraphComment 0x55887c397f70 <line:2199:1, line:2200:80>
|   | |-TextComment 0x55887c397f20 <line:2199:1, col:81> Text="  The caller is responsible to make sure Destination points to a buffer with size"
|   | `-TextComment 0x55887c397f40 <line:2200:1, col:80> Text="  equal or greater than ((AsciiStrLen (Source) + 1) * sizeof (CHAR16)) in bytes."
|   |-ParagraphComment 0x55887c397fc0 <line:2202:1, col:68>
|   | `-TextComment 0x55887c397f90 <col:1, col:68> Text="  If Destination is not aligned on a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c398010 <line:2204:1, col:62>
|   | `-TextComment 0x55887c397fe0 <col:1, col:62> Text="  If an error is returned, then the Destination is unmodified."
|   |-ParagraphComment 0x55887c398060 <line:2206:1, col:2>
|   | `-TextComment 0x55887c398030 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c398080 <col:3, line:2207:2> [in] implicitly Param="Source" ParamIndex=0
|   | `-ParagraphComment 0x55887c398130 <line:2206:17, line:2207:2>
|   |   |-TextComment 0x55887c3980e0 <line:2206:17, col:70> Text="        The pointer to a Null-terminated ASCII string."
|   |   `-TextComment 0x55887c398100 <line:2207:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c398150 <col:3, line:2208:2> [in] implicitly Param="Destination" ParamIndex=1
|   | `-ParagraphComment 0x55887c398200 <line:2207:22, line:2208:2>
|   |   |-TextComment 0x55887c3981b0 <line:2207:22, col:72> Text="   The pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c3981d0 <line:2208:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c398220 <col:3, line:2209:62> [in] implicitly Param="DestMax" ParamIndex=2
|   | `-ParagraphComment 0x55887c3982d0 <line:2208:18, line:2209:62>
|   |   |-TextComment 0x55887c398280 <line:2208:18, col:65> Text="       The maximum number of Destination Unicode"
|   |   `-TextComment 0x55887c3982a0 <line:2209:1, col:62> Text="                        char, including terminating null char."
|   |-ParagraphComment 0x55887c398320 <line:2211:1, col:2>
|   | `-TextComment 0x55887c3982f0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c398340 <col:3, line:2212:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c3983e0 <line:2211:25, line:2212:2>
|   |   |-TextComment 0x55887c398390 <line:2211:25, col:55> Text="           String is converted."
|   |   `-TextComment 0x55887c3983b0 <line:2212:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c398400 <col:3, line:2213:2> Name="retval" Arg[0]="RETURN_BUFFER_TOO_SMALL"
|   | `-ParagraphComment 0x55887c3984b0 <line:2212:34, line:2213:2>
|   |   |-TextComment 0x55887c398460 <line:2212:34, col:81> Text="  If DestMax is NOT greater than StrLen(Source)."
|   |   `-TextComment 0x55887c398480 <line:2213:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3984d0 <col:3, line:2222:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c3986c0 <line:2213:35, line:2222:2>
|   |   |-TextComment 0x55887c398530 <line:2213:35, col:58> Text=" If Destination is NULL."
|   |   |-TextComment 0x55887c398550 <line:2214:1, col:53> Text="                                   If Source is NULL."
|   |   |-TextComment 0x55887c398570 <line:2215:1, col:80> Text="                                   If PcdMaximumUnicodeStringLength is not zero,"
|   |   |-TextComment 0x55887c398590 <line:2216:1, col:63> Text="                                    and DestMax is greater than"
|   |   |-TextComment 0x55887c3985b0 <line:2217:1, col:66> Text="                                    PcdMaximumUnicodeStringLength."
|   |   |-TextComment 0x55887c3985d0 <line:2218:1, col:78> Text="                                   If PcdMaximumAsciiStringLength is not zero,"
|   |   |-TextComment 0x55887c3985f0 <line:2219:1, col:63> Text="                                    and DestMax is greater than"
|   |   |-TextComment 0x55887c398610 <line:2220:1, col:64> Text="                                    PcdMaximumAsciiStringLength."
|   |   |-TextComment 0x55887c398630 <line:2221:1, col:51> Text="                                   If DestMax is 0."
|   |   `-TextComment 0x55887c398650 <line:2222:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3986e0 <col:3, col:69> Name="retval" Arg[0]="RETURN_ACCESS_DENIED"
|     `-ParagraphComment 0x55887c398770 <col:31, col:69>
|       `-TextComment 0x55887c398740 <col:31, col:69> Text="     If Source and Destination overlap."
|-FunctionDecl 0x55887c126cc8 <line:2275:1, line:2283:3> line:2277:1 AsciiStrnToUnicodeStrS 'RETURN_STATUS (const CHAR8 *, UINTN, CHAR16 *, UINTN, UINTN *)'
| |-ParmVarDecl 0x55887c126998 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2278:25> col:25 Source 'const CHAR8 *'
| |-ParmVarDecl 0x55887c126a10 <line:2279:11, col:24> col:24 Length 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c126a88 <line:2280:11, col:25> col:25 Destination 'CHAR16 *'
| |-ParmVarDecl 0x55887c126b00 <line:2281:11, col:24> col:24 DestMax 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c126b78 <line:2282:11, col:25> col:25 DestinationLength 'UINTN *'
| `-FullComment 0x55887c399540 <line:2234:1, line:2272:70>
|   |-ParagraphComment 0x55887c398900 <line:2234:1, line:2236:62>
|   | |-TextComment 0x55887c398880 <line:2234:1, col:75> Text="  Convert not more than Length successive characters from a Null-terminated"
|   | |-TextComment 0x55887c3988a0 <line:2235:1, col:77> Text="  Ascii string to a Null-terminated Unicode string. If no null char is copied"
|   | `-TextComment 0x55887c3988c0 <line:2236:1, col:62> Text="  from Source, then Destination[Length] is always set to null."
|   |-ParagraphComment 0x55887c3989c0 <line:2238:1, line:2241:23>
|   | |-TextComment 0x55887c398920 <line:2238:1, col:76> Text="  This function converts not more than Length successive characters from the"
|   | |-TextComment 0x55887c398940 <line:2239:1, col:69> Text="  Ascii string Source to the Unicode string Destination. The function"
|   | |-TextComment 0x55887c398960 <line:2240:1, col:74> Text="  terminates the Unicode string Destination by appending a Null-terminator"
|   | `-TextComment 0x55887c398980 <line:2241:1, col:23> Text="  character at the end."
|   |-ParagraphComment 0x55887c398a60 <line:2243:1, line:2245:69>
|   | |-TextComment 0x55887c3989e0 <line:2243:1, col:76> Text="  The caller is responsible to make sure Destination points to a buffer with"
|   | |-TextComment 0x55887c398a00 <line:2244:1, col:23> Text="  size not smaller than"
|   | `-TextComment 0x55887c398a20 <line:2245:1, col:69> Text="  ((MIN(AsciiStrLen(Source), Length) + 1) * sizeof (CHAR8)) in bytes."
|   |-ParagraphComment 0x55887c398ab0 <line:2247:1, col:68>
|   | `-TextComment 0x55887c398a80 <col:1, col:68> Text="  If Destination is not aligned on a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c398b20 <line:2249:1, line:2250:13>
|   | |-TextComment 0x55887c398ad0 <line:2249:1, col:69> Text="  If an error is returned, then Destination and DestinationLength are"
|   | `-TextComment 0x55887c398af0 <line:2250:1, col:13> Text="  unmodified."
|   |-ParagraphComment 0x55887c398b70 <line:2252:1, col:2>
|   | `-TextComment 0x55887c398b40 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c398b90 <col:3, line:2253:2> [in] implicitly Param="Source" ParamIndex=0
|   | `-ParagraphComment 0x55887c398c40 <line:2252:17, line:2253:2>
|   |   |-TextComment 0x55887c398bf0 <line:2252:17, col:75> Text="             The pointer to a Null-terminated Ascii string."
|   |   `-TextComment 0x55887c398c10 <line:2253:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c398c60 <col:3, line:2254:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c398d10 <line:2253:17, line:2254:2>
|   |   |-TextComment 0x55887c398cc0 <line:2253:17, col:79> Text="             The maximum number of Ascii characters to convert."
|   |   `-TextComment 0x55887c398ce0 <line:2254:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c398d30 <col:3, line:2255:2> [in] implicitly Param="Destination" ParamIndex=2
|   | `-ParagraphComment 0x55887c398de0 <line:2254:22, line:2255:2>
|   |   |-TextComment 0x55887c398d90 <line:2254:22, col:77> Text="        The pointer to a Null-terminated Unicode string."
|   |   `-TextComment 0x55887c398db0 <line:2255:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c398e00 <col:3, line:2257:2> [in] implicitly Param="DestMax" ParamIndex=3
|   | `-ParagraphComment 0x55887c398ee0 <line:2255:18, line:2257:2>
|   |   |-TextComment 0x55887c398e60 <line:2255:18, col:76> Text="            The maximum number of Destination Unicode char,"
|   |   |-TextComment 0x55887c398e80 <line:2256:1, col:61> Text="                             including terminating null char."
|   |   `-TextComment 0x55887c398ea0 <line:2257:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c398f00 <col:3, col:70> [in] implicitly Param="DestinationLength" ParamIndex=4
|   | `-ParagraphComment 0x55887c398fa0 <col:28, col:70>
|   |   `-TextComment 0x55887c398f70 <col:28, col:70> Text="  The number of Ascii characters converted."
|   |-ParagraphComment 0x55887c398ff0 <line:2259:1, col:2>
|   | `-TextComment 0x55887c398fc0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c399010 <col:3, line:2260:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c3990b0 <line:2259:25, line:2260:2>
|   |   |-TextComment 0x55887c399060 <line:2259:25, col:56> Text="            String is converted."
|   |   `-TextComment 0x55887c399080 <line:2260:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3990d0 <col:3, line:2270:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c3992f0 <line:2260:35, line:2270:2>
|   |   |-TextComment 0x55887c399130 <line:2260:35, col:59> Text="  If Destination is NULL."
|   |   |-TextComment 0x55887c399150 <line:2261:1, col:54> Text="                                    If Source is NULL."
|   |   |-TextComment 0x55887c399170 <line:2262:1, col:65> Text="                                    If DestinationLength is NULL."
|   |   |-TextComment 0x55887c399190 <line:2263:1, col:75> Text="                                    If PcdMaximumUnicodeStringLength is not"
|   |   |-TextComment 0x55887c3991b0 <line:2264:1, col:79> Text="                                    zero, and Length or DestMax is greater than"
|   |   |-TextComment 0x55887c3991d0 <line:2265:1, col:66> Text="                                    PcdMaximumUnicodeStringLength."
|   |   |-TextComment 0x55887c3991f0 <line:2266:1, col:79> Text="                                    If PcdMaximumAsciiStringLength is not zero,"
|   |   |-TextComment 0x55887c399210 <line:2267:1, col:73> Text="                                    and Length or DestMax is greater than"
|   |   |-TextComment 0x55887c399230 <line:2268:1, col:64> Text="                                    PcdMaximumAsciiStringLength."
|   |   |-TextComment 0x55887c399250 <line:2269:1, col:52> Text="                                    If DestMax is 0."
|   |   `-TextComment 0x55887c399270 <line:2270:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c399310 <col:3, line:2272:2> Name="retval" Arg[0]="RETURN_BUFFER_TOO_SMALL"
|   | `-ParagraphComment 0x55887c3993f0 <line:2270:34, line:2272:2>
|   |   |-TextComment 0x55887c399370 <line:2270:34, col:66> Text="   If DestMax is NOT greater than"
|   |   |-TextComment 0x55887c399390 <line:2271:1, col:69> Text="                                    MIN(AsciiStrLen(Source), Length)."
|   |   `-TextComment 0x55887c3993b0 <line:2272:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c399410 <col:3, col:70> Name="retval" Arg[0]="RETURN_ACCESS_DENIED"
|     `-ParagraphComment 0x55887c3994a0 <col:31, col:70>
|       `-TextComment 0x55887c399470 <col:31, col:70> Text="      If Source and Destination overlap."
|-FunctionDecl 0x55887c126eb8 <line:2300:1, line:2304:3> line:2302:1 CharToUpper 'CHAR16 (CHAR16)'
| |-ParmVarDecl 0x55887c126dc8 <line:2303:11, col:19> col:19 Char 'CHAR16':'unsigned short'
| `-FullComment 0x55887c3999d0 <line:2286:1, line:2297:37>
|   |-ParagraphComment 0x55887c399600 <line:2286:1, line:2287:48>
|   | |-TextComment 0x55887c3995b0 <line:2286:1, col:51> Text="  Convert a Unicode character to upper case only if"
|   | `-TextComment 0x55887c3995d0 <line:2287:1, col:48> Text="  it maps to a valid small-case ASCII character."
|   |-ParagraphComment 0x55887c3996c0 <line:2289:1, line:2292:23>
|   | |-TextComment 0x55887c399620 <line:2289:1, col:57> Text="  This internal function only deal with Unicode character"
|   | |-TextComment 0x55887c399640 <line:2290:1, col:56> Text="  which maps to a valid small-case ASCII character, i.e."
|   | |-TextComment 0x55887c399660 <line:2291:1, col:64> Text="  L'a' to L'z'. For other Unicode character, the input character"
|   | `-TextComment 0x55887c399680 <line:2292:1, col:23> Text="  is returned directly."
|   |-ParagraphComment 0x55887c399710 <line:2294:1, col:2>
|   | `-TextComment 0x55887c3996e0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c399730 <col:3, col:41> [in] implicitly Param="Char" ParamIndex=0
|   | `-ParagraphComment 0x55887c3997c0 <col:15, col:41>
|   |   `-TextComment 0x55887c399790 <col:15, col:41> Text="  The character to convert."
|   |-ParagraphComment 0x55887c399810 <line:2296:1, col:2>
|   | `-TextComment 0x55887c3997e0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c399830 <col:3, line:2297:2> Name="retval" Arg[0]="LowerCharacter"
|   | `-ParagraphComment 0x55887c3998d0 <line:2296:25, line:2297:2>
|   |   |-TextComment 0x55887c399880 <line:2296:25, col:66> Text="   If the Char is with range L'a' to L'z'."
|   |   `-TextComment 0x55887c3998a0 <line:2297:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3998f0 <col:3, col:37> Name="retval" Arg[0]="Unchanged"
|     `-ParagraphComment 0x55887c399970 <col:20, col:37>
|       `-TextComment 0x55887c399940 <col:20, col:37> Text="        Otherwise."
|-FunctionDecl 0x55887c127088 <line:2319:1, line:2323:3> line:2321:1 AsciiCharToUpper 'CHAR8 (CHAR8)'
| |-ParmVarDecl 0x55887c126f98 <line:2322:11, col:18> col:18 Chr 'CHAR8':'char'
| `-FullComment 0x55887c399db0 <line:2307:1, line:2316:48>
|   |-ParagraphComment 0x55887c399a70 <line:2307:1, col:52>
|   | `-TextComment 0x55887c399a40 <col:1, col:52> Text="  Converts a lowercase Ascii character to upper one."
|   |-ParagraphComment 0x55887c399ac0 <line:2309:1, col:69>
|   | `-TextComment 0x55887c399a90 <col:1, col:69> Text="  If Chr is lowercase Ascii character, then converts it to upper one."
|   |-ParagraphComment 0x55887c399b80 <line:2311:1, line:2312:43>
|   | |-TextComment 0x55887c399ae0 <line:2311:1, col:34> Text="  If Value >= 0xA0, then ASSERT()."
|   | |-TextComment 0x55887c399b00 <line:2312:1, col:12> Text="  If (Value "
|   | |-TextComment 0x55887c399b20 <col:13> Text="&"
|   | `-TextComment 0x55887c399b40 <col:14, col:43> Text=" 0x0F) >= 0x0A, then ASSERT()."
|   |-ParagraphComment 0x55887c399bd0 <line:2314:1, col:2>
|   | `-TextComment 0x55887c399ba0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c399bf0 <col:3, col:35> [in] implicitly Param="Chr" ParamIndex=0
|   | `-ParagraphComment 0x55887c399c80 <col:14, col:35>
|   |   `-TextComment 0x55887c399c50 <col:14, col:35> Text="   one Ascii character"
|   |-ParagraphComment 0x55887c399cd0 <line:2316:1, col:2>
|   | `-TextComment 0x55887c399ca0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c399cf0 <col:3, col:48> Name="return"
|     `-ParagraphComment 0x55887c399d50 <col:10, col:48>
|       `-TextComment 0x55887c399d20 <col:10, col:48> Text=" The uppercase value of Ascii character"
|-FunctionDecl 0x55887c127478 <line:2344:1, line:2351:3> line:2346:1 Base64Encode 'RETURN_STATUS (const UINT8 *, UINTN, CHAR8 *, UINTN *)'
| |-ParmVarDecl 0x55887c1271c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2347:21> col:21 Source 'const UINT8 *'
| |-ParmVarDecl 0x55887c127240 <line:2348:13, col:20> col:20 SourceLength 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1272b8 <line:2349:13, col:21> col:21 Destination 'CHAR8 *'
| |-ParmVarDecl 0x55887c127330 <line:2350:13, col:21> col:21 DestinationSize 'UINTN *'
| `-FullComment 0x55887c39a760 <line:2326:1, line:2341:115>
|   |-ParagraphComment 0x55887c399e50 <line:2326:1, col:72>
|   | `-TextComment 0x55887c399e20 <col:1, col:72> Text="  Convert binary data to a Base64 encoded ascii string based on RFC4648."
|   |-ParagraphComment 0x55887c399ec0 <line:2328:1, line:2329:98>
|   | |-TextComment 0x55887c399e70 <line:2328:1, col:107> Text="  Produce a Null-terminated Ascii string in the output buffer specified by Destination and DestinationSize."
|   | `-TextComment 0x55887c399e90 <line:2329:1, col:98> Text="  The Ascii string is produced by converting the data string specified by Source and SourceLength."
|   |-ParagraphComment 0x55887c399f10 <line:2331:1, col:2>
|   | `-TextComment 0x55887c399ee0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c399f30 <col:3, line:2332:2> [in] implicitly Param="Source" ParamIndex=0
|   | `-ParagraphComment 0x55887c399fe0 <line:2331:16, line:2332:2>
|   |   |-TextComment 0x55887c399f90 <line:2331:16, col:42> Text="           Input UINT8 data"
|   |   `-TextComment 0x55887c399fb0 <line:2332:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39a000 <col:3, line:2333:2> [in] implicitly Param="SourceLength" ParamIndex=1
|   | `-ParagraphComment 0x55887c39a0b0 <line:2332:22, line:2333:2>
|   |   |-TextComment 0x55887c39a060 <line:2332:22, col:55> Text="     Number of UINT8 bytes of data"
|   |   `-TextComment 0x55887c39a080 <line:2333:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39a0d0 <col:3, line:2334:2> [in] implicitly Param="Destination" ParamIndex=2
|   | `-ParagraphComment 0x55887c39a180 <line:2333:21, line:2334:2>
|   |   |-TextComment 0x55887c39a130 <line:2333:21, col:57> Text="      Pointer to output string buffer"
|   |   `-TextComment 0x55887c39a150 <line:2334:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39a1a0 <col:3, line:2335:88> [in] implicitly Param="DestinationSize" ParamIndex=3
|   | `-ParagraphComment 0x55887c39a250 <line:2334:25, line:2335:88>
|   |   |-TextComment 0x55887c39a200 <line:2334:25, col:80> Text="  Size of ascii buffer. Set to 0 to get the size needed."
|   |   `-TextComment 0x55887c39a220 <line:2335:1, col:88> Text="                          Caller is responsible for passing in buffer of DestinationSize"
|   |-ParagraphComment 0x55887c39a2a0 <line:2337:1, col:2>
|   | `-TextComment 0x55887c39a270 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c39a2c0 <col:3, line:2338:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c39a360 <line:2337:25, line:2338:2>
|   |   |-TextComment 0x55887c39a310 <line:2337:25, col:68> Text="             When ascii buffer is filled in."
|   |   `-TextComment 0x55887c39a330 <line:2338:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c39a380 <col:3, line:2339:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c39a430 <line:2338:35, line:2339:2>
|   |   |-TextComment 0x55887c39a3e0 <line:2338:35, col:82> Text="   If Source is NULL or DestinationSize is NULL."
|   |   `-TextComment 0x55887c39a400 <line:2339:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c39a450 <col:3, line:2340:2> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c39a500 <line:2339:35, line:2340:2>
|   |   |-TextComment 0x55887c39a4b0 <line:2339:35, col:122> Text="   If SourceLength or DestinationSize is bigger than (MAX_ADDRESS - (UINTN)Destination)."
|   |   `-TextComment 0x55887c39a4d0 <line:2340:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c39a520 <col:3, line:2341:2> Name="retval" Arg[0]="RETURN_BUFFER_TOO_SMALL"
|   | `-ParagraphComment 0x55887c39a620 <line:2340:34, line:2341:2>
|   |   |-TextComment 0x55887c39a580 <line:2340:34, col:81> Text="    If SourceLength is 0 and DestinationSize is "
|   |   |-TextComment 0x55887c39a5a0 <col:82> Text="<"
|   |   |-TextComment 0x55887c39a5c0 <col:83, col:84> Text="1."
|   |   `-TextComment 0x55887c39a5e0 <line:2341:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c39a640 <col:3, col:115> Name="retval" Arg[0]="RETURN_BUFFER_TOO_SMALL"
|     `-ParagraphComment 0x55887c39a6d0 <col:34, col:115>
|       `-TextComment 0x55887c39a6a0 <col:34, col:115> Text="    If Destination is NULL or DestinationSize is smaller than required buffersize."
|-FunctionDecl 0x55887c127858 <line:2435:1, line:2442:3> line:2437:1 Base64Decode 'RETURN_STATUS (const CHAR8 *, UINTN, UINT8 *, UINTN *)'
| |-ParmVarDecl 0x55887c127578 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2438:24> col:24 Source 'const CHAR8 *'
| |-ParmVarDecl 0x55887c1275f0 <line:2439:10, col:23> col:23 SourceSize 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1276a0 <line:2440:10, col:24> col:24 Destination 'UINT8 *'
| |-ParmVarDecl 0x55887c127718 <line:2441:10, col:24> col:24 DestinationSize 'UINTN *'
| `-FullComment 0x55887c39c0a0 <line:2354:1, line:2433:43>
|   |-ParagraphComment 0x55887c39a820 <line:2354:1, line:2355:10>
|   | |-TextComment 0x55887c39a7d0 <line:2354:1, col:75> Text="  Decode Base64 ASCII encoded data to 8-bit binary representation, based on"
|   | `-TextComment 0x55887c39a7f0 <line:2355:1, col:10> Text="  RFC4648."
|   |-ParagraphComment 0x55887c39a870 <line:2357:1, col:74>
|   | `-TextComment 0x55887c39a840 <col:1, col:74> Text="  Decoding occurs according to "Table 1: The Base 64 Alphabet" in RFC4648."
|   |-ParagraphComment 0x55887c39ac00 <line:2359:1, line:2365:21>
|   | |-TextComment 0x55887c39a890 <line:2359:1, col:41> Text="  Whitespace is ignored at all positions:"
|   | |-TextComment 0x55887c39a8b0 <line:2360:1, col:11> Text="  - 0x09 ('"
|   | |-InlineCommandComment 0x55887c39a900 <col:12, col:13> Name="t" RenderNormal
|   | |-TextComment 0x55887c39a920 <col:14, col:30> Text="') horizontal tab"
|   | |-TextComment 0x55887c39a940 <line:2361:1, col:11> Text="  - 0x0A ('"
|   | |-InlineCommandComment 0x55887c39a960 <col:12, col:13> Name="n" RenderNormal
|   | |-TextComment 0x55887c39a980 <col:14, col:24> Text="') new line"
|   | |-TextComment 0x55887c39a9a0 <line:2362:1, col:11> Text="  - 0x0B ('"
|   | |-InlineCommandComment 0x55887c39a9f0 <col:12, col:13> Name="v" RenderNormal
|   | |-TextComment 0x55887c39aa10 <col:14, col:28> Text="') vertical tab"
|   | |-TextComment 0x55887c39aa30 <line:2363:1, col:11> Text="  - 0x0C ('"
|   | |-InlineCommandComment 0x55887c39aa80 <col:12, col:13> Name="f" RenderNormal
|   | |-TextComment 0x55887c39aaa0 <col:14, col:25> Text="') form feed"
|   | |-TextComment 0x55887c39aac0 <line:2364:1, col:11> Text="  - 0x0D ('"
|   | |-InlineCommandComment 0x55887c39ab10 <col:12, col:13> Name="r" RenderNormal
|   | |-TextComment 0x55887c39ab30 <col:14, col:31> Text="') carriage return"
|   | `-TextComment 0x55887c39ab50 <line:2365:1, col:21> Text="  - 0x20 (' ')  space"
|   |-ParagraphComment 0x55887c39ac70 <line:2367:1, line:2368:75>
|   | |-TextComment 0x55887c39ac20 <line:2367:1, col:76> Text="  The minimum amount of required padding (with ASCII 0x3D, '=') is tolerated"
|   | `-TextComment 0x55887c39ac40 <line:2368:1, col:75> Text="  and enforced at the end of the Base64 ASCII encoded data, and only there."
|   |-ParagraphComment 0x55887c39ace0 <line:2370:1, line:2371:39>
|   | |-TextComment 0x55887c39ac90 <line:2370:1, col:73> Text="  Other characters outside of the encoding alphabet cause the function to"
|   | `-TextComment 0x55887c39acb0 <line:2371:1, col:39> Text="  reject the Base64 ASCII encoded data."
|   |-ParagraphComment 0x55887c39ad30 <line:2373:1, col:2>
|   | `-TextComment 0x55887c39ad00 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39ad50 <col:3, line:2375:39> [in] explicitly Param="Source" ParamIndex=0
|   | `-ParagraphComment 0x55887c39ae30 <line:2373:20, line:2375:39>
|   |   |-TextComment 0x55887c39adb0 <line:2373:20, col:79> Text="               Array of CHAR8 elements containing the Base64"
|   |   |-TextComment 0x55887c39add0 <line:2374:1, col:78> Text="                                  ASCII encoding. May be NULL if SourceSize is"
|   |   `-TextComment 0x55887c39adf0 <line:2375:1, col:39> Text="                                  zero."
|   |-ParagraphComment 0x55887c39ae80 <line:2377:1, col:2>
|   | `-TextComment 0x55887c39ae50 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39aea0 <col:3, col:69> [in] explicitly Param="SourceSize" ParamIndex=1
|   | `-ParagraphComment 0x55887c39af30 <col:24, col:69>
|   |   `-TextComment 0x55887c39af00 <col:24, col:69> Text="           Number of CHAR8 elements in Source."
|   |-ParagraphComment 0x55887c39afa0 <line:2379:1, col:2>
|   | `-TextComment 0x55887c39af50 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39afc0 <col:3, line:2386:67> [out] explicitly Param="Destination" ParamIndex=2
|   | `-ParagraphComment 0x55887c39b170 <line:2379:26, line:2386:67>
|   |   |-TextComment 0x55887c39b030 <line:2379:26, col:79> Text="         Array of UINT8 elements receiving the decoded"
|   |   |-TextComment 0x55887c39b050 <line:2380:1, col:79> Text="                                  8-bit binary representation. Allocated by the"
|   |   |-TextComment 0x55887c39b070 <line:2381:1, col:75> Text="                                  caller. May be NULL if DestinationSize is"
|   |   |-TextComment 0x55887c39b090 <line:2382:1, col:69> Text="                                  zero on input. If NULL, decoding is"
|   |   |-TextComment 0x55887c39b0b0 <line:2383:1, col:65> Text="                                  performed, but the 8-bit binary"
|   |   |-TextComment 0x55887c39b0d0 <line:2384:1, col:79> Text="                                  representation is not stored. If non-NULL and"
|   |   |-TextComment 0x55887c39b0f0 <line:2385:1, col:77> Text="                                  the function returns an error, the contents"
|   |   `-TextComment 0x55887c39b110 <line:2386:1, col:67> Text="                                  of Destination are indeterminate."
|   |-ParagraphComment 0x55887c39b1c0 <line:2388:1, col:2>
|   | `-TextComment 0x55887c39b190 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39b1e0 <col:3, line:2397:61> [in,out] explicitly Param="DestinationSize" ParamIndex=3
|   | `-ParagraphComment 0x55887c39b3e0 <line:2388:33, line:2397:61>
|   |   |-TextComment 0x55887c39b250 <line:2388:33, col:77> Text="  On input, the number of UINT8 elements that"
|   |   |-TextComment 0x55887c39b270 <line:2389:1, col:74> Text="                                  the caller allocated for Destination. On"
|   |   |-TextComment 0x55887c39b290 <line:2390:1, col:65> Text="                                  output, if the function returns"
|   |   |-TextComment 0x55887c39b2b0 <line:2391:1, col:76> Text="                                  RETURN_SUCCESS or RETURN_BUFFER_TOO_SMALL,"
|   |   |-TextComment 0x55887c39b2d0 <line:2392:1, col:71> Text="                                  the number of UINT8 elements that are"
|   |   |-TextComment 0x55887c39b2f0 <line:2393:1, col:72> Text="                                  required for decoding the Base64 ASCII"
|   |   |-TextComment 0x55887c39b310 <line:2394:1, col:75> Text="                                  representation. If the function returns a"
|   |   |-TextComment 0x55887c39b330 <line:2395:1, col:78> Text="                                  value different from both RETURN_SUCCESS and"
|   |   |-TextComment 0x55887c39b350 <line:2396:1, col:79> Text="                                  RETURN_BUFFER_TOO_SMALL, then DestinationSize"
|   |   `-TextComment 0x55887c39b370 <line:2397:1, col:61> Text="                                  is indeterminate on output."
|   |-ParagraphComment 0x55887c39b430 <line:2399:1, col:2>
|   | `-TextComment 0x55887c39b400 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c39b450 <col:3, line:2405:75> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c39b5c0 <line:2399:25, line:2405:75>
|   |   |-TextComment 0x55887c39b4a0 <line:2399:25, col:76> Text="            SourceSize CHAR8 elements at Source have"
|   |   |-TextComment 0x55887c39b4c0 <line:2400:1, col:77> Text="                                    been decoded to on-output DestinationSize"
|   |   |-TextComment 0x55887c39b4e0 <line:2401:1, col:76> Text="                                    UINT8 elements at Destination. Note that"
|   |   |-TextComment 0x55887c39b500 <line:2402:1, col:71> Text="                                    RETURN_SUCCESS covers the case when"
|   |   |-TextComment 0x55887c39b520 <line:2403:1, col:73> Text="                                    DestinationSize is zero on input, and"
|   |   |-TextComment 0x55887c39b540 <line:2404:1, col:72> Text="                                    Source decodes to zero bytes (due to"
|   |   `-TextComment 0x55887c39b560 <line:2405:1, col:75> Text="                                    containing at most ignored whitespace)."
|   |-ParagraphComment 0x55887c39b610 <line:2407:1, col:2>
|   | `-TextComment 0x55887c39b5e0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c39b630 <col:3, line:2411:52> Name="retval" Arg[0]="RETURN_BUFFER_TOO_SMALL"
|   | `-ParagraphComment 0x55887c39b760 <line:2407:34, line:2411:52>
|   |   |-TextComment 0x55887c39b690 <line:2407:34, col:77> Text="   The input value of DestinationSize is not"
|   |   |-TextComment 0x55887c39b6b0 <line:2408:1, col:78> Text="                                    large enough for decoding SourceSize CHAR8"
|   |   |-TextComment 0x55887c39b6d0 <line:2409:1, col:78> Text="                                    elements at Source. The required number of"
|   |   |-TextComment 0x55887c39b6f0 <line:2410:1, col:69> Text="                                    UINT8 elements has been stored to"
|   |   `-TextComment 0x55887c39b710 <line:2411:1, col:52> Text="                                    DestinationSize."
|   |-ParagraphComment 0x55887c39b7b0 <line:2413:1, col:2>
|   | `-TextComment 0x55887c39b780 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c39b7d0 <col:3, col:60> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c39b860 <col:35, col:60>
|   |   `-TextComment 0x55887c39b830 <col:35, col:60> Text="  DestinationSize is NULL."
|   |-ParagraphComment 0x55887c39b8b0 <line:2415:1, col:2>
|   | `-TextComment 0x55887c39b880 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c39b8d0 <col:3, col:79> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c39b960 <col:35, col:79>
|   |   `-TextComment 0x55887c39b930 <col:35, col:79> Text="  Source is NULL, but SourceSize is not zero."
|   |-ParagraphComment 0x55887c39b9b0 <line:2417:1, col:2>
|   | `-TextComment 0x55887c39b980 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c39b9d0 <col:3, line:2418:54> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c39ba80 <line:2417:35, line:2418:54>
|   |   |-TextComment 0x55887c39ba30 <line:2417:35, col:79> Text="  Destination is NULL, but DestinationSize is"
|   |   `-TextComment 0x55887c39ba50 <line:2418:1, col:54> Text="                                    not zero on input."
|   |-ParagraphComment 0x55887c39bad0 <line:2420:1, col:2>
|   | `-TextComment 0x55887c39baa0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c39baf0 <col:3, line:2421:78> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c39bba0 <line:2420:35, line:2421:78>
|   |   |-TextComment 0x55887c39bb50 <line:2420:35, col:69> Text="  Source is non-NULL, and (Source +"
|   |   `-TextComment 0x55887c39bb70 <line:2421:1, col:78> Text="                                    SourceSize) would wrap around MAX_ADDRESS."
|   |-ParagraphComment 0x55887c39bbf0 <line:2423:1, col:2>
|   | `-TextComment 0x55887c39bbc0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c39bc10 <col:3, line:2425:71> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c39bcf0 <line:2423:35, line:2425:71>
|   |   |-TextComment 0x55887c39bc70 <line:2423:35, col:79> Text="  Destination is non-NULL, and (Destination +"
|   |   |-TextComment 0x55887c39bc90 <line:2424:1, col:70> Text="                                    DestinationSize) would wrap around"
|   |   `-TextComment 0x55887c39bcb0 <line:2425:1, col:71> Text="                                    MAX_ADDRESS, as specified on input."
|   |-ParagraphComment 0x55887c39bd40 <line:2427:1, col:2>
|   | `-TextComment 0x55887c39bd10 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c39bd60 <col:3, line:2430:55> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c39be60 <line:2427:35, line:2430:55>
|   |   |-TextComment 0x55887c39bdc0 <line:2427:35, col:76> Text="  None of Source and Destination are NULL,"
|   |   |-TextComment 0x55887c39bde0 <line:2428:1, col:76> Text="                                    and CHAR8[SourceSize] at Source overlaps"
|   |   |-TextComment 0x55887c39be00 <line:2429:1, col:77> Text="                                    UINT8[DestinationSize] at Destination, as"
|   |   `-TextComment 0x55887c39be20 <line:2430:1, col:55> Text="                                    specified on input."
|   |-ParagraphComment 0x55887c39beb0 <line:2432:1, col:2>
|   | `-TextComment 0x55887c39be80 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c39bed0 <col:3, line:2433:43> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c39bf80 <line:2432:35, line:2433:43>
|       |-TextComment 0x55887c39bf30 <line:2432:35, col:72> Text="  Invalid CHAR8 element encountered in"
|       `-TextComment 0x55887c39bf50 <line:2433:1, col:43> Text="                                    Source."
|-FunctionDecl 0x55887c127a48 <line:2457:1, line:2461:3> line:2459:1 DecimalToBcd8 'UINT8 (UINT8)'
| |-ParmVarDecl 0x55887c127958 <line:2460:11, col:18> col:18 Value 'UINT8':'unsigned char'
| `-FullComment 0x55887c39c430 <line:2445:1, line:2454:24>
|   |-ParagraphComment 0x55887c39c140 <line:2445:1, col:48>
|   | `-TextComment 0x55887c39c110 <col:1, col:48> Text="  Converts an 8-bit value to an 8-bit BCD value."
|   |-ParagraphComment 0x55887c39c1b0 <line:2447:1, line:2448:11>
|   | |-TextComment 0x55887c39c160 <line:2447:1, col:70> Text="  Converts the 8-bit value specified by Value to BCD. The BCD value is"
|   | `-TextComment 0x55887c39c180 <line:2448:1, col:11> Text="  returned."
|   |-ParagraphComment 0x55887c39c200 <line:2450:1, col:33>
|   | `-TextComment 0x55887c39c1d0 <col:1, col:33> Text="  If Value >= 100, then ASSERT()."
|   |-ParagraphComment 0x55887c39c250 <line:2452:1, col:2>
|   | `-TextComment 0x55887c39c220 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39c270 <col:3, col:63> [in] implicitly Param="Value" ParamIndex=0
|   | `-ParagraphComment 0x55887c39c300 <col:16, col:63>
|   |   `-TextComment 0x55887c39c2d0 <col:16, col:63> Text=" The 8-bit value to convert to BCD. Range 0..99."
|   |-ParagraphComment 0x55887c39c350 <line:2454:1, col:2>
|   | `-TextComment 0x55887c39c320 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c39c370 <col:3, col:24> Name="return"
|     `-ParagraphComment 0x55887c39c3d0 <col:10, col:24>
|       `-TextComment 0x55887c39c3a0 <col:10, col:24> Text=" The BCD value."
|-FunctionDecl 0x55887c127bb8 <line:2477:1, line:2481:3> line:2479:1 BcdToDecimal8 'UINT8 (UINT8)'
| |-ParmVarDecl 0x55887c127b28 <line:2480:11, col:18> col:18 Value 'UINT8':'unsigned char'
| `-FullComment 0x55887c39c830 <line:2464:1, line:2474:38>
|   |-ParagraphComment 0x55887c39c4d0 <line:2464:1, col:48>
|   | `-TextComment 0x55887c39c4a0 <col:1, col:48> Text="  Converts an 8-bit BCD value to an 8-bit value."
|   |-ParagraphComment 0x55887c39c540 <line:2466:1, line:2467:20>
|   | |-TextComment 0x55887c39c4f0 <line:2466:1, col:78> Text="  Converts the 8-bit BCD value specified by Value to an 8-bit value. The 8-bit"
|   | `-TextComment 0x55887c39c510 <line:2467:1, col:20> Text="  value is returned."
|   |-ParagraphComment 0x55887c39c600 <line:2469:1, line:2470:43>
|   | |-TextComment 0x55887c39c560 <line:2469:1, col:34> Text="  If Value >= 0xA0, then ASSERT()."
|   | |-TextComment 0x55887c39c580 <line:2470:1, col:12> Text="  If (Value "
|   | |-TextComment 0x55887c39c5a0 <col:13> Text="&"
|   | `-TextComment 0x55887c39c5c0 <col:14, col:43> Text=" 0x0F) >= 0x0A, then ASSERT()."
|   |-ParagraphComment 0x55887c39c650 <line:2472:1, col:2>
|   | `-TextComment 0x55887c39c620 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39c670 <col:3, col:65> [in] implicitly Param="Value" ParamIndex=0
|   | `-ParagraphComment 0x55887c39c700 <col:16, col:65>
|   |   `-TextComment 0x55887c39c6d0 <col:16, col:65> Text=" The 8-bit BCD value to convert to an 8-bit value."
|   |-ParagraphComment 0x55887c39c750 <line:2474:1, col:2>
|   | `-TextComment 0x55887c39c720 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c39c770 <col:3, col:38> Name="return"
|     `-ParagraphComment 0x55887c39c7d0 <col:10, col:38>
|       `-TextComment 0x55887c39c7a0 <col:10, col:38> Text=" The 8-bit value is returned."
|-FunctionDecl 0x55887c127d88 <line:2495:1, line:2499:3> line:2497:1 PathRemoveLastItem 'BOOLEAN (CHAR16 *)'
| |-ParmVarDecl 0x55887c127c98 <line:2498:10, col:19> col:19 Path 'CHAR16 *'
| `-FullComment 0x55887c39cbd0 <line:2488:1, line:2493:52>
|   |-ParagraphComment 0x55887c39c8d0 <line:2488:1, col:53>
|   | `-TextComment 0x55887c39c8a0 <col:1, col:53> Text="  Removes the last directory or file entry in a path."
|   |-ParagraphComment 0x55887c39c920 <line:2490:1, col:2>
|   | `-TextComment 0x55887c39c8f0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39c940 <col:3, col:60> [in,out] explicitly Param="Path" ParamIndex=0
|   | `-ParagraphComment 0x55887c39c9d0 <col:23, col:60>
|   |   `-TextComment 0x55887c39c9a0 <col:23, col:60> Text="    The pointer to the path to modify."
|   |-ParagraphComment 0x55887c39ca20 <line:2492:1, col:2>
|   | `-TextComment 0x55887c39c9f0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c39ca40 <col:3, line:2493:2> Name="retval" Arg[0]="FALSE"
|   | `-ParagraphComment 0x55887c39cae0 <line:2492:16, line:2493:2>
|   |   |-TextComment 0x55887c39ca90 <line:2492:16, col:48> Text="     Nothing was found to remove."
|   |   `-TextComment 0x55887c39cab0 <line:2493:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c39cb00 <col:3, col:52> Name="retval" Arg[0]="TRUE"
|     `-ParagraphComment 0x55887c39cb80 <col:15, col:52>
|       `-TextComment 0x55887c39cb50 <col:15, col:52> Text="      A directory or file was removed."
|-FunctionDecl 0x55887c127f58 <line:2514:1, line:2518:3> line:2516:1 PathCleanUpDirectories 'CHAR16 *(CHAR16 *)'
| |-ParmVarDecl 0x55887c127e68 <line:2517:6, col:15> col:15 Path 'CHAR16 *'
| `-FullComment 0x55887c39cfc0 <line:2502:1, line:2512:92>
|   |-ParagraphComment 0x55887c39cd30 <line:2502:1, line:2505:66>
|   | |-TextComment 0x55887c39cc40 <line:2502:1, col:29> Text="  Function to clean up paths."
|   | |-TextComment 0x55887c39cc60 <line:2503:1, col:45> Text="    - Single periods in the path are removed."
|   | |-TextComment 0x55887c39cc80 <line:2504:1, col:82> Text="    - Double periods in the path are removed along with a single parent directory."
|   | |-TextComment 0x55887c39cca0 <line:2505:1, col:63> Text="    - Forward slashes L'/' are converted to backward slashes L'"
|   | |-TextComment 0x55887c39ccc0 <col:64> Text="\"
|   | `-TextComment 0x55887c39cce0 <col:65, col:66> Text="'."
|   |-ParagraphComment 0x55887c39cda0 <line:2507:1, line:2508:18>
|   | |-TextComment 0x55887c39cd50 <line:2507:1, col:78> Text="  This will be done inline and the existing buffer may be larger than required"
|   | `-TextComment 0x55887c39cd70 <line:2508:1, col:18> Text="  upon completion."
|   |-ParagraphComment 0x55887c39cdf0 <line:2510:1, col:2>
|   | `-TextComment 0x55887c39cdc0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39ce10 <col:3, col:70> [in] explicitly Param="Path" ParamIndex=0
|   | `-ParagraphComment 0x55887c39cea0 <col:18, col:70>
|   |   `-TextComment 0x55887c39ce70 <col:18, col:70> Text="       The pointer to the string containing the path."
|   |-ParagraphComment 0x55887c39cef0 <line:2512:1, col:2>
|   | `-TextComment 0x55887c39cec0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c39cf10 <col:3, col:92> Name="return"
|     `-ParagraphComment 0x55887c39cf70 <col:10, col:92>
|       `-TextComment 0x55887c39cf40 <col:10, col:92> Text="       Returns Path, otherwise returns NULL to indicate that an error has occurred."
|-FunctionDecl 0x55887c1282b8 <line:2586:1, line:2591:3> line:2588:1 IsNodeInList 'BOOLEAN (const LIST_ENTRY *, const LIST_ENTRY *)'
| |-ParmVarDecl 0x55887c128128 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2589:30> col:30 FirstEntry 'const LIST_ENTRY *'
| |-ParmVarDecl 0x55887c1281a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2590:30> col:30 SecondEntry 'const LIST_ENTRY *'
| `-FullComment 0x55887c39d590 <line:2568:1, line:2583:42>
|   |-ParagraphComment 0x55887c39d080 <line:2568:1, line:2569:7>
|   | |-TextComment 0x55887c39d030 <line:2568:1, col:78> Text="  Checks whether FirstEntry and SecondEntry are part of the same doubly-linked"
|   | `-TextComment 0x55887c39d050 <line:2569:1, col:7> Text="  list."
|   |-ParagraphComment 0x55887c39d190 <line:2571:1, line:2576:50>
|   | |-TextComment 0x55887c39d0a0 <line:2571:1, col:39> Text="  If FirstEntry is NULL, then ASSERT()."
|   | |-TextComment 0x55887c39d0c0 <line:2572:1, col:52> Text="  If FirstEntry->ForwardLink is NULL, then ASSERT()."
|   | |-TextComment 0x55887c39d0e0 <line:2573:1, col:49> Text="  If FirstEntry->BackLink is NULL, then ASSERT()."
|   | |-TextComment 0x55887c39d100 <line:2574:1, col:40> Text="  If SecondEntry is NULL, then ASSERT();"
|   | |-TextComment 0x55887c39d120 <line:2575:1, col:72> Text="  If PcdMaximumLinkedListLength is not zero, and List contains more than"
|   | `-TextComment 0x55887c39d140 <line:2576:1, col:50> Text="  PcdMaximumLinkedListLength nodes, then ASSERT()."
|   |-ParagraphComment 0x55887c39d1e0 <line:2578:1, col:2>
|   | `-TextComment 0x55887c39d1b0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39d200 <col:3, line:2579:2> [in] implicitly Param="FirstEntry" ParamIndex=0
|   | `-ParagraphComment 0x55887c39d2b0 <line:2578:21, line:2579:2>
|   |   |-TextComment 0x55887c39d260 <line:2578:21, col:60> Text="   A pointer to a node in a linked list."
|   |   `-TextComment 0x55887c39d280 <line:2579:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39d2d0 <col:3, col:55> [in] implicitly Param="SecondEntry" ParamIndex=1
|   | `-ParagraphComment 0x55887c39d360 <col:22, col:55>
|   |   `-TextComment 0x55887c39d330 <col:22, col:55> Text="  A pointer to the node to locate."
|   |-ParagraphComment 0x55887c39d3b0 <line:2581:1, col:2>
|   | `-TextComment 0x55887c39d380 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c39d3d0 <col:3, line:2582:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c39d470 <line:2581:15, line:2582:2>
|   |   |-TextComment 0x55887c39d420 <line:2581:15, col:77> Text="   SecondEntry is in the same doubly-linked list as FirstEntry."
|   |   `-TextComment 0x55887c39d440 <line:2582:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c39d490 <col:3, line:2583:42> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c39d530 <line:2582:16, line:2583:42>
|       |-TextComment 0x55887c39d4e0 <line:2582:16, col:80> Text="  SecondEntry isn't in the same doubly-linked list as FirstEntry,"
|       `-TextComment 0x55887c39d500 <line:2583:1, col:42> Text="                 or FirstEntry is invalid."
|-FunctionDecl 0x55887c128498 <line:2609:1, line:2613:3> line:2611:1 InitializeListHead 'LIST_ENTRY *(LIST_ENTRY *)'
| |-ParmVarDecl 0x55887c1283a8 <line:2612:11, col:24> col:24 ListHead 'LIST_ENTRY *'
| `-FullComment 0x55887c39d990 <line:2594:1, line:2606:18>
|   |-ParagraphComment 0x55887c39d650 <line:2594:1, line:2595:42>
|   | |-TextComment 0x55887c39d600 <line:2594:1, col:79> Text="  Initializes the head node of a doubly linked list, and returns the pointer to"
|   | `-TextComment 0x55887c39d620 <line:2595:1, col:42> Text="  the head node of the doubly linked list."
|   |-ParagraphComment 0x55887c39d710 <line:2597:1, line:2600:69>
|   | |-TextComment 0x55887c39d670 <line:2597:1, col:72> Text="  Initializes the forward and backward links of a new linked list. After"
|   | |-TextComment 0x55887c39d690 <line:2598:1, col:70> Text="  initializing a linked list with this function, the other linked list"
|   | |-TextComment 0x55887c39d6b0 <line:2599:1, col:78> Text="  functions may be used to add and remove nodes from the linked list. It is up"
|   | `-TextComment 0x55887c39d6d0 <line:2600:1, col:69> Text="  to the caller of this function to allocate the memory for ListHead."
|   |-ParagraphComment 0x55887c39d760 <line:2602:1, col:37>
|   | `-TextComment 0x55887c39d730 <col:1, col:37> Text="  If ListHead is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c39d7b0 <line:2604:1, col:2>
|   | `-TextComment 0x55887c39d780 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39d7d0 <col:3, col:75> [in] implicitly Param="ListHead" ParamIndex=0
|   | `-ParagraphComment 0x55887c39d860 <col:19, col:75>
|   |   `-TextComment 0x55887c39d830 <col:19, col:75> Text="  A pointer to the head node of a new doubly linked list."
|   |-ParagraphComment 0x55887c39d8b0 <line:2606:1, col:2>
|   | `-TextComment 0x55887c39d880 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c39d8d0 <col:3, col:18> Name="return"
|     `-ParagraphComment 0x55887c39d930 <col:10, col:18>
|       `-TextComment 0x55887c39d900 <col:10, col:18> Text=" ListHead"
|-FunctionDecl 0x55887c128718 <line:2637:1, line:2642:3> line:2639:1 InsertHeadList 'LIST_ENTRY *(LIST_ENTRY *, LIST_ENTRY *)'
| |-ParmVarDecl 0x55887c128578 <line:2640:11, col:24> col:24 ListHead 'LIST_ENTRY *'
| |-ParmVarDecl 0x55887c1285f0 <line:2641:11, col:24> col:24 Entry 'LIST_ENTRY *'
| `-FullComment 0x55887c39df20 <line:2616:1, line:2634:18>
|   |-ParagraphComment 0x55887c39da50 <line:2616:1, line:2617:45>
|   | |-TextComment 0x55887c39da00 <line:2616:1, col:79> Text="  Adds a node to the beginning of a doubly linked list, and returns the pointer"
|   | `-TextComment 0x55887c39da20 <line:2617:1, col:45> Text="  to the head node of the doubly linked list."
|   |-ParagraphComment 0x55887c39dac0 <line:2619:1, line:2620:33>
|   | |-TextComment 0x55887c39da70 <line:2619:1, col:75> Text="  Adds the node Entry at the beginning of the doubly linked list denoted by"
|   | `-TextComment 0x55887c39da90 <line:2620:1, col:33> Text="  ListHead, and returns ListHead."
|   |-ParagraphComment 0x55887c39dc00 <line:2622:1, line:2628:53>
|   | |-TextComment 0x55887c39dae0 <line:2622:1, col:37> Text="  If ListHead is NULL, then ASSERT()."
|   | |-TextComment 0x55887c39db00 <line:2623:1, col:34> Text="  If Entry is NULL, then ASSERT()."
|   | |-TextComment 0x55887c39db20 <line:2624:1, col:72> Text="  If ListHead was not initialized with INTIALIZE_LIST_HEAD_VARIABLE() or"
|   | |-TextComment 0x55887c39db40 <line:2625:1, col:38> Text="  InitializeListHead(), then ASSERT()."
|   | |-TextComment 0x55887c39db60 <line:2626:1, col:78> Text="  If PcdMaximumLinkedListLength is not zero, and prior to insertion the number"
|   | |-TextComment 0x55887c39db80 <line:2627:1, col:71> Text="  of nodes in ListHead, including the ListHead node, is greater than or"
|   | `-TextComment 0x55887c39dba0 <line:2628:1, col:53> Text="  equal to PcdMaximumLinkedListLength, then ASSERT()."
|   |-ParagraphComment 0x55887c39dc50 <line:2630:1, col:2>
|   | `-TextComment 0x55887c39dc20 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39dc70 <col:3, line:2631:2> [in] implicitly Param="ListHead" ParamIndex=0
|   | `-ParagraphComment 0x55887c39dd20 <line:2630:19, line:2631:2>
|   |   |-TextComment 0x55887c39dcd0 <line:2630:19, col:71> Text="  A pointer to the head node of a doubly linked list."
|   |   `-TextComment 0x55887c39dcf0 <line:2631:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39dd40 <col:3, line:2632:44> [in] implicitly Param="Entry" ParamIndex=1
|   | `-ParagraphComment 0x55887c39ddf0 <line:2631:16, line:2632:44>
|   |   |-TextComment 0x55887c39dda0 <line:2631:16, col:79> Text="     A pointer to a node that is to be inserted at the beginning"
|   |   `-TextComment 0x55887c39ddc0 <line:2632:1, col:44> Text="                    of a doubly linked list."
|   |-ParagraphComment 0x55887c39de40 <line:2634:1, col:2>
|   | `-TextComment 0x55887c39de10 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c39de60 <col:3, col:18> Name="return"
|     `-ParagraphComment 0x55887c39dec0 <col:10, col:18>
|       `-TextComment 0x55887c39de90 <col:10, col:18> Text=" ListHead"
|-FunctionDecl 0x55887c128918 <line:2666:1, line:2671:3> line:2668:1 InsertTailList 'LIST_ENTRY *(LIST_ENTRY *, LIST_ENTRY *)'
| |-ParmVarDecl 0x55887c128808 <line:2669:11, col:24> col:24 ListHead 'LIST_ENTRY *'
| |-ParmVarDecl 0x55887c128880 <line:2670:11, col:24> col:24 Entry 'LIST_ENTRY *'
| `-FullComment 0x55887c39e4b0 <line:2645:1, line:2663:18>
|   |-ParagraphComment 0x55887c39dfe0 <line:2645:1, line:2646:42>
|   | |-TextComment 0x55887c39df90 <line:2645:1, col:76> Text="  Adds a node to the end of a doubly linked list, and returns the pointer to"
|   | `-TextComment 0x55887c39dfb0 <line:2646:1, col:42> Text="  the head node of the doubly linked list."
|   |-ParagraphComment 0x55887c39e050 <line:2648:1, line:2649:23>
|   | |-TextComment 0x55887c39e000 <line:2648:1, col:79> Text="  Adds the node Entry to the end of the doubly linked list denoted by ListHead,"
|   | `-TextComment 0x55887c39e020 <line:2649:1, col:23> Text="  and returns ListHead."
|   |-ParagraphComment 0x55887c39e190 <line:2651:1, line:2657:53>
|   | |-TextComment 0x55887c39e070 <line:2651:1, col:37> Text="  If ListHead is NULL, then ASSERT()."
|   | |-TextComment 0x55887c39e090 <line:2652:1, col:34> Text="  If Entry is NULL, then ASSERT()."
|   | |-TextComment 0x55887c39e0b0 <line:2653:1, col:72> Text="  If ListHead was not initialized with INTIALIZE_LIST_HEAD_VARIABLE() or"
|   | |-TextComment 0x55887c39e0d0 <line:2654:1, col:38> Text="  InitializeListHead(), then ASSERT()."
|   | |-TextComment 0x55887c39e0f0 <line:2655:1, col:78> Text="  If PcdMaximumLinkedListLength is not zero, and prior to insertion the number"
|   | |-TextComment 0x55887c39e110 <line:2656:1, col:71> Text="  of nodes in ListHead, including the ListHead node, is greater than or"
|   | `-TextComment 0x55887c39e130 <line:2657:1, col:53> Text="  equal to PcdMaximumLinkedListLength, then ASSERT()."
|   |-ParagraphComment 0x55887c39e1e0 <line:2659:1, col:2>
|   | `-TextComment 0x55887c39e1b0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39e200 <col:3, line:2660:2> [in] implicitly Param="ListHead" ParamIndex=0
|   | `-ParagraphComment 0x55887c39e2b0 <line:2659:19, line:2660:2>
|   |   |-TextComment 0x55887c39e260 <line:2659:19, col:71> Text="  A pointer to the head node of a doubly linked list."
|   |   `-TextComment 0x55887c39e280 <line:2660:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39e2d0 <col:3, line:2661:39> [in] implicitly Param="Entry" ParamIndex=1
|   | `-ParagraphComment 0x55887c39e380 <line:2660:16, line:2661:39>
|   |   |-TextComment 0x55887c39e330 <line:2660:16, col:77> Text="     A pointer to a node that is to be added at the end of the"
|   |   `-TextComment 0x55887c39e350 <line:2661:1, col:39> Text="                    doubly linked list."
|   |-ParagraphComment 0x55887c39e3d0 <line:2663:1, col:2>
|   | `-TextComment 0x55887c39e3a0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c39e3f0 <col:3, col:18> Name="return"
|     `-ParagraphComment 0x55887c39e450 <col:10, col:18>
|       `-TextComment 0x55887c39e420 <col:10, col:18> Text=" ListHead"
|-FunctionDecl 0x55887c128af8 <line:2693:1, line:2697:3> line:2695:1 GetFirstNode 'LIST_ENTRY *(const LIST_ENTRY *)'
| |-ParmVarDecl 0x55887c128a08 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2696:30> col:30 List 'const LIST_ENTRY *'
| `-FullComment 0x55887c39e9f0 <line:2674:1, line:2690:34>
|   |-ParagraphComment 0x55887c39e550 <line:2674:1, col:51>
|   | `-TextComment 0x55887c39e520 <col:1, col:51> Text="  Retrieves the first node of a doubly linked list."
|   |-ParagraphComment 0x55887c39e5f0 <line:2676:1, line:2678:42>
|   | |-TextComment 0x55887c39e570 <line:2676:1, col:70> Text="  Returns the first node of a doubly linked list.  List must have been"
|   | |-TextComment 0x55887c39e590 <line:2677:1, col:74> Text="  initialized with INTIALIZE_LIST_HEAD_VARIABLE() or InitializeListHead()."
|   | `-TextComment 0x55887c39e5b0 <line:2678:1, col:42> Text="  If List is empty, then List is returned."
|   |-ParagraphComment 0x55887c39e700 <line:2680:1, line:2685:44>
|   | |-TextComment 0x55887c39e610 <line:2680:1, col:33> Text="  If List is NULL, then ASSERT()."
|   | |-TextComment 0x55887c39e630 <line:2681:1, col:68> Text="  If List was not initialized with INTIALIZE_LIST_HEAD_VARIABLE() or"
|   | |-TextComment 0x55887c39e650 <line:2682:1, col:38> Text="  InitializeListHead(), then ASSERT()."
|   | |-TextComment 0x55887c39e670 <line:2683:1, col:68> Text="  If PcdMaximumLinkedListLength is not zero, and the number of nodes"
|   | |-TextComment 0x55887c39e690 <line:2684:1, col:63> Text="  in List, including the List node, is greater than or equal to"
|   | `-TextComment 0x55887c39e6b0 <line:2685:1, col:44> Text="  PcdMaximumLinkedListLength, then ASSERT()."
|   |-ParagraphComment 0x55887c39e750 <line:2687:1, col:2>
|   | `-TextComment 0x55887c39e720 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39e770 <col:3, col:67> [in] implicitly Param="List" ParamIndex=0
|   | `-ParagraphComment 0x55887c39e800 <col:15, col:67>
|   |   `-TextComment 0x55887c39e7d0 <col:15, col:67> Text="  A pointer to the head node of a doubly linked list."
|   |-ParagraphComment 0x55887c39e850 <line:2689:1, col:2>
|   | `-TextComment 0x55887c39e820 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c39e870 <col:3, line:2690:2> Name="return"
|   | `-ParagraphComment 0x55887c39e8f0 <line:2689:10, line:2690:2>
|   |   |-TextComment 0x55887c39e8a0 <line:2689:10, col:49> Text=" The first node of a doubly linked list."
|   |   `-TextComment 0x55887c39e8c0 <line:2690:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c39e910 <col:3, col:34> Name="retval" Arg[0]="List"
|     `-ParagraphComment 0x55887c39e990 <col:15, col:34>
|       `-TextComment 0x55887c39e960 <col:15, col:34> Text="  The list is empty."
|-FunctionDecl 0x55887c128d68 <line:2720:1, line:2725:3> line:2722:1 GetNextNode 'LIST_ENTRY *(const LIST_ENTRY *, const LIST_ENTRY *)'
| |-ParmVarDecl 0x55887c128bd8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2723:30> col:30 List 'const LIST_ENTRY *'
| |-ParmVarDecl 0x55887c128c50 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2724:30> col:30 Node 'const LIST_ENTRY *'
| `-FullComment 0x55887c39ef70 <line:2700:1, line:2717:81>
|   |-ParagraphComment 0x55887c39ea90 <line:2700:1, col:50>
|   | `-TextComment 0x55887c39ea60 <col:1, col:50> Text="  Retrieves the next node of a doubly linked list."
|   |-ParagraphComment 0x55887c39eb30 <line:2702:1, line:2704:68>
|   | |-TextComment 0x55887c39eab0 <line:2702:1, col:61> Text="  Returns the node of a doubly linked list that follows Node."
|   | |-TextComment 0x55887c39ead0 <line:2703:1, col:69> Text="  List must have been initialized with INTIALIZE_LIST_HEAD_VARIABLE()"
|   | `-TextComment 0x55887c39eaf0 <line:2704:1, col:68> Text="  or InitializeListHead().  If List is empty, then List is returned."
|   |-ParagraphComment 0x55887c39ec70 <line:2706:1, line:2712:79>
|   | |-TextComment 0x55887c39eb50 <line:2706:1, col:33> Text="  If List is NULL, then ASSERT()."
|   | |-TextComment 0x55887c39eb70 <line:2707:1, col:33> Text="  If Node is NULL, then ASSERT()."
|   | |-TextComment 0x55887c39eb90 <line:2708:1, col:68> Text="  If List was not initialized with INTIALIZE_LIST_HEAD_VARIABLE() or"
|   | |-TextComment 0x55887c39ebb0 <line:2709:1, col:38> Text="  InitializeListHead(), then ASSERT()."
|   | |-TextComment 0x55887c39ebd0 <line:2710:1, col:72> Text="  If PcdMaximumLinkedListLength is not zero, and List contains more than"
|   | |-TextComment 0x55887c39ebf0 <line:2711:1, col:50> Text="  PcdMaximumLinkedListLength nodes, then ASSERT()."
|   | `-TextComment 0x55887c39ec10 <line:2712:1, col:79> Text="  If PcdVerifyNodeInList is TRUE and Node is not a node in List, then ASSERT()."
|   |-ParagraphComment 0x55887c39ecc0 <line:2714:1, col:2>
|   | `-TextComment 0x55887c39ec90 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39ece0 <col:3, line:2715:2> [in] implicitly Param="List" ParamIndex=0
|   | `-ParagraphComment 0x55887c39ed90 <line:2714:15, line:2715:2>
|   |   |-TextComment 0x55887c39ed40 <line:2714:15, col:67> Text="  A pointer to the head node of a doubly linked list."
|   |   `-TextComment 0x55887c39ed60 <line:2715:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39edb0 <col:3, col:62> [in] implicitly Param="Node" ParamIndex=1
|   | `-ParagraphComment 0x55887c39ee40 <col:15, col:62>
|   |   `-TextComment 0x55887c39ee10 <col:15, col:62> Text="  A pointer to a node in the doubly linked list."
|   |-ParagraphComment 0x55887c39ee90 <line:2717:1, col:2>
|   | `-TextComment 0x55887c39ee60 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c39eeb0 <col:3, col:81> Name="return"
|     `-ParagraphComment 0x55887c39ef10 <col:10, col:81>
|       `-TextComment 0x55887c39eee0 <col:10, col:81> Text=" The pointer to the next node if one exists. Otherwise List is returned."
|-FunctionDecl 0x55887c128f68 <line:2748:1, line:2753:3> line:2750:1 GetPreviousNode 'LIST_ENTRY *(const LIST_ENTRY *, const LIST_ENTRY *)'
| |-ParmVarDecl 0x55887c128e58 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2751:30> col:30 List 'const LIST_ENTRY *'
| |-ParmVarDecl 0x55887c128ed0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2752:30> col:30 Node 'const LIST_ENTRY *'
| `-FullComment 0x55887c39f500 <line:2728:1, line:2745:85>
|   |-ParagraphComment 0x55887c39f020 <line:2728:1, col:54>
|   | `-TextComment 0x55887c39eff0 <col:1, col:54> Text="  Retrieves the previous node of a doubly linked list."
|   |-ParagraphComment 0x55887c39f0c0 <line:2730:1, line:2732:68>
|   | |-TextComment 0x55887c39f040 <line:2730:1, col:62> Text="  Returns the node of a doubly linked list that precedes Node."
|   | |-TextComment 0x55887c39f060 <line:2731:1, col:69> Text="  List must have been initialized with INTIALIZE_LIST_HEAD_VARIABLE()"
|   | `-TextComment 0x55887c39f080 <line:2732:1, col:68> Text="  or InitializeListHead().  If List is empty, then List is returned."
|   |-ParagraphComment 0x55887c39f200 <line:2734:1, line:2740:79>
|   | |-TextComment 0x55887c39f0e0 <line:2734:1, col:33> Text="  If List is NULL, then ASSERT()."
|   | |-TextComment 0x55887c39f100 <line:2735:1, col:33> Text="  If Node is NULL, then ASSERT()."
|   | |-TextComment 0x55887c39f120 <line:2736:1, col:68> Text="  If List was not initialized with INTIALIZE_LIST_HEAD_VARIABLE() or"
|   | |-TextComment 0x55887c39f140 <line:2737:1, col:38> Text="  InitializeListHead(), then ASSERT()."
|   | |-TextComment 0x55887c39f160 <line:2738:1, col:72> Text="  If PcdMaximumLinkedListLength is not zero, and List contains more than"
|   | |-TextComment 0x55887c39f180 <line:2739:1, col:50> Text="  PcdMaximumLinkedListLength nodes, then ASSERT()."
|   | `-TextComment 0x55887c39f1a0 <line:2740:1, col:79> Text="  If PcdVerifyNodeInList is TRUE and Node is not a node in List, then ASSERT()."
|   |-ParagraphComment 0x55887c39f250 <line:2742:1, col:2>
|   | `-TextComment 0x55887c39f220 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39f270 <col:3, line:2743:2> [in] implicitly Param="List" ParamIndex=0
|   | `-ParagraphComment 0x55887c39f320 <line:2742:15, line:2743:2>
|   |   |-TextComment 0x55887c39f2d0 <line:2742:15, col:67> Text="  A pointer to the head node of a doubly linked list."
|   |   `-TextComment 0x55887c39f2f0 <line:2743:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39f340 <col:3, col:62> [in] implicitly Param="Node" ParamIndex=1
|   | `-ParagraphComment 0x55887c39f3d0 <col:15, col:62>
|   |   `-TextComment 0x55887c39f3a0 <col:15, col:62> Text="  A pointer to a node in the doubly linked list."
|   |-ParagraphComment 0x55887c39f420 <line:2745:1, col:2>
|   | `-TextComment 0x55887c39f3f0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c39f440 <col:3, col:85> Name="return"
|     `-ParagraphComment 0x55887c39f4a0 <col:10, col:85>
|       `-TextComment 0x55887c39f470 <col:10, col:85> Text=" The pointer to the previous node if one exists. Otherwise List is returned."
|-FunctionDecl 0x55887c129148 <line:2774:1, line:2778:3> line:2776:1 IsListEmpty 'BOOLEAN (const LIST_ENTRY *)'
| |-ParmVarDecl 0x55887c129058 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2777:30> col:30 ListHead 'const LIST_ENTRY *'
| `-FullComment 0x55887c39fa30 <line:2756:1, line:2771:45>
|   |-ParagraphComment 0x55887c39f5a0 <line:2756:1, col:56>
|   | `-TextComment 0x55887c39f570 <col:1, col:56> Text="  Checks to see if a doubly linked list is empty or not."
|   |-ParagraphComment 0x55887c39f610 <line:2758:1, line:2759:70>
|   | |-TextComment 0x55887c39f5c0 <line:2758:1, col:79> Text="  Checks to see if the doubly linked list is empty. If the linked list contains"
|   | `-TextComment 0x55887c39f5e0 <line:2759:1, col:70> Text="  zero nodes, this function returns TRUE. Otherwise, it returns FALSE."
|   |-ParagraphComment 0x55887c39f720 <line:2761:1, line:2766:44>
|   | |-TextComment 0x55887c39f630 <line:2761:1, col:37> Text="  If ListHead is NULL, then ASSERT()."
|   | |-TextComment 0x55887c39f650 <line:2762:1, col:72> Text="  If ListHead was not initialized with INTIALIZE_LIST_HEAD_VARIABLE() or"
|   | |-TextComment 0x55887c39f670 <line:2763:1, col:38> Text="  InitializeListHead(), then ASSERT()."
|   | |-TextComment 0x55887c39f690 <line:2764:1, col:68> Text="  If PcdMaximumLinkedListLength is not zero, and the number of nodes"
|   | |-TextComment 0x55887c39f6b0 <line:2765:1, col:63> Text="  in List, including the List node, is greater than or equal to"
|   | `-TextComment 0x55887c39f6d0 <line:2766:1, col:44> Text="  PcdMaximumLinkedListLength, then ASSERT()."
|   |-ParagraphComment 0x55887c39f770 <line:2768:1, col:2>
|   | `-TextComment 0x55887c39f740 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39f790 <col:3, col:71> [in] implicitly Param="ListHead" ParamIndex=0
|   | `-ParagraphComment 0x55887c39f820 <col:19, col:71>
|   |   `-TextComment 0x55887c39f7f0 <col:19, col:71> Text="  A pointer to the head node of a doubly linked list."
|   |-ParagraphComment 0x55887c39f870 <line:2770:1, col:2>
|   | `-TextComment 0x55887c39f840 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c39f890 <col:3, line:2771:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c39f930 <line:2770:15, line:2771:2>
|   |   |-TextComment 0x55887c39f8e0 <line:2770:15, col:41> Text="  The linked list is empty."
|   |   `-TextComment 0x55887c39f900 <line:2771:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c39f950 <col:3, col:45> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c39f9d0 <col:16, col:45>
|       `-TextComment 0x55887c39f9a0 <col:16, col:45> Text=" The linked list is not empty."
|-FunctionDecl 0x55887c129338 <line:2806:1, line:2811:3> line:2808:1 IsNull 'BOOLEAN (const LIST_ENTRY *, const LIST_ENTRY *)'
| |-ParmVarDecl 0x55887c129228 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2809:30> col:30 List 'const LIST_ENTRY *'
| |-ParmVarDecl 0x55887c1292a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2810:30> col:30 Node 'const LIST_ENTRY *'
| `-FullComment 0x55887c3a0140 <line:2781:1, line:2803:79>
|   |-ParagraphComment 0x55887c39fb20 <line:2781:1, line:2783:78>
|   | |-TextComment 0x55887c39faa0 <line:2781:1, col:77> Text="  Determines if a node in a doubly linked list is the head node of a the same"
|   | |-TextComment 0x55887c39fac0 <line:2782:1, col:79> Text="  doubly linked list.  This function is typically used to terminate a loop that"
|   | `-TextComment 0x55887c39fae0 <line:2783:1, col:78> Text="  traverses all the nodes in a doubly linked list starting with the head node."
|   |-ParagraphComment 0x55887c39fbc0 <line:2785:1, line:2787:74>
|   | |-TextComment 0x55887c39fb40 <line:2785:1, col:77> Text="  Returns TRUE if Node is equal to List.  Returns FALSE if Node is one of the"
|   | |-TextComment 0x55887c39fb60 <line:2786:1, col:73> Text="  nodes in the doubly linked list specified by List.  List must have been"
|   | `-TextComment 0x55887c39fb80 <line:2787:1, col:74> Text="  initialized with INTIALIZE_LIST_HEAD_VARIABLE() or InitializeListHead()."
|   |-ParagraphComment 0x55887c39fd50 <line:2789:1, line:2797:25>
|   | |-TextComment 0x55887c39fbe0 <line:2789:1, col:33> Text="  If List is NULL, then ASSERT()."
|   | |-TextComment 0x55887c39fc00 <line:2790:1, col:33> Text="  If Node is NULL, then ASSERT()."
|   | |-TextComment 0x55887c39fc20 <line:2791:1, col:90> Text="  If List was not initialized with INTIALIZE_LIST_HEAD_VARIABLE() or InitializeListHead(),"
|   | |-TextComment 0x55887c39fc40 <line:2792:1, col:16> Text="  then ASSERT()."
|   | |-TextComment 0x55887c39fc60 <line:2793:1, col:68> Text="  If PcdMaximumLinkedListLength is not zero, and the number of nodes"
|   | |-TextComment 0x55887c39fc80 <line:2794:1, col:63> Text="  in List, including the List node, is greater than or equal to"
|   | |-TextComment 0x55887c39fca0 <line:2795:1, col:44> Text="  PcdMaximumLinkedListLength, then ASSERT()."
|   | |-TextComment 0x55887c39fcc0 <line:2796:1, col:89> Text="  If PcdVerifyNodeInList is TRUE and Node is not a node in List the and Node is not equal"
|   | `-TextComment 0x55887c39fce0 <line:2797:1, col:25> Text="  to List, then ASSERT()."
|   |-ParagraphComment 0x55887c39fda0 <line:2799:1, col:2>
|   | `-TextComment 0x55887c39fd70 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39fdc0 <col:3, line:2800:2> [in] implicitly Param="List" ParamIndex=0
|   | `-ParagraphComment 0x55887c39fe70 <line:2799:15, line:2800:2>
|   |   |-TextComment 0x55887c39fe20 <line:2799:15, col:67> Text="  A pointer to the head node of a doubly linked list."
|   |   `-TextComment 0x55887c39fe40 <line:2800:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c39fe90 <col:3, col:62> [in] implicitly Param="Node" ParamIndex=1
|   | `-ParagraphComment 0x55887c39ff20 <col:15, col:62>
|   |   `-TextComment 0x55887c39fef0 <col:15, col:62> Text="  A pointer to a node in the doubly linked list."
|   |-ParagraphComment 0x55887c39ff70 <line:2802:1, col:2>
|   | `-TextComment 0x55887c39ff40 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c39ff90 <col:3, line:2803:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c3a0030 <line:2802:15, line:2803:2>
|   |   |-TextComment 0x55887c39ffe0 <line:2802:15, col:75> Text="  Node is the head of the doubly-linked list pointed by List."
|   |   `-TextComment 0x55887c3a0000 <line:2803:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a0050 <col:3, col:79> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c3a00d0 <col:16, col:79>
|       `-TextComment 0x55887c3a00a0 <col:16, col:79> Text=" Node is not the head of the doubly-linked list pointed by List."
|-FunctionDecl 0x55887c129538 <line:2836:1, line:2841:3> line:2838:1 IsNodeAtEnd 'BOOLEAN (const LIST_ENTRY *, const LIST_ENTRY *)'
| |-ParmVarDecl 0x55887c129428 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2839:30> col:30 List 'const LIST_ENTRY *'
| |-ParmVarDecl 0x55887c1294a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2840:30> col:30 Node 'const LIST_ENTRY *'
| `-FullComment 0x55887c3a07d0 <line:2814:1, line:2833:61>
|   |-ParagraphComment 0x55887c3a01e0 <line:2814:1, col:61>
|   | `-TextComment 0x55887c3a01b0 <col:1, col:61> Text="  Determines if a node the last node in a doubly linked list."
|   |-ParagraphComment 0x55887c3a0280 <line:2816:1, line:2818:57>
|   | |-TextComment 0x55887c3a0200 <line:2816:1, col:78> Text="  Returns TRUE if Node is the last node in the doubly linked list specified by"
|   | |-TextComment 0x55887c3a0220 <line:2817:1, col:74> Text="  List. Otherwise, FALSE is returned. List must have been initialized with"
|   | `-TextComment 0x55887c3a0240 <line:2818:1, col:57> Text="  INTIALIZE_LIST_HEAD_VARIABLE() or InitializeListHead()."
|   |-ParagraphComment 0x55887c3a03e0 <line:2820:1, line:2827:79>
|   | |-TextComment 0x55887c3a02a0 <line:2820:1, col:33> Text="  If List is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3a02c0 <line:2821:1, col:33> Text="  If Node is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3a02e0 <line:2822:1, col:68> Text="  If List was not initialized with INTIALIZE_LIST_HEAD_VARIABLE() or"
|   | |-TextComment 0x55887c3a0300 <line:2823:1, col:38> Text="  InitializeListHead(), then ASSERT()."
|   | |-TextComment 0x55887c3a0320 <line:2824:1, col:68> Text="  If PcdMaximumLinkedListLength is not zero, and the number of nodes"
|   | |-TextComment 0x55887c3a0340 <line:2825:1, col:63> Text="  in List, including the List node, is greater than or equal to"
|   | |-TextComment 0x55887c3a0360 <line:2826:1, col:44> Text="  PcdMaximumLinkedListLength, then ASSERT()."
|   | `-TextComment 0x55887c3a0380 <line:2827:1, col:79> Text="  If PcdVerifyNodeInList is TRUE and Node is not a node in List, then ASSERT()."
|   |-ParagraphComment 0x55887c3a0430 <line:2829:1, col:2>
|   | `-TextComment 0x55887c3a0400 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a0450 <col:3, line:2830:2> [in] implicitly Param="List" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a0500 <line:2829:15, line:2830:2>
|   |   |-TextComment 0x55887c3a04b0 <line:2829:15, col:67> Text="  A pointer to the head node of a doubly linked list."
|   |   `-TextComment 0x55887c3a04d0 <line:2830:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a0520 <col:3, col:62> [in] implicitly Param="Node" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a05b0 <col:15, col:62>
|   |   `-TextComment 0x55887c3a0580 <col:15, col:62> Text="  A pointer to a node in the doubly linked list."
|   |-ParagraphComment 0x55887c3a0600 <line:2832:1, col:2>
|   | `-TextComment 0x55887c3a05d0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3a0620 <col:3, line:2833:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c3a06c0 <line:2832:15, line:2833:2>
|   |   |-TextComment 0x55887c3a0670 <line:2832:15, col:57> Text="  Node is the last node in the linked list."
|   |   `-TextComment 0x55887c3a0690 <line:2833:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a06e0 <col:3, col:61> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c3a0760 <col:16, col:61>
|       `-TextComment 0x55887c3a0730 <col:16, col:61> Text=" Node is not the last node in the linked list."
|-FunctionDecl 0x55887c129758 <line:2869:1, line:2874:3> line:2871:1 SwapListEntries 'LIST_ENTRY *(LIST_ENTRY *, LIST_ENTRY *)'
| |-ParmVarDecl 0x55887c129628 <line:2872:11, col:24> col:24 FirstEntry 'LIST_ENTRY *'
| |-ParmVarDecl 0x55887c1296c0 <line:2873:11, col:24> col:24 SecondEntry 'LIST_ENTRY *'
| `-FullComment 0x55887c3a0e00 <line:2844:1, line:2866:22>
|   |-ParagraphComment 0x55887c3a0890 <line:2844:1, line:2845:28>
|   | |-TextComment 0x55887c3a0840 <line:2844:1, col:74> Text="  Swaps the location of two nodes in a doubly linked list, and returns the"
|   | `-TextComment 0x55887c3a0860 <line:2845:1, col:28> Text="  first node after the swap."
|   |-ParagraphComment 0x55887c3a09a0 <line:2847:1, line:2852:54>
|   | |-TextComment 0x55887c3a08b0 <line:2847:1, col:74> Text="  If FirstEntry is identical to SecondEntry, then SecondEntry is returned."
|   | |-TextComment 0x55887c3a08d0 <line:2848:1, col:77> Text="  Otherwise, the location of the FirstEntry node is swapped with the location"
|   | |-TextComment 0x55887c3a08f0 <line:2849:1, col:77> Text="  of the SecondEntry node in a doubly linked list. SecondEntry must be in the"
|   | |-TextComment 0x55887c3a0910 <line:2850:1, col:77> Text="  same double linked list as FirstEntry and that double linked list must have"
|   | |-TextComment 0x55887c3a0930 <line:2851:1, col:79> Text="  been initialized with INTIALIZE_LIST_HEAD_VARIABLE() or InitializeListHead()."
|   | `-TextComment 0x55887c3a0950 <line:2852:1, col:54> Text="  SecondEntry is returned after the nodes are swapped."
|   |-ParagraphComment 0x55887c3a0b00 <line:2854:1, line:2861:44>
|   | |-TextComment 0x55887c3a09c0 <line:2854:1, col:39> Text="  If FirstEntry is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3a09e0 <line:2855:1, col:40> Text="  If SecondEntry is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3a0a00 <line:2856:1, col:78> Text="  If PcdVerifyNodeInList is TRUE and SecondEntry and FirstEntry are not in the"
|   | |-TextComment 0x55887c3a0a20 <line:2857:1, col:34> Text="  same linked list, then ASSERT()."
|   | |-TextComment 0x55887c3a0a40 <line:2858:1, col:75> Text="  If PcdMaximumLinkedListLength is not zero, and the number of nodes in the"
|   | |-TextComment 0x55887c3a0a60 <line:2859:1, col:72> Text="  linked list containing the FirstEntry and SecondEntry nodes, including"
|   | |-TextComment 0x55887c3a0a80 <line:2860:1, col:67> Text="  the FirstEntry and SecondEntry nodes, is greater than or equal to"
|   | `-TextComment 0x55887c3a0aa0 <line:2861:1, col:44> Text="  PcdMaximumLinkedListLength, then ASSERT()."
|   |-ParagraphComment 0x55887c3a0b50 <line:2863:1, col:2>
|   | `-TextComment 0x55887c3a0b20 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a0b70 <col:3, line:2864:2> [in] implicitly Param="FirstEntry" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a0c20 <line:2863:21, line:2864:2>
|   |   |-TextComment 0x55887c3a0bd0 <line:2863:21, col:59> Text="  A pointer to a node in a linked list."
|   |   `-TextComment 0x55887c3a0bf0 <line:2864:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a0c40 <col:3, col:72> [in] implicitly Param="SecondEntry" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a0cd0 <col:22, col:72>
|   |   `-TextComment 0x55887c3a0ca0 <col:22, col:72> Text=" A pointer to another node in the same linked list."
|   |-ParagraphComment 0x55887c3a0d20 <line:2866:1, col:2>
|   | `-TextComment 0x55887c3a0cf0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a0d40 <col:3, col:22> Name="return"
|     `-ParagraphComment 0x55887c3a0da0 <col:10, col:22>
|       `-TextComment 0x55887c3a0d70 <col:10, col:22> Text=" SecondEntry."
|-FunctionDecl 0x55887c1298d8 <line:2897:1, line:2901:3> line:2899:1 RemoveEntryList 'LIST_ENTRY *(const LIST_ENTRY *)'
| |-ParmVarDecl 0x55887c129848 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2900:30> col:30 Entry 'const LIST_ENTRY *'
| `-FullComment 0x55887c3a12d0 <line:2877:1, line:2894:16>
|   |-ParagraphComment 0x55887c3a0ec0 <line:2877:1, line:2878:19>
|   | |-TextComment 0x55887c3a0e70 <line:2877:1, col:77> Text="  Removes a node from a doubly linked list, and returns the node that follows"
|   | `-TextComment 0x55887c3a0e90 <line:2878:1, col:19> Text="  the removed node."
|   |-ParagraphComment 0x55887c3a0fb0 <line:2880:1, line:2884:19>
|   | |-TextComment 0x55887c3a0ee0 <line:2880:1, col:77> Text="  Removes the node Entry from a doubly linked list. It is up to the caller of"
|   | |-TextComment 0x55887c3a0f00 <line:2881:1, col:79> Text="  this function to release the memory used by this node if that is required. On"
|   | |-TextComment 0x55887c3a0f20 <line:2882:1, col:74> Text="  exit, the node following Entry in the doubly linked list is returned. If"
|   | |-TextComment 0x55887c3a0f40 <line:2883:1, col:77> Text="  Entry is the only node in the linked list, then the head node of the linked"
|   | `-TextComment 0x55887c3a0f60 <line:2884:1, col:19> Text="  list is returned."
|   |-ParagraphComment 0x55887c3a10a0 <line:2886:1, line:2890:56>
|   | |-TextComment 0x55887c3a0fd0 <line:2886:1, col:34> Text="  If Entry is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3a0ff0 <line:2887:1, col:60> Text="  If Entry is the head node of an empty list, then ASSERT()."
|   | |-TextComment 0x55887c3a1010 <line:2888:1, col:75> Text="  If PcdMaximumLinkedListLength is not zero, and the number of nodes in the"
|   | |-TextComment 0x55887c3a1030 <line:2889:1, col:73> Text="  linked list containing Entry, including the Entry node, is greater than"
|   | `-TextComment 0x55887c3a1050 <line:2890:1, col:56> Text="  or equal to PcdMaximumLinkedListLength, then ASSERT()."
|   |-ParagraphComment 0x55887c3a10f0 <line:2892:1, col:2>
|   | `-TextComment 0x55887c3a10c0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a1110 <col:3, col:53> [in] implicitly Param="Entry" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a11a0 <col:16, col:53>
|   |   `-TextComment 0x55887c3a1170 <col:16, col:53> Text=" A pointer to a node in a linked list."
|   |-ParagraphComment 0x55887c3a11f0 <line:2894:1, col:2>
|   | `-TextComment 0x55887c3a11c0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a1210 <col:3, col:16> Name="return"
|     `-ParagraphComment 0x55887c3a1270 <col:10, col:16>
|       `-TextComment 0x55887c3a1240 <col:10, col:16> Text=" Entry."
|-TypedefDecl 0x55887c129c28 <line:2917:1, line:2922:3> line:2919:10 referenced BASE_SORT_COMPARE 'INTN (*)(const void *, const void *)'
| |-PointerType 0x55887c129bc0 'INTN (*)(const void *, const void *)'
| | `-ParenType 0x55887c129b60 'INTN (const void *, const void *)' sugar
| |   `-FunctionProtoType 0x55887c129b20 'INTN (const void *, const void *)' cdecl
| |     |-TypedefType 0x55887c0653c0 'INTN' sugar
| |     | |-Typedef 0x55887c04a0e0 'INTN'
| |     | `-TypedefType 0x55887c04a0b0 'INT64' sugar
| |     |   |-Typedef 0x55887c0499d0 'INT64'
| |     |   `-BuiltinType 0x55887bfe90f0 'long long'
| |     |-PointerType 0x55887c1299b0 'const void *'
| |     | `-QualType 0x55887bfe9011 'const void' const
| |     |   `-BuiltinType 0x55887bfe9010 'void'
| |     `-PointerType 0x55887c1299b0 'const void *'
| |       `-QualType 0x55887bfe9011 'const void' const
| |         `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3a1820 <line:2908:1, line:2915:70>
|   |-ParagraphComment 0x55887c3a1370 <line:2908:1, col:62>
|   | `-TextComment 0x55887c3a1340 <col:1, col:62> Text="  Prototype for comparison function for any two element types."
|   |-ParagraphComment 0x55887c3a13c0 <line:2910:1, col:2>
|   | `-TextComment 0x55887c3a1390 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a13e0 <col:3, line:2911:2> [in] explicitly Param="Buffer1" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a1490 <line:2910:21, line:2911:2>
|   |   |-TextComment 0x55887c3a1440 <line:2910:21, col:66> Text="                  The pointer to first buffer."
|   |   `-TextComment 0x55887c3a1460 <line:2911:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a14b0 <col:3, col:67> [in] explicitly Param="Buffer2" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a1540 <col:21, col:67>
|   |   `-TextComment 0x55887c3a1510 <col:21, col:67> Text="                  The pointer to second buffer."
|   |-ParagraphComment 0x55887c3a1590 <line:2913:1, col:2>
|   | `-TextComment 0x55887c3a1560 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3a15b0 <col:3, line:2914:2> Name="retval" Arg[0]="0"
|   | `-ParagraphComment 0x55887c3a1650 <line:2913:12, line:2914:2>
|   |   |-TextComment 0x55887c3a1600 <line:2913:12, col:63> Text="                           Buffer1 equal to Buffer2."
|   |   `-TextComment 0x55887c3a1620 <line:2914:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3a1670 <col:3, line:2915:2> Name="return"
|   | `-ParagraphComment 0x55887c3a1740 <line:2914:10, line:2915:2>
|   |   |-TextComment 0x55887c3a16a0 <line:2914:10> Text=" "
|   |   |-TextComment 0x55887c3a16c0 <col:11> Text="<"
|   |   |-TextComment 0x55887c3a16e0 <col:12, col:67> Text="0                          Buffer1 is less than Buffer2."
|   |   `-TextComment 0x55887c3a1700 <line:2915:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a1760 <col:3, col:70> Name="return"
|     `-ParagraphComment 0x55887c3a17c0 <col:10, col:70>
|       `-TextComment 0x55887c3a1790 <col:10, col:70> Text=" >0                          Buffer1 is greater than Buffer2."
|-FunctionDecl 0x55887c12a028 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2955:3> line:2949:1 QuickSort 'void (void *, const UINTN, const UINTN, BASE_SORT_COMPARE, void *)'
| |-ParmVarDecl 0x55887c129cc0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2950:32> col:32 BufferToSort 'void *'
| |-ParmVarDecl 0x55887c129d38 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2951:31> col:31 Count 'const UINTN':'const unsigned long long'
| |-ParmVarDecl 0x55887c129db0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2952:31> col:31 ElementSize 'const UINTN':'const unsigned long long'
| |-ParmVarDecl 0x55887c129e50 <line:2953:12, col:31> col:31 CompareFunction 'BASE_SORT_COMPARE':'INTN (*)(const void *, const void *)'
| |-ParmVarDecl 0x55887c129ed0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:2954:32> col:32 BufferOneElement 'void *'
| `-FullComment 0x55887c3a2080 <line:2925:1, line:2945:82>
|   |-ParagraphComment 0x55887c3a1910 <line:2925:1, line:2927:39>
|   | |-TextComment 0x55887c3a1890 <line:2925:1, col:50> Text="  This function is identical to perform QuickSort,"
|   | |-TextComment 0x55887c3a18b0 <line:2926:1, col:87> Text="  except that is uses the pre-allocated buffer so the in place sorting does not need to"
|   | `-TextComment 0x55887c3a18d0 <line:2927:1, col:39> Text="  allocate and free buffers constantly."
|   |-ParagraphComment 0x55887c3a1960 <line:2929:1, col:35>
|   | `-TextComment 0x55887c3a1930 <col:1, col:35> Text="  Each element must be equal sized."
|   |-ParagraphComment 0x55887c3a1a70 <line:2931:1, line:2934:37>
|   | |-TextComment 0x55887c3a1980 <line:2931:1, col:39> Text="  if BufferToSort is NULL, then ASSERT."
|   | |-TextComment 0x55887c3a19a0 <line:2932:1, col:42> Text="  if CompareFunction is NULL, then ASSERT."
|   | |-TextComment 0x55887c3a19c0 <line:2933:1, col:43> Text="  if BufferOneElement is NULL, then ASSERT."
|   | |-TextComment 0x55887c3a19e0 <line:2934:1, col:20> Text="  if ElementSize is "
|   | |-TextComment 0x55887c3a1a00 <col:21> Text="<"
|   | `-TextComment 0x55887c3a1a20 <col:22, col:37> Text=" 1, then ASSERT."
|   |-ParagraphComment 0x55887c3a1b10 <line:2936:1, col:41>
|   | |-TextComment 0x55887c3a1a90 <col:1, col:14> Text="  if Count is "
|   | |-TextComment 0x55887c3a1ab0 <col:15> Text="<"
|   | `-TextComment 0x55887c3a1ad0 <col:16, col:41> Text=" 2 then perform no action."
|   |-ParagraphComment 0x55887c3a1b60 <line:2938:1, col:2>
|   | `-TextComment 0x55887c3a1b30 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a1b80 <col:3, line:2940:2> [in,out] explicitly Param="BufferToSort" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a1c70 <line:2938:31, line:2940:2>
|   |   |-TextComment 0x55887c3a1bf0 <line:2938:31, col:79> Text="   on call a Buffer of (possibly sorted) elements"
|   |   |-TextComment 0x55887c3a1c10 <line:2939:1, col:70> Text="                                 on return a buffer of sorted elements"
|   |   `-TextComment 0x55887c3a1c30 <line:2940:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a1c90 <col:3, line:2941:2> [in] explicitly Param="Count" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a1d40 <line:2940:19, line:2941:2>
|   |   |-TextComment 0x55887c3a1cf0 <line:2940:19, col:77> Text="               the number of elements in the buffer to sort"
|   |   `-TextComment 0x55887c3a1d10 <line:2941:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a1d60 <col:3, line:2942:2> [in] explicitly Param="ElementSize" ParamIndex=2
|   | `-ParagraphComment 0x55887c3a1e20 <line:2941:25, line:2942:2>
|   |   |-TextComment 0x55887c3a1dd0 <line:2941:25, col:60> Text="         Size of an element in bytes"
|   |   `-TextComment 0x55887c3a1df0 <line:2942:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a1e40 <col:3, line:2944:2> [in] explicitly Param="CompareFunction" ParamIndex=3
|   | `-ParagraphComment 0x55887c3a1f30 <line:2942:29, line:2944:2>
|   |   |-TextComment 0x55887c3a1eb0 <line:2942:29, col:79> Text="     The function to call to perform the comparison"
|   |   |-TextComment 0x55887c3a1ed0 <line:2943:1, col:50> Text="                                 of any 2 elements"
|   |   `-TextComment 0x55887c3a1ef0 <line:2944:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3a1f50 <col:3, line:2945:82> [out] explicitly Param="BufferOneElement" ParamIndex=4
|     `-ParagraphComment 0x55887c3a2010 <line:2944:31, line:2945:82>
|       |-TextComment 0x55887c3a1fc0 <line:2944:31, col:89> Text="   Caller provided buffer whose size equals to ElementSize."
|       `-TextComment 0x55887c3a1fe0 <line:2945:1, col:82> Text="                                 It's used by QuickSort() for swapping in sorting."
|-FunctionDecl 0x55887c12a2b8 <line:2972:1, line:2977:3> line:2974:1 LShiftU64 'UINT64 (UINT64, UINTN)'
| |-ParmVarDecl 0x55887c12a128 <line:2975:11, col:19> col:19 Operand 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c12a1a0 <line:2976:11, col:19> col:19 Count 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3a2570 <line:2958:1, line:2969:27>
|   |-ParagraphComment 0x55887c3a2140 <line:2958:1, line:2959:44>
|   | |-TextComment 0x55887c3a20f0 <line:2958:1, col:77> Text="  Shifts a 64-bit integer left between 0 and 63 bits. The low bits are filled"
|   | `-TextComment 0x55887c3a2110 <line:2959:1, col:44> Text="  with zeros. The shifted value is returned."
|   |-ParagraphComment 0x55887c3a21b0 <line:2961:1, line:2962:64>
|   | |-TextComment 0x55887c3a2160 <line:2961:1, col:78> Text="  This function shifts the 64-bit value Operand to the left by Count bits. The"
|   | `-TextComment 0x55887c3a2180 <line:2962:1, col:64> Text="  low Count bits are set to zero. The shifted value is returned."
|   |-ParagraphComment 0x55887c3a2200 <line:2964:1, col:45>
|   | `-TextComment 0x55887c3a21d0 <col:1, col:45> Text="  If Count is greater than 63, then ASSERT()."
|   |-ParagraphComment 0x55887c3a2250 <line:2966:1, col:2>
|   | `-TextComment 0x55887c3a2220 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a2270 <col:3, line:2967:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a2320 <line:2966:18, line:2967:2>
|   |   |-TextComment 0x55887c3a22d0 <line:2966:18, col:51> Text=" The 64-bit operand to shift left."
|   |   `-TextComment 0x55887c3a22f0 <line:2967:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a2340 <col:3, col:51> [in] implicitly Param="Count" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a23d0 <col:16, col:51>
|   |   `-TextComment 0x55887c3a23a0 <col:16, col:51> Text="   The number of bits to shift left."
|   |-ParagraphComment 0x55887c3a2420 <line:2969:1, col:2>
|   | `-TextComment 0x55887c3a23f0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a2440 <col:3, col:27> Name="return"
|     `-ParagraphComment 0x55887c3a2510 <col:10, col:27>
|       |-TextComment 0x55887c3a2470 <col:10, col:18> Text=" Operand "
|       |-TextComment 0x55887c3a2490 <col:19> Text="<"
|       |-TextComment 0x55887c3a24b0 <col:20> Text="<"
|       `-TextComment 0x55887c3a24d0 <col:21, col:27> Text=" Count."
|-FunctionDecl 0x55887c12a4b8 <line:2994:1, line:2999:3> line:2996:1 RShiftU64 'UINT64 (UINT64, UINTN)'
| |-ParmVarDecl 0x55887c12a3a8 <line:2997:11, col:19> col:19 Operand 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c12a420 <line:2998:11, col:19> col:19 Count 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3a29f0 <line:2980:1, line:2991:26>
|   |-ParagraphComment 0x55887c3a2630 <line:2980:1, line:2981:51>
|   | |-TextComment 0x55887c3a25e0 <line:2980:1, col:73> Text="  Shifts a 64-bit integer right between 0 and 63 bits. This high bits are"
|   | `-TextComment 0x55887c3a2600 <line:2981:1, col:51> Text="  filled with zeros. The shifted value is returned."
|   |-ParagraphComment 0x55887c3a26a0 <line:2983:1, line:2984:65>
|   | |-TextComment 0x55887c3a2650 <line:2983:1, col:79> Text="  This function shifts the 64-bit value Operand to the right by Count bits. The"
|   | `-TextComment 0x55887c3a2670 <line:2984:1, col:65> Text="  high Count bits are set to zero. The shifted value is returned."
|   |-ParagraphComment 0x55887c3a26f0 <line:2986:1, col:45>
|   | `-TextComment 0x55887c3a26c0 <col:1, col:45> Text="  If Count is greater than 63, then ASSERT()."
|   |-ParagraphComment 0x55887c3a2740 <line:2988:1, col:2>
|   | `-TextComment 0x55887c3a2710 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a2760 <col:3, line:2989:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a2810 <line:2988:18, line:2989:2>
|   |   |-TextComment 0x55887c3a27c0 <line:2988:18, col:52> Text=" The 64-bit operand to shift right."
|   |   `-TextComment 0x55887c3a27e0 <line:2989:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a2830 <col:3, col:52> [in] implicitly Param="Count" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a28c0 <col:16, col:52>
|   |   `-TextComment 0x55887c3a2890 <col:16, col:52> Text="   The number of bits to shift right."
|   |-ParagraphComment 0x55887c3a2910 <line:2991:1, col:2>
|   | `-TextComment 0x55887c3a28e0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a2930 <col:3, col:26> Name="return"
|     `-ParagraphComment 0x55887c3a2990 <col:10, col:26>
|       `-TextComment 0x55887c3a2960 <col:10, col:26> Text=" Operand >> Count"
|-FunctionDecl 0x55887c12a6d0 <line:3016:1, line:3021:3> line:3018:1 ARShiftU64 'UINT64 (UINT64, UINTN)'
| |-ParmVarDecl 0x55887c12a5a8 <line:3019:11, col:19> col:19 Operand 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c12a620 <line:3020:11, col:19> col:19 Count 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3a2e70 <line:3002:1, line:3013:26>
|   |-ParagraphComment 0x55887c3a2ab0 <line:3002:1, line:3003:64>
|   | |-TextComment 0x55887c3a2a60 <line:3002:1, col:79> Text="  Shifts a 64-bit integer right between 0 and 63 bits. The high bits are filled"
|   | `-TextComment 0x55887c3a2a80 <line:3003:1, col:64> Text="  with original integer's bit 63. The shifted value is returned."
|   |-ParagraphComment 0x55887c3a2b20 <line:3005:1, line:3006:79>
|   | |-TextComment 0x55887c3a2ad0 <line:3005:1, col:79> Text="  This function shifts the 64-bit value Operand to the right by Count bits. The"
|   | `-TextComment 0x55887c3a2af0 <line:3006:1, col:79> Text="  high Count bits are set to bit 63 of Operand.  The shifted value is returned."
|   |-ParagraphComment 0x55887c3a2b70 <line:3008:1, col:45>
|   | `-TextComment 0x55887c3a2b40 <col:1, col:45> Text="  If Count is greater than 63, then ASSERT()."
|   |-ParagraphComment 0x55887c3a2bc0 <line:3010:1, col:2>
|   | `-TextComment 0x55887c3a2b90 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a2be0 <col:3, line:3011:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a2c90 <line:3010:18, line:3011:2>
|   |   |-TextComment 0x55887c3a2c40 <line:3010:18, col:52> Text=" The 64-bit operand to shift right."
|   |   `-TextComment 0x55887c3a2c60 <line:3011:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a2cb0 <col:3, col:52> [in] implicitly Param="Count" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a2d40 <col:16, col:52>
|   |   `-TextComment 0x55887c3a2d10 <col:16, col:52> Text="   The number of bits to shift right."
|   |-ParagraphComment 0x55887c3a2d90 <line:3013:1, col:2>
|   | `-TextComment 0x55887c3a2d60 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a2db0 <col:3, col:26> Name="return"
|     `-ParagraphComment 0x55887c3a2e10 <col:10, col:26>
|       `-TextComment 0x55887c3a2de0 <col:10, col:26> Text=" Operand >> Count"
|-FunctionDecl 0x55887c12a948 <line:3039:1, line:3044:3> line:3041:1 LRotU32 'UINT32 (UINT32, UINTN)'
| |-ParmVarDecl 0x55887c12a7b8 <line:3042:11, col:19> col:19 Operand 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c12a830 <line:3043:11, col:19> col:19 Count 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3a33a0 <line:3024:1, line:3036:26>
|   |-ParagraphComment 0x55887c3a2f30 <line:3024:1, line:3025:39>
|   | |-TextComment 0x55887c3a2ee0 <line:3024:1, col:75> Text="  Rotates a 32-bit integer left between 0 and 31 bits, filling the low bits"
|   | `-TextComment 0x55887c3a2f00 <line:3025:1, col:39> Text="  with the high bits that were rotated."
|   |-ParagraphComment 0x55887c3a2fe0 <line:3027:1, line:3029:20>
|   | |-TextComment 0x55887c3a2f50 <line:3027:1, col:79> Text="  This function rotates the 32-bit value Operand to the left by Count bits. The"
|   | |-TextComment 0x55887c3a2f70 <line:3028:1, col:74> Text="  low Count bits are fill with the high Count bits of Operand. The rotated"
|   | `-TextComment 0x55887c3a2f90 <line:3029:1, col:20> Text="  value is returned."
|   |-ParagraphComment 0x55887c3a3030 <line:3031:1, col:45>
|   | `-TextComment 0x55887c3a3000 <col:1, col:45> Text="  If Count is greater than 31, then ASSERT()."
|   |-ParagraphComment 0x55887c3a3080 <line:3033:1, col:2>
|   | `-TextComment 0x55887c3a3050 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a30a0 <col:3, line:3034:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a3150 <line:3033:18, line:3034:2>
|   |   |-TextComment 0x55887c3a3100 <line:3033:18, col:52> Text=" The 32-bit operand to rotate left."
|   |   `-TextComment 0x55887c3a3120 <line:3034:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a3170 <col:3, col:52> [in] implicitly Param="Count" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a3200 <col:16, col:52>
|   |   `-TextComment 0x55887c3a31d0 <col:16, col:52> Text="   The number of bits to rotate left."
|   |-ParagraphComment 0x55887c3a3250 <line:3036:1, col:2>
|   | `-TextComment 0x55887c3a3220 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a3270 <col:3, col:26> Name="return"
|     `-ParagraphComment 0x55887c3a3340 <col:10, col:26>
|       |-TextComment 0x55887c3a32a0 <col:10, col:18> Text=" Operand "
|       |-TextComment 0x55887c3a32c0 <col:19> Text="<"
|       |-TextComment 0x55887c3a32e0 <col:20> Text="<"
|       `-TextComment 0x55887c3a3300 <col:21, col:26> Text=" Count"
|-FunctionDecl 0x55887c12ab48 <line:3062:1, line:3067:3> line:3064:1 RRotU32 'UINT32 (UINT32, UINTN)'
| |-ParmVarDecl 0x55887c12aa38 <line:3065:11, col:19> col:19 Operand 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c12aab0 <line:3066:11, col:19> col:19 Count 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3a3850 <line:3047:1, line:3059:26>
|   |-ParagraphComment 0x55887c3a3460 <line:3047:1, line:3048:38>
|   | |-TextComment 0x55887c3a3410 <line:3047:1, col:77> Text="  Rotates a 32-bit integer right between 0 and 31 bits, filling the high bits"
|   | `-TextComment 0x55887c3a3430 <line:3048:1, col:38> Text="  with the low bits that were rotated."
|   |-ParagraphComment 0x55887c3a3500 <line:3050:1, line:3052:20>
|   | |-TextComment 0x55887c3a3480 <line:3050:1, col:76> Text="  This function rotates the 32-bit value Operand to the right by Count bits."
|   | |-TextComment 0x55887c3a34a0 <line:3051:1, col:78> Text="  The high Count bits are fill with the low Count bits of Operand. The rotated"
|   | `-TextComment 0x55887c3a34c0 <line:3052:1, col:20> Text="  value is returned."
|   |-ParagraphComment 0x55887c3a3550 <line:3054:1, col:45>
|   | `-TextComment 0x55887c3a3520 <col:1, col:45> Text="  If Count is greater than 31, then ASSERT()."
|   |-ParagraphComment 0x55887c3a35a0 <line:3056:1, col:2>
|   | `-TextComment 0x55887c3a3570 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a35c0 <col:3, line:3057:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a3670 <line:3056:18, line:3057:2>
|   |   |-TextComment 0x55887c3a3620 <line:3056:18, col:53> Text=" The 32-bit operand to rotate right."
|   |   `-TextComment 0x55887c3a3640 <line:3057:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a3690 <col:3, col:53> [in] implicitly Param="Count" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a3720 <col:16, col:53>
|   |   `-TextComment 0x55887c3a36f0 <col:16, col:53> Text="   The number of bits to rotate right."
|   |-ParagraphComment 0x55887c3a3770 <line:3059:1, col:2>
|   | `-TextComment 0x55887c3a3740 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a3790 <col:3, col:26> Name="return"
|     `-ParagraphComment 0x55887c3a37f0 <col:10, col:26>
|       `-TextComment 0x55887c3a37c0 <col:10, col:26> Text=" Operand >> Count"
|-FunctionDecl 0x55887c12ad48 <line:3085:1, line:3090:3> line:3087:1 LRotU64 'UINT64 (UINT64, UINTN)'
| |-ParmVarDecl 0x55887c12ac38 <line:3088:11, col:19> col:19 Operand 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c12acb0 <line:3089:11, col:19> col:19 Count 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3a3d70 <line:3070:1, line:3082:26>
|   |-ParagraphComment 0x55887c3a3910 <line:3070:1, line:3071:39>
|   | |-TextComment 0x55887c3a38c0 <line:3070:1, col:75> Text="  Rotates a 64-bit integer left between 0 and 63 bits, filling the low bits"
|   | `-TextComment 0x55887c3a38e0 <line:3071:1, col:39> Text="  with the high bits that were rotated."
|   |-ParagraphComment 0x55887c3a39b0 <line:3073:1, line:3075:20>
|   | |-TextComment 0x55887c3a3930 <line:3073:1, col:79> Text="  This function rotates the 64-bit value Operand to the left by Count bits. The"
|   | |-TextComment 0x55887c3a3950 <line:3074:1, col:74> Text="  low Count bits are fill with the high Count bits of Operand. The rotated"
|   | `-TextComment 0x55887c3a3970 <line:3075:1, col:20> Text="  value is returned."
|   |-ParagraphComment 0x55887c3a3a00 <line:3077:1, col:45>
|   | `-TextComment 0x55887c3a39d0 <col:1, col:45> Text="  If Count is greater than 63, then ASSERT()."
|   |-ParagraphComment 0x55887c3a3a50 <line:3079:1, col:2>
|   | `-TextComment 0x55887c3a3a20 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a3a70 <col:3, line:3080:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a3b20 <line:3079:18, line:3080:2>
|   |   |-TextComment 0x55887c3a3ad0 <line:3079:18, col:52> Text=" The 64-bit operand to rotate left."
|   |   `-TextComment 0x55887c3a3af0 <line:3080:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a3b40 <col:3, col:52> [in] implicitly Param="Count" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a3bd0 <col:16, col:52>
|   |   `-TextComment 0x55887c3a3ba0 <col:16, col:52> Text="   The number of bits to rotate left."
|   |-ParagraphComment 0x55887c3a3c20 <line:3082:1, col:2>
|   | `-TextComment 0x55887c3a3bf0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a3c40 <col:3, col:26> Name="return"
|     `-ParagraphComment 0x55887c3a3d10 <col:10, col:26>
|       |-TextComment 0x55887c3a3c70 <col:10, col:18> Text=" Operand "
|       |-TextComment 0x55887c3a3c90 <col:19> Text="<"
|       |-TextComment 0x55887c3a3cb0 <col:20> Text="<"
|       `-TextComment 0x55887c3a3cd0 <col:21, col:26> Text=" Count"
|-FunctionDecl 0x55887c12af48 <line:3108:1, line:3113:3> line:3110:1 RRotU64 'UINT64 (UINT64, UINTN)'
| |-ParmVarDecl 0x55887c12ae38 <line:3111:11, col:19> col:19 Operand 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c12aeb0 <line:3112:11, col:19> col:19 Count 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3a4220 <line:3093:1, line:3105:26>
|   |-ParagraphComment 0x55887c3a3e30 <line:3093:1, line:3094:43>
|   | |-TextComment 0x55887c3a3de0 <line:3093:1, col:77> Text="  Rotates a 64-bit integer right between 0 and 63 bits, filling the high bits"
|   | `-TextComment 0x55887c3a3e00 <line:3094:1, col:43> Text="  with the high low bits that were rotated."
|   |-ParagraphComment 0x55887c3a3ed0 <line:3096:1, line:3098:20>
|   | |-TextComment 0x55887c3a3e50 <line:3096:1, col:76> Text="  This function rotates the 64-bit value Operand to the right by Count bits."
|   | |-TextComment 0x55887c3a3e70 <line:3097:1, col:78> Text="  The high Count bits are fill with the low Count bits of Operand. The rotated"
|   | `-TextComment 0x55887c3a3e90 <line:3098:1, col:20> Text="  value is returned."
|   |-ParagraphComment 0x55887c3a3f20 <line:3100:1, col:45>
|   | `-TextComment 0x55887c3a3ef0 <col:1, col:45> Text="  If Count is greater than 63, then ASSERT()."
|   |-ParagraphComment 0x55887c3a3f70 <line:3102:1, col:2>
|   | `-TextComment 0x55887c3a3f40 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a3f90 <col:3, line:3103:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a4040 <line:3102:18, line:3103:2>
|   |   |-TextComment 0x55887c3a3ff0 <line:3102:18, col:53> Text=" The 64-bit operand to rotate right."
|   |   `-TextComment 0x55887c3a4010 <line:3103:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a4060 <col:3, col:53> [in] implicitly Param="Count" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a40f0 <col:16, col:53>
|   |   `-TextComment 0x55887c3a40c0 <col:16, col:53> Text="   The number of bits to rotate right."
|   |-ParagraphComment 0x55887c3a4140 <line:3105:1, col:2>
|   | `-TextComment 0x55887c3a4110 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a4160 <col:3, col:26> Name="return"
|     `-ParagraphComment 0x55887c3a41c0 <col:10, col:26>
|       `-TextComment 0x55887c3a4190 <col:10, col:26> Text=" Operand >> Count"
|-FunctionDecl 0x55887c12b128 <line:3128:1, line:3132:3> line:3130:1 LowBitSet32 'INTN (UINT32)'
| |-ParmVarDecl 0x55887c12b038 <line:3131:11, col:19> col:19 Operand 'UINT32':'unsigned int'
| `-FullComment 0x55887c3a4670 <line:3116:1, line:3125:32>
|   |-ParagraphComment 0x55887c3a42c0 <line:3116:1, col:67>
|   | `-TextComment 0x55887c3a4290 <col:1, col:67> Text="  Returns the bit position of the lowest bit set in a 32-bit value."
|   |-ParagraphComment 0x55887c3a4360 <line:3118:1, line:3120:50>
|   | |-TextComment 0x55887c3a42e0 <line:3118:1, col:77> Text="  This function computes the bit position of the lowest bit set in the 32-bit"
|   | |-TextComment 0x55887c3a4300 <line:3119:1, col:70> Text="  value specified by Operand. If Operand is zero, then -1 is returned."
|   | `-TextComment 0x55887c3a4320 <line:3120:1, col:50> Text="  Otherwise, a value between 0 and 31 is returned."
|   |-ParagraphComment 0x55887c3a43b0 <line:3122:1, col:2>
|   | `-TextComment 0x55887c3a4380 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a43d0 <col:3, col:49> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a4460 <col:18, col:49>
|   |   `-TextComment 0x55887c3a4430 <col:18, col:49> Text=" The 32-bit operand to evaluate."
|   |-ParagraphComment 0x55887c3a44b0 <line:3124:1, col:2>
|   | `-TextComment 0x55887c3a4480 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3a44d0 <col:3, line:3125:2> Name="retval" Arg[0]="0..31"
|   | `-ParagraphComment 0x55887c3a4570 <line:3124:16, line:3125:2>
|   |   |-TextComment 0x55887c3a4520 <line:3124:16, col:57> Text="  The lowest bit set in Operand was found."
|   |   `-TextComment 0x55887c3a4540 <line:3125:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a4590 <col:3, col:32> Name="retval" Arg[0]="-1"
|     `-ParagraphComment 0x55887c3a4610 <col:13, col:32>
|       `-TextComment 0x55887c3a45e0 <col:13, col:32> Text="    Operand is zero."
|-FunctionDecl 0x55887c12b2f8 <line:3148:1, line:3152:3> line:3150:1 LowBitSet64 'INTN (UINT64)'
| |-ParmVarDecl 0x55887c12b208 <line:3151:11, col:19> col:19 Operand 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3a4ac0 <line:3135:1, line:3144:32>
|   |-ParagraphComment 0x55887c3a4710 <line:3135:1, col:67>
|   | `-TextComment 0x55887c3a46e0 <col:1, col:67> Text="  Returns the bit position of the lowest bit set in a 64-bit value."
|   |-ParagraphComment 0x55887c3a47b0 <line:3137:1, line:3139:50>
|   | |-TextComment 0x55887c3a4730 <line:3137:1, col:77> Text="  This function computes the bit position of the lowest bit set in the 64-bit"
|   | |-TextComment 0x55887c3a4750 <line:3138:1, col:70> Text="  value specified by Operand. If Operand is zero, then -1 is returned."
|   | `-TextComment 0x55887c3a4770 <line:3139:1, col:50> Text="  Otherwise, a value between 0 and 63 is returned."
|   |-ParagraphComment 0x55887c3a4800 <line:3141:1, col:2>
|   | `-TextComment 0x55887c3a47d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a4820 <col:3, col:49> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a48b0 <col:18, col:49>
|   |   `-TextComment 0x55887c3a4880 <col:18, col:49> Text=" The 64-bit operand to evaluate."
|   |-ParagraphComment 0x55887c3a4900 <line:3143:1, col:2>
|   | `-TextComment 0x55887c3a48d0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3a4920 <col:3, line:3144:2> Name="retval" Arg[0]="0..63"
|   | `-ParagraphComment 0x55887c3a49c0 <line:3143:16, line:3144:2>
|   |   |-TextComment 0x55887c3a4970 <line:3143:16, col:57> Text="  The lowest bit set in Operand was found."
|   |   `-TextComment 0x55887c3a4990 <line:3144:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a49e0 <col:3, col:32> Name="retval" Arg[0]="-1"
|     `-ParagraphComment 0x55887c3a4a60 <col:13, col:32>
|       `-TextComment 0x55887c3a4a30 <col:13, col:32> Text="    Operand is zero."
|-FunctionDecl 0x55887c12b468 <line:3168:1, line:3172:3> line:3170:1 HighBitSet32 'INTN (UINT32)'
| |-ParmVarDecl 0x55887c12b3d8 <line:3171:11, col:19> col:19 Operand 'UINT32':'unsigned int'
| `-FullComment 0x55887c3a4f30 <line:3155:1, line:3165:32>
|   |-ParagraphComment 0x55887c3a4b80 <line:3155:1, line:3156:13>
|   | |-TextComment 0x55887c3a4b30 <line:3155:1, col:79> Text="  Returns the bit position of the highest bit set in a 32-bit value. Equivalent"
|   | `-TextComment 0x55887c3a4b50 <line:3156:1, col:13> Text="  to log2(x)."
|   |-ParagraphComment 0x55887c3a4c20 <line:3158:1, line:3160:50>
|   | |-TextComment 0x55887c3a4ba0 <line:3158:1, col:78> Text="  This function computes the bit position of the highest bit set in the 32-bit"
|   | |-TextComment 0x55887c3a4bc0 <line:3159:1, col:70> Text="  value specified by Operand. If Operand is zero, then -1 is returned."
|   | `-TextComment 0x55887c3a4be0 <line:3160:1, col:50> Text="  Otherwise, a value between 0 and 31 is returned."
|   |-ParagraphComment 0x55887c3a4c70 <line:3162:1, col:2>
|   | `-TextComment 0x55887c3a4c40 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a4c90 <col:3, col:49> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a4d20 <col:18, col:49>
|   |   `-TextComment 0x55887c3a4cf0 <col:18, col:49> Text=" The 32-bit operand to evaluate."
|   |-ParagraphComment 0x55887c3a4d70 <line:3164:1, col:2>
|   | `-TextComment 0x55887c3a4d40 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3a4d90 <col:3, line:3165:2> Name="retval" Arg[0]="0..31"
|   | `-ParagraphComment 0x55887c3a4e30 <line:3164:16, line:3165:2>
|   |   |-TextComment 0x55887c3a4de0 <line:3164:16, col:69> Text="  Position of the highest bit set in Operand if found."
|   |   `-TextComment 0x55887c3a4e00 <line:3165:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a4e50 <col:3, col:32> Name="retval" Arg[0]="-1"
|     `-ParagraphComment 0x55887c3a4ed0 <col:13, col:32>
|       `-TextComment 0x55887c3a4ea0 <col:13, col:32> Text="    Operand is zero."
|-FunctionDecl 0x55887c12b5d8 <line:3188:1, line:3192:3> line:3190:1 HighBitSet64 'INTN (UINT64)'
| |-ParmVarDecl 0x55887c12b548 <line:3191:11, col:19> col:19 Operand 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3a53a0 <line:3175:1, line:3185:33>
|   |-ParagraphComment 0x55887c3a4ff0 <line:3175:1, line:3176:13>
|   | |-TextComment 0x55887c3a4fa0 <line:3175:1, col:79> Text="  Returns the bit position of the highest bit set in a 64-bit value. Equivalent"
|   | `-TextComment 0x55887c3a4fc0 <line:3176:1, col:13> Text="  to log2(x)."
|   |-ParagraphComment 0x55887c3a5090 <line:3178:1, line:3180:50>
|   | |-TextComment 0x55887c3a5010 <line:3178:1, col:78> Text="  This function computes the bit position of the highest bit set in the 64-bit"
|   | |-TextComment 0x55887c3a5030 <line:3179:1, col:70> Text="  value specified by Operand. If Operand is zero, then -1 is returned."
|   | `-TextComment 0x55887c3a5050 <line:3180:1, col:50> Text="  Otherwise, a value between 0 and 63 is returned."
|   |-ParagraphComment 0x55887c3a50e0 <line:3182:1, col:2>
|   | `-TextComment 0x55887c3a50b0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a5100 <col:3, col:49> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a5190 <col:18, col:49>
|   |   `-TextComment 0x55887c3a5160 <col:18, col:49> Text=" The 64-bit operand to evaluate."
|   |-ParagraphComment 0x55887c3a51e0 <line:3184:1, col:2>
|   | `-TextComment 0x55887c3a51b0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3a5200 <col:3, line:3185:2> Name="retval" Arg[0]="0..63"
|   | `-ParagraphComment 0x55887c3a52a0 <line:3184:16, line:3185:2>
|   |   |-TextComment 0x55887c3a5250 <line:3184:16, col:70> Text="   Position of the highest bit set in Operand if found."
|   |   `-TextComment 0x55887c3a5270 <line:3185:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a52c0 <col:3, col:33> Name="retval" Arg[0]="-1"
|     `-ParagraphComment 0x55887c3a5340 <col:13, col:33>
|       `-TextComment 0x55887c3a5310 <col:13, col:33> Text="     Operand is zero."
|-FunctionDecl 0x55887c12c8a8 <line:3207:1, line:3211:3> line:3209:1 GetPowerOfTwo32 'UINT32 (UINT32)'
| |-ParmVarDecl 0x55887c12c7b0 <line:3210:11, col:19> col:19 Operand 'UINT32':'unsigned int'
| `-FullComment 0x55887c3a58c0 <line:3195:1, line:3204:28>
|   |-ParagraphComment 0x55887c3a54e0 <line:3195:1, line:3196:15>
|   | |-TextComment 0x55887c3a5410 <line:3195:1, col:75> Text="  Returns the value of the highest bit set in a 32-bit value. Equivalent to"
|   | |-TextComment 0x55887c3a5430 <line:3196:1, col:4> Text="  1 "
|   | |-TextComment 0x55887c3a5450 <col:5> Text="<"
|   | |-TextComment 0x55887c3a5470 <col:6> Text="<"
|   | `-TextComment 0x55887c3a5490 <col:7, col:15> Text=" log2(x)."
|   |-ParagraphComment 0x55887c3a5550 <line:3198:1, line:3199:66>
|   | |-TextComment 0x55887c3a5500 <line:3198:1, col:77> Text="  This function computes the value of the highest bit set in the 32-bit value"
|   | `-TextComment 0x55887c3a5520 <line:3199:1, col:66> Text="  specified by Operand. If Operand is zero, then zero is returned."
|   |-ParagraphComment 0x55887c3a55a0 <line:3201:1, col:2>
|   | `-TextComment 0x55887c3a5570 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a55c0 <col:3, col:49> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a5650 <col:18, col:49>
|   |   `-TextComment 0x55887c3a5620 <col:18, col:49> Text=" The 32-bit operand to evaluate."
|   |-ParagraphComment 0x55887c3a56a0 <line:3203:1, col:2>
|   | `-TextComment 0x55887c3a5670 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3a56c0 <col:3, line:3204:2> Name="return"
|   | `-ParagraphComment 0x55887c3a57c0 <line:3203:10, line:3204:2>
|   |   |-TextComment 0x55887c3a56f0 <line:3203:10, col:12> Text=" 1 "
|   |   |-TextComment 0x55887c3a5710 <col:13> Text="<"
|   |   |-TextComment 0x55887c3a5730 <col:14> Text="<"
|   |   |-TextComment 0x55887c3a5750 <col:15, col:36> Text=" HighBitSet32(Operand)"
|   |   `-TextComment 0x55887c3a5770 <line:3204:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a57e0 <col:3, col:28> Name="retval" Arg[0]="0"
|     `-ParagraphComment 0x55887c3a5860 <col:12, col:28>
|       `-TextComment 0x55887c3a5830 <col:12, col:28> Text=" Operand is zero."
|-FunctionDecl 0x55887c12ca78 <line:3226:1, line:3230:3> line:3228:1 GetPowerOfTwo64 'UINT64 (UINT64)'
| |-ParmVarDecl 0x55887c12c988 <line:3229:11, col:19> col:19 Operand 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3a5de0 <line:3214:1, line:3223:28>
|   |-ParagraphComment 0x55887c3a5a00 <line:3214:1, line:3215:15>
|   | |-TextComment 0x55887c3a5930 <line:3214:1, col:75> Text="  Returns the value of the highest bit set in a 64-bit value. Equivalent to"
|   | |-TextComment 0x55887c3a5950 <line:3215:1, col:4> Text="  1 "
|   | |-TextComment 0x55887c3a5970 <col:5> Text="<"
|   | |-TextComment 0x55887c3a5990 <col:6> Text="<"
|   | `-TextComment 0x55887c3a59b0 <col:7, col:15> Text=" log2(x)."
|   |-ParagraphComment 0x55887c3a5a70 <line:3217:1, line:3218:66>
|   | |-TextComment 0x55887c3a5a20 <line:3217:1, col:77> Text="  This function computes the value of the highest bit set in the 64-bit value"
|   | `-TextComment 0x55887c3a5a40 <line:3218:1, col:66> Text="  specified by Operand. If Operand is zero, then zero is returned."
|   |-ParagraphComment 0x55887c3a5ac0 <line:3220:1, col:2>
|   | `-TextComment 0x55887c3a5a90 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a5ae0 <col:3, col:49> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a5b70 <col:18, col:49>
|   |   `-TextComment 0x55887c3a5b40 <col:18, col:49> Text=" The 64-bit operand to evaluate."
|   |-ParagraphComment 0x55887c3a5bc0 <line:3222:1, col:2>
|   | `-TextComment 0x55887c3a5b90 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3a5be0 <col:3, line:3223:2> Name="return"
|   | `-ParagraphComment 0x55887c3a5ce0 <line:3222:10, line:3223:2>
|   |   |-TextComment 0x55887c3a5c10 <line:3222:10, col:12> Text=" 1 "
|   |   |-TextComment 0x55887c3a5c30 <col:13> Text="<"
|   |   |-TextComment 0x55887c3a5c50 <col:14> Text="<"
|   |   |-TextComment 0x55887c3a5c70 <col:15, col:36> Text=" HighBitSet64(Operand)"
|   |   `-TextComment 0x55887c3a5c90 <line:3223:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a5d00 <col:3, col:28> Name="retval" Arg[0]="0"
|     `-ParagraphComment 0x55887c3a5d80 <col:12, col:28>
|       `-TextComment 0x55887c3a5d50 <col:12, col:28> Text=" Operand is zero."
|-FunctionDecl 0x55887c12cc18 <line:3244:1, line:3248:3> line:3246:1 SwapBytes16 'UINT16 (UINT16)'
| |-ParmVarDecl 0x55887c12cb58 <line:3247:11, col:19> col:19 Value 'UINT16':'unsigned short'
| `-FullComment 0x55887c3a6140 <line:3233:1, line:3241:33>
|   |-ParagraphComment 0x55887c3a5e80 <line:3233:1, col:46>
|   | `-TextComment 0x55887c3a5e50 <col:1, col:46> Text="  Switches the endianness of a 16-bit integer."
|   |-ParagraphComment 0x55887c3a5f20 <line:3235:1, line:3237:11>
|   | |-TextComment 0x55887c3a5ea0 <line:3235:1, col:78> Text="  This function swaps the bytes in a 16-bit unsigned value to switch the value"
|   | |-TextComment 0x55887c3a5ec0 <line:3236:1, col:75> Text="  from little endian to big endian or vice versa. The byte swapped value is"
|   | `-TextComment 0x55887c3a5ee0 <line:3237:1, col:11> Text="  returned."
|   |-ParagraphComment 0x55887c3a5f70 <line:3239:1, col:2>
|   | `-TextComment 0x55887c3a5f40 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a5f90 <col:3, col:40> [in] implicitly Param="Value" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a6020 <col:16, col:40>
|   |   `-TextComment 0x55887c3a5ff0 <col:16, col:40> Text=" A 16-bit unsigned value."
|   |-ParagraphComment 0x55887c3a6070 <line:3241:1, col:2>
|   | `-TextComment 0x55887c3a6040 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a6090 <col:3, col:33> Name="return"
|     `-ParagraphComment 0x55887c3a60f0 <col:10, col:33>
|       `-TextComment 0x55887c3a60c0 <col:10, col:33> Text=" The byte swapped Value."
|-FunctionDecl 0x55887c12cd88 <line:3262:1, line:3266:3> line:3264:1 SwapBytes32 'UINT32 (UINT32)'
| |-ParmVarDecl 0x55887c12ccf8 <line:3265:11, col:19> col:19 Value 'UINT32':'unsigned int'
| `-FullComment 0x55887c3a64a0 <line:3251:1, line:3259:33>
|   |-ParagraphComment 0x55887c3a61e0 <line:3251:1, col:46>
|   | `-TextComment 0x55887c3a61b0 <col:1, col:46> Text="  Switches the endianness of a 32-bit integer."
|   |-ParagraphComment 0x55887c3a6280 <line:3253:1, line:3255:11>
|   | |-TextComment 0x55887c3a6200 <line:3253:1, col:78> Text="  This function swaps the bytes in a 32-bit unsigned value to switch the value"
|   | |-TextComment 0x55887c3a6220 <line:3254:1, col:75> Text="  from little endian to big endian or vice versa. The byte swapped value is"
|   | `-TextComment 0x55887c3a6240 <line:3255:1, col:11> Text="  returned."
|   |-ParagraphComment 0x55887c3a62d0 <line:3257:1, col:2>
|   | `-TextComment 0x55887c3a62a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a62f0 <col:3, col:40> [in] implicitly Param="Value" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a6380 <col:16, col:40>
|   |   `-TextComment 0x55887c3a6350 <col:16, col:40> Text=" A 32-bit unsigned value."
|   |-ParagraphComment 0x55887c3a63d0 <line:3259:1, col:2>
|   | `-TextComment 0x55887c3a63a0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a63f0 <col:3, col:33> Name="return"
|     `-ParagraphComment 0x55887c3a6450 <col:10, col:33>
|       `-TextComment 0x55887c3a6420 <col:10, col:33> Text=" The byte swapped Value."
|-FunctionDecl 0x55887c12cef8 <line:3280:1, line:3284:3> line:3282:1 SwapBytes64 'UINT64 (UINT64)'
| |-ParmVarDecl 0x55887c12ce68 <line:3283:11, col:19> col:19 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3a6800 <line:3269:1, line:3277:33>
|   |-ParagraphComment 0x55887c3a6540 <line:3269:1, col:46>
|   | `-TextComment 0x55887c3a6510 <col:1, col:46> Text="  Switches the endianness of a 64-bit integer."
|   |-ParagraphComment 0x55887c3a65e0 <line:3271:1, line:3273:11>
|   | |-TextComment 0x55887c3a6560 <line:3271:1, col:78> Text="  This function swaps the bytes in a 64-bit unsigned value to switch the value"
|   | |-TextComment 0x55887c3a6580 <line:3272:1, col:75> Text="  from little endian to big endian or vice versa. The byte swapped value is"
|   | `-TextComment 0x55887c3a65a0 <line:3273:1, col:11> Text="  returned."
|   |-ParagraphComment 0x55887c3a6630 <line:3275:1, col:2>
|   | `-TextComment 0x55887c3a6600 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a6650 <col:3, col:40> [in] implicitly Param="Value" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a66e0 <col:16, col:40>
|   |   `-TextComment 0x55887c3a66b0 <col:16, col:40> Text=" A 64-bit unsigned value."
|   |-ParagraphComment 0x55887c3a6730 <line:3277:1, col:2>
|   | `-TextComment 0x55887c3a6700 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a6750 <col:3, col:33> Name="return"
|     `-ParagraphComment 0x55887c3a67b0 <col:10, col:33>
|       `-TextComment 0x55887c3a6780 <col:10, col:33> Text=" The byte swapped Value."
|-FunctionDecl 0x55887c12d168 <line:3300:1, line:3305:3> line:3302:1 MultU64x32 'UINT64 (UINT64, UINT32)'
| |-ParmVarDecl 0x55887c12cfd8 <line:3303:11, col:19> col:19 Multiplicand 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c12d050 <line:3304:11, col:19> col:19 Multiplier 'UINT32':'unsigned int'
| `-FullComment 0x55887c3a6c60 <line:3287:1, line:3297:35>
|   |-ParagraphComment 0x55887c3a68c0 <line:3287:1, line:3288:37>
|   | |-TextComment 0x55887c3a6870 <line:3287:1, col:70> Text="  Multiples a 64-bit unsigned integer by a 32-bit unsigned integer and"
|   | `-TextComment 0x55887c3a6890 <line:3288:1, col:37> Text="  generates a 64-bit unsigned result."
|   |-ParagraphComment 0x55887c3a6960 <line:3290:1, line:3292:34>
|   | |-TextComment 0x55887c3a68e0 <line:3290:1, col:78> Text="  This function multiples the 64-bit unsigned value Multiplicand by the 32-bit"
|   | |-TextComment 0x55887c3a6900 <line:3291:1, col:76> Text="  unsigned value Multiplier and generates a 64-bit unsigned result. This 64-"
|   | `-TextComment 0x55887c3a6920 <line:3292:1, col:34> Text="  bit unsigned result is returned."
|   |-ParagraphComment 0x55887c3a69b0 <line:3294:1, col:2>
|   | `-TextComment 0x55887c3a6980 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a69d0 <col:3, line:3295:2> [in] implicitly Param="Multiplicand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a6a80 <line:3294:23, line:3295:2>
|   |   |-TextComment 0x55887c3a6a30 <line:3294:23, col:48> Text="  A 64-bit unsigned value."
|   |   `-TextComment 0x55887c3a6a50 <line:3295:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a6aa0 <col:3, col:48> [in] implicitly Param="Multiplier" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a6b30 <col:21, col:48>
|   |   `-TextComment 0x55887c3a6b00 <col:21, col:48> Text="    A 32-bit unsigned value."
|   |-ParagraphComment 0x55887c3a6b80 <line:3297:1, col:2>
|   | `-TextComment 0x55887c3a6b50 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a6ba0 <col:3, col:35> Name="return"
|     `-ParagraphComment 0x55887c3a6c00 <col:10, col:35>
|       `-TextComment 0x55887c3a6bd0 <col:10, col:35> Text=" Multiplicand * Multiplier"
|-FunctionDecl 0x55887c12d3a8 <line:3321:1, line:3326:3> line:3323:1 MultU64x64 'UINT64 (UINT64, UINT64)'
| |-ParmVarDecl 0x55887c12d258 <line:3324:11, col:19> col:19 Multiplicand 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c12d2d0 <line:3325:11, col:19> col:19 Multiplier 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3a70e0 <line:3308:1, line:3318:36>
|   |-ParagraphComment 0x55887c3a6d20 <line:3308:1, line:3309:37>
|   | |-TextComment 0x55887c3a6cd0 <line:3308:1, col:70> Text="  Multiples a 64-bit unsigned integer by a 64-bit unsigned integer and"
|   | `-TextComment 0x55887c3a6cf0 <line:3309:1, col:37> Text="  generates a 64-bit unsigned result."
|   |-ParagraphComment 0x55887c3a6dc0 <line:3311:1, line:3313:34>
|   | |-TextComment 0x55887c3a6d40 <line:3311:1, col:78> Text="  This function multiples the 64-bit unsigned value Multiplicand by the 64-bit"
|   | |-TextComment 0x55887c3a6d60 <line:3312:1, col:76> Text="  unsigned value Multiplier and generates a 64-bit unsigned result. This 64-"
|   | `-TextComment 0x55887c3a6d80 <line:3313:1, col:34> Text="  bit unsigned result is returned."
|   |-ParagraphComment 0x55887c3a6e10 <line:3315:1, col:2>
|   | `-TextComment 0x55887c3a6de0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a6e30 <col:3, line:3316:2> [in] implicitly Param="Multiplicand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a6ee0 <line:3315:23, line:3316:2>
|   |   |-TextComment 0x55887c3a6e90 <line:3315:23, col:48> Text="  A 64-bit unsigned value."
|   |   `-TextComment 0x55887c3a6eb0 <line:3316:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a6f00 <col:3, col:48> [in] implicitly Param="Multiplier" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a6f90 <col:21, col:48>
|   |   `-TextComment 0x55887c3a6f60 <col:21, col:48> Text="    A 64-bit unsigned value."
|   |-ParagraphComment 0x55887c3a7000 <line:3318:1, col:2>
|   | `-TextComment 0x55887c3a6fd0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a7020 <col:3, col:36> Name="return"
|     `-ParagraphComment 0x55887c3a7080 <col:10, col:36>
|       `-TextComment 0x55887c3a7050 <col:10, col:36> Text=" Multiplicand * Multiplier."
|-FunctionDecl 0x55887c12d628 <line:3342:1, line:3347:3> line:3344:1 MultS64x64 'INT64 (INT64, INT64)'
| |-ParmVarDecl 0x55887c12d498 <line:3345:11, col:18> col:18 Multiplicand 'INT64':'long long'
| |-ParmVarDecl 0x55887c12d510 <line:3346:11, col:18> col:18 Multiplier 'INT64':'long long'
| `-FullComment 0x55887c3a7540 <line:3329:1, line:3339:35>
|   |-ParagraphComment 0x55887c3a71a0 <line:3329:1, line:3330:23>
|   | |-TextComment 0x55887c3a7150 <line:3329:1, col:78> Text="  Multiples a 64-bit signed integer by a 64-bit signed integer and generates a"
|   | `-TextComment 0x55887c3a7170 <line:3330:1, col:23> Text="  64-bit signed result."
|   |-ParagraphComment 0x55887c3a7240 <line:3332:1, line:3334:28>
|   | |-TextComment 0x55887c3a71c0 <line:3332:1, col:76> Text="  This function multiples the 64-bit signed value Multiplicand by the 64-bit"
|   | |-TextComment 0x55887c3a71e0 <line:3333:1, col:75> Text="  signed value Multiplier and generates a 64-bit signed result. This 64-bit"
|   | `-TextComment 0x55887c3a7200 <line:3334:1, col:28> Text="  signed result is returned."
|   |-ParagraphComment 0x55887c3a7290 <line:3336:1, col:2>
|   | `-TextComment 0x55887c3a7260 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a72b0 <col:3, line:3337:2> [in] implicitly Param="Multiplicand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a7360 <line:3336:23, line:3337:2>
|   |   |-TextComment 0x55887c3a7310 <line:3336:23, col:46> Text="  A 64-bit signed value."
|   |   `-TextComment 0x55887c3a7330 <line:3337:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a7380 <col:3, col:46> [in] implicitly Param="Multiplier" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a7410 <col:21, col:46>
|   |   `-TextComment 0x55887c3a73e0 <col:21, col:46> Text="    A 64-bit signed value."
|   |-ParagraphComment 0x55887c3a7460 <line:3339:1, col:2>
|   | `-TextComment 0x55887c3a7430 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a7480 <col:3, col:35> Name="return"
|     `-ParagraphComment 0x55887c3a74e0 <col:10, col:35>
|       `-TextComment 0x55887c3a74b0 <col:10, col:35> Text=" Multiplicand * Multiplier"
|-FunctionDecl 0x55887c12da58 <line:3365:1, line:3370:3> line:3367:1 DivU64x32 'UINT64 (UINT64, UINT32)'
| |-ParmVarDecl 0x55887c12d718 <line:3368:11, col:19> col:19 Dividend 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c12d9c0 <line:3369:11, col:19> col:19 Divisor 'UINT32':'unsigned int'
| `-FullComment 0x55887c3a79f0 <line:3350:1, line:3362:29>
|   |-ParagraphComment 0x55887c3a7600 <line:3350:1, line:3351:27>
|   | |-TextComment 0x55887c3a75b0 <line:3350:1, col:78> Text="  Divides a 64-bit unsigned integer by a 32-bit unsigned integer and generates"
|   | `-TextComment 0x55887c3a75d0 <line:3351:1, col:27> Text="  a 64-bit unsigned result."
|   |-ParagraphComment 0x55887c3a76a0 <line:3353:1, line:3355:48>
|   | |-TextComment 0x55887c3a7620 <line:3353:1, col:72> Text="  This function divides the 64-bit unsigned value Dividend by the 32-bit"
|   | |-TextComment 0x55887c3a7640 <line:3354:1, col:71> Text="  unsigned value Divisor and generates a 64-bit unsigned quotient. This"
|   | `-TextComment 0x55887c3a7660 <line:3355:1, col:48> Text="  function returns the 64-bit unsigned quotient."
|   |-ParagraphComment 0x55887c3a76f0 <line:3357:1, col:33>
|   | `-TextComment 0x55887c3a76c0 <col:1, col:33> Text="  If Divisor is 0, then ASSERT()."
|   |-ParagraphComment 0x55887c3a7740 <line:3359:1, col:2>
|   | `-TextComment 0x55887c3a7710 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a7760 <col:3, line:3360:2> [in] implicitly Param="Dividend" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a7810 <line:3359:19, line:3360:2>
|   |   |-TextComment 0x55887c3a77c0 <line:3359:19, col:44> Text="  A 64-bit unsigned value."
|   |   `-TextComment 0x55887c3a77e0 <line:3360:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a7830 <col:3, col:44> [in] implicitly Param="Divisor" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a78c0 <col:18, col:44>
|   |   `-TextComment 0x55887c3a7890 <col:18, col:44> Text="   A 32-bit unsigned value."
|   |-ParagraphComment 0x55887c3a7910 <line:3362:1, col:2>
|   | `-TextComment 0x55887c3a78e0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a7930 <col:3, col:29> Name="return"
|     `-ParagraphComment 0x55887c3a7990 <col:10, col:29>
|       `-TextComment 0x55887c3a7960 <col:10, col:29> Text=" Dividend / Divisor."
|-FunctionDecl 0x55887c12dcd8 <line:3388:1, line:3393:3> line:3390:1 ModU64x32 'UINT32 (UINT64, UINT32)'
| |-ParmVarDecl 0x55887c12db48 <line:3391:11, col:19> col:19 Dividend 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c12dbc0 <line:3392:11, col:19> col:19 Divisor 'UINT32':'unsigned int'
| `-FullComment 0x55887c3a7ea0 <line:3373:1, line:3385:29>
|   |-ParagraphComment 0x55887c3a7ab0 <line:3373:1, line:3374:30>
|   | |-TextComment 0x55887c3a7a60 <line:3373:1, col:78> Text="  Divides a 64-bit unsigned integer by a 32-bit unsigned integer and generates"
|   | `-TextComment 0x55887c3a7a80 <line:3374:1, col:30> Text="  a 32-bit unsigned remainder."
|   |-ParagraphComment 0x55887c3a7b50 <line:3376:1, line:3378:40>
|   | |-TextComment 0x55887c3a7ad0 <line:3376:1, col:72> Text="  This function divides the 64-bit unsigned value Dividend by the 32-bit"
|   | |-TextComment 0x55887c3a7af0 <line:3377:1, col:72> Text="  unsigned value Divisor and generates a 32-bit remainder. This function"
|   | `-TextComment 0x55887c3a7b10 <line:3378:1, col:40> Text="  returns the 32-bit unsigned remainder."
|   |-ParagraphComment 0x55887c3a7ba0 <line:3380:1, col:33>
|   | `-TextComment 0x55887c3a7b70 <col:1, col:33> Text="  If Divisor is 0, then ASSERT()."
|   |-ParagraphComment 0x55887c3a7bf0 <line:3382:1, col:2>
|   | `-TextComment 0x55887c3a7bc0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a7c10 <col:3, line:3383:2> [in] implicitly Param="Dividend" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a7cc0 <line:3382:19, line:3383:2>
|   |   |-TextComment 0x55887c3a7c70 <line:3382:19, col:44> Text="  A 64-bit unsigned value."
|   |   `-TextComment 0x55887c3a7c90 <line:3383:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a7ce0 <col:3, col:44> [in] implicitly Param="Divisor" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a7d70 <col:18, col:44>
|   |   `-TextComment 0x55887c3a7d40 <col:18, col:44> Text="   A 32-bit unsigned value."
|   |-ParagraphComment 0x55887c3a7dc0 <line:3385:1, col:2>
|   | `-TextComment 0x55887c3a7d90 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a7de0 <col:3, col:29> Name="return"
|     `-ParagraphComment 0x55887c3a7e40 <col:10, col:29>
|       `-TextComment 0x55887c3a7e10 <col:10, col:29> Text=" Dividend % Divisor."
|-FunctionDecl 0x55887c12e038 <line:3414:1, line:3420:3> line:3416:1 DivU64x32Remainder 'UINT64 (UINT64, UINT32, UINT32 *)'
| |-ParmVarDecl 0x55887c12ddc8 <line:3417:11, col:19> col:19 Dividend 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c12de40 <line:3418:11, col:19> col:19 Divisor 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c12df18 <line:3419:11, col:20> col:20 Remainder 'UINT32 *'
| `-FullComment 0x55887c3a8470 <line:3396:1, line:3411:29>
|   |-ParagraphComment 0x55887c3a7f60 <line:3396:1, line:3397:69>
|   | |-TextComment 0x55887c3a7f10 <line:3396:1, col:78> Text="  Divides a 64-bit unsigned integer by a 32-bit unsigned integer and generates"
|   | `-TextComment 0x55887c3a7f30 <line:3397:1, col:69> Text="  a 64-bit unsigned result and an optional 32-bit unsigned remainder."
|   |-ParagraphComment 0x55887c3a8020 <line:3399:1, line:3402:53>
|   | |-TextComment 0x55887c3a7f80 <line:3399:1, col:72> Text="  This function divides the 64-bit unsigned value Dividend by the 32-bit"
|   | |-TextComment 0x55887c3a7fa0 <line:3400:1, col:79> Text="  unsigned value Divisor and generates a 64-bit unsigned quotient. If Remainder"
|   | |-TextComment 0x55887c3a7fc0 <line:3401:1, col:75> Text="  is not NULL, then the 32-bit unsigned remainder is returned in Remainder."
|   | `-TextComment 0x55887c3a7fe0 <line:3402:1, col:53> Text="  This function returns the 64-bit unsigned quotient."
|   |-ParagraphComment 0x55887c3a8070 <line:3404:1, col:33>
|   | `-TextComment 0x55887c3a8040 <col:1, col:33> Text="  If Divisor is 0, then ASSERT()."
|   |-ParagraphComment 0x55887c3a80c0 <line:3406:1, col:2>
|   | `-TextComment 0x55887c3a8090 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a80e0 <col:3, line:3407:2> [in] implicitly Param="Dividend" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a8190 <line:3406:19, line:3407:2>
|   |   |-TextComment 0x55887c3a8140 <line:3406:19, col:44> Text="  A 64-bit unsigned value."
|   |   `-TextComment 0x55887c3a8160 <line:3407:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a81b0 <col:3, line:3408:2> [in] implicitly Param="Divisor" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a8260 <line:3407:18, line:3408:2>
|   |   |-TextComment 0x55887c3a8210 <line:3407:18, col:44> Text="   A 32-bit unsigned value."
|   |   `-TextComment 0x55887c3a8230 <line:3408:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a8280 <col:3, line:3409:45> [in] implicitly Param="Remainder" ParamIndex=2
|   | `-ParagraphComment 0x55887c3a8330 <line:3408:20, line:3409:45>
|   |   |-TextComment 0x55887c3a82e0 <line:3408:20, col:75> Text=" A pointer to a 32-bit unsigned value. This parameter is"
|   |   `-TextComment 0x55887c3a8300 <line:3409:1, col:45> Text="                    optional and may be NULL."
|   |-ParagraphComment 0x55887c3a8380 <line:3411:1, col:2>
|   | `-TextComment 0x55887c3a8350 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a83a0 <col:3, col:29> Name="return"
|     `-ParagraphComment 0x55887c3a8400 <col:10, col:29>
|       `-TextComment 0x55887c3a83d0 <col:10, col:29> Text=" Dividend / Divisor."
|-FunctionDecl 0x55887c12e338 <line:3441:1, line:3447:3> line:3443:1 DivU64x64Remainder 'UINT64 (UINT64, UINT64, UINT64 *)'
| |-ParmVarDecl 0x55887c12e128 <line:3444:11, col:19> col:19 Dividend 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c12e1a0 <line:3445:11, col:19> col:19 Divisor 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c12e218 <line:3446:11, col:20> col:20 Remainder 'UINT64 *'
| `-FullComment 0x55887c3a8a40 <line:3423:1, line:3438:29>
|   |-ParagraphComment 0x55887c3a8530 <line:3423:1, line:3424:69>
|   | |-TextComment 0x55887c3a84e0 <line:3423:1, col:78> Text="  Divides a 64-bit unsigned integer by a 64-bit unsigned integer and generates"
|   | `-TextComment 0x55887c3a8500 <line:3424:1, col:69> Text="  a 64-bit unsigned result and an optional 64-bit unsigned remainder."
|   |-ParagraphComment 0x55887c3a85f0 <line:3426:1, line:3429:53>
|   | |-TextComment 0x55887c3a8550 <line:3426:1, col:72> Text="  This function divides the 64-bit unsigned value Dividend by the 64-bit"
|   | |-TextComment 0x55887c3a8570 <line:3427:1, col:79> Text="  unsigned value Divisor and generates a 64-bit unsigned quotient. If Remainder"
|   | |-TextComment 0x55887c3a8590 <line:3428:1, col:75> Text="  is not NULL, then the 64-bit unsigned remainder is returned in Remainder."
|   | `-TextComment 0x55887c3a85b0 <line:3429:1, col:53> Text="  This function returns the 64-bit unsigned quotient."
|   |-ParagraphComment 0x55887c3a8640 <line:3431:1, col:33>
|   | `-TextComment 0x55887c3a8610 <col:1, col:33> Text="  If Divisor is 0, then ASSERT()."
|   |-ParagraphComment 0x55887c3a8690 <line:3433:1, col:2>
|   | `-TextComment 0x55887c3a8660 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a86b0 <col:3, line:3434:2> [in] implicitly Param="Dividend" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a8760 <line:3433:19, line:3434:2>
|   |   |-TextComment 0x55887c3a8710 <line:3433:19, col:44> Text="  A 64-bit unsigned value."
|   |   `-TextComment 0x55887c3a8730 <line:3434:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a8780 <col:3, line:3435:2> [in] implicitly Param="Divisor" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a8830 <line:3434:18, line:3435:2>
|   |   |-TextComment 0x55887c3a87e0 <line:3434:18, col:44> Text="   A 64-bit unsigned value."
|   |   `-TextComment 0x55887c3a8800 <line:3435:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a8850 <col:3, line:3436:45> [in] implicitly Param="Remainder" ParamIndex=2
|   | `-ParagraphComment 0x55887c3a8900 <line:3435:20, line:3436:45>
|   |   |-TextComment 0x55887c3a88b0 <line:3435:20, col:75> Text=" A pointer to a 64-bit unsigned value. This parameter is"
|   |   `-TextComment 0x55887c3a88d0 <line:3436:1, col:45> Text="                    optional and may be NULL."
|   |-ParagraphComment 0x55887c3a8950 <line:3438:1, col:2>
|   | `-TextComment 0x55887c3a8920 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a8970 <col:3, col:29> Name="return"
|     `-ParagraphComment 0x55887c3a89d0 <col:10, col:29>
|       `-TextComment 0x55887c3a89a0 <col:10, col:29> Text=" Dividend / Divisor."
|-FunctionDecl 0x55887c12e698 <line:3472:1, line:3478:3> line:3474:1 DivS64x64Remainder 'INT64 (INT64, INT64, INT64 *)'
| |-ParmVarDecl 0x55887c12e428 <line:3475:11, col:18> col:18 Dividend 'INT64':'long long'
| |-ParmVarDecl 0x55887c12e4a0 <line:3476:11, col:18> col:18 Divisor 'INT64':'long long'
| |-ParmVarDecl 0x55887c12e578 <line:3477:11, col:19> col:19 Remainder 'INT64 *'
| `-FullComment 0x55887c3a90b0 <line:3450:1, line:3469:29>
|   |-ParagraphComment 0x55887c3a8b00 <line:3450:1, line:3451:62>
|   | |-TextComment 0x55887c3a8ab0 <line:3450:1, col:76> Text="  Divides a 64-bit signed integer by a 64-bit signed integer and generates a"
|   | `-TextComment 0x55887c3a8ad0 <line:3451:1, col:62> Text="  64-bit signed result and a optional 64-bit signed remainder."
|   |-ParagraphComment 0x55887c3a8bc0 <line:3453:1, line:3456:46>
|   | |-TextComment 0x55887c3a8b20 <line:3453:1, col:77> Text="  This function divides the 64-bit signed value Dividend by the 64-bit signed"
|   | |-TextComment 0x55887c3a8b40 <line:3454:1, col:75> Text="  value Divisor and generates a 64-bit signed quotient. If Remainder is not"
|   | |-TextComment 0x55887c3a8b60 <line:3455:1, col:71> Text="  NULL, then the 64-bit signed remainder is returned in Remainder. This"
|   | `-TextComment 0x55887c3a8b80 <line:3456:1, col:46> Text="  function returns the 64-bit signed quotient."
|   |-ParagraphComment 0x55887c3a8c60 <line:3458:1, line:3460:31>
|   | |-TextComment 0x55887c3a8be0 <line:3458:1, col:82> Text="  It is the caller's responsibility to not call this function with a Divisor of 0."
|   | |-TextComment 0x55887c3a8c00 <line:3459:1, col:74> Text="  If Divisor is 0, then the quotient and remainder should be assumed to be"
|   | `-TextComment 0x55887c3a8c20 <line:3460:1, col:31> Text="  the largest negative integer."
|   |-ParagraphComment 0x55887c3a8cb0 <line:3462:1, col:33>
|   | `-TextComment 0x55887c3a8c80 <col:1, col:33> Text="  If Divisor is 0, then ASSERT()."
|   |-ParagraphComment 0x55887c3a8d00 <line:3464:1, col:2>
|   | `-TextComment 0x55887c3a8cd0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a8d20 <col:3, line:3465:2> [in] implicitly Param="Dividend" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a8dd0 <line:3464:19, line:3465:2>
|   |   |-TextComment 0x55887c3a8d80 <line:3464:19, col:42> Text="  A 64-bit signed value."
|   |   `-TextComment 0x55887c3a8da0 <line:3465:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a8df0 <col:3, line:3466:2> [in] implicitly Param="Divisor" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a8ea0 <line:3465:18, line:3466:2>
|   |   |-TextComment 0x55887c3a8e50 <line:3465:18, col:42> Text="   A 64-bit signed value."
|   |   `-TextComment 0x55887c3a8e70 <line:3466:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a8ec0 <col:3, line:3467:45> [in] implicitly Param="Remainder" ParamIndex=2
|   | `-ParagraphComment 0x55887c3a8f70 <line:3466:20, line:3467:45>
|   |   |-TextComment 0x55887c3a8f20 <line:3466:20, col:73> Text=" A pointer to a 64-bit signed value. This parameter is"
|   |   `-TextComment 0x55887c3a8f40 <line:3467:1, col:45> Text="                    optional and may be NULL."
|   |-ParagraphComment 0x55887c3a8fc0 <line:3469:1, col:2>
|   | `-TextComment 0x55887c3a8f90 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a8fe0 <col:3, col:29> Name="return"
|     `-ParagraphComment 0x55887c3a9040 <col:10, col:29>
|       `-TextComment 0x55887c3a9010 <col:10, col:29> Text=" Dividend / Divisor."
|-FunctionDecl 0x55887c12e8a8 <line:3493:1, line:3497:3> line:3495:1 ReadUnaligned16 'UINT16 (const UINT16 *)'
| |-ParmVarDecl 0x55887c12e7b8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:3496:21> col:21 Buffer 'const UINT16 *'
| `-FullComment 0x55887c3a9440 <line:3481:1, line:3490:44>
|   |-ParagraphComment 0x55887c3a9150 <line:3481:1, col:57>
|   | `-TextComment 0x55887c3a9120 <col:1, col:57> Text="  Reads a 16-bit value from memory that may be unaligned."
|   |-ParagraphComment 0x55887c3a91c0 <line:3483:1, line:3484:73>
|   | |-TextComment 0x55887c3a9170 <line:3483:1, col:75> Text="  This function returns the 16-bit value pointed to by Buffer. The function"
|   | `-TextComment 0x55887c3a9190 <line:3484:1, col:73> Text="  guarantees that the read operation does not produce an alignment fault."
|   |-ParagraphComment 0x55887c3a9210 <line:3486:1, col:39>
|   | `-TextComment 0x55887c3a91e0 <col:1, col:39> Text="  If the Buffer is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3a9260 <line:3488:1, col:2>
|   | `-TextComment 0x55887c3a9230 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a9280 <col:3, col:70> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a9310 <col:17, col:70>
|   |   `-TextComment 0x55887c3a92e0 <col:17, col:70> Text="  The pointer to a 16-bit value that may be unaligned."
|   |-ParagraphComment 0x55887c3a9360 <line:3490:1, col:2>
|   | `-TextComment 0x55887c3a9330 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a9380 <col:3, col:44> Name="return"
|     `-ParagraphComment 0x55887c3a93e0 <col:10, col:44>
|       `-TextComment 0x55887c3a93b0 <col:10, col:44> Text=" The 16-bit value read from Buffer."
|-FunctionDecl 0x55887c12ecd8 <line:3514:1, line:3519:3> line:3516:1 WriteUnaligned16 'UINT16 (UINT16 *, UINT16)'
| |-ParmVarDecl 0x55887c12eb50 <line:3517:7, col:16> col:16 Buffer 'UINT16 *'
| |-ParmVarDecl 0x55887c12ebc8 <line:3518:7, col:15> col:15 Value 'UINT16':'unsigned short'
| `-FullComment 0x55887c3a98d0 <line:3500:1, line:3511:46>
|   |-ParagraphComment 0x55887c3a94e0 <line:3500:1, col:56>
|   | `-TextComment 0x55887c3a94b0 <col:1, col:56> Text="  Writes a 16-bit value to memory that may be unaligned."
|   |-ParagraphComment 0x55887c3a9580 <line:3502:1, line:3504:21>
|   | |-TextComment 0x55887c3a9500 <line:3502:1, col:78> Text="  This function writes the 16-bit value specified by Value to Buffer. Value is"
|   | |-TextComment 0x55887c3a9520 <line:3503:1, col:77> Text="  returned. The function guarantees that the write operation does not produce"
|   | `-TextComment 0x55887c3a9540 <line:3504:1, col:21> Text="  an alignment fault."
|   |-ParagraphComment 0x55887c3a95d0 <line:3506:1, col:39>
|   | `-TextComment 0x55887c3a95a0 <col:1, col:39> Text="  If the Buffer is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3a9620 <line:3508:1, col:2>
|   | `-TextComment 0x55887c3a95f0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a9640 <col:3, line:3509:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a96f0 <line:3508:17, line:3509:2>
|   |   |-TextComment 0x55887c3a96a0 <line:3508:17, col:70> Text="  The pointer to a 16-bit value that may be unaligned."
|   |   `-TextComment 0x55887c3a96c0 <line:3509:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a9710 <col:3, col:50> [in] implicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a97a0 <col:16, col:50>
|   |   `-TextComment 0x55887c3a9770 <col:16, col:50> Text="   16-bit value to write to Buffer."
|   |-ParagraphComment 0x55887c3a97f0 <line:3511:1, col:2>
|   | `-TextComment 0x55887c3a97c0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a9810 <col:3, col:46> Name="return"
|     `-ParagraphComment 0x55887c3a9870 <col:10, col:46>
|       `-TextComment 0x55887c3a9840 <col:10, col:46> Text=" The 16-bit value to write to Buffer."
|-FunctionDecl 0x55887c12ef18 <line:3534:1, line:3538:3> line:3536:1 ReadUnaligned24 'UINT32 (const UINT32 *)'
| |-ParmVarDecl 0x55887c12ee28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:3537:21> col:21 Buffer 'const UINT32 *'
| `-FullComment 0x55887c3a9c60 <line:3522:1, line:3531:44>
|   |-ParagraphComment 0x55887c3a9970 <line:3522:1, col:57>
|   | `-TextComment 0x55887c3a9940 <col:1, col:57> Text="  Reads a 24-bit value from memory that may be unaligned."
|   |-ParagraphComment 0x55887c3a99e0 <line:3524:1, line:3525:73>
|   | |-TextComment 0x55887c3a9990 <line:3524:1, col:75> Text="  This function returns the 24-bit value pointed to by Buffer. The function"
|   | `-TextComment 0x55887c3a99b0 <line:3525:1, col:73> Text="  guarantees that the read operation does not produce an alignment fault."
|   |-ParagraphComment 0x55887c3a9a30 <line:3527:1, col:39>
|   | `-TextComment 0x55887c3a9a00 <col:1, col:39> Text="  If the Buffer is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3a9a80 <line:3529:1, col:2>
|   | `-TextComment 0x55887c3a9a50 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a9aa0 <col:3, col:70> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a9b30 <col:17, col:70>
|   |   `-TextComment 0x55887c3a9b00 <col:17, col:70> Text="  The pointer to a 24-bit value that may be unaligned."
|   |-ParagraphComment 0x55887c3a9b80 <line:3531:1, col:2>
|   | `-TextComment 0x55887c3a9b50 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3a9ba0 <col:3, col:44> Name="return"
|     `-ParagraphComment 0x55887c3a9c00 <col:10, col:44>
|       `-TextComment 0x55887c3a9bd0 <col:10, col:44> Text=" The 24-bit value read from Buffer."
|-FunctionDecl 0x55887c12f188 <line:3555:1, line:3560:3> line:3557:1 WriteUnaligned24 'UINT32 (UINT32 *, UINT32)'
| |-ParmVarDecl 0x55887c12eff8 <line:3558:7, col:16> col:16 Buffer 'UINT32 *'
| |-ParmVarDecl 0x55887c12f070 <line:3559:7, col:15> col:15 Value 'UINT32':'unsigned int'
| `-FullComment 0x55887c3aa0f0 <line:3541:1, line:3552:46>
|   |-ParagraphComment 0x55887c3a9d00 <line:3541:1, col:56>
|   | `-TextComment 0x55887c3a9cd0 <col:1, col:56> Text="  Writes a 24-bit value to memory that may be unaligned."
|   |-ParagraphComment 0x55887c3a9da0 <line:3543:1, line:3545:21>
|   | |-TextComment 0x55887c3a9d20 <line:3543:1, col:78> Text="  This function writes the 24-bit value specified by Value to Buffer. Value is"
|   | |-TextComment 0x55887c3a9d40 <line:3544:1, col:77> Text="  returned. The function guarantees that the write operation does not produce"
|   | `-TextComment 0x55887c3a9d60 <line:3545:1, col:21> Text="  an alignment fault."
|   |-ParagraphComment 0x55887c3a9df0 <line:3547:1, col:39>
|   | `-TextComment 0x55887c3a9dc0 <col:1, col:39> Text="  If the Buffer is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3a9e40 <line:3549:1, col:2>
|   | `-TextComment 0x55887c3a9e10 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a9e60 <col:3, line:3550:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3a9f10 <line:3549:17, line:3550:2>
|   |   |-TextComment 0x55887c3a9ec0 <line:3549:17, col:70> Text="  The pointer to a 24-bit value that may be unaligned."
|   |   `-TextComment 0x55887c3a9ee0 <line:3550:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3a9f30 <col:3, col:50> [in] implicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c3a9fc0 <col:16, col:50>
|   |   `-TextComment 0x55887c3a9f90 <col:16, col:50> Text="   24-bit value to write to Buffer."
|   |-ParagraphComment 0x55887c3aa010 <line:3552:1, col:2>
|   | `-TextComment 0x55887c3a9fe0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3aa030 <col:3, col:46> Name="return"
|     `-ParagraphComment 0x55887c3aa090 <col:10, col:46>
|       `-TextComment 0x55887c3aa060 <col:10, col:46> Text=" The 24-bit value to write to Buffer."
|-FunctionDecl 0x55887c12f308 <line:3575:1, line:3579:3> line:3577:1 ReadUnaligned32 'UINT32 (const UINT32 *)'
| |-ParmVarDecl 0x55887c12f278 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:3578:21> col:21 Buffer 'const UINT32 *'
| `-FullComment 0x55887c3aa480 <line:3563:1, line:3572:44>
|   |-ParagraphComment 0x55887c3aa190 <line:3563:1, col:57>
|   | `-TextComment 0x55887c3aa160 <col:1, col:57> Text="  Reads a 32-bit value from memory that may be unaligned."
|   |-ParagraphComment 0x55887c3aa200 <line:3565:1, line:3566:73>
|   | |-TextComment 0x55887c3aa1b0 <line:3565:1, col:75> Text="  This function returns the 32-bit value pointed to by Buffer. The function"
|   | `-TextComment 0x55887c3aa1d0 <line:3566:1, col:73> Text="  guarantees that the read operation does not produce an alignment fault."
|   |-ParagraphComment 0x55887c3aa250 <line:3568:1, col:39>
|   | `-TextComment 0x55887c3aa220 <col:1, col:39> Text="  If the Buffer is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3aa2a0 <line:3570:1, col:2>
|   | `-TextComment 0x55887c3aa270 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3aa2c0 <col:3, col:70> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3aa350 <col:17, col:70>
|   |   `-TextComment 0x55887c3aa320 <col:17, col:70> Text="  The pointer to a 32-bit value that may be unaligned."
|   |-ParagraphComment 0x55887c3aa3a0 <line:3572:1, col:2>
|   | `-TextComment 0x55887c3aa370 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3aa3c0 <col:3, col:44> Name="return"
|     `-ParagraphComment 0x55887c3aa420 <col:10, col:44>
|       `-TextComment 0x55887c3aa3f0 <col:10, col:44> Text=" The 32-bit value read from Buffer."
|-FunctionDecl 0x55887c12f4f8 <line:3596:1, line:3601:3> line:3598:1 WriteUnaligned32 'UINT32 (UINT32 *, UINT32)'
| |-ParmVarDecl 0x55887c12f3e8 <line:3599:7, col:16> col:16 Buffer 'UINT32 *'
| |-ParmVarDecl 0x55887c12f460 <line:3600:7, col:15> col:15 Value 'UINT32':'unsigned int'
| `-FullComment 0x55887c3aa910 <line:3582:1, line:3593:46>
|   |-ParagraphComment 0x55887c3aa520 <line:3582:1, col:56>
|   | `-TextComment 0x55887c3aa4f0 <col:1, col:56> Text="  Writes a 32-bit value to memory that may be unaligned."
|   |-ParagraphComment 0x55887c3aa5c0 <line:3584:1, line:3586:21>
|   | |-TextComment 0x55887c3aa540 <line:3584:1, col:78> Text="  This function writes the 32-bit value specified by Value to Buffer. Value is"
|   | |-TextComment 0x55887c3aa560 <line:3585:1, col:77> Text="  returned. The function guarantees that the write operation does not produce"
|   | `-TextComment 0x55887c3aa580 <line:3586:1, col:21> Text="  an alignment fault."
|   |-ParagraphComment 0x55887c3aa610 <line:3588:1, col:39>
|   | `-TextComment 0x55887c3aa5e0 <col:1, col:39> Text="  If the Buffer is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3aa660 <line:3590:1, col:2>
|   | `-TextComment 0x55887c3aa630 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3aa680 <col:3, line:3591:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3aa730 <line:3590:17, line:3591:2>
|   |   |-TextComment 0x55887c3aa6e0 <line:3590:17, col:70> Text="  The pointer to a 32-bit value that may be unaligned."
|   |   `-TextComment 0x55887c3aa700 <line:3591:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3aa750 <col:3, col:50> [in] implicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c3aa7e0 <col:16, col:50>
|   |   `-TextComment 0x55887c3aa7b0 <col:16, col:50> Text="   32-bit value to write to Buffer."
|   |-ParagraphComment 0x55887c3aa830 <line:3593:1, col:2>
|   | `-TextComment 0x55887c3aa800 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3aa850 <col:3, col:46> Name="return"
|     `-ParagraphComment 0x55887c3aa8b0 <col:10, col:46>
|       `-TextComment 0x55887c3aa880 <col:10, col:46> Text=" The 32-bit value to write to Buffer."
|-FunctionDecl 0x55887c12f738 <line:3616:1, line:3620:3> line:3618:1 ReadUnaligned64 'UINT64 (const UINT64 *)'
| |-ParmVarDecl 0x55887c12f648 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:3619:21> col:21 Buffer 'const UINT64 *'
| `-FullComment 0x55887c3aaca0 <line:3604:1, line:3613:44>
|   |-ParagraphComment 0x55887c3aa9b0 <line:3604:1, col:57>
|   | `-TextComment 0x55887c3aa980 <col:1, col:57> Text="  Reads a 64-bit value from memory that may be unaligned."
|   |-ParagraphComment 0x55887c3aaa20 <line:3606:1, line:3607:73>
|   | |-TextComment 0x55887c3aa9d0 <line:3606:1, col:75> Text="  This function returns the 64-bit value pointed to by Buffer. The function"
|   | `-TextComment 0x55887c3aa9f0 <line:3607:1, col:73> Text="  guarantees that the read operation does not produce an alignment fault."
|   |-ParagraphComment 0x55887c3aaa70 <line:3609:1, col:39>
|   | `-TextComment 0x55887c3aaa40 <col:1, col:39> Text="  If the Buffer is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3aaac0 <line:3611:1, col:2>
|   | `-TextComment 0x55887c3aaa90 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3aaae0 <col:3, col:70> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3aab70 <col:17, col:70>
|   |   `-TextComment 0x55887c3aab40 <col:17, col:70> Text="  The pointer to a 64-bit value that may be unaligned."
|   |-ParagraphComment 0x55887c3aabc0 <line:3613:1, col:2>
|   | `-TextComment 0x55887c3aab90 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3aabe0 <col:3, col:44> Name="return"
|     `-ParagraphComment 0x55887c3aac40 <col:10, col:44>
|       `-TextComment 0x55887c3aac10 <col:10, col:44> Text=" The 64-bit value read from Buffer."
|-FunctionDecl 0x55887c12f9a8 <line:3637:1, line:3642:3> line:3639:1 WriteUnaligned64 'UINT64 (UINT64 *, UINT64)'
| |-ParmVarDecl 0x55887c12f818 <line:3640:7, col:16> col:16 Buffer 'UINT64 *'
| |-ParmVarDecl 0x55887c12f890 <line:3641:7, col:15> col:15 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3ab140 <line:3623:1, line:3634:46>
|   |-ParagraphComment 0x55887c3aad40 <line:3623:1, col:56>
|   | `-TextComment 0x55887c3aad10 <col:1, col:56> Text="  Writes a 64-bit value to memory that may be unaligned."
|   |-ParagraphComment 0x55887c3aade0 <line:3625:1, line:3627:21>
|   | |-TextComment 0x55887c3aad60 <line:3625:1, col:78> Text="  This function writes the 64-bit value specified by Value to Buffer. Value is"
|   | |-TextComment 0x55887c3aad80 <line:3626:1, col:77> Text="  returned. The function guarantees that the write operation does not produce"
|   | `-TextComment 0x55887c3aada0 <line:3627:1, col:21> Text="  an alignment fault."
|   |-ParagraphComment 0x55887c3aae30 <line:3629:1, col:39>
|   | `-TextComment 0x55887c3aae00 <col:1, col:39> Text="  If the Buffer is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3aae80 <line:3631:1, col:2>
|   | `-TextComment 0x55887c3aae50 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3aaea0 <col:3, line:3632:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3aaf50 <line:3631:17, line:3632:2>
|   |   |-TextComment 0x55887c3aaf00 <line:3631:17, col:70> Text="  The pointer to a 64-bit value that may be unaligned."
|   |   `-TextComment 0x55887c3aaf20 <line:3632:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3aaf70 <col:3, col:50> [in] implicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c3ab010 <col:16, col:50>
|   |   `-TextComment 0x55887c3aafe0 <col:16, col:50> Text="   64-bit value to write to Buffer."
|   |-ParagraphComment 0x55887c3ab060 <line:3634:1, col:2>
|   | `-TextComment 0x55887c3ab030 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ab080 <col:3, col:46> Name="return"
|     `-ParagraphComment 0x55887c3ab0e0 <col:10, col:46>
|       `-TextComment 0x55887c3ab0b0 <col:10, col:46> Text=" The 64-bit value to write to Buffer."
|-FunctionDecl 0x55887c12feb8 <line:3667:1, line:3673:3> line:3669:1 BitFieldRead8 'UINT8 (UINT8, UINTN, UINTN)'
| |-ParmVarDecl 0x55887c12fa98 <line:3670:11, col:18> col:18 Operand 'UINT8':'unsigned char'
| |-ParmVarDecl 0x55887c12fd20 <line:3671:11, col:18> col:18 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c12fd98 <line:3672:11, col:18> col:18 EndBit 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3ab720 <line:3649:1, line:3664:29>
|   |-ParagraphComment 0x55887c3ab1e0 <line:3649:1, col:42>
|   | `-TextComment 0x55887c3ab1b0 <col:1, col:42> Text="  Returns a bit field from an 8-bit value."
|   |-ParagraphComment 0x55887c3ab230 <line:3651:1, col:77>
|   | `-TextComment 0x55887c3ab200 <col:1, col:77> Text="  Returns the bitfield specified by the StartBit and the EndBit from Operand."
|   |-ParagraphComment 0x55887c3ab2f0 <line:3653:1, line:3656:49>
|   | |-TextComment 0x55887c3ab250 <line:3653:1, col:55> Text="  If 8-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3ab270 <line:3654:1, col:47> Text="  If StartBit is greater than 7, then ASSERT()."
|   | |-TextComment 0x55887c3ab290 <line:3655:1, col:45> Text="  If EndBit is greater than 7, then ASSERT()."
|   | `-TextComment 0x55887c3ab2b0 <line:3656:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3ab340 <line:3658:1, col:2>
|   | `-TextComment 0x55887c3ab310 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ab360 <col:3, line:3659:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3ab410 <line:3658:18, line:3659:2>
|   |   |-TextComment 0x55887c3ab3c0 <line:3658:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3ab3e0 <line:3659:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ab430 <col:3, line:3661:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3ab510 <line:3659:19, line:3661:2>
|   |   |-TextComment 0x55887c3ab490 <line:3659:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3ab4b0 <line:3660:1, col:31> Text="                    Range 0..7."
|   |   `-TextComment 0x55887c3ab4d0 <line:3661:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ab530 <col:3, line:3662:31> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3ab5e0 <line:3661:17, line:3662:31>
|   |   |-TextComment 0x55887c3ab590 <line:3661:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   `-TextComment 0x55887c3ab5b0 <line:3662:1, col:31> Text="                    Range 0..7."
|   |-ParagraphComment 0x55887c3ab630 <line:3664:1, col:2>
|   | `-TextComment 0x55887c3ab600 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ab650 <col:3, col:29> Name="return"
|     `-ParagraphComment 0x55887c3ab6b0 <col:10, col:29>
|       `-TextComment 0x55887c3ab680 <col:10, col:29> Text=" The bit field read."
|-FunctionDecl 0x55887c130258 <line:3698:1, line:3705:3> line:3700:1 BitFieldWrite8 'UINT8 (UINT8, UINTN, UINTN, UINT8)'
| |-ParmVarDecl 0x55887c12ffa8 <line:3701:11, col:18> col:18 Operand 'UINT8':'unsigned char'
| |-ParmVarDecl 0x55887c130020 <line:3702:11, col:18> col:18 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c130098 <line:3703:11, col:18> col:18 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c130110 <line:3704:11, col:18> col:18 Value 'UINT8':'unsigned char'
| `-FullComment 0x55887c3abe60 <line:3676:1, line:3695:30>
|   |-ParagraphComment 0x55887c3ab7c0 <line:3676:1, col:63>
|   | `-TextComment 0x55887c3ab790 <col:1, col:63> Text="  Writes a bit field to an 8-bit value, and returns the result."
|   |-ParagraphComment 0x55887c3ab860 <line:3678:1, line:3680:11>
|   | |-TextComment 0x55887c3ab7e0 <line:3678:1, col:75> Text="  Writes Value to the bit field specified by the StartBit and the EndBit in"
|   | |-TextComment 0x55887c3ab800 <line:3679:1, col:74> Text="  Operand. All other bits in Operand are preserved. The new 8-bit value is"
|   | `-TextComment 0x55887c3ab820 <line:3680:1, col:11> Text="  returned."
|   |-ParagraphComment 0x55887c3ab950 <line:3682:1, line:3686:98>
|   | |-TextComment 0x55887c3ab880 <line:3682:1, col:55> Text="  If 8-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3ab8a0 <line:3683:1, col:47> Text="  If StartBit is greater than 7, then ASSERT()."
|   | |-TextComment 0x55887c3ab8c0 <line:3684:1, col:45> Text="  If EndBit is greater than 7, then ASSERT()."
|   | |-TextComment 0x55887c3ab8e0 <line:3685:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3ab900 <line:3686:1, col:98> Text="  If Value is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3ab9a0 <line:3688:1, col:2>
|   | `-TextComment 0x55887c3ab970 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ab9c0 <col:3, line:3689:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3aba70 <line:3688:18, line:3689:2>
|   |   |-TextComment 0x55887c3aba20 <line:3688:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3aba40 <line:3689:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3aba90 <col:3, line:3691:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3abb70 <line:3689:19, line:3691:2>
|   |   |-TextComment 0x55887c3abaf0 <line:3689:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3abb10 <line:3690:1, col:31> Text="                    Range 0..7."
|   |   `-TextComment 0x55887c3abb30 <line:3691:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3abb90 <col:3, line:3693:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3abc70 <line:3691:17, line:3693:2>
|   |   |-TextComment 0x55887c3abbf0 <line:3691:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3abc10 <line:3692:1, col:31> Text="                    Range 0..7."
|   |   `-TextComment 0x55887c3abc30 <line:3693:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3abc90 <col:3, col:47> [in] implicitly Param="Value" ParamIndex=3
|   | `-ParagraphComment 0x55887c3abd20 <col:16, col:47>
|   |   `-TextComment 0x55887c3abcf0 <col:16, col:47> Text="     New value of the bit field."
|   |-ParagraphComment 0x55887c3abd70 <line:3695:1, col:2>
|   | `-TextComment 0x55887c3abd40 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3abd90 <col:3, col:30> Name="return"
|     `-ParagraphComment 0x55887c3abdf0 <col:10, col:30>
|       `-TextComment 0x55887c3abdc0 <col:10, col:30> Text=" The new 8-bit value."
|-FunctionDecl 0x55887c130568 <line:3731:1, line:3738:3> line:3733:1 BitFieldOr8 'UINT8 (UINT8, UINTN, UINTN, UINT8)'
| |-ParmVarDecl 0x55887c130358 <line:3734:11, col:18> col:18 Operand 'UINT8':'unsigned char'
| |-ParmVarDecl 0x55887c1303d0 <line:3735:11, col:18> col:18 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c130448 <line:3736:11, col:18> col:18 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1304c0 <line:3737:11, col:18> col:18 OrData 'UINT8':'unsigned char'
| `-FullComment 0x55887c3ac5c0 <line:3708:1, line:3728:30>
|   |-ParagraphComment 0x55887c3abf20 <line:3708:1, line:3709:9>
|   | |-TextComment 0x55887c3abed0 <line:3708:1, col:79> Text="  Reads a bit field from an 8-bit value, performs a bitwise OR, and returns the"
|   | `-TextComment 0x55887c3abef0 <line:3709:1, col:9> Text="  result."
|   |-ParagraphComment 0x55887c3abfc0 <line:3711:1, line:3713:57>
|   | |-TextComment 0x55887c3abf40 <line:3711:1, col:67> Text="  Performs a bitwise OR between the bit field specified by StartBit"
|   | |-TextComment 0x55887c3abf60 <line:3712:1, col:76> Text="  and EndBit in Operand and the value specified by OrData. All other bits in"
|   | `-TextComment 0x55887c3abf80 <line:3713:1, col:57> Text="  Operand are preserved. The new 8-bit value is returned."
|   |-ParagraphComment 0x55887c3ac0b0 <line:3715:1, line:3719:99>
|   | |-TextComment 0x55887c3abfe0 <line:3715:1, col:55> Text="  If 8-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3ac000 <line:3716:1, col:47> Text="  If StartBit is greater than 7, then ASSERT()."
|   | |-TextComment 0x55887c3ac020 <line:3717:1, col:45> Text="  If EndBit is greater than 7, then ASSERT()."
|   | |-TextComment 0x55887c3ac040 <line:3718:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3ac060 <line:3719:1, col:99> Text="  If OrData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3ac100 <line:3721:1, col:2>
|   | `-TextComment 0x55887c3ac0d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ac120 <col:3, line:3722:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3ac1d0 <line:3721:18, line:3722:2>
|   |   |-TextComment 0x55887c3ac180 <line:3721:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3ac1a0 <line:3722:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ac1f0 <col:3, line:3724:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3ac2d0 <line:3722:19, line:3724:2>
|   |   |-TextComment 0x55887c3ac250 <line:3722:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3ac270 <line:3723:1, col:31> Text="                    Range 0..7."
|   |   `-TextComment 0x55887c3ac290 <line:3724:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ac2f0 <col:3, line:3726:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3ac3d0 <line:3724:17, line:3726:2>
|   |   |-TextComment 0x55887c3ac350 <line:3724:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3ac370 <line:3725:1, col:31> Text="                    Range 0..7."
|   |   `-TextComment 0x55887c3ac390 <line:3726:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ac3f0 <col:3, col:70> [in] implicitly Param="OrData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3ac480 <col:17, col:70>
|   |   `-TextComment 0x55887c3ac450 <col:17, col:70> Text="    The value to OR with the read value from the value"
|   |-ParagraphComment 0x55887c3ac4d0 <line:3728:1, col:2>
|   | `-TextComment 0x55887c3ac4a0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ac4f0 <col:3, col:30> Name="return"
|     `-ParagraphComment 0x55887c3ac550 <col:10, col:30>
|       `-TextComment 0x55887c3ac520 <col:10, col:30> Text=" The new 8-bit value."
|-FunctionDecl 0x55887c130878 <line:3764:1, line:3771:3> line:3766:1 BitFieldAnd8 'UINT8 (UINT8, UINTN, UINTN, UINT8)'
| |-ParmVarDecl 0x55887c130668 <line:3767:11, col:18> col:18 Operand 'UINT8':'unsigned char'
| |-ParmVarDecl 0x55887c1306e0 <line:3768:11, col:18> col:18 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c130758 <line:3769:11, col:18> col:18 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1307d0 <line:3770:11, col:18> col:18 AndData 'UINT8':'unsigned char'
| `-FullComment 0x55887c3acd20 <line:3741:1, line:3761:30>
|   |-ParagraphComment 0x55887c3ac680 <line:3741:1, line:3742:13>
|   | |-TextComment 0x55887c3ac630 <line:3741:1, col:76> Text="  Reads a bit field from an 8-bit value, performs a bitwise AND, and returns"
|   | `-TextComment 0x55887c3ac650 <line:3742:1, col:13> Text="  the result."
|   |-ParagraphComment 0x55887c3ac720 <line:3744:1, line:3746:45>
|   | |-TextComment 0x55887c3ac6a0 <line:3744:1, col:79> Text="  Performs a bitwise AND between the bit field specified by StartBit and EndBit"
|   | |-TextComment 0x55887c3ac6c0 <line:3745:1, col:78> Text="  in Operand and the value specified by AndData. All other bits in Operand are"
|   | `-TextComment 0x55887c3ac6e0 <line:3746:1, col:45> Text="  preserved. The new 8-bit value is returned."
|   |-ParagraphComment 0x55887c3ac810 <line:3748:1, line:3752:100>
|   | |-TextComment 0x55887c3ac740 <line:3748:1, col:55> Text="  If 8-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3ac760 <line:3749:1, col:47> Text="  If StartBit is greater than 7, then ASSERT()."
|   | |-TextComment 0x55887c3ac780 <line:3750:1, col:45> Text="  If EndBit is greater than 7, then ASSERT()."
|   | |-TextComment 0x55887c3ac7a0 <line:3751:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3ac7c0 <line:3752:1, col:100> Text="  If AndData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3ac860 <line:3754:1, col:2>
|   | `-TextComment 0x55887c3ac830 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ac880 <col:3, line:3755:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3ac930 <line:3754:18, line:3755:2>
|   |   |-TextComment 0x55887c3ac8e0 <line:3754:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3ac900 <line:3755:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ac950 <col:3, line:3757:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3aca30 <line:3755:19, line:3757:2>
|   |   |-TextComment 0x55887c3ac9b0 <line:3755:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3ac9d0 <line:3756:1, col:31> Text="                    Range 0..7."
|   |   `-TextComment 0x55887c3ac9f0 <line:3757:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3aca50 <col:3, line:3759:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3acb30 <line:3757:17, line:3759:2>
|   |   |-TextComment 0x55887c3acab0 <line:3757:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3acad0 <line:3758:1, col:31> Text="                    Range 0..7."
|   |   `-TextComment 0x55887c3acaf0 <line:3759:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3acb50 <col:3, col:72> [in] implicitly Param="AndData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3acbe0 <col:18, col:72>
|   |   `-TextComment 0x55887c3acbb0 <col:18, col:72> Text="   The value to AND with the read value from the value."
|   |-ParagraphComment 0x55887c3acc30 <line:3761:1, col:2>
|   | `-TextComment 0x55887c3acc00 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3acc50 <col:3, col:30> Name="return"
|     `-ParagraphComment 0x55887c3accb0 <col:10, col:30>
|       `-TextComment 0x55887c3acc80 <col:10, col:30> Text=" The new 8-bit value."
|-FunctionDecl 0x55887c130e30 <line:3800:1, line:3808:3> line:3802:1 BitFieldAndThenOr8 'UINT8 (UINT8, UINTN, UINTN, UINT8, UINT8)'
| |-ParmVarDecl 0x55887c130978 <line:3803:11, col:18> col:18 Operand 'UINT8':'unsigned char'
| |-ParmVarDecl 0x55887c1309f0 <line:3804:11, col:18> col:18 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c130a68 <line:3805:11, col:18> col:18 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c130ae0 <line:3806:11, col:18> col:18 AndData 'UINT8':'unsigned char'
| |-ParmVarDecl 0x55887c130b58 <line:3807:11, col:18> col:18 OrData 'UINT8':'unsigned char'
| `-FullComment 0x55887c3ad5a0 <line:3774:1, line:3797:30>
|   |-ParagraphComment 0x55887c3acde0 <line:3774:1, line:3775:37>
|   | |-TextComment 0x55887c3acd90 <line:3774:1, col:77> Text="  Reads a bit field from an 8-bit value, performs a bitwise AND followed by a"
|   | `-TextComment 0x55887c3acdb0 <line:3775:1, col:37> Text="  bitwise OR, and returns the result."
|   |-ParagraphComment 0x55887c3acea0 <line:3777:1, line:3780:45>
|   | |-TextComment 0x55887c3ace00 <line:3777:1, col:79> Text="  Performs a bitwise AND between the bit field specified by StartBit and EndBit"
|   | |-TextComment 0x55887c3ace20 <line:3778:1, col:70> Text="  in Operand and the value specified by AndData, followed by a bitwise"
|   | |-TextComment 0x55887c3ace40 <line:3779:1, col:66> Text="  OR with value specified by OrData. All other bits in Operand are"
|   | `-TextComment 0x55887c3ace60 <line:3780:1, col:45> Text="  preserved. The new 8-bit value is returned."
|   |-ParagraphComment 0x55887c3acfb0 <line:3782:1, line:3787:99>
|   | |-TextComment 0x55887c3acec0 <line:3782:1, col:55> Text="  If 8-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3acee0 <line:3783:1, col:47> Text="  If StartBit is greater than 7, then ASSERT()."
|   | |-TextComment 0x55887c3acf00 <line:3784:1, col:45> Text="  If EndBit is greater than 7, then ASSERT()."
|   | |-TextComment 0x55887c3acf20 <line:3785:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | |-TextComment 0x55887c3acf40 <line:3786:1, col:100> Text="  If AndData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   | `-TextComment 0x55887c3acf60 <line:3787:1, col:99> Text="  If OrData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3ad000 <line:3789:1, col:2>
|   | `-TextComment 0x55887c3acfd0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ad020 <col:3, line:3790:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3ad0d0 <line:3789:18, line:3790:2>
|   |   |-TextComment 0x55887c3ad080 <line:3789:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3ad0a0 <line:3790:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ad0f0 <col:3, line:3792:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3ad1d0 <line:3790:19, line:3792:2>
|   |   |-TextComment 0x55887c3ad150 <line:3790:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3ad170 <line:3791:1, col:31> Text="                    Range 0..7."
|   |   `-TextComment 0x55887c3ad190 <line:3792:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ad1f0 <col:3, line:3794:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3ad2d0 <line:3792:17, line:3794:2>
|   |   |-TextComment 0x55887c3ad250 <line:3792:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3ad270 <line:3793:1, col:31> Text="                    Range 0..7."
|   |   `-TextComment 0x55887c3ad290 <line:3794:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ad2f0 <col:3, line:3795:2> [in] implicitly Param="AndData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3ad3a0 <line:3794:18, line:3795:2>
|   |   |-TextComment 0x55887c3ad350 <line:3794:18, col:72> Text="   The value to AND with the read value from the value."
|   |   `-TextComment 0x55887c3ad370 <line:3795:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ad3c0 <col:3, col:73> [in] implicitly Param="OrData" ParamIndex=4
|   | `-ParagraphComment 0x55887c3ad450 <col:17, col:73>
|   |   `-TextComment 0x55887c3ad420 <col:17, col:73> Text="    The value to OR with the result of the AND operation."
|   |-ParagraphComment 0x55887c3ad4a0 <line:3797:1, col:2>
|   | `-TextComment 0x55887c3ad470 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ad4c0 <col:3, col:30> Name="return"
|     `-ParagraphComment 0x55887c3ad520 <col:10, col:30>
|       `-TextComment 0x55887c3ad4f0 <col:10, col:30> Text=" The new 8-bit value."
|-FunctionDecl 0x55887c131148 <line:3829:1, line:3835:3> line:3831:1 BitFieldRead16 'UINT16 (UINT16, UINTN, UINTN)'
| |-ParmVarDecl 0x55887c130f38 <line:3832:11, col:19> col:19 Operand 'UINT16':'unsigned short'
| |-ParmVarDecl 0x55887c130fb0 <line:3833:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c131028 <line:3834:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3adb80 <line:3811:1, line:3826:29>
|   |-ParagraphComment 0x55887c3ad640 <line:3811:1, col:42>
|   | `-TextComment 0x55887c3ad610 <col:1, col:42> Text="  Returns a bit field from a 16-bit value."
|   |-ParagraphComment 0x55887c3ad690 <line:3813:1, col:77>
|   | `-TextComment 0x55887c3ad660 <col:1, col:77> Text="  Returns the bitfield specified by the StartBit and the EndBit from Operand."
|   |-ParagraphComment 0x55887c3ad750 <line:3815:1, line:3818:49>
|   | |-TextComment 0x55887c3ad6b0 <line:3815:1, col:56> Text="  If 16-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3ad6d0 <line:3816:1, col:48> Text="  If StartBit is greater than 15, then ASSERT()."
|   | |-TextComment 0x55887c3ad6f0 <line:3817:1, col:46> Text="  If EndBit is greater than 15, then ASSERT()."
|   | `-TextComment 0x55887c3ad710 <line:3818:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3ad7a0 <line:3820:1, col:2>
|   | `-TextComment 0x55887c3ad770 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ad7c0 <col:3, line:3821:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3ad870 <line:3820:18, line:3821:2>
|   |   |-TextComment 0x55887c3ad820 <line:3820:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3ad840 <line:3821:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ad890 <col:3, line:3823:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3ad970 <line:3821:19, line:3823:2>
|   |   |-TextComment 0x55887c3ad8f0 <line:3821:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3ad910 <line:3822:1, col:32> Text="                    Range 0..15."
|   |   `-TextComment 0x55887c3ad930 <line:3823:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ad990 <col:3, line:3824:32> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3ada40 <line:3823:17, line:3824:32>
|   |   |-TextComment 0x55887c3ad9f0 <line:3823:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   `-TextComment 0x55887c3ada10 <line:3824:1, col:32> Text="                    Range 0..15."
|   |-ParagraphComment 0x55887c3ada90 <line:3826:1, col:2>
|   | `-TextComment 0x55887c3ada60 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3adab0 <col:3, col:29> Name="return"
|     `-ParagraphComment 0x55887c3adb10 <col:10, col:29>
|       `-TextComment 0x55887c3adae0 <col:10, col:29> Text=" The bit field read."
|-FunctionDecl 0x55887c1314e8 <line:3860:1, line:3867:3> line:3862:1 BitFieldWrite16 'UINT16 (UINT16, UINTN, UINTN, UINT16)'
| |-ParmVarDecl 0x55887c131238 <line:3863:11, col:19> col:19 Operand 'UINT16':'unsigned short'
| |-ParmVarDecl 0x55887c1312b0 <line:3864:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c131328 <line:3865:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1313a0 <line:3866:11, col:19> col:19 Value 'UINT16':'unsigned short'
| `-FullComment 0x55887c3ae2c0 <line:3838:1, line:3857:31>
|   |-ParagraphComment 0x55887c3adc20 <line:3838:1, col:63>
|   | `-TextComment 0x55887c3adbf0 <col:1, col:63> Text="  Writes a bit field to a 16-bit value, and returns the result."
|   |-ParagraphComment 0x55887c3adcc0 <line:3840:1, line:3842:11>
|   | |-TextComment 0x55887c3adc40 <line:3840:1, col:75> Text="  Writes Value to the bit field specified by the StartBit and the EndBit in"
|   | |-TextComment 0x55887c3adc60 <line:3841:1, col:75> Text="  Operand. All other bits in Operand are preserved. The new 16-bit value is"
|   | `-TextComment 0x55887c3adc80 <line:3842:1, col:11> Text="  returned."
|   |-ParagraphComment 0x55887c3addb0 <line:3844:1, line:3848:98>
|   | |-TextComment 0x55887c3adce0 <line:3844:1, col:56> Text="  If 16-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3add00 <line:3845:1, col:48> Text="  If StartBit is greater than 15, then ASSERT()."
|   | |-TextComment 0x55887c3add20 <line:3846:1, col:46> Text="  If EndBit is greater than 15, then ASSERT()."
|   | |-TextComment 0x55887c3add40 <line:3847:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3add60 <line:3848:1, col:98> Text="  If Value is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3ade00 <line:3850:1, col:2>
|   | `-TextComment 0x55887c3addd0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ade20 <col:3, line:3851:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3aded0 <line:3850:18, line:3851:2>
|   |   |-TextComment 0x55887c3ade80 <line:3850:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3adea0 <line:3851:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3adef0 <col:3, line:3853:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3adfd0 <line:3851:19, line:3853:2>
|   |   |-TextComment 0x55887c3adf50 <line:3851:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3adf70 <line:3852:1, col:32> Text="                    Range 0..15."
|   |   `-TextComment 0x55887c3adf90 <line:3853:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3adff0 <col:3, line:3855:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3ae0d0 <line:3853:17, line:3855:2>
|   |   |-TextComment 0x55887c3ae050 <line:3853:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3ae070 <line:3854:1, col:32> Text="                    Range 0..15."
|   |   `-TextComment 0x55887c3ae090 <line:3855:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ae0f0 <col:3, col:47> [in] implicitly Param="Value" ParamIndex=3
|   | `-ParagraphComment 0x55887c3ae180 <col:16, col:47>
|   |   `-TextComment 0x55887c3ae150 <col:16, col:47> Text="     New value of the bit field."
|   |-ParagraphComment 0x55887c3ae1d0 <line:3857:1, col:2>
|   | `-TextComment 0x55887c3ae1a0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ae1f0 <col:3, col:31> Name="return"
|     `-ParagraphComment 0x55887c3ae250 <col:10, col:31>
|       `-TextComment 0x55887c3ae220 <col:10, col:31> Text=" The new 16-bit value."
|-FunctionDecl 0x55887c1317f8 <line:3893:1, line:3900:3> line:3895:1 BitFieldOr16 'UINT16 (UINT16, UINTN, UINTN, UINT16)'
| |-ParmVarDecl 0x55887c1315e8 <line:3896:11, col:19> col:19 Operand 'UINT16':'unsigned short'
| |-ParmVarDecl 0x55887c131660 <line:3897:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1316d8 <line:3898:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c131750 <line:3899:11, col:19> col:19 OrData 'UINT16':'unsigned short'
| `-FullComment 0x55887c3aea20 <line:3870:1, line:3890:31>
|   |-ParagraphComment 0x55887c3ae380 <line:3870:1, line:3871:9>
|   | |-TextComment 0x55887c3ae330 <line:3870:1, col:79> Text="  Reads a bit field from a 16-bit value, performs a bitwise OR, and returns the"
|   | `-TextComment 0x55887c3ae350 <line:3871:1, col:9> Text="  result."
|   |-ParagraphComment 0x55887c3ae420 <line:3873:1, line:3875:58>
|   | |-TextComment 0x55887c3ae3a0 <line:3873:1, col:67> Text="  Performs a bitwise OR between the bit field specified by StartBit"
|   | |-TextComment 0x55887c3ae3c0 <line:3874:1, col:76> Text="  and EndBit in Operand and the value specified by OrData. All other bits in"
|   | `-TextComment 0x55887c3ae3e0 <line:3875:1, col:58> Text="  Operand are preserved. The new 16-bit value is returned."
|   |-ParagraphComment 0x55887c3ae510 <line:3877:1, line:3881:99>
|   | |-TextComment 0x55887c3ae440 <line:3877:1, col:56> Text="  If 16-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3ae460 <line:3878:1, col:48> Text="  If StartBit is greater than 15, then ASSERT()."
|   | |-TextComment 0x55887c3ae480 <line:3879:1, col:46> Text="  If EndBit is greater than 15, then ASSERT()."
|   | |-TextComment 0x55887c3ae4a0 <line:3880:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3ae4c0 <line:3881:1, col:99> Text="  If OrData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3ae560 <line:3883:1, col:2>
|   | `-TextComment 0x55887c3ae530 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ae580 <col:3, line:3884:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3ae630 <line:3883:18, line:3884:2>
|   |   |-TextComment 0x55887c3ae5e0 <line:3883:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3ae600 <line:3884:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ae650 <col:3, line:3886:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3ae730 <line:3884:19, line:3886:2>
|   |   |-TextComment 0x55887c3ae6b0 <line:3884:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3ae6d0 <line:3885:1, col:32> Text="                    Range 0..15."
|   |   `-TextComment 0x55887c3ae6f0 <line:3886:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ae750 <col:3, line:3888:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3ae830 <line:3886:17, line:3888:2>
|   |   |-TextComment 0x55887c3ae7b0 <line:3886:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3ae7d0 <line:3887:1, col:32> Text="                    Range 0..15."
|   |   `-TextComment 0x55887c3ae7f0 <line:3888:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ae850 <col:3, col:70> [in] implicitly Param="OrData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3ae8e0 <col:17, col:70>
|   |   `-TextComment 0x55887c3ae8b0 <col:17, col:70> Text="    The value to OR with the read value from the value"
|   |-ParagraphComment 0x55887c3ae930 <line:3890:1, col:2>
|   | `-TextComment 0x55887c3ae900 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ae950 <col:3, col:31> Name="return"
|     `-ParagraphComment 0x55887c3ae9b0 <col:10, col:31>
|       `-TextComment 0x55887c3ae980 <col:10, col:31> Text=" The new 16-bit value."
|-FunctionDecl 0x55887c131b08 <line:3926:1, line:3933:3> line:3928:1 BitFieldAnd16 'UINT16 (UINT16, UINTN, UINTN, UINT16)'
| |-ParmVarDecl 0x55887c1318f8 <line:3929:11, col:19> col:19 Operand 'UINT16':'unsigned short'
| |-ParmVarDecl 0x55887c131970 <line:3930:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1319e8 <line:3931:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c131a60 <line:3932:11, col:19> col:19 AndData 'UINT16':'unsigned short'
| `-FullComment 0x55887c3af190 <line:3903:1, line:3923:31>
|   |-ParagraphComment 0x55887c3aeae0 <line:3903:1, line:3904:13>
|   | |-TextComment 0x55887c3aea90 <line:3903:1, col:76> Text="  Reads a bit field from a 16-bit value, performs a bitwise AND, and returns"
|   | `-TextComment 0x55887c3aeab0 <line:3904:1, col:13> Text="  the result."
|   |-ParagraphComment 0x55887c3aeb80 <line:3906:1, line:3908:46>
|   | |-TextComment 0x55887c3aeb00 <line:3906:1, col:79> Text="  Performs a bitwise AND between the bit field specified by StartBit and EndBit"
|   | |-TextComment 0x55887c3aeb20 <line:3907:1, col:78> Text="  in Operand and the value specified by AndData. All other bits in Operand are"
|   | `-TextComment 0x55887c3aeb40 <line:3908:1, col:46> Text="  preserved. The new 16-bit value is returned."
|   |-ParagraphComment 0x55887c3aec70 <line:3910:1, line:3914:100>
|   | |-TextComment 0x55887c3aeba0 <line:3910:1, col:56> Text="  If 16-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3aebc0 <line:3911:1, col:48> Text="  If StartBit is greater than 15, then ASSERT()."
|   | |-TextComment 0x55887c3aebe0 <line:3912:1, col:46> Text="  If EndBit is greater than 15, then ASSERT()."
|   | |-TextComment 0x55887c3aec00 <line:3913:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3aec20 <line:3914:1, col:100> Text="  If AndData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3aecc0 <line:3916:1, col:2>
|   | `-TextComment 0x55887c3aec90 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3aece0 <col:3, line:3917:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3aed90 <line:3916:18, line:3917:2>
|   |   |-TextComment 0x55887c3aed40 <line:3916:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3aed60 <line:3917:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3aedb0 <col:3, line:3919:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3aee90 <line:3917:19, line:3919:2>
|   |   |-TextComment 0x55887c3aee10 <line:3917:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3aee30 <line:3918:1, col:32> Text="                    Range 0..15."
|   |   `-TextComment 0x55887c3aee50 <line:3919:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3aeeb0 <col:3, line:3921:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3aef90 <line:3919:17, line:3921:2>
|   |   |-TextComment 0x55887c3aef10 <line:3919:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3aef30 <line:3920:1, col:32> Text="                    Range 0..15."
|   |   `-TextComment 0x55887c3aef50 <line:3921:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3aefb0 <col:3, col:71> [in] implicitly Param="AndData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3af050 <col:18, col:71>
|   |   `-TextComment 0x55887c3af020 <col:18, col:71> Text="   The value to AND with the read value from the value"
|   |-ParagraphComment 0x55887c3af0a0 <line:3923:1, col:2>
|   | `-TextComment 0x55887c3af070 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3af0c0 <col:3, col:31> Name="return"
|     `-ParagraphComment 0x55887c3af120 <col:10, col:31>
|       `-TextComment 0x55887c3af0f0 <col:10, col:31> Text=" The new 16-bit value."
|-FunctionDecl 0x55887c133fa8 <line:3962:1, line:3970:3> line:3964:1 BitFieldAndThenOr16 'UINT16 (UINT16, UINTN, UINTN, UINT16, UINT16)'
| |-ParmVarDecl 0x55887c131c08 <line:3965:11, col:19> col:19 Operand 'UINT16':'unsigned short'
| |-ParmVarDecl 0x55887c131c80 <line:3966:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c131cf8 <line:3967:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c131d70 <line:3968:11, col:19> col:19 AndData 'UINT16':'unsigned short'
| |-ParmVarDecl 0x55887c133e50 <line:3969:11, col:19> col:19 OrData 'UINT16':'unsigned short'
| `-FullComment 0x55887c3afa10 <line:3936:1, line:3959:31>
|   |-ParagraphComment 0x55887c3af250 <line:3936:1, line:3937:37>
|   | |-TextComment 0x55887c3af200 <line:3936:1, col:77> Text="  Reads a bit field from a 16-bit value, performs a bitwise AND followed by a"
|   | `-TextComment 0x55887c3af220 <line:3937:1, col:37> Text="  bitwise OR, and returns the result."
|   |-ParagraphComment 0x55887c3af310 <line:3939:1, line:3942:46>
|   | |-TextComment 0x55887c3af270 <line:3939:1, col:79> Text="  Performs a bitwise AND between the bit field specified by StartBit and EndBit"
|   | |-TextComment 0x55887c3af290 <line:3940:1, col:70> Text="  in Operand and the value specified by AndData, followed by a bitwise"
|   | |-TextComment 0x55887c3af2b0 <line:3941:1, col:66> Text="  OR with value specified by OrData. All other bits in Operand are"
|   | `-TextComment 0x55887c3af2d0 <line:3942:1, col:46> Text="  preserved. The new 16-bit value is returned."
|   |-ParagraphComment 0x55887c3af420 <line:3944:1, line:3949:99>
|   | |-TextComment 0x55887c3af330 <line:3944:1, col:56> Text="  If 16-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3af350 <line:3945:1, col:48> Text="  If StartBit is greater than 15, then ASSERT()."
|   | |-TextComment 0x55887c3af370 <line:3946:1, col:46> Text="  If EndBit is greater than 15, then ASSERT()."
|   | |-TextComment 0x55887c3af390 <line:3947:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | |-TextComment 0x55887c3af3b0 <line:3948:1, col:100> Text="  If AndData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   | `-TextComment 0x55887c3af3d0 <line:3949:1, col:99> Text="  If OrData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3af470 <line:3951:1, col:2>
|   | `-TextComment 0x55887c3af440 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3af490 <col:3, line:3952:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3af540 <line:3951:18, line:3952:2>
|   |   |-TextComment 0x55887c3af4f0 <line:3951:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3af510 <line:3952:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3af560 <col:3, line:3954:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3af640 <line:3952:19, line:3954:2>
|   |   |-TextComment 0x55887c3af5c0 <line:3952:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3af5e0 <line:3953:1, col:32> Text="                    Range 0..15."
|   |   `-TextComment 0x55887c3af600 <line:3954:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3af660 <col:3, line:3956:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3af740 <line:3954:17, line:3956:2>
|   |   |-TextComment 0x55887c3af6c0 <line:3954:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3af6e0 <line:3955:1, col:32> Text="                    Range 0..15."
|   |   `-TextComment 0x55887c3af700 <line:3956:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3af760 <col:3, line:3957:2> [in] implicitly Param="AndData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3af810 <line:3956:18, line:3957:2>
|   |   |-TextComment 0x55887c3af7c0 <line:3956:18, col:72> Text="   The value to AND with the read value from the value."
|   |   `-TextComment 0x55887c3af7e0 <line:3957:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3af830 <col:3, col:73> [in] implicitly Param="OrData" ParamIndex=4
|   | `-ParagraphComment 0x55887c3af8c0 <col:17, col:73>
|   |   `-TextComment 0x55887c3af890 <col:17, col:73> Text="    The value to OR with the result of the AND operation."
|   |-ParagraphComment 0x55887c3af910 <line:3959:1, col:2>
|   | `-TextComment 0x55887c3af8e0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3af930 <col:3, col:31> Name="return"
|     `-ParagraphComment 0x55887c3af990 <col:10, col:31>
|       `-TextComment 0x55887c3af960 <col:10, col:31> Text=" The new 16-bit value."
|-FunctionDecl 0x55887c1342b8 <line:3991:1, line:3997:3> line:3993:1 BitFieldRead32 'UINT32 (UINT32, UINTN, UINTN)'
| |-ParmVarDecl 0x55887c1340a8 <line:3994:11, col:19> col:19 Operand 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c134120 <line:3995:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c134198 <line:3996:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3afff0 <line:3973:1, line:3988:29>
|   |-ParagraphComment 0x55887c3afab0 <line:3973:1, col:42>
|   | `-TextComment 0x55887c3afa80 <col:1, col:42> Text="  Returns a bit field from a 32-bit value."
|   |-ParagraphComment 0x55887c3afb00 <line:3975:1, col:77>
|   | `-TextComment 0x55887c3afad0 <col:1, col:77> Text="  Returns the bitfield specified by the StartBit and the EndBit from Operand."
|   |-ParagraphComment 0x55887c3afbc0 <line:3977:1, line:3980:49>
|   | |-TextComment 0x55887c3afb20 <line:3977:1, col:56> Text="  If 32-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3afb40 <line:3978:1, col:48> Text="  If StartBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3afb60 <line:3979:1, col:46> Text="  If EndBit is greater than 31, then ASSERT()."
|   | `-TextComment 0x55887c3afb80 <line:3980:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3afc10 <line:3982:1, col:2>
|   | `-TextComment 0x55887c3afbe0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3afc30 <col:3, line:3983:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3afce0 <line:3982:18, line:3983:2>
|   |   |-TextComment 0x55887c3afc90 <line:3982:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3afcb0 <line:3983:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3afd00 <col:3, line:3985:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3afde0 <line:3983:19, line:3985:2>
|   |   |-TextComment 0x55887c3afd60 <line:3983:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3afd80 <line:3984:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3afda0 <line:3985:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3afe00 <col:3, line:3986:32> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3afeb0 <line:3985:17, line:3986:32>
|   |   |-TextComment 0x55887c3afe60 <line:3985:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   `-TextComment 0x55887c3afe80 <line:3986:1, col:32> Text="                    Range 0..31."
|   |-ParagraphComment 0x55887c3aff00 <line:3988:1, col:2>
|   | `-TextComment 0x55887c3afed0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3aff20 <col:3, col:29> Name="return"
|     `-ParagraphComment 0x55887c3aff80 <col:10, col:29>
|       `-TextComment 0x55887c3aff50 <col:10, col:29> Text=" The bit field read."
|-FunctionDecl 0x55887c134658 <line:4022:1, line:4029:3> line:4024:1 BitFieldWrite32 'UINT32 (UINT32, UINTN, UINTN, UINT32)'
| |-ParmVarDecl 0x55887c1343a8 <line:4025:11, col:19> col:19 Operand 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c134420 <line:4026:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c134498 <line:4027:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c134510 <line:4028:11, col:19> col:19 Value 'UINT32':'unsigned int'
| `-FullComment 0x55887c3b0730 <line:4000:1, line:4019:31>
|   |-ParagraphComment 0x55887c3b0090 <line:4000:1, col:63>
|   | `-TextComment 0x55887c3b0060 <col:1, col:63> Text="  Writes a bit field to a 32-bit value, and returns the result."
|   |-ParagraphComment 0x55887c3b0130 <line:4002:1, line:4004:11>
|   | |-TextComment 0x55887c3b00b0 <line:4002:1, col:75> Text="  Writes Value to the bit field specified by the StartBit and the EndBit in"
|   | |-TextComment 0x55887c3b00d0 <line:4003:1, col:75> Text="  Operand. All other bits in Operand are preserved. The new 32-bit value is"
|   | `-TextComment 0x55887c3b00f0 <line:4004:1, col:11> Text="  returned."
|   |-ParagraphComment 0x55887c3b0220 <line:4006:1, line:4010:98>
|   | |-TextComment 0x55887c3b0150 <line:4006:1, col:56> Text="  If 32-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3b0170 <line:4007:1, col:48> Text="  If StartBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3b0190 <line:4008:1, col:46> Text="  If EndBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3b01b0 <line:4009:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3b01d0 <line:4010:1, col:98> Text="  If Value is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3b0270 <line:4012:1, col:2>
|   | `-TextComment 0x55887c3b0240 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b0290 <col:3, line:4013:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b0340 <line:4012:18, line:4013:2>
|   |   |-TextComment 0x55887c3b02f0 <line:4012:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3b0310 <line:4013:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b0360 <col:3, line:4015:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b0440 <line:4013:19, line:4015:2>
|   |   |-TextComment 0x55887c3b03c0 <line:4013:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3b03e0 <line:4014:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3b0400 <line:4015:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b0460 <col:3, line:4017:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3b0540 <line:4015:17, line:4017:2>
|   |   |-TextComment 0x55887c3b04c0 <line:4015:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3b04e0 <line:4016:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3b0500 <line:4017:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b0560 <col:3, col:47> [in] implicitly Param="Value" ParamIndex=3
|   | `-ParagraphComment 0x55887c3b05f0 <col:16, col:47>
|   |   `-TextComment 0x55887c3b05c0 <col:16, col:47> Text="     New value of the bit field."
|   |-ParagraphComment 0x55887c3b0640 <line:4019:1, col:2>
|   | `-TextComment 0x55887c3b0610 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b0660 <col:3, col:31> Name="return"
|     `-ParagraphComment 0x55887c3b06c0 <col:10, col:31>
|       `-TextComment 0x55887c3b0690 <col:10, col:31> Text=" The new 32-bit value."
|-FunctionDecl 0x55887c134968 <line:4055:1, line:4062:3> line:4057:1 BitFieldOr32 'UINT32 (UINT32, UINTN, UINTN, UINT32)'
| |-ParmVarDecl 0x55887c134758 <line:4058:11, col:19> col:19 Operand 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c1347d0 <line:4059:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c134848 <line:4060:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1348c0 <line:4061:11, col:19> col:19 OrData 'UINT32':'unsigned int'
| `-FullComment 0x55887c3b0e90 <line:4032:1, line:4052:31>
|   |-ParagraphComment 0x55887c3b07f0 <line:4032:1, line:4033:9>
|   | |-TextComment 0x55887c3b07a0 <line:4032:1, col:79> Text="  Reads a bit field from a 32-bit value, performs a bitwise OR, and returns the"
|   | `-TextComment 0x55887c3b07c0 <line:4033:1, col:9> Text="  result."
|   |-ParagraphComment 0x55887c3b0890 <line:4035:1, line:4037:58>
|   | |-TextComment 0x55887c3b0810 <line:4035:1, col:67> Text="  Performs a bitwise OR between the bit field specified by StartBit"
|   | |-TextComment 0x55887c3b0830 <line:4036:1, col:76> Text="  and EndBit in Operand and the value specified by OrData. All other bits in"
|   | `-TextComment 0x55887c3b0850 <line:4037:1, col:58> Text="  Operand are preserved. The new 32-bit value is returned."
|   |-ParagraphComment 0x55887c3b0980 <line:4039:1, line:4043:99>
|   | |-TextComment 0x55887c3b08b0 <line:4039:1, col:56> Text="  If 32-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3b08d0 <line:4040:1, col:48> Text="  If StartBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3b08f0 <line:4041:1, col:46> Text="  If EndBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3b0910 <line:4042:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3b0930 <line:4043:1, col:99> Text="  If OrData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3b09d0 <line:4045:1, col:2>
|   | `-TextComment 0x55887c3b09a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b09f0 <col:3, line:4046:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b0aa0 <line:4045:18, line:4046:2>
|   |   |-TextComment 0x55887c3b0a50 <line:4045:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3b0a70 <line:4046:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b0ac0 <col:3, line:4048:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b0ba0 <line:4046:19, line:4048:2>
|   |   |-TextComment 0x55887c3b0b20 <line:4046:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3b0b40 <line:4047:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3b0b60 <line:4048:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b0bc0 <col:3, line:4050:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3b0ca0 <line:4048:17, line:4050:2>
|   |   |-TextComment 0x55887c3b0c20 <line:4048:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3b0c40 <line:4049:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3b0c60 <line:4050:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b0cc0 <col:3, col:71> [in] implicitly Param="OrData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3b0d50 <col:17, col:71>
|   |   `-TextComment 0x55887c3b0d20 <col:17, col:71> Text="    The value to OR with the read value from the value."
|   |-ParagraphComment 0x55887c3b0da0 <line:4052:1, col:2>
|   | `-TextComment 0x55887c3b0d70 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b0dc0 <col:3, col:31> Name="return"
|     `-ParagraphComment 0x55887c3b0e20 <col:10, col:31>
|       `-TextComment 0x55887c3b0df0 <col:10, col:31> Text=" The new 32-bit value."
|-FunctionDecl 0x55887c134c78 <line:4088:1, line:4095:3> line:4090:1 BitFieldAnd32 'UINT32 (UINT32, UINTN, UINTN, UINT32)'
| |-ParmVarDecl 0x55887c134a68 <line:4091:11, col:19> col:19 Operand 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c134ae0 <line:4092:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c134b58 <line:4093:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c134bd0 <line:4094:11, col:19> col:19 AndData 'UINT32':'unsigned int'
| `-FullComment 0x55887c3b15f0 <line:4065:1, line:4085:31>
|   |-ParagraphComment 0x55887c3b0f50 <line:4065:1, line:4066:13>
|   | |-TextComment 0x55887c3b0f00 <line:4065:1, col:76> Text="  Reads a bit field from a 32-bit value, performs a bitwise AND, and returns"
|   | `-TextComment 0x55887c3b0f20 <line:4066:1, col:13> Text="  the result."
|   |-ParagraphComment 0x55887c3b0ff0 <line:4068:1, line:4070:46>
|   | |-TextComment 0x55887c3b0f70 <line:4068:1, col:79> Text="  Performs a bitwise AND between the bit field specified by StartBit and EndBit"
|   | |-TextComment 0x55887c3b0f90 <line:4069:1, col:78> Text="  in Operand and the value specified by AndData. All other bits in Operand are"
|   | `-TextComment 0x55887c3b0fb0 <line:4070:1, col:46> Text="  preserved. The new 32-bit value is returned."
|   |-ParagraphComment 0x55887c3b10e0 <line:4072:1, line:4076:100>
|   | |-TextComment 0x55887c3b1010 <line:4072:1, col:56> Text="  If 32-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3b1030 <line:4073:1, col:48> Text="  If StartBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3b1050 <line:4074:1, col:46> Text="  If EndBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3b1070 <line:4075:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3b1090 <line:4076:1, col:100> Text="  If AndData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3b1130 <line:4078:1, col:2>
|   | `-TextComment 0x55887c3b1100 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b1150 <col:3, line:4079:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b1200 <line:4078:18, line:4079:2>
|   |   |-TextComment 0x55887c3b11b0 <line:4078:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3b11d0 <line:4079:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b1220 <col:3, line:4081:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b1300 <line:4079:19, line:4081:2>
|   |   |-TextComment 0x55887c3b1280 <line:4079:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3b12a0 <line:4080:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3b12c0 <line:4081:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b1320 <col:3, line:4083:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3b1400 <line:4081:17, line:4083:2>
|   |   |-TextComment 0x55887c3b1380 <line:4081:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3b13a0 <line:4082:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3b13c0 <line:4083:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b1420 <col:3, col:71> [in] implicitly Param="AndData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3b14b0 <col:18, col:71>
|   |   `-TextComment 0x55887c3b1480 <col:18, col:71> Text="   The value to AND with the read value from the value"
|   |-ParagraphComment 0x55887c3b1500 <line:4085:1, col:2>
|   | `-TextComment 0x55887c3b14d0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b1520 <col:3, col:31> Name="return"
|     `-ParagraphComment 0x55887c3b1580 <col:10, col:31>
|       `-TextComment 0x55887c3b1550 <col:10, col:31> Text=" The new 32-bit value."
|-FunctionDecl 0x55887c135118 <line:4124:1, line:4132:3> line:4126:1 BitFieldAndThenOr32 'UINT32 (UINT32, UINTN, UINTN, UINT32, UINT32)'
| |-ParmVarDecl 0x55887c134d78 <line:4127:11, col:19> col:19 Operand 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c134e60 <line:4128:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c134ed8 <line:4129:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c134f50 <line:4130:11, col:19> col:19 AndData 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c134fc8 <line:4131:11, col:19> col:19 OrData 'UINT32':'unsigned int'
| `-FullComment 0x55887c3b1e70 <line:4098:1, line:4121:31>
|   |-ParagraphComment 0x55887c3b16b0 <line:4098:1, line:4099:37>
|   | |-TextComment 0x55887c3b1660 <line:4098:1, col:77> Text="  Reads a bit field from a 32-bit value, performs a bitwise AND followed by a"
|   | `-TextComment 0x55887c3b1680 <line:4099:1, col:37> Text="  bitwise OR, and returns the result."
|   |-ParagraphComment 0x55887c3b1770 <line:4101:1, line:4104:46>
|   | |-TextComment 0x55887c3b16d0 <line:4101:1, col:79> Text="  Performs a bitwise AND between the bit field specified by StartBit and EndBit"
|   | |-TextComment 0x55887c3b16f0 <line:4102:1, col:70> Text="  in Operand and the value specified by AndData, followed by a bitwise"
|   | |-TextComment 0x55887c3b1710 <line:4103:1, col:66> Text="  OR with value specified by OrData. All other bits in Operand are"
|   | `-TextComment 0x55887c3b1730 <line:4104:1, col:46> Text="  preserved. The new 32-bit value is returned."
|   |-ParagraphComment 0x55887c3b1880 <line:4106:1, line:4111:99>
|   | |-TextComment 0x55887c3b1790 <line:4106:1, col:56> Text="  If 32-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3b17b0 <line:4107:1, col:48> Text="  If StartBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3b17d0 <line:4108:1, col:46> Text="  If EndBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3b17f0 <line:4109:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | |-TextComment 0x55887c3b1810 <line:4110:1, col:100> Text="  If AndData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   | `-TextComment 0x55887c3b1830 <line:4111:1, col:99> Text="  If OrData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3b18d0 <line:4113:1, col:2>
|   | `-TextComment 0x55887c3b18a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b18f0 <col:3, line:4114:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b19a0 <line:4113:18, line:4114:2>
|   |   |-TextComment 0x55887c3b1950 <line:4113:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3b1970 <line:4114:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b19c0 <col:3, line:4116:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b1aa0 <line:4114:19, line:4116:2>
|   |   |-TextComment 0x55887c3b1a20 <line:4114:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3b1a40 <line:4115:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3b1a60 <line:4116:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b1ac0 <col:3, line:4118:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3b1ba0 <line:4116:17, line:4118:2>
|   |   |-TextComment 0x55887c3b1b20 <line:4116:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3b1b40 <line:4117:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3b1b60 <line:4118:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b1bc0 <col:3, line:4119:2> [in] implicitly Param="AndData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3b1c70 <line:4118:18, line:4119:2>
|   |   |-TextComment 0x55887c3b1c20 <line:4118:18, col:72> Text="   The value to AND with the read value from the value."
|   |   `-TextComment 0x55887c3b1c40 <line:4119:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b1c90 <col:3, col:73> [in] implicitly Param="OrData" ParamIndex=4
|   | `-ParagraphComment 0x55887c3b1d20 <col:17, col:73>
|   |   `-TextComment 0x55887c3b1cf0 <col:17, col:73> Text="    The value to OR with the result of the AND operation."
|   |-ParagraphComment 0x55887c3b1d70 <line:4121:1, col:2>
|   | `-TextComment 0x55887c3b1d40 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b1d90 <col:3, col:31> Name="return"
|     `-ParagraphComment 0x55887c3b1df0 <col:10, col:31>
|       `-TextComment 0x55887c3b1dc0 <col:10, col:31> Text=" The new 32-bit value."
|-FunctionDecl 0x55887c135428 <line:4153:1, line:4159:3> line:4155:1 BitFieldRead64 'UINT64 (UINT64, UINTN, UINTN)'
| |-ParmVarDecl 0x55887c135218 <line:4156:11, col:19> col:19 Operand 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c135290 <line:4157:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c135308 <line:4158:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3b2450 <line:4135:1, line:4150:29>
|   |-ParagraphComment 0x55887c3b1f10 <line:4135:1, col:42>
|   | `-TextComment 0x55887c3b1ee0 <col:1, col:42> Text="  Returns a bit field from a 64-bit value."
|   |-ParagraphComment 0x55887c3b1f60 <line:4137:1, col:77>
|   | `-TextComment 0x55887c3b1f30 <col:1, col:77> Text="  Returns the bitfield specified by the StartBit and the EndBit from Operand."
|   |-ParagraphComment 0x55887c3b2020 <line:4139:1, line:4142:49>
|   | |-TextComment 0x55887c3b1f80 <line:4139:1, col:56> Text="  If 64-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3b1fa0 <line:4140:1, col:48> Text="  If StartBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3b1fc0 <line:4141:1, col:46> Text="  If EndBit is greater than 63, then ASSERT()."
|   | `-TextComment 0x55887c3b1fe0 <line:4142:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3b2070 <line:4144:1, col:2>
|   | `-TextComment 0x55887c3b2040 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b2090 <col:3, line:4145:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b2140 <line:4144:18, line:4145:2>
|   |   |-TextComment 0x55887c3b20f0 <line:4144:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3b2110 <line:4145:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b2160 <col:3, line:4147:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b2240 <line:4145:19, line:4147:2>
|   |   |-TextComment 0x55887c3b21c0 <line:4145:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3b21e0 <line:4146:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3b2200 <line:4147:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b2260 <col:3, line:4148:32> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3b2310 <line:4147:17, line:4148:32>
|   |   |-TextComment 0x55887c3b22c0 <line:4147:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   `-TextComment 0x55887c3b22e0 <line:4148:1, col:32> Text="                    Range 0..63."
|   |-ParagraphComment 0x55887c3b2360 <line:4150:1, col:2>
|   | `-TextComment 0x55887c3b2330 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b2380 <col:3, col:29> Name="return"
|     `-ParagraphComment 0x55887c3b23e0 <col:10, col:29>
|       `-TextComment 0x55887c3b23b0 <col:10, col:29> Text=" The bit field read."
|-FunctionDecl 0x55887c1357c8 <line:4184:1, line:4191:3> line:4186:1 BitFieldWrite64 'UINT64 (UINT64, UINTN, UINTN, UINT64)'
| |-ParmVarDecl 0x55887c135518 <line:4187:11, col:19> col:19 Operand 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c135590 <line:4188:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c135608 <line:4189:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c135680 <line:4190:11, col:19> col:19 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3b2b90 <line:4162:1, line:4181:31>
|   |-ParagraphComment 0x55887c3b24f0 <line:4162:1, col:63>
|   | `-TextComment 0x55887c3b24c0 <col:1, col:63> Text="  Writes a bit field to a 64-bit value, and returns the result."
|   |-ParagraphComment 0x55887c3b2590 <line:4164:1, line:4166:11>
|   | |-TextComment 0x55887c3b2510 <line:4164:1, col:75> Text="  Writes Value to the bit field specified by the StartBit and the EndBit in"
|   | |-TextComment 0x55887c3b2530 <line:4165:1, col:75> Text="  Operand. All other bits in Operand are preserved. The new 64-bit value is"
|   | `-TextComment 0x55887c3b2550 <line:4166:1, col:11> Text="  returned."
|   |-ParagraphComment 0x55887c3b2680 <line:4168:1, line:4172:98>
|   | |-TextComment 0x55887c3b25b0 <line:4168:1, col:56> Text="  If 64-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3b25d0 <line:4169:1, col:48> Text="  If StartBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3b25f0 <line:4170:1, col:46> Text="  If EndBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3b2610 <line:4171:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3b2630 <line:4172:1, col:98> Text="  If Value is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3b26d0 <line:4174:1, col:2>
|   | `-TextComment 0x55887c3b26a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b26f0 <col:3, line:4175:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b27a0 <line:4174:18, line:4175:2>
|   |   |-TextComment 0x55887c3b2750 <line:4174:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3b2770 <line:4175:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b27c0 <col:3, line:4177:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b28a0 <line:4175:19, line:4177:2>
|   |   |-TextComment 0x55887c3b2820 <line:4175:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3b2840 <line:4176:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3b2860 <line:4177:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b28c0 <col:3, line:4179:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3b29a0 <line:4177:17, line:4179:2>
|   |   |-TextComment 0x55887c3b2920 <line:4177:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3b2940 <line:4178:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3b2960 <line:4179:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b29c0 <col:3, col:47> [in] implicitly Param="Value" ParamIndex=3
|   | `-ParagraphComment 0x55887c3b2a50 <col:16, col:47>
|   |   `-TextComment 0x55887c3b2a20 <col:16, col:47> Text="     New value of the bit field."
|   |-ParagraphComment 0x55887c3b2aa0 <line:4181:1, col:2>
|   | `-TextComment 0x55887c3b2a70 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b2ac0 <col:3, col:31> Name="return"
|     `-ParagraphComment 0x55887c3b2b20 <col:10, col:31>
|       `-TextComment 0x55887c3b2af0 <col:10, col:31> Text=" The new 64-bit value."
|-FunctionDecl 0x55887c135ad8 <line:4217:1, line:4224:3> line:4219:1 BitFieldOr64 'UINT64 (UINT64, UINTN, UINTN, UINT64)'
| |-ParmVarDecl 0x55887c1358c8 <line:4220:11, col:19> col:19 Operand 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c135940 <line:4221:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1359b8 <line:4222:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c135a30 <line:4223:11, col:19> col:19 OrData 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3b3310 <line:4194:1, line:4214:31>
|   |-ParagraphComment 0x55887c3b2c50 <line:4194:1, line:4195:9>
|   | |-TextComment 0x55887c3b2c00 <line:4194:1, col:79> Text="  Reads a bit field from a 64-bit value, performs a bitwise OR, and returns the"
|   | `-TextComment 0x55887c3b2c20 <line:4195:1, col:9> Text="  result."
|   |-ParagraphComment 0x55887c3b2cf0 <line:4197:1, line:4199:58>
|   | |-TextComment 0x55887c3b2c70 <line:4197:1, col:67> Text="  Performs a bitwise OR between the bit field specified by StartBit"
|   | |-TextComment 0x55887c3b2c90 <line:4198:1, col:76> Text="  and EndBit in Operand and the value specified by OrData. All other bits in"
|   | `-TextComment 0x55887c3b2cb0 <line:4199:1, col:58> Text="  Operand are preserved. The new 64-bit value is returned."
|   |-ParagraphComment 0x55887c3b2de0 <line:4201:1, line:4205:99>
|   | |-TextComment 0x55887c3b2d10 <line:4201:1, col:56> Text="  If 64-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3b2d30 <line:4202:1, col:48> Text="  If StartBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3b2d50 <line:4203:1, col:46> Text="  If EndBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3b2d70 <line:4204:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3b2d90 <line:4205:1, col:99> Text="  If OrData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3b2e30 <line:4207:1, col:2>
|   | `-TextComment 0x55887c3b2e00 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b2e50 <col:3, line:4208:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b2f00 <line:4207:18, line:4208:2>
|   |   |-TextComment 0x55887c3b2eb0 <line:4207:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3b2ed0 <line:4208:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b2f20 <col:3, line:4210:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b3020 <line:4208:19, line:4210:2>
|   |   |-TextComment 0x55887c3b2f80 <line:4208:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3b2fa0 <line:4209:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3b2fc0 <line:4210:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b3040 <col:3, line:4212:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3b3120 <line:4210:17, line:4212:2>
|   |   |-TextComment 0x55887c3b30a0 <line:4210:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3b30c0 <line:4211:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3b30e0 <line:4212:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b3140 <col:3, col:70> [in] implicitly Param="OrData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3b31d0 <col:17, col:70>
|   |   `-TextComment 0x55887c3b31a0 <col:17, col:70> Text="    The value to OR with the read value from the value"
|   |-ParagraphComment 0x55887c3b3220 <line:4214:1, col:2>
|   | `-TextComment 0x55887c3b31f0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b3240 <col:3, col:31> Name="return"
|     `-ParagraphComment 0x55887c3b32a0 <col:10, col:31>
|       `-TextComment 0x55887c3b3270 <col:10, col:31> Text=" The new 64-bit value."
|-FunctionDecl 0x55887c135e70 <line:4250:1, line:4257:3> line:4252:1 BitFieldAnd64 'UINT64 (UINT64, UINTN, UINTN, UINT64)'
| |-ParmVarDecl 0x55887c135bd8 <line:4253:11, col:19> col:19 Operand 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c135c50 <line:4254:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c135cc8 <line:4255:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c135d40 <line:4256:11, col:19> col:19 AndData 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3b3a70 <line:4227:1, line:4247:31>
|   |-ParagraphComment 0x55887c3b33d0 <line:4227:1, line:4228:13>
|   | |-TextComment 0x55887c3b3380 <line:4227:1, col:76> Text="  Reads a bit field from a 64-bit value, performs a bitwise AND, and returns"
|   | `-TextComment 0x55887c3b33a0 <line:4228:1, col:13> Text="  the result."
|   |-ParagraphComment 0x55887c3b3470 <line:4230:1, line:4232:46>
|   | |-TextComment 0x55887c3b33f0 <line:4230:1, col:79> Text="  Performs a bitwise AND between the bit field specified by StartBit and EndBit"
|   | |-TextComment 0x55887c3b3410 <line:4231:1, col:78> Text="  in Operand and the value specified by AndData. All other bits in Operand are"
|   | `-TextComment 0x55887c3b3430 <line:4232:1, col:46> Text="  preserved. The new 64-bit value is returned."
|   |-ParagraphComment 0x55887c3b3560 <line:4234:1, line:4238:100>
|   | |-TextComment 0x55887c3b3490 <line:4234:1, col:56> Text="  If 64-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3b34b0 <line:4235:1, col:48> Text="  If StartBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3b34d0 <line:4236:1, col:46> Text="  If EndBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3b34f0 <line:4237:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3b3510 <line:4238:1, col:100> Text="  If AndData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3b35b0 <line:4240:1, col:2>
|   | `-TextComment 0x55887c3b3580 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b35d0 <col:3, line:4241:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b3680 <line:4240:18, line:4241:2>
|   |   |-TextComment 0x55887c3b3630 <line:4240:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3b3650 <line:4241:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b36a0 <col:3, line:4243:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b3780 <line:4241:19, line:4243:2>
|   |   |-TextComment 0x55887c3b3700 <line:4241:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3b3720 <line:4242:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3b3740 <line:4243:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b37a0 <col:3, line:4245:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3b3880 <line:4243:17, line:4245:2>
|   |   |-TextComment 0x55887c3b3800 <line:4243:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3b3820 <line:4244:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3b3840 <line:4245:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b38a0 <col:3, col:71> [in] implicitly Param="AndData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3b3930 <col:18, col:71>
|   |   `-TextComment 0x55887c3b3900 <col:18, col:71> Text="   The value to AND with the read value from the value"
|   |-ParagraphComment 0x55887c3b3980 <line:4247:1, col:2>
|   | `-TextComment 0x55887c3b3950 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b39a0 <col:3, col:31> Name="return"
|     `-ParagraphComment 0x55887c3b3a00 <col:10, col:31>
|       `-TextComment 0x55887c3b39d0 <col:10, col:31> Text=" The new 64-bit value."
|-FunctionDecl 0x55887c136298 <line:4286:1, line:4294:3> line:4288:1 BitFieldAndThenOr64 'UINT64 (UINT64, UINTN, UINTN, UINT64, UINT64)'
| |-ParmVarDecl 0x55887c135f68 <line:4289:11, col:19> col:19 Operand 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c135fe0 <line:4290:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c136058 <line:4291:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1360d0 <line:4292:11, col:19> col:19 AndData 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c136148 <line:4293:11, col:19> col:19 OrData 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3b42f0 <line:4260:1, line:4283:31>
|   |-ParagraphComment 0x55887c3b3b30 <line:4260:1, line:4261:37>
|   | |-TextComment 0x55887c3b3ae0 <line:4260:1, col:77> Text="  Reads a bit field from a 64-bit value, performs a bitwise AND followed by a"
|   | `-TextComment 0x55887c3b3b00 <line:4261:1, col:37> Text="  bitwise OR, and returns the result."
|   |-ParagraphComment 0x55887c3b3bf0 <line:4263:1, line:4266:46>
|   | |-TextComment 0x55887c3b3b50 <line:4263:1, col:79> Text="  Performs a bitwise AND between the bit field specified by StartBit and EndBit"
|   | |-TextComment 0x55887c3b3b70 <line:4264:1, col:70> Text="  in Operand and the value specified by AndData, followed by a bitwise"
|   | |-TextComment 0x55887c3b3b90 <line:4265:1, col:66> Text="  OR with value specified by OrData. All other bits in Operand are"
|   | `-TextComment 0x55887c3b3bb0 <line:4266:1, col:46> Text="  preserved. The new 64-bit value is returned."
|   |-ParagraphComment 0x55887c3b3d00 <line:4268:1, line:4273:99>
|   | |-TextComment 0x55887c3b3c10 <line:4268:1, col:56> Text="  If 64-bit operations are not supported, then ASSERT()."
|   | |-TextComment 0x55887c3b3c30 <line:4269:1, col:48> Text="  If StartBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3b3c50 <line:4270:1, col:46> Text="  If EndBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3b3c70 <line:4271:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | |-TextComment 0x55887c3b3c90 <line:4272:1, col:100> Text="  If AndData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   | `-TextComment 0x55887c3b3cb0 <line:4273:1, col:99> Text="  If OrData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3b3d50 <line:4275:1, col:2>
|   | `-TextComment 0x55887c3b3d20 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b3d70 <col:3, line:4276:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b3e20 <line:4275:18, line:4276:2>
|   |   |-TextComment 0x55887c3b3dd0 <line:4275:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3b3df0 <line:4276:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b3e40 <col:3, line:4278:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b3f20 <line:4276:19, line:4278:2>
|   |   |-TextComment 0x55887c3b3ea0 <line:4276:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3b3ec0 <line:4277:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3b3ee0 <line:4278:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b3f40 <col:3, line:4280:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3b4020 <line:4278:17, line:4280:2>
|   |   |-TextComment 0x55887c3b3fa0 <line:4278:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3b3fc0 <line:4279:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3b3fe0 <line:4280:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b4040 <col:3, line:4281:2> [in] implicitly Param="AndData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3b40f0 <line:4280:18, line:4281:2>
|   |   |-TextComment 0x55887c3b40a0 <line:4280:18, col:72> Text="   The value to AND with the read value from the value."
|   |   `-TextComment 0x55887c3b40c0 <line:4281:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b4110 <col:3, col:73> [in] implicitly Param="OrData" ParamIndex=4
|   | `-ParagraphComment 0x55887c3b41a0 <col:17, col:73>
|   |   `-TextComment 0x55887c3b4170 <col:17, col:73> Text="    The value to OR with the result of the AND operation."
|   |-ParagraphComment 0x55887c3b41f0 <line:4283:1, col:2>
|   | `-TextComment 0x55887c3b41c0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b4210 <col:3, col:31> Name="return"
|     `-ParagraphComment 0x55887c3b4270 <col:10, col:31>
|       `-TextComment 0x55887c3b4240 <col:10, col:31> Text=" The new 64-bit value."
|-FunctionDecl 0x55887c1365a8 <line:4316:1, line:4322:3> line:4318:1 BitFieldCountOnes32 'UINT8 (UINT32, UINTN, UINTN)'
| |-ParmVarDecl 0x55887c136398 <line:4319:12, col:20> col:20 Operand 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c136410 <line:4320:12, col:20> col:20 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c136488 <line:4321:12, col:20> col:20 EndBit 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3b48f0 <line:4297:1, line:4313:61>
|   |-ParagraphComment 0x55887c3b43b0 <line:4297:1, line:4298:25>
|   | |-TextComment 0x55887c3b4360 <line:4297:1, col:59> Text="  Reads a bit field from a 32-bit value, counts and returns"
|   | `-TextComment 0x55887c3b4380 <line:4298:1, col:25> Text="  the number of set bits."
|   |-ParagraphComment 0x55887c3b4420 <line:4300:1, line:4301:56>
|   | |-TextComment 0x55887c3b43d0 <line:4300:1, col:62> Text="  Counts the number of set bits in the  bit field specified by"
|   | `-TextComment 0x55887c3b43f0 <line:4301:1, col:56> Text="  StartBit and EndBit in Operand. The count is returned."
|   |-ParagraphComment 0x55887c3b44c0 <line:4303:1, line:4305:49>
|   | |-TextComment 0x55887c3b4440 <line:4303:1, col:48> Text="  If StartBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3b4460 <line:4304:1, col:46> Text="  If EndBit is greater than 31, then ASSERT()."
|   | `-TextComment 0x55887c3b4480 <line:4305:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3b4510 <line:4307:1, col:2>
|   | `-TextComment 0x55887c3b44e0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b4530 <col:3, line:4308:2> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b45e0 <line:4307:18, line:4308:2>
|   |   |-TextComment 0x55887c3b4590 <line:4307:18, col:71> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3b45b0 <line:4308:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b4600 <col:3, line:4310:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b46e0 <line:4308:19, line:4310:2>
|   |   |-TextComment 0x55887c3b4660 <line:4308:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3b4680 <line:4309:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3b46a0 <line:4310:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b4700 <col:3, line:4311:32> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3b47b0 <line:4310:17, line:4311:32>
|   |   |-TextComment 0x55887c3b4760 <line:4310:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   `-TextComment 0x55887c3b4780 <line:4311:1, col:32> Text="                    Range 0..31."
|   |-ParagraphComment 0x55887c3b4800 <line:4313:1, col:2>
|   | `-TextComment 0x55887c3b47d0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b4820 <col:3, col:61> Name="return"
|     `-ParagraphComment 0x55887c3b4880 <col:10, col:61>
|       `-TextComment 0x55887c3b4850 <col:10, col:61> Text=" The number of bits set between StartBit and EndBit."
|-FunctionDecl 0x55887c1368a8 <line:4344:1, line:4350:3> line:4346:1 BitFieldCountOnes64 'UINT8 (UINT64, UINTN, UINTN)'
| |-ParmVarDecl 0x55887c136698 <line:4347:12, col:20> col:20 Operand 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c136710 <line:4348:12, col:20> col:20 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c136788 <line:4349:12, col:20> col:20 EndBit 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3b4ef0 <line:4325:1, line:4341:62>
|   |-ParagraphComment 0x55887c3b49b0 <line:4325:1, line:4326:26>
|   | |-TextComment 0x55887c3b4960 <line:4325:1, col:60> Text="   Reads a bit field from a 64-bit value, counts and returns"
|   | `-TextComment 0x55887c3b4980 <line:4326:1, col:26> Text="   the number of set bits."
|   |-ParagraphComment 0x55887c3b4a20 <line:4328:1, line:4329:57>
|   | |-TextComment 0x55887c3b49d0 <line:4328:1, col:63> Text="   Counts the number of set bits in the  bit field specified by"
|   | `-TextComment 0x55887c3b49f0 <line:4329:1, col:57> Text="   StartBit and EndBit in Operand. The count is returned."
|   |-ParagraphComment 0x55887c3b4ac0 <line:4331:1, line:4333:50>
|   | |-TextComment 0x55887c3b4a40 <line:4331:1, col:49> Text="   If StartBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3b4a60 <line:4332:1, col:47> Text="   If EndBit is greater than 63, then ASSERT()."
|   | `-TextComment 0x55887c3b4a80 <line:4333:1, col:50> Text="   If EndBit is less than StartBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3b4b10 <line:4335:1, col:3>
|   | `-TextComment 0x55887c3b4ae0 <col:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3b4b30 <col:4, line:4336:3> [in] implicitly Param="Operand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b4be0 <line:4335:19, line:4336:3>
|   |   |-TextComment 0x55887c3b4b90 <line:4335:19, col:72> Text="   Operand on which to perform the bitfield operation."
|   |   `-TextComment 0x55887c3b4bb0 <line:4336:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3b4c00 <col:4, line:4338:3> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b4ce0 <line:4336:20, line:4338:3>
|   |   |-TextComment 0x55887c3b4c60 <line:4336:20, col:79> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3b4c80 <line:4337:1, col:15> Text="   Range 0..63."
|   |   `-TextComment 0x55887c3b4ca0 <line:4338:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3b4d00 <col:4, line:4339:15> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3b4db0 <line:4338:18, line:4339:15>
|   |   |-TextComment 0x55887c3b4d60 <line:4338:18, col:78> Text="    The ordinal of the most significant bit in the bit field."
|   |   `-TextComment 0x55887c3b4d80 <line:4339:1, col:15> Text="   Range 0..63."
|   |-ParagraphComment 0x55887c3b4e00 <line:4341:1, col:3>
|   | `-TextComment 0x55887c3b4dd0 <col:1, col:3> Text="   "
|   `-BlockCommandComment 0x55887c3b4e20 <col:4, col:62> Name="return"
|     `-ParagraphComment 0x55887c3b4e80 <col:11, col:62>
|       `-TextComment 0x55887c3b4e50 <col:11, col:62> Text=" The number of bits set between StartBit and EndBit."
|-FunctionDecl 0x55887c136b28 <line:4374:1, line:4379:3> line:4376:1 CalculateSum8 'UINT8 (const UINT8 *, UINTN)'
| |-ParmVarDecl 0x55887c136998 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4377:25> col:25 Buffer 'const UINT8 *'
| |-ParmVarDecl 0x55887c136a10 <line:4378:11, col:24> col:24 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3b53e0 <line:4357:1, line:4371:81>
|   |-ParagraphComment 0x55887c3b4fb0 <line:4357:1, line:4358:49>
|   | |-TextComment 0x55887c3b4f60 <line:4357:1, col:63> Text="  Returns the sum of all elements in a buffer in unit of UINT8."
|   | `-TextComment 0x55887c3b4f80 <line:4358:1, col:49> Text="  During calculation, the carry bits are dropped."
|   |-ParagraphComment 0x55887c3b5070 <line:4360:1, line:4363:11>
|   | |-TextComment 0x55887c3b4fd0 <line:4360:1, col:62> Text="  This function calculates the sum of all elements in a buffer"
|   | |-TextComment 0x55887c3b4ff0 <line:4361:1, col:69> Text="  in unit of UINT8. The carry bits in result of addition are dropped."
|   | |-TextComment 0x55887c3b5010 <line:4362:1, col:66> Text="  The result is returned as UINT8. If Length is Zero, then Zero is"
|   | `-TextComment 0x55887c3b5030 <line:4363:1, col:11> Text="  returned."
|   |-ParagraphComment 0x55887c3b50e0 <line:4365:1, line:4366:70>
|   | |-TextComment 0x55887c3b5090 <line:4365:1, col:35> Text="  If Buffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c3b50b0 <line:4366:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c3b5130 <line:4368:1, col:2>
|   | `-TextComment 0x55887c3b5100 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b5150 <col:3, line:4369:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b5200 <line:4368:17, line:4369:2>
|   |   |-TextComment 0x55887c3b51b0 <line:4368:17, col:79> Text="      The pointer to the buffer to carry out the sum operation."
|   |   `-TextComment 0x55887c3b51d0 <line:4369:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b5220 <col:3, col:52> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b52b0 <col:17, col:52>
|   |   `-TextComment 0x55887c3b5280 <col:17, col:52> Text="      The size, in bytes, of Buffer."
|   |-ParagraphComment 0x55887c3b5300 <line:4371:1, col:2>
|   | `-TextComment 0x55887c3b52d0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b5320 <col:3, col:81> Name="return"
|     `-ParagraphComment 0x55887c3b5380 <col:10, col:81>
|       `-TextComment 0x55887c3b5350 <col:10, col:81> Text=" Sum         The sum of Buffer with carry bits dropped during additions."
|-FunctionDecl 0x55887c136d28 <line:4399:1, line:4404:3> line:4401:1 CalculateCheckSum8 'UINT8 (const UINT8 *, UINTN)'
| |-ParmVarDecl 0x55887c136c18 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4402:25> col:25 Buffer 'const UINT8 *'
| |-ParmVarDecl 0x55887c136c90 <line:4403:11, col:24> col:24 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3b58d0 <line:4382:1, line:4396:62>
|   |-ParagraphComment 0x55887c3b54a0 <line:4382:1, line:4383:18>
|   | |-TextComment 0x55887c3b5450 <line:4382:1, col:67> Text="  Returns the two's complement checksum of all elements in a buffer"
|   | `-TextComment 0x55887c3b5470 <line:4383:1, col:18> Text="  of 8-bit values."
|   |-ParagraphComment 0x55887c3b5560 <line:4385:1, line:4388:48>
|   | |-TextComment 0x55887c3b54c0 <line:4385:1, col:67> Text="  This function first calculates the sum of the 8-bit values in the"
|   | |-TextComment 0x55887c3b54e0 <line:4386:1, col:70> Text="  buffer specified by Buffer and Length.  The carry bits in the result"
|   | |-TextComment 0x55887c3b5500 <line:4387:1, col:67> Text="  of addition are dropped. Then, the two's complement of the sum is"
|   | `-TextComment 0x55887c3b5520 <line:4388:1, col:48> Text="  returned.  If Length is 0, then 0 is returned."
|   |-ParagraphComment 0x55887c3b55d0 <line:4390:1, line:4391:70>
|   | |-TextComment 0x55887c3b5580 <line:4390:1, col:35> Text="  If Buffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c3b55a0 <line:4391:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c3b5620 <line:4393:1, col:2>
|   | `-TextComment 0x55887c3b55f0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b5640 <col:3, line:4394:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b56f0 <line:4393:17, line:4394:2>
|   |   |-TextComment 0x55887c3b56a0 <line:4393:17, col:84> Text="      The pointer to the buffer to carry out the checksum operation."
|   |   `-TextComment 0x55887c3b56c0 <line:4394:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b5710 <col:3, col:52> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b57a0 <col:17, col:52>
|   |   `-TextComment 0x55887c3b5770 <col:17, col:52> Text="      The size, in bytes, of Buffer."
|   |-ParagraphComment 0x55887c3b57f0 <line:4396:1, col:2>
|   | `-TextComment 0x55887c3b57c0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b5810 <col:3, col:62> Name="return"
|     `-ParagraphComment 0x55887c3b5870 <col:10, col:62>
|       `-TextComment 0x55887c3b5840 <col:10, col:62> Text=" Checksum    The two's complement checksum of Buffer."
|-FunctionDecl 0x55887c137008 <line:4425:1, line:4430:3> line:4427:1 CalculateSum16 'UINT16 (const UINT16 *, UINTN)'
| |-ParmVarDecl 0x55887c136e80 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4428:26> col:26 Buffer 'const UINT16 *'
| |-ParmVarDecl 0x55887c136ef8 <line:4429:11, col:25> col:25 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3b5df0 <line:4407:1, line:4422:81>
|   |-ParagraphComment 0x55887c3b5990 <line:4407:1, line:4408:42>
|   | |-TextComment 0x55887c3b5940 <line:4407:1, col:71> Text="  Returns the sum of all elements in a buffer of 16-bit values.  During"
|   | `-TextComment 0x55887c3b5960 <line:4408:1, col:42> Text="  calculation, the carry bits are dropped."
|   |-ParagraphComment 0x55887c3b5a30 <line:4410:1, line:4412:69>
|   | |-TextComment 0x55887c3b59b0 <line:4410:1, col:69> Text="  This function calculates the sum of the 16-bit values in the buffer"
|   | |-TextComment 0x55887c3b59d0 <line:4411:1, col:83> Text="  specified by Buffer and Length. The carry bits in result of addition are dropped."
|   | `-TextComment 0x55887c3b59f0 <line:4412:1, col:69> Text="  The 16-bit result is returned.  If Length is 0, then 0 is returned."
|   |-ParagraphComment 0x55887c3b5af0 <line:4414:1, line:4417:70>
|   | |-TextComment 0x55887c3b5a50 <line:4414:1, col:35> Text="  If Buffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3b5a70 <line:4415:1, col:63> Text="  If Buffer is not aligned on a 16-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c3b5a90 <line:4416:1, col:63> Text="  If Length is not aligned on a 16-bit boundary, then ASSERT()."
|   | `-TextComment 0x55887c3b5ab0 <line:4417:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c3b5b40 <line:4419:1, col:2>
|   | `-TextComment 0x55887c3b5b10 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b5b60 <col:3, line:4420:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b5c10 <line:4419:17, line:4420:2>
|   |   |-TextComment 0x55887c3b5bc0 <line:4419:17, col:79> Text="      The pointer to the buffer to carry out the sum operation."
|   |   `-TextComment 0x55887c3b5be0 <line:4420:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b5c30 <col:3, col:52> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b5cc0 <col:17, col:52>
|   |   `-TextComment 0x55887c3b5c90 <col:17, col:52> Text="      The size, in bytes, of Buffer."
|   |-ParagraphComment 0x55887c3b5d10 <line:4422:1, col:2>
|   | `-TextComment 0x55887c3b5ce0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b5d30 <col:3, col:81> Name="return"
|     `-ParagraphComment 0x55887c3b5d90 <col:10, col:81>
|       `-TextComment 0x55887c3b5d60 <col:10, col:81> Text=" Sum         The sum of Buffer with carry bits dropped during additions."
|-FunctionDecl 0x55887c137208 <line:4452:1, line:4457:3> line:4454:1 CalculateCheckSum16 'UINT16 (const UINT16 *, UINTN)'
| |-ParmVarDecl 0x55887c1370f8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4455:26> col:26 Buffer 'const UINT16 *'
| |-ParmVarDecl 0x55887c137170 <line:4456:11, col:25> col:25 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3b6330 <line:4433:1, line:4449:62>
|   |-ParagraphComment 0x55887c3b5eb0 <line:4433:1, line:4434:16>
|   | |-TextComment 0x55887c3b5e60 <line:4433:1, col:70> Text="  Returns the two's complement checksum of all elements in a buffer of"
|   | `-TextComment 0x55887c3b5e80 <line:4434:1, col:16> Text="  16-bit values."
|   |-ParagraphComment 0x55887c3b5f70 <line:4436:1, line:4439:27>
|   | |-TextComment 0x55887c3b5ed0 <line:4436:1, col:75> Text="  This function first calculates the sum of the 16-bit values in the buffer"
|   | |-TextComment 0x55887c3b5ef0 <line:4437:1, col:75> Text="  specified by Buffer and Length.  The carry bits in the result of addition"
|   | |-TextComment 0x55887c3b5f10 <line:4438:1, col:76> Text="  are dropped. Then, the two's complement of the sum is returned.  If Length"
|   | `-TextComment 0x55887c3b5f30 <line:4439:1, col:27> Text="  is 0, then 0 is returned."
|   |-ParagraphComment 0x55887c3b6030 <line:4441:1, line:4444:70>
|   | |-TextComment 0x55887c3b5f90 <line:4441:1, col:35> Text="  If Buffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3b5fb0 <line:4442:1, col:63> Text="  If Buffer is not aligned on a 16-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c3b5fd0 <line:4443:1, col:63> Text="  If Length is not aligned on a 16-bit boundary, then ASSERT()."
|   | `-TextComment 0x55887c3b5ff0 <line:4444:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c3b6080 <line:4446:1, col:2>
|   | `-TextComment 0x55887c3b6050 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b60a0 <col:3, line:4447:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b6150 <line:4446:17, line:4447:2>
|   |   |-TextComment 0x55887c3b6100 <line:4446:17, col:84> Text="      The pointer to the buffer to carry out the checksum operation."
|   |   `-TextComment 0x55887c3b6120 <line:4447:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b6170 <col:3, col:52> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b6200 <col:17, col:52>
|   |   `-TextComment 0x55887c3b61d0 <col:17, col:52> Text="      The size, in bytes, of Buffer."
|   |-ParagraphComment 0x55887c3b6250 <line:4449:1, col:2>
|   | `-TextComment 0x55887c3b6220 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b6270 <col:3, col:62> Name="return"
|     `-ParagraphComment 0x55887c3b62d0 <col:10, col:62>
|       `-TextComment 0x55887c3b62a0 <col:10, col:62> Text=" Checksum    The two's complement checksum of Buffer."
|-FunctionDecl 0x55887c137488 <line:4478:1, line:4483:3> line:4480:1 CalculateSum32 'UINT32 (const UINT32 *, UINTN)'
| |-ParmVarDecl 0x55887c1372f8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4481:26> col:26 Buffer 'const UINT32 *'
| |-ParmVarDecl 0x55887c137370 <line:4482:11, col:25> col:25 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3b6850 <line:4460:1, line:4475:81>
|   |-ParagraphComment 0x55887c3b63f0 <line:4460:1, line:4461:42>
|   | |-TextComment 0x55887c3b63a0 <line:4460:1, col:70> Text="  Returns the sum of all elements in a buffer of 32-bit values. During"
|   | `-TextComment 0x55887c3b63c0 <line:4461:1, col:42> Text="  calculation, the carry bits are dropped."
|   |-ParagraphComment 0x55887c3b6490 <line:4463:1, line:4465:68>
|   | |-TextComment 0x55887c3b6410 <line:4463:1, col:69> Text="  This function calculates the sum of the 32-bit values in the buffer"
|   | |-TextComment 0x55887c3b6430 <line:4464:1, col:83> Text="  specified by Buffer and Length. The carry bits in result of addition are dropped."
|   | `-TextComment 0x55887c3b6450 <line:4465:1, col:68> Text="  The 32-bit result is returned. If Length is 0, then 0 is returned."
|   |-ParagraphComment 0x55887c3b6550 <line:4467:1, line:4470:70>
|   | |-TextComment 0x55887c3b64b0 <line:4467:1, col:35> Text="  If Buffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3b64d0 <line:4468:1, col:63> Text="  If Buffer is not aligned on a 32-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c3b64f0 <line:4469:1, col:63> Text="  If Length is not aligned on a 32-bit boundary, then ASSERT()."
|   | `-TextComment 0x55887c3b6510 <line:4470:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c3b65a0 <line:4472:1, col:2>
|   | `-TextComment 0x55887c3b6570 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b65c0 <col:3, line:4473:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b6670 <line:4472:17, line:4473:2>
|   |   |-TextComment 0x55887c3b6620 <line:4472:17, col:79> Text="      The pointer to the buffer to carry out the sum operation."
|   |   `-TextComment 0x55887c3b6640 <line:4473:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b6690 <col:3, col:52> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b6720 <col:17, col:52>
|   |   `-TextComment 0x55887c3b66f0 <col:17, col:52> Text="      The size, in bytes, of Buffer."
|   |-ParagraphComment 0x55887c3b6770 <line:4475:1, col:2>
|   | `-TextComment 0x55887c3b6740 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b6790 <col:3, col:81> Name="return"
|     `-ParagraphComment 0x55887c3b67f0 <col:10, col:81>
|       `-TextComment 0x55887c3b67c0 <col:10, col:81> Text=" Sum         The sum of Buffer with carry bits dropped during additions."
|-FunctionDecl 0x55887c137688 <line:4505:1, line:4510:3> line:4507:1 CalculateCheckSum32 'UINT32 (const UINT32 *, UINTN)'
| |-ParmVarDecl 0x55887c137578 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4508:26> col:26 Buffer 'const UINT32 *'
| |-ParmVarDecl 0x55887c1375f0 <line:4509:11, col:25> col:25 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3b6d90 <line:4486:1, line:4502:62>
|   |-ParagraphComment 0x55887c3b6910 <line:4486:1, line:4487:16>
|   | |-TextComment 0x55887c3b68c0 <line:4486:1, col:70> Text="  Returns the two's complement checksum of all elements in a buffer of"
|   | `-TextComment 0x55887c3b68e0 <line:4487:1, col:16> Text="  32-bit values."
|   |-ParagraphComment 0x55887c3b69d0 <line:4489:1, line:4492:27>
|   | |-TextComment 0x55887c3b6930 <line:4489:1, col:75> Text="  This function first calculates the sum of the 32-bit values in the buffer"
|   | |-TextComment 0x55887c3b6950 <line:4490:1, col:75> Text="  specified by Buffer and Length.  The carry bits in the result of addition"
|   | |-TextComment 0x55887c3b6970 <line:4491:1, col:76> Text="  are dropped. Then, the two's complement of the sum is returned.  If Length"
|   | `-TextComment 0x55887c3b6990 <line:4492:1, col:27> Text="  is 0, then 0 is returned."
|   |-ParagraphComment 0x55887c3b6a90 <line:4494:1, line:4497:70>
|   | |-TextComment 0x55887c3b69f0 <line:4494:1, col:35> Text="  If Buffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3b6a10 <line:4495:1, col:63> Text="  If Buffer is not aligned on a 32-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c3b6a30 <line:4496:1, col:63> Text="  If Length is not aligned on a 32-bit boundary, then ASSERT()."
|   | `-TextComment 0x55887c3b6a50 <line:4497:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c3b6ae0 <line:4499:1, col:2>
|   | `-TextComment 0x55887c3b6ab0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b6b00 <col:3, line:4500:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b6bb0 <line:4499:17, line:4500:2>
|   |   |-TextComment 0x55887c3b6b60 <line:4499:17, col:84> Text="      The pointer to the buffer to carry out the checksum operation."
|   |   `-TextComment 0x55887c3b6b80 <line:4500:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b6bd0 <col:3, col:52> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b6c60 <col:17, col:52>
|   |   `-TextComment 0x55887c3b6c30 <col:17, col:52> Text="      The size, in bytes, of Buffer."
|   |-ParagraphComment 0x55887c3b6cb0 <line:4502:1, col:2>
|   | `-TextComment 0x55887c3b6c80 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b6cd0 <col:3, col:62> Name="return"
|     `-ParagraphComment 0x55887c3b6d30 <col:10, col:62>
|       `-TextComment 0x55887c3b6d00 <col:10, col:62> Text=" Checksum    The two's complement checksum of Buffer."
|-FunctionDecl 0x55887c137908 <line:4531:1, line:4536:3> line:4533:1 CalculateSum64 'UINT64 (const UINT64 *, UINTN)'
| |-ParmVarDecl 0x55887c137778 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4534:26> col:26 Buffer 'const UINT64 *'
| |-ParmVarDecl 0x55887c1377f0 <line:4535:11, col:25> col:25 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3b72c0 <line:4513:1, line:4528:81>
|   |-ParagraphComment 0x55887c3b6e50 <line:4513:1, line:4514:42>
|   | |-TextComment 0x55887c3b6e00 <line:4513:1, col:71> Text="  Returns the sum of all elements in a buffer of 64-bit values.  During"
|   | `-TextComment 0x55887c3b6e20 <line:4514:1, col:42> Text="  calculation, the carry bits are dropped."
|   |-ParagraphComment 0x55887c3b6ef0 <line:4516:1, line:4518:69>
|   | |-TextComment 0x55887c3b6e70 <line:4516:1, col:69> Text="  This function calculates the sum of the 64-bit values in the buffer"
|   | |-TextComment 0x55887c3b6e90 <line:4517:1, col:83> Text="  specified by Buffer and Length. The carry bits in result of addition are dropped."
|   | `-TextComment 0x55887c3b6eb0 <line:4518:1, col:69> Text="  The 64-bit result is returned.  If Length is 0, then 0 is returned."
|   |-ParagraphComment 0x55887c3b6fb0 <line:4520:1, line:4523:70>
|   | |-TextComment 0x55887c3b6f10 <line:4520:1, col:35> Text="  If Buffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3b6f30 <line:4521:1, col:63> Text="  If Buffer is not aligned on a 64-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c3b6f50 <line:4522:1, col:63> Text="  If Length is not aligned on a 64-bit boundary, then ASSERT()."
|   | `-TextComment 0x55887c3b6f70 <line:4523:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c3b7010 <line:4525:1, col:2>
|   | `-TextComment 0x55887c3b6fd0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b7030 <col:3, line:4526:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b70e0 <line:4525:17, line:4526:2>
|   |   |-TextComment 0x55887c3b7090 <line:4525:17, col:79> Text="      The pointer to the buffer to carry out the sum operation."
|   |   `-TextComment 0x55887c3b70b0 <line:4526:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b7100 <col:3, col:52> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b7190 <col:17, col:52>
|   |   `-TextComment 0x55887c3b7160 <col:17, col:52> Text="      The size, in bytes, of Buffer."
|   |-ParagraphComment 0x55887c3b71e0 <line:4528:1, col:2>
|   | `-TextComment 0x55887c3b71b0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b7200 <col:3, col:81> Name="return"
|     `-ParagraphComment 0x55887c3b7260 <col:10, col:81>
|       `-TextComment 0x55887c3b7230 <col:10, col:81> Text=" Sum         The sum of Buffer with carry bits dropped during additions."
|-FunctionDecl 0x55887c137b08 <line:4558:1, line:4563:3> line:4560:1 CalculateCheckSum64 'UINT64 (const UINT64 *, UINTN)'
| |-ParmVarDecl 0x55887c1379f8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4561:26> col:26 Buffer 'const UINT64 *'
| |-ParmVarDecl 0x55887c137a70 <line:4562:11, col:25> col:25 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3b7800 <line:4539:1, line:4555:62>
|   |-ParagraphComment 0x55887c3b7380 <line:4539:1, line:4540:16>
|   | |-TextComment 0x55887c3b7330 <line:4539:1, col:70> Text="  Returns the two's complement checksum of all elements in a buffer of"
|   | `-TextComment 0x55887c3b7350 <line:4540:1, col:16> Text="  64-bit values."
|   |-ParagraphComment 0x55887c3b7440 <line:4542:1, line:4545:27>
|   | |-TextComment 0x55887c3b73a0 <line:4542:1, col:75> Text="  This function first calculates the sum of the 64-bit values in the buffer"
|   | |-TextComment 0x55887c3b73c0 <line:4543:1, col:75> Text="  specified by Buffer and Length.  The carry bits in the result of addition"
|   | |-TextComment 0x55887c3b73e0 <line:4544:1, col:76> Text="  are dropped. Then, the two's complement of the sum is returned.  If Length"
|   | `-TextComment 0x55887c3b7400 <line:4545:1, col:27> Text="  is 0, then 0 is returned."
|   |-ParagraphComment 0x55887c3b7500 <line:4547:1, line:4550:70>
|   | |-TextComment 0x55887c3b7460 <line:4547:1, col:35> Text="  If Buffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3b7480 <line:4548:1, col:63> Text="  If Buffer is not aligned on a 64-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c3b74a0 <line:4549:1, col:63> Text="  If Length is not aligned on a 64-bit boundary, then ASSERT()."
|   | `-TextComment 0x55887c3b74c0 <line:4550:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c3b7550 <line:4552:1, col:2>
|   | `-TextComment 0x55887c3b7520 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b7570 <col:3, line:4553:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b7620 <line:4552:17, line:4553:2>
|   |   |-TextComment 0x55887c3b75d0 <line:4552:17, col:84> Text="      The pointer to the buffer to carry out the checksum operation."
|   |   `-TextComment 0x55887c3b75f0 <line:4553:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b7640 <col:3, col:52> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b76d0 <col:17, col:52>
|   |   `-TextComment 0x55887c3b76a0 <col:17, col:52> Text="      The size, in bytes, of Buffer."
|   |-ParagraphComment 0x55887c3b7720 <line:4555:1, col:2>
|   | `-TextComment 0x55887c3b76f0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b7740 <col:3, col:62> Name="return"
|     `-ParagraphComment 0x55887c3b77a0 <col:10, col:62>
|       `-TextComment 0x55887c3b7770 <col:10, col:62> Text=" Checksum    The two's complement checksum of Buffer."
|-FunctionDecl 0x55887c137d88 <line:4578:1, line:4583:3> line:4580:1 CalculateCrc32 'UINT32 (void *, UINTN)'
| |-ParmVarDecl 0x55887c137c00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4581:15> col:15 Buffer 'void *'
| |-ParmVarDecl 0x55887c137c78 <line:4582:7, col:14> col:14 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3b7c50 <line:4566:1, line:4575:75>
|   |-ParagraphComment 0x55887c3b78c0 <line:4566:1, line:4567:34>
|   | |-TextComment 0x55887c3b7870 <line:4566:1, col:54> Text="  Computes and returns a 32-bit CRC for a data buffer."
|   | `-TextComment 0x55887c3b7890 <line:4567:1, col:34> Text="  CRC32 value bases on ITU-T V.42."
|   |-ParagraphComment 0x55887c3b7930 <line:4569:1, line:4570:70>
|   | |-TextComment 0x55887c3b78e0 <line:4569:1, col:35> Text="  If Buffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c3b7900 <line:4570:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c3b7980 <line:4572:1, col:2>
|   | `-TextComment 0x55887c3b7950 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b79a0 <col:3, line:4573:2> [in] explicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b7a50 <line:4572:21, line:4573:2>
|   |   |-TextComment 0x55887c3b7a00 <line:4572:21, col:93> Text="       A pointer to the buffer on which the 32-bit CRC is to be computed."
|   |   `-TextComment 0x55887c3b7a20 <line:4573:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b7a70 <col:3, col:66> [in] explicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b7b00 <col:21, col:66>
|   |   `-TextComment 0x55887c3b7ad0 <col:21, col:66> Text="       The number of bytes in the buffer Data."
|   |-ParagraphComment 0x55887c3b7b50 <line:4575:1, col:2>
|   | `-TextComment 0x55887c3b7b20 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b7b70 <col:3, col:75> Name="retval" Arg[0]="Crc32"
|     `-ParagraphComment 0x55887c3b7bf0 <col:16, col:75>
|       `-TextComment 0x55887c3b7bc0 <col:16, col:75> Text="            The 32-bit CRC was computed for the data buffer."
|-FunctionDecl 0x55887c114a18 <line:4594:1, line:4600:3> line:4596:1 CalculateCrc16Ansi 'UINT16 (const void *, UINTN, UINT16)'
| |-ParmVarDecl 0x55887c114800 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4597:20> col:20 Buffer 'const void *'
| |-ParmVarDecl 0x55887c114878 <line:4598:7, col:19> col:19 Length 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1148f0 <line:4599:7, col:19> col:19 InitialValue 'UINT16':'unsigned short'
| `-FullComment 0x55887c3b80d0 <line:4586:1, line:4592:35>
|   |-ParagraphComment 0x55887c3b7cf0 <line:4586:1, col:58>
|   | `-TextComment 0x55887c3b7cc0 <col:1, col:58> Text="   Calculates the CRC16-ANSI checksum of the given buffer."
|   |-ParagraphComment 0x55887c3b7d40 <line:4588:1, col:3>
|   | `-TextComment 0x55887c3b7d10 <col:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3b7d60 <col:4, line:4589:3> [in] explicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b7e10 <line:4588:26, line:4589:3>
|   |   |-TextComment 0x55887c3b7dc0 <line:4588:26, col:55> Text="        Pointer to the buffer."
|   |   `-TextComment 0x55887c3b7de0 <line:4589:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3b7e30 <col:4, line:4590:3> [in] explicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b7ee0 <line:4589:26, line:4590:3>
|   |   |-TextComment 0x55887c3b7e90 <line:4589:26, col:64> Text="        Length of the buffer, in bytes."
|   |   `-TextComment 0x55887c3b7eb0 <line:4590:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3b7f00 <col:4, col:58> [in] explicitly Param="InitialValue" ParamIndex=2
|   | `-ParagraphComment 0x55887c3b7fa0 <col:32, col:58>
|   |   `-TextComment 0x55887c3b7f70 <col:32, col:58> Text="  Initial value of the CRC."
|   |-ParagraphComment 0x55887c3b7ff0 <line:4592:1, col:3>
|   | `-TextComment 0x55887c3b7fc0 <col:1, col:3> Text="   "
|   `-BlockCommandComment 0x55887c3b8010 <col:4, col:35> Name="return"
|     `-ParagraphComment 0x55887c3b8070 <col:11, col:35>
|       `-TextComment 0x55887c3b8040 <col:11, col:35> Text=" The CRC16-ANSI checksum."
|-FunctionDecl 0x55887c114d28 <line:4611:1, line:4617:3> line:4613:1 CalculateCrc32c 'UINT32 (const void *, UINTN, UINT32)'
| |-ParmVarDecl 0x55887c114b10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4614:19> col:19 Buffer 'const void *'
| |-ParmVarDecl 0x55887c114b88 <line:4615:6, col:18> col:18 Length 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c114c00 <line:4616:6, col:18> col:18 InitialValue 'UINT32':'unsigned int'
| `-FullComment 0x55887c3b8550 <line:4603:1, line:4609:31>
|   |-ParagraphComment 0x55887c3b8170 <line:4603:1, col:54>
|   | `-TextComment 0x55887c3b8140 <col:1, col:54> Text="   Calculates the CRC32c checksum of the given buffer."
|   |-ParagraphComment 0x55887c3b81c0 <line:4605:1, col:3>
|   | `-TextComment 0x55887c3b8190 <col:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3b81e0 <col:4, line:4606:3> [in] explicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b8290 <line:4605:26, line:4606:3>
|   |   |-TextComment 0x55887c3b8240 <line:4605:26, col:55> Text="        Pointer to the buffer."
|   |   `-TextComment 0x55887c3b8260 <line:4606:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3b82b0 <col:4, line:4607:3> [in] explicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c3b8360 <line:4606:26, line:4607:3>
|   |   |-TextComment 0x55887c3b8310 <line:4606:26, col:64> Text="        Length of the buffer, in bytes."
|   |   `-TextComment 0x55887c3b8330 <line:4607:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3b8380 <col:4, col:58> [in] explicitly Param="InitialValue" ParamIndex=2
|   | `-ParagraphComment 0x55887c3b8420 <col:32, col:58>
|   |   `-TextComment 0x55887c3b83f0 <col:32, col:58> Text="  Initial value of the CRC."
|   |-ParagraphComment 0x55887c3b8470 <line:4609:1, col:3>
|   | `-TextComment 0x55887c3b8440 <col:1, col:3> Text="   "
|   `-BlockCommandComment 0x55887c3b8490 <col:4, col:31> Name="return"
|     `-ParagraphComment 0x55887c3b84f0 <col:11, col:31>
|       `-TextComment 0x55887c3b84c0 <col:11, col:31> Text=" The CRC32c checksum."
|-TypedefDecl 0x55887c115018 <line:4629:1, line:4634:3> line:4631:10 referenced SWITCH_STACK_ENTRY_POINT 'void (*)(void *, void *)'
| |-PointerType 0x55887c114fb0 'void (*)(void *, void *)'
| | `-ParenType 0x55887c114f50 'void (void *, void *)' sugar
| |   `-FunctionProtoType 0x55887c114f10 'void (void *, void *)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887bfe9730 'void *'
| |     | `-BuiltinType 0x55887bfe9010 'void'
| |     `-PointerType 0x55887bfe9730 'void *'
| |       `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3b8800 <line:4624:1, line:4627:71>
|   |-ParagraphComment 0x55887c3b85f0 <line:4624:1, col:79>
|   | `-TextComment 0x55887c3b85c0 <col:1, col:79> Text="  Function entry point used when a stack switch is requested with SwitchStack()"
|   |-ParagraphComment 0x55887c3b8640 <line:4626:1, col:2>
|   | `-TextComment 0x55887c3b8610 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b8660 <col:3, line:4627:2> [in] implicitly Param="Context1" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b8710 <line:4626:19, line:4627:2>
|   |   |-TextComment 0x55887c3b86c0 <line:4626:19, col:71> Text="        Context1 parameter passed into SwitchStack()."
|   |   `-TextComment 0x55887c3b86e0 <line:4627:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3b8730 <col:3, col:71> [in] implicitly Param="Context2" ParamIndex=1
|     `-ParagraphComment 0x55887c3b87c0 <col:19, col:71>
|       `-TextComment 0x55887c3b8790 <col:19, col:71> Text="        Context2 parameter passed into SwitchStack()."
|-FunctionDecl 0x55887c115158 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4647:3> line:4645:1 MemoryFence 'void (void)'
| `-FullComment 0x55887c3b8940 <line:4637:1, line:4640:46>
|   |-ParagraphComment 0x55887c3b88a0 <line:4637:1, col:46>
|   | `-TextComment 0x55887c3b8870 <col:1, col:46> Text="  Used to serialize load and store operations."
|   `-ParagraphComment 0x55887c3b8910 <line:4639:1, line:4640:46>
|     |-TextComment 0x55887c3b88c0 <line:4639:1, col:79> Text="  All loads and stores that proceed calls to this function are guaranteed to be"
|     `-TextComment 0x55887c3b88e0 <line:4640:1, col:46> Text="  globally visible when this function returns."
|-FunctionDecl 0x55887c1153a8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:171:24, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4675:3> line:4673:1 SetJump 'UINTN (BASE_LIBRARY_JUMP_BUFFER *)'
| |-ParmVarDecl 0x55887c1152b8 <line:4674:11, col:38> col:38 JumpBuffer 'BASE_LIBRARY_JUMP_BUFFER *'
| |-ReturnsTwiceAttr 0x55887c115450 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:171:39>
| `-FullComment 0x55887c3b8e20 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4650:1, line:4667:46>
|   |-ParagraphComment 0x55887c3b8a00 <line:4650:1, line:4651:16>
|   | |-TextComment 0x55887c3b89b0 <line:4650:1, col:78> Text="  Saves the current CPU context that can be restored with a call to LongJump()"
|   | `-TextComment 0x55887c3b89d0 <line:4651:1, col:16> Text="  and returns 0."
|   |-ParagraphComment 0x55887c3b8aa0 <line:4653:1, line:4655:73>
|   | |-TextComment 0x55887c3b8a20 <line:4653:1, col:73> Text="  Saves the current CPU context in the buffer specified by JumpBuffer and"
|   | |-TextComment 0x55887c3b8a40 <line:4654:1, col:75> Text="  returns 0. The initial call to SetJump() must always return 0. Subsequent"
|   | `-TextComment 0x55887c3b8a60 <line:4655:1, col:73> Text="  calls to LongJump() cause a non-zero value to be returned by SetJump()."
|   |-ParagraphComment 0x55887c3b8b10 <line:4657:1, line:4658:92>
|   | |-TextComment 0x55887c3b8ac0 <line:4657:1, col:39> Text="  If JumpBuffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c3b8ae0 <line:4658:1, col:92> Text="  For Itanium processors, if JumpBuffer is not aligned on a 16-byte boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c3b8bd0 <line:4660:1, line:4663:77>
|   | |-TextComment 0x55887c3b8b30 <line:4660:1, col:76> Text="  NOTE: The structure BASE_LIBRARY_JUMP_BUFFER is CPU architecture specific."
|   | |-TextComment 0x55887c3b8b50 <line:4661:1, col:83> Text="  The same structure must never be used for more than one CPU architecture context."
|   | |-TextComment 0x55887c3b8b70 <line:4662:1, col:109> Text="  For example, a BASE_LIBRARY_JUMP_BUFFER allocated by an IA-32 module must never be used from an x64 module."
|   | `-TextComment 0x55887c3b8b90 <line:4663:1, col:77> Text="  SetJump()/LongJump() is not currently supported for the EBC processor type."
|   |-ParagraphComment 0x55887c3b8c20 <line:4665:1, col:2>
|   | `-TextComment 0x55887c3b8bf0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b8c40 <col:3, col:54> [in] implicitly Param="JumpBuffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b8cd0 <col:21, col:54>
|   |   `-TextComment 0x55887c3b8ca0 <col:21, col:54> Text="  A pointer to CPU context buffer."
|   |-ParagraphComment 0x55887c3b8d20 <line:4667:1, col:2>
|   | `-TextComment 0x55887c3b8cf0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b8d40 <col:3, col:46> Name="retval" Arg[0]="0"
|     `-ParagraphComment 0x55887c3b8dc0 <col:12, col:46>
|       `-TextComment 0x55887c3b8d90 <col:12, col:46> Text=" Indicates a return from SetJump()."
|-FunctionDecl 0x55887c115678 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4698:3> line:4695:1 LongJump 'void (BASE_LIBRARY_JUMP_BUFFER *, UINTN)'
| |-ParmVarDecl 0x55887c1154e8 <line:4696:11, col:38> col:38 JumpBuffer 'BASE_LIBRARY_JUMP_BUFFER *'
| |-ParmVarDecl 0x55887c115560 <line:4697:11, col:37> col:37 Value 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3b9240 <line:4678:1, line:4690:52>
|   |-ParagraphComment 0x55887c3b8ec0 <line:4678:1, col:57>
|   | `-TextComment 0x55887c3b8e90 <col:1, col:57> Text="  Restores the CPU context that was saved with SetJump()."
|   |-ParagraphComment 0x55887c3b8f60 <line:4680:1, line:4682:26>
|   | |-TextComment 0x55887c3b8ee0 <line:4680:1, col:72> Text="  Restores the CPU context from the buffer specified by JumpBuffer. This"
|   | |-TextComment 0x55887c3b8f00 <line:4681:1, col:77> Text="  function never returns to the caller. Instead is resumes execution based on"
|   | `-TextComment 0x55887c3b8f20 <line:4682:1, col:26> Text="  the state of JumpBuffer."
|   |-ParagraphComment 0x55887c3b9000 <line:4684:1, line:4686:31>
|   | |-TextComment 0x55887c3b8f80 <line:4684:1, col:39> Text="  If JumpBuffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3b8fa0 <line:4685:1, col:92> Text="  For Itanium processors, if JumpBuffer is not aligned on a 16-byte boundary, then ASSERT()."
|   | `-TextComment 0x55887c3b8fc0 <line:4686:1, col:31> Text="  If Value is 0, then ASSERT()."
|   |-ParagraphComment 0x55887c3b9050 <line:4688:1, col:2>
|   | `-TextComment 0x55887c3b9020 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b9070 <col:3, line:4689:2> [in] implicitly Param="JumpBuffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b9120 <line:4688:21, line:4689:2>
|   |   |-TextComment 0x55887c3b90d0 <line:4688:21, col:54> Text="  A pointer to CPU context buffer."
|   |   `-TextComment 0x55887c3b90f0 <line:4689:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3b9140 <col:3, line:4690:52> [in] implicitly Param="Value" ParamIndex=1
|     `-ParagraphComment 0x55887c3b91f0 <line:4689:16, line:4690:52>
|       |-TextComment 0x55887c3b91a0 <line:4689:16, col:71> Text="       The value to return when the SetJump() context is"
|       `-TextComment 0x55887c3b91c0 <line:4690:1, col:52> Text="                      restored and must be non-zero."
|-FunctionDecl 0x55887c13cea0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4708:3> line:4706:1 EnableInterrupts 'void (void)'
| `-FullComment 0x55887c3b9310 <line:4701:1, col:25>
|   `-ParagraphComment 0x55887c3b92e0 <col:1, col:25>
|     `-TextComment 0x55887c3b92b0 <col:1, col:25> Text="  Enables CPU interrupts."
|-FunctionDecl 0x55887c13d000 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4718:3> line:4716:1 DisableInterrupts 'void (void)'
| `-FullComment 0x55887c3b93e0 <line:4711:1, col:26>
|   `-ParagraphComment 0x55887c3b93b0 <col:1, col:26>
|     `-TextComment 0x55887c3b9380 <col:1, col:26> Text="  Disables CPU interrupts."
|-FunctionDecl 0x55887c13d1b8 <line:4728:1, line:4732:3> line:4730:1 SaveAndDisableInterrupts 'BOOLEAN (void)'
| `-FullComment 0x55887c3b9690 <line:4721:1, line:4725:67>
|   |-ParagraphComment 0x55887c3b94a0 <line:4721:1, line:4722:12>
|   | |-TextComment 0x55887c3b9450 <line:4721:1, col:78> Text="  Disables CPU interrupts and returns the interrupt state prior to the disable"
|   | `-TextComment 0x55887c3b9470 <line:4722:1, col:12> Text="  operation."
|   |-ParagraphComment 0x55887c3b94f0 <line:4724:1, col:2>
|   | `-TextComment 0x55887c3b94c0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3b9510 <col:3, line:4725:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c3b95b0 <line:4724:15, line:4725:2>
|   |   |-TextComment 0x55887c3b9560 <line:4724:15, col:66> Text="  CPU interrupts were enabled on entry to this call."
|   |   `-TextComment 0x55887c3b9580 <line:4725:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b95d0 <col:3, col:67> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c3b9650 <col:16, col:67>
|       `-TextComment 0x55887c3b9620 <col:16, col:67> Text=" CPU interrupts were disabled on entry to this call."
|-FunctionDecl 0x55887c13d320 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4743:3> line:4741:1 EnableDisableInterrupts 'void (void)'
| `-FullComment 0x55887c3b9780 <line:4735:1, line:4736:21>
|   `-ParagraphComment 0x55887c3b9750 <line:4735:1, line:4736:21>
|     |-TextComment 0x55887c3b9700 <line:4735:1, col:72> Text="  Enables CPU interrupts for the smallest window required to capture any"
|     `-TextComment 0x55887c3b9720 <line:4736:1, col:21> Text="  pending interrupts."
|-FunctionDecl 0x55887c13d480 <line:4755:1, line:4759:3> line:4757:1 GetInterruptState 'BOOLEAN (void)'
| `-FullComment 0x55887c3b9a90 <line:4746:1, line:4752:44>
|   |-ParagraphComment 0x55887c3b9820 <line:4746:1, col:44>
|   | `-TextComment 0x55887c3b97f0 <col:1, col:44> Text="  Retrieves the current CPU interrupt state."
|   |-ParagraphComment 0x55887c3b9890 <line:4748:1, line:4749:16>
|   | |-TextComment 0x55887c3b9840 <line:4748:1, col:61> Text="  Returns TRUE if interrupts are currently enabled. Otherwise"
|   | `-TextComment 0x55887c3b9860 <line:4749:1, col:16> Text="  returns FALSE."
|   |-ParagraphComment 0x55887c3b98e0 <line:4751:1, col:2>
|   | `-TextComment 0x55887c3b98b0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3b9900 <col:3, line:4752:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c3b99a0 <line:4751:15, line:4752:2>
|   |   |-TextComment 0x55887c3b9950 <line:4751:15, col:43> Text="  CPU interrupts are enabled."
|   |   `-TextComment 0x55887c3b9970 <line:4752:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b99c0 <col:3, col:44> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c3b9a40 <col:16, col:44>
|       `-TextComment 0x55887c3b9a10 <col:16, col:44> Text=" CPU interrupts are disabled."
|-FunctionDecl 0x55887c13d618 <line:4775:1, line:4779:3> line:4777:1 SetInterruptState 'BOOLEAN (BOOLEAN)'
| |-ParmVarDecl 0x55887c13d558 <line:4778:11, col:20> col:20 InterruptState 'BOOLEAN':'unsigned char'
| `-FullComment 0x55887c3b9e30 <line:4762:1, line:4772:24>
|   |-ParagraphComment 0x55887c3b9b30 <line:4762:1, col:38>
|   | `-TextComment 0x55887c3b9b00 <col:1, col:38> Text="  Set the current CPU interrupt state."
|   |-ParagraphComment 0x55887c3b9bf0 <line:4764:1, line:4767:11>
|   | |-TextComment 0x55887c3b9b50 <line:4764:1, col:64> Text="  Sets the current CPU interrupt state to the state specified by"
|   | |-TextComment 0x55887c3b9b70 <line:4765:1, col:76> Text="  InterruptState. If InterruptState is TRUE, then interrupts are enabled. If"
|   | |-TextComment 0x55887c3b9b90 <line:4766:1, col:74> Text="  InterruptState is FALSE, then interrupts are disabled. InterruptState is"
|   | `-TextComment 0x55887c3b9bb0 <line:4767:1, col:11> Text="  returned."
|   |-ParagraphComment 0x55887c3b9c40 <line:4769:1, col:2>
|   | `-TextComment 0x55887c3b9c10 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3b9c60 <col:3, line:4770:56> [in] implicitly Param="InterruptState" ParamIndex=0
|   | `-ParagraphComment 0x55887c3b9d10 <line:4769:25, line:4770:56>
|   |   |-TextComment 0x55887c3b9cc0 <line:4769:25, col:69> Text="  TRUE if interrupts should enabled. FALSE if"
|   |   `-TextComment 0x55887c3b9ce0 <line:4770:1, col:56> Text="                          interrupts should be disabled."
|   |-ParagraphComment 0x55887c3b9d60 <line:4772:1, col:2>
|   | `-TextComment 0x55887c3b9d30 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3b9d80 <col:3, col:24> Name="return"
|     `-ParagraphComment 0x55887c3b9de0 <col:10, col:24>
|       `-TextComment 0x55887c3b9db0 <col:10, col:24> Text=" InterruptState"
|-FunctionDecl 0x55887c13d780 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4792:3> line:4790:1 CpuPause 'void (void)'
| `-FullComment 0x55887c3b9f70 <line:4782:1, line:4785:69>
|   |-ParagraphComment 0x55887c3b9ed0 <line:4782:1, col:51>
|   | `-TextComment 0x55887c3b9ea0 <col:1, col:51> Text="  Requests CPU to pause for a short period of time."
|   `-ParagraphComment 0x55887c3b9f40 <line:4784:1, line:4785:69>
|     |-TextComment 0x55887c3b9ef0 <line:4784:1, col:72> Text="  Requests CPU to pause for a short period of time. Typically used in MP"
|     `-TextComment 0x55887c3b9f10 <line:4785:1, col:69> Text="  systems to prevent memory starvation while waiting for a spin lock."
|-FunctionDecl 0x55887c13db50 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4831:3> line:4825:1 SwitchStack 'void (SWITCH_STACK_ENTRY_POINT, void *, void *, void *, ...)'
| |-ParmVarDecl 0x55887c13d880 <line:4826:11, col:37> col:37 EntryPoint 'SWITCH_STACK_ENTRY_POINT':'void (*)(void *, void *)'
| |-ParmVarDecl 0x55887c13d900 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4827:38> col:38 Context1 'void *'
| |-ParmVarDecl 0x55887c13d980 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4828:38> col:38 Context2 'void *'
| |-ParmVarDecl 0x55887c13da00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4829:38> col:38 NewStack 'void *'
| `-FullComment 0x55887c3ba790 <line:4795:1, line:4819:79>
|   |-ParagraphComment 0x55887c3ba010 <line:4795:1, col:60>
|   | `-TextComment 0x55887c3b9fe0 <col:1, col:60> Text="  Transfers control to a function starting with a new stack."
|   |-ParagraphComment 0x55887c3ba170 <line:4797:1, line:4804:32>
|   | |-TextComment 0x55887c3ba030 <line:4797:1, col:69> Text="  Transfers control to the function specified by EntryPoint using the"
|   | |-TextComment 0x55887c3ba050 <line:4798:1, col:73> Text="  new stack specified by NewStack and passing in the parameters specified"
|   | |-TextComment 0x55887c3ba070 <line:4799:1, col:71> Text="  by Context1 and Context2.  Context1 and Context2 are optional and may"
|   | |-TextComment 0x55887c3ba090 <line:4800:1, col:69> Text="  be NULL.  The function EntryPoint must never return.  This function"
|   | |-TextComment 0x55887c3ba0b0 <line:4801:1, col:75> Text="  supports a variable number of arguments following the NewStack parameter."
|   | |-TextComment 0x55887c3ba0d0 <line:4802:1, col:78> Text="  These additional arguments are ignored on IA-32, x64, and EBC architectures."
|   | |-TextComment 0x55887c3ba0f0 <line:4803:1, col:82> Text="  Itanium processors expect one additional parameter of type VOID * that specifies"
|   | `-TextComment 0x55887c3ba110 <line:4804:1, col:32> Text="  the new backing store pointer."
|   |-ParagraphComment 0x55887c3ba1e0 <line:4806:1, line:4807:37>
|   | |-TextComment 0x55887c3ba190 <line:4806:1, col:39> Text="  If EntryPoint is NULL, then ASSERT()."
|   | `-TextComment 0x55887c3ba1b0 <line:4807:1, col:37> Text="  If NewStack is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3ba230 <line:4809:1, col:2>
|   | `-TextComment 0x55887c3ba200 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ba250 <col:3, line:4810:2> [in] implicitly Param="EntryPoint" ParamIndex=0
|   | `-ParagraphComment 0x55887c3ba300 <line:4809:21, line:4810:2>
|   |   |-TextComment 0x55887c3ba2b0 <line:4809:21, col:71> Text="  A pointer to function to call with the new stack."
|   |   `-TextComment 0x55887c3ba2d0 <line:4810:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ba320 <col:3, line:4812:2> [in] implicitly Param="Context1" ParamIndex=1
|   | `-ParagraphComment 0x55887c3ba400 <line:4810:19, line:4812:2>
|   |   |-TextComment 0x55887c3ba380 <line:4810:19, col:74> Text="    A pointer to the context to pass into the EntryPoint"
|   |   |-TextComment 0x55887c3ba3a0 <line:4811:1, col:31> Text="                      function."
|   |   `-TextComment 0x55887c3ba3c0 <line:4812:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ba420 <col:3, line:4814:2> [in] implicitly Param="Context2" ParamIndex=2
|   | `-ParagraphComment 0x55887c3ba500 <line:4812:19, line:4814:2>
|   |   |-TextComment 0x55887c3ba480 <line:4812:19, col:74> Text="    A pointer to the context to pass into the EntryPoint"
|   |   |-TextComment 0x55887c3ba4a0 <line:4813:1, col:31> Text="                      function."
|   |   `-TextComment 0x55887c3ba4c0 <line:4814:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ba520 <col:3, line:4816:2> [in] implicitly Param="NewStack" ParamIndex=3
|   | `-ParagraphComment 0x55887c3ba600 <line:4814:19, line:4816:2>
|   |   |-TextComment 0x55887c3ba580 <line:4814:19, col:74> Text="    A pointer to the new stack to use for the EntryPoint"
|   |   |-TextComment 0x55887c3ba5a0 <line:4815:1, col:31> Text="                      function."
|   |   `-TextComment 0x55887c3ba5c0 <line:4816:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3ba620 <col:3, line:4819:79> [in] implicitly Param="..."
|     `-ParagraphComment 0x55887c3ba720 <line:4816:14, line:4819:79>
|       |-TextComment 0x55887c3ba680 <line:4816:14, col:80> Text="         This variable argument list is ignored for IA-32, x64, and"
|       |-TextComment 0x55887c3ba6a0 <line:4817:1, col:79> Text="                      EBC architectures.  For Itanium processors, this variable"
|       |-TextComment 0x55887c3ba6c0 <line:4818:1, col:80> Text="                      argument list is expected to contain a single parameter of"
|       `-TextComment 0x55887c3ba6e0 <line:4819:1, col:79> Text="                      type VOID * that specifies the new backing store pointer."
|-FunctionDecl 0x55887c13dcd0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4844:3> line:4842:1 CpuBreakpoint 'void (void)'
| `-FullComment 0x55887c3ba8d0 <line:4834:1, line:4837:61>
|   |-ParagraphComment 0x55887c3ba830 <line:4834:1, col:36>
|   | `-TextComment 0x55887c3ba800 <col:1, col:36> Text="  Generates a breakpoint on the CPU."
|   `-ParagraphComment 0x55887c3ba8a0 <line:4836:1, line:4837:61>
|     |-TextComment 0x55887c3ba850 <line:4836:1, col:76> Text="  Generates a breakpoint on the CPU. The breakpoint must be implemented such"
|     `-TextComment 0x55887c3ba870 <line:4837:1, col:61> Text="  that code can resume normal execution after the breakpoint."
|-FunctionDecl 0x55887c13deb0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4859:3> line:4857:1 used CpuDeadLoop 'void (void)'
| `-FullComment 0x55887c3baa60 <line:4847:1, line:4852:17>
|   |-ParagraphComment 0x55887c3ba970 <line:4847:1, col:28>
|   | `-TextComment 0x55887c3ba940 <col:1, col:28> Text="  Executes an infinite loop."
|   `-ParagraphComment 0x55887c3baa30 <line:4849:1, line:4852:17>
|     |-TextComment 0x55887c3ba990 <line:4849:1, col:76> Text="  Forces the CPU to execute an infinite loop. A debugger may be used to skip"
|     |-TextComment 0x55887c3ba9b0 <line:4850:1, col:78> Text="  past the loop and the code that follows the loop must execute properly. This"
|     |-TextComment 0x55887c3ba9d0 <line:4851:1, col:77> Text="  implies that the infinite loop must not cause the code that follow it to be"
|     `-TextComment 0x55887c3ba9f0 <line:4852:1, col:17> Text="  optimized away."
|-FunctionDecl 0x55887c13e010 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4872:3> line:4870:1 SpeculationBarrier 'void (void)'
| `-FullComment 0x55887c3baba0 <line:4862:1, line:4865:30>
|   |-ParagraphComment 0x55887c3bab00 <line:4862:1, col:50>
|   | `-TextComment 0x55887c3baad0 <col:1, col:50> Text="  Uses as a barrier to stop speculative execution."
|   `-ParagraphComment 0x55887c3bab70 <line:4864:1, line:4865:30>
|     |-TextComment 0x55887c3bab20 <line:4864:1, col:79> Text="  Ensures that no later instruction will execute speculatively, until all prior"
|     `-TextComment 0x55887c3bab40 <line:4865:1, col:30> Text="  instructions have completed."
|-FunctionDecl 0x55887c13e428 <line:4890:1, line:4898:3> line:4892:1 TdCall 'UINTN (UINT64, UINT64, UINT64, UINT64, void *)'
| |-ParmVarDecl 0x55887c13e0e8 <line:4893:6, col:16> col:16 Leaf 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c13e160 <line:4894:6, col:16> col:16 Arg1 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c13e1d8 <line:4895:6, col:16> col:16 Arg2 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c13e250 <line:4896:6, col:16> col:16 Arg3 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c13e2d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4897:17> col:17 Results 'void *'
| `-FullComment 0x55887c3bb2d0 <line:4877:1, line:4888:55>
|   |-ParagraphComment 0x55887c3bac90 <line:4877:1, line:4879:39>
|   | |-TextComment 0x55887c3bac10 <line:4877:1, col:73> Text="  The TDCALL instruction causes a VM exit to the Intel TDX module.  It is"
|   | |-TextComment 0x55887c3bac30 <line:4878:1, col:72> Text="  used to call guest-side Intel TDX functions, either local or a TD exit"
|   | `-TextComment 0x55887c3bac50 <line:4879:1, col:39> Text="  to the host VMM, as selected by Leaf."
|   |-ParagraphComment 0x55887c3bace0 <line:4881:1, col:2>
|   | `-TextComment 0x55887c3bacb0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3bad00 <col:3, line:4882:2> [in] explicitly Param="Leaf" ParamIndex=0
|   | `-ParagraphComment 0x55887c3badb0 <line:4881:23, line:4882:2>
|   |   |-TextComment 0x55887c3bad60 <line:4881:23, col:63> Text="        Leaf number of TDCALL instruction"
|   |   `-TextComment 0x55887c3bad80 <line:4882:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3badd0 <col:3, line:4883:2> [in] explicitly Param="Arg1" ParamIndex=1
|   | `-ParagraphComment 0x55887c3bae80 <line:4882:23, line:4883:2>
|   |   |-TextComment 0x55887c3bae30 <line:4882:23, col:34> Text="        Arg1"
|   |   `-TextComment 0x55887c3bae50 <line:4883:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3baea0 <col:3, line:4884:2> [in] explicitly Param="Arg2" ParamIndex=2
|   | `-ParagraphComment 0x55887c3baf50 <line:4883:23, line:4884:2>
|   |   |-TextComment 0x55887c3baf00 <line:4883:23, col:34> Text="        Arg2"
|   |   `-TextComment 0x55887c3baf20 <line:4884:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3baf70 <col:3, line:4885:2> [in] explicitly Param="Arg3" ParamIndex=3
|   | `-ParagraphComment 0x55887c3bb030 <line:4884:23, line:4885:2>
|   |   |-TextComment 0x55887c3bafd0 <line:4884:23, col:34> Text="        Arg3"
|   |   `-TextComment 0x55887c3baff0 <line:4885:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3bb050 <col:3, col:63> [in,out] explicitly Param="Results" ParamIndex=4
|   | `-ParagraphComment 0x55887c3bb0f0 <col:26, col:63>
|   |   `-TextComment 0x55887c3bb0c0 <col:26, col:63> Text="  Returned result of the Leaf function"
|   |-ParagraphComment 0x55887c3bb140 <line:4887:1, col:2>
|   | `-TextComment 0x55887c3bb110 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3bb160 <col:3, line:4888:2> Name="return"
|   | `-ParagraphComment 0x55887c3bb1e0 <line:4887:10, line:4888:2>
|   |   |-TextComment 0x55887c3bb190 <line:4887:10, col:43> Text=" 0               A successful call"
|   |   `-TextComment 0x55887c3bb1b0 <line:4888:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3bb200 <col:3, col:55> Name="return"
|     `-ParagraphComment 0x55887c3bb260 <col:10, col:55>
|       `-TextComment 0x55887c3bb230 <col:10, col:55> Text=" Other           See individual leaf functions"
|-FunctionDecl 0x55887c13e8f8 <line:4915:1, line:4924:3> line:4917:1 TdVmCall 'UINTN (UINT64, UINT64, UINT64, UINT64, UINT64, void *)'
| |-ParmVarDecl 0x55887c13e528 <line:4918:6, col:16> col:16 Leaf 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c13e5a0 <line:4919:6, col:16> col:16 Arg1 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c13e618 <line:4920:6, col:16> col:16 Arg2 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c13e690 <line:4921:6, col:16> col:16 Arg3 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c13e708 <line:4922:6, col:16> col:16 Arg4 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c13e788 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:4923:17> col:17 Results 'void *'
| `-FullComment 0x55887c3bbaa0 <line:4901:1, line:4912:54>
|   |-ParagraphComment 0x55887c3bb390 <line:4901:1, line:4902:39>
|   | |-TextComment 0x55887c3bb340 <line:4901:1, col:76> Text="  TDVMALL is a leaf function 0 for TDCALL. It helps invoke services from the"
|   | `-TextComment 0x55887c3bb360 <line:4902:1, col:39> Text="  host VMM to pass/receive information."
|   |-ParagraphComment 0x55887c3bb3e0 <line:4904:1, col:2>
|   | `-TextComment 0x55887c3bb3b0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3bb400 <col:3, line:4905:2> [in] explicitly Param="Leaf" ParamIndex=0
|   | `-ParagraphComment 0x55887c3bb4b0 <line:4904:22, line:4905:2>
|   |   |-TextComment 0x55887c3bb460 <line:4904:22, col:52> Text="        Number of sub-functions"
|   |   `-TextComment 0x55887c3bb480 <line:4905:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3bb4d0 <col:3, line:4906:2> [in] explicitly Param="Arg1" ParamIndex=1
|   | `-ParagraphComment 0x55887c3bb580 <line:4905:22, line:4906:2>
|   |   |-TextComment 0x55887c3bb530 <line:4905:22, col:33> Text="        Arg1"
|   |   `-TextComment 0x55887c3bb550 <line:4906:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3bb5a0 <col:3, line:4907:2> [in] explicitly Param="Arg2" ParamIndex=2
|   | `-ParagraphComment 0x55887c3bb650 <line:4906:22, line:4907:2>
|   |   |-TextComment 0x55887c3bb600 <line:4906:22, col:33> Text="        Arg2"
|   |   `-TextComment 0x55887c3bb620 <line:4907:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3bb670 <col:3, line:4908:2> [in] explicitly Param="Arg3" ParamIndex=3
|   | `-ParagraphComment 0x55887c3bb720 <line:4907:22, line:4908:2>
|   |   |-TextComment 0x55887c3bb6d0 <line:4907:22, col:33> Text="        Arg3"
|   |   `-TextComment 0x55887c3bb6f0 <line:4908:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3bb740 <col:3, line:4909:2> [in] explicitly Param="Arg4" ParamIndex=4
|   | `-ParagraphComment 0x55887c3bb7f0 <line:4908:22, line:4909:2>
|   |   |-TextComment 0x55887c3bb7a0 <line:4908:22, col:33> Text="        Arg4"
|   |   `-TextComment 0x55887c3bb7c0 <line:4909:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3bb810 <col:3, col:64> [in,out] explicitly Param="Results" ParamIndex=5
|   | `-ParagraphComment 0x55887c3bb8b0 <col:25, col:64>
|   |   `-TextComment 0x55887c3bb880 <col:25, col:64> Text="     Returned result of the sub-function"
|   |-ParagraphComment 0x55887c3bb900 <line:4911:1, col:2>
|   | `-TextComment 0x55887c3bb8d0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3bb920 <col:3, line:4912:2> Name="return"
|   | `-ParagraphComment 0x55887c3bb9a0 <line:4911:10, line:4912:2>
|   |   |-TextComment 0x55887c3bb950 <line:4911:10, col:43> Text=" 0               A successful call"
|   |   `-TextComment 0x55887c3bb970 <line:4912:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3bb9c0 <col:3, col:54> Name="return"
|     `-ParagraphComment 0x55887c3bba20 <col:10, col:54>
|       `-TextComment 0x55887c3bb9f0 <col:10, col:54> Text=" Other           See individual sub-functions"
|-FunctionDecl 0x55887c13ea90 <line:4932:1, line:4936:3> line:4934:1 TdIsEnabled 'BOOLEAN (void)'
| `-FullComment 0x55887c3bbcf0 <line:4927:1, line:4930:36>
|   |-ParagraphComment 0x55887c3bbb40 <line:4927:1, col:25>
|   | `-TextComment 0x55887c3bbb10 <col:1, col:25> Text="  Probe if TD is enabled."
|   |-ParagraphComment 0x55887c3bbb90 <line:4929:1, col:2>
|   | `-TextComment 0x55887c3bbb60 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3bbbb0 <col:3, line:4930:2> Name="return"
|   | `-ParagraphComment 0x55887c3bbc30 <line:4929:10, line:4930:2>
|   |   |-TextComment 0x55887c3bbbe0 <line:4929:10, col:32> Text=" TRUE    TD is enabled."
|   |   `-TextComment 0x55887c3bbc00 <line:4930:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3bbc50 <col:3, col:36> Name="return"
|     `-ParagraphComment 0x55887c3bbcb0 <col:10, col:36>
|       `-TextComment 0x55887c3bbc80 <col:10, col:36> Text=" FALSE   TD is not enabled."
|-EnumDecl 0x55887c13eb30 <line:4944:9, line:4947:1> line:4944:9
| |-EnumConstantDecl 0x55887c13ec30 <line:4945:3, col:25> col:3 PvalidatePageSize4K 'int'
| | `-ConstantExpr 0x55887c13ec10 <col:25> 'int'
| |   |-value: Int 0
| |   `-IntegerLiteral 0x55887c13ebf0 <col:25> 'int' 0
| `-EnumConstantDecl 0x55887c13ec80 <line:4946:3> col:3 PvalidatePageSize2MB 'int'
|-TypedefDecl 0x55887c13ed28 <line:4944:1, line:4947:3> col:3 referenced PVALIDATE_PAGE_SIZE 'enum PVALIDATE_PAGE_SIZE':'PVALIDATE_PAGE_SIZE'
| `-ElaboratedType 0x55887c13ecd0 'enum PVALIDATE_PAGE_SIZE' sugar
|   `-EnumType 0x55887c13ebd0 'PVALIDATE_PAGE_SIZE'
|     `-Enum 0x55887c13eb30 ''
|-FunctionDecl 0x55887c13f088 <line:4981:1, line:4987:3> line:4983:1 AsmPvalidate 'UINT32 (PVALIDATE_PAGE_SIZE, BOOLEAN, PHYSICAL_ADDRESS)'
| |-ParmVarDecl 0x55887c13edf0 <line:4984:8, col:29> col:29 PageSize 'PVALIDATE_PAGE_SIZE':'PVALIDATE_PAGE_SIZE'
| |-ParmVarDecl 0x55887c13eec0 <line:4985:8, col:29> col:29 Validate 'BOOLEAN':'unsigned char'
| |-ParmVarDecl 0x55887c13ef60 <line:4986:8, col:29> col:29 Address 'PHYSICAL_ADDRESS':'unsigned long long'
| `-FullComment 0x55887c3bc490 <line:4962:1, line:4979:50>
|   |-ParagraphComment 0x55887c3bbdb0 <line:4962:1, line:4963:18>
|   | |-TextComment 0x55887c3bbd60 <line:4962:1, col:81> Text=" Execute a PVALIDATE instruction to validate or to rescinds validation of a guest"
|   | `-TextComment 0x55887c3bbd80 <line:4963:1, col:18> Text=" page's RMP entry."
|   |-ParagraphComment 0x55887c3bbe00 <line:4965:1, col:69>
|   | `-TextComment 0x55887c3bbdd0 <col:1, col:69> Text=" The instruction is available only when CPUID Fn8000_001F_EAX[SNP]=1."
|   |-ParagraphComment 0x55887c3bbe50 <line:4967:1, col:34>
|   | `-TextComment 0x55887c3bbe20 <col:1, col:34> Text=" The function is available on X64."
|   |-ParagraphComment 0x55887c3bbea0 <line:4969:1>
|   | `-TextComment 0x55887c3bbe70 <col:1> Text=" "
|   |-ParamCommandComment 0x55887c3bbec0 <col:2, line:4970:1> [in] explicitly Param="PageSize" ParamIndex=0
|   | `-ParagraphComment 0x55887c3bbf70 <line:4969:24, line:4970:1>
|   |   |-TextComment 0x55887c3bbf20 <line:4969:24, col:53> Text="         The page size to use."
|   |   `-TextComment 0x55887c3bbf40 <line:4970:1> Text=" "
|   |-ParamCommandComment 0x55887c3bbf90 <col:2, line:4972:1> [in] explicitly Param="Validate" ParamIndex=1
|   | `-ParagraphComment 0x55887c3bc070 <line:4970:24, line:4972:1>
|   |   |-TextComment 0x55887c3bbff0 <line:4970:24, col:75> Text="         If TRUE, validate the guest virtual address"
|   |   |-TextComment 0x55887c3bc010 <line:4971:1, col:79> Text="                                otherwise invalidate the guest virtual address."
|   |   `-TextComment 0x55887c3bc030 <line:4972:1> Text=" "
|   |-ParamCommandComment 0x55887c3bc090 <col:2, col:58> [in] explicitly Param="Address" ParamIndex=2
|   | `-ParagraphComment 0x55887c3bc120 <col:23, col:58>
|   |   `-TextComment 0x55887c3bc0f0 <col:23, col:58> Text="          The guest virtual address."
|   |-ParagraphComment 0x55887c3bc170 <line:4974:1>
|   | `-TextComment 0x55887c3bc140 <col:1> Text=" "
|   |-BlockCommandComment 0x55887c3bc190 <col:2, line:4976:1> Name="retval" Arg[0]="PVALIDATE_RET_SUCCESS"
|   | `-ParagraphComment 0x55887c3bc270 <line:4974:31, line:4976:1>
|   |   |-TextComment 0x55887c3bc1f0 <line:4974:31, col:78> Text="        The PVALIDATE instruction succeeded, and"
|   |   |-TextComment 0x55887c3bc210 <line:4975:1, col:60> Text="                                      updated the RMP entry."
|   |   `-TextComment 0x55887c3bc230 <line:4976:1> Text=" "
|   |-BlockCommandComment 0x55887c3bc290 <col:2, line:4978:1> Name="retval" Arg[0]="PVALIDATE_RET_NO_RMPUPDATE"
|   | `-ParagraphComment 0x55887c3bc370 <line:4976:36, line:4978:1>
|   |   |-TextComment 0x55887c3bc2f0 <line:4976:36, col:78> Text="   The PVALIDATE instruction succeeded, but"
|   |   |-TextComment 0x55887c3bc310 <line:4977:1, col:67> Text="                                      did not update the RMP entry."
|   |   `-TextComment 0x55887c3bc330 <line:4978:1> Text=" "
|   `-BlockCommandComment 0x55887c3bc390 <col:2, line:4979:50> Name="return"
|     `-ParagraphComment 0x55887c3bc410 <line:4978:9, line:4979:50>
|       |-TextComment 0x55887c3bc3c0 <line:4978:9, col:69> Text="                              Failure code from the PVALIDATE"
|       `-TextComment 0x55887c3bc3e0 <line:4979:1, col:50> Text="                                      instruction."
|-FunctionDecl 0x55887c13f388 <line:5016:1, line:5022:3> line:5018:1 AsmRmpAdjust 'UINT32 (UINT64, UINT64, UINT64)'
| |-ParmVarDecl 0x55887c13f178 <line:5019:11, col:19> col:19 Rax 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c13f1f0 <line:5020:11, col:19> col:19 Rcx 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c13f268 <line:5021:11, col:19> col:19 Rdx 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3bca50 <line:5000:1, line:5014:17>
|   |-ParagraphComment 0x55887c3bc530 <line:5000:1, col:51>
|   | `-TextComment 0x55887c3bc500 <col:1, col:51> Text="  Adjusts the permissions of an SEV-SNP guest page."
|   |-ParagraphComment 0x55887c3bc5a0 <line:5002:1, line:5003:68>
|   | |-TextComment 0x55887c3bc550 <line:5002:1, col:76> Text="  Executes a RMPADJUST instruction with the register state specified by Rax,"
|   | `-TextComment 0x55887c3bc570 <line:5003:1, col:68> Text="  Rcx, and Rdx. Returns Eax. This function is only available on X64."
|   |-ParagraphComment 0x55887c3bc5f0 <line:5005:1, col:70>
|   | `-TextComment 0x55887c3bc5c0 <col:1, col:70> Text="  The instruction is available only when CPUID Fn8000_001F_EAX[SNP]=1."
|   |-ParagraphComment 0x55887c3bc640 <line:5007:1, col:2>
|   | `-TextComment 0x55887c3bc610 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3bc660 <col:3, line:5009:2> [in] explicitly Param="Rax" ParamIndex=0
|   | `-ParagraphComment 0x55887c3bc740 <line:5007:18, line:5009:2>
|   |   |-TextComment 0x55887c3bc6c0 <line:5007:18, col:77> Text="   The value to load into RAX before executing the RMPADJUST"
|   |   |-TextComment 0x55887c3bc6e0 <line:5008:1, col:32> Text="                    instruction."
|   |   `-TextComment 0x55887c3bc700 <line:5009:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3bc760 <col:3, line:5011:2> [in] explicitly Param="Rcx" ParamIndex=1
|   | `-ParagraphComment 0x55887c3bc840 <line:5009:18, line:5011:2>
|   |   |-TextComment 0x55887c3bc7c0 <line:5009:18, col:77> Text="   The value to load into RCX before executing the RMPADJUST"
|   |   |-TextComment 0x55887c3bc7e0 <line:5010:1, col:32> Text="                    instruction."
|   |   `-TextComment 0x55887c3bc800 <line:5011:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3bc860 <col:3, line:5012:32> [in] explicitly Param="Rdx" ParamIndex=2
|   | `-ParagraphComment 0x55887c3bc910 <line:5011:18, line:5012:32>
|   |   |-TextComment 0x55887c3bc8c0 <line:5011:18, col:77> Text="   The value to load into RDX before executing the RMPADJUST"
|   |   `-TextComment 0x55887c3bc8e0 <line:5012:1, col:32> Text="                    instruction."
|   |-ParagraphComment 0x55887c3bc960 <line:5014:1, col:2>
|   | `-TextComment 0x55887c3bc930 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3bc980 <col:3, col:17> Name="return"
|     `-ParagraphComment 0x55887c3bc9e0 <col:10, col:17>
|       `-TextComment 0x55887c3bc9b0 <col:10, col:17> Text="     Eax"
|-RecordDecl 0x55887c13f468 <line:5031:9, line:5050:1> line:5031:9 union definition
| |-FullComment 0x55887c3bcb40 <line:5028:4, line:5029:54>
| | `-ParagraphComment 0x55887c3bcb10 <line:5028:4, line:5029:54>
| |   |-TextComment 0x55887c3bcac0 <line:5028:4, col:36> Text=" IA32 and x64 Specific Functions."
| |   `-TextComment 0x55887c3bcae0 <line:5029:4, col:54> Text=" Byte packed structure for 16-bit Real Mode EFLAGS."
| |-RecordDecl 0x55887c13f510 <line:5032:3, line:5048:3> line:5032:3 struct definition
| | |-FieldDecl 0x55887c13f600 <line:5033:5, col:28> col:15 CF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c13f5e0 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c13f5b0 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bcc10 <col:35, col:46>
| | |   `-ParagraphComment 0x55887c3bcbe0 <col:35, col:46>
| | |     `-TextComment 0x55887c3bcbb0 <col:35, col:46> Text=" Carry Flag."
| | |-FieldDecl 0x55887c13f6c8 <line:5034:5, col:28> col:15 Reserved_0 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c13f6a8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c13f678 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bcce0 <col:35, col:44>
| | |   `-ParagraphComment 0x55887c3bccb0 <col:35, col:44>
| | |     `-TextComment 0x55887c3bcc80 <col:35, col:44> Text=" Reserved."
| | |-FieldDecl 0x55887c13f798 <line:5035:5, col:28> col:15 PF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c13f778 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c13f748 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bcdb0 <col:35, col:47>
| | |   `-ParagraphComment 0x55887c3bcd80 <col:35, col:47>
| | |     `-TextComment 0x55887c3bcd50 <col:35, col:47> Text=" Parity Flag."
| | |-FieldDecl 0x55887c13f868 <line:5036:5, col:28> col:15 Reserved_1 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c13f848 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c13f818 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bce80 <col:35, col:44>
| | |   `-ParagraphComment 0x55887c3bce50 <col:35, col:44>
| | |     `-TextComment 0x55887c3bce20 <col:35, col:44> Text=" Reserved."
| | |-FieldDecl 0x55887c13f938 <line:5037:5, col:28> col:15 AF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c13f918 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c13f8e8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bcf50 <col:35, col:56>
| | |   `-ParagraphComment 0x55887c3bcf20 <col:35, col:56>
| | |     `-TextComment 0x55887c3bcef0 <col:35, col:56> Text=" Auxiliary Carry Flag."
| | |-FieldDecl 0x55887c13fa08 <line:5038:5, col:28> col:15 Reserved_2 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c13f9e8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c13f9b8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bd020 <col:35, col:44>
| | |   `-ParagraphComment 0x55887c3bcff0 <col:35, col:44>
| | |     `-TextComment 0x55887c3bcfc0 <col:35, col:44> Text=" Reserved."
| | |-FieldDecl 0x55887c13fad8 <line:5039:5, col:28> col:15 ZF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c13fab8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c13fa88 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bd0f0 <col:35, col:45>
| | |   `-ParagraphComment 0x55887c3bd0c0 <col:35, col:45>
| | |     `-TextComment 0x55887c3bd090 <col:35, col:45> Text=" Zero Flag."
| | |-FieldDecl 0x55887c13fba8 <line:5040:5, col:28> col:15 SF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c13fb88 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c13fb58 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bd1c0 <col:35, col:45>
| | |   `-ParagraphComment 0x55887c3bd190 <col:35, col:45>
| | |     `-TextComment 0x55887c3bd160 <col:35, col:45> Text=" Sign Flag."
| | |-FieldDecl 0x55887c13fc78 <line:5041:5, col:28> col:15 TF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c13fc58 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c13fc28 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bd290 <col:35, col:45>
| | |   `-ParagraphComment 0x55887c3bd260 <col:35, col:45>
| | |     `-TextComment 0x55887c3bd230 <col:35, col:45> Text=" Trap Flag."
| | |-FieldDecl 0x55887c13fd48 <line:5042:5, col:28> col:15 IF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c13fd28 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c13fcf8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bd360 <col:35, col:57>
| | |   `-ParagraphComment 0x55887c3bd330 <col:35, col:57>
| | |     `-TextComment 0x55887c3bd300 <col:35, col:57> Text=" Interrupt Enable Flag."
| | |-FieldDecl 0x55887c13fe18 <line:5043:5, col:28> col:15 DF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c13fdf8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c13fdc8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bd430 <col:35, col:50>
| | |   `-ParagraphComment 0x55887c3bd400 <col:35, col:50>
| | |     `-TextComment 0x55887c3bd3d0 <col:35, col:50> Text=" Direction Flag."
| | |-FieldDecl 0x55887c13ff00 <line:5044:5, col:28> col:15 OF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c13fee0 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c13fe98 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bd500 <col:35, col:49>
| | |   `-ParagraphComment 0x55887c3bd4d0 <col:35, col:49>
| | |     `-TextComment 0x55887c3bd4a0 <col:35, col:49> Text=" Overflow Flag."
| | |-FieldDecl 0x55887c13ffc8 <line:5045:5, col:28> col:15 IOPL 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c13ffa8 <col:28> 'int'
| | | | |-value: Int 2
| | | | `-IntegerLiteral 0x55887c13ff78 <col:28> 'int' 2
| | | `-FullComment 0x55887c3bd5d0 <col:35, col:55>
| | |   `-ParagraphComment 0x55887c3bd5a0 <col:35, col:55>
| | |     `-TextComment 0x55887c3bd570 <col:35, col:55> Text=" I/O Privilege Level."
| | |-FieldDecl 0x55887c140098 <line:5046:5, col:28> col:15 NT 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c140078 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c140048 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bd6a0 <col:35, col:47>
| | |   `-ParagraphComment 0x55887c3bd670 <col:35, col:47>
| | |     `-TextComment 0x55887c3bd640 <col:35, col:47> Text=" Nested Task."
| | `-FieldDecl 0x55887c140168 <line:5047:5, col:28> col:15 Reserved_3 'UINT32':'unsigned int'
| |   |-ConstantExpr 0x55887c140148 <col:28> 'int'
| |   | |-value: Int 1
| |   | `-IntegerLiteral 0x55887c140118 <col:28> 'int' 1
| |   `-FullComment 0x55887c3bd770 <col:35, col:44>
| |     `-ParagraphComment 0x55887c3bd740 <col:35, col:44>
| |       `-TextComment 0x55887c3bd710 <col:35, col:44> Text=" Reserved."
| |-FieldDecl 0x55887c140248 <line:5032:3, line:5048:5> col:5 Bits 'struct (unnamed struct at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5032:3)':'struct IA32_FLAGS16::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5032:3)'
| `-FieldDecl 0x55887c1402a8 <line:5049:3, col:13> col:13 Uint16 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c140418 <line:5031:1, line:5050:3> col:3 IA32_FLAGS16 'union IA32_FLAGS16':'IA32_FLAGS16'
| |-ElaboratedType 0x55887c1403c0 'union IA32_FLAGS16' sugar
| | `-RecordType 0x55887c13f4f0 'IA32_FLAGS16'
| |   `-Record 0x55887c13f468 ''
| `-FullComment 0x55887c3bd860 <line:5028:4, line:5029:54>
|   `-ParagraphComment 0x55887c3bd830 <line:5028:4, line:5029:54>
|     |-TextComment 0x55887c3bd7e0 <line:5028:4, col:36> Text=" IA32 and x64 Specific Functions."
|     `-TextComment 0x55887c3bd800 <line:5029:4, col:54> Text=" Byte packed structure for 16-bit Real Mode EFLAGS."
|-RecordDecl 0x55887c1404b0 <line:5057:9, line:5083:1> line:5057:9 union definition
| |-FullComment 0x55887c3bd980 <line:5053:4, line:5055:59>
| | `-ParagraphComment 0x55887c3bd950 <line:5053:4, line:5055:59>
| |   |-TextComment 0x55887c3bd8d0 <line:5053:4, col:44> Text=" Byte packed structure for EFLAGS/RFLAGS."
| |   |-TextComment 0x55887c3bd8f0 <line:5054:4, col:21> Text=" 32-bits on IA-32."
| |   `-TextComment 0x55887c3bd910 <line:5055:4, col:59> Text=" 64-bits on x64.  The upper 32-bits on x64 are reserved."
| |-RecordDecl 0x55887c140550 <line:5058:3, line:5081:3> line:5058:3 struct definition
| | |-FieldDecl 0x55887c140640 <line:5059:5, col:28> col:15 CF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c140620 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c1405f0 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bda50 <col:36, col:47>
| | |   `-ParagraphComment 0x55887c3bda20 <col:36, col:47>
| | |     `-TextComment 0x55887c3bd9f0 <col:36, col:47> Text=" Carry Flag."
| | |-FieldDecl 0x55887c140708 <line:5060:5, col:28> col:15 Reserved_0 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1406e8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c1406b8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bdb20 <col:36, col:45>
| | |   `-ParagraphComment 0x55887c3bdaf0 <col:36, col:45>
| | |     `-TextComment 0x55887c3bdac0 <col:36, col:45> Text=" Reserved."
| | |-FieldDecl 0x55887c1407d8 <line:5061:5, col:28> col:15 PF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1407b8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c140788 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bdbf0 <col:36, col:48>
| | |   `-ParagraphComment 0x55887c3bdbc0 <col:36, col:48>
| | |     `-TextComment 0x55887c3bdb90 <col:36, col:48> Text=" Parity Flag."
| | |-FieldDecl 0x55887c1408a8 <line:5062:5, col:28> col:15 Reserved_1 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c140888 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c140858 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bdcc0 <col:36, col:45>
| | |   `-ParagraphComment 0x55887c3bdc90 <col:36, col:45>
| | |     `-TextComment 0x55887c3bdc60 <col:36, col:45> Text=" Reserved."
| | |-FieldDecl 0x55887c140978 <line:5063:5, col:28> col:15 AF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c140958 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c140928 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bdd90 <col:36, col:57>
| | |   `-ParagraphComment 0x55887c3bdd60 <col:36, col:57>
| | |     `-TextComment 0x55887c3bdd30 <col:36, col:57> Text=" Auxiliary Carry Flag."
| | |-FieldDecl 0x55887c140a48 <line:5064:5, col:28> col:15 Reserved_2 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c140a28 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c1409f8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bde60 <col:36, col:45>
| | |   `-ParagraphComment 0x55887c3bde30 <col:36, col:45>
| | |     `-TextComment 0x55887c3bde00 <col:36, col:45> Text=" Reserved."
| | |-FieldDecl 0x55887c140b18 <line:5065:5, col:28> col:15 ZF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c140af8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c140ac8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bdf30 <col:36, col:46>
| | |   `-ParagraphComment 0x55887c3bdf00 <col:36, col:46>
| | |     `-TextComment 0x55887c3bded0 <col:36, col:46> Text=" Zero Flag."
| | |-FieldDecl 0x55887c140be8 <line:5066:5, col:28> col:15 SF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c140bc8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c140b98 <col:28> 'int' 1
| | | `-FullComment 0x55887c3be000 <col:36, col:46>
| | |   `-ParagraphComment 0x55887c3bdfd0 <col:36, col:46>
| | |     `-TextComment 0x55887c3bdfa0 <col:36, col:46> Text=" Sign Flag."
| | |-FieldDecl 0x55887c140cb8 <line:5067:5, col:28> col:15 TF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c140c98 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c140c68 <col:28> 'int' 1
| | | `-FullComment 0x55887c3be0d0 <col:36, col:46>
| | |   `-ParagraphComment 0x55887c3be0a0 <col:36, col:46>
| | |     `-TextComment 0x55887c3be070 <col:36, col:46> Text=" Trap Flag."
| | |-FieldDecl 0x55887c140d88 <line:5068:5, col:28> col:15 IF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c140d68 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c140d38 <col:28> 'int' 1
| | | `-FullComment 0x55887c3be1a0 <col:36, col:58>
| | |   `-ParagraphComment 0x55887c3be170 <col:36, col:58>
| | |     `-TextComment 0x55887c3be140 <col:36, col:58> Text=" Interrupt Enable Flag."
| | |-FieldDecl 0x55887c140e58 <line:5069:5, col:28> col:15 DF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c140e38 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c140e08 <col:28> 'int' 1
| | | `-FullComment 0x55887c3be270 <col:36, col:51>
| | |   `-ParagraphComment 0x55887c3be240 <col:36, col:51>
| | |     `-TextComment 0x55887c3be210 <col:36, col:51> Text=" Direction Flag."
| | |-FieldDecl 0x55887c140f58 <line:5070:5, col:28> col:15 OF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c140f38 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c140f08 <col:28> 'int' 1
| | | `-FullComment 0x55887c3be340 <col:36, col:50>
| | |   `-ParagraphComment 0x55887c3be310 <col:36, col:50>
| | |     `-TextComment 0x55887c3be2e0 <col:36, col:50> Text=" Overflow Flag."
| | |-FieldDecl 0x55887c141028 <line:5071:5, col:28> col:15 IOPL 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c141008 <col:28> 'int'
| | | | |-value: Int 2
| | | | `-IntegerLiteral 0x55887c140fd8 <col:28> 'int' 2
| | | `-FullComment 0x55887c3be410 <col:36, col:56>
| | |   `-ParagraphComment 0x55887c3be3e0 <col:36, col:56>
| | |     `-TextComment 0x55887c3be3b0 <col:36, col:56> Text=" I/O Privilege Level."
| | |-FieldDecl 0x55887c1410f8 <line:5072:5, col:28> col:15 NT 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1410d8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c1410a8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3be4e0 <col:36, col:48>
| | |   `-ParagraphComment 0x55887c3be4b0 <col:36, col:48>
| | |     `-TextComment 0x55887c3be480 <col:36, col:48> Text=" Nested Task."
| | |-FieldDecl 0x55887c1411c8 <line:5073:5, col:28> col:15 Reserved_3 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1411a8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c141178 <col:28> 'int' 1
| | | `-FullComment 0x55887c3be5b0 <col:36, col:45>
| | |   `-ParagraphComment 0x55887c3be580 <col:36, col:45>
| | |     `-TextComment 0x55887c3be550 <col:36, col:45> Text=" Reserved."
| | |-FieldDecl 0x55887c141298 <line:5074:5, col:28> col:15 RF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c141278 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c141248 <col:28> 'int' 1
| | | `-FullComment 0x55887c3be680 <col:36, col:48>
| | |   `-ParagraphComment 0x55887c3be650 <col:36, col:48>
| | |     `-TextComment 0x55887c3be620 <col:36, col:48> Text=" Resume Flag."
| | |-FieldDecl 0x55887c141368 <line:5075:5, col:28> col:15 VM 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c141348 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c141318 <col:28> 'int' 1
| | | `-FullComment 0x55887c3be750 <col:36, col:54>
| | |   `-ParagraphComment 0x55887c3be720 <col:36, col:54>
| | |     `-TextComment 0x55887c3be6f0 <col:36, col:54> Text=" Virtual 8086 Mode."
| | |-FieldDecl 0x55887c141438 <line:5076:5, col:28> col:15 AC 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c141418 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c1413e8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3be820 <col:36, col:52>
| | |   `-ParagraphComment 0x55887c3be7f0 <col:36, col:52>
| | |     `-TextComment 0x55887c3be7c0 <col:36, col:52> Text=" Alignment Check."
| | |-FieldDecl 0x55887c141508 <line:5077:5, col:28> col:15 VIF 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1414e8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c1414b8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3be8f0 <col:36, col:59>
| | |   `-ParagraphComment 0x55887c3be8c0 <col:36, col:59>
| | |     `-TextComment 0x55887c3be890 <col:36, col:59> Text=" Virtual Interrupt Flag."
| | |-FieldDecl 0x55887c1415d8 <line:5078:5, col:28> col:15 VIP 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1415b8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c141588 <col:28> 'int' 1
| | | `-FullComment 0x55887c3be9c0 <col:36, col:62>
| | |   `-ParagraphComment 0x55887c3be990 <col:36, col:62>
| | |     `-TextComment 0x55887c3be960 <col:36, col:62> Text=" Virtual Interrupt Pending."
| | |-FieldDecl 0x55887c1416a8 <line:5079:5, col:28> col:15 ID 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c141688 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c141658 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bea90 <col:36, col:44>
| | |   `-ParagraphComment 0x55887c3bea60 <col:36, col:44>
| | |     `-TextComment 0x55887c3bea30 <col:36, col:44> Text=" ID Flag."
| | `-FieldDecl 0x55887c141778 <line:5080:5, col:28> col:15 Reserved_4 'UINT32':'unsigned int'
| |   |-ConstantExpr 0x55887c141758 <col:28> 'int'
| |   | |-value: Int 10
| |   | `-IntegerLiteral 0x55887c141728 <col:28> 'int' 10
| |   `-FullComment 0x55887c3beb60 <col:36, col:45>
| |     `-ParagraphComment 0x55887c3beb30 <col:36, col:45>
| |       `-TextComment 0x55887c3beb00 <col:36, col:45> Text=" Reserved."
| |-FieldDecl 0x55887c141858 <line:5058:3, line:5081:5> col:5 Bits 'struct (unnamed struct at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5058:3)':'struct IA32_EFLAGS32::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5058:3)'
| `-FieldDecl 0x55887c1418b8 <line:5082:3, col:12> col:12 UintN 'UINTN':'unsigned long long'
|-TypedefDecl 0x55887c141a68 <line:5057:1, line:5083:3> col:3 referenced IA32_EFLAGS32 'union IA32_EFLAGS32':'IA32_EFLAGS32'
| |-ElaboratedType 0x55887c141a10 'union IA32_EFLAGS32' sugar
| | `-RecordType 0x55887c140530 'IA32_EFLAGS32'
| |   `-Record 0x55887c1404b0 ''
| `-FullComment 0x55887c3bec80 <line:5053:4, line:5055:59>
|   `-ParagraphComment 0x55887c3bec50 <line:5053:4, line:5055:59>
|     |-TextComment 0x55887c3bebd0 <line:5053:4, col:44> Text=" Byte packed structure for EFLAGS/RFLAGS."
|     |-TextComment 0x55887c3bebf0 <line:5054:4, col:21> Text=" 32-bits on IA-32."
|     `-TextComment 0x55887c3bec10 <line:5055:4, col:59> Text=" 64-bits on x64.  The upper 32-bits on x64 are reserved."
|-RecordDecl 0x55887c141b00 <line:5090:9, line:5108:1> line:5090:9 union definition
| |-FullComment 0x55887c3beda0 <line:5086:4, line:5088:59>
| | `-ParagraphComment 0x55887c3bed70 <line:5086:4, line:5088:59>
| |   |-TextComment 0x55887c3becf0 <line:5086:4, col:55> Text=" Byte packed structure for Control Register 0 (CR0)."
| |   |-TextComment 0x55887c3bed10 <line:5087:4, col:21> Text=" 32-bits on IA-32."
| |   `-TextComment 0x55887c3bed30 <line:5088:4, col:59> Text=" 64-bits on x64.  The upper 32-bits on x64 are reserved."
| |-RecordDecl 0x55887c141ba0 <line:5091:3, line:5106:3> line:5091:3 struct definition
| | |-FieldDecl 0x55887c141c90 <line:5092:5, col:28> col:15 PE 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c141c70 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c141c40 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bee70 <col:36, col:54>
| | |   `-ParagraphComment 0x55887c3bee40 <col:36, col:54>
| | |     `-TextComment 0x55887c3bee10 <col:36, col:54> Text=" Protection Enable."
| | |-FieldDecl 0x55887c141d58 <line:5093:5, col:28> col:15 MP 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c141d38 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c141d08 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bef40 <col:36, col:56>
| | |   `-ParagraphComment 0x55887c3bef10 <col:36, col:56>
| | |     `-TextComment 0x55887c3beee0 <col:36, col:56> Text=" Monitor Coprocessor."
| | |-FieldDecl 0x55887c141e28 <line:5094:5, col:28> col:15 EM 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c141e08 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c141dd8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bf030 <col:36, col:46>
| | |   `-ParagraphComment 0x55887c3befe0 <col:36, col:46>
| | |     `-TextComment 0x55887c3befb0 <col:36, col:46> Text=" Emulation."
| | |-FieldDecl 0x55887c142310 <line:5095:5, col:28> col:15 TS 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1422f0 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c141ea8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bf100 <col:36, col:50>
| | |   `-ParagraphComment 0x55887c3bf0d0 <col:36, col:50>
| | |     `-TextComment 0x55887c3bf0a0 <col:36, col:50> Text=" Task Switched."
| | |-FieldDecl 0x55887c1423d8 <line:5096:5, col:28> col:15 ET 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1423b8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c142388 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bf1d0 <col:36, col:51>
| | |   `-ParagraphComment 0x55887c3bf1a0 <col:36, col:51>
| | |     `-TextComment 0x55887c3bf170 <col:36, col:51> Text=" Extension Type."
| | |-FieldDecl 0x55887c1424a8 <line:5097:5, col:28> col:15 NE 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c142488 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c142458 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bf2a0 <col:36, col:50>
| | |   `-ParagraphComment 0x55887c3bf270 <col:36, col:50>
| | |     `-TextComment 0x55887c3bf240 <col:36, col:50> Text=" Numeric Error."
| | |-FieldDecl 0x55887c142578 <line:5098:5, col:28> col:15 Reserved_0 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c142558 <col:28> 'int'
| | | | |-value: Int 10
| | | | `-IntegerLiteral 0x55887c142528 <col:28> 'int' 10
| | | `-FullComment 0x55887c3bf370 <col:36, col:45>
| | |   `-ParagraphComment 0x55887c3bf340 <col:36, col:45>
| | |     `-TextComment 0x55887c3bf310 <col:36, col:45> Text=" Reserved."
| | |-FieldDecl 0x55887c142648 <line:5099:5, col:28> col:15 WP 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c142628 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c1425f8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bf440 <col:36, col:50>
| | |   `-ParagraphComment 0x55887c3bf410 <col:36, col:50>
| | |     `-TextComment 0x55887c3bf3e0 <col:36, col:50> Text=" Write Protect."
| | |-FieldDecl 0x55887c142718 <line:5100:5, col:28> col:15 Reserved_1 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1426f8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c1426c8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bf510 <col:36, col:45>
| | |   `-ParagraphComment 0x55887c3bf4e0 <col:36, col:45>
| | |     `-TextComment 0x55887c3bf4b0 <col:36, col:45> Text=" Reserved."
| | |-FieldDecl 0x55887c1427e8 <line:5101:5, col:28> col:15 AM 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1427c8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c142798 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bf5e0 <col:36, col:51>
| | |   `-ParagraphComment 0x55887c3bf5b0 <col:36, col:51>
| | |     `-TextComment 0x55887c3bf580 <col:36, col:51> Text=" Alignment Mask."
| | |-FieldDecl 0x55887c1428b8 <line:5102:5, col:28> col:15 Reserved_2 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c142898 <col:28> 'int'
| | | | |-value: Int 10
| | | | `-IntegerLiteral 0x55887c142868 <col:28> 'int' 10
| | | `-FullComment 0x55887c3bf6b0 <col:36, col:45>
| | |   `-ParagraphComment 0x55887c3bf680 <col:36, col:45>
| | |     `-TextComment 0x55887c3bf650 <col:36, col:45> Text=" Reserved."
| | |-FieldDecl 0x55887c142988 <line:5103:5, col:28> col:15 NW 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c142968 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c142938 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bf780 <col:36, col:54>
| | |   `-ParagraphComment 0x55887c3bf750 <col:36, col:54>
| | |     `-TextComment 0x55887c3bf720 <col:36, col:54> Text=" Mot Write-through."
| | |-FieldDecl 0x55887c142a58 <line:5104:5, col:28> col:15 CD 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c142a38 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c142a08 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bf850 <col:36, col:50>
| | |   `-ParagraphComment 0x55887c3bf820 <col:36, col:50>
| | |     `-TextComment 0x55887c3bf7f0 <col:36, col:50> Text=" Cache Disable."
| | `-FieldDecl 0x55887c142b28 <line:5105:5, col:28> col:15 PG 'UINT32':'unsigned int'
| |   |-ConstantExpr 0x55887c142b08 <col:28> 'int'
| |   | |-value: Int 1
| |   | `-IntegerLiteral 0x55887c142ad8 <col:28> 'int' 1
| |   `-FullComment 0x55887c3bf920 <col:36, col:43>
| |     `-ParagraphComment 0x55887c3bf8f0 <col:36, col:43>
| |       `-TextComment 0x55887c3bf8c0 <col:36, col:43> Text=" Paging."
| |-FieldDecl 0x55887c142c08 <line:5091:3, line:5106:5> col:5 Bits 'struct (unnamed struct at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5091:3)':'struct IA32_CR0::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5091:3)'
| `-FieldDecl 0x55887c142c68 <line:5107:3, col:12> col:12 UintN 'UINTN':'unsigned long long'
|-TypedefDecl 0x55887c142dd8 <line:5090:1, line:5108:3> col:3 IA32_CR0 'union IA32_CR0':'IA32_CR0'
| |-ElaboratedType 0x55887c142d80 'union IA32_CR0' sugar
| | `-RecordType 0x55887c141b80 'IA32_CR0'
| |   `-Record 0x55887c141b00 ''
| `-FullComment 0x55887c3bfa40 <line:5086:4, line:5088:59>
|   `-ParagraphComment 0x55887c3bfa10 <line:5086:4, line:5088:59>
|     |-TextComment 0x55887c3bf990 <line:5086:4, col:55> Text=" Byte packed structure for Control Register 0 (CR0)."
|     |-TextComment 0x55887c3bf9b0 <line:5087:4, col:21> Text=" 32-bits on IA-32."
|     `-TextComment 0x55887c3bf9d0 <line:5088:4, col:59> Text=" 64-bits on x64.  The upper 32-bits on x64 are reserved."
|-RecordDecl 0x55887c142e70 <line:5115:9, line:5147:1> line:5115:9 union definition
| |-FullComment 0x55887c3bfb60 <line:5111:4, line:5113:59>
| | `-ParagraphComment 0x55887c3bfb30 <line:5111:4, line:5113:59>
| |   |-TextComment 0x55887c3bfab0 <line:5111:4, col:55> Text=" Byte packed structure for Control Register 4 (CR4)."
| |   |-TextComment 0x55887c3bfad0 <line:5112:4, col:21> Text=" 32-bits on IA-32."
| |   `-TextComment 0x55887c3bfaf0 <line:5113:4, col:59> Text=" 64-bits on x64.  The upper 32-bits on x64 are reserved."
| |-RecordDecl 0x55887c142f10 <line:5116:3, line:5145:3> line:5116:3 struct definition
| | |-FieldDecl 0x55887c143000 <line:5117:5, col:28> col:15 VME 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c142fe0 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c142fb0 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bfc30 <col:35, col:64>
| | |   `-ParagraphComment 0x55887c3bfc00 <col:35, col:64>
| | |     `-TextComment 0x55887c3bfbd0 <col:35, col:64> Text=" Virtual-8086 Mode Extensions."
| | |-FieldDecl 0x55887c1430c8 <line:5118:5, col:28> col:15 PVI 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1430a8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c143078 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bfd00 <col:35, col:69>
| | |   `-ParagraphComment 0x55887c3bfcd0 <col:35, col:69>
| | |     `-TextComment 0x55887c3bfca0 <col:35, col:69> Text=" Protected-Mode Virtual Interrupts."
| | |-FieldDecl 0x55887c143198 <line:5119:5, col:28> col:15 TSD 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c143178 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c143148 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bfdd0 <col:35, col:54>
| | |   `-ParagraphComment 0x55887c3bfda0 <col:35, col:54>
| | |     `-TextComment 0x55887c3bfd70 <col:35, col:54> Text=" Time Stamp Disable."
| | |-FieldDecl 0x55887c143268 <line:5120:5, col:28> col:15 DE 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c143248 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c143218 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bfea0 <col:35, col:56>
| | |   `-ParagraphComment 0x55887c3bfe70 <col:35, col:56>
| | |     `-TextComment 0x55887c3bfe40 <col:35, col:56> Text=" Debugging Extensions."
| | |-FieldDecl 0x55887c144760 <line:5121:5, col:28> col:15 PSE 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c144740 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c144710 <col:28> 'int' 1
| | | `-FullComment 0x55887c3bff70 <col:35, col:56>
| | |   `-ParagraphComment 0x55887c3bff40 <col:35, col:56>
| | |     `-TextComment 0x55887c3bff10 <col:35, col:56> Text=" Page Size Extensions."
| | |-FieldDecl 0x55887c144828 <line:5122:5, col:28> col:15 PAE 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c144808 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c1447d8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c0040 <col:35, col:62>
| | |   `-ParagraphComment 0x55887c3c0010 <col:35, col:62>
| | |     `-TextComment 0x55887c3bffe0 <col:35, col:62> Text=" Physical Address Extension."
| | |-FieldDecl 0x55887c1448f8 <line:5123:5, col:28> col:15 MCE 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1448d8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c1448a8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c0110 <col:35, col:56>
| | |   `-ParagraphComment 0x55887c3c00e0 <col:35, col:56>
| | |     `-TextComment 0x55887c3c00b0 <col:35, col:56> Text=" Machine Check Enable."
| | |-FieldDecl 0x55887c1449c8 <line:5124:5, col:28> col:15 PGE 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1449a8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c144978 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c01e0 <col:35, col:54>
| | |   `-ParagraphComment 0x55887c3c01b0 <col:35, col:54>
| | |     `-TextComment 0x55887c3c0180 <col:35, col:54> Text=" Page Global Enable."
| | |-FieldDecl 0x55887c144a98 <line:5125:5, col:28> col:15 PCE 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c144a78 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c144a48 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c02d0 <col:35, line:5126:42>
| | |   `-ParagraphComment 0x55887c3c02a0 <line:5125:35, line:5126:42>
| | |     |-TextComment 0x55887c3c0250 <line:5125:35, col:65> Text=" Performance Monitoring Counter"
| | |     `-TextComment 0x55887c3c0270 <line:5126:35, col:42> Text=" Enable."
| | |-FieldDecl 0x55887c144b68 <line:5127:5, col:28> col:15 OSFXSR 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c144b48 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c144b18 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c03c0 <col:35, line:5128:66>
| | |   `-ParagraphComment 0x55887c3c0390 <line:5127:35, line:5128:66>
| | |     |-TextComment 0x55887c3c0340 <line:5127:35, col:63> Text=" Operating System Support for"
| | |     `-TextComment 0x55887c3c0360 <line:5128:35, col:66> Text=" FXSAVE and FXRSTOR instructions"
| | |-FieldDecl 0x55887c144c38 <line:5129:5, col:28> col:15 OSXMMEXCPT 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c144c18 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c144be8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c04e0 <col:35, line:5131:46>
| | |   `-ParagraphComment 0x55887c3c04b0 <line:5129:35, line:5131:46>
| | |     |-TextComment 0x55887c3c0430 <line:5129:35, col:63> Text=" Operating System Support for"
| | |     |-TextComment 0x55887c3c0450 <line:5130:35, col:63> Text=" Unmasked SIMD Floating Point"
| | |     `-TextComment 0x55887c3c0470 <line:5131:35, col:46> Text=" Exceptions."
| | |-FieldDecl 0x55887c144d08 <line:5132:5, col:28> col:15 UMIP 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c144ce8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c144cb8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c05b0 <col:35, col:68>
| | |   `-ParagraphComment 0x55887c3c0580 <col:35, col:68>
| | |     `-TextComment 0x55887c3c0550 <col:35, col:68> Text=" User-Mode Instruction Prevention."
| | |-FieldDecl 0x55887c144dd8 <line:5133:5, col:28> col:15 LA57 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c144db8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c144d88 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c0680 <col:35, col:56>
| | |   `-ParagraphComment 0x55887c3c0650 <col:35, col:56>
| | |     `-TextComment 0x55887c3c0620 <col:35, col:56> Text=" Linear Address 57bit."
| | |-FieldDecl 0x55887c144ea8 <line:5134:5, col:28> col:15 VMXE 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c144e88 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c144e58 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c0750 <col:35, col:46>
| | |   `-ParagraphComment 0x55887c3c0720 <col:35, col:46>
| | |     `-TextComment 0x55887c3c06f0 <col:35, col:46> Text=" VMX Enable."
| | |-FieldDecl 0x55887c144f78 <line:5135:5, col:28> col:15 SMXE 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c144f58 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c144f28 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c0820 <col:35, col:46>
| | |   `-ParagraphComment 0x55887c3c07f0 <col:35, col:46>
| | |     `-TextComment 0x55887c3c07c0 <col:35, col:46> Text=" SMX Enable."
| | |-FieldDecl 0x55887c145048 <line:5136:5, col:28> col:15 Reserved_3 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c145028 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c144ff8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c08f0 <col:35, col:44>
| | |   `-ParagraphComment 0x55887c3c08c0 <col:35, col:44>
| | |     `-TextComment 0x55887c3c0890 <col:35, col:44> Text=" Reserved."
| | |-FieldDecl 0x55887c145118 <line:5137:5, col:28> col:15 FSGSBASE 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1450f8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c1450c8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c09c0 <col:35, col:51>
| | |   `-ParagraphComment 0x55887c3c0990 <col:35, col:51>
| | |     `-TextComment 0x55887c3c0960 <col:35, col:51> Text=" FSGSBASE Enable."
| | |-FieldDecl 0x55887c1451e8 <line:5138:5, col:28> col:15 PCIDE 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1451c8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c145198 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c0a90 <col:35, col:47>
| | |   `-ParagraphComment 0x55887c3c0a60 <col:35, col:47>
| | |     `-TextComment 0x55887c3c0a30 <col:35, col:47> Text=" PCID Enable."
| | |-FieldDecl 0x55887c1452b8 <line:5139:5, col:28> col:15 OSXSAVE 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c145298 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c145268 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c0b60 <col:35, col:78>
| | |   `-ParagraphComment 0x55887c3c0b30 <col:35, col:78>
| | |     `-TextComment 0x55887c3c0b00 <col:35, col:78> Text=" XSAVE and Processor Extended States Enable."
| | |-FieldDecl 0x55887c145388 <line:5140:5, col:28> col:15 Reserved_4 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c145368 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c145338 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c0c30 <col:35, col:44>
| | |   `-ParagraphComment 0x55887c3c0c00 <col:35, col:44>
| | |     `-TextComment 0x55887c3c0bd0 <col:35, col:44> Text=" Reserved."
| | |-FieldDecl 0x55887c145458 <line:5141:5, col:28> col:15 SMEP 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c145438 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c145408 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c0d00 <col:35, col:47>
| | |   `-ParagraphComment 0x55887c3c0cd0 <col:35, col:47>
| | |     `-TextComment 0x55887c3c0ca0 <col:35, col:47> Text=" SMEP Enable."
| | |-FieldDecl 0x55887c145528 <line:5142:5, col:28> col:15 SMAP 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c145508 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c1454d8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c0dd0 <col:35, col:47>
| | |   `-ParagraphComment 0x55887c3c0da0 <col:35, col:47>
| | |     `-TextComment 0x55887c3c0d70 <col:35, col:47> Text=" SMAP Enable."
| | |-FieldDecl 0x55887c1455f8 <line:5143:5, col:28> col:15 PKE 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1455d8 <col:28> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c1455a8 <col:28> 'int' 1
| | | `-FullComment 0x55887c3c0ea0 <col:35, col:57>
| | |   `-ParagraphComment 0x55887c3c0e70 <col:35, col:57>
| | |     `-TextComment 0x55887c3c0e40 <col:35, col:57> Text=" Protection-Key Enable."
| | `-FieldDecl 0x55887c145be0 <line:5144:5, col:28> col:15 Reserved_5 'UINT32':'unsigned int'
| |   |-ConstantExpr 0x55887c1456a8 <col:28> 'int'
| |   | |-value: Int 9
| |   | `-IntegerLiteral 0x55887c145678 <col:28> 'int' 9
| |   `-FullComment 0x55887c3c0f70 <col:35, col:44>
| |     `-ParagraphComment 0x55887c3c0f40 <col:35, col:44>
| |       `-TextComment 0x55887c3c0f10 <col:35, col:44> Text=" Reserved."
| |-FieldDecl 0x55887c145cb8 <line:5116:3, line:5145:5> col:5 Bits 'struct (unnamed struct at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5116:3)':'struct IA32_CR4::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5116:3)'
| `-FieldDecl 0x55887c145d18 <line:5146:3, col:12> col:12 UintN 'UINTN':'unsigned long long'
|-TypedefDecl 0x55887c145ed8 <line:5115:1, line:5147:3> col:3 IA32_CR4 'union IA32_CR4':'IA32_CR4'
| |-ElaboratedType 0x55887c145e80 'union IA32_CR4' sugar
| | `-RecordType 0x55887c142ef0 'IA32_CR4'
| |   `-Record 0x55887c142e70 ''
| `-FullComment 0x55887c3c1090 <line:5111:4, line:5113:59>
|   `-ParagraphComment 0x55887c3c1060 <line:5111:4, line:5113:59>
|     |-TextComment 0x55887c3c0fe0 <line:5111:4, col:55> Text=" Byte packed structure for Control Register 4 (CR4)."
|     |-TextComment 0x55887c3c1000 <line:5112:4, col:21> Text=" 32-bits on IA-32."
|     `-TextComment 0x55887c3c1020 <line:5113:4, col:59> Text=" 64-bits on x64.  The upper 32-bits on x64 are reserved."
|-RecordDecl 0x55887c145f70 <line:5152:9, line:5169:1> line:5152:9 union definition
| |-FullComment 0x55887c3c1160 <line:5150:4, col:64>
| | `-ParagraphComment 0x55887c3c1130 <col:4, col:64>
| |   `-TextComment 0x55887c3c1100 <col:4, col:64> Text=" Byte packed structure for a segment descriptor in a GDT/LDT."
| |-RecordDecl 0x55887c146010 <line:5153:3, line:5167:3> line:5153:3 struct definition
| | |-FieldDecl 0x55887c146100 <line:5154:5, col:27> col:15 LimitLow 'UINT32':'unsigned int'
| | | `-ConstantExpr 0x55887c1460e0 <col:27> 'int'
| | |   |-value: Int 16
| | |   `-IntegerLiteral 0x55887c1460b0 <col:27> 'int' 16
| | |-FieldDecl 0x55887c1461a0 <line:5155:5, col:27> col:15 BaseLow 'UINT32':'unsigned int'
| | | `-ConstantExpr 0x55887c146180 <col:27> 'int'
| | |   |-value: Int 16
| | |   `-IntegerLiteral 0x55887c146150 <col:27> 'int' 16
| | |-FieldDecl 0x55887c146240 <line:5156:5, col:27> col:15 BaseMid 'UINT32':'unsigned int'
| | | `-ConstantExpr 0x55887c146220 <col:27> 'int'
| | |   |-value: Int 8
| | |   `-IntegerLiteral 0x55887c1461f0 <col:27> 'int' 8
| | |-FieldDecl 0x55887c1462e0 <line:5157:5, col:27> col:15 Type 'UINT32':'unsigned int'
| | | `-ConstantExpr 0x55887c1462c0 <col:27> 'int'
| | |   |-value: Int 4
| | |   `-IntegerLiteral 0x55887c146290 <col:27> 'int' 4
| | |-FieldDecl 0x55887c146380 <line:5158:5, col:27> col:15 S 'UINT32':'unsigned int'
| | | `-ConstantExpr 0x55887c146360 <col:27> 'int'
| | |   |-value: Int 1
| | |   `-IntegerLiteral 0x55887c146330 <col:27> 'int' 1
| | |-FieldDecl 0x55887c146420 <line:5159:5, col:27> col:15 DPL 'UINT32':'unsigned int'
| | | `-ConstantExpr 0x55887c146400 <col:27> 'int'
| | |   |-value: Int 2
| | |   `-IntegerLiteral 0x55887c1463d0 <col:27> 'int' 2
| | |-FieldDecl 0x55887c1464c0 <line:5160:5, col:27> col:15 P 'UINT32':'unsigned int'
| | | `-ConstantExpr 0x55887c1464a0 <col:27> 'int'
| | |   |-value: Int 1
| | |   `-IntegerLiteral 0x55887c146470 <col:27> 'int' 1
| | |-FieldDecl 0x55887c146560 <line:5161:5, col:27> col:15 LimitHigh 'UINT32':'unsigned int'
| | | `-ConstantExpr 0x55887c146540 <col:27> 'int'
| | |   |-value: Int 4
| | |   `-IntegerLiteral 0x55887c146510 <col:27> 'int' 4
| | |-FieldDecl 0x55887c146600 <line:5162:5, col:27> col:15 AVL 'UINT32':'unsigned int'
| | | `-ConstantExpr 0x55887c1465e0 <col:27> 'int'
| | |   |-value: Int 1
| | |   `-IntegerLiteral 0x55887c1465b0 <col:27> 'int' 1
| | |-FieldDecl 0x55887c1466a0 <line:5163:5, col:27> col:15 L 'UINT32':'unsigned int'
| | | `-ConstantExpr 0x55887c146680 <col:27> 'int'
| | |   |-value: Int 1
| | |   `-IntegerLiteral 0x55887c146650 <col:27> 'int' 1
| | |-FieldDecl 0x55887c146740 <line:5164:5, col:27> col:15 DB 'UINT32':'unsigned int'
| | | `-ConstantExpr 0x55887c146720 <col:27> 'int'
| | |   |-value: Int 1
| | |   `-IntegerLiteral 0x55887c1466f0 <col:27> 'int' 1
| | |-FieldDecl 0x55887c1467e0 <line:5165:5, col:27> col:15 G 'UINT32':'unsigned int'
| | | `-ConstantExpr 0x55887c1467c0 <col:27> 'int'
| | |   |-value: Int 1
| | |   `-IntegerLiteral 0x55887c146790 <col:27> 'int' 1
| | `-FieldDecl 0x55887c146880 <line:5166:5, col:27> col:15 BaseHigh 'UINT32':'unsigned int'
| |   `-ConstantExpr 0x55887c146860 <col:27> 'int'
| |     |-value: Int 8
| |     `-IntegerLiteral 0x55887c146830 <col:27> 'int' 8
| |-FieldDecl 0x55887c146928 <line:5153:3, line:5167:5> col:5 Bits 'struct (unnamed struct at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5153:3)':'struct IA32_SEGMENT_DESCRIPTOR::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5153:3)'
| `-FieldDecl 0x55887c146988 <line:5168:3, col:13> col:13 Uint64 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c146ae8 <line:5152:1, line:5169:3> col:3 IA32_SEGMENT_DESCRIPTOR 'union IA32_SEGMENT_DESCRIPTOR':'IA32_SEGMENT_DESCRIPTOR'
| |-ElaboratedType 0x55887c146a90 'union IA32_SEGMENT_DESCRIPTOR' sugar
| | `-RecordType 0x55887c145ff0 'IA32_SEGMENT_DESCRIPTOR'
| |   `-Record 0x55887c145f70 ''
| `-FullComment 0x55887c3c1230 <line:5150:4, col:64>
|   `-ParagraphComment 0x55887c3c1200 <col:4, col:64>
|     `-TextComment 0x55887c3c11d0 <col:4, col:64> Text=" Byte packed structure for a segment descriptor in a GDT/LDT."
|-RecordDecl 0x55887c146cb0 <line:5175:9, line:5178:1> line:5175:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c146d50 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c146db8 <line:5176:3, col:13> col:13 Limit 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c146e18 <line:5177:3, col:13> col:13 Base 'UINTN':'unsigned long long'
|-TypedefDecl 0x55887c146ec8 <line:5175:1, line:5178:3> col:3 referenced IA32_DESCRIPTOR 'struct IA32_DESCRIPTOR':'IA32_DESCRIPTOR'
| `-ElaboratedType 0x55887c146e70 'struct IA32_DESCRIPTOR' sugar
|   `-RecordType 0x55887c146d30 'IA32_DESCRIPTOR'
|     `-Record 0x55887c146cb0 ''
|-RecordDecl 0x55887c146f68 <line:5275:9, line:5289:1> line:5275:9 union definition
| |-FullComment 0x55887c3c1300 <line:5273:4, col:63>
| | `-ParagraphComment 0x55887c3c12d0 <col:4, col:63>
| |   `-TextComment 0x55887c3c12a0 <col:4, col:63> Text=" Byte packed structure for an x64 Interrupt Gate Descriptor."
| |-RecordDecl 0x55887c147010 <line:5276:3, line:5284:3> line:5276:3 struct definition
| | |-FieldDecl 0x55887c147100 <line:5277:5, col:29> col:15 OffsetLow 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1470e0 <col:29> 'int'
| | | | |-value: Int 16
| | | | `-IntegerLiteral 0x55887c1470b0 <col:29> 'int' 16
| | | `-FullComment 0x55887c3c13d0 <col:37, col:55>
| | |   `-ParagraphComment 0x55887c3c13a0 <col:37, col:55>
| | |     `-TextComment 0x55887c3c1370 <col:37, col:55> Text=" Offset bits 15..0."
| | |-FieldDecl 0x55887c1471c8 <line:5278:5, col:29> col:15 Selector 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1471a8 <col:29> 'int'
| | | | |-value: Int 16
| | | | `-IntegerLiteral 0x55887c147178 <col:29> 'int' 16
| | | `-FullComment 0x55887c3c14a0 <col:37, col:46>
| | |   `-ParagraphComment 0x55887c3c1470 <col:37, col:46>
| | |     `-TextComment 0x55887c3c1440 <col:37, col:46> Text=" Selector."
| | |-FieldDecl 0x55887c147298 <line:5279:5, col:29> col:15 Reserved_0 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c147278 <col:29> 'int'
| | | | |-value: Int 8
| | | | `-IntegerLiteral 0x55887c147248 <col:29> 'int' 8
| | | `-FullComment 0x55887c3c1570 <col:37, col:46>
| | |   `-ParagraphComment 0x55887c3c1540 <col:37, col:46>
| | |     `-TextComment 0x55887c3c1510 <col:37, col:46> Text=" Reserved."
| | |-FieldDecl 0x55887c147368 <line:5280:5, col:29> col:15 GateType 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c147348 <col:29> 'int'
| | | | |-value: Int 8
| | | | `-IntegerLiteral 0x55887c147318 <col:29> 'int' 8
| | | `-FullComment 0x55887c3c1640 <col:37, col:68>
| | |   `-ParagraphComment 0x55887c3c1610 <col:37, col:68>
| | |     `-TextComment 0x55887c3c15e0 <col:37, col:68> Text=" Gate Type.  See #defines above."
| | |-FieldDecl 0x55887c147438 <line:5281:5, col:29> col:15 OffsetHigh 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c147418 <col:29> 'int'
| | | | |-value: Int 16
| | | | `-IntegerLiteral 0x55887c1473e8 <col:29> 'int' 16
| | | `-FullComment 0x55887c3c1710 <col:37, col:56>
| | |   `-ParagraphComment 0x55887c3c16e0 <col:37, col:56>
| | |     `-TextComment 0x55887c3c16b0 <col:37, col:56> Text=" Offset bits 31..16."
| | |-FieldDecl 0x55887c147508 <line:5282:5, col:29> col:15 OffsetUpper 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1474e8 <col:29> 'int'
| | | | |-value: Int 32
| | | | `-IntegerLiteral 0x55887c1474b8 <col:29> 'int' 32
| | | `-FullComment 0x55887c3c17e0 <col:37, col:56>
| | |   `-ParagraphComment 0x55887c3c17b0 <col:37, col:56>
| | |     `-TextComment 0x55887c3c1780 <col:37, col:56> Text=" Offset bits 63..32."
| | `-FieldDecl 0x55887c1475d8 <line:5283:5, col:29> col:15 Reserved_1 'UINT32':'unsigned int'
| |   |-ConstantExpr 0x55887c1475b8 <col:29> 'int'
| |   | |-value: Int 32
| |   | `-IntegerLiteral 0x55887c147588 <col:29> 'int' 32
| |   `-FullComment 0x55887c3c18b0 <col:37, col:46>
| |     `-ParagraphComment 0x55887c3c1880 <col:37, col:46>
| |       `-TextComment 0x55887c3c1850 <col:37, col:46> Text=" Reserved."
| |-FieldDecl 0x55887c1476b8 <line:5276:3, line:5284:5> col:5 Bits 'struct (unnamed struct at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5276:3)':'struct IA32_IDT_GATE_DESCRIPTOR::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5276:3)'
| |-RecordDecl 0x55887c147708 <line:5285:3, line:5288:3> line:5285:3 struct definition
| | |-FieldDecl 0x55887c1477c0 <line:5286:5, col:15> col:15 Uint64 'UINT64':'unsigned long long'
| | `-FieldDecl 0x55887c147820 <line:5287:5, col:15> col:15 Uint64_1 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c1478c8 <line:5285:3, line:5288:5> col:5 Uint128 'struct (unnamed struct at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5285:3)':'struct IA32_IDT_GATE_DESCRIPTOR::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5285:3)'
|-TypedefDecl 0x55887c1479f8 <line:5275:1, line:5289:3> col:3 IA32_IDT_GATE_DESCRIPTOR 'union IA32_IDT_GATE_DESCRIPTOR':'IA32_IDT_GATE_DESCRIPTOR'
| |-ElaboratedType 0x55887c1479a0 'union IA32_IDT_GATE_DESCRIPTOR' sugar
| | `-RecordType 0x55887c146ff0 'IA32_IDT_GATE_DESCRIPTOR'
| |   `-Record 0x55887c146f68 ''
| `-FullComment 0x55887c3c1980 <line:5273:4, col:63>
|   `-ParagraphComment 0x55887c3c1950 <col:4, col:63>
|     `-TextComment 0x55887c3c1920 <col:4, col:63> Text=" Byte packed structure for an x64 Interrupt Gate Descriptor."
|-RecordDecl 0x55887c147a88 <line:5295:9, line:5305:1> line:5295:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c147b30 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c147b98 <line:5296:3, col:13> col:13 Reserved_0 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c147bf8 <line:5297:3, col:13> col:13 RSP0 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c147c58 <line:5298:3, col:13> col:13 RSP1 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c147ed0 <line:5299:3, col:13> col:13 RSP2 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c147f30 <line:5300:3, col:13> col:13 Reserved_28 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c148058 <line:5301:3, col:18> col:13 IST 'UINT64[7]'
| |-FieldDecl 0x55887c1480b8 <line:5302:3, col:13> col:13 Reserved_92 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c148118 <line:5303:3, col:13> col:13 Reserved_100 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c148178 <line:5304:3, col:13> col:13 IOMapBaseAddress 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c148228 <line:5295:1, line:5305:3> col:3 IA32_TASK_STATE_SEGMENT 'struct IA32_TASK_STATE_SEGMENT':'IA32_TASK_STATE_SEGMENT'
| `-ElaboratedType 0x55887c1481d0 'struct IA32_TASK_STATE_SEGMENT' sugar
|   `-RecordType 0x55887c147b10 'IA32_TASK_STATE_SEGMENT'
|     `-Record 0x55887c147a88 ''
|-RecordDecl 0x55887c148298 <line:5307:9, line:5328:1> line:5307:9 union definition
| |-MaxFieldAlignmentAttr 0x55887c148340 <<invalid sloc>> Implicit 8
| |-RecordDecl 0x55887c148398 <line:5308:3, line:5323:3> line:5308:3 struct definition
| | |-MaxFieldAlignmentAttr 0x55887c148440 <<invalid sloc>> Implicit 8
| | |-FieldDecl 0x55887c1484e8 <line:5309:5, col:29> col:15 LimitLow 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1484c8 <col:29> 'int'
| | | | |-value: Int 16
| | | | `-IntegerLiteral 0x55887c148498 <col:29> 'int' 16
| | | `-FullComment 0x55887c3c1a50 <col:37, col:57>
| | |   `-ParagraphComment 0x55887c3c1a20 <col:37, col:57>
| | |     `-TextComment 0x55887c3c19f0 <col:37, col:57> Text=" Segment Limit 15..00"
| | |-FieldDecl 0x55887c1485b8 <line:5310:5, col:29> col:15 BaseLow 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c148598 <col:29> 'int'
| | | | |-value: Int 16
| | | | `-IntegerLiteral 0x55887c148568 <col:29> 'int' 16
| | | `-FullComment 0x55887c3c1b20 <col:37, col:57>
| | |   `-ParagraphComment 0x55887c3c1af0 <col:37, col:57>
| | |     `-TextComment 0x55887c3c1ac0 <col:37, col:57> Text=" Base Address  15..00"
| | |-FieldDecl 0x55887c148688 <line:5311:5, col:29> col:15 BaseMidl 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c148668 <col:29> 'int'
| | | | |-value: Int 8
| | | | `-IntegerLiteral 0x55887c148638 <col:29> 'int' 8
| | | `-FullComment 0x55887c3c1bf0 <col:37, col:57>
| | |   `-ParagraphComment 0x55887c3c1bc0 <col:37, col:57>
| | |     `-TextComment 0x55887c3c1b90 <col:37, col:57> Text=" Base Address  23..16"
| | |-FieldDecl 0x55887c148758 <line:5312:5, col:29> col:15 Type 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c148738 <col:29> 'int'
| | | | |-value: Int 4
| | | | `-IntegerLiteral 0x55887c148708 <col:29> 'int' 4
| | | `-FullComment 0x55887c3c1cc0 <col:37, col:51>
| | |   `-ParagraphComment 0x55887c3c1c90 <col:37, col:51>
| | |     `-TextComment 0x55887c3c1c60 <col:37, col:51> Text=" Type (1 0 B 1)"
| | |-FieldDecl 0x55887c148828 <line:5313:5, col:29> col:15 Reserved_43 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c148808 <col:29> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c1487d8 <col:29> 'int' 1
| | | `-FullComment 0x55887c3c1d90 <col:37, col:38>
| | |   `-ParagraphComment 0x55887c3c1d60 <col:37, col:38>
| | |     `-TextComment 0x55887c3c1d30 <col:37, col:38> Text=" 0"
| | |-FieldDecl 0x55887c1488f8 <line:5314:5, col:29> col:15 DPL 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1488d8 <col:29> 'int'
| | | | |-value: Int 2
| | | | `-IntegerLiteral 0x55887c1488a8 <col:29> 'int' 2
| | | `-FullComment 0x55887c3c1e60 <col:37, col:63>
| | |   `-ParagraphComment 0x55887c3c1e30 <col:37, col:63>
| | |     `-TextComment 0x55887c3c1e00 <col:37, col:63> Text=" Descriptor Privilege Level"
| | |-FieldDecl 0x55887c1489c8 <line:5315:5, col:29> col:15 P 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c1489a8 <col:29> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c148978 <col:29> 'int' 1
| | | `-FullComment 0x55887c3c1f30 <col:37, col:52>
| | |   `-ParagraphComment 0x55887c3c1f00 <col:37, col:52>
| | |     `-TextComment 0x55887c3c1ed0 <col:37, col:52> Text=" Segment Present"
| | |-FieldDecl 0x55887c148a98 <line:5316:5, col:29> col:15 LimitHigh 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c148a78 <col:29> 'int'
| | | | |-value: Int 4
| | | | `-IntegerLiteral 0x55887c148a48 <col:29> 'int' 4
| | | `-FullComment 0x55887c3c2000 <col:37, col:57>
| | |   `-ParagraphComment 0x55887c3c1fd0 <col:37, col:57>
| | |     `-TextComment 0x55887c3c1fa0 <col:37, col:57> Text=" Segment Limit 19..16"
| | |-FieldDecl 0x55887c148b68 <line:5317:5, col:29> col:15 AVL 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c148b48 <col:29> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c148b18 <col:29> 'int' 1
| | | `-FullComment 0x55887c3c20d0 <col:37, col:73>
| | |   `-ParagraphComment 0x55887c3c20a0 <col:37, col:73>
| | |     `-TextComment 0x55887c3c2070 <col:37, col:73> Text=" Available for use by system software"
| | |-FieldDecl 0x55887c148c38 <line:5318:5, col:29> col:15 Reserved_52 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c148c18 <col:29> 'int'
| | | | |-value: Int 2
| | | | `-IntegerLiteral 0x55887c148be8 <col:29> 'int' 2
| | | `-FullComment 0x55887c3c21a0 <col:37, col:40>
| | |   `-ParagraphComment 0x55887c3c2170 <col:37, col:40>
| | |     `-TextComment 0x55887c3c2140 <col:37, col:40> Text=" 0 0"
| | |-FieldDecl 0x55887c148d08 <line:5319:5, col:29> col:15 G 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c148ce8 <col:29> 'int'
| | | | |-value: Int 1
| | | | `-IntegerLiteral 0x55887c148cb8 <col:29> 'int' 1
| | | `-FullComment 0x55887c3c2270 <col:37, col:48>
| | |   `-ParagraphComment 0x55887c3c2240 <col:37, col:48>
| | |     `-TextComment 0x55887c3c2210 <col:37, col:48> Text=" Granularity"
| | |-FieldDecl 0x55887c148dd8 <line:5320:5, col:29> col:15 BaseMidh 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c148db8 <col:29> 'int'
| | | | |-value: Int 8
| | | | `-IntegerLiteral 0x55887c148d88 <col:29> 'int' 8
| | | `-FullComment 0x55887c3c2340 <col:37, col:57>
| | |   `-ParagraphComment 0x55887c3c2310 <col:37, col:57>
| | |     `-TextComment 0x55887c3c22e0 <col:37, col:57> Text=" Base Address  31..24"
| | |-FieldDecl 0x55887c1491d0 <line:5321:5, col:29> col:15 BaseHigh 'UINT32':'unsigned int'
| | | |-ConstantExpr 0x55887c148e88 <col:29> 'int'
| | | | |-value: Int 32
| | | | `-IntegerLiteral 0x55887c148e58 <col:29> 'int' 32
| | | `-FullComment 0x55887c3c2410 <col:37, col:57>
| | |   `-ParagraphComment 0x55887c3c23e0 <col:37, col:57>
| | |     `-TextComment 0x55887c3c23b0 <col:37, col:57> Text=" Base Address  63..32"
| | `-FieldDecl 0x55887c149298 <line:5322:5, col:29> col:15 Reserved_96 'UINT32':'unsigned int'
| |   |-ConstantExpr 0x55887c149278 <col:29> 'int'
| |   | |-value: Int 32
| |   | `-IntegerLiteral 0x55887c149248 <col:29> 'int' 32
| |   `-FullComment 0x55887c3c24e0 <col:37, col:45>
| |     `-ParagraphComment 0x55887c3c24b0 <col:37, col:45>
| |       `-TextComment 0x55887c3c2480 <col:37, col:45> Text=" Reserved"
| |-FieldDecl 0x55887c149378 <line:5308:3, line:5323:5> col:5 Bits 'struct (unnamed struct at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5308:3)':'struct IA32_TSS_DESCRIPTOR::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5308:3)'
| |-RecordDecl 0x55887c1493c8 <line:5324:3, line:5327:3> line:5324:3 struct definition
| | |-MaxFieldAlignmentAttr 0x55887c149470 <<invalid sloc>> Implicit 8
| | |-FieldDecl 0x55887c1494d8 <line:5325:5, col:15> col:15 Uint64 'UINT64':'unsigned long long'
| | `-FieldDecl 0x55887c149538 <line:5326:5, col:15> col:15 Uint64_1 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c1495e8 <line:5324:3, line:5327:5> col:5 Uint128 'struct (unnamed struct at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5324:3)':'struct IA32_TSS_DESCRIPTOR::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5324:3)'
|-TypedefDecl 0x55887c149758 <line:5307:1, line:5328:3> col:3 IA32_TSS_DESCRIPTOR 'union IA32_TSS_DESCRIPTOR':'IA32_TSS_DESCRIPTOR'
| `-ElaboratedType 0x55887c149700 'union IA32_TSS_DESCRIPTOR' sugar
|   `-RecordType 0x55887c148320 'IA32_TSS_DESCRIPTOR'
|     `-Record 0x55887c148298 ''
|-RecordDecl 0x55887c1497f8 <line:5336:9, line:5338:1> line:5336:9 struct definition
| |-FullComment 0x55887c3c25b0 <line:5334:4, col:53>
| | `-ParagraphComment 0x55887c3c2580 <col:4, col:53>
| |   `-TextComment 0x55887c3c2550 <col:4, col:53> Text=" Byte packed structure for an FP/SSE/SSE2 context."
| `-FieldDecl 0x55887c149978 <line:5337:3, col:22> col:12 Buffer 'UINT8[512]'
|-TypedefDecl 0x55887c149a28 <line:5336:1, line:5338:3> col:3 referenced IA32_FX_BUFFER 'struct IA32_FX_BUFFER':'IA32_FX_BUFFER'
| |-ElaboratedType 0x55887c1499d0 'struct IA32_FX_BUFFER' sugar
| | `-RecordType 0x55887c149880 'IA32_FX_BUFFER'
| |   `-Record 0x55887c1497f8 ''
| `-FullComment 0x55887c3c2680 <line:5334:4, col:53>
|   `-ParagraphComment 0x55887c3c2650 <col:4, col:53>
|     `-TextComment 0x55887c3c2620 <col:4, col:53> Text=" Byte packed structure for an FP/SSE/SSE2 context."
|-RecordDecl 0x55887c149ac0 <line:5343:9, line:5360:1> line:5343:9 struct definition
| |-FullComment 0x55887c3c2750 <line:5341:4, col:47>
| | `-ParagraphComment 0x55887c3c2720 <col:4, col:47>
| |   `-TextComment 0x55887c3c26f0 <col:4, col:47> Text=" Structures for the 16-bit real mode thunks."
| |-FieldDecl 0x55887c149b70 <line:5344:3, col:13> col:13 Reserved1 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c149bd0 <line:5345:3, col:13> col:13 Reserved2 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c149c30 <line:5346:3, col:13> col:13 Reserved3 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c149c90 <line:5347:3, col:13> col:13 Reserved4 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c149cf0 <line:5348:3, col:13> col:13 BL 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c149d50 <line:5349:3, col:13> col:13 BH 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c149db0 <line:5350:3, col:13> col:13 Reserved5 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c149e10 <line:5351:3, col:13> col:13 DL 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c149e70 <line:5352:3, col:13> col:13 DH 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c149ed0 <line:5353:3, col:13> col:13 Reserved6 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c149f30 <line:5354:3, col:13> col:13 CL 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c149f90 <line:5355:3, col:13> col:13 CH 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c149ff0 <line:5356:3, col:13> col:13 Reserved7 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14a050 <line:5357:3, col:13> col:13 AL 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c14a0b0 <line:5358:3, col:13> col:13 AH 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c14a110 <line:5359:3, col:13> col:13 Reserved8 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c14b2f0 <line:5343:1, line:5360:3> col:3 referenced IA32_BYTE_REGS 'struct IA32_BYTE_REGS':'IA32_BYTE_REGS'
| |-ElaboratedType 0x55887c14a160 'struct IA32_BYTE_REGS' sugar
| | `-RecordType 0x55887c149b40 'IA32_BYTE_REGS'
| |   `-Record 0x55887c149ac0 ''
| `-FullComment 0x55887c3c2820 <line:5341:4, col:47>
|   `-ParagraphComment 0x55887c3c27f0 <col:4, col:47>
|     `-TextComment 0x55887c3c27c0 <col:4, col:47> Text=" Structures for the 16-bit real mode thunks."
|-RecordDecl 0x55887c14b360 <line:5362:9, line:5379:1> line:5362:9 struct definition
| |-FieldDecl 0x55887c14b410 <line:5363:3, col:13> col:13 DI 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14b470 <line:5364:3, col:13> col:13 Reserved1 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14b4d0 <line:5365:3, col:13> col:13 SI 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14b530 <line:5366:3, col:13> col:13 Reserved2 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14b590 <line:5367:3, col:13> col:13 BP 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14b5f0 <line:5368:3, col:13> col:13 Reserved3 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14b650 <line:5369:3, col:13> col:13 SP 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14b6b0 <line:5370:3, col:13> col:13 Reserved4 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14b710 <line:5371:3, col:13> col:13 BX 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14b770 <line:5372:3, col:13> col:13 Reserved5 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14b7d0 <line:5373:3, col:13> col:13 DX 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14b830 <line:5374:3, col:13> col:13 Reserved6 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14b890 <line:5375:3, col:13> col:13 CX 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14b8f0 <line:5376:3, col:13> col:13 Reserved7 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14b950 <line:5377:3, col:13> col:13 AX 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c14b9b0 <line:5378:3, col:13> col:13 Reserved8 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c14ba58 <line:5362:1, line:5379:3> col:3 referenced IA32_WORD_REGS 'struct IA32_WORD_REGS':'IA32_WORD_REGS'
| `-ElaboratedType 0x55887c14ba00 'struct IA32_WORD_REGS' sugar
|   `-RecordType 0x55887c14b3e0 'IA32_WORD_REGS'
|     `-Record 0x55887c14b360 ''
|-RecordDecl 0x55887c14bac8 <line:5381:9, line:5398:1> line:5381:9 struct definition
| |-FieldDecl 0x55887c14bb80 <line:5382:3, col:20> col:20 EDI 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c14bbe0 <line:5383:3, col:20> col:20 ESI 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c14bc40 <line:5384:3, col:20> col:20 EBP 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c14bca0 <line:5385:3, col:20> col:20 ESP 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c14bd00 <line:5386:3, col:20> col:20 EBX 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c14bd60 <line:5387:3, col:20> col:20 EDX 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c14bdc0 <line:5388:3, col:20> col:20 ECX 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c14be20 <line:5389:3, col:20> col:20 EAX 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c14be80 <line:5390:3, col:20> col:20 DS 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14bee0 <line:5391:3, col:20> col:20 ES 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14bf40 <line:5392:3, col:20> col:20 FS 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14bfa0 <line:5393:3, col:20> col:20 GS 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c14c020 <line:5394:3, col:20> col:20 EFLAGS 'IA32_EFLAGS32':'IA32_EFLAGS32'
| |-FieldDecl 0x55887c14c080 <line:5395:3, col:20> col:20 Eip 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c14c0e0 <line:5396:3, col:20> col:20 CS 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c14c140 <line:5397:3, col:20> col:20 SS 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c14c1e8 <line:5381:1, line:5398:3> col:3 referenced IA32_DWORD_REGS 'struct IA32_DWORD_REGS':'IA32_DWORD_REGS'
| `-ElaboratedType 0x55887c14c190 'struct IA32_DWORD_REGS' sugar
|   `-RecordType 0x55887c14bb50 'IA32_DWORD_REGS'
|     `-Record 0x55887c14bac8 ''
|-RecordDecl 0x55887c14c258 <line:5400:9, line:5404:1> line:5400:9 union definition
| |-FieldDecl 0x55887c14c350 <line:5401:3, col:22> col:22 E 'IA32_DWORD_REGS':'IA32_DWORD_REGS'
| |-FieldDecl 0x55887c14c3d0 <line:5402:3, col:22> col:22 X 'IA32_WORD_REGS':'IA32_WORD_REGS'
| `-FieldDecl 0x55887c14c450 <line:5403:3, col:22> col:22 H 'IA32_BYTE_REGS':'IA32_BYTE_REGS'
|-TypedefDecl 0x55887c14c628 <line:5400:1, line:5404:3> col:3 referenced IA32_REGISTER_SET 'union IA32_REGISTER_SET':'IA32_REGISTER_SET'
| `-ElaboratedType 0x55887c14c5d0 'union IA32_REGISTER_SET' sugar
|   `-RecordType 0x55887c14c300 'IA32_REGISTER_SET'
|     `-Record 0x55887c14c258 ''
|-RecordDecl 0x55887c14c6c0 <line:5409:9, line:5414:1> line:5409:9 struct definition
| |-FullComment 0x55887c3c28f0 <line:5407:4, col:57>
| | `-ParagraphComment 0x55887c3c28c0 <col:4, col:57>
| |   `-TextComment 0x55887c3c2890 <col:4, col:57> Text=" Byte packed structure for an 16-bit real mode thunks."
| |-FieldDecl 0x55887c14c7e8 <line:5410:3, col:25> col:25 RealModeState 'IA32_REGISTER_SET *'
| |-FieldDecl 0x55887c14c850 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5411:25> col:25 RealModeBuffer 'void *'
| |-FieldDecl 0x55887c14c8b0 <line:5412:3, col:24> col:24 RealModeBufferSize 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c14c910 <line:5413:3, col:24> col:24 ThunkAttributes 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c14c9b8 <line:5409:1, line:5414:3> col:3 referenced THUNK_CONTEXT 'struct THUNK_CONTEXT':'THUNK_CONTEXT'
| |-ElaboratedType 0x55887c14c960 'struct THUNK_CONTEXT' sugar
| | `-RecordType 0x55887c14c740 'THUNK_CONTEXT'
| |   `-Record 0x55887c14c6c0 ''
| `-FullComment 0x55887c3c29c0 <line:5407:4, col:57>
|   `-ParagraphComment 0x55887c3c2990 <col:4, col:57>
|     `-TextComment 0x55887c3c2960 <col:4, col:57> Text=" Byte packed structure for an 16-bit real mode thunks."
|-TypedefDecl 0x55887c14cb20 <line:5432:1, line:5434:3> line:5432:15 referenced X86_ASSEMBLY_PATCH_LABEL 'void (void)':'void (void)'
| |-ParenType 0x55887c14cad0 'void (void)' sugar
| | `-FunctionProtoType 0x55887c115110 'void (void)' cdecl
| |   `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3c2bf0 <line:5421:4, line:5430:64>
|   |-ParagraphComment 0x55887c3c2a80 <line:5421:4, line:5422:68>
|   | |-TextComment 0x55887c3c2a30 <line:5421:4, col:78> Text=" Type definition for representing labels in NASM source code that allow for"
|   | `-TextComment 0x55887c3c2a50 <line:5422:4, col:68> Text=" the patching of immediate operands of IA32 and X64 instructions."
|   `-ParagraphComment 0x55887c3c2bc0 <line:5424:4, line:5430:64>
|     |-TextComment 0x55887c3c2aa0 <line:5424:4, col:73> Text=" While the type is technically defined as a function type (note: not a"
|     |-TextComment 0x55887c3c2ac0 <line:5425:4, col:78> Text=" pointer-to-function type), such labels in NASM source code never stand for"
|     |-TextComment 0x55887c3c2ae0 <line:5426:4, col:77> Text=" actual functions, and identifiers declared with this function type should"
|     |-TextComment 0x55887c3c2b00 <line:5427:4, col:77> Text=" never be called. This is also why the EFIAPI calling convention specifier"
|     |-TextComment 0x55887c3c2b20 <line:5428:4, col:78> Text=" is missing from the typedef, and why the typedef does not follow the usual"
|     |-TextComment 0x55887c3c2b40 <line:5429:4, col:78> Text=" edk2 coding style for function (or pointer-to-function) typedefs. The VOID"
|     `-TextComment 0x55887c3c2b60 <line:5430:4, col:64> Text=" return type and the VOID argument list are merely artifacts."
|-FunctionDecl 0x55887c14cee8 <line:5461:1, line:5469:3> line:5463:1 AsmCpuid 'UINT32 (UINT32, UINT32 *, UINT32 *, UINT32 *, UINT32 *)'
| |-ParmVarDecl 0x55887c14cbb8 <line:5464:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c14cc30 <line:5465:11, col:20> col:20 Eax 'UINT32 *'
| |-ParmVarDecl 0x55887c14cca8 <line:5466:11, col:20> col:20 Ebx 'UINT32 *'
| |-ParmVarDecl 0x55887c14cd20 <line:5467:11, col:20> col:20 Ecx 'UINT32 *'
| |-ParmVarDecl 0x55887c14cd98 <line:5468:11, col:20> col:20 Edx 'UINT32 *'
| `-FullComment 0x55887c3c3450 <line:5437:1, line:5458:16>
|   |-ParagraphComment 0x55887c3c2c90 <line:5437:1, col:30>
|   | `-TextComment 0x55887c3c2c60 <col:1, col:30> Text="  Retrieves CPUID information."
|   |-ParagraphComment 0x55887c3c2dd0 <line:5439:1, line:5445:51>
|   | |-TextComment 0x55887c3c2cb0 <line:5439:1, col:78> Text="  Executes the CPUID instruction with EAX set to the value specified by Index."
|   | |-TextComment 0x55887c3c2cd0 <line:5440:1, col:37> Text="  This function always returns Index."
|   | |-TextComment 0x55887c3c2cf0 <line:5441:1, col:75> Text="  If Eax is not NULL, then the value of EAX after CPUID is returned in Eax."
|   | |-TextComment 0x55887c3c2d10 <line:5442:1, col:75> Text="  If Ebx is not NULL, then the value of EBX after CPUID is returned in Ebx."
|   | |-TextComment 0x55887c3c2d30 <line:5443:1, col:75> Text="  If Ecx is not NULL, then the value of ECX after CPUID is returned in Ecx."
|   | |-TextComment 0x55887c3c2d50 <line:5444:1, col:75> Text="  If Edx is not NULL, then the value of EDX after CPUID is returned in Edx."
|   | `-TextComment 0x55887c3c2d70 <line:5445:1, col:51> Text="  This function is only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3c2e20 <line:5447:1, col:2>
|   | `-TextComment 0x55887c3c2df0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c2e40 <col:3, line:5449:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c2f20 <line:5447:16, line:5449:2>
|   |   |-TextComment 0x55887c3c2ea0 <line:5447:16, col:77> Text=" The 32-bit value to load into EAX prior to invoking the CPUID"
|   |   |-TextComment 0x55887c3c2ec0 <line:5448:1, col:28> Text="                instruction."
|   |   `-TextComment 0x55887c3c2ee0 <line:5449:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c2f40 <col:3, line:5451:2> [in] implicitly Param="Eax" ParamIndex=1
|   | `-ParagraphComment 0x55887c3c3040 <line:5449:14, line:5451:2>
|   |   |-TextComment 0x55887c3c2fa0 <line:5449:14, col:73> Text="   The pointer to the 32-bit EAX value returned by the CPUID"
|   |   |-TextComment 0x55887c3c2fc0 <line:5450:1, col:76> Text="                instruction. This is an optional parameter that may be NULL."
|   |   `-TextComment 0x55887c3c2fe0 <line:5451:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c3060 <col:3, line:5453:2> [in] implicitly Param="Ebx" ParamIndex=2
|   | `-ParagraphComment 0x55887c3c3140 <line:5451:14, line:5453:2>
|   |   |-TextComment 0x55887c3c30c0 <line:5451:14, col:73> Text="   The pointer to the 32-bit EBX value returned by the CPUID"
|   |   |-TextComment 0x55887c3c30e0 <line:5452:1, col:76> Text="                instruction. This is an optional parameter that may be NULL."
|   |   `-TextComment 0x55887c3c3100 <line:5453:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c3160 <col:3, line:5455:2> [in] implicitly Param="Ecx" ParamIndex=3
|   | `-ParagraphComment 0x55887c3c3240 <line:5453:14, line:5455:2>
|   |   |-TextComment 0x55887c3c31c0 <line:5453:14, col:73> Text="   The pointer to the 32-bit ECX value returned by the CPUID"
|   |   |-TextComment 0x55887c3c31e0 <line:5454:1, col:76> Text="                instruction. This is an optional parameter that may be NULL."
|   |   `-TextComment 0x55887c3c3200 <line:5455:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c3260 <col:3, line:5456:76> [in] implicitly Param="Edx" ParamIndex=4
|   | `-ParagraphComment 0x55887c3c3310 <line:5455:14, line:5456:76>
|   |   |-TextComment 0x55887c3c32c0 <line:5455:14, col:73> Text="   The pointer to the 32-bit EDX value returned by the CPUID"
|   |   `-TextComment 0x55887c3c32e0 <line:5456:1, col:76> Text="                instruction. This is an optional parameter that may be NULL."
|   |-ParagraphComment 0x55887c3c3360 <line:5458:1, col:2>
|   | `-TextComment 0x55887c3c3330 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c3380 <col:3, col:16> Name="return"
|     `-ParagraphComment 0x55887c3c33e0 <col:10, col:16>
|       `-TextComment 0x55887c3c33b0 <col:10, col:16> Text=" Index."
|-FunctionDecl 0x55887c14e528 <line:5503:1, line:5512:3> line:5505:1 AsmCpuidEx 'UINT32 (UINT32, UINT32, UINT32 *, UINT32 *, UINT32 *, UINT32 *)'
| |-ParmVarDecl 0x55887c14cfe8 <line:5506:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c14d060 <line:5507:11, col:19> col:19 SubIndex 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c14d0d8 <line:5508:11, col:20> col:20 Eax 'UINT32 *'
| |-ParmVarDecl 0x55887c14d150 <line:5509:11, col:20> col:20 Ebx 'UINT32 *'
| |-ParmVarDecl 0x55887c14d1c8 <line:5510:11, col:20> col:20 Ecx 'UINT32 *'
| |-ParmVarDecl 0x55887c14d240 <line:5511:11, col:20> col:20 Edx 'UINT32 *'
| `-FullComment 0x55887c3c3e50 <line:5472:1, line:5500:16>
|   |-ParagraphComment 0x55887c3c34f0 <line:5472:1, col:64>
|   | `-TextComment 0x55887c3c34c0 <col:1, col:64> Text="  Retrieves CPUID information using an extended leaf identifier."
|   |-ParagraphComment 0x55887c3c3590 <line:5474:1, line:5476:58>
|   | |-TextComment 0x55887c3c3510 <line:5474:1, col:77> Text="  Executes the CPUID instruction with EAX set to the value specified by Index"
|   | |-TextComment 0x55887c3c3530 <line:5475:1, col:78> Text="  and ECX set to the value specified by SubIndex. This function always returns"
|   | `-TextComment 0x55887c3c3550 <line:5476:1, col:58> Text="  Index. This function is only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3c3650 <line:5478:1, line:5481:75>
|   | |-TextComment 0x55887c3c35b0 <line:5478:1, col:75> Text="  If Eax is not NULL, then the value of EAX after CPUID is returned in Eax."
|   | |-TextComment 0x55887c3c35d0 <line:5479:1, col:75> Text="  If Ebx is not NULL, then the value of EBX after CPUID is returned in Ebx."
|   | |-TextComment 0x55887c3c35f0 <line:5480:1, col:75> Text="  If Ecx is not NULL, then the value of ECX after CPUID is returned in Ecx."
|   | `-TextComment 0x55887c3c3610 <line:5481:1, col:75> Text="  If Edx is not NULL, then the value of EDX after CPUID is returned in Edx."
|   |-ParagraphComment 0x55887c3c36a0 <line:5483:1, col:2>
|   | `-TextComment 0x55887c3c3670 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c36c0 <col:3, line:5485:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c37a0 <line:5483:16, line:5485:2>
|   |   |-TextComment 0x55887c3c3720 <line:5483:16, col:75> Text="     The 32-bit value to load into EAX prior to invoking the"
|   |   |-TextComment 0x55887c3c3740 <line:5484:1, col:38> Text="                    CPUID instruction."
|   |   `-TextComment 0x55887c3c3760 <line:5485:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c37c0 <col:3, line:5487:2> [in] implicitly Param="SubIndex" ParamIndex=1
|   | `-ParagraphComment 0x55887c3c38a0 <line:5485:19, line:5487:2>
|   |   |-TextComment 0x55887c3c3820 <line:5485:19, col:75> Text="  The 32-bit value to load into ECX prior to invoking the"
|   |   |-TextComment 0x55887c3c3840 <line:5486:1, col:38> Text="                    CPUID instruction."
|   |   `-TextComment 0x55887c3c3860 <line:5487:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c38c0 <col:3, line:5490:2> [in] implicitly Param="Eax" ParamIndex=2
|   | `-ParagraphComment 0x55887c3c39c0 <line:5487:14, line:5490:2>
|   |   |-TextComment 0x55887c3c3920 <line:5487:14, col:77> Text="       The pointer to the 32-bit EAX value returned by the CPUID"
|   |   |-TextComment 0x55887c3c3940 <line:5488:1, col:74> Text="                    instruction. This is an optional parameter that may be"
|   |   |-TextComment 0x55887c3c3960 <line:5489:1, col:25> Text="                    NULL."
|   |   `-TextComment 0x55887c3c3980 <line:5490:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c39e0 <col:3, line:5493:2> [in] implicitly Param="Ebx" ParamIndex=3
|   | `-ParagraphComment 0x55887c3c3ae0 <line:5490:14, line:5493:2>
|   |   |-TextComment 0x55887c3c3a40 <line:5490:14, col:77> Text="       The pointer to the 32-bit EBX value returned by the CPUID"
|   |   |-TextComment 0x55887c3c3a60 <line:5491:1, col:74> Text="                    instruction. This is an optional parameter that may be"
|   |   |-TextComment 0x55887c3c3a80 <line:5492:1, col:25> Text="                    NULL."
|   |   `-TextComment 0x55887c3c3aa0 <line:5493:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c3b00 <col:3, line:5496:2> [in] implicitly Param="Ecx" ParamIndex=4
|   | `-ParagraphComment 0x55887c3c3c00 <line:5493:14, line:5496:2>
|   |   |-TextComment 0x55887c3c3b60 <line:5493:14, col:77> Text="       The pointer to the 32-bit ECX value returned by the CPUID"
|   |   |-TextComment 0x55887c3c3b80 <line:5494:1, col:74> Text="                    instruction. This is an optional parameter that may be"
|   |   |-TextComment 0x55887c3c3ba0 <line:5495:1, col:25> Text="                    NULL."
|   |   `-TextComment 0x55887c3c3bc0 <line:5496:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c3c20 <col:3, line:5498:25> [in] implicitly Param="Edx" ParamIndex=5
|   | `-ParagraphComment 0x55887c3c3d00 <line:5496:14, line:5498:25>
|   |   |-TextComment 0x55887c3c3c80 <line:5496:14, col:77> Text="       The pointer to the 32-bit EDX value returned by the CPUID"
|   |   |-TextComment 0x55887c3c3ca0 <line:5497:1, col:74> Text="                    instruction. This is an optional parameter that may be"
|   |   `-TextComment 0x55887c3c3cc0 <line:5498:1, col:25> Text="                    NULL."
|   |-ParagraphComment 0x55887c3c3d50 <line:5500:1, col:2>
|   | `-TextComment 0x55887c3c3d20 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c3d70 <col:3, col:16> Name="return"
|     `-ParagraphComment 0x55887c3c3dd0 <col:10, col:16>
|       `-TextComment 0x55887c3c3da0 <col:10, col:16> Text=" Index."
|-FunctionDecl 0x55887c14e6c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5525:3> line:5523:1 AsmDisableCache 'void (void)'
| `-FullComment 0x55887c3c3f90 <line:5515:1, line:5518:88>
|   |-ParagraphComment 0x55887c3c3ef0 <line:5515:1, col:58>
|   | `-TextComment 0x55887c3c3ec0 <col:1, col:58> Text="  Set CD bit and clear NW bit of CR0 followed by a WBINVD."
|   `-ParagraphComment 0x55887c3c3f60 <line:5517:1, line:5518:88>
|     |-TextComment 0x55887c3c3f10 <line:5517:1, col:89> Text="  Disables the caches by setting the CD bit of CR0 to 1, clearing the NW bit of CR0 to 0,"
|     `-TextComment 0x55887c3c3f30 <line:5518:1, col:88> Text="  and executing a WBINVD instruction.  This function is only available on IA-32 and x64."
|-FunctionDecl 0x55887c14e820 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:5538:3> line:5536:1 AsmEnableCache 'void (void)'
| `-FullComment 0x55887c3c40d0 <line:5528:1, line:5531:70>
|   |-ParagraphComment 0x55887c3c4030 <line:5528:1, col:60>
|   | `-TextComment 0x55887c3c4000 <col:1, col:60> Text="  Perform a WBINVD and clear both the CD and NW bits of CR0."
|   `-ParagraphComment 0x55887c3c40a0 <line:5530:1, line:5531:70>
|     |-TextComment 0x55887c3c4050 <line:5530:1, col:88> Text="  Enables the caches by executing a WBINVD instruction and then clear both the CD and NW"
|     `-TextComment 0x55887c3c4070 <line:5531:1, col:70> Text="  bits of CR0 to 0.  This function is only available on IA-32 and x64."
|-FunctionDecl 0x55887c14e988 <line:5554:1, line:5558:3> line:5556:1 AsmReadMsr32 'UINT32 (UINT32)'
| |-ParmVarDecl 0x55887c14e8f8 <line:5557:11, col:19> col:19 Index 'UINT32':'unsigned int'
| `-FullComment 0x55887c3c4480 <line:5541:1, line:5551:59>
|   |-ParagraphComment 0x55887c3c4170 <line:5541:1, col:64>
|   | `-TextComment 0x55887c3c4140 <col:1, col:64> Text="  Returns the lower 32-bits of a Machine Specific Register(MSR)."
|   |-ParagraphComment 0x55887c3c4260 <line:5543:1, line:5547:37>
|   | |-TextComment 0x55887c3c4190 <line:5543:1, col:68> Text="  Reads and returns the lower 32-bits of the MSR specified by Index."
|   | |-TextComment 0x55887c3c41b0 <line:5544:1, col:78> Text="  No parameter checking is performed on Index, and some Index values may cause"
|   | |-TextComment 0x55887c3c41d0 <line:5545:1, col:78> Text="  CPU exceptions. The caller must either guarantee that Index is valid, or the"
|   | |-TextComment 0x55887c3c41f0 <line:5546:1, col:78> Text="  caller must set up exception handlers to catch the exceptions. This function"
|   | `-TextComment 0x55887c3c4210 <line:5547:1, col:37> Text="  is only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3c42b0 <line:5549:1, col:2>
|   | `-TextComment 0x55887c3c4280 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c42d0 <col:3, col:45> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c4360 <col:16, col:45>
|   |   `-TextComment 0x55887c3c4330 <col:16, col:45> Text=" The 32-bit MSR index to read."
|   |-ParagraphComment 0x55887c3c43b0 <line:5551:1, col:2>
|   | `-TextComment 0x55887c3c4380 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c43d0 <col:3, col:59> Name="return"
|     `-ParagraphComment 0x55887c3c4430 <col:10, col:59>
|       `-TextComment 0x55887c3c4400 <col:10, col:59> Text=" The lower 32 bits of the MSR identified by Index."
|-FunctionDecl 0x55887c14ebf8 <line:5577:1, line:5582:3> line:5579:1 AsmWriteMsr32 'UINT32 (UINT32, UINT32)'
| |-ParmVarDecl 0x55887c14ea68 <line:5580:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c14eae0 <line:5581:11, col:19> col:19 Value 'UINT32':'unsigned int'
| `-FullComment 0x55887c3c4950 <line:5561:1, line:5574:15>
|   |-ParagraphComment 0x55887c3c4540 <line:5561:1, line:5562:47>
|   | |-TextComment 0x55887c3c44f0 <line:5561:1, col:83> Text="  Writes a 32-bit value to a Machine Specific Register(MSR), and returns the value."
|   | `-TextComment 0x55887c3c4510 <line:5562:1, col:47> Text="  The upper 32-bits of the MSR are set to zero."
|   |-ParagraphComment 0x55887c3c4650 <line:5564:1, line:5569:61>
|   | |-TextComment 0x55887c3c4560 <line:5564:1, col:79> Text="  Writes the 32-bit value specified by Value to the MSR specified by Index. The"
|   | |-TextComment 0x55887c3c4580 <line:5565:1, col:77> Text="  upper 32-bits of the MSR write are set to zero. The 32-bit value written to"
|   | |-TextComment 0x55887c3c45a0 <line:5566:1, col:76> Text="  the MSR is returned. No parameter checking is performed on Index or Value,"
|   | |-TextComment 0x55887c3c45c0 <line:5567:1, col:78> Text="  and some of these may cause CPU exceptions. The caller must either guarantee"
|   | |-TextComment 0x55887c3c45e0 <line:5568:1, col:79> Text="  that Index and Value are valid, or the caller must establish proper exception"
|   | `-TextComment 0x55887c3c4600 <line:5569:1, col:61> Text="  handlers. This function is only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3c46a0 <line:5571:1, col:2>
|   | `-TextComment 0x55887c3c4670 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c46c0 <col:3, line:5572:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c4770 <line:5571:16, line:5572:2>
|   |   |-TextComment 0x55887c3c4720 <line:5571:16, col:46> Text=" The 32-bit MSR index to write."
|   |   `-TextComment 0x55887c3c4740 <line:5572:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c4790 <col:3, col:53> [in] implicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c3c4820 <col:16, col:53>
|   |   `-TextComment 0x55887c3c47f0 <col:16, col:53> Text=" The 32-bit value to write to the MSR."
|   |-ParagraphComment 0x55887c3c4870 <line:5574:1, col:2>
|   | `-TextComment 0x55887c3c4840 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c4890 <col:3, col:15> Name="return"
|     `-ParagraphComment 0x55887c3c48f0 <col:10, col:15>
|       `-TextComment 0x55887c3c48c0 <col:10, col:15> Text=" Value"
|-FunctionDecl 0x55887c14edf8 <line:5603:1, line:5608:3> line:5605:1 AsmMsrOr32 'UINT32 (UINT32, UINT32)'
| |-ParmVarDecl 0x55887c14ece8 <line:5606:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c14ed60 <line:5607:11, col:19> col:19 OrData 'UINT32':'unsigned int'
| `-FullComment 0x55887c3c4e70 <line:5585:1, line:5600:52>
|   |-ParagraphComment 0x55887c3c4a10 <line:5585:1, line:5586:43>
|   | |-TextComment 0x55887c3c49c0 <line:5585:1, col:69> Text="  Reads a 64-bit MSR, performs a bitwise OR on the lower 32-bits, and"
|   | `-TextComment 0x55887c3c49e0 <line:5586:1, col:43> Text="  writes the result back to the 64-bit MSR."
|   |-ParagraphComment 0x55887c3c4b70 <line:5588:1, line:5595:16>
|   | |-TextComment 0x55887c3c4a30 <line:5588:1, col:64> Text="  Reads the 64-bit MSR specified by Index, performs a bitwise OR"
|   | |-TextComment 0x55887c3c4a50 <line:5589:1, col:73> Text="  between the lower 32-bits of the read result and the value specified by"
|   | |-TextComment 0x55887c3c4a70 <line:5590:1, col:79> Text="  OrData, and writes the result to the 64-bit MSR specified by Index. The lower"
|   | |-TextComment 0x55887c3c4a90 <line:5591:1, col:79> Text="  32-bits of the value written to the MSR is returned. No parameter checking is"
|   | |-TextComment 0x55887c3c4ab0 <line:5592:1, col:79> Text="  performed on Index or OrData, and some of these may cause CPU exceptions. The"
|   | |-TextComment 0x55887c3c4ad0 <line:5593:1, col:77> Text="  caller must either guarantee that Index and OrData are valid, or the caller"
|   | |-TextComment 0x55887c3c4af0 <line:5594:1, col:78> Text="  must establish proper exception handlers. This function is only available on"
|   | `-TextComment 0x55887c3c4b10 <line:5595:1, col:16> Text="  IA-32 and x64."
|   |-ParagraphComment 0x55887c3c4bc0 <line:5597:1, col:2>
|   | `-TextComment 0x55887c3c4b90 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c4be0 <col:3, line:5598:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c4c90 <line:5597:16, line:5598:2>
|   |   |-TextComment 0x55887c3c4c40 <line:5597:16, col:48> Text="   The 32-bit MSR index to write."
|   |   `-TextComment 0x55887c3c4c60 <line:5598:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c4cb0 <col:3, col:67> [in] implicitly Param="OrData" ParamIndex=1
|   | `-ParagraphComment 0x55887c3c4d40 <col:17, col:67>
|   |   `-TextComment 0x55887c3c4d10 <col:17, col:67> Text="  The value to OR with the read value from the MSR."
|   |-ParagraphComment 0x55887c3c4d90 <line:5600:1, col:2>
|   | `-TextComment 0x55887c3c4d60 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c4db0 <col:3, col:52> Name="return"
|     `-ParagraphComment 0x55887c3c4e10 <col:10, col:52>
|       `-TextComment 0x55887c3c4de0 <col:10, col:52> Text=" The lower 32-bit value written to the MSR."
|-FunctionDecl 0x55887c14eff8 <line:5629:1, line:5634:3> line:5631:1 AsmMsrAnd32 'UINT32 (UINT32, UINT32)'
| |-ParmVarDecl 0x55887c14eee8 <line:5632:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c14ef60 <line:5633:11, col:19> col:19 AndData 'UINT32':'unsigned int'
| `-FullComment 0x55887c3c5390 <line:5611:1, line:5626:52>
|   |-ParagraphComment 0x55887c3c4f30 <line:5611:1, line:5612:36>
|   | |-TextComment 0x55887c3c4ee0 <line:5611:1, col:77> Text="  Reads a 64-bit MSR, performs a bitwise AND on the lower 32-bits, and writes"
|   | `-TextComment 0x55887c3c4f00 <line:5612:1, col:36> Text="  the result back to the 64-bit MSR."
|   |-ParagraphComment 0x55887c3c5090 <line:5614:1, line:5621:10>
|   | |-TextComment 0x55887c3c4f50 <line:5614:1, col:77> Text="  Reads the 64-bit MSR specified by Index, performs a bitwise AND between the"
|   | |-TextComment 0x55887c3c4f70 <line:5615:1, col:74> Text="  lower 32-bits of the read result and the value specified by AndData, and"
|   | |-TextComment 0x55887c3c4f90 <line:5616:1, col:78> Text="  writes the result to the 64-bit MSR specified by Index. The lower 32-bits of"
|   | |-TextComment 0x55887c3c4fb0 <line:5617:1, col:78> Text="  the value written to the MSR is returned. No parameter checking is performed"
|   | |-TextComment 0x55887c3c4fd0 <line:5618:1, col:77> Text="  on Index or AndData, and some of these may cause CPU exceptions. The caller"
|   | |-TextComment 0x55887c3c4ff0 <line:5619:1, col:76> Text="  must either guarantee that Index and AndData are valid, or the caller must"
|   | |-TextComment 0x55887c3c5010 <line:5620:1, col:79> Text="  establish proper exception handlers. This function is only available on IA-32"
|   | `-TextComment 0x55887c3c5030 <line:5621:1, col:10> Text="  and x64."
|   |-ParagraphComment 0x55887c3c50e0 <line:5623:1, col:2>
|   | `-TextComment 0x55887c3c50b0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c5100 <col:3, line:5624:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c51b0 <line:5623:16, line:5624:2>
|   |   |-TextComment 0x55887c3c5160 <line:5623:16, col:48> Text="   The 32-bit MSR index to write."
|   |   `-TextComment 0x55887c3c5180 <line:5624:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c51d0 <col:3, col:68> [in] implicitly Param="AndData" ParamIndex=1
|   | `-ParagraphComment 0x55887c3c5260 <col:18, col:68>
|   |   `-TextComment 0x55887c3c5230 <col:18, col:68> Text=" The value to AND with the read value from the MSR."
|   |-ParagraphComment 0x55887c3c52b0 <line:5626:1, col:2>
|   | `-TextComment 0x55887c3c5280 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c52d0 <col:3, col:52> Name="return"
|     `-ParagraphComment 0x55887c3c5330 <col:10, col:52>
|       `-TextComment 0x55887c3c5300 <col:10, col:52> Text=" The lower 32-bit value written to the MSR."
|-FunctionDecl 0x55887c14f2f8 <line:5658:1, line:5664:3> line:5660:1 AsmMsrAndThenOr32 'UINT32 (UINT32, UINT32, UINT32)'
| |-ParmVarDecl 0x55887c14f0e8 <line:5661:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c14f160 <line:5662:11, col:19> col:19 AndData 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c14f1d8 <line:5663:11, col:19> col:19 OrData 'UINT32':'unsigned int'
| `-FullComment 0x55887c3c59d0 <line:5637:1, line:5655:52>
|   |-ParagraphComment 0x55887c3c5450 <line:5637:1, line:5638:69>
|   | |-TextComment 0x55887c3c5400 <line:5637:1, col:69> Text="  Reads a 64-bit MSR, performs a bitwise AND followed by a bitwise OR"
|   | `-TextComment 0x55887c3c5420 <line:5638:1, col:69> Text="  on the lower 32-bits, and writes the result back to the 64-bit MSR."
|   |-ParagraphComment 0x55887c3c5600 <line:5640:1, line:5649:29>
|   | |-TextComment 0x55887c3c5470 <line:5640:1, col:77> Text="  Reads the 64-bit MSR specified by Index, performs a bitwise AND between the"
|   | |-TextComment 0x55887c3c5490 <line:5641:1, col:69> Text="  lower 32-bits of the read result and the value specified by AndData"
|   | |-TextComment 0x55887c3c54b0 <line:5642:1, col:65> Text="  preserving the upper 32-bits, performs a bitwise OR between the"
|   | |-TextComment 0x55887c3c54d0 <line:5643:1, col:79> Text="  result of the AND operation and the value specified by OrData, and writes the"
|   | |-TextComment 0x55887c3c54f0 <line:5644:1, col:79> Text="  result to the 64-bit MSR specified by Address. The lower 32-bits of the value"
|   | |-TextComment 0x55887c3c5510 <line:5645:1, col:78> Text="  written to the MSR is returned. No parameter checking is performed on Index,"
|   | |-TextComment 0x55887c3c5530 <line:5646:1, col:76> Text="  AndData, or OrData, and some of these may cause CPU exceptions. The caller"
|   | |-TextComment 0x55887c3c5550 <line:5647:1, col:73> Text="  must either guarantee that Index, AndData, and OrData are valid, or the"
|   | |-TextComment 0x55887c3c5570 <line:5648:1, col:72> Text="  caller must establish proper exception handlers. This function is only"
|   | `-TextComment 0x55887c3c5590 <line:5649:1, col:29> Text="  available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3c5650 <line:5651:1, col:2>
|   | `-TextComment 0x55887c3c5620 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c5670 <col:3, line:5652:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c5720 <line:5651:16, line:5652:2>
|   |   |-TextComment 0x55887c3c56d0 <line:5651:16, col:48> Text="   The 32-bit MSR index to write."
|   |   `-TextComment 0x55887c3c56f0 <line:5652:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c5740 <col:3, line:5653:2> [in] implicitly Param="AndData" ParamIndex=1
|   | `-ParagraphComment 0x55887c3c57f0 <line:5652:18, line:5653:2>
|   |   |-TextComment 0x55887c3c57a0 <line:5652:18, col:68> Text=" The value to AND with the read value from the MSR."
|   |   `-TextComment 0x55887c3c57c0 <line:5653:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c5810 <col:3, col:71> [in] implicitly Param="OrData" ParamIndex=2
|   | `-ParagraphComment 0x55887c3c58a0 <col:17, col:71>
|   |   `-TextComment 0x55887c3c5870 <col:17, col:71> Text="  The value to OR with the result of the AND operation."
|   |-ParagraphComment 0x55887c3c58f0 <line:5655:1, col:2>
|   | `-TextComment 0x55887c3c58c0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c5910 <col:3, col:52> Name="return"
|     `-ParagraphComment 0x55887c3c5970 <col:10, col:52>
|       `-TextComment 0x55887c3c5940 <col:10, col:52> Text=" The lower 32-bit value written to the MSR."
|-FunctionDecl 0x55887c14f7c0 <line:5688:1, line:5694:3> line:5690:1 AsmMsrBitFieldRead32 'UINT32 (UINT32, UINTN, UINTN)'
| |-ParmVarDecl 0x55887c14f630 <line:5691:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c14f6a8 <line:5692:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c14f720 <line:5693:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3c6030 <line:5667:1, line:5685:42>
|   |-ParagraphComment 0x55887c3c5a70 <line:5667:1, col:30>
|   | `-TextComment 0x55887c3c5a40 <col:1, col:30> Text="  Reads a bit field of an MSR."
|   |-ParagraphComment 0x55887c3c5b60 <line:5669:1, line:5673:29>
|   | |-TextComment 0x55887c3c5a90 <line:5669:1, col:76> Text="  Reads the bit field in the lower 32-bits of a 64-bit MSR. The bit field is"
|   | |-TextComment 0x55887c3c5ab0 <line:5670:1, col:73> Text="  specified by the StartBit and the EndBit. The value of the bit field is"
|   | |-TextComment 0x55887c3c5ad0 <line:5671:1, col:79> Text="  returned. The caller must either guarantee that Index is valid, or the caller"
|   | |-TextComment 0x55887c3c5af0 <line:5672:1, col:79> Text="  must set up exception handlers to catch the exceptions. This function is only"
|   | `-TextComment 0x55887c3c5b10 <line:5673:1, col:29> Text="  available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3c5c00 <line:5675:1, line:5677:49>
|   | |-TextComment 0x55887c3c5b80 <line:5675:1, col:48> Text="  If StartBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3c5ba0 <line:5676:1, col:46> Text="  If EndBit is greater than 31, then ASSERT()."
|   | `-TextComment 0x55887c3c5bc0 <line:5677:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3c5c50 <line:5679:1, col:2>
|   | `-TextComment 0x55887c3c5c20 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c5c70 <col:3, line:5680:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c5d20 <line:5679:16, line:5680:2>
|   |   |-TextComment 0x55887c3c5cd0 <line:5679:16, col:49> Text="     The 32-bit MSR index to read."
|   |   `-TextComment 0x55887c3c5cf0 <line:5680:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c5d40 <col:3, line:5682:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3c5e20 <line:5680:19, line:5682:2>
|   |   |-TextComment 0x55887c3c5da0 <line:5680:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3c5dc0 <line:5681:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3c5de0 <line:5682:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c5e40 <col:3, line:5683:32> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3c5ef0 <line:5682:17, line:5683:32>
|   |   |-TextComment 0x55887c3c5ea0 <line:5682:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   `-TextComment 0x55887c3c5ec0 <line:5683:1, col:32> Text="                    Range 0..31."
|   |-ParagraphComment 0x55887c3c5f40 <line:5685:1, col:2>
|   | `-TextComment 0x55887c3c5f10 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c5f60 <col:3, col:42> Name="return"
|     `-ParagraphComment 0x55887c3c5fc0 <col:10, col:42>
|       `-TextComment 0x55887c3c5f90 <col:10, col:42> Text=" The bit field read from the MSR."
|-FunctionDecl 0x55887c14fac8 <line:5721:1, line:5728:3> line:5723:1 AsmMsrBitFieldWrite32 'UINT32 (UINT32, UINTN, UINTN, UINT32)'
| |-ParmVarDecl 0x55887c14f8b8 <line:5724:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c14f930 <line:5725:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c14f9a8 <line:5726:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c14fa20 <line:5727:11, col:19> col:19 Value 'UINT32':'unsigned int'
| `-FullComment 0x55887c3c67b0 <line:5697:1, line:5718:59>
|   |-ParagraphComment 0x55887c3c60d0 <line:5697:1, col:31>
|   | `-TextComment 0x55887c3c60a0 <col:1, col:31> Text="  Writes a bit field to an MSR."
|   |-ParagraphComment 0x55887c3c61e0 <line:5699:1, line:5704:51>
|   | |-TextComment 0x55887c3c60f0 <line:5699:1, col:75> Text="  Writes Value to a bit field in the lower 32-bits of a 64-bit MSR. The bit"
|   | |-TextComment 0x55887c3c6110 <line:5700:1, col:74> Text="  field is specified by the StartBit and the EndBit. All other bits in the"
|   | |-TextComment 0x55887c3c6130 <line:5701:1, col:72> Text="  destination MSR are preserved. The lower 32-bits of the MSR written is"
|   | |-TextComment 0x55887c3c6150 <line:5702:1, col:76> Text="  returned. The caller must either guarantee that Index and the data written"
|   | |-TextComment 0x55887c3c6170 <line:5703:1, col:81> Text="  is valid, or the caller must set up exception handlers to catch the exceptions."
|   | `-TextComment 0x55887c3c6190 <line:5704:1, col:51> Text="  This function is only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3c62a0 <line:5706:1, line:5709:98>
|   | |-TextComment 0x55887c3c6200 <line:5706:1, col:48> Text="  If StartBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3c6220 <line:5707:1, col:46> Text="  If EndBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3c6240 <line:5708:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3c6260 <line:5709:1, col:98> Text="  If Value is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3c62f0 <line:5711:1, col:2>
|   | `-TextComment 0x55887c3c62c0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c6310 <col:3, line:5712:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c63c0 <line:5711:16, line:5712:2>
|   |   |-TextComment 0x55887c3c6370 <line:5711:16, col:50> Text="     The 32-bit MSR index to write."
|   |   `-TextComment 0x55887c3c6390 <line:5712:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c63e0 <col:3, line:5714:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3c64c0 <line:5712:19, line:5714:2>
|   |   |-TextComment 0x55887c3c6440 <line:5712:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3c6460 <line:5713:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3c6480 <line:5714:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c64e0 <col:3, line:5716:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3c65c0 <line:5714:17, line:5716:2>
|   |   |-TextComment 0x55887c3c6540 <line:5714:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3c6560 <line:5715:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3c6580 <line:5716:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c65e0 <col:3, col:47> [in] implicitly Param="Value" ParamIndex=3
|   | `-ParagraphComment 0x55887c3c6670 <col:16, col:47>
|   |   `-TextComment 0x55887c3c6640 <col:16, col:47> Text="     New value of the bit field."
|   |-ParagraphComment 0x55887c3c66c0 <line:5718:1, col:2>
|   | `-TextComment 0x55887c3c6690 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c66e0 <col:3, col:59> Name="return"
|     `-ParagraphComment 0x55887c3c6740 <col:10, col:59>
|       `-TextComment 0x55887c3c6710 <col:10, col:59> Text=" The lower 32-bit of the value written to the MSR."
|-FunctionDecl 0x55887c14fdd8 <line:5757:1, line:5764:3> line:5759:1 AsmMsrBitFieldOr32 'UINT32 (UINT32, UINTN, UINTN, UINT32)'
| |-ParmVarDecl 0x55887c14fbc8 <line:5760:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c14fc40 <line:5761:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c14fcb8 <line:5762:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c14fd30 <line:5763:11, col:19> col:19 OrData 'UINT32':'unsigned int'
| `-FullComment 0x55887c3c6f80 <line:5731:1, line:5754:59>
|   |-ParagraphComment 0x55887c3c6870 <line:5731:1, line:5732:49>
|   | |-TextComment 0x55887c3c6820 <line:5731:1, col:74> Text="  Reads a bit field in a 64-bit MSR, performs a bitwise OR, and writes the"
|   | `-TextComment 0x55887c3c6840 <line:5732:1, col:49> Text="  result back to the bit field in the 64-bit MSR."
|   |-ParagraphComment 0x55887c3c69b0 <line:5734:1, line:5740:46>
|   | |-TextComment 0x55887c3c6890 <line:5734:1, col:64> Text="  Reads the 64-bit MSR specified by Index, performs a bitwise OR"
|   | |-TextComment 0x55887c3c68b0 <line:5735:1, col:75> Text="  between the read result and the value specified by OrData, and writes the"
|   | |-TextComment 0x55887c3c68d0 <line:5736:1, col:77> Text="  result to the 64-bit MSR specified by Index. The lower 32-bits of the value"
|   | |-TextComment 0x55887c3c68f0 <line:5737:1, col:78> Text="  written to the MSR are returned. Extra left bits in OrData are stripped. The"
|   | |-TextComment 0x55887c3c6910 <line:5738:1, col:75> Text="  caller must either guarantee that Index and the data written is valid, or"
|   | |-TextComment 0x55887c3c6930 <line:5739:1, col:73> Text="  the caller must set up exception handlers to catch the exceptions. This"
|   | `-TextComment 0x55887c3c6950 <line:5740:1, col:46> Text="  function is only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3c6a70 <line:5742:1, line:5745:99>
|   | |-TextComment 0x55887c3c69d0 <line:5742:1, col:48> Text="  If StartBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3c69f0 <line:5743:1, col:46> Text="  If EndBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3c6a10 <line:5744:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3c6a30 <line:5745:1, col:99> Text="  If OrData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3c6ac0 <line:5747:1, col:2>
|   | `-TextComment 0x55887c3c6a90 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c6ae0 <col:3, line:5748:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c6b90 <line:5747:16, line:5748:2>
|   |   |-TextComment 0x55887c3c6b40 <line:5747:16, col:50> Text="     The 32-bit MSR index to write."
|   |   `-TextComment 0x55887c3c6b60 <line:5748:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c6bb0 <col:3, line:5750:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3c6c90 <line:5748:19, line:5750:2>
|   |   |-TextComment 0x55887c3c6c10 <line:5748:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3c6c30 <line:5749:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3c6c50 <line:5750:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c6cb0 <col:3, line:5752:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3c6d90 <line:5750:17, line:5752:2>
|   |   |-TextComment 0x55887c3c6d10 <line:5750:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3c6d30 <line:5751:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3c6d50 <line:5752:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c6db0 <col:3, col:69> [in] implicitly Param="OrData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3c6e40 <col:17, col:69>
|   |   `-TextComment 0x55887c3c6e10 <col:17, col:69> Text="    The value to OR with the read value from the MSR."
|   |-ParagraphComment 0x55887c3c6e90 <line:5754:1, col:2>
|   | `-TextComment 0x55887c3c6e60 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c6eb0 <col:3, col:59> Name="return"
|     `-ParagraphComment 0x55887c3c6f10 <col:10, col:59>
|       `-TextComment 0x55887c3c6ee0 <col:10, col:59> Text=" The lower 32-bit of the value written to the MSR."
|-FunctionDecl 0x55887c1500e8 <line:5793:1, line:5800:3> line:5795:1 AsmMsrBitFieldAnd32 'UINT32 (UINT32, UINTN, UINTN, UINT32)'
| |-ParmVarDecl 0x55887c14fed8 <line:5796:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c14ff50 <line:5797:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c14ffc8 <line:5798:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c150040 <line:5799:11, col:19> col:19 AndData 'UINT32':'unsigned int'
| `-FullComment 0x55887c3c7760 <line:5767:1, line:5790:59>
|   |-ParagraphComment 0x55887c3c7050 <line:5767:1, line:5768:49>
|   | |-TextComment 0x55887c3c6ff0 <line:5767:1, col:75> Text="  Reads a bit field in a 64-bit MSR, performs a bitwise AND, and writes the"
|   | `-TextComment 0x55887c3c7010 <line:5768:1, col:49> Text="  result back to the bit field in the 64-bit MSR."
|   |-ParagraphComment 0x55887c3c7190 <line:5770:1, line:5776:29>
|   | |-TextComment 0x55887c3c7070 <line:5770:1, col:77> Text="  Reads the 64-bit MSR specified by Index, performs a bitwise AND between the"
|   | |-TextComment 0x55887c3c7090 <line:5771:1, col:78> Text="  read result and the value specified by AndData, and writes the result to the"
|   | |-TextComment 0x55887c3c70b0 <line:5772:1, col:78> Text="  64-bit MSR specified by Index. The lower 32-bits of the value written to the"
|   | |-TextComment 0x55887c3c70d0 <line:5773:1, col:76> Text="  MSR are returned. Extra left bits in AndData are stripped. The caller must"
|   | |-TextComment 0x55887c3c70f0 <line:5774:1, col:79> Text="  either guarantee that Index and the data written is valid, or the caller must"
|   | |-TextComment 0x55887c3c7110 <line:5775:1, col:74> Text="  set up exception handlers to catch the exceptions. This function is only"
|   | `-TextComment 0x55887c3c7130 <line:5776:1, col:29> Text="  available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3c7250 <line:5778:1, line:5781:100>
|   | |-TextComment 0x55887c3c71b0 <line:5778:1, col:48> Text="  If StartBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3c71d0 <line:5779:1, col:46> Text="  If EndBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3c71f0 <line:5780:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3c7210 <line:5781:1, col:100> Text="  If AndData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3c72a0 <line:5783:1, col:2>
|   | `-TextComment 0x55887c3c7270 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c72c0 <col:3, line:5784:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c7370 <line:5783:16, line:5784:2>
|   |   |-TextComment 0x55887c3c7320 <line:5783:16, col:50> Text="     The 32-bit MSR index to write."
|   |   `-TextComment 0x55887c3c7340 <line:5784:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c7390 <col:3, line:5786:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3c7470 <line:5784:19, line:5786:2>
|   |   |-TextComment 0x55887c3c73f0 <line:5784:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3c7410 <line:5785:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3c7430 <line:5786:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c7490 <col:3, line:5788:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3c7570 <line:5786:17, line:5788:2>
|   |   |-TextComment 0x55887c3c74f0 <line:5786:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3c7510 <line:5787:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3c7530 <line:5788:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c7590 <col:3, col:70> [in] implicitly Param="AndData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3c7620 <col:18, col:70>
|   |   `-TextComment 0x55887c3c75f0 <col:18, col:70> Text="   The value to AND with the read value from the MSR."
|   |-ParagraphComment 0x55887c3c7670 <line:5790:1, col:2>
|   | `-TextComment 0x55887c3c7640 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c7690 <col:3, col:59> Name="return"
|     `-ParagraphComment 0x55887c3c76f0 <col:10, col:59>
|       `-TextComment 0x55887c3c76c0 <col:10, col:59> Text=" The lower 32-bit of the value written to the MSR."
|-FunctionDecl 0x55887c150478 <line:5833:1, line:5841:3> line:5835:1 AsmMsrBitFieldAndThenOr32 'UINT32 (UINT32, UINTN, UINTN, UINT32, UINT32)'
| |-ParmVarDecl 0x55887c1501e8 <line:5836:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c150260 <line:5837:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1502d8 <line:5838:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c150350 <line:5839:11, col:19> col:19 AndData 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c1503c8 <line:5840:11, col:19> col:19 OrData 'UINT32':'unsigned int'
| `-FullComment 0x55887c3c8090 <line:5803:1, line:5830:59>
|   |-ParagraphComment 0x55887c3c7850 <line:5803:1, line:5805:13>
|   | |-TextComment 0x55887c3c77d0 <line:5803:1, col:73> Text="  Reads a bit field in a 64-bit MSR, performs a bitwise AND followed by a"
|   | |-TextComment 0x55887c3c77f0 <line:5804:1, col:64> Text="  bitwise OR, and writes the result back to the bit field in the"
|   | `-TextComment 0x55887c3c7810 <line:5805:1, col:13> Text="  64-bit MSR."
|   |-ParagraphComment 0x55887c3c79b0 <line:5807:1, line:5814:10>
|   | |-TextComment 0x55887c3c7870 <line:5807:1, col:79> Text="  Reads the 64-bit MSR specified by Index, performs a bitwise AND followed by a"
|   | |-TextComment 0x55887c3c7890 <line:5808:1, col:63> Text="  bitwise OR between the read result and the value specified by"
|   | |-TextComment 0x55887c3c78b0 <line:5809:1, col:74> Text="  AndData, and writes the result to the 64-bit MSR specified by Index. The"
|   | |-TextComment 0x55887c3c78d0 <line:5810:1, col:77> Text="  lower 32-bits of the value written to the MSR are returned. Extra left bits"
|   | |-TextComment 0x55887c3c78f0 <line:5811:1, col:75> Text="  in both AndData and OrData are stripped. The caller must either guarantee"
|   | |-TextComment 0x55887c3c7910 <line:5812:1, col:79> Text="  that Index and the data written is valid, or the caller must set up exception"
|   | |-TextComment 0x55887c3c7930 <line:5813:1, col:76> Text="  handlers to catch the exceptions. This function is only available on IA-32"
|   | `-TextComment 0x55887c3c7950 <line:5814:1, col:10> Text="  and x64."
|   |-ParagraphComment 0x55887c3c7aa0 <line:5816:1, line:5820:99>
|   | |-TextComment 0x55887c3c79d0 <line:5816:1, col:48> Text="  If StartBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3c79f0 <line:5817:1, col:46> Text="  If EndBit is greater than 31, then ASSERT()."
|   | |-TextComment 0x55887c3c7a10 <line:5818:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | |-TextComment 0x55887c3c7a30 <line:5819:1, col:100> Text="  If AndData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   | `-TextComment 0x55887c3c7a50 <line:5820:1, col:99> Text="  If OrData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3c7af0 <line:5822:1, col:2>
|   | `-TextComment 0x55887c3c7ac0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c7b10 <col:3, line:5823:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c7bc0 <line:5822:16, line:5823:2>
|   |   |-TextComment 0x55887c3c7b70 <line:5822:16, col:50> Text="     The 32-bit MSR index to write."
|   |   `-TextComment 0x55887c3c7b90 <line:5823:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c7be0 <col:3, line:5825:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3c7cc0 <line:5823:19, line:5825:2>
|   |   |-TextComment 0x55887c3c7c40 <line:5823:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3c7c60 <line:5824:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3c7c80 <line:5825:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c7ce0 <col:3, line:5827:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3c7dc0 <line:5825:17, line:5827:2>
|   |   |-TextComment 0x55887c3c7d40 <line:5825:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3c7d60 <line:5826:1, col:32> Text="                    Range 0..31."
|   |   `-TextComment 0x55887c3c7d80 <line:5827:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c7de0 <col:3, line:5828:2> [in] implicitly Param="AndData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3c7e90 <line:5827:18, line:5828:2>
|   |   |-TextComment 0x55887c3c7e40 <line:5827:18, col:70> Text="   The value to AND with the read value from the MSR."
|   |   `-TextComment 0x55887c3c7e60 <line:5828:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c7eb0 <col:3, col:73> [in] implicitly Param="OrData" ParamIndex=4
|   | `-ParagraphComment 0x55887c3c7f40 <col:17, col:73>
|   |   `-TextComment 0x55887c3c7f10 <col:17, col:73> Text="    The value to OR with the result of the AND operation."
|   |-ParagraphComment 0x55887c3c7f90 <line:5830:1, col:2>
|   | `-TextComment 0x55887c3c7f60 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c7fb0 <col:3, col:59> Name="return"
|     `-ParagraphComment 0x55887c3c8010 <col:10, col:59>
|       `-TextComment 0x55887c3c7fe0 <col:10, col:59> Text=" The lower 32-bit of the value written to the MSR."
|-FunctionDecl 0x55887c1507d8 <line:5857:1, line:5861:3> line:5859:1 AsmReadMsr64 'UINT64 (UINT32)'
| |-ParmVarDecl 0x55887c150578 <line:5860:11, col:19> col:19 Index 'UINT32':'unsigned int'
| `-FullComment 0x55887c3c8440 <line:5844:1, line:5854:51>
|   |-ParagraphComment 0x55887c3c8130 <line:5844:1, col:50>
|   | `-TextComment 0x55887c3c8100 <col:1, col:50> Text="  Returns a 64-bit Machine Specific Register(MSR)."
|   |-ParagraphComment 0x55887c3c8220 <line:5846:1, line:5850:19>
|   | |-TextComment 0x55887c3c8150 <line:5846:1, col:79> Text="  Reads and returns the 64-bit MSR specified by Index. No parameter checking is"
|   | |-TextComment 0x55887c3c8170 <line:5847:1, col:73> Text="  performed on Index, and some Index values may cause CPU exceptions. The"
|   | |-TextComment 0x55887c3c8190 <line:5848:1, col:77> Text="  caller must either guarantee that Index is valid, or the caller must set up"
|   | |-TextComment 0x55887c3c81b0 <line:5849:1, col:77> Text="  exception handlers to catch the exceptions. This function is only available"
|   | `-TextComment 0x55887c3c81d0 <line:5850:1, col:19> Text="  on IA-32 and x64."
|   |-ParagraphComment 0x55887c3c8270 <line:5852:1, col:2>
|   | `-TextComment 0x55887c3c8240 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c8290 <col:3, col:45> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c8320 <col:16, col:45>
|   |   `-TextComment 0x55887c3c82f0 <col:16, col:45> Text=" The 32-bit MSR index to read."
|   |-ParagraphComment 0x55887c3c8370 <line:5854:1, col:2>
|   | `-TextComment 0x55887c3c8340 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c8390 <col:3, col:51> Name="return"
|     `-ParagraphComment 0x55887c3c83f0 <col:10, col:51>
|       `-TextComment 0x55887c3c83c0 <col:10, col:51> Text=" The value of the MSR identified by Index."
|-FunctionDecl 0x55887c150a48 <line:5880:1, line:5885:3> line:5882:1 AsmWriteMsr64 'UINT64 (UINT32, UINT64)'
| |-ParmVarDecl 0x55887c1508b8 <line:5883:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c150930 <line:5884:11, col:19> col:19 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3c8910 <line:5864:1, line:5877:15>
|   |-ParagraphComment 0x55887c3c8500 <line:5864:1, line:5865:8>
|   | |-TextComment 0x55887c3c84b0 <line:5864:1, col:76> Text="  Writes a 64-bit value to a Machine Specific Register(MSR), and returns the"
|   | `-TextComment 0x55887c3c84d0 <line:5865:1, col:8> Text="  value."
|   |-ParagraphComment 0x55887c3c8610 <line:5867:1, line:5872:16>
|   | |-TextComment 0x55887c3c8520 <line:5867:1, col:79> Text="  Writes the 64-bit value specified by Value to the MSR specified by Index. The"
|   | |-TextComment 0x55887c3c8540 <line:5868:1, col:71> Text="  64-bit value written to the MSR is returned. No parameter checking is"
|   | |-TextComment 0x55887c3c8560 <line:5869:1, col:78> Text="  performed on Index or Value, and some of these may cause CPU exceptions. The"
|   | |-TextComment 0x55887c3c8580 <line:5870:1, col:76> Text="  caller must either guarantee that Index and Value are valid, or the caller"
|   | |-TextComment 0x55887c3c85a0 <line:5871:1, col:78> Text="  must establish proper exception handlers. This function is only available on"
|   | `-TextComment 0x55887c3c85c0 <line:5872:1, col:16> Text="  IA-32 and x64."
|   |-ParagraphComment 0x55887c3c8660 <line:5874:1, col:2>
|   | `-TextComment 0x55887c3c8630 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c8680 <col:3, line:5875:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c8730 <line:5874:16, line:5875:2>
|   |   |-TextComment 0x55887c3c86e0 <line:5874:16, col:46> Text=" The 32-bit MSR index to write."
|   |   `-TextComment 0x55887c3c8700 <line:5875:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c8750 <col:3, col:53> [in] implicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c3c87e0 <col:16, col:53>
|   |   `-TextComment 0x55887c3c87b0 <col:16, col:53> Text=" The 64-bit value to write to the MSR."
|   |-ParagraphComment 0x55887c3c8830 <line:5877:1, col:2>
|   | `-TextComment 0x55887c3c8800 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c8850 <col:3, col:15> Name="return"
|     `-ParagraphComment 0x55887c3c88b0 <col:10, col:15>
|       `-TextComment 0x55887c3c8880 <col:10, col:15> Text=" Value"
|-FunctionDecl 0x55887c150c48 <line:5905:1, line:5910:3> line:5907:1 AsmMsrOr64 'UINT64 (UINT32, UINT64)'
| |-ParmVarDecl 0x55887c150b38 <line:5908:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c150bb0 <line:5909:11, col:19> col:19 OrData 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3c8e10 <line:5888:1, line:5902:44>
|   |-ParagraphComment 0x55887c3c89d0 <line:5888:1, line:5889:25>
|   | |-TextComment 0x55887c3c8980 <line:5888:1, col:66> Text="  Reads a 64-bit MSR, performs a bitwise OR, and writes the result"
|   | `-TextComment 0x55887c3c89a0 <line:5889:1, col:25> Text="  back to the 64-bit MSR."
|   |-ParagraphComment 0x55887c3c8b10 <line:5891:1, line:5897:51>
|   | |-TextComment 0x55887c3c89f0 <line:5891:1, col:64> Text="  Reads the 64-bit MSR specified by Index, performs a bitwise OR"
|   | |-TextComment 0x55887c3c8a10 <line:5892:1, col:75> Text="  between the read result and the value specified by OrData, and writes the"
|   | |-TextComment 0x55887c3c8a30 <line:5893:1, col:78> Text="  result to the 64-bit MSR specified by Index. The value written to the MSR is"
|   | |-TextComment 0x55887c3c8a50 <line:5894:1, col:78> Text="  returned. No parameter checking is performed on Index or OrData, and some of"
|   | |-TextComment 0x55887c3c8a70 <line:5895:1, col:77> Text="  these may cause CPU exceptions. The caller must either guarantee that Index"
|   | |-TextComment 0x55887c3c8a90 <line:5896:1, col:79> Text="  and OrData are valid, or the caller must establish proper exception handlers."
|   | `-TextComment 0x55887c3c8ab0 <line:5897:1, col:51> Text="  This function is only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3c8b60 <line:5899:1, col:2>
|   | `-TextComment 0x55887c3c8b30 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c8b80 <col:3, line:5900:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c8c30 <line:5899:16, line:5900:2>
|   |   |-TextComment 0x55887c3c8be0 <line:5899:16, col:48> Text="   The 32-bit MSR index to write."
|   |   `-TextComment 0x55887c3c8c00 <line:5900:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c8c50 <col:3, col:67> [in] implicitly Param="OrData" ParamIndex=1
|   | `-ParagraphComment 0x55887c3c8ce0 <col:17, col:67>
|   |   `-TextComment 0x55887c3c8cb0 <col:17, col:67> Text="  The value to OR with the read value from the MSR."
|   |-ParagraphComment 0x55887c3c8d30 <line:5902:1, col:2>
|   | `-TextComment 0x55887c3c8d00 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c8d50 <col:3, col:44> Name="return"
|     `-ParagraphComment 0x55887c3c8db0 <col:10, col:44>
|       `-TextComment 0x55887c3c8d80 <col:10, col:44> Text=" The value written back to the MSR."
|-FunctionDecl 0x55887c150e48 <line:5930:1, line:5935:3> line:5932:1 AsmMsrAnd64 'UINT64 (UINT32, UINT64)'
| |-ParmVarDecl 0x55887c150d38 <line:5933:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c150db0 <line:5934:11, col:19> col:19 AndData 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3c9310 <line:5913:1, line:5927:44>
|   |-ParagraphComment 0x55887c3c8ed0 <line:5913:1, line:5914:13>
|   | |-TextComment 0x55887c3c8e80 <line:5913:1, col:79> Text="  Reads a 64-bit MSR, performs a bitwise AND, and writes the result back to the"
|   | `-TextComment 0x55887c3c8ea0 <line:5914:1, col:13> Text="  64-bit MSR."
|   |-ParagraphComment 0x55887c3c9010 <line:5916:1, line:5922:46>
|   | |-TextComment 0x55887c3c8ef0 <line:5916:1, col:77> Text="  Reads the 64-bit MSR specified by Index, performs a bitwise AND between the"
|   | |-TextComment 0x55887c3c8f10 <line:5917:1, col:77> Text="  read result and the value specified by OrData, and writes the result to the"
|   | |-TextComment 0x55887c3c8f30 <line:5918:1, col:77> Text="  64-bit MSR specified by Index. The value written to the MSR is returned. No"
|   | |-TextComment 0x55887c3c8f50 <line:5919:1, col:75> Text="  parameter checking is performed on Index or OrData, and some of these may"
|   | |-TextComment 0x55887c3c8f70 <line:5920:1, col:78> Text="  cause CPU exceptions. The caller must either guarantee that Index and OrData"
|   | |-TextComment 0x55887c3c8f90 <line:5921:1, col:73> Text="  are valid, or the caller must establish proper exception handlers. This"
|   | `-TextComment 0x55887c3c8fb0 <line:5922:1, col:46> Text="  function is only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3c9060 <line:5924:1, col:2>
|   | `-TextComment 0x55887c3c9030 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c9080 <col:3, line:5925:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c9130 <line:5924:16, line:5925:2>
|   |   |-TextComment 0x55887c3c90e0 <line:5924:16, col:48> Text="   The 32-bit MSR index to write."
|   |   `-TextComment 0x55887c3c9100 <line:5925:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c9150 <col:3, col:68> [in] implicitly Param="AndData" ParamIndex=1
|   | `-ParagraphComment 0x55887c3c91e0 <col:18, col:68>
|   |   `-TextComment 0x55887c3c91b0 <col:18, col:68> Text=" The value to AND with the read value from the MSR."
|   |-ParagraphComment 0x55887c3c9230 <line:5927:1, col:2>
|   | `-TextComment 0x55887c3c9200 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c9250 <col:3, col:44> Name="return"
|     `-ParagraphComment 0x55887c3c92b0 <col:10, col:44>
|       `-TextComment 0x55887c3c9280 <col:10, col:44> Text=" The value written back to the MSR."
|-FunctionDecl 0x55887c151148 <line:5958:1, line:5964:3> line:5960:1 AsmMsrAndThenOr64 'UINT64 (UINT32, UINT64, UINT64)'
| |-ParmVarDecl 0x55887c150f38 <line:5961:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c150fb0 <line:5962:11, col:19> col:19 AndData 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c151028 <line:5963:11, col:19> col:19 OrData 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3c9930 <line:5938:1, line:5955:44>
|   |-ParagraphComment 0x55887c3c93d0 <line:5938:1, line:5939:51>
|   | |-TextComment 0x55887c3c9380 <line:5938:1, col:66> Text="  Reads a 64-bit MSR, performs a bitwise AND followed by a bitwise"
|   | `-TextComment 0x55887c3c93a0 <line:5939:1, col:51> Text="  OR, and writes the result back to the 64-bit MSR."
|   |-ParagraphComment 0x55887c3c9560 <line:5941:1, line:5949:10>
|   | |-TextComment 0x55887c3c93f0 <line:5941:1, col:78> Text="  Reads the 64-bit MSR specified by Index, performs a bitwise AND between read"
|   | |-TextComment 0x55887c3c9410 <line:5942:1, col:66> Text="  result and the value specified by AndData, performs a bitwise OR"
|   | |-TextComment 0x55887c3c9430 <line:5943:1, col:76> Text="  between the result of the AND operation and the value specified by OrData,"
|   | |-TextComment 0x55887c3c9450 <line:5944:1, col:79> Text="  and writes the result to the 64-bit MSR specified by Index. The value written"
|   | |-TextComment 0x55887c3c9470 <line:5945:1, col:79> Text="  to the MSR is returned. No parameter checking is performed on Index, AndData,"
|   | |-TextComment 0x55887c3c9490 <line:5946:1, col:79> Text="  or OrData, and some of these may cause CPU exceptions. The caller must either"
|   | |-TextComment 0x55887c3c94b0 <line:5947:1, col:73> Text="  guarantee that Index, AndData, and OrData are valid, or the caller must"
|   | |-TextComment 0x55887c3c94d0 <line:5948:1, col:79> Text="  establish proper exception handlers. This function is only available on IA-32"
|   | `-TextComment 0x55887c3c94f0 <line:5949:1, col:10> Text="  and x64."
|   |-ParagraphComment 0x55887c3c95b0 <line:5951:1, col:2>
|   | `-TextComment 0x55887c3c9580 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c95d0 <col:3, line:5952:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c9680 <line:5951:16, line:5952:2>
|   |   |-TextComment 0x55887c3c9630 <line:5951:16, col:48> Text="   The 32-bit MSR index to write."
|   |   `-TextComment 0x55887c3c9650 <line:5952:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c96a0 <col:3, line:5953:2> [in] implicitly Param="AndData" ParamIndex=1
|   | `-ParagraphComment 0x55887c3c9750 <line:5952:18, line:5953:2>
|   |   |-TextComment 0x55887c3c9700 <line:5952:18, col:68> Text=" The value to AND with the read value from the MSR."
|   |   `-TextComment 0x55887c3c9720 <line:5953:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c9770 <col:3, col:71> [in] implicitly Param="OrData" ParamIndex=2
|   | `-ParagraphComment 0x55887c3c9800 <col:17, col:71>
|   |   `-TextComment 0x55887c3c97d0 <col:17, col:71> Text="  The value to OR with the result of the AND operation."
|   |-ParagraphComment 0x55887c3c9850 <line:5955:1, col:2>
|   | `-TextComment 0x55887c3c9820 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c9870 <col:3, col:44> Name="return"
|     `-ParagraphComment 0x55887c3c98d0 <col:10, col:44>
|       `-TextComment 0x55887c3c98a0 <col:10, col:44> Text=" The value written back to the MSR."
|-FunctionDecl 0x55887c151408 <line:5988:1, line:5994:3> line:5990:1 AsmMsrBitFieldRead64 'UINT64 (UINT32, UINTN, UINTN)'
| |-ParmVarDecl 0x55887c151238 <line:5991:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c1512b0 <line:5992:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c151328 <line:5993:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3c9f90 <line:5967:1, line:5985:38>
|   |-ParagraphComment 0x55887c3c99d0 <line:5967:1, col:30>
|   | `-TextComment 0x55887c3c99a0 <col:1, col:30> Text="  Reads a bit field of an MSR."
|   |-ParagraphComment 0x55887c3c9ac0 <line:5969:1, line:5973:19>
|   | |-TextComment 0x55887c3c99f0 <line:5969:1, col:74> Text="  Reads the bit field in the 64-bit MSR. The bit field is specified by the"
|   | |-TextComment 0x55887c3c9a10 <line:5970:1, col:77> Text="  StartBit and the EndBit. The value of the bit field is returned. The caller"
|   | |-TextComment 0x55887c3c9a30 <line:5971:1, col:70> Text="  must either guarantee that Index is valid, or the caller must set up"
|   | |-TextComment 0x55887c3c9a50 <line:5972:1, col:77> Text="  exception handlers to catch the exceptions. This function is only available"
|   | `-TextComment 0x55887c3c9a70 <line:5973:1, col:19> Text="  on IA-32 and x64."
|   |-ParagraphComment 0x55887c3c9b60 <line:5975:1, line:5977:49>
|   | |-TextComment 0x55887c3c9ae0 <line:5975:1, col:48> Text="  If StartBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3c9b00 <line:5976:1, col:46> Text="  If EndBit is greater than 63, then ASSERT()."
|   | `-TextComment 0x55887c3c9b20 <line:5977:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3c9bb0 <line:5979:1, col:2>
|   | `-TextComment 0x55887c3c9b80 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c9bd0 <col:3, line:5980:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3c9c80 <line:5979:16, line:5980:2>
|   |   |-TextComment 0x55887c3c9c30 <line:5979:16, col:49> Text="     The 32-bit MSR index to read."
|   |   `-TextComment 0x55887c3c9c50 <line:5980:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c9ca0 <col:3, line:5982:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3c9d80 <line:5980:19, line:5982:2>
|   |   |-TextComment 0x55887c3c9d00 <line:5980:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3c9d20 <line:5981:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3c9d40 <line:5982:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3c9da0 <col:3, line:5983:32> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3c9e50 <line:5982:17, line:5983:32>
|   |   |-TextComment 0x55887c3c9e00 <line:5982:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   `-TextComment 0x55887c3c9e20 <line:5983:1, col:32> Text="                    Range 0..63."
|   |-ParagraphComment 0x55887c3c9ea0 <line:5985:1, col:2>
|   | `-TextComment 0x55887c3c9e70 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3c9ec0 <col:3, col:38> Name="return"
|     `-ParagraphComment 0x55887c3c9f20 <col:10, col:38>
|       `-TextComment 0x55887c3c9ef0 <col:10, col:38> Text=" The value read from the MSR."
|-FunctionDecl 0x55887c151950 <line:6020:1, line:6027:3> line:6022:1 AsmMsrBitFieldWrite64 'UINT64 (UINT32, UINTN, UINTN, UINT64)'
| |-ParmVarDecl 0x55887c1514f8 <line:6023:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c151570 <line:6024:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1515e8 <line:6025:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c151660 <line:6026:11, col:19> col:19 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3ca6f0 <line:5997:1, line:6017:44>
|   |-ParagraphComment 0x55887c3ca030 <line:5997:1, col:31>
|   | `-TextComment 0x55887c3ca000 <col:1, col:31> Text="  Writes a bit field to an MSR."
|   |-ParagraphComment 0x55887c3ca120 <line:5999:1, line:6003:85>
|   | |-TextComment 0x55887c3ca050 <line:5999:1, col:76> Text="  Writes Value to a bit field in a 64-bit MSR. The bit field is specified by"
|   | |-TextComment 0x55887c3ca070 <line:6000:1, col:72> Text="  the StartBit and the EndBit. All other bits in the destination MSR are"
|   | |-TextComment 0x55887c3ca090 <line:6001:1, col:74> Text="  preserved. The MSR written is returned. The caller must either guarantee"
|   | |-TextComment 0x55887c3ca0b0 <line:6002:1, col:79> Text="  that Index and the data written is valid, or the caller must set up exception"
|   | `-TextComment 0x55887c3ca0d0 <line:6003:1, col:85> Text="  handlers to catch the exceptions. This function is only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3ca1e0 <line:6005:1, line:6008:98>
|   | |-TextComment 0x55887c3ca140 <line:6005:1, col:48> Text="  If StartBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3ca160 <line:6006:1, col:46> Text="  If EndBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3ca180 <line:6007:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3ca1a0 <line:6008:1, col:98> Text="  If Value is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3ca230 <line:6010:1, col:2>
|   | `-TextComment 0x55887c3ca200 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ca250 <col:3, line:6011:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3ca300 <line:6010:16, line:6011:2>
|   |   |-TextComment 0x55887c3ca2b0 <line:6010:16, col:50> Text="     The 32-bit MSR index to write."
|   |   `-TextComment 0x55887c3ca2d0 <line:6011:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ca320 <col:3, line:6013:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3ca400 <line:6011:19, line:6013:2>
|   |   |-TextComment 0x55887c3ca380 <line:6011:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3ca3a0 <line:6012:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3ca3c0 <line:6013:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ca420 <col:3, line:6015:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3ca500 <line:6013:17, line:6015:2>
|   |   |-TextComment 0x55887c3ca480 <line:6013:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3ca4a0 <line:6014:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3ca4c0 <line:6015:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ca520 <col:3, col:47> [in] implicitly Param="Value" ParamIndex=3
|   | `-ParagraphComment 0x55887c3ca5b0 <col:16, col:47>
|   |   `-TextComment 0x55887c3ca580 <col:16, col:47> Text="     New value of the bit field."
|   |-ParagraphComment 0x55887c3ca600 <line:6017:1, col:2>
|   | `-TextComment 0x55887c3ca5d0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ca620 <col:3, col:44> Name="return"
|     `-ParagraphComment 0x55887c3ca680 <col:10, col:44>
|       `-TextComment 0x55887c3ca650 <col:10, col:44> Text=" The value written back to the MSR."
|-FunctionDecl 0x55887c151c58 <line:6056:1, line:6063:3> line:6058:1 AsmMsrBitFieldOr64 'UINT64 (UINT32, UINTN, UINTN, UINT64)'
| |-ParmVarDecl 0x55887c151a48 <line:6059:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c151ac0 <line:6060:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c151b38 <line:6061:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c151bb0 <line:6062:11, col:19> col:19 OrData 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3caec0 <line:6030:1, line:6053:44>
|   |-ParagraphComment 0x55887c3ca7b0 <line:6030:1, line:6031:60>
|   | |-TextComment 0x55887c3ca760 <line:6030:1, col:63> Text="  Reads a bit field in a 64-bit MSR, performs a bitwise OR, and"
|   | `-TextComment 0x55887c3ca780 <line:6031:1, col:60> Text="  writes the result back to the bit field in the 64-bit MSR."
|   |-ParagraphComment 0x55887c3ca8f0 <line:6033:1, line:6039:19>
|   | |-TextComment 0x55887c3ca7d0 <line:6033:1, col:64> Text="  Reads the 64-bit MSR specified by Index, performs a bitwise OR"
|   | |-TextComment 0x55887c3ca7f0 <line:6034:1, col:75> Text="  between the read result and the value specified by OrData, and writes the"
|   | |-TextComment 0x55887c3ca810 <line:6035:1, col:78> Text="  result to the 64-bit MSR specified by Index. The value written to the MSR is"
|   | |-TextComment 0x55887c3ca830 <line:6036:1, col:74> Text="  returned. Extra left bits in OrData are stripped. The caller must either"
|   | |-TextComment 0x55887c3ca850 <line:6037:1, col:79> Text="  guarantee that Index and the data written is valid, or the caller must set up"
|   | |-TextComment 0x55887c3ca870 <line:6038:1, col:77> Text="  exception handlers to catch the exceptions. This function is only available"
|   | `-TextComment 0x55887c3ca890 <line:6039:1, col:19> Text="  on IA-32 and x64."
|   |-ParagraphComment 0x55887c3ca9b0 <line:6041:1, line:6044:99>
|   | |-TextComment 0x55887c3ca910 <line:6041:1, col:48> Text="  If StartBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3ca930 <line:6042:1, col:46> Text="  If EndBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3ca950 <line:6043:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3ca970 <line:6044:1, col:99> Text="  If OrData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3caa00 <line:6046:1, col:2>
|   | `-TextComment 0x55887c3ca9d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3caa20 <col:3, line:6047:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3caad0 <line:6046:16, line:6047:2>
|   |   |-TextComment 0x55887c3caa80 <line:6046:16, col:50> Text="     The 32-bit MSR index to write."
|   |   `-TextComment 0x55887c3caaa0 <line:6047:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3caaf0 <col:3, line:6049:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3cabd0 <line:6047:19, line:6049:2>
|   |   |-TextComment 0x55887c3cab50 <line:6047:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3cab70 <line:6048:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3cab90 <line:6049:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cabf0 <col:3, line:6051:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3cacd0 <line:6049:17, line:6051:2>
|   |   |-TextComment 0x55887c3cac50 <line:6049:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3cac70 <line:6050:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3cac90 <line:6051:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cacf0 <col:3, col:75> [in] implicitly Param="OrData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3cad80 <col:17, col:75>
|   |   `-TextComment 0x55887c3cad50 <col:17, col:75> Text="    The value to OR with the read value from the bit field."
|   |-ParagraphComment 0x55887c3cadd0 <line:6053:1, col:2>
|   | `-TextComment 0x55887c3cada0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cadf0 <col:3, col:44> Name="return"
|     `-ParagraphComment 0x55887c3cae50 <col:10, col:44>
|       `-TextComment 0x55887c3cae20 <col:10, col:44> Text=" The value written back to the MSR."
|-FunctionDecl 0x55887c151f68 <line:6092:1, line:6099:3> line:6094:1 AsmMsrBitFieldAnd64 'UINT64 (UINT32, UINTN, UINTN, UINT64)'
| |-ParmVarDecl 0x55887c151d58 <line:6095:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c151dd0 <line:6096:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c151e48 <line:6097:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c151ec0 <line:6098:11, col:19> col:19 AndData 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3cb6b0 <line:6066:1, line:6089:44>
|   |-ParagraphComment 0x55887c3caf80 <line:6066:1, line:6067:49>
|   | |-TextComment 0x55887c3caf30 <line:6066:1, col:75> Text="  Reads a bit field in a 64-bit MSR, performs a bitwise AND, and writes the"
|   | `-TextComment 0x55887c3caf50 <line:6067:1, col:49> Text="  result back to the bit field in the 64-bit MSR."
|   |-ParagraphComment 0x55887c3cb0e0 <line:6069:1, line:6075:10>
|   | |-TextComment 0x55887c3cafa0 <line:6069:1, col:77> Text="  Reads the 64-bit MSR specified by Index, performs a bitwise AND between the"
|   | |-TextComment 0x55887c3cafc0 <line:6070:1, col:78> Text="  read result and the value specified by AndData, and writes the result to the"
|   | |-TextComment 0x55887c3cafe0 <line:6071:1, col:74> Text="  64-bit MSR specified by Index. The value written to the MSR is returned."
|   | |-TextComment 0x55887c3cb000 <line:6072:1, col:75> Text="  Extra left bits in AndData are stripped. The caller must either guarantee"
|   | |-TextComment 0x55887c3cb020 <line:6073:1, col:79> Text="  that Index and the data written is valid, or the caller must set up exception"
|   | |-TextComment 0x55887c3cb060 <line:6074:1, col:76> Text="  handlers to catch the exceptions. This function is only available on IA-32"
|   | `-TextComment 0x55887c3cb080 <line:6075:1, col:10> Text="  and x64."
|   |-ParagraphComment 0x55887c3cb1a0 <line:6077:1, line:6080:100>
|   | |-TextComment 0x55887c3cb100 <line:6077:1, col:48> Text="  If StartBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3cb120 <line:6078:1, col:46> Text="  If EndBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3cb140 <line:6079:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | `-TextComment 0x55887c3cb160 <line:6080:1, col:100> Text="  If AndData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3cb1f0 <line:6082:1, col:2>
|   | `-TextComment 0x55887c3cb1c0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cb210 <col:3, line:6083:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3cb2c0 <line:6082:16, line:6083:2>
|   |   |-TextComment 0x55887c3cb270 <line:6082:16, col:50> Text="     The 32-bit MSR index to write."
|   |   `-TextComment 0x55887c3cb290 <line:6083:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cb2e0 <col:3, line:6085:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3cb3c0 <line:6083:19, line:6085:2>
|   |   |-TextComment 0x55887c3cb340 <line:6083:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3cb360 <line:6084:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3cb380 <line:6085:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cb3e0 <col:3, line:6087:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3cb4c0 <line:6085:17, line:6087:2>
|   |   |-TextComment 0x55887c3cb440 <line:6085:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3cb460 <line:6086:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3cb480 <line:6087:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cb4e0 <col:3, col:76> [in] implicitly Param="AndData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3cb570 <col:18, col:76>
|   |   `-TextComment 0x55887c3cb540 <col:18, col:76> Text="   The value to AND with the read value from the bit field."
|   |-ParagraphComment 0x55887c3cb5c0 <line:6089:1, col:2>
|   | `-TextComment 0x55887c3cb590 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cb5e0 <col:3, col:44> Name="return"
|     `-ParagraphComment 0x55887c3cb640 <col:10, col:44>
|       `-TextComment 0x55887c3cb610 <col:10, col:44> Text=" The value written back to the MSR."
|-FunctionDecl 0x55887c152398 <line:6131:1, line:6139:3> line:6133:1 AsmMsrBitFieldAndThenOr64 'UINT64 (UINT32, UINTN, UINTN, UINT64, UINT64)'
| |-ParmVarDecl 0x55887c152068 <line:6134:11, col:19> col:19 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c1520e0 <line:6135:11, col:19> col:19 StartBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c152158 <line:6136:11, col:19> col:19 EndBit 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1521d0 <line:6137:11, col:19> col:19 AndData 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c152248 <line:6138:11, col:19> col:19 OrData 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3cbfc0 <line:6102:1, line:6128:44>
|   |-ParagraphComment 0x55887c3cb7a0 <line:6102:1, line:6104:13>
|   | |-TextComment 0x55887c3cb720 <line:6102:1, col:73> Text="  Reads a bit field in a 64-bit MSR, performs a bitwise AND followed by a"
|   | |-TextComment 0x55887c3cb740 <line:6103:1, col:64> Text="  bitwise OR, and writes the result back to the bit field in the"
|   | `-TextComment 0x55887c3cb760 <line:6104:1, col:13> Text="  64-bit MSR."
|   |-ParagraphComment 0x55887c3cb8e0 <line:6106:1, line:6112:63>
|   | |-TextComment 0x55887c3cb7c0 <line:6106:1, col:77> Text="  Reads the 64-bit MSR specified by Index, performs a bitwise AND followed by"
|   | |-TextComment 0x55887c3cb7e0 <line:6107:1, col:65> Text="  a bitwise OR between the read result and the value specified by"
|   | |-TextComment 0x55887c3cb800 <line:6108:1, col:74> Text="  AndData, and writes the result to the 64-bit MSR specified by Index. The"
|   | |-TextComment 0x55887c3cb820 <line:6109:1, col:75> Text="  value written to the MSR is returned. Extra left bits in both AndData and"
|   | |-TextComment 0x55887c3cb840 <line:6110:1, col:79> Text="  OrData are stripped. The caller must either guarantee that Index and the data"
|   | |-TextComment 0x55887c3cb860 <line:6111:1, col:77> Text="  written is valid, or the caller must set up exception handlers to catch the"
|   | `-TextComment 0x55887c3cb880 <line:6112:1, col:63> Text="  exceptions. This function is only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3cb9d0 <line:6114:1, line:6118:99>
|   | |-TextComment 0x55887c3cb900 <line:6114:1, col:48> Text="  If StartBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3cb920 <line:6115:1, col:46> Text="  If EndBit is greater than 63, then ASSERT()."
|   | |-TextComment 0x55887c3cb940 <line:6116:1, col:49> Text="  If EndBit is less than StartBit, then ASSERT()."
|   | |-TextComment 0x55887c3cb960 <line:6117:1, col:100> Text="  If AndData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   | `-TextComment 0x55887c3cb980 <line:6118:1, col:99> Text="  If OrData is larger than the bitmask value range specified by StartBit and EndBit, then ASSERT()."
|   |-ParagraphComment 0x55887c3cba20 <line:6120:1, col:2>
|   | `-TextComment 0x55887c3cb9f0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cba40 <col:3, line:6121:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3cbaf0 <line:6120:16, line:6121:2>
|   |   |-TextComment 0x55887c3cbaa0 <line:6120:16, col:50> Text="     The 32-bit MSR index to write."
|   |   `-TextComment 0x55887c3cbac0 <line:6121:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cbb10 <col:3, line:6123:2> [in] implicitly Param="StartBit" ParamIndex=1
|   | `-ParagraphComment 0x55887c3cbbf0 <line:6121:19, line:6123:2>
|   |   |-TextComment 0x55887c3cbb70 <line:6121:19, col:78> Text="  The ordinal of the least significant bit in the bit field."
|   |   |-TextComment 0x55887c3cbb90 <line:6122:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3cbbb0 <line:6123:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cbc10 <col:3, line:6125:2> [in] implicitly Param="EndBit" ParamIndex=2
|   | `-ParagraphComment 0x55887c3cbcf0 <line:6123:17, line:6125:2>
|   |   |-TextComment 0x55887c3cbc70 <line:6123:17, col:77> Text="    The ordinal of the most significant bit in the bit field."
|   |   |-TextComment 0x55887c3cbc90 <line:6124:1, col:32> Text="                    Range 0..63."
|   |   `-TextComment 0x55887c3cbcb0 <line:6125:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cbd10 <col:3, line:6126:2> [in] implicitly Param="AndData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3cbdc0 <line:6125:18, line:6126:2>
|   |   |-TextComment 0x55887c3cbd70 <line:6125:18, col:76> Text="   The value to AND with the read value from the bit field."
|   |   `-TextComment 0x55887c3cbd90 <line:6126:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cbde0 <col:3, col:73> [in] implicitly Param="OrData" ParamIndex=4
|   | `-ParagraphComment 0x55887c3cbe70 <col:17, col:73>
|   |   `-TextComment 0x55887c3cbe40 <col:17, col:73> Text="    The value to OR with the result of the AND operation."
|   |-ParagraphComment 0x55887c3cbec0 <line:6128:1, col:2>
|   | `-TextComment 0x55887c3cbe90 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cbee0 <col:3, col:44> Name="return"
|     `-ParagraphComment 0x55887c3cbf40 <col:10, col:44>
|       `-TextComment 0x55887c3cbf10 <col:10, col:44> Text=" The value written back to the MSR."
|-FunctionDecl 0x55887c152578 <line:6151:1, line:6155:3> line:6153:1 AsmReadEflags 'UINTN (void)'
| `-FullComment 0x55887c3cc210 <line:6142:1, line:6148:43>
|   |-ParagraphComment 0x55887c3cc060 <line:6142:1, col:49>
|   | `-TextComment 0x55887c3cc030 <col:1, col:49> Text="  Reads the current value of the EFLAGS register."
|   |-ParagraphComment 0x55887c3cc100 <line:6144:1, line:6146:22>
|   | |-TextComment 0x55887c3cc080 <line:6144:1, col:78> Text="  Reads and returns the current value of the EFLAGS register. This function is"
|   | |-TextComment 0x55887c3cc0a0 <line:6145:1, col:77> Text="  only available on IA-32 and x64. This returns a 32-bit value on IA-32 and a"
|   | `-TextComment 0x55887c3cc0c0 <line:6146:1, col:22> Text="  64-bit value on x64."
|   |-ParagraphComment 0x55887c3cc150 <line:6148:1, col:2>
|   | `-TextComment 0x55887c3cc120 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cc170 <col:3, col:43> Name="return"
|     `-ParagraphComment 0x55887c3cc1d0 <col:10, col:43>
|       `-TextComment 0x55887c3cc1a0 <col:10, col:43> Text=" EFLAGS on IA-32 or RFLAGS on x64."
|-FunctionDecl 0x55887c1526e0 <line:6167:1, line:6171:3> line:6169:1 AsmReadCr0 'UINTN (void)'
| `-FullComment 0x55887c3cc460 <line:6158:1, line:6164:52>
|   |-ParagraphComment 0x55887c3cc2b0 <line:6158:1, col:58>
|   | `-TextComment 0x55887c3cc280 <col:1, col:58> Text="  Reads the current value of the Control Register 0 (CR0)."
|   |-ParagraphComment 0x55887c3cc350 <line:6160:1, line:6162:6>
|   | |-TextComment 0x55887c3cc2d0 <line:6160:1, col:77> Text="  Reads and returns the current value of CR0. This function is only available"
|   | |-TextComment 0x55887c3cc2f0 <line:6161:1, col:78> Text="  on IA-32 and x64. This returns a 32-bit value on IA-32 and a 64-bit value on"
|   | `-TextComment 0x55887c3cc310 <line:6162:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3cc3a0 <line:6164:1, col:2>
|   | `-TextComment 0x55887c3cc370 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cc3c0 <col:3, col:52> Name="return"
|     `-ParagraphComment 0x55887c3cc420 <col:10, col:52>
|       `-TextComment 0x55887c3cc3f0 <col:10, col:52> Text=" The value of the Control Register 0 (CR0)."
|-FunctionDecl 0x55887c152840 <line:6183:1, line:6187:3> line:6185:1 AsmReadCr2 'UINTN (void)'
| `-FullComment 0x55887c3cc6b0 <line:6174:1, line:6180:52>
|   |-ParagraphComment 0x55887c3cc500 <line:6174:1, col:58>
|   | `-TextComment 0x55887c3cc4d0 <col:1, col:58> Text="  Reads the current value of the Control Register 2 (CR2)."
|   |-ParagraphComment 0x55887c3cc5a0 <line:6176:1, line:6178:6>
|   | |-TextComment 0x55887c3cc520 <line:6176:1, col:77> Text="  Reads and returns the current value of CR2. This function is only available"
|   | |-TextComment 0x55887c3cc540 <line:6177:1, col:78> Text="  on IA-32 and x64. This returns a 32-bit value on IA-32 and a 64-bit value on"
|   | `-TextComment 0x55887c3cc560 <line:6178:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3cc5f0 <line:6180:1, col:2>
|   | `-TextComment 0x55887c3cc5c0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cc610 <col:3, col:52> Name="return"
|     `-ParagraphComment 0x55887c3cc670 <col:10, col:52>
|       `-TextComment 0x55887c3cc640 <col:10, col:52> Text=" The value of the Control Register 2 (CR2)."
|-FunctionDecl 0x55887c152b78 <line:6199:1, line:6203:3> line:6201:1 AsmReadCr3 'UINTN (void)'
| `-FullComment 0x55887c3cc900 <line:6190:1, line:6196:52>
|   |-ParagraphComment 0x55887c3cc750 <line:6190:1, col:58>
|   | `-TextComment 0x55887c3cc720 <col:1, col:58> Text="  Reads the current value of the Control Register 3 (CR3)."
|   |-ParagraphComment 0x55887c3cc7f0 <line:6192:1, line:6194:6>
|   | |-TextComment 0x55887c3cc770 <line:6192:1, col:77> Text="  Reads and returns the current value of CR3. This function is only available"
|   | |-TextComment 0x55887c3cc790 <line:6193:1, col:78> Text="  on IA-32 and x64. This returns a 32-bit value on IA-32 and a 64-bit value on"
|   | `-TextComment 0x55887c3cc7b0 <line:6194:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3cc840 <line:6196:1, col:2>
|   | `-TextComment 0x55887c3cc810 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cc860 <col:3, col:52> Name="return"
|     `-ParagraphComment 0x55887c3cc8c0 <col:10, col:52>
|       `-TextComment 0x55887c3cc890 <col:10, col:52> Text=" The value of the Control Register 3 (CR3)."
|-FunctionDecl 0x55887c152ce0 <line:6215:1, line:6219:3> line:6217:1 AsmReadCr4 'UINTN (void)'
| `-FullComment 0x55887c3ccb50 <line:6206:1, line:6212:52>
|   |-ParagraphComment 0x55887c3cc9a0 <line:6206:1, col:58>
|   | `-TextComment 0x55887c3cc970 <col:1, col:58> Text="  Reads the current value of the Control Register 4 (CR4)."
|   |-ParagraphComment 0x55887c3cca40 <line:6208:1, line:6210:6>
|   | |-TextComment 0x55887c3cc9c0 <line:6208:1, col:77> Text="  Reads and returns the current value of CR4. This function is only available"
|   | |-TextComment 0x55887c3cc9e0 <line:6209:1, col:78> Text="  on IA-32 and x64. This returns a 32-bit value on IA-32 and a 64-bit value on"
|   | `-TextComment 0x55887c3cca00 <line:6210:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3cca90 <line:6212:1, col:2>
|   | `-TextComment 0x55887c3cca60 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ccab0 <col:3, col:52> Name="return"
|     `-ParagraphComment 0x55887c3ccb10 <col:10, col:52>
|       `-TextComment 0x55887c3ccae0 <col:10, col:52> Text=" The value of the Control Register 4 (CR4)."
|-FunctionDecl 0x55887c152e78 <line:6232:1, line:6236:3> line:6234:1 AsmWriteCr0 'UINTN (UINTN)'
| |-ParmVarDecl 0x55887c152db8 <line:6235:3, col:10> col:10 Cr0 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3cce80 <line:6222:1, line:6229:35>
|   |-ParagraphComment 0x55887c3ccbf0 <line:6222:1, col:45>
|   | `-TextComment 0x55887c3ccbc0 <col:1, col:45> Text="  Writes a value to Control Register 0 (CR0)."
|   |-ParagraphComment 0x55887c3ccc60 <line:6224:1, line:6225:79>
|   | |-TextComment 0x55887c3ccc10 <line:6224:1, col:75> Text="  Writes and returns a new value to CR0. This function is only available on"
|   | `-TextComment 0x55887c3ccc30 <line:6225:1, col:79> Text="  IA-32 and x64. This writes a 32-bit value on IA-32 and a 64-bit value on x64."
|   |-ParagraphComment 0x55887c3cccb0 <line:6227:1, col:2>
|   | `-TextComment 0x55887c3ccc80 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cccd0 <col:3, col:40> [in] implicitly Param="Cr0" ParamIndex=0
|   | `-ParagraphComment 0x55887c3ccd60 <col:14, col:40>
|   |   `-TextComment 0x55887c3ccd30 <col:14, col:40> Text=" The value to write to CR0."
|   |-ParagraphComment 0x55887c3ccdb0 <line:6229:1, col:2>
|   | `-TextComment 0x55887c3ccd80 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ccdd0 <col:3, col:35> Name="return"
|     `-ParagraphComment 0x55887c3cce30 <col:10, col:35>
|       `-TextComment 0x55887c3cce00 <col:10, col:35> Text=" The value written to CR0."
|-FunctionDecl 0x55887c152fe8 <line:6249:1, line:6253:3> line:6251:1 AsmWriteCr2 'UINTN (UINTN)'
| |-ParmVarDecl 0x55887c152f58 <line:6252:3, col:10> col:10 Cr2 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3cd1b0 <line:6239:1, line:6246:35>
|   |-ParagraphComment 0x55887c3ccf20 <line:6239:1, col:45>
|   | `-TextComment 0x55887c3ccef0 <col:1, col:45> Text="  Writes a value to Control Register 2 (CR2)."
|   |-ParagraphComment 0x55887c3ccf90 <line:6241:1, line:6242:79>
|   | |-TextComment 0x55887c3ccf40 <line:6241:1, col:75> Text="  Writes and returns a new value to CR2. This function is only available on"
|   | `-TextComment 0x55887c3ccf60 <line:6242:1, col:79> Text="  IA-32 and x64. This writes a 32-bit value on IA-32 and a 64-bit value on x64."
|   |-ParagraphComment 0x55887c3ccfe0 <line:6244:1, col:2>
|   | `-TextComment 0x55887c3ccfb0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cd000 <col:3, col:40> [in] implicitly Param="Cr2" ParamIndex=0
|   | `-ParagraphComment 0x55887c3cd090 <col:14, col:40>
|   |   `-TextComment 0x55887c3cd060 <col:14, col:40> Text=" The value to write to CR2."
|   |-ParagraphComment 0x55887c3cd0e0 <line:6246:1, col:2>
|   | `-TextComment 0x55887c3cd0b0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cd100 <col:3, col:35> Name="return"
|     `-ParagraphComment 0x55887c3cd160 <col:10, col:35>
|       `-TextComment 0x55887c3cd130 <col:10, col:35> Text=" The value written to CR2."
|-FunctionDecl 0x55887c153158 <line:6266:1, line:6270:3> line:6268:1 AsmWriteCr3 'UINTN (UINTN)'
| |-ParmVarDecl 0x55887c1530c8 <line:6269:3, col:10> col:10 Cr3 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3cd4e0 <line:6256:1, line:6263:35>
|   |-ParagraphComment 0x55887c3cd250 <line:6256:1, col:45>
|   | `-TextComment 0x55887c3cd220 <col:1, col:45> Text="  Writes a value to Control Register 3 (CR3)."
|   |-ParagraphComment 0x55887c3cd2c0 <line:6258:1, line:6259:79>
|   | |-TextComment 0x55887c3cd270 <line:6258:1, col:75> Text="  Writes and returns a new value to CR3. This function is only available on"
|   | `-TextComment 0x55887c3cd290 <line:6259:1, col:79> Text="  IA-32 and x64. This writes a 32-bit value on IA-32 and a 64-bit value on x64."
|   |-ParagraphComment 0x55887c3cd310 <line:6261:1, col:2>
|   | `-TextComment 0x55887c3cd2e0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cd330 <col:3, col:40> [in] implicitly Param="Cr3" ParamIndex=0
|   | `-ParagraphComment 0x55887c3cd3c0 <col:14, col:40>
|   |   `-TextComment 0x55887c3cd390 <col:14, col:40> Text=" The value to write to CR3."
|   |-ParagraphComment 0x55887c3cd410 <line:6263:1, col:2>
|   | `-TextComment 0x55887c3cd3e0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cd430 <col:3, col:35> Name="return"
|     `-ParagraphComment 0x55887c3cd490 <col:10, col:35>
|       `-TextComment 0x55887c3cd460 <col:10, col:35> Text=" The value written to CR3."
|-FunctionDecl 0x55887c1532c8 <line:6283:1, line:6287:3> line:6285:1 AsmWriteCr4 'UINTN (UINTN)'
| |-ParmVarDecl 0x55887c153238 <line:6286:3, col:10> col:10 Cr4 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3cd810 <line:6273:1, line:6280:35>
|   |-ParagraphComment 0x55887c3cd580 <line:6273:1, col:45>
|   | `-TextComment 0x55887c3cd550 <col:1, col:45> Text="  Writes a value to Control Register 4 (CR4)."
|   |-ParagraphComment 0x55887c3cd5f0 <line:6275:1, line:6276:79>
|   | |-TextComment 0x55887c3cd5a0 <line:6275:1, col:75> Text="  Writes and returns a new value to CR4. This function is only available on"
|   | `-TextComment 0x55887c3cd5c0 <line:6276:1, col:79> Text="  IA-32 and x64. This writes a 32-bit value on IA-32 and a 64-bit value on x64."
|   |-ParagraphComment 0x55887c3cd640 <line:6278:1, col:2>
|   | `-TextComment 0x55887c3cd610 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cd660 <col:3, col:40> [in] implicitly Param="Cr4" ParamIndex=0
|   | `-ParagraphComment 0x55887c3cd6f0 <col:14, col:40>
|   |   `-TextComment 0x55887c3cd6c0 <col:14, col:40> Text=" The value to write to CR4."
|   |-ParagraphComment 0x55887c3cd740 <line:6280:1, col:2>
|   | `-TextComment 0x55887c3cd710 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cd760 <col:3, col:35> Name="return"
|     `-ParagraphComment 0x55887c3cd7c0 <col:10, col:35>
|       `-TextComment 0x55887c3cd790 <col:10, col:35> Text=" The value written to CR4."
|-FunctionDecl 0x55887c153430 <line:6299:1, line:6303:3> line:6301:1 AsmReadDr0 'UINTN (void)'
| `-FullComment 0x55887c3cda60 <line:6290:1, line:6296:46>
|   |-ParagraphComment 0x55887c3cd8b0 <line:6290:1, col:52>
|   | `-TextComment 0x55887c3cd880 <col:1, col:52> Text="  Reads the current value of Debug Register 0 (DR0)."
|   |-ParagraphComment 0x55887c3cd950 <line:6292:1, line:6294:6>
|   | |-TextComment 0x55887c3cd8d0 <line:6292:1, col:77> Text="  Reads and returns the current value of DR0. This function is only available"
|   | |-TextComment 0x55887c3cd8f0 <line:6293:1, col:78> Text="  on IA-32 and x64. This returns a 32-bit value on IA-32 and a 64-bit value on"
|   | `-TextComment 0x55887c3cd910 <line:6294:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3cd9a0 <line:6296:1, col:2>
|   | `-TextComment 0x55887c3cd970 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cd9c0 <col:3, col:46> Name="return"
|     `-ParagraphComment 0x55887c3cda20 <col:10, col:46>
|       `-TextComment 0x55887c3cd9f0 <col:10, col:46> Text=" The value of Debug Register 0 (DR0)."
|-FunctionDecl 0x55887c153590 <line:6315:1, line:6319:3> line:6317:1 AsmReadDr1 'UINTN (void)'
| `-FullComment 0x55887c3cdcb0 <line:6306:1, line:6312:46>
|   |-ParagraphComment 0x55887c3cdb00 <line:6306:1, col:52>
|   | `-TextComment 0x55887c3cdad0 <col:1, col:52> Text="  Reads the current value of Debug Register 1 (DR1)."
|   |-ParagraphComment 0x55887c3cdba0 <line:6308:1, line:6310:6>
|   | |-TextComment 0x55887c3cdb20 <line:6308:1, col:77> Text="  Reads and returns the current value of DR1. This function is only available"
|   | |-TextComment 0x55887c3cdb40 <line:6309:1, col:78> Text="  on IA-32 and x64. This returns a 32-bit value on IA-32 and a 64-bit value on"
|   | `-TextComment 0x55887c3cdb60 <line:6310:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3cdbf0 <line:6312:1, col:2>
|   | `-TextComment 0x55887c3cdbc0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cdc10 <col:3, col:46> Name="return"
|     `-ParagraphComment 0x55887c3cdc70 <col:10, col:46>
|       `-TextComment 0x55887c3cdc40 <col:10, col:46> Text=" The value of Debug Register 1 (DR1)."
|-FunctionDecl 0x55887c1536f0 <line:6331:1, line:6335:3> line:6333:1 AsmReadDr2 'UINTN (void)'
| `-FullComment 0x55887c3cdf00 <line:6322:1, line:6328:46>
|   |-ParagraphComment 0x55887c3cdd50 <line:6322:1, col:52>
|   | `-TextComment 0x55887c3cdd20 <col:1, col:52> Text="  Reads the current value of Debug Register 2 (DR2)."
|   |-ParagraphComment 0x55887c3cddf0 <line:6324:1, line:6326:6>
|   | |-TextComment 0x55887c3cdd70 <line:6324:1, col:77> Text="  Reads and returns the current value of DR2. This function is only available"
|   | |-TextComment 0x55887c3cdd90 <line:6325:1, col:78> Text="  on IA-32 and x64. This returns a 32-bit value on IA-32 and a 64-bit value on"
|   | `-TextComment 0x55887c3cddb0 <line:6326:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3cde40 <line:6328:1, col:2>
|   | `-TextComment 0x55887c3cde10 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cde60 <col:3, col:46> Name="return"
|     `-ParagraphComment 0x55887c3cdec0 <col:10, col:46>
|       `-TextComment 0x55887c3cde90 <col:10, col:46> Text=" The value of Debug Register 2 (DR2)."
|-FunctionDecl 0x55887c153850 <line:6347:1, line:6351:3> line:6349:1 AsmReadDr3 'UINTN (void)'
| `-FullComment 0x55887c3ce150 <line:6338:1, line:6344:46>
|   |-ParagraphComment 0x55887c3cdfa0 <line:6338:1, col:52>
|   | `-TextComment 0x55887c3cdf70 <col:1, col:52> Text="  Reads the current value of Debug Register 3 (DR3)."
|   |-ParagraphComment 0x55887c3ce040 <line:6340:1, line:6342:6>
|   | |-TextComment 0x55887c3cdfc0 <line:6340:1, col:77> Text="  Reads and returns the current value of DR3. This function is only available"
|   | |-TextComment 0x55887c3cdfe0 <line:6341:1, col:78> Text="  on IA-32 and x64. This returns a 32-bit value on IA-32 and a 64-bit value on"
|   | `-TextComment 0x55887c3ce000 <line:6342:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3ce090 <line:6344:1, col:2>
|   | `-TextComment 0x55887c3ce060 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ce0b0 <col:3, col:46> Name="return"
|     `-ParagraphComment 0x55887c3ce110 <col:10, col:46>
|       `-TextComment 0x55887c3ce0e0 <col:10, col:46> Text=" The value of Debug Register 3 (DR3)."
|-FunctionDecl 0x55887c1539b0 <line:6363:1, line:6367:3> line:6365:1 AsmReadDr4 'UINTN (void)'
| `-FullComment 0x55887c3ce3a0 <line:6354:1, line:6360:46>
|   |-ParagraphComment 0x55887c3ce1f0 <line:6354:1, col:52>
|   | `-TextComment 0x55887c3ce1c0 <col:1, col:52> Text="  Reads the current value of Debug Register 4 (DR4)."
|   |-ParagraphComment 0x55887c3ce290 <line:6356:1, line:6358:6>
|   | |-TextComment 0x55887c3ce210 <line:6356:1, col:77> Text="  Reads and returns the current value of DR4. This function is only available"
|   | |-TextComment 0x55887c3ce230 <line:6357:1, col:78> Text="  on IA-32 and x64. This returns a 32-bit value on IA-32 and a 64-bit value on"
|   | `-TextComment 0x55887c3ce250 <line:6358:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3ce2e0 <line:6360:1, col:2>
|   | `-TextComment 0x55887c3ce2b0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ce300 <col:3, col:46> Name="return"
|     `-ParagraphComment 0x55887c3ce360 <col:10, col:46>
|       `-TextComment 0x55887c3ce330 <col:10, col:46> Text=" The value of Debug Register 4 (DR4)."
|-FunctionDecl 0x55887c154e48 <line:6379:1, line:6383:3> line:6381:1 AsmReadDr5 'UINTN (void)'
| `-FullComment 0x55887c3ce5f0 <line:6370:1, line:6376:46>
|   |-ParagraphComment 0x55887c3ce440 <line:6370:1, col:52>
|   | `-TextComment 0x55887c3ce410 <col:1, col:52> Text="  Reads the current value of Debug Register 5 (DR5)."
|   |-ParagraphComment 0x55887c3ce4e0 <line:6372:1, line:6374:6>
|   | |-TextComment 0x55887c3ce460 <line:6372:1, col:77> Text="  Reads and returns the current value of DR5. This function is only available"
|   | |-TextComment 0x55887c3ce480 <line:6373:1, col:78> Text="  on IA-32 and x64. This returns a 32-bit value on IA-32 and a 64-bit value on"
|   | `-TextComment 0x55887c3ce4a0 <line:6374:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3ce530 <line:6376:1, col:2>
|   | `-TextComment 0x55887c3ce500 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ce550 <col:3, col:46> Name="return"
|     `-ParagraphComment 0x55887c3ce5b0 <col:10, col:46>
|       `-TextComment 0x55887c3ce580 <col:10, col:46> Text=" The value of Debug Register 5 (DR5)."
|-FunctionDecl 0x55887c154fb0 <line:6395:1, line:6399:3> line:6397:1 AsmReadDr6 'UINTN (void)'
| `-FullComment 0x55887c3ce840 <line:6386:1, line:6392:46>
|   |-ParagraphComment 0x55887c3ce690 <line:6386:1, col:52>
|   | `-TextComment 0x55887c3ce660 <col:1, col:52> Text="  Reads the current value of Debug Register 6 (DR6)."
|   |-ParagraphComment 0x55887c3ce730 <line:6388:1, line:6390:6>
|   | |-TextComment 0x55887c3ce6b0 <line:6388:1, col:77> Text="  Reads and returns the current value of DR6. This function is only available"
|   | |-TextComment 0x55887c3ce6d0 <line:6389:1, col:78> Text="  on IA-32 and x64. This returns a 32-bit value on IA-32 and a 64-bit value on"
|   | `-TextComment 0x55887c3ce6f0 <line:6390:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3ce780 <line:6392:1, col:2>
|   | `-TextComment 0x55887c3ce750 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ce7a0 <col:3, col:46> Name="return"
|     `-ParagraphComment 0x55887c3ce800 <col:10, col:46>
|       `-TextComment 0x55887c3ce7d0 <col:10, col:46> Text=" The value of Debug Register 6 (DR6)."
|-FunctionDecl 0x55887c155110 <line:6411:1, line:6415:3> line:6413:1 AsmReadDr7 'UINTN (void)'
| `-FullComment 0x55887c3cea90 <line:6402:1, line:6408:46>
|   |-ParagraphComment 0x55887c3ce8e0 <line:6402:1, col:52>
|   | `-TextComment 0x55887c3ce8b0 <col:1, col:52> Text="  Reads the current value of Debug Register 7 (DR7)."
|   |-ParagraphComment 0x55887c3ce980 <line:6404:1, line:6406:6>
|   | |-TextComment 0x55887c3ce900 <line:6404:1, col:77> Text="  Reads and returns the current value of DR7. This function is only available"
|   | |-TextComment 0x55887c3ce920 <line:6405:1, col:78> Text="  on IA-32 and x64. This returns a 32-bit value on IA-32 and a 64-bit value on"
|   | `-TextComment 0x55887c3ce940 <line:6406:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3ce9d0 <line:6408:1, col:2>
|   | `-TextComment 0x55887c3ce9a0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ce9f0 <col:3, col:46> Name="return"
|     `-ParagraphComment 0x55887c3cea50 <col:10, col:46>
|       `-TextComment 0x55887c3cea20 <col:10, col:46> Text=" The value of Debug Register 7 (DR7)."
|-FunctionDecl 0x55887c155278 <line:6428:1, line:6432:3> line:6430:1 AsmWriteDr0 'UINTN (UINTN)'
| |-ParmVarDecl 0x55887c1551e8 <line:6431:3, col:10> col:10 Dr0 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3cedc0 <line:6418:1, line:6425:54>
|   |-ParagraphComment 0x55887c3ceb30 <line:6418:1, col:43>
|   | `-TextComment 0x55887c3ceb00 <col:1, col:43> Text="  Writes a value to Debug Register 0 (DR0)."
|   |-ParagraphComment 0x55887c3ceba0 <line:6420:1, line:6421:79>
|   | |-TextComment 0x55887c3ceb50 <line:6420:1, col:75> Text="  Writes and returns a new value to DR0. This function is only available on"
|   | `-TextComment 0x55887c3ceb70 <line:6421:1, col:79> Text="  IA-32 and x64. This writes a 32-bit value on IA-32 and a 64-bit value on x64."
|   |-ParagraphComment 0x55887c3cebf0 <line:6423:1, col:2>
|   | `-TextComment 0x55887c3cebc0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cec10 <col:3, col:40> [in] implicitly Param="Dr0" ParamIndex=0
|   | `-ParagraphComment 0x55887c3ceca0 <col:14, col:40>
|   |   `-TextComment 0x55887c3cec70 <col:14, col:40> Text=" The value to write to Dr0."
|   |-ParagraphComment 0x55887c3cecf0 <line:6425:1, col:2>
|   | `-TextComment 0x55887c3cecc0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ced10 <col:3, col:54> Name="return"
|     `-ParagraphComment 0x55887c3ced70 <col:10, col:54>
|       `-TextComment 0x55887c3ced40 <col:10, col:54> Text=" The value written to Debug Register 0 (DR0)."
|-FunctionDecl 0x55887c1553e8 <line:6445:1, line:6449:3> line:6447:1 AsmWriteDr1 'UINTN (UINTN)'
| |-ParmVarDecl 0x55887c155358 <line:6448:3, col:10> col:10 Dr1 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3cf120 <line:6435:1, line:6442:54>
|   |-ParagraphComment 0x55887c3cee60 <line:6435:1, col:43>
|   | `-TextComment 0x55887c3cee30 <col:1, col:43> Text="  Writes a value to Debug Register 1 (DR1)."
|   |-ParagraphComment 0x55887c3ceed0 <line:6437:1, line:6438:79>
|   | |-TextComment 0x55887c3cee80 <line:6437:1, col:75> Text="  Writes and returns a new value to DR1. This function is only available on"
|   | `-TextComment 0x55887c3ceea0 <line:6438:1, col:79> Text="  IA-32 and x64. This writes a 32-bit value on IA-32 and a 64-bit value on x64."
|   |-ParagraphComment 0x55887c3cef20 <line:6440:1, col:2>
|   | `-TextComment 0x55887c3ceef0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cef40 <col:3, col:40> [in] implicitly Param="Dr1" ParamIndex=0
|   | `-ParagraphComment 0x55887c3cefd0 <col:14, col:40>
|   |   `-TextComment 0x55887c3cefa0 <col:14, col:40> Text=" The value to write to Dr1."
|   |-ParagraphComment 0x55887c3cf020 <line:6442:1, col:2>
|   | `-TextComment 0x55887c3ceff0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cf070 <col:3, col:54> Name="return"
|     `-ParagraphComment 0x55887c3cf0d0 <col:10, col:54>
|       `-TextComment 0x55887c3cf0a0 <col:10, col:54> Text=" The value written to Debug Register 1 (DR1)."
|-FunctionDecl 0x55887c155558 <line:6462:1, line:6466:3> line:6464:1 AsmWriteDr2 'UINTN (UINTN)'
| |-ParmVarDecl 0x55887c1554c8 <line:6465:3, col:10> col:10 Dr2 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3cf450 <line:6452:1, line:6459:54>
|   |-ParagraphComment 0x55887c3cf1c0 <line:6452:1, col:43>
|   | `-TextComment 0x55887c3cf190 <col:1, col:43> Text="  Writes a value to Debug Register 2 (DR2)."
|   |-ParagraphComment 0x55887c3cf230 <line:6454:1, line:6455:79>
|   | |-TextComment 0x55887c3cf1e0 <line:6454:1, col:75> Text="  Writes and returns a new value to DR2. This function is only available on"
|   | `-TextComment 0x55887c3cf200 <line:6455:1, col:79> Text="  IA-32 and x64. This writes a 32-bit value on IA-32 and a 64-bit value on x64."
|   |-ParagraphComment 0x55887c3cf280 <line:6457:1, col:2>
|   | `-TextComment 0x55887c3cf250 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cf2a0 <col:3, col:40> [in] implicitly Param="Dr2" ParamIndex=0
|   | `-ParagraphComment 0x55887c3cf330 <col:14, col:40>
|   |   `-TextComment 0x55887c3cf300 <col:14, col:40> Text=" The value to write to Dr2."
|   |-ParagraphComment 0x55887c3cf380 <line:6459:1, col:2>
|   | `-TextComment 0x55887c3cf350 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cf3a0 <col:3, col:54> Name="return"
|     `-ParagraphComment 0x55887c3cf400 <col:10, col:54>
|       `-TextComment 0x55887c3cf3d0 <col:10, col:54> Text=" The value written to Debug Register 2 (DR2)."
|-FunctionDecl 0x55887c1556c8 <line:6479:1, line:6483:3> line:6481:1 AsmWriteDr3 'UINTN (UINTN)'
| |-ParmVarDecl 0x55887c155638 <line:6482:3, col:10> col:10 Dr3 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3cf780 <line:6469:1, line:6476:54>
|   |-ParagraphComment 0x55887c3cf4f0 <line:6469:1, col:43>
|   | `-TextComment 0x55887c3cf4c0 <col:1, col:43> Text="  Writes a value to Debug Register 3 (DR3)."
|   |-ParagraphComment 0x55887c3cf560 <line:6471:1, line:6472:79>
|   | |-TextComment 0x55887c3cf510 <line:6471:1, col:75> Text="  Writes and returns a new value to DR3. This function is only available on"
|   | `-TextComment 0x55887c3cf530 <line:6472:1, col:79> Text="  IA-32 and x64. This writes a 32-bit value on IA-32 and a 64-bit value on x64."
|   |-ParagraphComment 0x55887c3cf5b0 <line:6474:1, col:2>
|   | `-TextComment 0x55887c3cf580 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cf5d0 <col:3, col:40> [in] implicitly Param="Dr3" ParamIndex=0
|   | `-ParagraphComment 0x55887c3cf660 <col:14, col:40>
|   |   `-TextComment 0x55887c3cf630 <col:14, col:40> Text=" The value to write to Dr3."
|   |-ParagraphComment 0x55887c3cf6b0 <line:6476:1, col:2>
|   | `-TextComment 0x55887c3cf680 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cf6d0 <col:3, col:54> Name="return"
|     `-ParagraphComment 0x55887c3cf730 <col:10, col:54>
|       `-TextComment 0x55887c3cf700 <col:10, col:54> Text=" The value written to Debug Register 3 (DR3)."
|-FunctionDecl 0x55887c155838 <line:6496:1, line:6500:3> line:6498:1 AsmWriteDr4 'UINTN (UINTN)'
| |-ParmVarDecl 0x55887c1557a8 <line:6499:3, col:10> col:10 Dr4 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3cfab0 <line:6486:1, line:6493:54>
|   |-ParagraphComment 0x55887c3cf820 <line:6486:1, col:43>
|   | `-TextComment 0x55887c3cf7f0 <col:1, col:43> Text="  Writes a value to Debug Register 4 (DR4)."
|   |-ParagraphComment 0x55887c3cf890 <line:6488:1, line:6489:79>
|   | |-TextComment 0x55887c3cf840 <line:6488:1, col:75> Text="  Writes and returns a new value to DR4. This function is only available on"
|   | `-TextComment 0x55887c3cf860 <line:6489:1, col:79> Text="  IA-32 and x64. This writes a 32-bit value on IA-32 and a 64-bit value on x64."
|   |-ParagraphComment 0x55887c3cf8e0 <line:6491:1, col:2>
|   | `-TextComment 0x55887c3cf8b0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cf900 <col:3, col:40> [in] implicitly Param="Dr4" ParamIndex=0
|   | `-ParagraphComment 0x55887c3cf990 <col:14, col:40>
|   |   `-TextComment 0x55887c3cf960 <col:14, col:40> Text=" The value to write to Dr4."
|   |-ParagraphComment 0x55887c3cf9e0 <line:6493:1, col:2>
|   | `-TextComment 0x55887c3cf9b0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cfa00 <col:3, col:54> Name="return"
|     `-ParagraphComment 0x55887c3cfa60 <col:10, col:54>
|       `-TextComment 0x55887c3cfa30 <col:10, col:54> Text=" The value written to Debug Register 4 (DR4)."
|-FunctionDecl 0x55887c1559a8 <line:6513:1, line:6517:3> line:6515:1 AsmWriteDr5 'UINTN (UINTN)'
| |-ParmVarDecl 0x55887c155918 <line:6516:3, col:10> col:10 Dr5 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3cfde0 <line:6503:1, line:6510:54>
|   |-ParagraphComment 0x55887c3cfb50 <line:6503:1, col:43>
|   | `-TextComment 0x55887c3cfb20 <col:1, col:43> Text="  Writes a value to Debug Register 5 (DR5)."
|   |-ParagraphComment 0x55887c3cfbc0 <line:6505:1, line:6506:79>
|   | |-TextComment 0x55887c3cfb70 <line:6505:1, col:75> Text="  Writes and returns a new value to DR5. This function is only available on"
|   | `-TextComment 0x55887c3cfb90 <line:6506:1, col:79> Text="  IA-32 and x64. This writes a 32-bit value on IA-32 and a 64-bit value on x64."
|   |-ParagraphComment 0x55887c3cfc10 <line:6508:1, col:2>
|   | `-TextComment 0x55887c3cfbe0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cfc30 <col:3, col:40> [in] implicitly Param="Dr5" ParamIndex=0
|   | `-ParagraphComment 0x55887c3cfcc0 <col:14, col:40>
|   |   `-TextComment 0x55887c3cfc90 <col:14, col:40> Text=" The value to write to Dr5."
|   |-ParagraphComment 0x55887c3cfd10 <line:6510:1, col:2>
|   | `-TextComment 0x55887c3cfce0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3cfd30 <col:3, col:54> Name="return"
|     `-ParagraphComment 0x55887c3cfd90 <col:10, col:54>
|       `-TextComment 0x55887c3cfd60 <col:10, col:54> Text=" The value written to Debug Register 5 (DR5)."
|-FunctionDecl 0x55887c155b18 <line:6530:1, line:6534:3> line:6532:1 AsmWriteDr6 'UINTN (UINTN)'
| |-ParmVarDecl 0x55887c155a88 <line:6533:3, col:10> col:10 Dr6 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3d0110 <line:6520:1, line:6527:54>
|   |-ParagraphComment 0x55887c3cfe80 <line:6520:1, col:43>
|   | `-TextComment 0x55887c3cfe50 <col:1, col:43> Text="  Writes a value to Debug Register 6 (DR6)."
|   |-ParagraphComment 0x55887c3cfef0 <line:6522:1, line:6523:79>
|   | |-TextComment 0x55887c3cfea0 <line:6522:1, col:75> Text="  Writes and returns a new value to DR6. This function is only available on"
|   | `-TextComment 0x55887c3cfec0 <line:6523:1, col:79> Text="  IA-32 and x64. This writes a 32-bit value on IA-32 and a 64-bit value on x64."
|   |-ParagraphComment 0x55887c3cff40 <line:6525:1, col:2>
|   | `-TextComment 0x55887c3cff10 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3cff60 <col:3, col:40> [in] implicitly Param="Dr6" ParamIndex=0
|   | `-ParagraphComment 0x55887c3cfff0 <col:14, col:40>
|   |   `-TextComment 0x55887c3cffc0 <col:14, col:40> Text=" The value to write to Dr6."
|   |-ParagraphComment 0x55887c3d0040 <line:6527:1, col:2>
|   | `-TextComment 0x55887c3d0010 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d0060 <col:3, col:54> Name="return"
|     `-ParagraphComment 0x55887c3d00c0 <col:10, col:54>
|       `-TextComment 0x55887c3d0090 <col:10, col:54> Text=" The value written to Debug Register 6 (DR6)."
|-FunctionDecl 0x55887c155c88 <line:6547:1, line:6551:3> line:6549:1 AsmWriteDr7 'UINTN (UINTN)'
| |-ParmVarDecl 0x55887c155bf8 <line:6550:3, col:10> col:10 Dr7 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3d0440 <line:6537:1, line:6544:54>
|   |-ParagraphComment 0x55887c3d01b0 <line:6537:1, col:43>
|   | `-TextComment 0x55887c3d0180 <col:1, col:43> Text="  Writes a value to Debug Register 7 (DR7)."
|   |-ParagraphComment 0x55887c3d0220 <line:6539:1, line:6540:79>
|   | |-TextComment 0x55887c3d01d0 <line:6539:1, col:75> Text="  Writes and returns a new value to DR7. This function is only available on"
|   | `-TextComment 0x55887c3d01f0 <line:6540:1, col:79> Text="  IA-32 and x64. This writes a 32-bit value on IA-32 and a 64-bit value on x64."
|   |-ParagraphComment 0x55887c3d0270 <line:6542:1, col:2>
|   | `-TextComment 0x55887c3d0240 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d0290 <col:3, col:40> [in] implicitly Param="Dr7" ParamIndex=0
|   | `-ParagraphComment 0x55887c3d0320 <col:14, col:40>
|   |   `-TextComment 0x55887c3d02f0 <col:14, col:40> Text=" The value to write to Dr7."
|   |-ParagraphComment 0x55887c3d0370 <line:6544:1, col:2>
|   | `-TextComment 0x55887c3d0340 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d0390 <col:3, col:54> Name="return"
|     `-ParagraphComment 0x55887c3d03f0 <col:10, col:54>
|       `-TextComment 0x55887c3d03c0 <col:10, col:54> Text=" The value written to Debug Register 7 (DR7)."
|-FunctionDecl 0x55887c156178 <line:6562:1, line:6566:3> line:6564:1 AsmReadCs 'UINT16 (void)'
| `-FullComment 0x55887c3d0660 <line:6554:1, line:6559:34>
|   |-ParagraphComment 0x55887c3d04e0 <line:6554:1, col:56>
|   | `-TextComment 0x55887c3d04b0 <col:1, col:56> Text="  Reads the current value of Code Segment Register (CS)."
|   |-ParagraphComment 0x55887c3d0550 <line:6556:1, line:6557:16>
|   | |-TextComment 0x55887c3d0500 <line:6556:1, col:79> Text="  Reads and returns the current value of CS. This function is only available on"
|   | `-TextComment 0x55887c3d0520 <line:6557:1, col:16> Text="  IA-32 and x64."
|   |-ParagraphComment 0x55887c3d05a0 <line:6559:1, col:2>
|   | `-TextComment 0x55887c3d0570 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d05c0 <col:3, col:34> Name="return"
|     `-ParagraphComment 0x55887c3d0620 <col:10, col:34>
|       `-TextComment 0x55887c3d05f0 <col:10, col:34> Text=" The current value of CS."
|-FunctionDecl 0x55887c1562e0 <line:6577:1, line:6581:3> line:6579:1 AsmReadDs 'UINT16 (void)'
| `-FullComment 0x55887c3d0880 <line:6569:1, line:6574:34>
|   |-ParagraphComment 0x55887c3d0700 <line:6569:1, col:56>
|   | `-TextComment 0x55887c3d06d0 <col:1, col:56> Text="  Reads the current value of Data Segment Register (DS)."
|   |-ParagraphComment 0x55887c3d0770 <line:6571:1, line:6572:16>
|   | |-TextComment 0x55887c3d0720 <line:6571:1, col:79> Text="  Reads and returns the current value of DS. This function is only available on"
|   | `-TextComment 0x55887c3d0740 <line:6572:1, col:16> Text="  IA-32 and x64."
|   |-ParagraphComment 0x55887c3d07c0 <line:6574:1, col:2>
|   | `-TextComment 0x55887c3d0790 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d07e0 <col:3, col:34> Name="return"
|     `-ParagraphComment 0x55887c3d0840 <col:10, col:34>
|       `-TextComment 0x55887c3d0810 <col:10, col:34> Text=" The current value of DS."
|-FunctionDecl 0x55887c156440 <line:6592:1, line:6596:3> line:6594:1 AsmReadEs 'UINT16 (void)'
| `-FullComment 0x55887c3d0aa0 <line:6584:1, line:6589:34>
|   |-ParagraphComment 0x55887c3d0920 <line:6584:1, col:57>
|   | `-TextComment 0x55887c3d08f0 <col:1, col:57> Text="  Reads the current value of Extra Segment Register (ES)."
|   |-ParagraphComment 0x55887c3d0990 <line:6586:1, line:6587:16>
|   | |-TextComment 0x55887c3d0940 <line:6586:1, col:79> Text="  Reads and returns the current value of ES. This function is only available on"
|   | `-TextComment 0x55887c3d0960 <line:6587:1, col:16> Text="  IA-32 and x64."
|   |-ParagraphComment 0x55887c3d09e0 <line:6589:1, col:2>
|   | `-TextComment 0x55887c3d09b0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d0a00 <col:3, col:34> Name="return"
|     `-ParagraphComment 0x55887c3d0a60 <col:10, col:34>
|       `-TextComment 0x55887c3d0a30 <col:10, col:34> Text=" The current value of ES."
|-FunctionDecl 0x55887c1565a0 <line:6607:1, line:6611:3> line:6609:1 AsmReadFs 'UINT16 (void)'
| `-FullComment 0x55887c3d0cc0 <line:6599:1, line:6604:34>
|   |-ParagraphComment 0x55887c3d0b40 <line:6599:1, col:59>
|   | `-TextComment 0x55887c3d0b10 <col:1, col:59> Text="  Reads the current value of FS Data Segment Register (FS)."
|   |-ParagraphComment 0x55887c3d0bb0 <line:6601:1, line:6602:16>
|   | |-TextComment 0x55887c3d0b60 <line:6601:1, col:79> Text="  Reads and returns the current value of FS. This function is only available on"
|   | `-TextComment 0x55887c3d0b80 <line:6602:1, col:16> Text="  IA-32 and x64."
|   |-ParagraphComment 0x55887c3d0c00 <line:6604:1, col:2>
|   | `-TextComment 0x55887c3d0bd0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d0c20 <col:3, col:34> Name="return"
|     `-ParagraphComment 0x55887c3d0c80 <col:10, col:34>
|       `-TextComment 0x55887c3d0c50 <col:10, col:34> Text=" The current value of FS."
|-FunctionDecl 0x55887c156700 <line:6622:1, line:6626:3> line:6624:1 AsmReadGs 'UINT16 (void)'
| `-FullComment 0x55887c3d0ee0 <line:6614:1, line:6619:34>
|   |-ParagraphComment 0x55887c3d0d60 <line:6614:1, col:59>
|   | `-TextComment 0x55887c3d0d30 <col:1, col:59> Text="  Reads the current value of GS Data Segment Register (GS)."
|   |-ParagraphComment 0x55887c3d0dd0 <line:6616:1, line:6617:16>
|   | |-TextComment 0x55887c3d0d80 <line:6616:1, col:79> Text="  Reads and returns the current value of GS. This function is only available on"
|   | `-TextComment 0x55887c3d0da0 <line:6617:1, col:16> Text="  IA-32 and x64."
|   |-ParagraphComment 0x55887c3d0e20 <line:6619:1, col:2>
|   | `-TextComment 0x55887c3d0df0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d0e40 <col:3, col:34> Name="return"
|     `-ParagraphComment 0x55887c3d0ea0 <col:10, col:34>
|       `-TextComment 0x55887c3d0e70 <col:10, col:34> Text=" The current value of GS."
|-FunctionDecl 0x55887c156860 <line:6637:1, line:6641:3> line:6639:1 AsmReadSs 'UINT16 (void)'
| `-FullComment 0x55887c3d1100 <line:6629:1, line:6634:34>
|   |-ParagraphComment 0x55887c3d0f80 <line:6629:1, col:57>
|   | `-TextComment 0x55887c3d0f50 <col:1, col:57> Text="  Reads the current value of Stack Segment Register (SS)."
|   |-ParagraphComment 0x55887c3d0ff0 <line:6631:1, line:6632:16>
|   | |-TextComment 0x55887c3d0fa0 <line:6631:1, col:79> Text="  Reads and returns the current value of SS. This function is only available on"
|   | `-TextComment 0x55887c3d0fc0 <line:6632:1, col:16> Text="  IA-32 and x64."
|   |-ParagraphComment 0x55887c3d1040 <line:6634:1, col:2>
|   | `-TextComment 0x55887c3d1010 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d1060 <col:3, col:34> Name="return"
|     `-ParagraphComment 0x55887c3d10c0 <col:10, col:34>
|       `-TextComment 0x55887c3d1090 <col:10, col:34> Text=" The current value of SS."
|-FunctionDecl 0x55887c1569c0 <line:6652:1, line:6656:3> line:6654:1 AsmReadTr 'UINT16 (void)'
| `-FullComment 0x55887c3d1320 <line:6644:1, line:6649:34>
|   |-ParagraphComment 0x55887c3d11a0 <line:6644:1, col:48>
|   | `-TextComment 0x55887c3d1170 <col:1, col:48> Text="  Reads the current value of Task Register (TR)."
|   |-ParagraphComment 0x55887c3d1210 <line:6646:1, line:6647:16>
|   | |-TextComment 0x55887c3d11c0 <line:6646:1, col:79> Text="  Reads and returns the current value of TR. This function is only available on"
|   | `-TextComment 0x55887c3d11e0 <line:6647:1, col:16> Text="  IA-32 and x64."
|   |-ParagraphComment 0x55887c3d1260 <line:6649:1, col:2>
|   | `-TextComment 0x55887c3d1230 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d1280 <col:3, col:34> Name="return"
|     `-ParagraphComment 0x55887c3d12e0 <col:10, col:34>
|       `-TextComment 0x55887c3d12b0 <col:10, col:34> Text=" The current value of TR."
|-FunctionDecl 0x55887c156c08 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:6673:3> line:6671:1 AsmReadGdtr 'void (IA32_DESCRIPTOR *)'
| |-ParmVarDecl 0x55887c156b18 <line:6672:11, col:29> col:29 Gdtr 'IA32_DESCRIPTOR *'
| `-FullComment 0x55887c3d15d0 <line:6659:1, line:6666:49>
|   |-ParagraphComment 0x55887c3d13c0 <line:6659:1, col:70>
|   | `-TextComment 0x55887c3d1390 <col:1, col:70> Text="  Reads the current Global Descriptor Table Register(GDTR) descriptor."
|   |-ParagraphComment 0x55887c3d1430 <line:6661:1, line:6662:46>
|   | |-TextComment 0x55887c3d13e0 <line:6661:1, col:76> Text="  Reads and returns the current GDTR descriptor and returns it in Gdtr. This"
|   | `-TextComment 0x55887c3d1400 <line:6662:1, col:46> Text="  function is only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d1480 <line:6664:1, col:33>
|   | `-TextComment 0x55887c3d1450 <col:1, col:33> Text="  If Gdtr is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3d14d0 <line:6666:1, col:2>
|   | `-TextComment 0x55887c3d14a0 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d14f0 <col:3, col:49> [in] implicitly Param="Gdtr" ParamIndex=0
|     `-ParagraphComment 0x55887c3d1580 <col:15, col:49>
|       `-TextComment 0x55887c3d1550 <col:15, col:49> Text="  The pointer to a GDTR descriptor."
|-FunctionDecl 0x55887c156e38 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:6690:3> line:6688:1 AsmWriteGdtr 'void (const IA32_DESCRIPTOR *)'
| |-ParmVarDecl 0x55887c156d48 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:6689:35> col:35 Gdtr 'const IA32_DESCRIPTOR *'
| `-FullComment 0x55887c3d1880 <line:6676:1, line:6683:49>
|   |-ParagraphComment 0x55887c3d1670 <line:6676:1, col:72>
|   | `-TextComment 0x55887c3d1640 <col:1, col:72> Text="  Writes the current Global Descriptor Table Register (GDTR) descriptor."
|   |-ParagraphComment 0x55887c3d16e0 <line:6678:1, line:6679:34>
|   | |-TextComment 0x55887c3d1690 <line:6678:1, col:76> Text="  Writes and the current GDTR descriptor specified by Gdtr. This function is"
|   | `-TextComment 0x55887c3d16b0 <line:6679:1, col:34> Text="  only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d1730 <line:6681:1, col:33>
|   | `-TextComment 0x55887c3d1700 <col:1, col:33> Text="  If Gdtr is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3d1780 <line:6683:1, col:2>
|   | `-TextComment 0x55887c3d1750 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d17a0 <col:3, col:49> [in] implicitly Param="Gdtr" ParamIndex=0
|     `-ParagraphComment 0x55887c3d1830 <col:15, col:49>
|       `-TextComment 0x55887c3d1800 <col:15, col:49> Text="  The pointer to a GDTR descriptor."
|-FunctionDecl 0x55887c156fa8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:6707:3> line:6705:1 AsmReadIdtr 'void (IA32_DESCRIPTOR *)'
| |-ParmVarDecl 0x55887c156f18 <line:6706:11, col:29> col:29 Idtr 'IA32_DESCRIPTOR *'
| `-FullComment 0x55887c3d1b30 <line:6693:1, line:6700:49>
|   |-ParagraphComment 0x55887c3d1920 <line:6693:1, col:73>
|   | `-TextComment 0x55887c3d18f0 <col:1, col:73> Text="  Reads the current Interrupt Descriptor Table Register(IDTR) descriptor."
|   |-ParagraphComment 0x55887c3d1990 <line:6695:1, line:6696:46>
|   | |-TextComment 0x55887c3d1940 <line:6695:1, col:76> Text="  Reads and returns the current IDTR descriptor and returns it in Idtr. This"
|   | `-TextComment 0x55887c3d1960 <line:6696:1, col:46> Text="  function is only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d19e0 <line:6698:1, col:33>
|   | `-TextComment 0x55887c3d19b0 <col:1, col:33> Text="  If Idtr is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3d1a30 <line:6700:1, col:2>
|   | `-TextComment 0x55887c3d1a00 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d1a50 <col:3, col:49> [in] implicitly Param="Idtr" ParamIndex=0
|     `-ParagraphComment 0x55887c3d1ae0 <col:15, col:49>
|       `-TextComment 0x55887c3d1ab0 <col:15, col:49> Text="  The pointer to a IDTR descriptor."
|-FunctionDecl 0x55887c1573b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:6724:3> line:6722:1 AsmWriteIdtr 'void (const IA32_DESCRIPTOR *)'
| |-ParmVarDecl 0x55887c157320 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:6723:35> col:35 Idtr 'const IA32_DESCRIPTOR *'
| `-FullComment 0x55887c3d1de0 <line:6710:1, line:6717:49>
|   |-ParagraphComment 0x55887c3d1bd0 <line:6710:1, col:74>
|   | `-TextComment 0x55887c3d1ba0 <col:1, col:74> Text="  Writes the current Interrupt Descriptor Table Register(IDTR) descriptor."
|   |-ParagraphComment 0x55887c3d1c40 <line:6712:1, line:6713:34>
|   | |-TextComment 0x55887c3d1bf0 <line:6712:1, col:77> Text="  Writes the current IDTR descriptor and returns it in Idtr. This function is"
|   | `-TextComment 0x55887c3d1c10 <line:6713:1, col:34> Text="  only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d1c90 <line:6715:1, col:33>
|   | `-TextComment 0x55887c3d1c60 <col:1, col:33> Text="  If Idtr is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3d1ce0 <line:6717:1, col:2>
|   | `-TextComment 0x55887c3d1cb0 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d1d00 <col:3, col:49> [in] implicitly Param="Idtr" ParamIndex=0
|     `-ParagraphComment 0x55887c3d1d90 <col:15, col:49>
|       `-TextComment 0x55887c3d1d60 <col:15, col:49> Text="  The pointer to a IDTR descriptor."
|-FunctionDecl 0x55887c157520 <line:6735:1, line:6739:3> line:6737:1 AsmReadLdtr 'UINT16 (void)'
| `-FullComment 0x55887c3d2000 <line:6727:1, line:6732:38>
|   |-ParagraphComment 0x55887c3d1e80 <line:6727:1, col:67>
|   | `-TextComment 0x55887c3d1e50 <col:1, col:67> Text="  Reads the current Local Descriptor Table Register(LDTR) selector."
|   |-ParagraphComment 0x55887c3d1ef0 <line:6729:1, line:6730:34>
|   | |-TextComment 0x55887c3d1ea0 <line:6729:1, col:78> Text="  Reads and returns the current 16-bit LDTR descriptor value. This function is"
|   | `-TextComment 0x55887c3d1ec0 <line:6730:1, col:34> Text="  only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d1f40 <line:6732:1, col:2>
|   | `-TextComment 0x55887c3d1f10 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d1f60 <col:3, col:38> Name="return"
|     `-ParagraphComment 0x55887c3d1fc0 <col:10, col:38>
|       `-TextComment 0x55887c3d1f90 <col:10, col:38> Text=" The current selector of LDT."
|-FunctionDecl 0x55887c1576e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:6754:3> line:6752:1 AsmWriteLdtr 'void (UINT16)'
| |-ParmVarDecl 0x55887c1575f8 <line:6753:11, col:19> col:19 Ldtr 'UINT16':'unsigned short'
| `-FullComment 0x55887c3d2250 <line:6742:1, line:6747:43>
|   |-ParagraphComment 0x55887c3d20a0 <line:6742:1, col:69>
|   | `-TextComment 0x55887c3d2070 <col:1, col:69> Text="  Writes the current Local Descriptor Table Register (LDTR) selector."
|   |-ParagraphComment 0x55887c3d2110 <line:6744:1, line:6745:34>
|   | |-TextComment 0x55887c3d20c0 <line:6744:1, col:76> Text="  Writes and the current LDTR descriptor specified by Ldtr. This function is"
|   | `-TextComment 0x55887c3d20e0 <line:6745:1, col:34> Text="  only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d2160 <line:6747:1, col:2>
|   | `-TextComment 0x55887c3d2130 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d2180 <col:3, col:43> [in] implicitly Param="Ldtr" ParamIndex=0
|     `-ParagraphComment 0x55887c3d2210 <col:15, col:43>
|       `-TextComment 0x55887c3d21e0 <col:15, col:43> Text="  16-bit LDTR selector value."
|-FunctionDecl 0x55887c157938 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:6773:3> line:6771:1 AsmFxSave 'void (IA32_FX_BUFFER *)'
| |-ParmVarDecl 0x55887c157848 <line:6772:11, col:28> col:28 Buffer 'IA32_FX_BUFFER *'
| `-FullComment 0x55887c3d2550 <line:6757:1, line:6766:86>
|   |-ParagraphComment 0x55887c3d22f0 <line:6757:1, col:63>
|   | `-TextComment 0x55887c3d22c0 <col:1, col:63> Text="  Save the current floating point/SSE/SSE2 context to a buffer."
|   |-ParagraphComment 0x55887c3d2390 <line:6759:1, line:6761:29>
|   | |-TextComment 0x55887c3d2310 <line:6759:1, col:76> Text="  Saves the current floating point/SSE/SSE2 state to the buffer specified by"
|   | |-TextComment 0x55887c3d2330 <line:6760:1, col:77> Text="  Buffer. Buffer must be aligned on a 16-byte boundary. This function is only"
|   | `-TextComment 0x55887c3d2350 <line:6761:1, col:29> Text="  available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d2400 <line:6763:1, line:6764:64>
|   | |-TextComment 0x55887c3d23b0 <line:6763:1, col:35> Text="  If Buffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c3d23d0 <line:6764:1, col:64> Text="  If Buffer is not aligned on a 16-byte boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c3d2450 <line:6766:1, col:2>
|   | `-TextComment 0x55887c3d2420 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d2470 <col:3, col:86> [in] implicitly Param="Buffer" ParamIndex=0
|     `-ParagraphComment 0x55887c3d2500 <col:17, col:86>
|       `-TextComment 0x55887c3d24d0 <col:17, col:86> Text="  The pointer to a buffer to save the floating point/SSE/SSE2 context."
|-FunctionDecl 0x55887c157b68 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:6793:3> line:6791:1 AsmFxRestore 'void (const IA32_FX_BUFFER *)'
| |-ParmVarDecl 0x55887c157a78 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:6792:34> col:34 Buffer 'const IA32_FX_BUFFER *'
| `-FullComment 0x55887c3d2880 <line:6776:1, line:6786:86>
|   |-ParagraphComment 0x55887c3d25f0 <line:6776:1, col:69>
|   | `-TextComment 0x55887c3d25c0 <col:1, col:69> Text="  Restores the current floating point/SSE/SSE2 context from a buffer."
|   |-ParagraphComment 0x55887c3d2690 <line:6778:1, line:6780:34>
|   | |-TextComment 0x55887c3d2610 <line:6778:1, col:78> Text="  Restores the current floating point/SSE/SSE2 state from the buffer specified"
|   | |-TextComment 0x55887c3d2630 <line:6779:1, col:75> Text="  by Buffer. Buffer must be aligned on a 16-byte boundary. This function is"
|   | `-TextComment 0x55887c3d2650 <line:6780:1, col:34> Text="  only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d2730 <line:6782:1, line:6784:58>
|   | |-TextComment 0x55887c3d26b0 <line:6782:1, col:35> Text="  If Buffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3d26d0 <line:6783:1, col:64> Text="  If Buffer is not aligned on a 16-byte boundary, then ASSERT()."
|   | `-TextComment 0x55887c3d26f0 <line:6784:1, col:58> Text="  If Buffer was not saved with AsmFxSave(), then ASSERT()."
|   |-ParagraphComment 0x55887c3d2780 <line:6786:1, col:2>
|   | `-TextComment 0x55887c3d2750 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d27a0 <col:3, col:86> [in] implicitly Param="Buffer" ParamIndex=0
|     `-ParagraphComment 0x55887c3d2830 <col:17, col:86>
|       `-TextComment 0x55887c3d2800 <col:17, col:86> Text="  The pointer to a buffer to save the floating point/SSE/SSE2 context."
|-FunctionDecl 0x55887c157cf8 <line:6804:1, line:6808:3> line:6806:1 AsmReadMm0 'UINT64 (void)'
| `-FullComment 0x55887c3d2aa0 <line:6796:1, line:6801:35>
|   |-ParagraphComment 0x55887c3d2920 <line:6796:1, col:58>
|   | `-TextComment 0x55887c3d28f0 <col:1, col:58> Text="  Reads the current value of 64-bit MMX Register #0 (MM0)."
|   |-ParagraphComment 0x55887c3d2990 <line:6798:1, line:6799:19>
|   | |-TextComment 0x55887c3d2940 <line:6798:1, col:77> Text="  Reads and returns the current value of MM0. This function is only available"
|   | `-TextComment 0x55887c3d2960 <line:6799:1, col:19> Text="  on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d29e0 <line:6801:1, col:2>
|   | `-TextComment 0x55887c3d29b0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d2a00 <col:3, col:35> Name="return"
|     `-ParagraphComment 0x55887c3d2a60 <col:10, col:35>
|       `-TextComment 0x55887c3d2a30 <col:10, col:35> Text=" The current value of MM0."
|-FunctionDecl 0x55887c157e60 <line:6819:1, line:6823:3> line:6821:1 AsmReadMm1 'UINT64 (void)'
| `-FullComment 0x55887c3d2cc0 <line:6811:1, line:6816:35>
|   |-ParagraphComment 0x55887c3d2b40 <line:6811:1, col:58>
|   | `-TextComment 0x55887c3d2b10 <col:1, col:58> Text="  Reads the current value of 64-bit MMX Register #1 (MM1)."
|   |-ParagraphComment 0x55887c3d2bb0 <line:6813:1, line:6814:19>
|   | |-TextComment 0x55887c3d2b60 <line:6813:1, col:77> Text="  Reads and returns the current value of MM1. This function is only available"
|   | `-TextComment 0x55887c3d2b80 <line:6814:1, col:19> Text="  on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d2c00 <line:6816:1, col:2>
|   | `-TextComment 0x55887c3d2bd0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d2c20 <col:3, col:35> Name="return"
|     `-ParagraphComment 0x55887c3d2c80 <col:10, col:35>
|       `-TextComment 0x55887c3d2c50 <col:10, col:35> Text=" The current value of MM1."
|-FunctionDecl 0x55887c157fc0 <line:6834:1, line:6838:3> line:6836:1 AsmReadMm2 'UINT64 (void)'
| `-FullComment 0x55887c3d2ee0 <line:6826:1, line:6831:35>
|   |-ParagraphComment 0x55887c3d2d60 <line:6826:1, col:58>
|   | `-TextComment 0x55887c3d2d30 <col:1, col:58> Text="  Reads the current value of 64-bit MMX Register #2 (MM2)."
|   |-ParagraphComment 0x55887c3d2dd0 <line:6828:1, line:6829:19>
|   | |-TextComment 0x55887c3d2d80 <line:6828:1, col:77> Text="  Reads and returns the current value of MM2. This function is only available"
|   | `-TextComment 0x55887c3d2da0 <line:6829:1, col:19> Text="  on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d2e20 <line:6831:1, col:2>
|   | `-TextComment 0x55887c3d2df0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d2e40 <col:3, col:35> Name="return"
|     `-ParagraphComment 0x55887c3d2ea0 <col:10, col:35>
|       `-TextComment 0x55887c3d2e70 <col:10, col:35> Text=" The current value of MM2."
|-FunctionDecl 0x55887c158120 <line:6849:1, line:6853:3> line:6851:1 AsmReadMm3 'UINT64 (void)'
| `-FullComment 0x55887c3d3120 <line:6841:1, line:6846:35>
|   |-ParagraphComment 0x55887c3d2f80 <line:6841:1, col:58>
|   | `-TextComment 0x55887c3d2f50 <col:1, col:58> Text="  Reads the current value of 64-bit MMX Register #3 (MM3)."
|   |-ParagraphComment 0x55887c3d2ff0 <line:6843:1, line:6844:19>
|   | |-TextComment 0x55887c3d2fa0 <line:6843:1, col:77> Text="  Reads and returns the current value of MM3. This function is only available"
|   | `-TextComment 0x55887c3d2fc0 <line:6844:1, col:19> Text="  on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d3040 <line:6846:1, col:2>
|   | `-TextComment 0x55887c3d3010 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d3080 <col:3, col:35> Name="return"
|     `-ParagraphComment 0x55887c3d30e0 <col:10, col:35>
|       `-TextComment 0x55887c3d30b0 <col:10, col:35> Text=" The current value of MM3."
|-FunctionDecl 0x55887c158280 <line:6864:1, line:6868:3> line:6866:1 AsmReadMm4 'UINT64 (void)'
| `-FullComment 0x55887c3d3340 <line:6856:1, line:6861:35>
|   |-ParagraphComment 0x55887c3d31c0 <line:6856:1, col:58>
|   | `-TextComment 0x55887c3d3190 <col:1, col:58> Text="  Reads the current value of 64-bit MMX Register #4 (MM4)."
|   |-ParagraphComment 0x55887c3d3230 <line:6858:1, line:6859:19>
|   | |-TextComment 0x55887c3d31e0 <line:6858:1, col:77> Text="  Reads and returns the current value of MM4. This function is only available"
|   | `-TextComment 0x55887c3d3200 <line:6859:1, col:19> Text="  on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d3280 <line:6861:1, col:2>
|   | `-TextComment 0x55887c3d3250 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d32a0 <col:3, col:35> Name="return"
|     `-ParagraphComment 0x55887c3d3300 <col:10, col:35>
|       `-TextComment 0x55887c3d32d0 <col:10, col:35> Text=" The current value of MM4."
|-FunctionDecl 0x55887c158630 <line:6879:1, line:6883:3> line:6881:1 AsmReadMm5 'UINT64 (void)'
| `-FullComment 0x55887c3d3560 <line:6871:1, line:6876:35>
|   |-ParagraphComment 0x55887c3d33e0 <line:6871:1, col:58>
|   | `-TextComment 0x55887c3d33b0 <col:1, col:58> Text="  Reads the current value of 64-bit MMX Register #5 (MM5)."
|   |-ParagraphComment 0x55887c3d3450 <line:6873:1, line:6874:19>
|   | |-TextComment 0x55887c3d3400 <line:6873:1, col:77> Text="  Reads and returns the current value of MM5. This function is only available"
|   | `-TextComment 0x55887c3d3420 <line:6874:1, col:19> Text="  on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d34a0 <line:6876:1, col:2>
|   | `-TextComment 0x55887c3d3470 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d34c0 <col:3, col:35> Name="return"
|     `-ParagraphComment 0x55887c3d3520 <col:10, col:35>
|       `-TextComment 0x55887c3d34f0 <col:10, col:35> Text=" The current value of MM5."
|-FunctionDecl 0x55887c158790 <line:6894:1, line:6898:3> line:6896:1 AsmReadMm6 'UINT64 (void)'
| `-FullComment 0x55887c3d3780 <line:6886:1, line:6891:35>
|   |-ParagraphComment 0x55887c3d3600 <line:6886:1, col:58>
|   | `-TextComment 0x55887c3d35d0 <col:1, col:58> Text="  Reads the current value of 64-bit MMX Register #6 (MM6)."
|   |-ParagraphComment 0x55887c3d3670 <line:6888:1, line:6889:19>
|   | |-TextComment 0x55887c3d3620 <line:6888:1, col:77> Text="  Reads and returns the current value of MM6. This function is only available"
|   | `-TextComment 0x55887c3d3640 <line:6889:1, col:19> Text="  on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d36c0 <line:6891:1, col:2>
|   | `-TextComment 0x55887c3d3690 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d36e0 <col:3, col:35> Name="return"
|     `-ParagraphComment 0x55887c3d3740 <col:10, col:35>
|       `-TextComment 0x55887c3d3710 <col:10, col:35> Text=" The current value of MM6."
|-FunctionDecl 0x55887c1588f0 <line:6909:1, line:6913:3> line:6911:1 AsmReadMm7 'UINT64 (void)'
| `-FullComment 0x55887c3d39a0 <line:6901:1, line:6906:35>
|   |-ParagraphComment 0x55887c3d3820 <line:6901:1, col:58>
|   | `-TextComment 0x55887c3d37f0 <col:1, col:58> Text="  Reads the current value of 64-bit MMX Register #7 (MM7)."
|   |-ParagraphComment 0x55887c3d3890 <line:6903:1, line:6904:19>
|   | |-TextComment 0x55887c3d3840 <line:6903:1, col:77> Text="  Reads and returns the current value of MM7. This function is only available"
|   | `-TextComment 0x55887c3d3860 <line:6904:1, col:19> Text="  on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d38e0 <line:6906:1, col:2>
|   | `-TextComment 0x55887c3d38b0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d3900 <col:3, col:35> Name="return"
|     `-ParagraphComment 0x55887c3d3960 <col:10, col:35>
|       `-TextComment 0x55887c3d3930 <col:10, col:35> Text=" The current value of MM7."
|-FunctionDecl 0x55887c158ab8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:6928:3> line:6926:1 AsmWriteMm0 'void (UINT64)'
| |-ParmVarDecl 0x55887c1589c8 <line:6927:11, col:19> col:19 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3d3bf0 <line:6916:1, line:6921:49>
|   |-ParagraphComment 0x55887c3d3a40 <line:6916:1, col:59>
|   | `-TextComment 0x55887c3d3a10 <col:1, col:59> Text="  Writes the current value of 64-bit MMX Register #0 (MM0)."
|   |-ParagraphComment 0x55887c3d3ab0 <line:6918:1, line:6919:6>
|   | |-TextComment 0x55887c3d3a60 <line:6918:1, col:78> Text="  Writes the current value of MM0. This function is only available on IA32 and"
|   | `-TextComment 0x55887c3d3a80 <line:6919:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3d3b00 <line:6921:1, col:2>
|   | `-TextComment 0x55887c3d3ad0 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d3b20 <col:3, col:49> [in] implicitly Param="Value" ParamIndex=0
|     `-ParagraphComment 0x55887c3d3bb0 <col:16, col:49>
|       `-TextComment 0x55887c3d3b80 <col:16, col:49> Text=" The 64-bit value to write to MM0."
|-FunctionDecl 0x55887c158c28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:6943:3> line:6941:1 AsmWriteMm1 'void (UINT64)'
| |-ParmVarDecl 0x55887c158b98 <line:6942:11, col:19> col:19 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3d3e40 <line:6931:1, line:6936:49>
|   |-ParagraphComment 0x55887c3d3c90 <line:6931:1, col:59>
|   | `-TextComment 0x55887c3d3c60 <col:1, col:59> Text="  Writes the current value of 64-bit MMX Register #1 (MM1)."
|   |-ParagraphComment 0x55887c3d3d00 <line:6933:1, line:6934:6>
|   | |-TextComment 0x55887c3d3cb0 <line:6933:1, col:78> Text="  Writes the current value of MM1. This function is only available on IA32 and"
|   | `-TextComment 0x55887c3d3cd0 <line:6934:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3d3d50 <line:6936:1, col:2>
|   | `-TextComment 0x55887c3d3d20 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d3d70 <col:3, col:49> [in] implicitly Param="Value" ParamIndex=0
|     `-ParagraphComment 0x55887c3d3e00 <col:16, col:49>
|       `-TextComment 0x55887c3d3dd0 <col:16, col:49> Text=" The 64-bit value to write to MM1."
|-FunctionDecl 0x55887c158d98 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:6958:3> line:6956:1 AsmWriteMm2 'void (UINT64)'
| |-ParmVarDecl 0x55887c158d08 <line:6957:11, col:19> col:19 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3d4090 <line:6946:1, line:6951:49>
|   |-ParagraphComment 0x55887c3d3ee0 <line:6946:1, col:59>
|   | `-TextComment 0x55887c3d3eb0 <col:1, col:59> Text="  Writes the current value of 64-bit MMX Register #2 (MM2)."
|   |-ParagraphComment 0x55887c3d3f50 <line:6948:1, line:6949:6>
|   | |-TextComment 0x55887c3d3f00 <line:6948:1, col:78> Text="  Writes the current value of MM2. This function is only available on IA32 and"
|   | `-TextComment 0x55887c3d3f20 <line:6949:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3d3fa0 <line:6951:1, col:2>
|   | `-TextComment 0x55887c3d3f70 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d3fc0 <col:3, col:49> [in] implicitly Param="Value" ParamIndex=0
|     `-ParagraphComment 0x55887c3d4050 <col:16, col:49>
|       `-TextComment 0x55887c3d4020 <col:16, col:49> Text=" The 64-bit value to write to MM2."
|-FunctionDecl 0x55887c158f08 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:6973:3> line:6971:1 AsmWriteMm3 'void (UINT64)'
| |-ParmVarDecl 0x55887c158e78 <line:6972:11, col:19> col:19 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3d42e0 <line:6961:1, line:6966:49>
|   |-ParagraphComment 0x55887c3d4130 <line:6961:1, col:59>
|   | `-TextComment 0x55887c3d4100 <col:1, col:59> Text="  Writes the current value of 64-bit MMX Register #3 (MM3)."
|   |-ParagraphComment 0x55887c3d41a0 <line:6963:1, line:6964:6>
|   | |-TextComment 0x55887c3d4150 <line:6963:1, col:78> Text="  Writes the current value of MM3. This function is only available on IA32 and"
|   | `-TextComment 0x55887c3d4170 <line:6964:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3d41f0 <line:6966:1, col:2>
|   | `-TextComment 0x55887c3d41c0 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d4210 <col:3, col:49> [in] implicitly Param="Value" ParamIndex=0
|     `-ParagraphComment 0x55887c3d42a0 <col:16, col:49>
|       `-TextComment 0x55887c3d4270 <col:16, col:49> Text=" The 64-bit value to write to MM3."
|-FunctionDecl 0x55887c159078 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:6988:3> line:6986:1 AsmWriteMm4 'void (UINT64)'
| |-ParmVarDecl 0x55887c158fe8 <line:6987:11, col:19> col:19 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3d4530 <line:6976:1, line:6981:49>
|   |-ParagraphComment 0x55887c3d4380 <line:6976:1, col:59>
|   | `-TextComment 0x55887c3d4350 <col:1, col:59> Text="  Writes the current value of 64-bit MMX Register #4 (MM4)."
|   |-ParagraphComment 0x55887c3d43f0 <line:6978:1, line:6979:6>
|   | |-TextComment 0x55887c3d43a0 <line:6978:1, col:78> Text="  Writes the current value of MM4. This function is only available on IA32 and"
|   | `-TextComment 0x55887c3d43c0 <line:6979:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3d4440 <line:6981:1, col:2>
|   | `-TextComment 0x55887c3d4410 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d4460 <col:3, col:49> [in] implicitly Param="Value" ParamIndex=0
|     `-ParagraphComment 0x55887c3d44f0 <col:16, col:49>
|       `-TextComment 0x55887c3d44c0 <col:16, col:49> Text=" The 64-bit value to write to MM4."
|-FunctionDecl 0x55887c1591e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7003:3> line:7001:1 AsmWriteMm5 'void (UINT64)'
| |-ParmVarDecl 0x55887c159158 <line:7002:11, col:19> col:19 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3d4780 <line:6991:1, line:6996:49>
|   |-ParagraphComment 0x55887c3d45d0 <line:6991:1, col:59>
|   | `-TextComment 0x55887c3d45a0 <col:1, col:59> Text="  Writes the current value of 64-bit MMX Register #5 (MM5)."
|   |-ParagraphComment 0x55887c3d4640 <line:6993:1, line:6994:6>
|   | |-TextComment 0x55887c3d45f0 <line:6993:1, col:78> Text="  Writes the current value of MM5. This function is only available on IA32 and"
|   | `-TextComment 0x55887c3d4610 <line:6994:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3d4690 <line:6996:1, col:2>
|   | `-TextComment 0x55887c3d4660 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d46b0 <col:3, col:49> [in] implicitly Param="Value" ParamIndex=0
|     `-ParagraphComment 0x55887c3d4740 <col:16, col:49>
|       `-TextComment 0x55887c3d4710 <col:16, col:49> Text=" The 64-bit value to write to MM5."
|-FunctionDecl 0x55887c159358 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7018:3> line:7016:1 AsmWriteMm6 'void (UINT64)'
| |-ParmVarDecl 0x55887c1592c8 <line:7017:11, col:19> col:19 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3d49d0 <line:7006:1, line:7011:49>
|   |-ParagraphComment 0x55887c3d4820 <line:7006:1, col:59>
|   | `-TextComment 0x55887c3d47f0 <col:1, col:59> Text="  Writes the current value of 64-bit MMX Register #6 (MM6)."
|   |-ParagraphComment 0x55887c3d4890 <line:7008:1, line:7009:6>
|   | |-TextComment 0x55887c3d4840 <line:7008:1, col:78> Text="  Writes the current value of MM6. This function is only available on IA32 and"
|   | `-TextComment 0x55887c3d4860 <line:7009:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3d48e0 <line:7011:1, col:2>
|   | `-TextComment 0x55887c3d48b0 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d4900 <col:3, col:49> [in] implicitly Param="Value" ParamIndex=0
|     `-ParagraphComment 0x55887c3d4990 <col:16, col:49>
|       `-TextComment 0x55887c3d4960 <col:16, col:49> Text=" The 64-bit value to write to MM6."
|-FunctionDecl 0x55887c1594c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7033:3> line:7031:1 AsmWriteMm7 'void (UINT64)'
| |-ParmVarDecl 0x55887c159438 <line:7032:11, col:19> col:19 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3d4c20 <line:7021:1, line:7026:49>
|   |-ParagraphComment 0x55887c3d4a70 <line:7021:1, col:59>
|   | `-TextComment 0x55887c3d4a40 <col:1, col:59> Text="  Writes the current value of 64-bit MMX Register #7 (MM7)."
|   |-ParagraphComment 0x55887c3d4ae0 <line:7023:1, line:7024:6>
|   | |-TextComment 0x55887c3d4a90 <line:7023:1, col:78> Text="  Writes the current value of MM7. This function is only available on IA32 and"
|   | `-TextComment 0x55887c3d4ab0 <line:7024:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3d4b30 <line:7026:1, col:2>
|   | `-TextComment 0x55887c3d4b00 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d4b50 <col:3, col:49> [in] implicitly Param="Value" ParamIndex=0
|     `-ParagraphComment 0x55887c3d4be0 <col:16, col:49>
|       `-TextComment 0x55887c3d4bb0 <col:16, col:49> Text=" The 64-bit value to write to MM7."
|-FunctionDecl 0x55887c159900 <line:7044:1, line:7048:3> line:7046:1 AsmReadTsc 'UINT64 (void)'
| `-FullComment 0x55887c3d4e40 <line:7036:1, line:7041:34>
|   |-ParagraphComment 0x55887c3d4cc0 <line:7036:1, col:54>
|   | `-TextComment 0x55887c3d4c90 <col:1, col:54> Text="  Reads the current value of Time Stamp Counter (TSC)."
|   |-ParagraphComment 0x55887c3d4d30 <line:7038:1, line:7039:19>
|   | |-TextComment 0x55887c3d4ce0 <line:7038:1, col:77> Text="  Reads and returns the current value of TSC. This function is only available"
|   | `-TextComment 0x55887c3d4d00 <line:7039:1, col:19> Text="  on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d4d80 <line:7041:1, col:2>
|   | `-TextComment 0x55887c3d4d50 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d4da0 <col:3, col:34> Name="return"
|     `-ParagraphComment 0x55887c3d4e00 <col:10, col:34>
|       `-TextComment 0x55887c3d4dd0 <col:10, col:34> Text=" The current value of TSC"
|-FunctionDecl 0x55887c159a68 <line:7061:1, line:7065:3> line:7063:1 AsmReadPmc 'UINT64 (UINT32)'
| |-ParmVarDecl 0x55887c1599d8 <line:7064:11, col:19> col:19 Index 'UINT32':'unsigned int'
| `-FullComment 0x55887c3d5170 <line:7051:1, line:7058:50>
|   |-ParagraphComment 0x55887c3d4ee0 <line:7051:1, col:57>
|   | `-TextComment 0x55887c3d4eb0 <col:1, col:57> Text="  Reads the current value of a Performance Counter (PMC)."
|   |-ParagraphComment 0x55887c3d4f50 <line:7053:1, line:7054:58>
|   | |-TextComment 0x55887c3d4f00 <line:7053:1, col:73> Text="  Reads and returns the current value of performance counter specified by"
|   | `-TextComment 0x55887c3d4f20 <line:7054:1, col:58> Text="  Index. This function is only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d4fa0 <line:7056:1, col:2>
|   | `-TextComment 0x55887c3d4f70 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d4fc0 <col:3, col:61> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3d5050 <col:16, col:61>
|   |   `-TextComment 0x55887c3d5020 <col:16, col:61> Text=" The 32-bit Performance Counter index to read."
|   |-ParagraphComment 0x55887c3d50a0 <line:7058:1, col:2>
|   | `-TextComment 0x55887c3d5070 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d50c0 <col:3, col:50> Name="return"
|     `-ParagraphComment 0x55887c3d5120 <col:10, col:50>
|       `-TextComment 0x55887c3d50f0 <col:10, col:50> Text=" The value of the PMC specified by Index."
|-FunctionDecl 0x55887c159d18 <line:7083:1, line:7089:3> line:7085:1 AsmMonitor 'UINTN (UINTN, UINTN, UINTN)'
| |-ParmVarDecl 0x55887c159b48 <line:7086:11, col:18> col:18 Eax 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c159bc0 <line:7087:11, col:18> col:18 Ecx 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c159c38 <line:7088:11, col:18> col:18 Edx 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3d56d0 <line:7068:1, line:7080:13>
|   |-ParagraphComment 0x55887c3d5210 <line:7068:1, col:54>
|   | `-TextComment 0x55887c3d51e0 <col:1, col:54> Text="  Sets up a monitor buffer that is used by AsmMwait()."
|   |-ParagraphComment 0x55887c3d5280 <line:7070:1, line:7071:73>
|   | |-TextComment 0x55887c3d5230 <line:7070:1, col:78> Text="  Executes a MONITOR instruction with the register state specified by Eax, Ecx"
|   | `-TextComment 0x55887c3d5250 <line:7071:1, col:73> Text="  and Edx. Returns Eax. This function is only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d52d0 <line:7073:1, col:2>
|   | `-TextComment 0x55887c3d52a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d52f0 <col:3, line:7075:2> [in] implicitly Param="Eax" ParamIndex=0
|   | `-ParagraphComment 0x55887c3d53d0 <line:7073:14, line:7075:2>
|   |   |-TextComment 0x55887c3d5350 <line:7073:14, col:76> Text=" The value to load into EAX or RAX before executing the MONITOR"
|   |   |-TextComment 0x55887c3d5370 <line:7074:1, col:26> Text="              instruction."
|   |   `-TextComment 0x55887c3d5390 <line:7075:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d53f0 <col:3, line:7077:2> [in] implicitly Param="Ecx" ParamIndex=1
|   | `-ParagraphComment 0x55887c3d54d0 <line:7075:14, line:7077:2>
|   |   |-TextComment 0x55887c3d5450 <line:7075:14, col:76> Text=" The value to load into ECX or RCX before executing the MONITOR"
|   |   |-TextComment 0x55887c3d5470 <line:7076:1, col:26> Text="              instruction."
|   |   `-TextComment 0x55887c3d5490 <line:7077:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d54f0 <col:3, line:7078:26> [in] implicitly Param="Edx" ParamIndex=2
|   | `-ParagraphComment 0x55887c3d55a0 <line:7077:14, line:7078:26>
|   |   |-TextComment 0x55887c3d5550 <line:7077:14, col:76> Text=" The value to load into EDX or RDX before executing the MONITOR"
|   |   `-TextComment 0x55887c3d5570 <line:7078:1, col:26> Text="              instruction."
|   |-ParagraphComment 0x55887c3d55f0 <line:7080:1, col:2>
|   | `-TextComment 0x55887c3d55c0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d5610 <col:3, col:13> Name="return"
|     `-ParagraphComment 0x55887c3d5670 <col:10, col:13>
|       `-TextComment 0x55887c3d5640 <col:10, col:13> Text=" Eax"
|-FunctionDecl 0x55887c159f58 <line:7105:1, line:7110:3> line:7107:1 AsmMwait 'UINTN (UINTN, UINTN)'
| |-ParmVarDecl 0x55887c159e08 <line:7108:11, col:18> col:18 Eax 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c159e80 <line:7109:11, col:18> col:18 Ecx 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3d5b30 <line:7092:1, line:7102:13>
|   |-ParagraphComment 0x55887c3d5770 <line:7092:1, col:32>
|   | `-TextComment 0x55887c3d5740 <col:1, col:32> Text="  Executes an MWAIT instruction."
|   |-ParagraphComment 0x55887c3d57e0 <line:7094:1, line:7095:69>
|   | |-TextComment 0x55887c3d5790 <line:7094:1, col:76> Text="  Executes an MWAIT instruction with the register state specified by Eax and"
|   | `-TextComment 0x55887c3d57b0 <line:7095:1, col:69> Text="  Ecx. Returns Eax. This function is only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d5830 <line:7097:1, col:2>
|   | `-TextComment 0x55887c3d5800 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d5850 <col:3, line:7099:2> [in] implicitly Param="Eax" ParamIndex=0
|   | `-ParagraphComment 0x55887c3d5930 <line:7097:14, line:7099:2>
|   |   |-TextComment 0x55887c3d58b0 <line:7097:14, col:76> Text=" The value to load into EAX or RAX before executing the MONITOR"
|   |   |-TextComment 0x55887c3d58d0 <line:7098:1, col:26> Text="              instruction."
|   |   `-TextComment 0x55887c3d58f0 <line:7099:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d5950 <col:3, line:7100:26> [in] implicitly Param="Ecx" ParamIndex=1
|   | `-ParagraphComment 0x55887c3d5a00 <line:7099:14, line:7100:26>
|   |   |-TextComment 0x55887c3d59b0 <line:7099:14, col:76> Text=" The value to load into ECX or RCX before executing the MONITOR"
|   |   `-TextComment 0x55887c3d59d0 <line:7100:1, col:26> Text="              instruction."
|   |-ParagraphComment 0x55887c3d5a50 <line:7102:1, col:2>
|   | `-TextComment 0x55887c3d5a20 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d5a70 <col:3, col:13> Name="return"
|     `-ParagraphComment 0x55887c3d5ad0 <col:10, col:13>
|       `-TextComment 0x55887c3d5aa0 <col:10, col:13> Text=" Eax"
|-FunctionDecl 0x55887c15a0d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7123:3> line:7121:1 AsmWbinvd 'void (void)'
| `-FullComment 0x55887c3d5c70 <line:7113:1, line:7116:6>
|   |-ParagraphComment 0x55887c3d5bd0 <line:7113:1, col:32>
|   | `-TextComment 0x55887c3d5ba0 <col:1, col:32> Text="  Executes a WBINVD instruction."
|   `-ParagraphComment 0x55887c3d5c40 <line:7115:1, line:7116:6>
|     |-TextComment 0x55887c3d5bf0 <line:7115:1, col:77> Text="  Executes a WBINVD instruction. This function is only available on IA-32 and"
|     `-TextComment 0x55887c3d5c10 <line:7116:1, col:6> Text="  x64."
|-FunctionDecl 0x55887c15a230 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7136:3> line:7134:1 AsmInvd 'void (void)'
| `-FullComment 0x55887c3d5db0 <line:7126:1, line:7129:6>
|   |-ParagraphComment 0x55887c3d5d10 <line:7126:1, col:30>
|   | `-TextComment 0x55887c3d5ce0 <col:1, col:30> Text="  Executes a INVD instruction."
|   `-ParagraphComment 0x55887c3d5d80 <line:7128:1, line:7129:6>
|     |-TextComment 0x55887c3d5d30 <line:7128:1, col:75> Text="  Executes a INVD instruction. This function is only available on IA-32 and"
|     `-TextComment 0x55887c3d5d50 <line:7129:1, col:6> Text="  x64."
|-FunctionDecl 0x55887c15a3e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7157:3> line:7155:1 AsmFlushCacheLine 'void *(void *)'
| |-ParmVarDecl 0x55887c15a310 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7156:18> col:18 LinearAddress 'void *'
| `-FullComment 0x55887c3d61a0 <line:7139:1, line:7151:24>
|   |-ParagraphComment 0x55887c3d5e70 <line:7139:1, line:7140:30>
|   | |-TextComment 0x55887c3d5e20 <line:7139:1, col:74> Text="  Flushes a cache line from all the instruction and data caches within the"
|   | `-TextComment 0x55887c3d5e40 <line:7140:1, col:30> Text="  coherency domain of the CPU."
|   |-ParagraphComment 0x55887c3d5ee0 <line:7142:1, line:7143:51>
|   | |-TextComment 0x55887c3d5e90 <line:7142:1, col:79> Text="  Flushed the cache line specified by LinearAddress, and returns LinearAddress."
|   | `-TextComment 0x55887c3d5eb0 <line:7143:1, col:51> Text="  This function is only available on IA-32 and x64."
|   |-ParagraphComment 0x55887c3d5f30 <line:7145:1, col:2>
|   | `-TextComment 0x55887c3d5f00 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d5f50 <col:3, line:7149:32> [in] implicitly Param="LinearAddress" ParamIndex=0
|   | `-ParagraphComment 0x55887c3d6080 <line:7145:24, line:7149:32>
|   |   |-TextComment 0x55887c3d5fb0 <line:7145:24, col:77> Text=" The address of the cache line to flush. If the CPU is"
|   |   |-TextComment 0x55887c3d5fd0 <line:7146:1, col:78> Text="                        in a physical addressing mode, then LinearAddress is a"
|   |   |-TextComment 0x55887c3d5ff0 <line:7147:1, col:68> Text="                        physical address. If the CPU is in a virtual"
|   |   |-TextComment 0x55887c3d6010 <line:7148:1, col:72> Text="                        addressing mode, then LinearAddress is a virtual"
|   |   `-TextComment 0x55887c3d6030 <line:7149:1, col:32> Text="                        address."
|   |-ParagraphComment 0x55887c3d60d0 <line:7151:1, col:2>
|   | `-TextComment 0x55887c3d60a0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d60f0 <col:3, col:24> Name="return"
|     `-ParagraphComment 0x55887c3d6150 <col:10, col:24>
|       `-TextComment 0x55887c3d6120 <col:10, col:24> Text=" LinearAddress."
|-FunctionDecl 0x55887c15a788 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7203:3> line:7198:1 AsmEnablePaging32 'void (SWITCH_STACK_ENTRY_POINT, void *, void *, void *)'
| |-ParmVarDecl 0x55887c15a4c8 <line:7199:11, col:37> col:37 EntryPoint 'SWITCH_STACK_ENTRY_POINT':'void (*)(void *, void *)'
| |-ParmVarDecl 0x55887c15a548 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7200:38> col:38 Context1 'void *'
| |-ParmVarDecl 0x55887c15a5c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7201:38> col:38 Context2 'void *'
| |-ParmVarDecl 0x55887c15a648 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7202:38> col:38 NewStack 'void *'
| `-FullComment 0x55887c3d6a80 <line:7160:1, line:7193:55>
|   |-ParagraphComment 0x55887c3d6240 <line:7160:1, col:44>
|   | `-TextComment 0x55887c3d6210 <col:1, col:44> Text="  Enables the 32-bit paging mode on the CPU."
|   |-ParagraphComment 0x55887c3d63a0 <line:7162:1, line:7169:31>
|   | |-TextComment 0x55887c3d6260 <line:7162:1, col:79> Text="  Enables the 32-bit paging mode on the CPU. CR0, CR3, CR4, and the page tables"
|   | |-TextComment 0x55887c3d6280 <line:7163:1, col:75> Text="  must be properly initialized prior to calling this service. This function"
|   | |-TextComment 0x55887c3d62a0 <line:7164:1, col:79> Text="  assumes the current execution mode is 32-bit protected mode. This function is"
|   | |-TextComment 0x55887c3d62c0 <line:7165:1, col:78> Text="  only available on IA-32. After the 32-bit paging mode is enabled, control is"
|   | |-TextComment 0x55887c3d62e0 <line:7166:1, col:73> Text="  transferred to the function specified by EntryPoint using the new stack"
|   | |-TextComment 0x55887c3d6300 <line:7167:1, col:79> Text="  specified by NewStack and passing in the parameters specified by Context1 and"
|   | |-TextComment 0x55887c3d6320 <line:7168:1, col:76> Text="  Context2. Context1 and Context2 are optional and may be NULL. The function"
|   | `-TextComment 0x55887c3d6340 <line:7169:1, col:31> Text="  EntryPoint must never return."
|   |-ParagraphComment 0x55887c3d6440 <line:7171:1, line:7173:37>
|   | |-TextComment 0x55887c3d63c0 <line:7171:1, col:76> Text="  If the current execution mode is not 32-bit protected mode, then ASSERT()."
|   | |-TextComment 0x55887c3d63e0 <line:7172:1, col:39> Text="  If EntryPoint is NULL, then ASSERT()."
|   | `-TextComment 0x55887c3d6400 <line:7173:1, col:37> Text="  If NewStack is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3d65f0 <line:7175:1, line:7184:49>
|   | |-TextComment 0x55887c3d6460 <line:7175:1, col:77> Text="  There are a number of constraints that must be followed before calling this"
|   | |-TextComment 0x55887c3d6480 <line:7176:1, col:11> Text="  function:"
|   | |-TextComment 0x55887c3d64a0 <line:7177:1, col:34> Text="  1)  Interrupts must be disabled."
|   | |-TextComment 0x55887c3d64c0 <line:7178:1, col:77> Text="  2)  The caller must be in 32-bit protected mode with flat descriptors. This"
|   | |-TextComment 0x55887c3d64e0 <line:7179:1, col:69> Text="      means all descriptors must have a base of 0 and a limit of 4GB."
|   | |-TextComment 0x55887c3d6500 <line:7180:1, col:73> Text="  3)  CR0 and CR4 must be compatible with 32-bit protected mode with flat"
|   | |-TextComment 0x55887c3d6520 <line:7181:1, col:18> Text="      descriptors."
|   | |-TextComment 0x55887c3d6540 <line:7182:1, col:79> Text="  4)  CR3 must point to valid page tables that will be used once the transition"
|   | |-TextComment 0x55887c3d6560 <line:7183:1, col:79> Text="      is complete, and those page tables must guarantee that the pages for this"
|   | `-TextComment 0x55887c3d6580 <line:7184:1, col:49> Text="      function and the stack are identity mapped."
|   |-ParagraphComment 0x55887c3d6640 <line:7186:1, col:2>
|   | `-TextComment 0x55887c3d6610 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d6660 <col:3, line:7188:2> [in] implicitly Param="EntryPoint" ParamIndex=0
|   | `-ParagraphComment 0x55887c3d6740 <line:7186:21, line:7188:2>
|   |   |-TextComment 0x55887c3d66c0 <line:7186:21, col:76> Text="  A pointer to function to call with the new stack after"
|   |   |-TextComment 0x55887c3d66e0 <line:7187:1, col:40> Text="                      paging is enabled."
|   |   `-TextComment 0x55887c3d6700 <line:7188:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d6760 <col:3, line:7190:2> [in] implicitly Param="Context1" ParamIndex=1
|   | `-ParagraphComment 0x55887c3d6840 <line:7188:19, line:7190:2>
|   |   |-TextComment 0x55887c3d67c0 <line:7188:19, col:74> Text="    A pointer to the context to pass into the EntryPoint"
|   |   |-TextComment 0x55887c3d67e0 <line:7189:1, col:78> Text="                      function as the first parameter after paging is enabled."
|   |   `-TextComment 0x55887c3d6800 <line:7190:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d6860 <col:3, line:7192:2> [in] implicitly Param="Context2" ParamIndex=2
|   | `-ParagraphComment 0x55887c3d6940 <line:7190:19, line:7192:2>
|   |   |-TextComment 0x55887c3d68c0 <line:7190:19, col:74> Text="    A pointer to the context to pass into the EntryPoint"
|   |   |-TextComment 0x55887c3d68e0 <line:7191:1, col:79> Text="                      function as the second parameter after paging is enabled."
|   |   `-TextComment 0x55887c3d6900 <line:7192:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d6960 <col:3, line:7193:55> [in] implicitly Param="NewStack" ParamIndex=3
|     `-ParagraphComment 0x55887c3d6a10 <line:7192:19, line:7193:55>
|       |-TextComment 0x55887c3d69c0 <line:7192:19, col:74> Text="    A pointer to the new stack to use for the EntryPoint"
|       `-TextComment 0x55887c3d69e0 <line:7193:1, col:55> Text="                      function after paging is enabled."
|-FunctionDecl 0x55887c15acd0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7246:3> line:7241:1 AsmDisablePaging32 'void (SWITCH_STACK_ENTRY_POINT, void *, void *, void *)'
| |-ParmVarDecl 0x55887c15aaa8 <line:7242:11, col:37> col:37 EntryPoint 'SWITCH_STACK_ENTRY_POINT':'void (*)(void *, void *)'
| |-ParmVarDecl 0x55887c15ab28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7243:38> col:38 Context1 'void *'
| |-ParmVarDecl 0x55887c15aba8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7244:38> col:38 Context2 'void *'
| |-ParmVarDecl 0x55887c15ac28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7245:38> col:38 NewStack 'void *'
| `-FullComment 0x55887c3d7310 <line:7206:1, line:7236:56>
|   |-ParagraphComment 0x55887c3d6b20 <line:7206:1, col:45>
|   | `-TextComment 0x55887c3d6af0 <col:1, col:45> Text="  Disables the 32-bit paging mode on the CPU."
|   |-ParagraphComment 0x55887c3d6c60 <line:7208:1, line:7214:57>
|   | |-TextComment 0x55887c3d6b40 <line:7208:1, col:76> Text="  Disables the 32-bit paging mode on the CPU and returns to 32-bit protected"
|   | |-TextComment 0x55887c3d6b60 <line:7209:1, col:78> Text="  mode. This function assumes the current execution mode is 32-paged protected"
|   | |-TextComment 0x55887c3d6b80 <line:7210:1, col:78> Text="  mode. This function is only available on IA-32. After the 32-bit paging mode"
|   | |-TextComment 0x55887c3d6ba0 <line:7211:1, col:77> Text="  is disabled, control is transferred to the function specified by EntryPoint"
|   | |-TextComment 0x55887c3d6bc0 <line:7212:1, col:73> Text="  using the new stack specified by NewStack and passing in the parameters"
|   | |-TextComment 0x55887c3d6be0 <line:7213:1, col:76> Text="  specified by Context1 and Context2. Context1 and Context2 are optional and"
|   | `-TextComment 0x55887c3d6c00 <line:7214:1, col:57> Text="  may be NULL. The function EntryPoint must never return."
|   |-ParagraphComment 0x55887c3d6d00 <line:7216:1, line:7218:37>
|   | |-TextComment 0x55887c3d6c80 <line:7216:1, col:72> Text="  If the current execution mode is not 32-bit paged mode, then ASSERT()."
|   | |-TextComment 0x55887c3d6ca0 <line:7217:1, col:39> Text="  If EntryPoint is NULL, then ASSERT()."
|   | `-TextComment 0x55887c3d6cc0 <line:7218:1, col:37> Text="  If NewStack is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3d6e40 <line:7220:1, line:7226:54>
|   | |-TextComment 0x55887c3d6d20 <line:7220:1, col:77> Text="  There are a number of constraints that must be followed before calling this"
|   | |-TextComment 0x55887c3d6d40 <line:7221:1, col:11> Text="  function:"
|   | |-TextComment 0x55887c3d6d60 <line:7222:1, col:34> Text="  1)  Interrupts must be disabled."
|   | |-TextComment 0x55887c3d6d80 <line:7223:1, col:46> Text="  2)  The caller must be in 32-bit paged mode."
|   | |-TextComment 0x55887c3d6da0 <line:7224:1, col:66> Text="  3)  CR0, CR3, and CR4 must be compatible with 32-bit paged mode."
|   | |-TextComment 0x55887c3d6dc0 <line:7225:1, col:75> Text="  4)  CR3 must point to valid page tables that guarantee that the pages for"
|   | `-TextComment 0x55887c3d6de0 <line:7226:1, col:54> Text="      this function and the stack are identity mapped."
|   |-ParagraphComment 0x55887c3d6e90 <line:7228:1, col:2>
|   | `-TextComment 0x55887c3d6e60 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d6eb0 <col:3, line:7230:2> [in] implicitly Param="EntryPoint" ParamIndex=0
|   | `-ParagraphComment 0x55887c3d6f90 <line:7228:21, line:7230:2>
|   |   |-TextComment 0x55887c3d6f10 <line:7228:21, col:76> Text="  A pointer to function to call with the new stack after"
|   |   |-TextComment 0x55887c3d6f30 <line:7229:1, col:41> Text="                      paging is disabled."
|   |   `-TextComment 0x55887c3d6f50 <line:7230:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d6fb0 <col:3, line:7232:2> [in] implicitly Param="Context1" ParamIndex=1
|   | `-ParagraphComment 0x55887c3d70b0 <line:7230:19, line:7232:2>
|   |   |-TextComment 0x55887c3d7010 <line:7230:19, col:74> Text="    A pointer to the context to pass into the EntryPoint"
|   |   |-TextComment 0x55887c3d7030 <line:7231:1, col:79> Text="                      function as the first parameter after paging is disabled."
|   |   `-TextComment 0x55887c3d7050 <line:7232:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d70d0 <col:3, line:7235:2> [in] implicitly Param="Context2" ParamIndex=2
|   | `-ParagraphComment 0x55887c3d71d0 <line:7232:19, line:7235:2>
|   |   |-TextComment 0x55887c3d7130 <line:7232:19, col:74> Text="    A pointer to the context to pass into the EntryPoint"
|   |   |-TextComment 0x55887c3d7150 <line:7233:1, col:70> Text="                      function as the second parameter after paging is"
|   |   |-TextComment 0x55887c3d7170 <line:7234:1, col:31> Text="                      disabled."
|   |   `-TextComment 0x55887c3d7190 <line:7235:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d71f0 <col:3, line:7236:56> [in] implicitly Param="NewStack" ParamIndex=3
|     `-ParagraphComment 0x55887c3d72a0 <line:7235:19, line:7236:56>
|       |-TextComment 0x55887c3d7250 <line:7235:19, col:74> Text="    A pointer to the new stack to use for the EntryPoint"
|       `-TextComment 0x55887c3d7270 <line:7236:1, col:56> Text="                      function after paging is disabled."
|-FunctionDecl 0x55887c15b0f8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7288:3> line:7282:1 AsmEnablePaging64 'void (UINT16, UINT64, UINT64, UINT64, UINT64)'
| |-ParmVarDecl 0x55887c15adc8 <line:7283:11, col:19> col:19 Cs 'UINT16':'unsigned short'
| |-ParmVarDecl 0x55887c15ae40 <line:7284:11, col:19> col:19 EntryPoint 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c15aeb8 <line:7285:11, col:19> col:19 Context1 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c15af30 <line:7286:11, col:19> col:19 Context2 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c15afa8 <line:7287:11, col:19> col:19 NewStack 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3d7bc0 <line:7249:1, line:7277:70>
|   |-ParagraphComment 0x55887c3d73b0 <line:7249:1, col:44>
|   | `-TextComment 0x55887c3d7380 <col:1, col:44> Text="  Enables the 64-bit paging mode on the CPU."
|   |-ParagraphComment 0x55887c3d7510 <line:7251:1, line:7258:67>
|   | |-TextComment 0x55887c3d73d0 <line:7251:1, col:79> Text="  Enables the 64-bit paging mode on the CPU. CR0, CR3, CR4, and the page tables"
|   | |-TextComment 0x55887c3d73f0 <line:7252:1, col:75> Text="  must be properly initialized prior to calling this service. This function"
|   | |-TextComment 0x55887c3d7410 <line:7253:1, col:71> Text="  assumes the current execution mode is 32-bit protected mode with flat"
|   | |-TextComment 0x55887c3d7430 <line:7254:1, col:73> Text="  descriptors. This function is only available on IA-32. After the 64-bit"
|   | |-TextComment 0x55887c3d7450 <line:7255:1, col:77> Text="  paging mode is enabled, control is transferred to the function specified by"
|   | |-TextComment 0x55887c3d7470 <line:7256:1, col:73> Text="  EntryPoint using the new stack specified by NewStack and passing in the"
|   | |-TextComment 0x55887c3d7490 <line:7257:1, col:74> Text="  parameters specified by Context1 and Context2. Context1 and Context2 are"
|   | `-TextComment 0x55887c3d74b0 <line:7258:1, col:67> Text="  optional and may be 0. The function EntryPoint must never return."
|   |-ParagraphComment 0x55887c3d75d0 <line:7260:1, line:7263:34>
|   | |-TextComment 0x55887c3d7530 <line:7260:1, col:70> Text="  If the current execution mode is not 32-bit protected mode with flat"
|   | |-TextComment 0x55887c3d7550 <line:7261:1, col:29> Text="  descriptors, then ASSERT()."
|   | |-TextComment 0x55887c3d7570 <line:7262:1, col:36> Text="  If EntryPoint is 0, then ASSERT()."
|   | `-TextComment 0x55887c3d7590 <line:7263:1, col:34> Text="  If NewStack is 0, then ASSERT()."
|   |-ParagraphComment 0x55887c3d7620 <line:7265:1, col:2>
|   | `-TextComment 0x55887c3d75f0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d7640 <col:3, line:7268:2> [in] implicitly Param="Cs" ParamIndex=0
|   | `-ParagraphComment 0x55887c3d7740 <line:7265:13, line:7268:2>
|   |   |-TextComment 0x55887c3d76a0 <line:7265:13, col:77> Text="          The 16-bit selector to load in the CS before EntryPoint"
|   |   |-TextComment 0x55887c3d76c0 <line:7266:1, col:77> Text="                      is called. The descriptor in the GDT that this selector"
|   |   |-TextComment 0x55887c3d76e0 <line:7267:1, col:61> Text="                      references must be setup for long mode."
|   |   `-TextComment 0x55887c3d7700 <line:7268:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d7760 <col:3, line:7270:2> [in] implicitly Param="EntryPoint" ParamIndex=1
|   | `-ParagraphComment 0x55887c3d7840 <line:7268:21, line:7270:2>
|   |   |-TextComment 0x55887c3d77c0 <line:7268:21, col:77> Text="  The 64-bit virtual address of the function to call with"
|   |   |-TextComment 0x55887c3d77e0 <line:7269:1, col:60> Text="                      the new stack after paging is enabled."
|   |   `-TextComment 0x55887c3d7800 <line:7270:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d7860 <col:3, line:7273:2> [in] implicitly Param="Context1" ParamIndex=2
|   | `-ParagraphComment 0x55887c3d7960 <line:7270:19, line:7273:2>
|   |   |-TextComment 0x55887c3d78c0 <line:7270:19, col:76> Text="    The 64-bit virtual address of the context to pass into"
|   |   |-TextComment 0x55887c3d78e0 <line:7271:1, col:74> Text="                      the EntryPoint function as the first parameter after"
|   |   |-TextComment 0x55887c3d7900 <line:7272:1, col:40> Text="                      paging is enabled."
|   |   `-TextComment 0x55887c3d7920 <line:7273:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d7980 <col:3, line:7276:2> [in] implicitly Param="Context2" ParamIndex=3
|   | `-ParagraphComment 0x55887c3d7a80 <line:7273:19, line:7276:2>
|   |   |-TextComment 0x55887c3d79e0 <line:7273:19, col:76> Text="    The 64-bit virtual address of the context to pass into"
|   |   |-TextComment 0x55887c3d7a00 <line:7274:1, col:75> Text="                      the EntryPoint function as the second parameter after"
|   |   |-TextComment 0x55887c3d7a20 <line:7275:1, col:40> Text="                      paging is enabled."
|   |   `-TextComment 0x55887c3d7a40 <line:7276:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d7aa0 <col:3, line:7277:70> [in] implicitly Param="NewStack" ParamIndex=4
|     `-ParagraphComment 0x55887c3d7b50 <line:7276:19, line:7277:70>
|       |-TextComment 0x55887c3d7b00 <line:7276:19, col:76> Text="    The 64-bit virtual address of the new stack to use for"
|       `-TextComment 0x55887c3d7b20 <line:7277:1, col:70> Text="                      the EntryPoint function after paging is enabled."
|-FunctionDecl 0x55887c15b528 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7328:3> line:7322:1 AsmDisablePaging64 'void (UINT16, UINT32, UINT32, UINT32, UINT32)'
| |-ParmVarDecl 0x55887c15b1f8 <line:7323:11, col:19> col:19 Cs 'UINT16':'unsigned short'
| |-ParmVarDecl 0x55887c15b270 <line:7324:11, col:19> col:19 EntryPoint 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c15b2e8 <line:7325:11, col:19> col:19 Context1 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c15b360 <line:7326:11, col:19> col:19 Context2 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c15b3d8 <line:7327:11, col:19> col:19 NewStack 'UINT32':'unsigned int'
| `-FullComment 0x55887c3d8430 <line:7291:1, line:7317:71>
|   |-ParagraphComment 0x55887c3d7c60 <line:7291:1, col:45>
|   | `-TextComment 0x55887c3d7c30 <col:1, col:45> Text="  Disables the 64-bit paging mode on the CPU."
|   |-ParagraphComment 0x55887c3d7da0 <line:7293:1, line:7299:54>
|   | |-TextComment 0x55887c3d7c80 <line:7293:1, col:76> Text="  Disables the 64-bit paging mode on the CPU and returns to 32-bit protected"
|   | |-TextComment 0x55887c3d7ca0 <line:7294:1, col:75> Text="  mode. This function assumes the current execution mode is 64-paging mode."
|   | |-TextComment 0x55887c3d7cc0 <line:7295:1, col:73> Text="  This function is only available on x64. After the 64-bit paging mode is"
|   | |-TextComment 0x55887c3d7ce0 <line:7296:1, col:74> Text="  disabled, control is transferred to the function specified by EntryPoint"
|   | |-TextComment 0x55887c3d7d00 <line:7297:1, col:73> Text="  using the new stack specified by NewStack and passing in the parameters"
|   | |-TextComment 0x55887c3d7d20 <line:7298:1, col:76> Text="  specified by Context1 and Context2. Context1 and Context2 are optional and"
|   | `-TextComment 0x55887c3d7d40 <line:7299:1, col:54> Text="  may be 0. The function EntryPoint must never return."
|   |-ParagraphComment 0x55887c3d7e40 <line:7301:1, line:7303:34>
|   | |-TextComment 0x55887c3d7dc0 <line:7301:1, col:72> Text="  If the current execution mode is not 64-bit paged mode, then ASSERT()."
|   | |-TextComment 0x55887c3d7de0 <line:7302:1, col:36> Text="  If EntryPoint is 0, then ASSERT()."
|   | `-TextComment 0x55887c3d7e00 <line:7303:1, col:34> Text="  If NewStack is 0, then ASSERT()."
|   |-ParagraphComment 0x55887c3d7e90 <line:7305:1, col:2>
|   | `-TextComment 0x55887c3d7e60 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d7eb0 <col:3, line:7308:2> [in] implicitly Param="Cs" ParamIndex=0
|   | `-ParagraphComment 0x55887c3d7fb0 <line:7305:13, line:7308:2>
|   |   |-TextComment 0x55887c3d7f10 <line:7305:13, col:77> Text="          The 16-bit selector to load in the CS before EntryPoint"
|   |   |-TextComment 0x55887c3d7f30 <line:7306:1, col:77> Text="                      is called. The descriptor in the GDT that this selector"
|   |   |-TextComment 0x55887c3d7f50 <line:7307:1, col:73> Text="                      references must be setup for 32-bit protected mode."
|   |   `-TextComment 0x55887c3d7f70 <line:7308:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d7fd0 <col:3, line:7310:2> [in] implicitly Param="EntryPoint" ParamIndex=1
|   | `-ParagraphComment 0x55887c3d80b0 <line:7308:21, line:7310:2>
|   |   |-TextComment 0x55887c3d8030 <line:7308:21, col:77> Text="  The 64-bit virtual address of the function to call with"
|   |   |-TextComment 0x55887c3d8050 <line:7309:1, col:61> Text="                      the new stack after paging is disabled."
|   |   `-TextComment 0x55887c3d8070 <line:7310:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d80d0 <col:3, line:7313:2> [in] implicitly Param="Context1" ParamIndex=2
|   | `-ParagraphComment 0x55887c3d81d0 <line:7310:19, line:7313:2>
|   |   |-TextComment 0x55887c3d8130 <line:7310:19, col:76> Text="    The 64-bit virtual address of the context to pass into"
|   |   |-TextComment 0x55887c3d8150 <line:7311:1, col:74> Text="                      the EntryPoint function as the first parameter after"
|   |   |-TextComment 0x55887c3d8170 <line:7312:1, col:41> Text="                      paging is disabled."
|   |   `-TextComment 0x55887c3d8190 <line:7313:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d81f0 <col:3, line:7316:2> [in] implicitly Param="Context2" ParamIndex=3
|   | `-ParagraphComment 0x55887c3d82f0 <line:7313:19, line:7316:2>
|   |   |-TextComment 0x55887c3d8250 <line:7313:19, col:76> Text="    The 64-bit virtual address of the context to pass into"
|   |   |-TextComment 0x55887c3d8270 <line:7314:1, col:75> Text="                      the EntryPoint function as the second parameter after"
|   |   |-TextComment 0x55887c3d8290 <line:7315:1, col:41> Text="                      paging is disabled."
|   |   `-TextComment 0x55887c3d82b0 <line:7316:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d8310 <col:3, line:7317:71> [in] implicitly Param="NewStack" ParamIndex=4
|     `-ParagraphComment 0x55887c3d83c0 <line:7316:19, line:7317:71>
|       |-TextComment 0x55887c3d8370 <line:7316:19, col:76> Text="    The 64-bit virtual address of the new stack to use for"
|       `-TextComment 0x55887c3d8390 <line:7317:1, col:71> Text="                      the EntryPoint function after paging is disabled."
|-FunctionDecl 0x55887c15b7b8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7360:3> line:7357:1 AsmGetThunk16Properties 'void (UINT32 *, UINT32 *)'
| |-ParmVarDecl 0x55887c15b628 <line:7358:11, col:20> col:20 RealModeBufferSize 'UINT32 *'
| |-ParmVarDecl 0x55887c15b6a0 <line:7359:11, col:20> col:20 ExtraStackSize 'UINT32 *'
| `-FullComment 0x55887c3d8920 <line:7335:1, line:7352:47>
|   |-ParagraphComment 0x55887c3d84d0 <line:7335:1, col:54>
|   | `-TextComment 0x55887c3d84a0 <col:1, col:54> Text="  Retrieves the properties for 16-bit thunk functions."
|   |-ParagraphComment 0x55887c3d85e0 <line:7337:1, line:7342:63>
|   | |-TextComment 0x55887c3d84f0 <line:7337:1, col:73> Text="  Computes the size of the buffer and stack below 1MB required to use the"
|   | |-TextComment 0x55887c3d8510 <line:7338:1, col:78> Text="  AsmPrepareThunk16(), AsmThunk16() and AsmPrepareAndThunk16() functions. This"
|   | |-TextComment 0x55887c3d8530 <line:7339:1, col:79> Text="  buffer size is returned in RealModeBufferSize, and the stack size is returned"
|   | |-TextComment 0x55887c3d8550 <line:7340:1, col:75> Text="  in ExtraStackSize. If parameters are passed to the 16-bit real mode code,"
|   | |-TextComment 0x55887c3d8570 <line:7341:1, col:78> Text="  then the actual minimum stack size is ExtraStackSize plus the maximum number"
|   | `-TextComment 0x55887c3d8590 <line:7342:1, col:63> Text="  of bytes that need to be passed to the 16-bit real mode code."
|   |-ParagraphComment 0x55887c3d8650 <line:7344:1, line:7345:43>
|   | |-TextComment 0x55887c3d8600 <line:7344:1, col:47> Text="  If RealModeBufferSize is NULL, then ASSERT()."
|   | `-TextComment 0x55887c3d8620 <line:7345:1, col:43> Text="  If ExtraStackSize is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3d86a0 <line:7347:1, col:2>
|   | `-TextComment 0x55887c3d8670 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d86c0 <col:3, line:7349:2> [in] implicitly Param="RealModeBufferSize" ParamIndex=0
|   | `-ParagraphComment 0x55887c3d87b0 <line:7347:29, line:7349:2>
|   |   |-TextComment 0x55887c3d8730 <line:7347:29, col:75> Text="  A pointer to the size of the buffer below 1MB"
|   |   |-TextComment 0x55887c3d8750 <line:7348:1, col:73> Text="                              required to use the 16-bit thunk functions."
|   |   `-TextComment 0x55887c3d8770 <line:7349:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d87d0 <col:3, line:7352:47> [in] implicitly Param="ExtraStackSize" ParamIndex=1
|     `-ParagraphComment 0x55887c3d88d0 <line:7349:25, line:7352:47>
|       |-TextComment 0x55887c3d8830 <line:7349:25, col:76> Text="      A pointer to the extra size of stack below 1MB"
|       |-TextComment 0x55887c3d8850 <line:7350:1, col:73> Text="                              that the 16-bit thunk functions require for"
|       |-TextComment 0x55887c3d8870 <line:7351:1, col:77> Text="                              temporary storage in the transition to and from"
|       `-TextComment 0x55887c3d8890 <line:7352:1, col:47> Text="                              16-bit real mode."
|-FunctionDecl 0x55887c15bba0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7380:3> line:7378:1 AsmPrepareThunk16 'void (THUNK_CONTEXT *)'
| |-ParmVarDecl 0x55887c15b928 <line:7379:11, col:27> col:27 ThunkContext 'THUNK_CONTEXT *'
| `-FullComment 0x55887c3d8c40 <line:7363:1, line:7373:54>
|   |-ParagraphComment 0x55887c3d89c0 <line:7363:1, col:62>
|   | `-TextComment 0x55887c3d8990 <col:1, col:62> Text="  Prepares all structures a code required to use AsmThunk16()."
|   |-ParagraphComment 0x55887c3d8a10 <line:7365:1, col:64>
|   | `-TextComment 0x55887c3d89e0 <col:1, col:64> Text="  Prepares all structures and code required to use AsmThunk16()."
|   |-ParagraphComment 0x55887c3d8a80 <line:7367:1, line:7368:77>
|   | |-TextComment 0x55887c3d8a30 <line:7367:1, col:109> Text="  This interface is limited to be used in either physical mode or virtual modes with paging enabled where the"
|   | `-TextComment 0x55887c3d8a50 <line:7368:1, col:77> Text="  virtual to physical mappings for ThunkContext.RealModeBuffer is mapped 1:1."
|   |-ParagraphComment 0x55887c3d8ad0 <line:7370:1, col:41>
|   | `-TextComment 0x55887c3d8aa0 <col:1, col:41> Text="  If ThunkContext is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3d8b20 <line:7372:1, col:2>
|   | `-TextComment 0x55887c3d8af0 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d8b40 <col:3, line:7373:54> [in] implicitly Param="ThunkContext" ParamIndex=0
|     `-ParagraphComment 0x55887c3d8bf0 <line:7372:23, line:7373:54>
|       |-TextComment 0x55887c3d8ba0 <line:7372:23, col:77> Text="  A pointer to the context structure that describes the"
|       `-TextComment 0x55887c3d8bc0 <line:7373:1, col:54> Text="                        16-bit real mode code to call."
|-FunctionDecl 0x55887c15bd18 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7439:3> line:7437:1 AsmThunk16 'void (THUNK_CONTEXT *)'
| |-ParmVarDecl 0x55887c15bc88 <line:7438:11, col:27> col:27 ThunkContext 'THUNK_CONTEXT *'
| `-FullComment 0x55887c3d95a0 <line:7383:1, line:7432:54>
|   |-ParagraphComment 0x55887c3d8ce0 <line:7383:1, col:78>
|   | `-TextComment 0x55887c3d8cb0 <col:1, col:78> Text="  Transfers control to a 16-bit real mode entry point and returns the results."
|   |-ParagraphComment 0x55887c3d8d80 <line:7385:1, line:7387:56>
|   | |-TextComment 0x55887c3d8d00 <line:7385:1, col:78> Text="  Transfers control to a 16-bit real mode entry point and returns the results."
|   | |-TextComment 0x55887c3d8d20 <line:7386:1, col:84> Text="  AsmPrepareThunk16() must be called with ThunkContext before this function is used."
|   | `-TextComment 0x55887c3d8d40 <line:7387:1, col:56> Text="  This function must be called with interrupts disabled."
|   |-ParagraphComment 0x55887c3d8f60 <line:7389:1, line:7399:41>
|   | |-TextComment 0x55887c3d8da0 <line:7389:1, col:88> Text="  The register state from the RealModeState field of ThunkContext is restored just prior"
|   | |-TextComment 0x55887c3d8dc0 <line:7390:1, col:96> Text="  to calling the 16-bit real mode entry point.  This includes the EFLAGS field of RealModeState,"
|   | |-TextComment 0x55887c3d8de0 <line:7391:1, col:89> Text="  which is used to set the interrupt state when a 16-bit real mode entry point is called."
|   | |-TextComment 0x55887c3d8e00 <line:7392:1, col:113> Text="  Control is transferred to the 16-bit real mode entry point specified by the CS and Eip fields of RealModeState."
|   | |-TextComment 0x55887c3d8e20 <line:7393:1, col:95> Text="  The stack is initialized to the SS and ESP fields of RealModeState.  Any parameters passed to"
|   | |-TextComment 0x55887c3d8e40 <line:7394:1, col:101> Text="  the 16-bit real mode code must be populated by the caller at SS:ESP prior to calling this function."
|   | |-TextComment 0x55887c3d8e60 <line:7395:1, col:81> Text="  The 16-bit real mode entry point is invoked with a 16-bit CALL FAR instruction,"
|   | |-TextComment 0x55887c3d8e80 <line:7396:1, col:97> Text="  so when accessing stack contents, the 16-bit real mode code must account for the 16-bit segment"
|   | |-TextComment 0x55887c3d8ea0 <line:7397:1, col:101> Text="  and 16-bit offset of the return address that were pushed onto the stack. The 16-bit real mode entry"
|   | |-TextComment 0x55887c3d8ec0 <line:7398:1, col:104> Text="  point must exit with a RETF instruction. The register state is captured into RealModeState immediately"
|   | `-TextComment 0x55887c3d8ee0 <line:7399:1, col:41> Text="  after the RETF instruction is executed."
|   |-ParagraphComment 0x55887c3d9000 <line:7401:1, line:7403:113>
|   | |-TextComment 0x55887c3d8f80 <line:7401:1, col:97> Text="  If EFLAGS specifies interrupts enabled, or any of the 16-bit real mode code enables interrupts,"
|   | |-TextComment 0x55887c3d8fa0 <line:7402:1, col:106> Text="  or any of the 16-bit real mode code makes a SW interrupt, then the caller is responsible for making sure"
|   | `-TextComment 0x55887c3d8fc0 <line:7403:1, col:113> Text="  the IDT at address 0 is initialized to handle any HW or SW interrupts that may occur while in 16-bit real mode."
|   |-ParagraphComment 0x55887c3d90a0 <line:7405:1, line:7407:87>
|   | |-TextComment 0x55887c3d9020 <line:7405:1, col:97> Text="  If EFLAGS specifies interrupts enabled, or any of the 16-bit real mode code enables interrupts,"
|   | |-TextComment 0x55887c3d9040 <line:7406:1, col:109> Text="  then the caller is responsible for making sure the 8259 PIC is in a state compatible with 16-bit real mode."
|   | `-TextComment 0x55887c3d9060 <line:7407:1, col:87> Text="  This includes the base vectors, the interrupt masks, and the edge/level trigger mode."
|   |-ParagraphComment 0x55887c3d9110 <line:7409:1, line:7410:113>
|   | |-TextComment 0x55887c3d90c0 <line:7409:1, col:106> Text="  If THUNK_ATTRIBUTE_BIG_REAL_MODE is set in the ThunkAttributes field of ThunkContext, then the user code"
|   | `-TextComment 0x55887c3d90e0 <line:7410:1, col:113> Text="  is invoked in big real mode.  Otherwise, the user code is invoked in 16-bit real mode with 64KB segment limits."
|   |-ParagraphComment 0x55887c3d91b0 <line:7412:1, line:7414:23>
|   | |-TextComment 0x55887c3d9130 <line:7412:1, col:109> Text="  If neither THUNK_ATTRIBUTE_DISABLE_A20_MASK_INT_15 nor THUNK_ATTRIBUTE_DISABLE_A20_MASK_KBD_CTRL are set in"
|   | |-TextComment 0x55887c3d9150 <line:7413:1, col:111> Text="  ThunkAttributes, then it is assumed that the user code did not enable the A20 mask, and no attempt is made to"
|   | `-TextComment 0x55887c3d9170 <line:7414:1, col:23> Text="  disable the A20 mask."
|   |-ParagraphComment 0x55887c3d9250 <line:7416:1, line:7418:100>
|   | |-TextComment 0x55887c3d91d0 <line:7416:1, col:109> Text="  If THUNK_ATTRIBUTE_DISABLE_A20_MASK_INT_15 is set and THUNK_ATTRIBUTE_DISABLE_A20_MASK_KBD_CTRL is clear in"
|   | |-TextComment 0x55887c3d91f0 <line:7417:1, col:110> Text="  ThunkAttributes, then attempt to use the INT 15 service to disable the A20 mask.  If this INT 15 call fails,"
|   | `-TextComment 0x55887c3d9210 <line:7418:1, col:100> Text="  then attempt to disable the A20 mask by directly accessing the 8042 keyboard controller I/O ports."
|   |-ParagraphComment 0x55887c3d92c0 <line:7420:1, line:7421:117>
|   | |-TextComment 0x55887c3d9270 <line:7420:1, col:109> Text="  If THUNK_ATTRIBUTE_DISABLE_A20_MASK_INT_15 is clear and THUNK_ATTRIBUTE_DISABLE_A20_MASK_KBD_CTRL is set in"
|   | `-TextComment 0x55887c3d9290 <line:7421:1, col:117> Text="  ThunkAttributes, then attempt to disable the A20 mask by directly accessing the 8042 keyboard controller I/O ports."
|   |-ParagraphComment 0x55887c3d9380 <line:7423:1, line:7426:33>
|   | |-TextComment 0x55887c3d92e0 <line:7423:1, col:41> Text="  If ThunkContext is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3d9300 <line:7424:1, col:84> Text="  If AsmPrepareThunk16() was not previously called with ThunkContext, then ASSERT()."
|   | |-TextComment 0x55887c3d9320 <line:7425:1, col:106> Text="  If both THUNK_ATTRIBUTE_DISABLE_A20_MASK_INT_15 and THUNK_ATTRIBUTE_DISABLE_A20_MASK_KBD_CTRL are set in"
|   | `-TextComment 0x55887c3d9340 <line:7426:1, col:33> Text="  ThunkAttributes, then ASSERT()."
|   |-ParagraphComment 0x55887c3d93f0 <line:7428:1, line:7429:78>
|   | |-TextComment 0x55887c3d93a0 <line:7428:1, col:109> Text="  This interface is limited to be used in either physical mode or virtual modes with paging enabled where the"
|   | `-TextComment 0x55887c3d93c0 <line:7429:1, col:78> Text="  virtual to physical mappings for ThunkContext.RealModeBuffer are mapped 1:1."
|   |-ParagraphComment 0x55887c3d9440 <line:7431:1, col:2>
|   | `-TextComment 0x55887c3d9410 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d9460 <col:3, line:7432:54> [in] implicitly Param="ThunkContext" ParamIndex=0
|     `-ParagraphComment 0x55887c3d9510 <line:7431:23, line:7432:54>
|       |-TextComment 0x55887c3d94c0 <line:7431:23, col:77> Text="  A pointer to the context structure that describes the"
|       `-TextComment 0x55887c3d94e0 <line:7432:1, col:54> Text="                        16-bit real mode code to call."
|-FunctionDecl 0x55887c15be88 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7465:3> line:7463:1 AsmPrepareAndThunk16 'void (THUNK_CONTEXT *)'
| |-ParmVarDecl 0x55887c15bdf8 <line:7464:11, col:27> col:27 ThunkContext 'THUNK_CONTEXT *'
| `-FullComment 0x55887c3d99a0 <line:7442:1, line:7458:54>
|   |-ParagraphComment 0x55887c3d9660 <line:7442:1, line:7443:69>
|   | |-TextComment 0x55887c3d9610 <line:7442:1, col:74> Text="  Prepares all structures and code for a 16-bit real mode thunk, transfers"
|   | `-TextComment 0x55887c3d9630 <line:7443:1, col:69> Text="  control to a 16-bit real mode entry point, and returns the results."
|   |-ParagraphComment 0x55887c3d9770 <line:7445:1, line:7450:70>
|   | |-TextComment 0x55887c3d9680 <line:7445:1, col:74> Text="  Prepares all structures and code for a 16-bit real mode thunk, transfers"
|   | |-TextComment 0x55887c3d96a0 <line:7446:1, col:76> Text="  control to a 16-bit real mode entry point, and returns the results. If the"
|   | |-TextComment 0x55887c3d96c0 <line:7447:1, col:72> Text="  caller only need to perform a single 16-bit real mode thunk, then this"
|   | |-TextComment 0x55887c3d96e0 <line:7448:1, col:76> Text="  service should be used. If the caller intends to make more than one 16-bit"
|   | |-TextComment 0x55887c3d9700 <line:7449:1, col:77> Text="  real mode thunk, then it is more efficient if AsmPrepareThunk16() is called"
|   | `-TextComment 0x55887c3d9720 <line:7450:1, col:70> Text="  once and AsmThunk16() can be called for each 16-bit real mode thunk."
|   |-ParagraphComment 0x55887c3d97e0 <line:7452:1, line:7453:77>
|   | |-TextComment 0x55887c3d9790 <line:7452:1, col:109> Text="  This interface is limited to be used in either physical mode or virtual modes with paging enabled where the"
|   | `-TextComment 0x55887c3d97b0 <line:7453:1, col:77> Text="  virtual to physical mappings for ThunkContext.RealModeBuffer is mapped 1:1."
|   |-ParagraphComment 0x55887c3d9830 <line:7455:1, col:96>
|   | `-TextComment 0x55887c3d9800 <col:1, col:96> Text="  See AsmPrepareThunk16() and AsmThunk16() for the detailed description and ASSERT() conditions."
|   |-ParagraphComment 0x55887c3d9880 <line:7457:1, col:2>
|   | `-TextComment 0x55887c3d9850 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3d98a0 <col:3, line:7458:54> [in] implicitly Param="ThunkContext" ParamIndex=0
|     `-ParagraphComment 0x55887c3d9950 <line:7457:23, line:7458:54>
|       |-TextComment 0x55887c3d9900 <line:7457:23, col:77> Text="  A pointer to the context structure that describes the"
|       `-TextComment 0x55887c3d9920 <line:7458:1, col:54> Text="                        16-bit real mode code to call."
|-FunctionDecl 0x55887c15c028 <line:7478:1, line:7482:3> line:7480:1 AsmRdRand16 'BOOLEAN (UINT16 *)'
| |-ParmVarDecl 0x55887c15bf68 <line:7481:11, col:20> col:20 Rand 'UINT16 *'
| `-FullComment 0x55887c3d9da0 <line:7468:1, line:7475:55>
|   |-ParagraphComment 0x55887c3d9a40 <line:7468:1, col:62>
|   | `-TextComment 0x55887c3d9a10 <col:1, col:62> Text="  Generates a 16-bit random number through RDRAND instruction."
|   |-ParagraphComment 0x55887c3d9a90 <line:7470:1, col:33>
|   | `-TextComment 0x55887c3d9a60 <col:1, col:33> Text="  if Rand is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3d9ae0 <line:7472:1, col:2>
|   | `-TextComment 0x55887c3d9ab0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d9b00 <col:3, col:66> [out] explicitly Param="Rand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3d9b90 <col:20, col:66>
|   |   `-TextComment 0x55887c3d9b60 <col:20, col:66> Text="     Buffer pointer to store the random result."
|   |-ParagraphComment 0x55887c3d9be0 <line:7474:1, col:2>
|   | `-TextComment 0x55887c3d9bb0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3d9c00 <col:3, line:7475:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c3d9ca0 <line:7474:15, line:7475:2>
|   |   |-TextComment 0x55887c3d9c50 <line:7474:15, col:51> Text="          RDRAND call was successful."
|   |   `-TextComment 0x55887c3d9c70 <line:7475:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3d9cc0 <col:3, col:55> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c3d9d40 <col:16, col:55>
|       `-TextComment 0x55887c3d9d10 <col:16, col:55> Text="         Failed attempts to call RDRAND."
|-FunctionDecl 0x55887c15c1f8 <line:7495:1, line:7499:3> line:7497:1 AsmRdRand32 'BOOLEAN (UINT32 *)'
| |-ParmVarDecl 0x55887c15c108 <line:7498:11, col:20> col:20 Rand 'UINT32 *'
| `-FullComment 0x55887c3da1a0 <line:7485:1, line:7492:55>
|   |-ParagraphComment 0x55887c3d9e40 <line:7485:1, col:62>
|   | `-TextComment 0x55887c3d9e10 <col:1, col:62> Text="  Generates a 32-bit random number through RDRAND instruction."
|   |-ParagraphComment 0x55887c3d9e90 <line:7487:1, col:33>
|   | `-TextComment 0x55887c3d9e60 <col:1, col:33> Text="  if Rand is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3d9ee0 <line:7489:1, col:2>
|   | `-TextComment 0x55887c3d9eb0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3d9f00 <col:3, col:66> [out] explicitly Param="Rand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3d9f90 <col:20, col:66>
|   |   `-TextComment 0x55887c3d9f60 <col:20, col:66> Text="     Buffer pointer to store the random result."
|   |-ParagraphComment 0x55887c3d9fe0 <line:7491:1, col:2>
|   | `-TextComment 0x55887c3d9fb0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3da000 <col:3, line:7492:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c3da0a0 <line:7491:15, line:7492:2>
|   |   |-TextComment 0x55887c3da050 <line:7491:15, col:51> Text="          RDRAND call was successful."
|   |   `-TextComment 0x55887c3da070 <line:7492:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3da0c0 <col:3, col:55> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c3da140 <col:16, col:55>
|       `-TextComment 0x55887c3da110 <col:16, col:55> Text="         Failed attempts to call RDRAND."
|-FunctionDecl 0x55887c15c3c8 <line:7512:1, line:7516:3> line:7514:1 AsmRdRand64 'BOOLEAN (UINT64 *)'
| |-ParmVarDecl 0x55887c15c2d8 <line:7515:11, col:20> col:20 Rand 'UINT64 *'
| `-FullComment 0x55887c3da5a0 <line:7502:1, line:7509:55>
|   |-ParagraphComment 0x55887c3da240 <line:7502:1, col:62>
|   | `-TextComment 0x55887c3da210 <col:1, col:62> Text="  Generates a 64-bit random number through RDRAND instruction."
|   |-ParagraphComment 0x55887c3da290 <line:7504:1, col:33>
|   | `-TextComment 0x55887c3da260 <col:1, col:33> Text="  if Rand is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3da2e0 <line:7506:1, col:2>
|   | `-TextComment 0x55887c3da2b0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3da300 <col:3, col:66> [out] explicitly Param="Rand" ParamIndex=0
|   | `-ParagraphComment 0x55887c3da390 <col:20, col:66>
|   |   `-TextComment 0x55887c3da360 <col:20, col:66> Text="     Buffer pointer to store the random result."
|   |-ParagraphComment 0x55887c3da3e0 <line:7508:1, col:2>
|   | `-TextComment 0x55887c3da3b0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3da400 <col:3, line:7509:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c3da4a0 <line:7508:15, line:7509:2>
|   |   |-TextComment 0x55887c3da450 <line:7508:15, col:51> Text="          RDRAND call was successful."
|   |   `-TextComment 0x55887c3da470 <line:7509:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3da4c0 <col:3, col:55> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c3da540 <col:16, col:55>
|       `-TextComment 0x55887c3da510 <col:16, col:55> Text="         Failed attempts to call RDRAND."
|-FunctionDecl 0x55887c15c538 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7527:3> line:7525:1 AsmWriteTr 'void (UINT16)'
| |-ParmVarDecl 0x55887c15c4a8 <line:7526:6, col:14> col:14 Selector 'UINT16':'unsigned short'
| `-FullComment 0x55887c3da780 <line:7519:1, line:7521:47>
|   |-ParagraphComment 0x55887c3da640 <line:7519:1, col:39>
|   | `-TextComment 0x55887c3da610 <col:1, col:39> Text="  Load given selector into TR register."
|   |-ParagraphComment 0x55887c3da690 <line:7521:1, col:2>
|   | `-TextComment 0x55887c3da660 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3da6b0 <col:3, col:47> [in] explicitly Param="Selector" ParamIndex=0
|     `-ParagraphComment 0x55887c3da740 <col:22, col:47>
|       `-TextComment 0x55887c3da710 <col:22, col:47> Text="     Task segment selector"
|-FunctionDecl 0x55887c15c6a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7540:3> line:7538:1 AsmLfence 'void (void)'
| `-FullComment 0x55887c3da8c0 <line:7530:1, line:7533:82>
|   |-ParagraphComment 0x55887c3da840 <line:7530:1, line:7531:43>
|   | |-TextComment 0x55887c3da7f0 <line:7530:1, col:76> Text="  Performs a serializing operation on all load-from-memory instructions that"
|   | `-TextComment 0x55887c3da810 <line:7531:1, col:43> Text="  were issued prior the AsmLfence function."
|   `-ParagraphComment 0x55887c3da890 <line:7533:1, col:82>
|     `-TextComment 0x55887c3da860 <col:1, col:82> Text="  Executes a LFENCE instruction. This function is only available on IA-32 and x64."
|-FunctionDecl 0x55887c15c808 <line:7552:1, line:7556:3> line:7554:1 AsmXGetBv 'UINT64 (UINT32)'
| |-ParmVarDecl 0x55887c15c778 <line:7555:6, col:14> col:14 Index 'UINT32':'unsigned int'
| `-FullComment 0x55887c3dabf0 <line:7543:1, line:7550:76>
|   |-ParagraphComment 0x55887c3da960 <line:7543:1, col:31>
|   | `-TextComment 0x55887c3da930 <col:1, col:31> Text="  Executes a XGETBV instruction"
|   |-ParagraphComment 0x55887c3da9d0 <line:7545:1, line:7546:6>
|   | |-TextComment 0x55887c3da980 <line:7545:1, col:77> Text="  Executes a XGETBV instruction. This function is only available on IA-32 and"
|   | `-TextComment 0x55887c3da9a0 <line:7546:1, col:6> Text="  x64."
|   |-ParagraphComment 0x55887c3daa20 <line:7548:1, col:2>
|   | `-TextComment 0x55887c3da9f0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3daa40 <col:3, col:57> [in] explicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3daad0 <col:19, col:57>
|   |   `-TextComment 0x55887c3daaa0 <col:19, col:57> Text="        Extended control register index"
|   |-ParagraphComment 0x55887c3dab20 <line:7550:1, col:2>
|   | `-TextComment 0x55887c3daaf0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3dab40 <col:3, col:76> Name="return"
|     `-ParagraphComment 0x55887c3daba0 <col:10, col:76>
|       `-TextComment 0x55887c3dab70 <col:10, col:76> Text="                 The current value of the extended control register"
|-FunctionDecl 0x55887c15c9f8 <line:7575:1, line:7580:3> line:7577:1 AsmXSetBv 'UINT64 (UINT32, UINT64)'
| |-ParmVarDecl 0x55887c15c8e8 <line:7578:6, col:14> col:14 Index 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c15c960 <line:7579:6, col:14> col:14 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3db0e0 <line:7559:1, line:7572:15>
|   |-ParagraphComment 0x55887c3dacb0 <line:7559:1, line:7560:39>
|   | |-TextComment 0x55887c3dac60 <line:7559:1, col:77> Text="  Executes a XSETBV instruction to write a 64-bit value to a Extended Control"
|   | `-TextComment 0x55887c3dac80 <line:7560:1, col:39> Text="  Register(XCR), and returns the value."
|   |-ParagraphComment 0x55887c3dadc0 <line:7562:1, line:7567:16>
|   | |-TextComment 0x55887c3dacd0 <line:7562:1, col:79> Text="  Writes the 64-bit value specified by Value to the XCR specified by Index. The"
|   | |-TextComment 0x55887c3dacf0 <line:7563:1, col:71> Text="  64-bit value written to the XCR is returned. No parameter checking is"
|   | |-TextComment 0x55887c3dad10 <line:7564:1, col:78> Text="  performed on Index or Value, and some of these may cause CPU exceptions. The"
|   | |-TextComment 0x55887c3dad30 <line:7565:1, col:76> Text="  caller must either guarantee that Index and Value are valid, or the caller"
|   | |-TextComment 0x55887c3dad50 <line:7566:1, col:78> Text="  must establish proper exception handlers. This function is only available on"
|   | `-TextComment 0x55887c3dad70 <line:7567:1, col:16> Text="  IA-32 and x64."
|   |-ParagraphComment 0x55887c3dae10 <line:7569:1, col:2>
|   | `-TextComment 0x55887c3dade0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3dae30 <col:3, line:7570:2> [in] implicitly Param="Index" ParamIndex=0
|   | `-ParagraphComment 0x55887c3daee0 <line:7569:16, line:7570:2>
|   |   |-TextComment 0x55887c3dae90 <line:7569:16, col:46> Text=" The 32-bit XCR index to write."
|   |   `-TextComment 0x55887c3daeb0 <line:7570:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3daf00 <col:3, col:53> [in] implicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c3daf90 <col:16, col:53>
|   |   `-TextComment 0x55887c3daf60 <col:16, col:53> Text=" The 64-bit value to write to the XCR."
|   |-ParagraphComment 0x55887c3dafe0 <line:7572:1, col:2>
|   | `-TextComment 0x55887c3dafb0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3db000 <col:3, col:15> Name="return"
|     `-ParagraphComment 0x55887c3db060 <col:10, col:15>
|       `-TextComment 0x55887c3db030 <col:10, col:15> Text=" Value"
|-FunctionDecl 0x55887c15de40 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7593:3> line:7591:1 AsmVmgExit 'void (void)'
| `-FullComment 0x55887c3db220 <line:7583:1, line:7586:6>
|   |-ParagraphComment 0x55887c3db180 <line:7583:1, col:60>
|   | `-TextComment 0x55887c3db150 <col:1, col:60> Text="  Executes a VMGEXIT instruction (VMMCALL with a REP prefix)"
|   `-ParagraphComment 0x55887c3db1f0 <line:7585:1, line:7586:6>
|     |-TextComment 0x55887c3db1a0 <line:7585:1, col:78> Text="  Executes a VMGEXIT instruction. This function is only available on IA-32 and"
|     `-TextComment 0x55887c3db1c0 <line:7586:1, col:6> Text="  x64."
|-FunctionDecl 0x55887c15e1a8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseLib.h:7635:3> line:7631:1 PatchInstructionX86 'void (X86_ASSEMBLY_PATCH_LABEL *, UINT64, UINTN)'
| |-ParmVarDecl 0x55887c15df98 <line:7632:7, col:34> col:34 InstructionEnd 'X86_ASSEMBLY_PATCH_LABEL *'
| |-ParmVarDecl 0x55887c15e010 <line:7633:7, col:33> col:33 PatchValue 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c15e088 <line:7634:7, col:33> col:33 ValueSize 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3dba20 <line:7596:1, line:7627:58>
|   |-ParagraphComment 0x55887c3db310 <line:7596:1, line:7598:24>
|   | |-TextComment 0x55887c3db290 <line:7596:1, col:79> Text="  Patch the immediate operand of an IA32 or X64 instruction such that the byte,"
|   | |-TextComment 0x55887c3db2b0 <line:7597:1, col:73> Text="  word, dword or qword operand is encoded at the end of the instruction's"
|   | `-TextComment 0x55887c3db2d0 <line:7598:1, col:24> Text="  binary representation."
|   |-ParagraphComment 0x55887c3db380 <line:7600:1, line:7601:42>
|   | |-TextComment 0x55887c3db330 <line:7600:1, col:75> Text="  This function should be used to update object code that was compiled with"
|   | `-TextComment 0x55887c3db350 <line:7601:1, col:42> Text="  NASM from assembly source code. Example:"
|   |-ParagraphComment 0x55887c3db3d0 <line:7603:1, col:19>
|   | `-TextComment 0x55887c3db3a0 <col:1, col:19> Text="  NASM source code:"
|   |-ParagraphComment 0x55887c3db470 <line:7605:1, line:7607:24>
|   | |-TextComment 0x55887c3db3f0 <line:7605:1, col:76> Text="        mov     eax, strict dword 0 ; the imm32 zero operand will be patched"
|   | |-TextComment 0x55887c3db410 <line:7606:1, col:23> Text="    ASM_PFX(gPatchCr3):"
|   | `-TextComment 0x55887c3db430 <line:7607:1, col:24> Text="        mov     cr3, eax"
|   |-ParagraphComment 0x55887c3db4c0 <line:7609:1, col:16>
|   | `-TextComment 0x55887c3db490 <col:1, col:16> Text="  C source code:"
|   |-ParagraphComment 0x55887c3db530 <line:7611:1, line:7612:54>
|   | |-TextComment 0x55887c3db4e0 <line:7611:1, col:39> Text="    X86_ASSEMBLY_PATCH_LABEL gPatchCr3;"
|   | `-TextComment 0x55887c3db500 <line:7612:1, col:54> Text="    PatchInstructionX86 (gPatchCr3, AsmReadCr3 (), 4);"
|   |-ParagraphComment 0x55887c3db580 <line:7614:1, col:2>
|   | `-TextComment 0x55887c3db550 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3db5a0 <col:3, line:7618:63> [out] explicitly Param="InstructionEnd" ParamIndex=0
|   | `-ParagraphComment 0x55887c3db6e0 <line:7614:29, line:7618:63>
|   |   |-TextComment 0x55887c3db610 <line:7614:29, col:78> Text="  Pointer right past the instruction to patch. The"
|   |   |-TextComment 0x55887c3db630 <line:7615:1, col:71> Text="                              immediate operand to patch is expected to"
|   |   |-TextComment 0x55887c3db650 <line:7616:1, col:77> Text="                              comprise the trailing bytes of the instruction."
|   |   |-TextComment 0x55887c3db670 <line:7617:1, col:75> Text="                              If InstructionEnd is closer to address 0 than"
|   |   `-TextComment 0x55887c3db690 <line:7618:1, col:63> Text="                              ValueSize permits, then ASSERT()."
|   |-ParagraphComment 0x55887c3db730 <line:7620:1, col:2>
|   | `-TextComment 0x55887c3db700 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3db750 <col:3, line:7624:61> [in] explicitly Param="PatchValue" ParamIndex=1
|   | `-ParagraphComment 0x55887c3db880 <line:7620:24, line:7624:61>
|   |   |-TextComment 0x55887c3db7b0 <line:7620:24, col:77> Text="       The constant to write to the immediate operand."
|   |   |-TextComment 0x55887c3db7d0 <line:7621:1, col:73> Text="                              The caller is responsible for ensuring that"
|   |   |-TextComment 0x55887c3db7f0 <line:7622:1, col:78> Text="                              PatchValue can be represented in the byte, word,"
|   |   |-TextComment 0x55887c3db810 <line:7623:1, col:74> Text="                              dword or qword operand (as indicated through"
|   |   `-TextComment 0x55887c3db830 <line:7624:1, col:61> Text="                              ValueSize); otherwise ASSERT()."
|   |-ParagraphComment 0x55887c3db8d0 <line:7626:1, col:2>
|   | `-TextComment 0x55887c3db8a0 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3db8f0 <col:3, line:7627:58> [in] explicitly Param="ValueSize" ParamIndex=2
|     `-ParagraphComment 0x55887c3db9a0 <line:7626:23, line:7627:58>
|       |-TextComment 0x55887c3db950 <line:7626:23, col:77> Text="        The size of the operand in bytes; must be 1, 2,"
|       `-TextComment 0x55887c3db970 <line:7627:1, col:58> Text="                              4, or 8. ASSERT() otherwise."
|-RecordDecl 0x55887c15e260 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Ppi/PciCfg2.h:23:9, col:16> col:16 struct _EFI_PEI_PCI_CFG2_PPI
|-TypedefDecl 0x55887c15e358 <col:1, col:38> col:38 referenced EFI_PEI_PCI_CFG2_PPI 'struct _EFI_PEI_PCI_CFG2_PPI':'struct _EFI_PEI_PCI_CFG2_PPI'
| `-ElaboratedType 0x55887c15e300 'struct _EFI_PEI_PCI_CFG2_PPI' sugar
|   `-RecordType 0x55887c15e2e0 'struct _EFI_PEI_PCI_CFG2_PPI'
|     `-Record 0x55887c15fad8 '_EFI_PEI_PCI_CFG2_PPI'
|-EnumDecl 0x55887c15e418 <line:35:9, line:53:1> line:35:9
| |-FullComment 0x55887c3dbaf0 <line:33:4, col:29>
| | `-ParagraphComment 0x55887c3dbac0 <col:4, col:29>
| |   `-TextComment 0x55887c3dba90 <col:4, col:29> Text=" EFI_PEI_PCI_CFG_PPI_WIDTH"
| |-EnumConstantDecl 0x55887c15e520 <line:39:3, col:28> col:3 EfiPeiPciCfgWidthUint8 'int'
| | |-ConstantExpr 0x55887c15e500 <col:28> 'int'
| | | |-value: Int 0
| | | `-IntegerLiteral 0x55887c15e4e0 <col:28> 'int' 0
| | `-FullComment 0x55887c3dbbc0 <line:37:6, col:19>
| |   `-ParagraphComment 0x55887c3dbb90 <col:6, col:19>
| |     `-TextComment 0x55887c3dbb60 <col:6, col:19> Text="  8-bit access"
| |-EnumConstantDecl 0x55887c15e5d8 <line:43:3, col:29> col:3 EfiPeiPciCfgWidthUint16 'int'
| | |-ConstantExpr 0x55887c15e5b8 <col:29> 'int'
| | | |-value: Int 1
| | | `-IntegerLiteral 0x55887c15e598 <col:29> 'int' 1
| | `-FullComment 0x55887c3dbc90 <line:41:6, col:19>
| |   `-ParagraphComment 0x55887c3dbc60 <col:6, col:19>
| |     `-TextComment 0x55887c3dbc30 <col:6, col:19> Text=" 16-bit access"
| |-EnumConstantDecl 0x55887c15e698 <line:47:3, col:29> col:3 EfiPeiPciCfgWidthUint32 'int'
| | |-ConstantExpr 0x55887c15e678 <col:29> 'int'
| | | |-value: Int 2
| | | `-IntegerLiteral 0x55887c15e658 <col:29> 'int' 2
| | `-FullComment 0x55887c3dbd60 <line:45:6, col:19>
| |   `-ParagraphComment 0x55887c3dbd30 <col:6, col:19>
| |     `-TextComment 0x55887c3dbd00 <col:6, col:19> Text=" 32-bit access"
| |-EnumConstantDecl 0x55887c15e758 <line:51:3, col:29> col:3 EfiPeiPciCfgWidthUint64 'int'
| | |-ConstantExpr 0x55887c15e738 <col:29> 'int'
| | | |-value: Int 3
| | | `-IntegerLiteral 0x55887c15e718 <col:29> 'int' 3
| | `-FullComment 0x55887c3dbe30 <line:49:6, col:19>
| |   `-ParagraphComment 0x55887c3dbe00 <col:6, col:19>
| |     `-TextComment 0x55887c3dbdd0 <col:6, col:19> Text=" 64-bit access"
| `-EnumConstantDecl 0x55887c15e7a8 <line:52:3> col:3 EfiPeiPciCfgWidthMaximum 'int'
|   `-FullComment 0x55887c3dbf00 <line:49:6, col:19>
|     `-ParagraphComment 0x55887c3dbed0 <col:6, col:19>
|       `-TextComment 0x55887c3dbea0 <col:6, col:19> Text=" 64-bit access"
|-TypedefDecl 0x55887c15e858 <line:35:1, line:53:3> col:3 referenced EFI_PEI_PCI_CFG_PPI_WIDTH 'enum EFI_PEI_PCI_CFG_PPI_WIDTH':'EFI_PEI_PCI_CFG_PPI_WIDTH'
| |-ElaboratedType 0x55887c15e800 'enum EFI_PEI_PCI_CFG_PPI_WIDTH' sugar
| | `-EnumType 0x55887c15e4c0 'EFI_PEI_PCI_CFG_PPI_WIDTH'
| |   `-Enum 0x55887c15e418 ''
| `-FullComment 0x55887c3dbfd0 <line:33:4, col:29>
|   `-ParagraphComment 0x55887c3dbfa0 <col:4, col:29>
|     `-TextComment 0x55887c3dbf70 <col:4, col:29> Text=" EFI_PEI_PCI_CFG_PPI_WIDTH"
|-RecordDecl 0x55887c15e8f0 <line:58:9, line:83:1> line:58:9 struct definition
| |-FullComment 0x55887c3dc0a0 <line:56:4, col:35>
| | `-ParagraphComment 0x55887c3dc070 <col:4, col:35>
| |   `-TextComment 0x55887c3dc040 <col:4, col:35> Text=" EFI_PEI_PCI_CFG_PPI_PCI_ADDRESS"
| |-FieldDecl 0x55887c15e9c8 <line:63:3, col:13> col:13 Register 'UINT8':'unsigned char'
| | `-FullComment 0x55887c3dc190 <line:60:6, line:61:12>
| |   `-ParagraphComment 0x55887c3dc160 <line:60:6, line:61:12>
| |     |-TextComment 0x55887c3dc110 <line:60:6, col:92> Text=" 8-bit register offset within the PCI configuration space for a given device's function"
| |     `-TextComment 0x55887c3dc130 <line:61:6, col:12> Text=" space."
| |-FieldDecl 0x55887c15ea58 <line:68:3, col:13> col:13 Function 'UINT8':'unsigned char'
| | `-FullComment 0x55887c3dc280 <line:65:6, line:66:19>
| |   `-ParagraphComment 0x55887c3dc250 <line:65:6, line:66:19>
| |     |-TextComment 0x55887c3dc200 <line:65:6, col:95> Text=" Only the 3 least-significant bits are used to encode one of 8 possible functions within a"
| |     `-TextComment 0x55887c3dc220 <line:66:6, col:19> Text=" given device."
| |-FieldDecl 0x55887c15eae8 <line:72:3, col:13> col:13 Device 'UINT8':'unsigned char'
| | `-FullComment 0x55887c3dc350 <line:70:6, col:86>
| |   `-ParagraphComment 0x55887c3dc320 <col:6, col:86>
| |     `-TextComment 0x55887c3dc2f0 <col:6, col:86> Text=" Only the 5 least-significant bits are used to encode one of 32 possible devices."
| |-FieldDecl 0x55887c15eb78 <line:76:3, col:13> col:13 Bus 'UINT8':'unsigned char'
| | `-FullComment 0x55887c3dc420 <line:74:6, col:52>
| |   `-ParagraphComment 0x55887c3dc3f0 <col:6, col:52>
| |     `-TextComment 0x55887c3dc3c0 <col:6, col:52> Text=" 8-bit value to encode between 0 and 255 buses."
| `-FieldDecl 0x55887c15ec08 <line:82:3, col:13> col:13 ExtendedRegister 'UINT32':'unsigned int'
|   `-FullComment 0x55887c3dc540 <line:78:6, line:80:38>
|     `-ParagraphComment 0x55887c3dc510 <line:78:6, line:80:38>
|       |-TextComment 0x55887c3dc490 <line:78:6, col:94> Text=" Register number in PCI configuration space. If this field is zero, then Register is used"
|       |-TextComment 0x55887c3dc4b0 <line:79:6, col:97> Text=" for the register number. If this field is non-zero, then Register is ignored and this field"
|       `-TextComment 0x55887c3dc4d0 <line:80:6, col:38> Text=" is used for the register number."
|-TypedefDecl 0x55887c15ecb8 <line:58:1, line:83:3> col:3 EFI_PEI_PCI_CFG_PPI_PCI_ADDRESS 'struct EFI_PEI_PCI_CFG_PPI_PCI_ADDRESS':'EFI_PEI_PCI_CFG_PPI_PCI_ADDRESS'
| |-ElaboratedType 0x55887c15ec60 'struct EFI_PEI_PCI_CFG_PPI_PCI_ADDRESS' sugar
| | `-RecordType 0x55887c15e970 'EFI_PEI_PCI_CFG_PPI_PCI_ADDRESS'
| |   `-Record 0x55887c15e8f0 ''
| `-FullComment 0x55887c3dc610 <line:56:4, col:35>
|   `-ParagraphComment 0x55887c3dc5e0 <col:4, col:35>
|     `-TextComment 0x55887c3dc5b0 <col:4, col:35> Text=" EFI_PEI_PCI_CFG_PPI_PCI_ADDRESS"
|-TypedefDecl 0x55887c15f540 <line:109:1, line:117:3> line:111:10 referenced EFI_PEI_PCI_CFG2_PPI_IO 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_PCI_CFG2_PPI *, EFI_PEI_PCI_CFG_PPI_WIDTH, UINT64, void *)'
| |-PointerType 0x55887c15f4c0 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_PCI_CFG2_PPI *, EFI_PEI_PCI_CFG_PPI_WIDTH, UINT64, void *)'
| | `-ParenType 0x55887c15f460 'EFI_STATUS (const EFI_PEI_SERVICES **, const EFI_PEI_PCI_CFG2_PPI *, EFI_PEI_PCI_CFG_PPI_WIDTH, UINT64, void *)' sugar
| |   `-FunctionProtoType 0x55887c15f410 'EFI_STATUS (const EFI_PEI_SERVICES **, const EFI_PEI_PCI_CFG2_PPI *, EFI_PEI_PCI_CFG_PPI_WIDTH, UINT64, void *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c15f190 'const EFI_PEI_PCI_CFG2_PPI *'
| |     | `-QualType 0x55887c15edd1 'const EFI_PEI_PCI_CFG2_PPI' const
| |     |   `-TypedefType 0x55887c15edd0 'EFI_PEI_PCI_CFG2_PPI' sugar
| |     |     |-Typedef 0x55887c15e358 'EFI_PEI_PCI_CFG2_PPI'
| |     |     `-ElaboratedType 0x55887c15e300 'struct _EFI_PEI_PCI_CFG2_PPI' sugar
| |     |       `-RecordType 0x55887c15e2e0 'struct _EFI_PEI_PCI_CFG2_PPI'
| |     |         `-Record 0x55887c15fad8 '_EFI_PEI_PCI_CFG2_PPI'
| |     |-TypedefType 0x55887c15f230 'EFI_PEI_PCI_CFG_PPI_WIDTH' sugar
| |     | |-Typedef 0x55887c15e858 'EFI_PEI_PCI_CFG_PPI_WIDTH'
| |     | `-ElaboratedType 0x55887c15e800 'enum EFI_PEI_PCI_CFG_PPI_WIDTH' sugar
| |     |   `-EnumType 0x55887c15e4c0 'EFI_PEI_PCI_CFG_PPI_WIDTH'
| |     |     `-Enum 0x55887c15e418 ''
| |     |-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     | |-Typedef 0x55887c049930 'UINT64'
| |     | `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-PointerType 0x55887bfe9730 'void *'
| |       `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3dcfb0 <line:86:1, line:106:37>
|   |-ParagraphComment 0x55887c3dc6b0 <line:86:1, col:73>
|   | `-TextComment 0x55887c3dc680 <col:1, col:73> Text="  Reads from or write to a given location in the PCI configuration space."
|   |-ParagraphComment 0x55887c3dc700 <line:88:1, col:2>
|   | `-TextComment 0x55887c3dc6d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3dc720 <col:3, col:104> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3dc7b0 <col:22, col:104>
|   |   `-TextComment 0x55887c3dc780 <col:22, col:104> Text="     An indirect pointer to the PEI Services Table published by the PEI Foundation."
|   |-ParagraphComment 0x55887c3dc800 <line:90:1, col:2>
|   | `-TextComment 0x55887c3dc7d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3dc820 <col:3, col:66> [in] implicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c3dc8b0 <col:15, col:66>
|   |   `-TextComment 0x55887c3dc880 <col:15, col:66> Text="            Pointer to local data for the interface."
|   |-ParagraphComment 0x55887c3dc900 <line:92:1, col:2>
|   | `-TextComment 0x55887c3dc8d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3dc920 <col:3, line:93:62> [in] implicitly Param="Width" ParamIndex=2
|   | `-ParagraphComment 0x55887c3dc9d0 <line:92:16, line:93:62>
|   |   |-TextComment 0x55887c3dc980 <line:92:16, col:71> Text="           The width of the access. Enumerated in bytes."
|   |   `-TextComment 0x55887c3dc9a0 <line:93:1, col:62> Text="                          See EFI_PEI_PCI_CFG_PPI_WIDTH above."
|   |-ParagraphComment 0x55887c3dca20 <line:95:1, col:2>
|   | `-TextComment 0x55887c3dc9f0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3dca40 <col:3, line:96:86> [in] implicitly Param="Address" ParamIndex=3
|   | `-ParagraphComment 0x55887c3dcaf0 <line:95:18, line:96:86>
|   |   |-TextComment 0x55887c3dcaa0 <line:95:18, col:75> Text="         The physical address of the access. The format of"
|   |   `-TextComment 0x55887c3dcac0 <line:96:1, col:86> Text="                          the address is described by EFI_PEI_PCI_CFG_PPI_PCI_ADDRESS."
|   |-ParagraphComment 0x55887c3dcb40 <line:98:1, col:2>
|   | `-TextComment 0x55887c3dcb10 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3dcb60 <col:3, col:59> [in] implicitly Param="Buffer" ParamIndex=4
|   | `-ParagraphComment 0x55887c3dcbf0 <col:17, col:59>
|   |   `-TextComment 0x55887c3dcbc0 <col:17, col:59> Text="          A pointer to the buffer of data.."
|   |-ParagraphComment 0x55887c3dcc40 <line:101:1, col:2>
|   | `-TextComment 0x55887c3dcc10 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3dcc60 <col:3, col:68> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3dcce0 <col:22, col:68>
|   |   `-TextComment 0x55887c3dccb0 <col:22, col:68> Text="           The function completed successfully."
|   |-ParagraphComment 0x55887c3dcd30 <line:103:1, col:2>
|   | `-TextComment 0x55887c3dcd00 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3dcd50 <col:3, col:73> Name="retval" Arg[0]="EFI_DEVICE_ERROR"
|   | `-ParagraphComment 0x55887c3dcde0 <col:27, col:73>
|   |   `-TextComment 0x55887c3dcdb0 <col:27, col:73> Text="      There was a problem with the transaction."
|   |-ParagraphComment 0x55887c3dce30 <line:105:1, col:2>
|   | `-TextComment 0x55887c3dce00 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3dce50 <col:3, line:106:37> Name="retval" Arg[0]="EFI_DEVICE_NOT_READY"
|     `-ParagraphComment 0x55887c3dcf00 <line:105:31, line:106:37>
|       |-TextComment 0x55887c3dceb0 <line:105:31, col:93> Text="  The device is not capable of supporting the operation at this"
|       `-TextComment 0x55887c3dced0 <line:106:1, col:37> Text="                                time."
|-TypedefDecl 0x55887c15fa58 <line:149:1, line:158:3> line:151:10 referenced EFI_PEI_PCI_CFG2_PPI_RW 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_PCI_CFG2_PPI *, EFI_PEI_PCI_CFG_PPI_WIDTH, UINT64, void *, void *)'
| |-PointerType 0x55887c15f9d0 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_PCI_CFG2_PPI *, EFI_PEI_PCI_CFG_PPI_WIDTH, UINT64, void *, void *)'
| | `-ParenType 0x55887c15f970 'EFI_STATUS (const EFI_PEI_SERVICES **, const EFI_PEI_PCI_CFG2_PPI *, EFI_PEI_PCI_CFG_PPI_WIDTH, UINT64, void *, void *)' sugar
| |   `-FunctionProtoType 0x55887c15f910 'EFI_STATUS (const EFI_PEI_SERVICES **, const EFI_PEI_PCI_CFG2_PPI *, EFI_PEI_PCI_CFG_PPI_WIDTH, UINT64, void *, void *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c15f190 'const EFI_PEI_PCI_CFG2_PPI *'
| |     | `-QualType 0x55887c15edd1 'const EFI_PEI_PCI_CFG2_PPI' const
| |     |   `-TypedefType 0x55887c15edd0 'EFI_PEI_PCI_CFG2_PPI' sugar
| |     |     |-Typedef 0x55887c15e358 'EFI_PEI_PCI_CFG2_PPI'
| |     |     `-ElaboratedType 0x55887c15e300 'struct _EFI_PEI_PCI_CFG2_PPI' sugar
| |     |       `-RecordType 0x55887c15e2e0 'struct _EFI_PEI_PCI_CFG2_PPI'
| |     |         `-Record 0x55887c15fad8 '_EFI_PEI_PCI_CFG2_PPI'
| |     |-TypedefType 0x55887c15f230 'EFI_PEI_PCI_CFG_PPI_WIDTH' sugar
| |     | |-Typedef 0x55887c15e858 'EFI_PEI_PCI_CFG_PPI_WIDTH'
| |     | `-ElaboratedType 0x55887c15e800 'enum EFI_PEI_PCI_CFG_PPI_WIDTH' sugar
| |     |   `-EnumType 0x55887c15e4c0 'EFI_PEI_PCI_CFG_PPI_WIDTH'
| |     |     `-Enum 0x55887c15e418 ''
| |     |-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     | |-Typedef 0x55887c049930 'UINT64'
| |     | `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887bfe9730 'void *'
| |     | `-BuiltinType 0x55887bfe9010 'void'
| |     `-PointerType 0x55887bfe9730 'void *'
| |       `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3ddaf0 <line:120:1, line:146:59>
|   |-ParagraphComment 0x55887c3dd070 <line:120:1, line:121:55>
|   | |-TextComment 0x55887c3dd020 <line:120:1, col:56> Text="  Performs a read-modify-write operation on the contents"
|   | `-TextComment 0x55887c3dd040 <line:121:1, col:55> Text="  from a given location in the PCI configuration space."
|   |-ParagraphComment 0x55887c3dd0c0 <line:123:1, col:2>
|   | `-TextComment 0x55887c3dd090 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3dd0e0 <col:3, line:124:58> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3dd190 <line:123:22, line:124:58>
|   |   |-TextComment 0x55887c3dd140 <line:123:22, col:71> Text="     An indirect pointer to the PEI Services Table"
|   |   `-TextComment 0x55887c3dd160 <line:124:1, col:58> Text="                          published by the PEI Foundation."
|   |-ParagraphComment 0x55887c3dd1e0 <line:126:1, col:2>
|   | `-TextComment 0x55887c3dd1b0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3dd200 <col:3, col:66> [in] implicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c3dd290 <col:15, col:66>
|   |   `-TextComment 0x55887c3dd260 <col:15, col:66> Text="            Pointer to local data for the interface."
|   |-ParagraphComment 0x55887c3dd2e0 <line:128:1, col:2>
|   | `-TextComment 0x55887c3dd2b0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3dd300 <col:3, line:129:73> [in] implicitly Param="Width" ParamIndex=2
|   | `-ParagraphComment 0x55887c3dd3b0 <line:128:16, line:129:73>
|   |   |-TextComment 0x55887c3dd360 <line:128:16, col:76> Text="           The width of the access. Enumerated in bytes. Type"
|   |   `-TextComment 0x55887c3dd380 <line:129:1, col:73> Text="                          EFI_PEI_PCI_CFG_PPI_WIDTH is defined in Read()."
|   |-ParagraphComment 0x55887c3dd400 <line:131:1, col:2>
|   | `-TextComment 0x55887c3dd3d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3dd420 <col:3, col:61> [in] implicitly Param="Address" ParamIndex=3
|   | `-ParagraphComment 0x55887c3dd4b0 <col:18, col:61>
|   |   `-TextComment 0x55887c3dd480 <col:18, col:61> Text="         The physical address of the access."
|   |-ParagraphComment 0x55887c3dd500 <line:133:1, col:2>
|   | `-TextComment 0x55887c3dd4d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3dd520 <col:3, col:90> [in] implicitly Param="SetBits" ParamIndex=4
|   | `-ParagraphComment 0x55887c3dd5b0 <col:18, col:90>
|   |   `-TextComment 0x55887c3dd580 <col:18, col:90> Text="         Points to value to bitwise-OR with the read configuration value."
|   |-ParagraphComment 0x55887c3dd600 <line:135:1, col:71>
|   | `-TextComment 0x55887c3dd5d0 <col:1, col:71> Text="                          The size of the value is determined by Width."
|   |-ParagraphComment 0x55887c3dd650 <line:137:1, col:2>
|   | `-TextComment 0x55887c3dd620 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3dd670 <col:3, line:138:71> [in] implicitly Param="ClearBits" ParamIndex=5
|   | `-ParagraphComment 0x55887c3dd720 <line:137:20, line:138:71>
|   |   |-TextComment 0x55887c3dd6d0 <line:137:20, col:106> Text="       Points to the value to negate and bitwise-AND with the read configuration value."
|   |   `-TextComment 0x55887c3dd6f0 <line:138:1, col:71> Text="                          The size of the value is determined by Width."
|   |-ParagraphComment 0x55887c3dd770 <line:141:1, col:2>
|   | `-TextComment 0x55887c3dd740 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3dd790 <col:3, col:68> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3dd810 <col:22, col:68>
|   |   `-TextComment 0x55887c3dd7e0 <col:22, col:68> Text="           The function completed successfully."
|   |-ParagraphComment 0x55887c3dd860 <line:143:1, col:2>
|   | `-TextComment 0x55887c3dd830 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3dd880 <col:3, col:73> Name="retval" Arg[0]="EFI_DEVICE_ERROR"
|   | `-ParagraphComment 0x55887c3dd910 <col:27, col:73>
|   |   `-TextComment 0x55887c3dd8e0 <col:27, col:73> Text="      There was a problem with the transaction."
|   |-ParagraphComment 0x55887c3dd960 <line:145:1, col:2>
|   | `-TextComment 0x55887c3dd930 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3dd980 <col:3, line:146:59> Name="retval" Arg[0]="EFI_DEVICE_NOT_READY"
|     `-ParagraphComment 0x55887c3dda30 <line:145:31, line:146:59>
|       |-TextComment 0x55887c3dd9e0 <line:145:31, col:71> Text="  The device is not capable of supporting"
|       `-TextComment 0x55887c3dda00 <line:146:1, col:59> Text="                                the operation at this time."
|-RecordDecl 0x55887c15fad8 prev 0x55887c15e260 <line:164:1, line:172:1> line:164:8 struct _EFI_PEI_PCI_CFG2_PPI definition
| |-FullComment 0x55887c3ddbe0 <line:161:4, line:162:52>
| | `-ParagraphComment 0x55887c3ddbb0 <line:161:4, line:162:52>
| |   |-TextComment 0x55887c3ddb60 <line:161:4, col:75> Text=" The EFI_PEI_PCI_CFG_PPI interfaces are used to abstract accesses to PCI"
| |   `-TextComment 0x55887c3ddb80 <line:162:4, col:52> Text=" controllers behind a PCI root bridge controller."
| |-FieldDecl 0x55887c15fb90 <line:165:3, col:30> col:30 Read 'EFI_PEI_PCI_CFG2_PPI_IO':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_PCI_CFG2_PPI *, EFI_PEI_PCI_CFG_PPI_WIDTH, UINT64, void *)'
| |-FieldDecl 0x55887c15fbf0 <line:166:3, col:30> col:30 Write 'EFI_PEI_PCI_CFG2_PPI_IO':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_PCI_CFG2_PPI *, EFI_PEI_PCI_CFG_PPI_WIDTH, UINT64, void *)'
| |-FieldDecl 0x55887c15fc70 <line:167:3, col:30> col:30 Modify 'EFI_PEI_PCI_CFG2_PPI_RW':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_PCI_CFG2_PPI *, EFI_PEI_PCI_CFG_PPI_WIDTH, UINT64, void *, void *)'
| `-FieldDecl 0x55887c15fcf8 <line:171:3, col:30> col:30 Segment 'UINT16':'unsigned short'
|   `-FullComment 0x55887c3ddcb0 <line:169:6, col:68>
|     `-ParagraphComment 0x55887c3ddc80 <col:6, col:68>
|       `-TextComment 0x55887c3ddc50 <col:6, col:68> Text=" The PCI bus segment which the specified functions will access."
|-VarDecl 0x55887c15fd58 <line:174:1, col:18> col:18 gEfiPciCfg2PpiGuid 'EFI_GUID':'GUID' extern
|-TypedefDecl 0x55887c160058 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiPeiCis.h:52:1, line:57:3> line:54:10 EFI_PEIM_ENTRY_POINT2 'EFI_STATUS (*)(EFI_PEI_FILE_HANDLE, const EFI_PEI_SERVICES **)'
| |-PointerType 0x55887c15fff0 'EFI_STATUS (*)(EFI_PEI_FILE_HANDLE, const EFI_PEI_SERVICES **)'
| | `-ParenType 0x55887c15ff90 'EFI_STATUS (EFI_PEI_FILE_HANDLE, const EFI_PEI_SERVICES **)' sugar
| |   `-FunctionProtoType 0x55887c15ff50 'EFI_STATUS (EFI_PEI_FILE_HANDLE, const EFI_PEI_SERVICES **)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-TypedefType 0x55887c15fdf0 'EFI_PEI_FILE_HANDLE' sugar
| |     | |-Typedef 0x55887c10b3a0 'EFI_PEI_FILE_HANDLE'
| |     | `-PointerType 0x55887bfe9730 'void *'
| |     |   `-BuiltinType 0x55887bfe9010 'void'
| |     `-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |       `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |         `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |           `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |             |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |             `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |               `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |                 `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| `-FullComment 0x55887c3de150 <line:42:1, line:49:50>
|   |-ParagraphComment 0x55887c3ddd70 <line:42:1, line:43:87>
|   | |-TextComment 0x55887c3ddd20 <line:42:1, col:79> Text="  The PEI Dispatcher will invoke each PEIM one time.  During this pass, the PEI"
|   | `-TextComment 0x55887c3ddd40 <line:43:1, col:87> Text="  Dispatcher will pass control to the PEIM at the AddressOfEntryPoint in the PE Header."
|   |-ParagraphComment 0x55887c3dddc0 <line:45:1, col:2>
|   | `-TextComment 0x55887c3ddd90 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ddde0 <col:3, line:46:2> [in] implicitly Param="FileHandle" ParamIndex=0
|   | `-ParagraphComment 0x55887c3dde90 <line:45:21, line:46:2>
|   |   |-TextComment 0x55887c3dde40 <line:45:21, col:58> Text="       Pointer to the FFS file header."
|   |   `-TextComment 0x55887c3dde60 <line:46:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ddeb0 <col:3, col:71> [in] implicitly Param="PeiServices" ParamIndex=1
|   | `-ParagraphComment 0x55887c3ddf40 <col:22, col:71>
|   |   `-TextComment 0x55887c3ddf10 <col:22, col:71> Text="      Describes the list of possible PEI Services."
|   |-ParagraphComment 0x55887c3ddf90 <line:48:1, col:2>
|   | `-TextComment 0x55887c3ddf60 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3ddfb0 <col:3, line:49:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3de050 <line:48:22, line:49:2>
|   |   |-TextComment 0x55887c3de000 <line:48:22, col:58> Text="      The PEI completed successfully."
|   |   `-TextComment 0x55887c3de020 <line:49:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3de070 <col:3, col:50> Name="retval" Arg[0]="!EFI_SUCCESS"
|     `-ParagraphComment 0x55887c3de0f0 <col:23, col:50>
|       `-TextComment 0x55887c3de0c0 <col:23, col:50> Text="     There is error in PEIM."
|-TypedefDecl 0x55887c0ddc40 <line:69:1, line:75:3> line:71:10 referenced EFI_PEIM_NOTIFY_ENTRY_POINT 'EFI_STATUS (*)(EFI_PEI_SERVICES **, EFI_PEI_NOTIFY_DESCRIPTOR *, void *)'
| |-PointerType 0x55887c0ddbd0 'EFI_STATUS (*)(EFI_PEI_SERVICES **, EFI_PEI_NOTIFY_DESCRIPTOR *, void *)'
| | `-ParenType 0x55887c0ddb70 'EFI_STATUS (EFI_PEI_SERVICES **, EFI_PEI_NOTIFY_DESCRIPTOR *, void *)' sugar
| |   `-FunctionProtoType 0x55887c0ddb30 'EFI_STATUS (EFI_PEI_SERVICES **, EFI_PEI_NOTIFY_DESCRIPTOR *, void *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c0dd8d0 'EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c160110 'EFI_PEI_SERVICES *'
| |     |   `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |     |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |     `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |       `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |         `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c0dd9d0 'EFI_PEI_NOTIFY_DESCRIPTOR *'
| |     | `-TypedefType 0x55887c0dd980 'EFI_PEI_NOTIFY_DESCRIPTOR' sugar
| |     |   |-Typedef 0x55887c10b6b8 'EFI_PEI_NOTIFY_DESCRIPTOR'
| |     |   `-ElaboratedType 0x55887c10b660 'struct _EFI_PEI_NOTIFY_DESCRIPTOR' sugar
| |     |     `-RecordType 0x55887c10b640 'struct _EFI_PEI_NOTIFY_DESCRIPTOR'
| |     |       `-Record 0x55887c0de040 '_EFI_PEI_NOTIFY_DESCRIPTOR'
| |     `-PointerType 0x55887bfe9730 'void *'
| |       `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3de5f0 <line:60:1, line:67:65>
|   |-ParagraphComment 0x55887c3de1f0 <line:60:1, col:75>
|   | `-TextComment 0x55887c3de1c0 <col:1, col:75> Text="  Entry point of the notification callback function itself within the PEIM."
|   |-ParagraphComment 0x55887c3de240 <line:62:1, col:2>
|   | `-TextComment 0x55887c3de210 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3de260 <col:3, line:63:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3de310 <line:62:22, line:63:2>
|   |   |-TextComment 0x55887c3de2c0 <line:62:22, col:72> Text="      Indirect reference to the PEI Services Table."
|   |   `-TextComment 0x55887c3de2e0 <line:63:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3de330 <col:3, line:64:2> [in] implicitly Param="NotifyDescriptor" ParamIndex=1
|   | `-ParagraphComment 0x55887c3de3f0 <line:63:27, line:64:2>
|   |   |-TextComment 0x55887c3de3a0 <line:63:27, col:81> Text=" Address of the notification descriptor data structure."
|   |   `-TextComment 0x55887c3de3c0 <line:64:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3de410 <col:3, col:65> [in] implicitly Param="Ppi" ParamIndex=2
|   | `-ParagraphComment 0x55887c3de4a0 <col:14, col:65>
|   |   `-TextComment 0x55887c3de470 <col:14, col:65> Text="              Address of the PPI that was installed."
|   |-ParagraphComment 0x55887c3de4f0 <line:66:1, col:2>
|   | `-TextComment 0x55887c3de4c0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3de510 <col:3, line:67:65> Name="return"
|     `-ParagraphComment 0x55887c3de590 <line:66:10, line:67:65>
|       |-TextComment 0x55887c3de540 <line:66:10, col:37> Text=" Status of the notification."
|       `-TextComment 0x55887c3de560 <line:67:1, col:65> Text="          The status code returned from this function is ignored."
|-RecordDecl 0x55887c0ddcc8 <line:90:9, line:104:1> line:90:9 struct definition
| |-FullComment 0x55887c3de6c0 <line:88:4, col:95>
| | `-ParagraphComment 0x55887c3de690 <col:4, col:95>
| |   `-TextComment 0x55887c3de660 <col:4, col:95> Text=" The data structure through which a PEIM describes available services to the PEI Foundation."
| |-FieldDecl 0x55887c0ddda8 <line:95:3, col:15> col:15 referenced Flags 'UINTN':'unsigned long long'
| | `-FullComment 0x55887c3de7b0 <line:92:6, line:93:95>
| |   `-ParagraphComment 0x55887c3de780 <line:92:6, line:93:95>
| |     |-TextComment 0x55887c3de730 <line:92:6, col:95> Text=" This field is a set of flags describing the characteristics of this imported table entry."
| |     `-TextComment 0x55887c3de750 <line:93:6, col:95> Text=" All flags are defined as EFI_PEI_PPI_DESCRIPTOR_***, which can also be combined into one."
| |-FieldDecl 0x55887c0dde68 <line:99:3, col:16> col:16 referenced Guid 'EFI_GUID *'
| | `-FullComment 0x55887c3de880 <line:97:6, col:59>
| |   `-ParagraphComment 0x55887c3de850 <col:6, col:59>
| |     `-TextComment 0x55887c3de820 <col:6, col:59> Text=" The address of the EFI_GUID that names the interface."
| `-FieldDecl 0x55887c0ddf00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiPeiCis.h:103:16> col:16 referenced Ppi 'void *'
|   `-FullComment 0x55887c3de950 <line:101:6, col:87>
|     `-ParagraphComment 0x55887c3de920 <col:6, col:87>
|       `-TextComment 0x55887c3de8f0 <col:6, col:87> Text=" A pointer to the PPI. It contains the information necessary to install a service."
|-TypedefDecl 0x55887c0ddfa8 <line:90:1, line:104:3> col:3 referenced EFI_PEI_PPI_DESCRIPTOR 'struct EFI_PEI_PPI_DESCRIPTOR':'EFI_PEI_PPI_DESCRIPTOR'
| |-ElaboratedType 0x55887c0ddf50 'struct EFI_PEI_PPI_DESCRIPTOR' sugar
| | `-RecordType 0x55887c0ddd50 'EFI_PEI_PPI_DESCRIPTOR'
| |   `-Record 0x55887c0ddcc8 ''
| `-FullComment 0x55887c3dea20 <line:88:4, col:95>
|   `-ParagraphComment 0x55887c3de9f0 <col:4, col:95>
|     `-TextComment 0x55887c3de9c0 <col:4, col:95> Text=" The data structure through which a PEIM describes available services to the PEI Foundation."
|-RecordDecl 0x55887c0de040 prev 0x55887c10b5c0 <line:110:1, line:123:1> line:110:8 struct _EFI_PEI_NOTIFY_DESCRIPTOR definition
| |-FullComment 0x55887c3deb10 <line:107:4, line:108:56>
| | `-ParagraphComment 0x55887c3deae0 <line:107:4, line:108:56>
| |   |-TextComment 0x55887c3dea90 <line:107:4, col:57> Text=" The data structure in a given PEIM that tells the PEI"
| |   `-TextComment 0x55887c3deab0 <line:108:4, col:56> Text=" Foundation where to invoke the notification service."
| |-FieldDecl 0x55887c0de0f8 <line:114:3, col:34> col:34 Flags 'UINTN':'unsigned long long'
| | `-FullComment 0x55887c3debe0 <line:112:6, col:67>
| |   `-ParagraphComment 0x55887c3debb0 <col:6, col:67>
| |     `-TextComment 0x55887c3deb80 <col:6, col:67> Text=" Details if the type of notification are callback or dispatch."
| |-FieldDecl 0x55887c0de188 <line:118:3, col:35> col:35 Guid 'EFI_GUID *'
| | `-FullComment 0x55887c3decb0 <line:116:6, col:59>
| |   `-ParagraphComment 0x55887c3dec80 <col:6, col:59>
| |     `-TextComment 0x55887c3dec50 <col:6, col:59> Text=" The address of the EFI_GUID that names the interface."
| `-FieldDecl 0x55887c0de240 <line:122:3, col:34> col:34 Notify 'EFI_PEIM_NOTIFY_ENTRY_POINT':'EFI_STATUS (*)(EFI_PEI_SERVICES **, EFI_PEI_NOTIFY_DESCRIPTOR *, void *)'
|   `-FullComment 0x55887c3ded80 <line:120:6, col:75>
|     `-ParagraphComment 0x55887c3ded50 <col:6, col:75>
|       `-TextComment 0x55887c3ded20 <col:6, col:75> Text=" Address of the notification callback function itself within the PEIM."
|-RecordDecl 0x55887c0de2b8 <line:129:9, line:138:1> line:129:9 union definition
| |-FullComment 0x55887c3dee70 <line:126:4, line:127:50>
| | `-ParagraphComment 0x55887c3dee40 <line:126:4, line:127:50>
| |   |-TextComment 0x55887c3dedf0 <line:126:4, col:81> Text=" This data structure is the means by which callable services are installed and"
| |   `-TextComment 0x55887c3dee10 <line:127:4, col:50> Text=" notifications are registered in the PEI phase."
| |-FieldDecl 0x55887c0de398 <line:133:3, col:32> col:32 Notify 'EFI_PEI_NOTIFY_DESCRIPTOR':'struct _EFI_PEI_NOTIFY_DESCRIPTOR'
| | `-FullComment 0x55887c3def40 <line:131:6, col:59>
| |   `-ParagraphComment 0x55887c3def10 <col:6, col:59>
| |     `-TextComment 0x55887c3deee0 <col:6, col:59> Text=" The typedef structure of the notification descriptor."
| `-FieldDecl 0x55887c0de450 <line:137:3, col:32> col:32 Ppi 'EFI_PEI_PPI_DESCRIPTOR':'EFI_PEI_PPI_DESCRIPTOR'
|   `-FullComment 0x55887c3df010 <line:135:6, col:50>
|     `-ParagraphComment 0x55887c3defe0 <col:6, col:50>
|       `-TextComment 0x55887c3defb0 <col:6, col:50> Text=" The typedef structure of the PPI descriptor."
|-TypedefDecl 0x55887c0de568 <line:129:1, line:138:3> col:3 EFI_PEI_DESCRIPTOR 'union EFI_PEI_DESCRIPTOR':'EFI_PEI_DESCRIPTOR'
| |-ElaboratedType 0x55887c0de510 'union EFI_PEI_DESCRIPTOR' sugar
| | `-RecordType 0x55887c0de340 'EFI_PEI_DESCRIPTOR'
| |   `-Record 0x55887c0de2b8 ''
| `-FullComment 0x55887c3df110 <line:126:4, line:127:50>
|   `-ParagraphComment 0x55887c3df0e0 <line:126:4, line:127:50>
|     |-TextComment 0x55887c3df080 <line:126:4, col:81> Text=" This data structure is the means by which callable services are installed and"
|     `-TextComment 0x55887c3df0b0 <line:127:4, col:50> Text=" notifications are registered in the PEI phase."
|-TypedefDecl 0x55887c1642a0 <line:157:1, line:162:3> line:159:10 referenced EFI_PEI_INSTALL_PPI 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_PPI_DESCRIPTOR *)'
| |-PointerType 0x55887c0de830 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_PPI_DESCRIPTOR *)'
| | `-ParenType 0x55887c0de7d0 'EFI_STATUS (const EFI_PEI_SERVICES **, const EFI_PEI_PPI_DESCRIPTOR *)' sugar
| |   `-FunctionProtoType 0x55887c0de790 'EFI_STATUS (const EFI_PEI_SERVICES **, const EFI_PEI_PPI_DESCRIPTOR *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     `-PointerType 0x55887c0de6b0 'const EFI_PEI_PPI_DESCRIPTOR *'
| |       `-QualType 0x55887c0de421 'const EFI_PEI_PPI_DESCRIPTOR' const
| |         `-TypedefType 0x55887c0de420 'EFI_PEI_PPI_DESCRIPTOR' sugar
| |           |-Typedef 0x55887c0ddfa8 'EFI_PEI_PPI_DESCRIPTOR'
| |           `-ElaboratedType 0x55887c0ddf50 'struct EFI_PEI_PPI_DESCRIPTOR' sugar
| |             `-RecordType 0x55887c0ddd50 'EFI_PEI_PPI_DESCRIPTOR'
| |               `-Record 0x55887c0ddcc8 ''
| `-FullComment 0x55887c3df760 <line:141:1, line:154:81>
|   |-ParagraphComment 0x55887c3df220 <line:141:1, line:144:19>
|   | |-TextComment 0x55887c3df180 <line:141:1, col:78> Text="  This service is the first one provided by the PEI Foundation.  This function"
|   | |-TextComment 0x55887c3df1a0 <line:142:1, col:76> Text="  installs an interface in the PEI PPI database by GUID.  The purpose of the"
|   | |-TextComment 0x55887c3df1c0 <line:143:1, col:71> Text="  service is to publish an interface that other parties can use to call"
|   | `-TextComment 0x55887c3df1e0 <line:144:1, col:19> Text="  additional PEIMs."
|   |-ParagraphComment 0x55887c3df270 <line:146:1, col:2>
|   | `-TextComment 0x55887c3df240 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3df290 <col:3, line:148:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3df370 <line:146:22, line:148:2>
|   |   |-TextComment 0x55887c3df2f0 <line:146:22, col:76> Text="      An indirect pointer to the EFI_PEI_SERVICES table"
|   |   |-TextComment 0x55887c3df310 <line:147:1, col:59> Text="                           published by the PEI Foundation."
|   |   `-TextComment 0x55887c3df330 <line:148:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3df390 <col:3, col:93> [in] implicitly Param="PpiList" ParamIndex=1
|   | `-ParagraphComment 0x55887c3df420 <col:18, col:93>
|   |   `-TextComment 0x55887c3df3f0 <col:18, col:93> Text="          A pointer to the list of interfaces that the caller shall install."
|   |-ParagraphComment 0x55887c3df470 <line:150:1, col:2>
|   | `-TextComment 0x55887c3df440 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3df490 <col:3, line:151:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3df530 <line:150:22, line:151:2>
|   |   |-TextComment 0x55887c3df4e0 <line:150:22, col:73> Text="           The interface was successfully installed."
|   |   `-TextComment 0x55887c3df500 <line:151:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3df550 <col:3, line:154:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c3df650 <line:151:32, line:154:2>
|   |   |-TextComment 0x55887c3df5b0 <line:151:32, col:81> Text=" The PpiList pointer is NULL or Any of the PEI PPI"
|   |   |-TextComment 0x55887c3df5d0 <line:152:1, col:71> Text="                                descriptors in the list do not have the"
|   |   |-TextComment 0x55887c3df5f0 <line:153:1, col:86> Text="                                EFI_PEI_PPI_DESCRIPTOR_PPI bit set in the Flags field."
|   |   `-TextComment 0x55887c3df610 <line:154:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3df670 <col:3, col:81> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|     `-ParagraphComment 0x55887c3df700 <col:31, col:81>
|       `-TextComment 0x55887c3df6d0 <col:31, col:81> Text="  There is no additional space in the PPI database."
|-TypedefDecl 0x55887c1645f0 <line:182:1, line:188:3> line:184:10 referenced EFI_PEI_REINSTALL_PPI 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_PPI_DESCRIPTOR *, const EFI_PEI_PPI_DESCRIPTOR *)'
| |-PointerType 0x55887c164580 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_PPI_DESCRIPTOR *, const EFI_PEI_PPI_DESCRIPTOR *)'
| | `-ParenType 0x55887c164520 'EFI_STATUS (const EFI_PEI_SERVICES **, const EFI_PEI_PPI_DESCRIPTOR *, const EFI_PEI_PPI_DESCRIPTOR *)' sugar
| |   `-FunctionProtoType 0x55887c1644e0 'EFI_STATUS (const EFI_PEI_SERVICES **, const EFI_PEI_PPI_DESCRIPTOR *, const EFI_PEI_PPI_DESCRIPTOR *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c0de6b0 'const EFI_PEI_PPI_DESCRIPTOR *'
| |     | `-QualType 0x55887c0de421 'const EFI_PEI_PPI_DESCRIPTOR' const
| |     |   `-TypedefType 0x55887c0de420 'EFI_PEI_PPI_DESCRIPTOR' sugar
| |     |     |-Typedef 0x55887c0ddfa8 'EFI_PEI_PPI_DESCRIPTOR'
| |     |     `-ElaboratedType 0x55887c0ddf50 'struct EFI_PEI_PPI_DESCRIPTOR' sugar
| |     |       `-RecordType 0x55887c0ddd50 'EFI_PEI_PPI_DESCRIPTOR'
| |     |         `-Record 0x55887c0ddcc8 ''
| |     `-PointerType 0x55887c0de6b0 'const EFI_PEI_PPI_DESCRIPTOR *'
| |       `-QualType 0x55887c0de421 'const EFI_PEI_PPI_DESCRIPTOR' const
| |         `-TypedefType 0x55887c0de420 'EFI_PEI_PPI_DESCRIPTOR' sugar
| |           |-Typedef 0x55887c0ddfa8 'EFI_PEI_PPI_DESCRIPTOR'
| |           `-ElaboratedType 0x55887c0ddf50 'struct EFI_PEI_PPI_DESCRIPTOR' sugar
| |             `-RecordType 0x55887c0ddd50 'EFI_PEI_PPI_DESCRIPTOR'
| |               `-Record 0x55887c0ddcc8 ''
| `-FullComment 0x55887c3dff30 <line:165:1, line:179:106>
|   |-ParagraphComment 0x55887c3df870 <line:165:1, line:168:29>
|   | |-TextComment 0x55887c3df7d0 <line:165:1, col:72> Text="  This function reinstalls an interface in the PEI PPI database by GUID."
|   | |-TextComment 0x55887c3df7f0 <line:166:1, col:74> Text="  The purpose of the service is to publish an interface that other parties"
|   | |-TextComment 0x55887c3df810 <line:167:1, col:68> Text="  can use to replace a same-named interface in the protocol database"
|   | `-TextComment 0x55887c3df830 <line:168:1, col:29> Text="  with a different interface."
|   |-ParagraphComment 0x55887c3df8c0 <line:170:1, col:2>
|   | `-TextComment 0x55887c3df890 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3df8e0 <col:3, line:172:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3df9c0 <line:170:22, line:172:2>
|   |   |-TextComment 0x55887c3df940 <line:170:22, col:76> Text="      An indirect pointer to the EFI_PEI_SERVICES table"
|   |   |-TextComment 0x55887c3df960 <line:171:1, col:59> Text="                           published by the PEI Foundation."
|   |   `-TextComment 0x55887c3df980 <line:172:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3df9e0 <col:3, line:173:2> [in] implicitly Param="OldPpi" ParamIndex=1
|   | `-ParagraphComment 0x55887c3dfa90 <line:172:17, line:173:2>
|   |   |-TextComment 0x55887c3dfa40 <line:172:17, col:71> Text="           A pointer to the former PPI in the database."
|   |   `-TextComment 0x55887c3dfa60 <line:173:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3dfab0 <col:3, col:89> [in] implicitly Param="NewPpi" ParamIndex=2
|   | `-ParagraphComment 0x55887c3dfb40 <col:17, col:89>
|   |   `-TextComment 0x55887c3dfb10 <col:17, col:89> Text="           A pointer to the new interfaces that the caller shall install."
|   |-ParagraphComment 0x55887c3dfb90 <line:175:1, col:2>
|   | `-TextComment 0x55887c3dfb60 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3dfbb0 <col:3, line:176:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3dfc50 <line:175:22, line:176:2>
|   |   |-TextComment 0x55887c3dfc00 <line:175:22, col:73> Text="           The interface was successfully installed."
|   |   `-TextComment 0x55887c3dfc20 <line:176:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3dfc70 <col:3, line:178:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c3dfd50 <line:176:32, line:178:2>
|   |   |-TextComment 0x55887c3dfcd0 <line:176:32, col:100> Text=" The PpiList pointer is NULL or Any of the PEI PPI descriptors in the"
|   |   |-TextComment 0x55887c3dfcf0 <line:177:1, col:107> Text="                                list do not have the EFI_PEI_PPI_DESCRIPTOR_PPI bit set in the Flags field."
|   |   `-TextComment 0x55887c3dfd10 <line:178:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3dfd70 <col:3, line:179:2> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|   | `-ParagraphComment 0x55887c3dfe20 <line:178:31, line:179:2>
|   |   |-TextComment 0x55887c3dfdd0 <line:178:31, col:81> Text="  There is no additional space in the PPI database."
|   |   `-TextComment 0x55887c3dfdf0 <line:179:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3dfe40 <col:3, col:106> Name="retval" Arg[0]="EFI_NOT_FOUND"
|     `-ParagraphComment 0x55887c3dfec0 <col:24, col:106>
|       `-TextComment 0x55887c3dfe90 <col:24, col:106> Text="         The PPI for which the reinstallation was requested has not been installed."
|-TypedefDecl 0x55887c164bc0 <line:203:1, line:211:3> line:205:10 referenced EFI_PEI_LOCATE_PPI 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)'
| |-PointerType 0x55887c164b40 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)'
| | `-ParenType 0x55887c164ae0 'EFI_STATUS (const EFI_PEI_SERVICES **, const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)' sugar
| |   `-FunctionProtoType 0x55887c164a90 'EFI_STATUS (const EFI_PEI_SERVICES **, const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-PointerType 0x55887c164730 'const EFI_GUID *'
| |     | `-QualType 0x55887c0705c1 'const EFI_GUID' const
| |     |   `-TypedefType 0x55887c0705c0 'EFI_GUID' sugar
| |     |     |-Typedef 0x55887c06c210 'EFI_GUID'
| |     |     `-TypedefType 0x55887c06c1e0 'GUID' sugar
| |     |       |-Typedef 0x55887c051a78 'GUID'
| |     |       `-ElaboratedType 0x55887c051a20 'struct GUID' sugar
| |     |         `-RecordType 0x55887c04a5b0 'GUID'
| |     |           `-Record 0x55887c04a528 ''
| |     |-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     | |-Typedef 0x55887c04a020 'UINTN'
| |     | `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |   |-Typedef 0x55887c049930 'UINT64'
| |     |   `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c1648e0 'EFI_PEI_PPI_DESCRIPTOR **'
| |     | `-PointerType 0x55887c164880 'EFI_PEI_PPI_DESCRIPTOR *'
| |     |   `-TypedefType 0x55887c0de420 'EFI_PEI_PPI_DESCRIPTOR' sugar
| |     |     |-Typedef 0x55887c0ddfa8 'EFI_PEI_PPI_DESCRIPTOR'
| |     |     `-ElaboratedType 0x55887c0ddf50 'struct EFI_PEI_PPI_DESCRIPTOR' sugar
| |     |       `-RecordType 0x55887c0ddd50 'EFI_PEI_PPI_DESCRIPTOR'
| |     |         `-Record 0x55887c0ddcc8 ''
| |     `-PointerType 0x55887c164990 'void **'
| |       `-PointerType 0x55887bfe9730 'void *'
| |         `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3e0630 <line:191:1, line:200:80>
|   |-ParagraphComment 0x55887c3dffd0 <line:191:1, col:69>
|   | `-TextComment 0x55887c3dffa0 <col:1, col:69> Text="  This function locates an interface in the PEI PPI database by GUID."
|   |-ParagraphComment 0x55887c3e0020 <line:193:1, col:2>
|   | `-TextComment 0x55887c3dfff0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e0040 <col:3, line:194:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e00f0 <line:193:22, line:194:2>
|   |   |-TextComment 0x55887c3e00a0 <line:193:22, col:103> Text="      An indirect pointer to the EFI_PEI_SERVICES published by the PEI Foundation."
|   |   `-TextComment 0x55887c3e00c0 <line:194:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e0110 <col:3, line:195:2> [in] implicitly Param="Guid" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e01c0 <line:194:15, line:195:2>
|   |   |-TextComment 0x55887c3e0170 <line:194:15, col:97> Text="             A pointer to the GUID whose corresponding interface needs to be found."
|   |   `-TextComment 0x55887c3e0190 <line:195:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e01e0 <col:3, line:196:2> [in] implicitly Param="Instance" ParamIndex=2
|   | `-ParagraphComment 0x55887c3e0290 <line:195:19, line:196:2>
|   |   |-TextComment 0x55887c3e0240 <line:195:19, col:79> Text="         The N-th instance of the interface that is required."
|   |   `-TextComment 0x55887c3e0260 <line:196:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e02b0 <col:3, line:197:2> [in] implicitly Param="PpiDescriptor" ParamIndex=3
|   | `-ParagraphComment 0x55887c3e0360 <line:196:24, line:197:2>
|   |   |-TextComment 0x55887c3e0310 <line:196:24, col:79> Text="    A pointer to instance of the EFI_PEI_PPI_DESCRIPTOR."
|   |   `-TextComment 0x55887c3e0330 <line:197:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e0380 <col:3, col:70> [in] implicitly Param="Ppi" ParamIndex=4
|   | `-ParagraphComment 0x55887c3e0410 <col:14, col:70>
|   |   `-TextComment 0x55887c3e03e0 <col:14, col:70> Text="              A pointer to the instance of the interface."
|   |-ParagraphComment 0x55887c3e0460 <line:199:1, col:2>
|   | `-TextComment 0x55887c3e0430 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e0480 <col:3, line:200:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3e0520 <line:199:22, line:200:2>
|   |   |-TextComment 0x55887c3e04d0 <line:199:22, col:72> Text="           The interface was successfully returned."
|   |   `-TextComment 0x55887c3e04f0 <line:200:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e0540 <col:3, col:80> Name="retval" Arg[0]="EFI_NOT_FOUND"
|     `-ParagraphComment 0x55887c3e05c0 <col:24, col:80>
|       `-TextComment 0x55887c3e0590 <col:24, col:80> Text="         The PPI descriptor is not found in the database."
|-TypedefDecl 0x55887c164ee8 <line:228:1, line:233:3> line:230:10 referenced EFI_PEI_NOTIFY_PPI 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_NOTIFY_DESCRIPTOR *)'
| |-PointerType 0x55887c164e80 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_NOTIFY_DESCRIPTOR *)'
| | `-ParenType 0x55887c164e20 'EFI_STATUS (const EFI_PEI_SERVICES **, const EFI_PEI_NOTIFY_DESCRIPTOR *)' sugar
| |   `-FunctionProtoType 0x55887c164de0 'EFI_STATUS (const EFI_PEI_SERVICES **, const EFI_PEI_NOTIFY_DESCRIPTOR *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     `-PointerType 0x55887c164d00 'const EFI_PEI_NOTIFY_DESCRIPTOR *'
| |       `-QualType 0x55887c0dd981 'const EFI_PEI_NOTIFY_DESCRIPTOR' const
| |         `-TypedefType 0x55887c0dd980 'EFI_PEI_NOTIFY_DESCRIPTOR' sugar
| |           |-Typedef 0x55887c10b6b8 'EFI_PEI_NOTIFY_DESCRIPTOR'
| |           `-ElaboratedType 0x55887c10b660 'struct _EFI_PEI_NOTIFY_DESCRIPTOR' sugar
| |             `-RecordType 0x55887c10b640 'struct _EFI_PEI_NOTIFY_DESCRIPTOR'
| |               `-Record 0x55887c0de040 '_EFI_PEI_NOTIFY_DESCRIPTOR'
| `-FullComment 0x55887c3e0c30 <line:214:1, line:225:81>
|   |-ParagraphComment 0x55887c3e0740 <line:214:1, line:217:29>
|   | |-TextComment 0x55887c3e06a0 <line:214:1, col:72> Text="  This function installs a notification service to be called back when a"
|   | |-TextComment 0x55887c3e06c0 <line:215:1, col:74> Text="  given interface is installed or reinstalled.  The purpose of the service"
|   | |-TextComment 0x55887c3e06e0 <line:216:1, col:79> Text="  is to publish an interface that other parties can use to call additional PPIs"
|   | `-TextComment 0x55887c3e0700 <line:217:1, col:29> Text="  that may materialize later."
|   |-ParagraphComment 0x55887c3e0790 <line:219:1, col:2>
|   | `-TextComment 0x55887c3e0760 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e07b0 <col:3, line:220:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e0860 <line:219:22, line:220:2>
|   |   |-TextComment 0x55887c3e0810 <line:219:22, col:108> Text="      An indirect pointer to the EFI_PEI_SERVICES table published by the PEI Foundation"
|   |   `-TextComment 0x55887c3e0830 <line:220:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e0880 <col:3, col:106> [in] implicitly Param="NotifyList" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e0910 <col:21, col:106>
|   |   `-TextComment 0x55887c3e08e0 <col:21, col:106> Text="       A pointer to the list of notification interfaces that the caller shall install."
|   |-ParagraphComment 0x55887c3e0960 <line:222:1, col:2>
|   | `-TextComment 0x55887c3e0930 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e0980 <col:3, line:223:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3e0a20 <line:222:22, line:223:2>
|   |   |-TextComment 0x55887c3e09d0 <line:222:22, col:73> Text="           The interface was successfully installed."
|   |   `-TextComment 0x55887c3e09f0 <line:223:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e0a40 <col:3, line:225:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c3e0b20 <line:223:32, line:225:2>
|   |   |-TextComment 0x55887c3e0aa0 <line:223:32, col:101> Text=" The PpiList pointer is NULL, or any of the PEI PPI descriptors in the"
|   |   |-TextComment 0x55887c3e0ac0 <line:224:1, col:116> Text="                                list do not have the EFI_PEI_PPI_DESCRIPTOR_NOTIFY_TYPES bit set in the Flags field."
|   |   `-TextComment 0x55887c3e0ae0 <line:225:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e0b40 <col:3, col:81> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|     `-ParagraphComment 0x55887c3e0bd0 <col:31, col:81>
|       `-TextComment 0x55887c3e0ba0 <col:31, col:81> Text="  There is no additional space in the PPI database."
|-TypedefDecl 0x55887c1651d8 <line:244:1, line:249:3> line:246:10 referenced EFI_PEI_GET_BOOT_MODE 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_BOOT_MODE *)'
| |-PointerType 0x55887c165170 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_BOOT_MODE *)'
| | `-ParenType 0x55887c165110 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_BOOT_MODE *)' sugar
| |   `-FunctionProtoType 0x55887c1650d0 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_BOOT_MODE *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     `-PointerType 0x55887c164ff0 'EFI_BOOT_MODE *'
| |       `-TypedefType 0x55887c09ad20 'EFI_BOOT_MODE' sugar
| |         |-Typedef 0x55887c097db8 'EFI_BOOT_MODE'
| |         `-TypedefType 0x55887c04a5d0 'UINT32' sugar
| |           |-Typedef 0x55887c049a70 'UINT32'
| |           `-BuiltinType 0x55887bfe9150 'unsigned int'
| `-FullComment 0x55887c3e0fe0 <line:236:1, line:241:68>
|   |-ParagraphComment 0x55887c3e0cd0 <line:236:1, col:59>
|   | `-TextComment 0x55887c3e0ca0 <col:1, col:59> Text="  This function returns the present value of the boot mode."
|   |-ParagraphComment 0x55887c3e0d20 <line:238:1, col:2>
|   | `-TextComment 0x55887c3e0cf0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e0d40 <col:3, line:239:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e0df0 <line:238:22, line:239:2>
|   |   |-TextComment 0x55887c3e0da0 <line:238:22, col:109> Text="      An indirect pointer to the EFI_PEI_SERVICES table published by the PEI Foundation."
|   |   `-TextComment 0x55887c3e0dc0 <line:239:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e0e10 <col:3, col:75> [in] implicitly Param="BootMode" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e0ea0 <col:19, col:75>
|   |   `-TextComment 0x55887c3e0e70 <col:19, col:75> Text="         A pointer to contain the value of the boot mode."
|   |-ParagraphComment 0x55887c3e0ef0 <line:241:1, col:2>
|   | `-TextComment 0x55887c3e0ec0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e0f10 <col:3, col:68> Name="retval" Arg[0]="EFI_SUCCESS"
|     `-ParagraphComment 0x55887c3e0f90 <col:22, col:68>
|       `-TextComment 0x55887c3e0f60 <col:22, col:68> Text="           The boot mode returned successfully."
|-TypedefDecl 0x55887c1654d8 <line:260:1, line:265:3> line:262:10 referenced EFI_PEI_SET_BOOT_MODE 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_BOOT_MODE)'
| |-PointerType 0x55887c165470 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_BOOT_MODE)'
| | `-ParenType 0x55887c165410 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_BOOT_MODE)' sugar
| |   `-FunctionProtoType 0x55887c1653d0 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_BOOT_MODE)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     `-TypedefType 0x55887c09ad20 'EFI_BOOT_MODE' sugar
| |       |-Typedef 0x55887c097db8 'EFI_BOOT_MODE'
| |       `-TypedefType 0x55887c04a5d0 'UINT32' sugar
| |         |-Typedef 0x55887c049a70 'UINT32'
| |         `-BuiltinType 0x55887bfe9150 'unsigned int'
| `-FullComment 0x55887c3e1390 <line:252:1, line:257:68>
|   |-ParagraphComment 0x55887c3e1080 <line:252:1, col:48>
|   | `-TextComment 0x55887c3e1050 <col:1, col:48> Text="  This function sets the value of the boot mode."
|   |-ParagraphComment 0x55887c3e10d0 <line:254:1, col:2>
|   | `-TextComment 0x55887c3e10a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e10f0 <col:3, line:255:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e11a0 <line:254:22, line:255:2>
|   |   |-TextComment 0x55887c3e1150 <line:254:22, col:108> Text="      An indirect pointer to the EFI_PEI_SERVICES table published by the PEI Foundation"
|   |   `-TextComment 0x55887c3e1170 <line:255:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e11c0 <col:3, col:61> [in] implicitly Param="BootMode" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e1250 <col:19, col:61>
|   |   `-TextComment 0x55887c3e1220 <col:19, col:61> Text="         The value of the boot mode to set."
|   |-ParagraphComment 0x55887c3e12a0 <line:257:1, col:2>
|   | `-TextComment 0x55887c3e1270 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e12c0 <col:3, col:68> Name="retval" Arg[0]="EFI_SUCCESS"
|     `-ParagraphComment 0x55887c3e1340 <col:22, col:68>
|       `-TextComment 0x55887c3e1310 <col:22, col:68> Text="           The boot mode returned successfully."
|-TypedefDecl 0x55887c1657a8 <line:277:1, line:282:3> line:279:10 referenced EFI_PEI_GET_HOB_LIST 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, void **)'
| |-PointerType 0x55887c165740 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, void **)'
| | `-ParenType 0x55887c1656e0 'EFI_STATUS (const EFI_PEI_SERVICES **, void **)' sugar
| |   `-FunctionProtoType 0x55887c1656a0 'EFI_STATUS (const EFI_PEI_SERVICES **, void **)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     `-PointerType 0x55887c164990 'void **'
| |       `-PointerType 0x55887bfe9730 'void *'
| |         `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3e1820 <line:268:1, line:274:66>
|   |-ParagraphComment 0x55887c3e1430 <line:268:1, col:84>
|   | `-TextComment 0x55887c3e1400 <col:1, col:84> Text="  This function returns the pointer to the list of Hand-Off Blocks (HOBs) in memory."
|   |-ParagraphComment 0x55887c3e1480 <line:270:1, col:2>
|   | `-TextComment 0x55887c3e1450 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e14a0 <col:3, line:271:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e1550 <line:270:22, line:271:2>
|   |   |-TextComment 0x55887c3e1500 <line:270:22, col:108> Text="      An indirect pointer to the EFI_PEI_SERVICES table published by the PEI Foundation"
|   |   `-TextComment 0x55887c3e1520 <line:271:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e1570 <col:3, col:96> [in] implicitly Param="HobList" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e1600 <col:18, col:96>
|   |   `-TextComment 0x55887c3e15d0 <col:18, col:96> Text="          A pointer to the list of HOBs that the PEI Foundation will initialize"
|   |-ParagraphComment 0x55887c3e1650 <line:273:1, col:2>
|   | `-TextComment 0x55887c3e1620 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e1670 <col:3, line:274:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3e1710 <line:273:22, line:274:2>
|   |   |-TextComment 0x55887c3e16c0 <line:273:22, col:67> Text="           The list was successfully returned."
|   |   `-TextComment 0x55887c3e16e0 <line:274:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e1730 <col:3, col:66> Name="retval" Arg[0]="EFI_NOT_AVAILABLE_YET"
|     `-ParagraphComment 0x55887c3e17c0 <col:32, col:66>
|       `-TextComment 0x55887c3e1790 <col:32, col:66> Text=" The HOB list is not yet published."
|-TypedefDecl 0x55887c165b98 <line:296:1, line:303:3> line:298:10 referenced EFI_PEI_CREATE_HOB 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, UINT16, UINT16, void **)'
| |-PointerType 0x55887c165b20 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, UINT16, UINT16, void **)'
| | `-ParenType 0x55887c165ac0 'EFI_STATUS (const EFI_PEI_SERVICES **, UINT16, UINT16, void **)' sugar
| |   `-FunctionProtoType 0x55887c165a70 'EFI_STATUS (const EFI_PEI_SERVICES **, UINT16, UINT16, void **)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-TypedefType 0x55887c04a650 'UINT16' sugar
| |     | |-Typedef 0x55887c049bb0 'UINT16'
| |     | `-BuiltinType 0x55887bfe9130 'unsigned short'
| |     |-TypedefType 0x55887c04a650 'UINT16' sugar
| |     | |-Typedef 0x55887c049bb0 'UINT16'
| |     | `-BuiltinType 0x55887bfe9130 'unsigned short'
| |     `-PointerType 0x55887c164990 'void **'
| |       `-PointerType 0x55887bfe9730 'void *'
| |         `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3e1e60 <line:285:1, line:293:78>
|   |-ParagraphComment 0x55887c3e18c0 <line:285:1, col:110>
|   | `-TextComment 0x55887c3e1890 <col:1, col:110> Text="  This service, published by the PEI Foundation, abstracts the creation of a Hand-Off Block's (HOB's) headers."
|   |-ParagraphComment 0x55887c3e1910 <line:287:1, col:2>
|   | `-TextComment 0x55887c3e18e0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e1930 <col:3, line:288:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e19e0 <line:287:22, line:288:2>
|   |   |-TextComment 0x55887c3e1990 <line:287:22, col:109> Text="      An indirect pointer to the EFI_PEI_SERVICES table published by the PEI Foundation."
|   |   `-TextComment 0x55887c3e19b0 <line:288:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e1a00 <col:3, line:289:2> [in] implicitly Param="Type" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e1ab0 <line:288:15, line:289:2>
|   |   |-TextComment 0x55887c3e1a60 <line:288:15, col:59> Text="             The type of HOB to be installed."
|   |   `-TextComment 0x55887c3e1a80 <line:289:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e1ad0 <col:3, line:290:2> [in] implicitly Param="Length" ParamIndex=2
|   | `-ParagraphComment 0x55887c3e1b80 <line:289:17, line:290:2>
|   |   |-TextComment 0x55887c3e1b30 <line:289:17, col:61> Text="           The length of the HOB to be added."
|   |   `-TextComment 0x55887c3e1b50 <line:290:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e1ba0 <col:3, col:85> [in] implicitly Param="Hob" ParamIndex=3
|   | `-ParagraphComment 0x55887c3e1c30 <col:14, col:85>
|   |   `-TextComment 0x55887c3e1c00 <col:14, col:85> Text="              The address of a pointer that will contain the HOB header."
|   |-ParagraphComment 0x55887c3e1c80 <line:292:1, col:2>
|   | `-TextComment 0x55887c3e1c50 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e1ca0 <col:3, line:293:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3e1d40 <line:292:22, line:293:2>
|   |   |-TextComment 0x55887c3e1cf0 <line:292:22, col:65> Text="           The HOB was successfully created."
|   |   `-TextComment 0x55887c3e1d10 <line:293:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e1d60 <col:3, col:78> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|     `-ParagraphComment 0x55887c3e1df0 <col:31, col:78>
|       `-TextComment 0x55887c3e1dc0 <col:31, col:78> Text="  There is no additional space for HOB creation."
|-TypedefDecl 0x55887c165f20 <line:324:1, line:330:3> line:326:10 referenced EFI_PEI_FFS_FIND_NEXT_VOLUME2 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, UINTN, EFI_PEI_FV_HANDLE *)'
| |-PointerType 0x55887c165eb0 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, UINTN, EFI_PEI_FV_HANDLE *)'
| | `-ParenType 0x55887c165e50 'EFI_STATUS (const EFI_PEI_SERVICES **, UINTN, EFI_PEI_FV_HANDLE *)' sugar
| |   `-FunctionProtoType 0x55887c165e10 'EFI_STATUS (const EFI_PEI_SERVICES **, UINTN, EFI_PEI_FV_HANDLE *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     | |-Typedef 0x55887c04a020 'UINTN'
| |     | `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |   |-Typedef 0x55887c049930 'UINT64'
| |     |   `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-PointerType 0x55887c165d30 'EFI_PEI_FV_HANDLE *'
| |       `-TypedefType 0x55887c165d10 'EFI_PEI_FV_HANDLE' sugar
| |         |-Typedef 0x55887c10b300 'EFI_PEI_FV_HANDLE'
| |         `-PointerType 0x55887bfe9730 'void *'
| |           `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3e25a0 <line:306:1, line:321:53>
|   |-ParagraphComment 0x55887c3e1f20 <line:306:1, line:307:69>
|   | |-TextComment 0x55887c3e1ed0 <line:306:1, col:69> Text="  The purpose of the service is to abstract the capability of the PEI"
|   | `-TextComment 0x55887c3e1ef0 <line:307:1, col:69> Text="  Foundation to discover instances of firmware volumes in the system."
|   |-ParagraphComment 0x55887c3e1fe0 <line:309:1, line:312:92>
|   | |-TextComment 0x55887c3e1f40 <line:309:1, col:98> Text="  This service enables PEIMs to discover additional firmware volumes. The PEI Foundation uses this"
|   | |-TextComment 0x55887c3e1f60 <line:310:1, col:98> Text="  service to abstract the locations and formats of various firmware volumes. These volumes include"
|   | |-TextComment 0x55887c3e1f80 <line:311:1, col:87> Text="  the Boot Firmware Volume and any other volumes exposed by EFI_PEI_FV_PPI. The service"
|   | `-TextComment 0x55887c3e1fa0 <line:312:1, col:92> Text="  returns a volume handle of type EFI_PEI_FV_HANDLE, which must be unique within the system."
|   |-ParagraphComment 0x55887c3e2030 <line:314:1, col:2>
|   | `-TextComment 0x55887c3e2000 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e2050 <col:3, line:315:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e2100 <line:314:22, line:315:2>
|   |   |-TextComment 0x55887c3e20b0 <line:314:22, col:109> Text="      An indirect pointer to the EFI_PEI_SERVICES table published by the PEI Foundation."
|   |   `-TextComment 0x55887c3e20d0 <line:315:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e2120 <col:3, line:317:2> [in] implicitly Param="Instance" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e2200 <line:315:19, line:317:2>
|   |   |-TextComment 0x55887c3e2180 <line:315:19, col:72> Text="         This instance of the firmware volume to find."
|   |   |-TextComment 0x55887c3e21a0 <line:316:1, col:73> Text="                           The value 0 is the Boot Firmware Volume (BFV)."
|   |   `-TextComment 0x55887c3e21c0 <line:317:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e2220 <col:3, col:98> [in] implicitly Param="VolumeHandle" ParamIndex=2
|   | `-ParagraphComment 0x55887c3e22b0 <col:23, col:98>
|   |   `-TextComment 0x55887c3e2280 <col:23, col:98> Text="     On exit, points to the next volumn handle or NULL if it does not exist."
|   |-ParagraphComment 0x55887c3e2300 <line:319:1, col:2>
|   | `-TextComment 0x55887c3e22d0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e2320 <col:3, line:320:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3e23c0 <line:319:22, line:320:2>
|   |   |-TextComment 0x55887c3e2370 <line:319:22, col:53> Text="           The volume was found."
|   |   `-TextComment 0x55887c3e2390 <line:320:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e23e0 <col:3, line:321:2> Name="retval" Arg[0]="EFI_NOT_FOUND"
|   | `-ParagraphComment 0x55887c3e2480 <line:320:24, line:321:2>
|   |   |-TextComment 0x55887c3e2430 <line:320:24, col:57> Text="         The volume was not found."
|   |   `-TextComment 0x55887c3e2450 <line:321:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e24a0 <col:3, col:53> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c3e2530 <col:32, col:53>
|       `-TextComment 0x55887c3e2500 <col:32, col:53> Text=" VolumeHandle is NULL."
|-TypedefDecl 0x55887c167378 <line:353:1, line:360:3> line:355:10 referenced EFI_PEI_FFS_FIND_NEXT_FILE2 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_FV_FILETYPE, const EFI_PEI_FV_HANDLE, EFI_PEI_FILE_HANDLE *)'
| |-PointerType 0x55887c167300 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_FV_FILETYPE, const EFI_PEI_FV_HANDLE, EFI_PEI_FILE_HANDLE *)'
| | `-ParenType 0x55887c166260 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_FV_FILETYPE, const EFI_PEI_FV_HANDLE, EFI_PEI_FILE_HANDLE *)' sugar
| |   `-FunctionProtoType 0x55887c166210 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_FV_FILETYPE, const EFI_PEI_FV_HANDLE, EFI_PEI_FILE_HANDLE *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-TypedefType 0x55887c08c1a0 'EFI_FV_FILETYPE' sugar
| |     | |-Typedef 0x55887c08bd40 'EFI_FV_FILETYPE'
| |     | `-TypedefType 0x55887c04a730 'UINT8' sugar
| |     |   |-Typedef 0x55887c049e30 'UINT8'
| |     |   `-BuiltinType 0x55887bfe9110 'unsigned char'
| |     |-QualType 0x55887c165d11 'const EFI_PEI_FV_HANDLE' const
| |     | `-TypedefType 0x55887c165d10 'EFI_PEI_FV_HANDLE' sugar
| |     |   |-Typedef 0x55887c10b300 'EFI_PEI_FV_HANDLE'
| |     |   `-PointerType 0x55887bfe9730 'void *'
| |     |     `-BuiltinType 0x55887bfe9010 'void'
| |     `-PointerType 0x55887c166120 'EFI_PEI_FILE_HANDLE *'
| |       `-TypedefType 0x55887c15fdf0 'EFI_PEI_FILE_HANDLE' sugar
| |         |-Typedef 0x55887c10b3a0 'EFI_PEI_FILE_HANDLE'
| |         `-PointerType 0x55887bfe9730 'void *'
| |           `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3e2dd0 <line:333:1, line:350:60>
|   |-ParagraphComment 0x55887c3e2640 <line:333:1, col:61>
|   | `-TextComment 0x55887c3e2610 <col:1, col:61> Text="  Searches for the next matching file in the firmware volume."
|   |-ParagraphComment 0x55887c3e2700 <line:335:1, line:338:13>
|   | |-TextComment 0x55887c3e2660 <line:335:1, col:82> Text="  This service enables PEIMs to discover firmware files within a specified volume."
|   | |-TextComment 0x55887c3e2680 <line:336:1, col:98> Text="  To find the first instance of a firmware file, pass a FileHandle value of NULL into the service."
|   | |-TextComment 0x55887c3e26a0 <line:337:1, col:92> Text="  The service returns a file handle of type EFI_PEI_FILE_HANDLE, which must be unique within"
|   | `-TextComment 0x55887c3e26c0 <line:338:1, col:13> Text="  the system."
|   |-ParagraphComment 0x55887c3e2750 <line:340:1, col:2>
|   | `-TextComment 0x55887c3e2720 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e2770 <col:3, line:341:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e2820 <line:340:22, line:341:2>
|   |   |-TextComment 0x55887c3e27d0 <line:340:22, col:109> Text="      An indirect pointer to the EFI_PEI_SERVICES table published by the PEI Foundation."
|   |   `-TextComment 0x55887c3e27f0 <line:341:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e2840 <col:3, line:342:2> [in] implicitly Param="SearchType" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e28f0 <line:341:21, line:342:2>
|   |   |-TextComment 0x55887c3e28a0 <line:341:21, col:68> Text="       A filter to find files only of this type."
|   |   `-TextComment 0x55887c3e28c0 <line:342:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e2910 <col:3, line:343:2> [in] implicitly Param="FvHandle" ParamIndex=2
|   | `-ParagraphComment 0x55887c3e29c0 <line:342:19, line:343:2>
|   |   |-TextComment 0x55887c3e2970 <line:342:19, col:72> Text="         Handle of firmware volume in which to search."
|   |   `-TextComment 0x55887c3e2990 <line:343:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e29e0 <col:3, line:346:54> [in] implicitly Param="FileHandle" ParamIndex=3
|   | `-ParagraphComment 0x55887c3e2ae0 <line:343:21, line:346:54>
|   |   |-TextComment 0x55887c3e2a40 <line:343:21, col:95> Text="       On entry, points to the current handle from which to begin searching"
|   |   |-TextComment 0x55887c3e2a60 <line:344:1, col:84> Text="                           or NULL to start at the beginning of the firmware volume."
|   |   |-TextComment 0x55887c3e2a80 <line:345:1, col:97> Text="                           On exit, points the file handle of the next file in the volume or NULL"
|   |   `-TextComment 0x55887c3e2aa0 <line:346:1, col:54> Text="                           if there are no more files."
|   |-ParagraphComment 0x55887c3e2b30 <line:348:1, col:2>
|   | `-TextComment 0x55887c3e2b00 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e2b50 <col:3, line:349:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3e2bf0 <line:348:22, line:349:2>
|   |   |-TextComment 0x55887c3e2ba0 <line:348:22, col:46> Text="      The file was found."
|   |   `-TextComment 0x55887c3e2bc0 <line:349:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e2c10 <col:3, line:350:2> Name="retval" Arg[0]="EFI_NOT_FOUND"
|   | `-ParagraphComment 0x55887c3e2cb0 <line:349:24, line:350:2>
|   |   |-TextComment 0x55887c3e2c60 <line:349:24, col:50> Text="    The file was not found."
|   |   `-TextComment 0x55887c3e2c80 <line:350:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e2cd0 <col:3, col:60> Name="retval" Arg[0]="EFI_NOT_FOUND"
|     `-ParagraphComment 0x55887c3e2d50 <col:24, col:60>
|       `-TextComment 0x55887c3e2d20 <col:24, col:60> Text="    The header checksum was not zero."
|-TypedefDecl 0x55887c1676e8 <line:381:1, line:388:3> line:383:10 referenced EFI_PEI_FFS_FIND_SECTION_DATA2 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_SECTION_TYPE, EFI_PEI_FILE_HANDLE, void **)'
| |-PointerType 0x55887c167670 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_SECTION_TYPE, EFI_PEI_FILE_HANDLE, void **)'
| | `-ParenType 0x55887c167640 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_SECTION_TYPE, EFI_PEI_FILE_HANDLE, void **)' sugar
| |   `-FunctionProtoType 0x55887c1675f0 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_SECTION_TYPE, EFI_PEI_FILE_HANDLE, void **)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-TypedefType 0x55887c090460 'EFI_SECTION_TYPE' sugar
| |     | |-Typedef 0x55887c090160 'EFI_SECTION_TYPE'
| |     | `-TypedefType 0x55887c04a730 'UINT8' sugar
| |     |   |-Typedef 0x55887c049e30 'UINT8'
| |     |   `-BuiltinType 0x55887bfe9110 'unsigned char'
| |     |-TypedefType 0x55887c15fdf0 'EFI_PEI_FILE_HANDLE' sugar
| |     | |-Typedef 0x55887c10b3a0 'EFI_PEI_FILE_HANDLE'
| |     | `-PointerType 0x55887bfe9730 'void *'
| |     |   `-BuiltinType 0x55887bfe9010 'void'
| |     `-PointerType 0x55887c164990 'void **'
| |       `-PointerType 0x55887bfe9730 'void *'
| |         `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3e3530 <line:363:1, line:378:53>
|   |-ParagraphComment 0x55887c3e2e70 <line:363:1, col:67>
|   | `-TextComment 0x55887c3e2e40 <col:1, col:67> Text="  Searches for the next matching section within the specified file."
|   |-ParagraphComment 0x55887c3e2f80 <line:365:1, line:370:38>
|   | |-TextComment 0x55887c3e2e90 <line:365:1, col:101> Text="  This service enables PEI modules to discover the first section of a given type within a valid file."
|   | |-TextComment 0x55887c3e2eb0 <line:366:1, col:98> Text="  This service will search within encapsulation sections (compression and GUIDed) as well. It will"
|   | |-TextComment 0x55887c3e2ed0 <line:367:1, col:95> Text="  search inside of a GUIDed section or a compressed section, but may not, for example, search a"
|   | |-TextComment 0x55887c3e2ef0 <line:368:1, col:41> Text="  GUIDed section inside a GUIDes section."
|   | |-TextComment 0x55887c3e2f10 <line:369:1, col:90> Text="  This service will not search within compression sections or GUIDed sections that require"
|   | `-TextComment 0x55887c3e2f30 <line:370:1, col:38> Text="  extraction if memory is not present."
|   |-ParagraphComment 0x55887c3e2fd0 <line:372:1, col:2>
|   | `-TextComment 0x55887c3e2fa0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e2ff0 <col:3, line:373:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e30c0 <line:372:22, line:373:2>
|   |   |-TextComment 0x55887c3e3050 <line:372:22, col:109> Text="      An indirect pointer to the EFI_PEI_SERVICES table published by the PEI Foundation."
|   |   `-TextComment 0x55887c3e3070 <line:373:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e30e0 <col:3, line:374:2> [in] implicitly Param="SectionType" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e3190 <line:373:22, line:374:2>
|   |   |-TextComment 0x55887c3e3140 <line:373:22, col:65> Text="      The value of the section type to find."
|   |   `-TextComment 0x55887c3e3160 <line:374:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e31b0 <col:3, line:375:2> [in] implicitly Param="FileHandle" ParamIndex=2
|   | `-ParagraphComment 0x55887c3e3260 <line:374:21, line:375:2>
|   |   |-TextComment 0x55887c3e3210 <line:374:21, col:65> Text="       Handle of the firmware file to search."
|   |   `-TextComment 0x55887c3e3230 <line:375:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e3280 <col:3, col:78> [in] implicitly Param="SectionData" ParamIndex=3
|   | `-ParagraphComment 0x55887c3e3310 <col:22, col:78>
|   |   `-TextComment 0x55887c3e32e0 <col:22, col:78> Text="      A pointer to the discovered section, if successful."
|   |-ParagraphComment 0x55887c3e3360 <line:377:1, col:2>
|   | `-TextComment 0x55887c3e3330 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e3380 <col:3, line:378:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3e3420 <line:377:22, line:378:2>
|   |   |-TextComment 0x55887c3e33d0 <line:377:22, col:49> Text="      The section was found."
|   |   `-TextComment 0x55887c3e33f0 <line:378:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e3440 <col:3, col:53> Name="retval" Arg[0]="EFI_NOT_FOUND"
|     `-ParagraphComment 0x55887c3e34c0 <col:24, col:53>
|       `-TextComment 0x55887c3e3490 <col:24, col:53> Text="    The section was not found."
|-TypedefDecl 0x55887c167bf8 <line:411:1, line:420:3> line:413:10 referenced EFI_PEI_FFS_FIND_SECTION_DATA3 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_SECTION_TYPE, UINTN, EFI_PEI_FILE_HANDLE, void **, UINT32 *)'
| |-PointerType 0x55887c167b70 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_SECTION_TYPE, UINTN, EFI_PEI_FILE_HANDLE, void **, UINT32 *)'
| | `-ParenType 0x55887c167b10 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_SECTION_TYPE, UINTN, EFI_PEI_FILE_HANDLE, void **, UINT32 *)' sugar
| |   `-FunctionProtoType 0x55887c167ab0 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_SECTION_TYPE, UINTN, EFI_PEI_FILE_HANDLE, void **, UINT32 *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-TypedefType 0x55887c090460 'EFI_SECTION_TYPE' sugar
| |     | |-Typedef 0x55887c090160 'EFI_SECTION_TYPE'
| |     | `-TypedefType 0x55887c04a730 'UINT8' sugar
| |     |   |-Typedef 0x55887c049e30 'UINT8'
| |     |   `-BuiltinType 0x55887bfe9110 'unsigned char'
| |     |-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     | |-Typedef 0x55887c04a020 'UINTN'
| |     | `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |   |-Typedef 0x55887c049930 'UINT64'
| |     |   `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-TypedefType 0x55887c15fdf0 'EFI_PEI_FILE_HANDLE' sugar
| |     | |-Typedef 0x55887c10b3a0 'EFI_PEI_FILE_HANDLE'
| |     | `-PointerType 0x55887bfe9730 'void *'
| |     |   `-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887c164990 'void **'
| |     | `-PointerType 0x55887bfe9730 'void *'
| |     |   `-BuiltinType 0x55887bfe9010 'void'
| |     `-PointerType 0x55887c12dee0 'UINT32 *'
| |       `-TypedefType 0x55887c04a5d0 'UINT32' sugar
| |         |-Typedef 0x55887c049a70 'UINT32'
| |         `-BuiltinType 0x55887bfe9150 'unsigned int'
| `-FullComment 0x55887c3e3e30 <line:391:1, line:408:53>
|   |-ParagraphComment 0x55887c3e35d0 <line:391:1, col:67>
|   | `-TextComment 0x55887c3e35a0 <col:1, col:67> Text="  Searches for the next matching section within the specified file."
|   |-ParagraphComment 0x55887c3e36e0 <line:393:1, line:398:38>
|   | |-TextComment 0x55887c3e35f0 <line:393:1, col:95> Text="  This service enables PEI modules to discover the section of a given type within a valid file."
|   | |-TextComment 0x55887c3e3610 <line:394:1, col:98> Text="  This service will search within encapsulation sections (compression and GUIDed) as well. It will"
|   | |-TextComment 0x55887c3e3630 <line:395:1, col:95> Text="  search inside of a GUIDed section or a compressed section, but may not, for example, search a"
|   | |-TextComment 0x55887c3e3650 <line:396:1, col:41> Text="  GUIDed section inside a GUIDes section."
|   | |-TextComment 0x55887c3e3670 <line:397:1, col:90> Text="  This service will not search within compression sections or GUIDed sections that require"
|   | `-TextComment 0x55887c3e3690 <line:398:1, col:38> Text="  extraction if memory is not present."
|   |-ParagraphComment 0x55887c3e3730 <line:400:1, col:2>
|   | `-TextComment 0x55887c3e3700 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e3750 <col:3, line:401:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e3800 <line:400:22, line:401:2>
|   |   |-TextComment 0x55887c3e37b0 <line:400:22, col:114> Text="           An indirect pointer to the EFI_PEI_SERVICES table published by the PEI Foundation."
|   |   `-TextComment 0x55887c3e37d0 <line:401:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e3820 <col:3, line:402:2> [in] implicitly Param="SectionType" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e38d0 <line:401:22, line:402:2>
|   |   |-TextComment 0x55887c3e3880 <line:401:22, col:70> Text="           The value of the section type to find."
|   |   `-TextComment 0x55887c3e38a0 <line:402:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e38f0 <col:3, line:403:2> [in] implicitly Param="SectionInstance" ParamIndex=2
|   | `-ParagraphComment 0x55887c3e39a0 <line:402:26, line:403:2>
|   |   |-TextComment 0x55887c3e3950 <line:402:26, col:57> Text="       Section instance to find."
|   |   `-TextComment 0x55887c3e3970 <line:403:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e39c0 <col:3, line:404:2> [in] implicitly Param="FileHandle" ParamIndex=3
|   | `-ParagraphComment 0x55887c3e3a70 <line:403:21, line:404:2>
|   |   |-TextComment 0x55887c3e3a20 <line:403:21, col:70> Text="            Handle of the firmware file to search."
|   |   `-TextComment 0x55887c3e3a40 <line:404:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e3a90 <col:3, line:405:2> [in] implicitly Param="SectionData" ParamIndex=4
|   | `-ParagraphComment 0x55887c3e3b40 <line:404:22, line:405:2>
|   |   |-TextComment 0x55887c3e3af0 <line:404:22, col:83> Text="           A pointer to the discovered section, if successful."
|   |   `-TextComment 0x55887c3e3b10 <line:405:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e3b60 <col:3, col:88> [in] implicitly Param="AuthenticationStatus" ParamIndex=5
|   | `-ParagraphComment 0x55887c3e3c00 <col:31, col:88>
|   |   `-TextComment 0x55887c3e3bd0 <col:31, col:88> Text="  A pointer to the authentication status for this section."
|   |-ParagraphComment 0x55887c3e3c50 <line:407:1, col:2>
|   | `-TextComment 0x55887c3e3c20 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e3c70 <col:3, line:408:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3e3d10 <line:407:22, line:408:2>
|   |   |-TextComment 0x55887c3e3cc0 <line:407:22, col:49> Text="      The section was found."
|   |   `-TextComment 0x55887c3e3ce0 <line:408:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e3d30 <col:3, col:53> Name="retval" Arg[0]="EFI_NOT_FOUND"
|     `-ParagraphComment 0x55887c3e3db0 <col:24, col:53>
|       `-TextComment 0x55887c3e3d80 <col:24, col:53> Text="    The section was not found."
|-TypedefDecl 0x55887c167f40 <line:434:1, line:440:3> line:436:10 referenced EFI_PEI_INSTALL_PEI_MEMORY 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_PHYSICAL_ADDRESS, UINT64)'
| |-PointerType 0x55887c167ed0 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_PHYSICAL_ADDRESS, UINT64)'
| | `-ParenType 0x55887c167e70 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_PHYSICAL_ADDRESS, UINT64)' sugar
| |   `-FunctionProtoType 0x55887c167e30 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_PHYSICAL_ADDRESS, UINT64)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-TypedefType 0x55887c09add0 'EFI_PHYSICAL_ADDRESS' sugar
| |     | |-Typedef 0x55887c06c5c8 'EFI_PHYSICAL_ADDRESS'
| |     | `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |   |-Typedef 0x55887c049930 'UINT64'
| |     |   `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |       |-Typedef 0x55887c049930 'UINT64'
| |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c3e4470 <line:423:1, line:431:78>
|   |-ParagraphComment 0x55887c3e3ed0 <line:423:1, col:81>
|   | `-TextComment 0x55887c3e3ea0 <col:1, col:81> Text="  This function registers the found memory configuration with the PEI Foundation."
|   |-ParagraphComment 0x55887c3e3f20 <line:425:1, col:2>
|   | `-TextComment 0x55887c3e3ef0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e3f40 <col:3, line:426:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e3ff0 <line:425:22, line:426:2>
|   |   |-TextComment 0x55887c3e3fa0 <line:425:22, col:109> Text="      An indirect pointer to the EFI_PEI_SERVICES table published by the PEI Foundation."
|   |   `-TextComment 0x55887c3e3fc0 <line:426:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e4010 <col:3, line:427:2> [in] implicitly Param="MemoryBegin" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e40c0 <line:426:22, line:427:2>
|   |   |-TextComment 0x55887c3e4070 <line:426:22, col:69> Text="      The value of a region of installed memory."
|   |   `-TextComment 0x55887c3e4090 <line:427:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e40e0 <col:3, col:84> [in] implicitly Param="MemoryLength" ParamIndex=2
|   | `-ParagraphComment 0x55887c3e4170 <col:23, col:84>
|   |   `-TextComment 0x55887c3e4140 <col:23, col:84> Text="     The corresponding length of a region of installed memory."
|   |-ParagraphComment 0x55887c3e41c0 <line:429:1, col:2>
|   | `-TextComment 0x55887c3e4190 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e41e0 <col:3, line:430:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3e4280 <line:429:22, line:430:2>
|   |   |-TextComment 0x55887c3e4230 <line:429:22, col:79> Text="           The region was successfully installed in a HOB."
|   |   `-TextComment 0x55887c3e4250 <line:430:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e42a0 <col:3, line:431:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c3e4350 <line:430:32, line:431:2>
|   |   |-TextComment 0x55887c3e4300 <line:430:32, col:89> Text=" MemoryBegin and MemoryLength are illegal for this system."
|   |   `-TextComment 0x55887c3e4320 <line:431:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e4370 <col:3, col:78> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|     `-ParagraphComment 0x55887c3e4400 <col:31, col:78>
|       `-TextComment 0x55887c3e43d0 <col:31, col:78> Text="  There is no additional space for HOB creation."
|-TypedefDecl 0x55887c168388 <line:464:1, line:471:3> line:466:10 referenced EFI_PEI_ALLOCATE_PAGES 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_MEMORY_TYPE, UINTN, EFI_PHYSICAL_ADDRESS *)'
| |-PointerType 0x55887c168310 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_MEMORY_TYPE, UINTN, EFI_PHYSICAL_ADDRESS *)'
| | `-ParenType 0x55887c168280 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_MEMORY_TYPE, UINTN, EFI_PHYSICAL_ADDRESS *)' sugar
| |   `-FunctionProtoType 0x55887c168230 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_MEMORY_TYPE, UINTN, EFI_PHYSICAL_ADDRESS *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-TypedefType 0x55887c09b460 'EFI_MEMORY_TYPE' sugar
| |     | |-Typedef 0x55887c081c38 'EFI_MEMORY_TYPE'
| |     | `-ElaboratedType 0x55887c081be0 'enum EFI_MEMORY_TYPE' sugar
| |     |   `-EnumType 0x55887c080340 'EFI_MEMORY_TYPE'
| |     |     `-Enum 0x55887c080298 ''
| |     |-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     | |-Typedef 0x55887c04a020 'UINTN'
| |     | `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |   |-Typedef 0x55887c049930 'UINT64'
| |     |   `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-PointerType 0x55887c168140 'EFI_PHYSICAL_ADDRESS *'
| |       `-TypedefType 0x55887c09add0 'EFI_PHYSICAL_ADDRESS' sugar
| |         |-Typedef 0x55887c06c5c8 'EFI_PHYSICAL_ADDRESS'
| |         `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |           |-Typedef 0x55887c049930 'UINT64'
| |           `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c3e4ce0 <line:443:1, line:461:97>
|   |-ParagraphComment 0x55887c3e4530 <line:443:1, line:444:73>
|   | |-TextComment 0x55887c3e44e0 <line:443:1, col:67> Text="  The purpose of the service is to publish an interface that allows"
|   | `-TextComment 0x55887c3e4500 <line:444:1, col:73> Text="  PEIMs to allocate memory ranges that are managed by the PEI Foundation."
|   |-ParagraphComment 0x55887c3e45f0 <line:446:1, line:449:75>
|   | |-TextComment 0x55887c3e4550 <line:446:1, col:82> Text="  Prior to InstallPeiMemory() being called, PEI will allocate pages from the heap."
|   | |-TextComment 0x55887c3e4570 <line:447:1, col:79> Text="  After InstallPeiMemory() is called, PEI will allocate pages within the region"
|   | |-TextComment 0x55887c3e4590 <line:448:1, col:76> Text="  of memory provided by InstallPeiMemory() service in a best-effort fashion."
|   | `-TextComment 0x55887c3e45b0 <line:449:1, col:75> Text="  Location-specific allocations are not managed by the PEI foundation code."
|   |-ParagraphComment 0x55887c3e4640 <line:451:1, col:2>
|   | `-TextComment 0x55887c3e4610 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e4660 <col:3, line:452:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e4710 <line:451:22, line:452:2>
|   |   |-TextComment 0x55887c3e46c0 <line:451:22, col:109> Text="      An indirect pointer to the EFI_PEI_SERVICES table published by the PEI Foundation."
|   |   `-TextComment 0x55887c3e46e0 <line:452:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e4730 <col:3, line:453:2> [in] implicitly Param="MemoryType" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e47e0 <line:452:21, line:453:2>
|   |   |-TextComment 0x55887c3e4790 <line:452:21, col:58> Text="       The type of memory to allocate."
|   |   `-TextComment 0x55887c3e47b0 <line:453:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e4800 <col:3, line:454:2> [in] implicitly Param="Pages" ParamIndex=2
|   | `-ParagraphComment 0x55887c3e48b0 <line:453:16, line:454:2>
|   |   |-TextComment 0x55887c3e4860 <line:453:16, col:75> Text="            The number of contiguous 4 KB pages to allocate."
|   |   `-TextComment 0x55887c3e4880 <line:454:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e48d0 <col:3, line:455:64> [in] implicitly Param="Memory" ParamIndex=3
|   | `-ParagraphComment 0x55887c3e4980 <line:454:17, line:455:64>
|   |   |-TextComment 0x55887c3e4930 <line:454:17, col:101> Text="           A pointer to a physical address. On output, the address is set to the base"
|   |   `-TextComment 0x55887c3e4950 <line:455:1, col:64> Text="                           of the page range that was allocated."
|   |-ParagraphComment 0x55887c3e49d0 <line:457:1, col:2>
|   | `-TextComment 0x55887c3e49a0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e49f0 <col:3, line:458:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3e4a90 <line:457:22, line:458:2>
|   |   |-TextComment 0x55887c3e4a40 <line:457:22, col:76> Text="           The memory range was successfully allocated."
|   |   `-TextComment 0x55887c3e4a60 <line:458:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e4ab0 <col:3, line:459:2> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|   | `-ParagraphComment 0x55887c3e4b60 <line:458:31, line:459:2>
|   |   |-TextComment 0x55887c3e4b10 <line:458:31, col:65> Text="  The pages could not be allocated."
|   |   `-TextComment 0x55887c3e4b30 <line:459:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e4b80 <col:3, line:461:97> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c3e4c60 <line:459:32, line:461:97>
|       |-TextComment 0x55887c3e4be0 <line:459:32, col:110> Text=" The type is not equal to EfiLoaderCode, EfiLoaderData, EfiRuntimeServicesCode,"
|       |-TextComment 0x55887c3e4c00 <line:460:1, col:97> Text="                                EfiRuntimeServicesData, EfiBootServicesCode, EfiBootServicesData,"
|       `-TextComment 0x55887c3e4c20 <line:461:1, col:97> Text="                                EfiACPIReclaimMemory, EfiReservedMemoryType, or EfiACPIMemoryNVS."
|-TypedefDecl 0x55887c168660 <line:486:1, line:492:3> line:488:10 referenced EFI_PEI_FREE_PAGES 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_PHYSICAL_ADDRESS, UINTN)'
| |-PointerType 0x55887c1685f0 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_PHYSICAL_ADDRESS, UINTN)'
| | `-ParenType 0x55887c1685c0 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_PHYSICAL_ADDRESS, UINTN)' sugar
| |   `-FunctionProtoType 0x55887c168580 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_PHYSICAL_ADDRESS, UINTN)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-TypedefType 0x55887c09add0 'EFI_PHYSICAL_ADDRESS' sugar
| |     | |-Typedef 0x55887c06c5c8 'EFI_PHYSICAL_ADDRESS'
| |     | `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |   |-Typedef 0x55887c049930 'UINT64'
| |     |   `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |       |-Typedef 0x55887c04a020 'UINTN'
| |       `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |         |-Typedef 0x55887c049930 'UINT64'
| |         `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c3e5340 <line:474:1, line:483:48>
|   |-ParagraphComment 0x55887c3e4d80 <line:474:1, col:21>
|   | `-TextComment 0x55887c3e4d50 <col:1, col:21> Text="  Frees memory pages."
|   |-ParagraphComment 0x55887c3e4dd0 <line:476:1, col:2>
|   | `-TextComment 0x55887c3e4da0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e4df0 <col:3, line:477:2> [in] explicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e4eb0 <line:476:25, line:477:2>
|   |   |-TextComment 0x55887c3e4e60 <line:476:25, col:114> Text="        An indirect pointer to the EFI_PEI_SERVICES table published by the PEI Foundation."
|   |   `-TextComment 0x55887c3e4e80 <line:477:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e4ed0 <col:3, line:478:2> [in] explicitly Param="Memory" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e4f80 <line:477:20, line:478:2>
|   |   |-TextComment 0x55887c3e4f30 <line:477:20, col:83> Text="             The base physical address of the pages to be freed."
|   |   `-TextComment 0x55887c3e4f50 <line:478:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e4fa0 <col:3, col:76> [in] explicitly Param="Pages" ParamIndex=2
|   | `-ParagraphComment 0x55887c3e5030 <col:19, col:76>
|   |   `-TextComment 0x55887c3e5000 <col:19, col:76> Text="              The number of contiguous 4 KB pages to free."
|   |-ParagraphComment 0x55887c3e5080 <line:480:1, col:2>
|   | `-TextComment 0x55887c3e5050 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e50a0 <col:3, line:481:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3e5140 <line:480:22, line:481:2>
|   |   |-TextComment 0x55887c3e50f0 <line:480:22, col:63> Text="           The requested pages were freed."
|   |   `-TextComment 0x55887c3e5110 <line:481:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e5160 <col:3, line:482:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c3e5210 <line:481:32, line:482:2>
|   |   |-TextComment 0x55887c3e51c0 <line:481:32, col:89> Text=" Memory is not a page-aligned address or Pages is invalid."
|   |   `-TextComment 0x55887c3e51e0 <line:482:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e5230 <col:3, line:483:48> Name="retval" Arg[0]="EFI_NOT_FOUND"
|     `-ParagraphComment 0x55887c3e52d0 <line:482:24, line:483:48>
|       |-TextComment 0x55887c3e5280 <line:482:24, col:82> Text="         The requested memory pages were not allocated with"
|       `-TextComment 0x55887c3e52a0 <line:483:1, col:48> Text="                                AllocatePages()."
|-TypedefDecl 0x55887c168940 <line:506:1, line:512:3> line:508:10 referenced EFI_PEI_ALLOCATE_POOL 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, UINTN, void **)'
| |-PointerType 0x55887c1688d0 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, UINTN, void **)'
| | `-ParenType 0x55887c1688a0 'EFI_STATUS (const EFI_PEI_SERVICES **, UINTN, void **)' sugar
| |   `-FunctionProtoType 0x55887c168860 'EFI_STATUS (const EFI_PEI_SERVICES **, UINTN, void **)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     | |-Typedef 0x55887c04a020 'UINTN'
| |     | `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |   |-Typedef 0x55887c049930 'UINT64'
| |     |   `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-PointerType 0x55887c164990 'void **'
| |       `-PointerType 0x55887bfe9730 'void *'
| |         `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3e58c0 <line:495:1, line:503:88>
|   |-ParagraphComment 0x55887c3e5400 <line:495:1, line:496:80>
|   | |-TextComment 0x55887c3e53b0 <line:495:1, col:61> Text="  The purpose of this service is to publish an interface that"
|   | `-TextComment 0x55887c3e53d0 <line:496:1, col:80> Text="  allows PEIMs to allocate memory ranges that are managed by the PEI Foundation."
|   |-ParagraphComment 0x55887c3e5450 <line:498:1, col:2>
|   | `-TextComment 0x55887c3e5420 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e5470 <col:3, line:499:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e5520 <line:498:22, line:499:2>
|   |   |-TextComment 0x55887c3e54d0 <line:498:22, col:109> Text="      An indirect pointer to the EFI_PEI_SERVICES table published by the PEI Foundation."
|   |   `-TextComment 0x55887c3e54f0 <line:499:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e5540 <col:3, line:500:2> [in] implicitly Param="Size" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e55f0 <line:499:15, line:500:2>
|   |   |-TextComment 0x55887c3e55a0 <line:499:15, col:73> Text="             The number of bytes to allocate from the pool."
|   |   `-TextComment 0x55887c3e55c0 <line:500:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e5610 <col:3, col:117> [in] implicitly Param="Buffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c3e56a0 <col:17, col:117>
|   |   `-TextComment 0x55887c3e5670 <col:17, col:117> Text="           If the call succeeds, a pointer to a pointer to the allocated buffer; undefined otherwise."
|   |-ParagraphComment 0x55887c3e56f0 <line:502:1, col:2>
|   | `-TextComment 0x55887c3e56c0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e5710 <col:3, line:503:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3e57b0 <line:502:22, line:503:2>
|   |   |-TextComment 0x55887c3e5760 <line:502:22, col:62> Text="           The allocation was successful."
|   |   `-TextComment 0x55887c3e5780 <line:503:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e57d0 <col:3, col:88> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|     `-ParagraphComment 0x55887c3e5860 <col:31, col:88>
|       `-TextComment 0x55887c3e5830 <col:31, col:88> Text="  There is not enough heap to allocate the requested size."
|-TypedefDecl 0x55887c168c90 <line:522:1, line:528:3> line:524:10 referenced EFI_PEI_COPY_MEM 'void (*)(void *, void *, UINTN)'
| |-PointerType 0x55887c168c20 'void (*)(void *, void *, UINTN)'
| | `-ParenType 0x55887c168bc0 'void (void *, void *, UINTN)' sugar
| |   `-FunctionProtoType 0x55887c168b80 'void (void *, void *, UINTN)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887bfe9730 'void *'
| |     | `-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887bfe9730 'void *'
| |     | `-BuiltinType 0x55887bfe9010 'void'
| |     `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |       |-Typedef 0x55887c04a020 'UINTN'
| |       `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |         |-Typedef 0x55887c049930 'UINT64'
| |         `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c3e5c50 <line:515:1, line:519:82>
|   |-ParagraphComment 0x55887c3e5960 <line:515:1, col:67>
|   | `-TextComment 0x55887c3e5930 <col:1, col:67> Text="  This service copies the contents of one buffer to another buffer."
|   |-ParagraphComment 0x55887c3e59b0 <line:517:1, col:2>
|   | `-TextComment 0x55887c3e5980 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e59d0 <col:3, line:518:2> [in] implicitly Param="Destination" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e5a80 <line:517:22, line:518:2>
|   |   |-TextComment 0x55887c3e5a30 <line:517:22, col:84> Text="      The pointer to the destination buffer of the memory copy."
|   |   `-TextComment 0x55887c3e5a50 <line:518:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e5aa0 <col:3, line:519:2> [in] implicitly Param="Source" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e5b50 <line:518:17, line:519:2>
|   |   |-TextComment 0x55887c3e5b00 <line:518:17, col:79> Text="           The pointer to the source buffer of the memory copy."
|   |   `-TextComment 0x55887c3e5b20 <line:519:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3e5b70 <col:3, col:82> [in] implicitly Param="Length" ParamIndex=2
|     `-ParagraphComment 0x55887c3e5c00 <col:17, col:82>
|       `-TextComment 0x55887c3e5bd0 <col:17, col:82> Text="           The number of bytes to copy from Source to Destination."
|-TypedefDecl 0x55887c168fe0 <line:538:1, line:544:3> line:540:10 referenced EFI_PEI_SET_MEM 'void (*)(void *, UINTN, UINT8)'
| |-PointerType 0x55887c168f70 'void (*)(void *, UINTN, UINT8)'
| | `-ParenType 0x55887c168f10 'void (void *, UINTN, UINT8)' sugar
| |   `-FunctionProtoType 0x55887c168ed0 'void (void *, UINTN, UINT8)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887bfe9730 'void *'
| |     | `-BuiltinType 0x55887bfe9010 'void'
| |     |-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     | |-Typedef 0x55887c04a020 'UINTN'
| |     | `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |   |-Typedef 0x55887c049930 'UINT64'
| |     |   `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-TypedefType 0x55887c04a730 'UINT8' sugar
| |       |-Typedef 0x55887c049e30 'UINT8'
| |       `-BuiltinType 0x55887bfe9110 'unsigned char'
| `-FullComment 0x55887c3e5fe0 <line:531:1, line:535:57>
|   |-ParagraphComment 0x55887c3e5cf0 <line:531:1, col:52>
|   | `-TextComment 0x55887c3e5cc0 <col:1, col:52> Text="  The service fills a buffer with a specified value."
|   |-ParagraphComment 0x55887c3e5d40 <line:533:1, col:2>
|   | `-TextComment 0x55887c3e5d10 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e5d60 <col:3, line:534:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e5e10 <line:533:17, line:534:2>
|   |   |-TextComment 0x55887c3e5dc0 <line:533:17, col:61> Text="           The pointer to the buffer to fill."
|   |   `-TextComment 0x55887c3e5de0 <line:534:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e5e30 <col:3, line:535:2> [in] implicitly Param="Size" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e5ee0 <line:534:15, line:535:2>
|   |   |-TextComment 0x55887c3e5e90 <line:534:15, col:65> Text="             The number of bytes in Buffer to fill."
|   |   `-TextComment 0x55887c3e5eb0 <line:535:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3e5f00 <col:3, col:57> [in] implicitly Param="Value" ParamIndex=2
|     `-ParagraphComment 0x55887c3e5f90 <col:16, col:57>
|       `-TextComment 0x55887c3e5f60 <col:16, col:57> Text="            The value to fill Buffer with."
|-TypedefDecl 0x55887c1695f8 <line:575:1, line:584:3> line:577:10 referenced EFI_PEI_REPORT_STATUS_CODE 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE, UINT32, const EFI_GUID *, const EFI_STATUS_CODE_DATA *)'
| |-PointerType 0x55887c169570 'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE, UINT32, const EFI_GUID *, const EFI_STATUS_CODE_DATA *)'
| | `-ParenType 0x55887c169510 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE, UINT32, const EFI_GUID *, const EFI_STATUS_CODE_DATA *)' sugar
| |   `-FunctionProtoType 0x55887c1694b0 'EFI_STATUS (const EFI_PEI_SERVICES **, EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE, UINT32, const EFI_GUID *, const EFI_STATUS_CODE_DATA *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |     |   `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |     |     `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |       |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |       `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |         `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |           `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     |-TypedefType 0x55887c1690f0 'EFI_STATUS_CODE_TYPE' sugar
| |     | |-Typedef 0x55887c0dd738 'EFI_STATUS_CODE_TYPE'
| |     | `-TypedefType 0x55887c04a5d0 'UINT32' sugar
| |     |   |-Typedef 0x55887c049a70 'UINT32'
| |     |   `-BuiltinType 0x55887bfe9150 'unsigned int'
| |     |-TypedefType 0x55887c169190 'EFI_STATUS_CODE_VALUE' sugar
| |     | |-Typedef 0x55887c0e1918 'EFI_STATUS_CODE_VALUE'
| |     | `-TypedefType 0x55887c04a5d0 'UINT32' sugar
| |     |   |-Typedef 0x55887c049a70 'UINT32'
| |     |   `-BuiltinType 0x55887bfe9150 'unsigned int'
| |     |-TypedefType 0x55887c04a5d0 'UINT32' sugar
| |     | |-Typedef 0x55887c049a70 'UINT32'
| |     | `-BuiltinType 0x55887bfe9150 'unsigned int'
| |     |-PointerType 0x55887c164730 'const EFI_GUID *'
| |     | `-QualType 0x55887c0705c1 'const EFI_GUID' const
| |     |   `-TypedefType 0x55887c0705c0 'EFI_GUID' sugar
| |     |     |-Typedef 0x55887c06c210 'EFI_GUID'
| |     |     `-TypedefType 0x55887c06c1e0 'GUID' sugar
| |     |       |-Typedef 0x55887c051a78 'GUID'
| |     |       `-ElaboratedType 0x55887c051a20 'struct GUID' sugar
| |     |         `-RecordType 0x55887c04a5b0 'GUID'
| |     |           `-Record 0x55887c04a528 ''
| |     `-PointerType 0x55887c1693b0 'const EFI_STATUS_CODE_DATA *'
| |       `-QualType 0x55887c169361 'const EFI_STATUS_CODE_DATA' const
| |         `-TypedefType 0x55887c169360 'EFI_STATUS_CODE_DATA' sugar
| |           |-Typedef 0x55887c0e1ca8 'EFI_STATUS_CODE_DATA'
| |           `-ElaboratedType 0x55887c0e1c50 'struct EFI_STATUS_CODE_DATA' sugar
| |             `-RecordType 0x55887c0e1a80 'EFI_STATUS_CODE_DATA'
| |               `-Record 0x55887c0e19f8 ''
| `-FullComment 0x55887c3e6a20 <line:547:1, line:572:99>
|   |-ParagraphComment 0x55887c3e6080 <line:547:1, col:79>
|   | `-TextComment 0x55887c3e6050 <col:1, col:79> Text="  This service publishes an interface that allows PEIMs to report status codes."
|   |-ParagraphComment 0x55887c3e6140 <line:549:1, line:552:50>
|   | |-TextComment 0x55887c3e60a0 <line:549:1, col:87> Text="  ReportStatusCode() is called by PEIMs that wish to report status information on their"
|   | |-TextComment 0x55887c3e60c0 <line:550:1, col:102> Text="  progress. The principal use model is for a PEIM to emit one of the standard 32-bit error codes. This"
|   | |-TextComment 0x55887c3e60e0 <line:551:1, col:101> Text="  will allow a platform owner to ascertain the state of the system, especially under conditions where"
|   | `-TextComment 0x55887c3e6100 <line:552:1, col:50> Text="  the full consoles might not have been installed."
|   |-ParagraphComment 0x55887c3e6190 <line:554:1, col:2>
|   | `-TextComment 0x55887c3e6160 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e61b0 <col:3, line:555:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e6260 <line:554:22, line:555:2>
|   |   |-TextComment 0x55887c3e6210 <line:554:22, col:109> Text="      An indirect pointer to the EFI_PEI_SERVICES table published by the PEI Foundation."
|   |   `-TextComment 0x55887c3e6230 <line:555:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e6280 <col:3, line:556:2> [in] implicitly Param="Type" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e6330 <line:555:15, line:556:2>
|   |   |-TextComment 0x55887c3e62e0 <line:555:15, col:76> Text="             Indicates the type of status code being reported."
|   |   `-TextComment 0x55887c3e6300 <line:556:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e6350 <col:3, line:561:2> [in] implicitly Param="Value" ParamIndex=2
|   | `-ParagraphComment 0x55887c3e64a0 <line:556:16, line:561:2>
|   |   |-TextComment 0x55887c3e63b0 <line:556:16, col:72> Text="            Describes the current status of a hardware or"
|   |   |-TextComment 0x55887c3e63d0 <line:557:1, col:89> Text="                           software entity. This includes information about the class and"
|   |   |-TextComment 0x55887c3e63f0 <line:558:1, col:96> Text="                           subclass that is used to classify the entity as well as an operation."
|   |   |-TextComment 0x55887c3e6410 <line:559:1, col:85> Text="                           For progress codes, the operation is the current activity."
|   |   |-TextComment 0x55887c3e6430 <line:560:1, col:111> Text="                           For error codes, it is the exception.For debug codes,it is not defined at this time."
|   |   `-TextComment 0x55887c3e6450 <line:561:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e64c0 <col:3, line:566:2> [in] implicitly Param="Instance" ParamIndex=3
|   | `-ParagraphComment 0x55887c3e6610 <line:561:19, line:566:2>
|   |   |-TextComment 0x55887c3e6520 <line:561:19, col:82> Text="         The enumeration of a hardware or software entity within"
|   |   |-TextComment 0x55887c3e6540 <line:562:1, col:105> Text="                           the system. A system may contain multiple entities that match a class/subclass"
|   |   |-TextComment 0x55887c3e6560 <line:563:1, col:104> Text="                           pairing. The instance differentiates between them. An instance of 0 indicates"
|   |   |-TextComment 0x55887c3e6580 <line:564:1, col:101> Text="                           that instance information is unavailable, not meaningful, or not relevant."
|   |   |-TextComment 0x55887c3e65a0 <line:565:1, col:63> Text="                           Valid instance numbers start with 1."
|   |   `-TextComment 0x55887c3e65c0 <line:566:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e6630 <col:3, line:569:2> [in] implicitly Param="CallerId" ParamIndex=4
|   | `-ParagraphComment 0x55887c3e6730 <line:566:19, line:569:2>
|   |   |-TextComment 0x55887c3e6690 <line:566:19, col:86> Text="         This optional parameter may be used to identify the caller."
|   |   |-TextComment 0x55887c3e66b0 <line:567:1, col:99> Text="                           This parameter allows the status code driver to apply different rules to"
|   |   |-TextComment 0x55887c3e66d0 <line:568:1, col:45> Text="                           different callers."
|   |   `-TextComment 0x55887c3e66f0 <line:569:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e6750 <col:3, col:87> [in] implicitly Param="Data" ParamIndex=5
|   | `-ParagraphComment 0x55887c3e67e0 <col:15, col:87>
|   |   `-TextComment 0x55887c3e67b0 <col:15, col:87> Text="             This optional parameter may be used to pass additional data."
|   |-ParagraphComment 0x55887c3e6830 <line:571:1, col:2>
|   | `-TextComment 0x55887c3e6800 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e6850 <col:3, line:572:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3e68f0 <line:571:22, line:572:2>
|   |   |-TextComment 0x55887c3e68a0 <line:571:22, col:68> Text="           The function completed successfully."
|   |   `-TextComment 0x55887c3e68c0 <line:572:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e6910 <col:3, col:99> Name="retval" Arg[0]="EFI_NOT_AVAILABLE_YET"
|     `-ParagraphComment 0x55887c3e69a0 <col:32, col:99>
|       `-TextComment 0x55887c3e6970 <col:32, col:99> Text=" No progress code provider has installed an interface in the system."
|-TypedefDecl 0x55887c169820 <line:599:1, line:603:3> line:601:10 referenced EFI_PEI_RESET_SYSTEM 'EFI_STATUS (*)(const EFI_PEI_SERVICES **)'
| |-PointerType 0x55887c1697c0 'EFI_STATUS (*)(const EFI_PEI_SERVICES **)'
| | `-ParenType 0x55887c169760 'EFI_STATUS (const EFI_PEI_SERVICES **)' sugar
| |   `-FunctionProtoType 0x55887c169730 'EFI_STATUS (const EFI_PEI_SERVICES **)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-PointerType 0x55887c111060 'const EFI_PEI_SERVICES **'
| |       `-PointerType 0x55887c111000 'const EFI_PEI_SERVICES *'
| |         `-QualType 0x55887c10bea1 'const EFI_PEI_SERVICES' const
| |           `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |             |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |             `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |               `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |                 `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| `-FullComment 0x55887c3e6dd0 <line:587:1, line:596:71>
|   |-ParagraphComment 0x55887c3e6ac0 <line:587:1, col:29>
|   | `-TextComment 0x55887c3e6a90 <col:1, col:29> Text="  Resets the entire platform."
|   |-ParagraphComment 0x55887c3e6b60 <line:589:1, line:591:45>
|   | |-TextComment 0x55887c3e6ae0 <line:589:1, col:67> Text="  This service resets the entire platform, including all processors"
|   | |-TextComment 0x55887c3e6b00 <line:590:1, col:38> Text="  and devices, and reboots the system."
|   | `-TextComment 0x55887c3e6b20 <line:591:1, col:45> Text="  This service will never return EFI_SUCCESS."
|   |-ParagraphComment 0x55887c3e6bb0 <line:593:1, col:2>
|   | `-TextComment 0x55887c3e6b80 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e6bd0 <col:3, line:594:65> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e6c80 <line:593:22, line:594:65>
|   |   |-TextComment 0x55887c3e6c30 <line:593:22, col:70> Text="      An indirect pointer to the EFI_PEI_SERVICES"
|   |   `-TextComment 0x55887c3e6c50 <line:594:1, col:65> Text="                           table published by the PEI Foundation."
|   |-ParagraphComment 0x55887c3e6cd0 <line:596:1, col:2>
|   | `-TextComment 0x55887c3e6ca0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e6cf0 <col:3, col:71> Name="retval" Arg[0]="EFI_NOT_AVAILABLE_YET"
|     `-ParagraphComment 0x55887c3e6d80 <col:32, col:71>
|       `-TextComment 0x55887c3e6d50 <col:32, col:71> Text=" The service has not been installed yet."
|-TypedefDecl 0x55887c169c38 <line:618:1, line:625:3> line:620:10 referenced EFI_PEI_RESET2_SYSTEM 'void (*)(EFI_RESET_TYPE, EFI_STATUS, UINTN, void *)'
| |-PointerType 0x55887c169bc0 'void (*)(EFI_RESET_TYPE, EFI_STATUS, UINTN, void *)'
| | `-ParenType 0x55887c169b60 'void (EFI_RESET_TYPE, EFI_STATUS, UINTN, void *)' sugar
| |   `-FunctionProtoType 0x55887c169b10 'void (EFI_RESET_TYPE, EFI_STATUS, UINTN, void *)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     |-TypedefType 0x55887c1698b0 'EFI_RESET_TYPE' sugar
| |     | |-Typedef 0x55887c081fe8 'EFI_RESET_TYPE'
| |     | `-ElaboratedType 0x55887c081f90 'enum EFI_RESET_TYPE' sugar
| |     |   `-EnumType 0x55887c081da0 'EFI_RESET_TYPE'
| |     |     `-Enum 0x55887c081cf8 ''
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     | |-Typedef 0x55887c04a020 'UINTN'
| |     | `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |   |-Typedef 0x55887c049930 'UINT64'
| |     |   `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-PointerType 0x55887bfe9730 'void *'
| |       `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3e72f0 <line:606:1, line:615:41>
|   |-ParagraphComment 0x55887c3e6e70 <line:606:1, col:29>
|   | `-TextComment 0x55887c3e6e40 <col:1, col:29> Text="  Resets the entire platform."
|   |-ParagraphComment 0x55887c3e6ec0 <line:608:1, col:2>
|   | `-TextComment 0x55887c3e6e90 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e6ee0 <col:3, line:609:2> [in] explicitly Param="ResetType" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e6f90 <line:608:23, line:609:2>
|   |   |-TextComment 0x55887c3e6f40 <line:608:23, col:57> Text="      The type of reset to perform."
|   |   `-TextComment 0x55887c3e6f60 <line:609:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e6fb0 <col:3, line:610:2> [in] explicitly Param="ResetStatus" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e7070 <line:609:25, line:610:2>
|   |   |-TextComment 0x55887c3e7020 <line:609:25, col:58> Text="    The status code for the reset."
|   |   `-TextComment 0x55887c3e7040 <line:610:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e7090 <col:3, line:611:2> [in] explicitly Param="DataSize" ParamIndex=2
|   | `-ParagraphComment 0x55887c3e7150 <line:610:22, line:611:2>
|   |   |-TextComment 0x55887c3e7100 <line:610:22, col:61> Text="       The size, in bytes, of ResetData."
|   |   `-TextComment 0x55887c3e7120 <line:611:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3e7170 <col:3, line:615:41> [in] explicitly Param="ResetData" ParamIndex=3
|     `-ParagraphComment 0x55887c3e72a0 <line:611:23, line:615:41>
|       |-TextComment 0x55887c3e71d0 <line:611:23, col:94> Text="      For a ResetType of EfiResetCold, EfiResetWarm, or EfiResetShutdown"
|       |-TextComment 0x55887c3e71f0 <line:612:1, col:92> Text="                            the data buffer starts with a Null-terminated string, optionally"
|       |-TextComment 0x55887c3e7210 <line:613:1, col:91> Text="                            followed by additional binary data. The string is a description"
|       |-TextComment 0x55887c3e7230 <line:614:1, col:90> Text="                            that the caller may use to further indicate the reason for the"
|       `-TextComment 0x55887c3e7250 <line:615:1, col:41> Text="                            system reset."
|-TypedefDecl 0x55887c169f70 <line:647:1, line:653:3> line:649:10 referenced EFI_PEI_FFS_FIND_BY_NAME 'EFI_STATUS (*)(const EFI_GUID *, EFI_PEI_FV_HANDLE, EFI_PEI_FILE_HANDLE *)'
| |-PointerType 0x55887c169f00 'EFI_STATUS (*)(const EFI_GUID *, EFI_PEI_FV_HANDLE, EFI_PEI_FILE_HANDLE *)'
| | `-ParenType 0x55887c169ea0 'EFI_STATUS (const EFI_GUID *, EFI_PEI_FV_HANDLE, EFI_PEI_FILE_HANDLE *)' sugar
| |   `-FunctionProtoType 0x55887c169e60 'EFI_STATUS (const EFI_GUID *, EFI_PEI_FV_HANDLE, EFI_PEI_FILE_HANDLE *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c164730 'const EFI_GUID *'
| |     | `-QualType 0x55887c0705c1 'const EFI_GUID' const
| |     |   `-TypedefType 0x55887c0705c0 'EFI_GUID' sugar
| |     |     |-Typedef 0x55887c06c210 'EFI_GUID'
| |     |     `-TypedefType 0x55887c06c1e0 'GUID' sugar
| |     |       |-Typedef 0x55887c051a78 'GUID'
| |     |       `-ElaboratedType 0x55887c051a20 'struct GUID' sugar
| |     |         `-RecordType 0x55887c04a5b0 'GUID'
| |     |           `-Record 0x55887c04a528 ''
| |     |-TypedefType 0x55887c165d10 'EFI_PEI_FV_HANDLE' sugar
| |     | |-Typedef 0x55887c10b300 'EFI_PEI_FV_HANDLE'
| |     | `-PointerType 0x55887bfe9730 'void *'
| |     |   `-BuiltinType 0x55887bfe9010 'void'
| |     `-PointerType 0x55887c166120 'EFI_PEI_FILE_HANDLE *'
| |       `-TypedefType 0x55887c15fdf0 'EFI_PEI_FILE_HANDLE' sugar
| |         |-Typedef 0x55887c10b3a0 'EFI_PEI_FILE_HANDLE'
| |         `-PointerType 0x55887bfe9730 'void *'
| |           `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3e7a50 <line:628:1, line:644:52>
|   |-ParagraphComment 0x55887c3e7390 <line:628:1, col:42>
|   | `-TextComment 0x55887c3e7360 <col:1, col:42> Text="  Find a file within a volume by its name."
|   |-ParagraphComment 0x55887c3e7450 <line:630:1, line:633:41>
|   | |-TextComment 0x55887c3e73b0 <line:630:1, col:62> Text="  This service searches for files with a specific name, within"
|   | |-TextComment 0x55887c3e73d0 <line:631:1, col:63> Text="  either the specified firmware volume or all firmware volumes."
|   | |-TextComment 0x55887c3e73f0 <line:632:1, col:64> Text="  The service returns a file handle of type EFI_PEI_FILE_HANDLE,"
|   | `-TextComment 0x55887c3e7410 <line:633:1, col:41> Text="  which must be unique within the system."
|   |-ParagraphComment 0x55887c3e74a0 <line:635:1, col:2>
|   | `-TextComment 0x55887c3e7470 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e74c0 <col:3, line:637:2> [in] implicitly Param="FileName" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e75a0 <line:635:18, line:637:2>
|   |   |-TextComment 0x55887c3e7520 <line:635:18, col:60> Text="       A pointer to the name of the file to"
|   |   |-TextComment 0x55887c3e7540 <line:636:1, col:56> Text="                        find within the firmware volume."
|   |   `-TextComment 0x55887c3e7560 <line:637:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e75c0 <col:3, line:638:2> [in] implicitly Param="VolumeHandle" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e7670 <line:637:22, line:638:2>
|   |   |-TextComment 0x55887c3e7620 <line:637:22, col:54> Text="   The firmware volume to search."
|   |   `-TextComment 0x55887c3e7640 <line:638:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e7690 <col:3, line:639:64> [in] implicitly Param="FileHandle" ParamIndex=2
|   | `-ParagraphComment 0x55887c3e7740 <line:638:20, line:639:64>
|   |   |-TextComment 0x55887c3e76f0 <line:638:20, col:61> Text="     Upon exit, points to the found file's"
|   |   `-TextComment 0x55887c3e7710 <line:639:1, col:64> Text="                        handle or NULL if it could not be found."
|   |-ParagraphComment 0x55887c3e7790 <line:641:1, col:2>
|   | `-TextComment 0x55887c3e7760 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e77b0 <col:3, line:642:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3e7850 <line:641:22, line:642:2>
|   |   |-TextComment 0x55887c3e7800 <line:641:22, col:53> Text="             The file was found."
|   |   `-TextComment 0x55887c3e7820 <line:642:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e7870 <col:3, line:643:2> Name="retval" Arg[0]="EFI_NOT_FOUND"
|   | `-ParagraphComment 0x55887c3e7910 <line:642:24, line:643:2>
|   |   |-TextComment 0x55887c3e78c0 <line:642:24, col:57> Text="           The file was not found."
|   |   `-TextComment 0x55887c3e78e0 <line:643:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e7930 <col:3, line:644:52> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c3e79e0 <line:643:32, line:644:52>
|       |-TextComment 0x55887c3e7990 <line:643:32, col:63> Text="   VolumeHandle or FileHandle or"
|       `-TextComment 0x55887c3e79b0 <line:644:1, col:52> Text="                                  FileName was NULL."
|-RecordDecl 0x55887c169ff8 <line:658:9, line:681:1> line:658:9 struct definition
| |-FullComment 0x55887c3e7b20 <line:656:4, col:35>
| | `-ParagraphComment 0x55887c3e7af0 <col:4, col:35>
| |   `-TextComment 0x55887c3e7ac0 <col:4, col:35> Text=" The information of the FV file."
| |-FieldDecl 0x55887c16a0d8 <line:662:3, col:29> col:29 referenced FileName 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c3e7bf0 <line:660:6, col:23>
| |   `-ParagraphComment 0x55887c3e7bc0 <col:6, col:23>
| |     `-TextComment 0x55887c3e7b90 <col:6, col:23> Text=" Name of the file."
| |-FieldDecl 0x55887c16a168 <line:666:3, col:29> col:29 FileType 'EFI_FV_FILETYPE':'unsigned char'
| | `-FullComment 0x55887c3e7cc0 <line:664:6, col:16>
| |   `-ParagraphComment 0x55887c3e7c90 <col:6, col:16>
| |     `-TextComment 0x55887c3e7c60 <col:6, col:16> Text=" File type."
| |-FieldDecl 0x55887c16a220 <line:670:3, col:29> col:29 FileAttributes 'EFI_FV_FILE_ATTRIBUTES':'unsigned int'
| | `-FullComment 0x55887c3e7d90 <line:668:6, col:29>
| |   `-ParagraphComment 0x55887c3e7d60 <col:6, col:29>
| |     `-TextComment 0x55887c3e7d30 <col:6, col:29> Text=" Attributes of the file."
| |-FieldDecl 0x55887c16a300 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiPeiCis.h:676:30> col:30 Buffer 'void *'
| | `-FullComment 0x55887c3e7eb0 <line:672:6, line:674:14>
| |   `-ParagraphComment 0x55887c3e7e80 <line:672:6, line:674:14>
| |     |-TextComment 0x55887c3e7e00 <line:672:6, col:49> Text=" Points to the file's data (not the header)."
| |     |-TextComment 0x55887c3e7e20 <line:673:6, col:51> Text=" Not valid if EFI_FV_FILE_ATTRIB_MEMORY_MAPPED"
| |     `-TextComment 0x55887c3e7e40 <line:674:6, col:14> Text=" is zero."
| `-FieldDecl 0x55887c16a388 <line:680:3, col:29> col:29 BufferSize 'UINT32':'unsigned int'
|   `-FullComment 0x55887c3e7f80 <line:678:6, col:30>
|     `-ParagraphComment 0x55887c3e7f50 <col:6, col:30>
|       `-TextComment 0x55887c3e7f20 <col:6, col:30> Text=" Size of the file's data."
|-TypedefDecl 0x55887c16a438 <line:658:1, line:681:3> col:3 referenced EFI_FV_FILE_INFO 'struct EFI_FV_FILE_INFO':'EFI_FV_FILE_INFO'
| |-ElaboratedType 0x55887c16a3e0 'struct EFI_FV_FILE_INFO' sugar
| | `-RecordType 0x55887c16a080 'EFI_FV_FILE_INFO'
| |   `-Record 0x55887c169ff8 ''
| `-FullComment 0x55887c3e8050 <line:656:4, col:35>
|   `-ParagraphComment 0x55887c3e8020 <col:4, col:35>
|     `-TextComment 0x55887c3e7ff0 <col:4, col:35> Text=" The information of the FV file."
|-RecordDecl 0x55887c16a4d0 <line:686:9, line:713:1> line:686:9 struct definition
| |-FullComment 0x55887c3e8120 <line:684:4, col:62>
| | `-ParagraphComment 0x55887c3e80f0 <col:4, col:62>
| |   `-TextComment 0x55887c3e80c0 <col:4, col:62> Text=" The information with authentication status of the FV file."
| |-FieldDecl 0x55887c16a5a8 <line:690:3, col:29> col:29 FileName 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c3e81f0 <line:688:6, col:23>
| |   `-ParagraphComment 0x55887c3e81c0 <col:6, col:23>
| |     `-TextComment 0x55887c3e8190 <col:6, col:23> Text=" Name of the file."
| |-FieldDecl 0x55887c16a638 <line:694:3, col:29> col:29 FileType 'EFI_FV_FILETYPE':'unsigned char'
| | `-FullComment 0x55887c3e82c0 <line:692:6, col:16>
| |   `-ParagraphComment 0x55887c3e8290 <col:6, col:16>
| |     `-TextComment 0x55887c3e8260 <col:6, col:16> Text=" File type."
| |-FieldDecl 0x55887c16a6c8 <line:698:3, col:29> col:29 FileAttributes 'EFI_FV_FILE_ATTRIBUTES':'unsigned int'
| | `-FullComment 0x55887c3e8390 <line:696:6, col:29>
| |   `-ParagraphComment 0x55887c3e8360 <col:6, col:29>
| |     `-TextComment 0x55887c3e8330 <col:6, col:29> Text=" Attributes of the file."
| |-FieldDecl 0x55887c16a760 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiPeiCis.h:704:30> col:30 Buffer 'void *'
| | `-FullComment 0x55887c3e84b0 <line:700:6, line:702:14>
| |   `-ParagraphComment 0x55887c3e8480 <line:700:6, line:702:14>
| |     |-TextComment 0x55887c3e8400 <line:700:6, col:49> Text=" Points to the file's data (not the header)."
| |     |-TextComment 0x55887c3e8420 <line:701:6, col:51> Text=" Not valid if EFI_FV_FILE_ATTRIB_MEMORY_MAPPED"
| |     `-TextComment 0x55887c3e8440 <line:702:6, col:14> Text=" is zero."
| |-FieldDecl 0x55887c16a7e8 <line:708:3, col:29> col:29 BufferSize 'UINT32':'unsigned int'
| | `-FullComment 0x55887c3e8580 <line:706:6, col:30>
| |   `-ParagraphComment 0x55887c3e8550 <col:6, col:30>
| |     `-TextComment 0x55887c3e8520 <col:6, col:30> Text=" Size of the file's data."
| `-FieldDecl 0x55887c16a878 <line:712:3, col:29> col:29 AuthenticationStatus 'UINT32':'unsigned int'
|   `-FullComment 0x55887c3e8650 <line:710:6, col:42>
|     `-ParagraphComment 0x55887c3e8620 <col:6, col:42>
|       `-TextComment 0x55887c3e85f0 <col:6, col:42> Text=" Authentication status for this file."
|-TypedefDecl 0x55887c16a928 <line:686:1, line:713:3> col:3 referenced EFI_FV_FILE_INFO2 'struct EFI_FV_FILE_INFO2':'EFI_FV_FILE_INFO2'
| |-ElaboratedType 0x55887c16a8d0 'struct EFI_FV_FILE_INFO2' sugar
| | `-RecordType 0x55887c16a550 'EFI_FV_FILE_INFO2'
| |   `-Record 0x55887c16a4d0 ''
| `-FullComment 0x55887c3e8720 <line:684:4, col:62>
|   `-ParagraphComment 0x55887c3e86f0 <col:4, col:62>
|     `-TextComment 0x55887c3e86c0 <col:4, col:62> Text=" The information with authentication status of the FV file."
|-TypedefDecl 0x55887c16ac78 <line:733:1, line:738:3> line:735:10 referenced EFI_PEI_FFS_GET_FILE_INFO 'EFI_STATUS (*)(EFI_PEI_FILE_HANDLE, EFI_FV_FILE_INFO *)'
| |-PointerType 0x55887c16ac10 'EFI_STATUS (*)(EFI_PEI_FILE_HANDLE, EFI_FV_FILE_INFO *)'
| | `-ParenType 0x55887c16abb0 'EFI_STATUS (EFI_PEI_FILE_HANDLE, EFI_FV_FILE_INFO *)' sugar
| |   `-FunctionProtoType 0x55887c16ab70 'EFI_STATUS (EFI_PEI_FILE_HANDLE, EFI_FV_FILE_INFO *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-TypedefType 0x55887c15fdf0 'EFI_PEI_FILE_HANDLE' sugar
| |     | |-Typedef 0x55887c10b3a0 'EFI_PEI_FILE_HANDLE'
| |     | `-PointerType 0x55887bfe9730 'void *'
| |     |   `-BuiltinType 0x55887bfe9010 'void'
| |     `-PointerType 0x55887c16aa90 'EFI_FV_FILE_INFO *'
| |       `-TypedefType 0x55887c16aa40 'EFI_FV_FILE_INFO' sugar
| |         |-Typedef 0x55887c16a438 'EFI_FV_FILE_INFO'
| |         `-ElaboratedType 0x55887c16a3e0 'struct EFI_FV_FILE_INFO' sugar
| |           `-RecordType 0x55887c16a080 'EFI_FV_FILE_INFO'
| |             `-Record 0x55887c169ff8 ''
| `-FullComment 0x55887c3e8da0 <line:716:1, line:730:51>
|   |-ParagraphComment 0x55887c3e87c0 <line:716:1, col:44>
|   | `-TextComment 0x55887c3e8790 <col:1, col:44> Text="  Returns information about a specific file."
|   |-ParagraphComment 0x55887c3e8880 <line:718:1, line:721:29>
|   | |-TextComment 0x55887c3e87e0 <line:718:1, col:58> Text="  This function returns information about a specific file,"
|   | |-TextComment 0x55887c3e8800 <line:719:1, col:65> Text="  including its file name, type, attributes, starting address and"
|   | |-TextComment 0x55887c3e8820 <line:720:1, col:61> Text="  size. If the firmware volume is not memory mapped, then the"
|   | `-TextComment 0x55887c3e8840 <line:721:1, col:29> Text="  Buffer member will be NULL."
|   |-ParagraphComment 0x55887c3e88d0 <line:723:1, col:2>
|   | `-TextComment 0x55887c3e88a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e88f0 <col:3, line:724:2> [in] implicitly Param="FileHandle" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e89a0 <line:723:20, line:724:2>
|   |   |-TextComment 0x55887c3e8950 <line:723:20, col:45> Text="   The handle of the file."
|   |   `-TextComment 0x55887c3e8970 <line:724:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e89c0 <col:3, line:725:34> [in] implicitly Param="FileInfo" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e8a70 <line:724:18, line:725:34>
|   |   |-TextComment 0x55887c3e8a20 <line:724:18, col:53> Text="     Upon exit, points to the file's"
|   |   `-TextComment 0x55887c3e8a40 <line:725:1, col:34> Text="                      information."
|   |-ParagraphComment 0x55887c3e8ac0 <line:727:1, col:2>
|   | `-TextComment 0x55887c3e8a90 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e8ae0 <col:3, line:728:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3e8b80 <line:727:22, line:728:2>
|   |   |-TextComment 0x55887c3e8b30 <line:727:22, col:64> Text="             File information was returned."
|   |   `-TextComment 0x55887c3e8b50 <line:728:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e8ba0 <col:3, line:730:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c3e8c80 <line:728:32, line:730:2>
|   |   |-TextComment 0x55887c3e8c00 <line:728:32, col:53> Text="   FileHandle does not"
|   |   |-TextComment 0x55887c3e8c20 <line:729:1, col:57> Text="                                  represent a valid file."
|   |   `-TextComment 0x55887c3e8c40 <line:730:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e8ca0 <col:3, col:51> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c3e8d30 <col:32, col:51>
|       `-TextComment 0x55887c3e8d00 <col:32, col:51> Text="   FileInfo is NULL."
|-TypedefDecl 0x55887c16afa8 <line:757:1, line:762:3> line:759:10 referenced EFI_PEI_FFS_GET_FILE_INFO2 'EFI_STATUS (*)(EFI_PEI_FILE_HANDLE, EFI_FV_FILE_INFO2 *)'
| |-PointerType 0x55887c16af40 'EFI_STATUS (*)(EFI_PEI_FILE_HANDLE, EFI_FV_FILE_INFO2 *)'
| | `-ParenType 0x55887c16aee0 'EFI_STATUS (EFI_PEI_FILE_HANDLE, EFI_FV_FILE_INFO2 *)' sugar
| |   `-FunctionProtoType 0x55887c16aea0 'EFI_STATUS (EFI_PEI_FILE_HANDLE, EFI_FV_FILE_INFO2 *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-TypedefType 0x55887c15fdf0 'EFI_PEI_FILE_HANDLE' sugar
| |     | |-Typedef 0x55887c10b3a0 'EFI_PEI_FILE_HANDLE'
| |     | `-PointerType 0x55887bfe9730 'void *'
| |     |   `-BuiltinType 0x55887bfe9010 'void'
| |     `-PointerType 0x55887c16adc0 'EFI_FV_FILE_INFO2 *'
| |       `-TypedefType 0x55887c16ad70 'EFI_FV_FILE_INFO2' sugar
| |         |-Typedef 0x55887c16a928 'EFI_FV_FILE_INFO2'
| |         `-ElaboratedType 0x55887c16a8d0 'struct EFI_FV_FILE_INFO2' sugar
| |           `-RecordType 0x55887c16a550 'EFI_FV_FILE_INFO2'
| |             `-Record 0x55887c16a4d0 ''
| `-FullComment 0x55887c3e9400 <line:741:1, line:754:51>
|   |-ParagraphComment 0x55887c3e8e40 <line:741:1, col:44>
|   | `-TextComment 0x55887c3e8e10 <col:1, col:44> Text="  Returns information about a specific file."
|   |-ParagraphComment 0x55887c3e8ee0 <line:743:1, line:745:83>
|   | |-TextComment 0x55887c3e8e60 <line:743:1, col:58> Text="  This function returns information about a specific file,"
|   | |-TextComment 0x55887c3e8e80 <line:744:1, col:94> Text="  including its file name, type, attributes, starting address, size and authentication status."
|   | `-TextComment 0x55887c3e8ea0 <line:745:1, col:83> Text="  If the firmware volume is not memory mapped, then the Buffer member will be NULL."
|   |-ParagraphComment 0x55887c3e8f30 <line:747:1, col:2>
|   | `-TextComment 0x55887c3e8f00 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e8f50 <col:3, line:748:2> [in] implicitly Param="FileHandle" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e9000 <line:747:20, line:748:2>
|   |   |-TextComment 0x55887c3e8fb0 <line:747:20, col:45> Text="   The handle of the file."
|   |   `-TextComment 0x55887c3e8fd0 <line:748:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e9020 <col:3, line:749:34> [in] implicitly Param="FileInfo" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e90d0 <line:748:18, line:749:34>
|   |   |-TextComment 0x55887c3e9080 <line:748:18, col:53> Text="     Upon exit, points to the file's"
|   |   `-TextComment 0x55887c3e90a0 <line:749:1, col:34> Text="                      information."
|   |-ParagraphComment 0x55887c3e9120 <line:751:1, col:2>
|   | `-TextComment 0x55887c3e90f0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e9140 <col:3, line:752:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3e91e0 <line:751:22, line:752:2>
|   |   |-TextComment 0x55887c3e9190 <line:751:22, col:64> Text="             File information was returned."
|   |   `-TextComment 0x55887c3e91b0 <line:752:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e9200 <col:3, line:754:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c3e92e0 <line:752:32, line:754:2>
|   |   |-TextComment 0x55887c3e9260 <line:752:32, col:53> Text="   FileHandle does not"
|   |   |-TextComment 0x55887c3e9280 <line:753:1, col:57> Text="                                  represent a valid file."
|   |   `-TextComment 0x55887c3e92a0 <line:754:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3e9300 <col:3, col:51> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c3e9390 <col:32, col:51>
|       `-TextComment 0x55887c3e9360 <col:32, col:51> Text="   FileInfo is NULL."
|-RecordDecl 0x55887c16b028 <line:767:9, line:790:1> line:767:9 struct definition
| |-FullComment 0x55887c3e94d0 <line:765:4, col:37>
| | `-ParagraphComment 0x55887c3e94a0 <col:4, col:37>
| |   `-TextComment 0x55887c3e9470 <col:4, col:37> Text=" The information of the FV volume."
| |-FieldDecl 0x55887c16b108 <line:771:3, col:27> col:27 FvAttributes 'EFI_FVB_ATTRIBUTES_2':'unsigned int'
| | `-FullComment 0x55887c3e95a0 <line:769:6, col:40>
| |   `-ParagraphComment 0x55887c3e9570 <col:6, col:40>
| |     `-TextComment 0x55887c3e9540 <col:6, col:40> Text=" Attributes of the firmware volume."
| |-FieldDecl 0x55887c16b198 <line:775:3, col:27> col:27 FvFormat 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c3e9670 <line:773:6, col:36>
| |   `-ParagraphComment 0x55887c3e9640 <col:6, col:36>
| |     `-TextComment 0x55887c3e9610 <col:6, col:36> Text=" Format of the firmware volume."
| |-FieldDecl 0x55887c16b228 <line:779:3, col:27> col:27 FvName 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c3e9740 <line:777:6, col:34>
| |   `-ParagraphComment 0x55887c3e9710 <col:6, col:34>
| |     `-TextComment 0x55887c3e96e0 <col:6, col:34> Text=" Name of the firmware volume."
| |-FieldDecl 0x55887c16b310 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiPeiCis.h:785:28> col:28 FvStart 'void *'
| | `-FullComment 0x55887c3e9860 <line:781:6, line:783:26>
| |   `-ParagraphComment 0x55887c3e9830 <line:781:6, line:783:26>
| |     |-TextComment 0x55887c3e97b0 <line:781:6, col:46> Text=" Points to the first byte of the firmware"
| |     |-TextComment 0x55887c3e97d0 <line:782:6, col:45> Text=" volume, if bit EFI_FVB_MEMORY_MAPPED is"
| |     `-TextComment 0x55887c3e97f0 <line:783:6, col:26> Text=" set in FvAttributes."
| `-FieldDecl 0x55887c16b398 <line:789:3, col:27> col:27 FvSize 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c3e9930 <line:787:6, col:34>
|     `-ParagraphComment 0x55887c3e9900 <col:6, col:34>
|       `-TextComment 0x55887c3e98d0 <col:6, col:34> Text=" Size of the firmware volume."
|-TypedefDecl 0x55887c16b448 <line:767:1, line:790:3> col:3 referenced EFI_FV_INFO 'struct EFI_FV_INFO':'EFI_FV_INFO'
| |-ElaboratedType 0x55887c16b3f0 'struct EFI_FV_INFO' sugar
| | `-RecordType 0x55887c16b0b0 'EFI_FV_INFO'
| |   `-Record 0x55887c16b028 ''
| `-FullComment 0x55887c3e9a00 <line:765:4, col:37>
|   `-ParagraphComment 0x55887c3e99d0 <col:4, col:37>
|     `-TextComment 0x55887c3e99a0 <col:4, col:37> Text=" The information of the FV volume."
|-TypedefDecl 0x55887c16b798 <line:809:1, line:814:3> line:811:10 referenced EFI_PEI_FFS_GET_VOLUME_INFO 'EFI_STATUS (*)(EFI_PEI_FV_HANDLE, EFI_FV_INFO *)'
| |-PointerType 0x55887c16b730 'EFI_STATUS (*)(EFI_PEI_FV_HANDLE, EFI_FV_INFO *)'
| | `-ParenType 0x55887c16b6d0 'EFI_STATUS (EFI_PEI_FV_HANDLE, EFI_FV_INFO *)' sugar
| |   `-FunctionProtoType 0x55887c16b690 'EFI_STATUS (EFI_PEI_FV_HANDLE, EFI_FV_INFO *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-TypedefType 0x55887c165d10 'EFI_PEI_FV_HANDLE' sugar
| |     | |-Typedef 0x55887c10b300 'EFI_PEI_FV_HANDLE'
| |     | `-PointerType 0x55887bfe9730 'void *'
| |     |   `-BuiltinType 0x55887bfe9010 'void'
| |     `-PointerType 0x55887c16b5b0 'EFI_FV_INFO *'
| |       `-TypedefType 0x55887c16b560 'EFI_FV_INFO' sugar
| |         |-Typedef 0x55887c16b448 'EFI_FV_INFO'
| |         `-ElaboratedType 0x55887c16b3f0 'struct EFI_FV_INFO' sugar
| |           `-RecordType 0x55887c16b0b0 'EFI_FV_INFO'
| |             `-Record 0x55887c16b028 ''
| `-FullComment 0x55887c3ea1b0 <line:793:1, line:806:93>
|   |-ParagraphComment 0x55887c3e9aa0 <line:793:1, col:49>
|   | `-TextComment 0x55887c3e9a70 <col:1, col:49> Text="  Returns information about the specified volume."
|   |-ParagraphComment 0x55887c3e9b40 <line:795:1, line:797:11>
|   | |-TextComment 0x55887c3e9ac0 <line:795:1, col:61> Text="  This function returns information about a specific firmware"
|   | |-TextComment 0x55887c3e9ae0 <line:796:1, col:64> Text="  volume, including its name, type, attributes, starting address"
|   | `-TextComment 0x55887c3e9b00 <line:797:1, col:11> Text="  and size."
|   |-ParagraphComment 0x55887c3e9b90 <line:799:1, col:2>
|   | `-TextComment 0x55887c3e9b60 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e9bb0 <col:3, line:800:2> [in] implicitly Param="VolumeHandle" ParamIndex=0
|   | `-ParagraphComment 0x55887c3e9c60 <line:799:22, line:800:2>
|   |   |-TextComment 0x55887c3e9c10 <line:799:22, col:45> Text="   Handle of the volume."
|   |   `-TextComment 0x55887c3e9c30 <line:800:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3e9c80 <col:3, col:70> [in] implicitly Param="VolumeInfo" ParamIndex=1
|   | `-ParagraphComment 0x55887c3e9d10 <col:20, col:70>
|   |   `-TextComment 0x55887c3e9ce0 <col:20, col:70> Text="     Upon exit, points to the volume's information."
|   |-ParagraphComment 0x55887c3e9d60 <line:802:1, col:2>
|   | `-TextComment 0x55887c3e9d30 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e9d80 <col:3, line:803:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3e9e20 <line:802:22, line:803:2>
|   |   |-TextComment 0x55887c3e9dd0 <line:802:22, col:66> Text="             The volume information returned."
|   |   `-TextComment 0x55887c3e9df0 <line:803:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e9e40 <col:3, line:804:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c3e9ef0 <line:803:32, line:804:2>
|   |   |-TextComment 0x55887c3e9ea0 <line:803:32, col:84> Text="   If VolumeHandle does not represent a valid volume."
|   |   `-TextComment 0x55887c3e9ec0 <line:804:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e9f10 <col:3, line:805:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c3e9fc0 <line:804:32, line:805:2>
|   |   |-TextComment 0x55887c3e9f70 <line:804:32, col:58> Text="   If VolumeHandle is NULL."
|   |   `-TextComment 0x55887c3e9f90 <line:805:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3e9fe0 <col:3, line:806:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3ea080 <line:805:22, line:806:2>
|   |   |-TextComment 0x55887c3ea030 <line:805:22, col:72> Text="             Information was successfully returned."
|   |   `-TextComment 0x55887c3ea050 <line:806:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ea0a0 <col:3, col:93> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c3ea130 <col:32, col:93>
|       `-TextComment 0x55887c3ea100 <col:32, col:93> Text="   The volume designated by the VolumeHandle is not available."
|-TypedefDecl 0x55887c16b950 <line:840:1, line:844:3> line:842:10 referenced EFI_PEI_REGISTER_FOR_SHADOW 'EFI_STATUS (*)(EFI_PEI_FILE_HANDLE)'
| |-PointerType 0x55887c16b8f0 'EFI_STATUS (*)(EFI_PEI_FILE_HANDLE)'
| | `-ParenType 0x55887c16b8c0 'EFI_STATUS (EFI_PEI_FILE_HANDLE)' sugar
| |   `-FunctionProtoType 0x55887c16b890 'EFI_STATUS (EFI_PEI_FILE_HANDLE)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-TypedefType 0x55887c15fdf0 'EFI_PEI_FILE_HANDLE' sugar
| |       |-Typedef 0x55887c10b3a0 'EFI_PEI_FILE_HANDLE'
| |       `-PointerType 0x55887bfe9730 'void *'
| |         `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3ea860 <line:817:1, line:837:50>
|   |-ParagraphComment 0x55887c3ea250 <line:817:1, col:63>
|   | `-TextComment 0x55887c3ea220 <col:1, col:63> Text="  Register a PEIM so that it will be shadowed and called again."
|   |-ParagraphComment 0x55887c3ea3e0 <line:819:1, line:827:7>
|   | |-TextComment 0x55887c3ea270 <line:819:1, col:62> Text="  This service registers a file handle so that after memory is"
|   | |-TextComment 0x55887c3ea290 <line:820:1, col:65> Text="  available, the PEIM will be re-loaded into permanent memory and"
|   | |-TextComment 0x55887c3ea2b0 <line:821:1, col:61> Text="  re-initialized. The PEIM registered this way will always be"
|   | |-TextComment 0x55887c3ea2d0 <line:822:1, col:60> Text="  initialized twice. The first time, this function call will"
|   | |-TextComment 0x55887c3ea2f0 <line:823:1, col:62> Text="  return EFI_SUCCESS. The second time, this function call will"
|   | |-TextComment 0x55887c3ea310 <line:824:1, col:61> Text="  return EFI_ALREADY_STARTED. Depending on the order in which"
|   | |-TextComment 0x55887c3ea330 <line:825:1, col:56> Text="  PEIMs are dispatched, the PEIM making this call may be"
|   | |-TextComment 0x55887c3ea350 <line:826:1, col:65> Text="  initialized after permanent memory is installed, even the first"
|   | `-TextComment 0x55887c3ea370 <line:827:1, col:7> Text="  time."
|   |-ParagraphComment 0x55887c3ea430 <line:829:1, col:2>
|   | `-TextComment 0x55887c3ea400 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ea450 <col:3, line:830:47> [in] implicitly Param="FileHandle" ParamIndex=0
|   | `-ParagraphComment 0x55887c3ea500 <line:829:21, line:830:47>
|   |   |-TextComment 0x55887c3ea4b0 <line:829:21, col:73> Text="            PEIM's file handle. Must be the currently"
|   |   `-TextComment 0x55887c3ea4d0 <line:830:1, col:47> Text="                                executing PEIM."
|   |-ParagraphComment 0x55887c3ea550 <line:832:1, col:2>
|   | `-TextComment 0x55887c3ea520 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3ea570 <col:3, line:834:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3ea640 <line:832:22, line:834:2>
|   |   |-TextComment 0x55887c3ea5c0 <line:832:22, col:72> Text="           The PEIM was successfully registered for"
|   |   |-TextComment 0x55887c3ea5e0 <line:833:1, col:42> Text="                                shadowing."
|   |   `-TextComment 0x55887c3ea600 <line:834:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3ea660 <col:3, line:836:2> Name="retval" Arg[0]="EFI_ALREADY_STARTED"
|   | `-ParagraphComment 0x55887c3ea740 <line:834:30, line:836:2>
|   |   |-TextComment 0x55887c3ea6c0 <line:834:30, col:55> Text="   The PEIM was previously"
|   |   |-TextComment 0x55887c3ea6e0 <line:835:1, col:57> Text="                                registered for shadowing."
|   |   `-TextComment 0x55887c3ea700 <line:836:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ea760 <col:3, line:837:50> Name="retval" Arg[0]="EFI_NOT_FOUND"
|     `-ParagraphComment 0x55887c3ea800 <line:836:24, line:837:50>
|       |-TextComment 0x55887c3ea7b0 <line:836:24, col:66> Text="         The FileHandle does not refer to a"
|       `-TextComment 0x55887c3ea7d0 <line:837:1, col:50> Text="                                valid file handle."
|-RecordDecl 0x55887c16ba38 prev 0x55887c10b428 <line:877:1, line:947:1> line:877:8 struct _EFI_PEI_SERVICES definition
| |-FullComment 0x55887c3eaa20 <line:869:4, line:875:38>
| | `-ParagraphComment 0x55887c3ea9f0 <line:869:4, line:875:38>
| |   |-TextComment 0x55887c3ea8d0 <line:869:4, col:93> Text=" EFI_PEI_SERVICES is a collection of functions whose implementation is provided by the PEI"
| |   |-TextComment 0x55887c3ea8f0 <line:870:4, col:82> Text=" Foundation. These services fall into various classes, including the following:"
| |   |-TextComment 0x55887c3ea910 <line:871:4, col:28> Text=" - Managing the boot mode"
| |   |-TextComment 0x55887c3ea930 <line:872:4, col:48> Text=" - Allocating both early and permanent memory"
| |   |-TextComment 0x55887c3ea950 <line:873:4, col:47> Text=" - Supporting the Firmware File System (FFS)"
| |   |-TextComment 0x55887c3ea970 <line:874:4, col:46> Text=" - Abstracting the PPI database abstraction"
| |   `-TextComment 0x55887c3ea990 <line:875:4, col:38> Text=" - Creating Hand-Off Blocks (HOBs)."
| |-FieldDecl 0x55887c16bb20 <line:881:3, col:37> col:37 Hdr 'EFI_TABLE_HEADER':'EFI_TABLE_HEADER'
| | `-FullComment 0x55887c3eaaf0 <line:879:6, col:50>
| |   `-ParagraphComment 0x55887c3eaac0 <col:6, col:50>
| |     `-TextComment 0x55887c3eaa90 <col:6, col:50> Text=" The table header for the PEI Services Table."
| |-FieldDecl 0x55887c16bba0 <line:886:3, col:37> col:37 InstallPpi 'EFI_PEI_INSTALL_PPI':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_PPI_DESCRIPTOR *)'
| |-FieldDecl 0x55887c16bc20 <line:887:3, col:37> col:37 ReInstallPpi 'EFI_PEI_REINSTALL_PPI':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_PPI_DESCRIPTOR *, const EFI_PEI_PPI_DESCRIPTOR *)'
| |-FieldDecl 0x55887c16bca0 <line:888:3, col:37> col:37 LocatePpi 'EFI_PEI_LOCATE_PPI':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)'
| |-FieldDecl 0x55887c16bd20 <line:889:3, col:37> col:37 NotifyPpi 'EFI_PEI_NOTIFY_PPI':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, const EFI_PEI_NOTIFY_DESCRIPTOR *)'
| |-FieldDecl 0x55887c16bda0 <line:894:3, col:37> col:37 GetBootMode 'EFI_PEI_GET_BOOT_MODE':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_BOOT_MODE *)'
| |-FieldDecl 0x55887c16be20 <line:895:3, col:37> col:37 SetBootMode 'EFI_PEI_SET_BOOT_MODE':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_BOOT_MODE)'
| |-FieldDecl 0x55887c16bea0 <line:900:3, col:37> col:37 GetHobList 'EFI_PEI_GET_HOB_LIST':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, void **)'
| |-FieldDecl 0x55887c16bf20 <line:901:3, col:37> col:37 CreateHob 'EFI_PEI_CREATE_HOB':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, UINT16, UINT16, void **)'
| |-FieldDecl 0x55887c16bfa0 <line:906:3, col:37> col:37 FfsFindNextVolume 'EFI_PEI_FFS_FIND_NEXT_VOLUME2':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, UINTN, EFI_PEI_FV_HANDLE *)'
| |-FieldDecl 0x55887c16c020 <line:907:3, col:37> col:37 FfsFindNextFile 'EFI_PEI_FFS_FIND_NEXT_FILE2':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_FV_FILETYPE, const EFI_PEI_FV_HANDLE, EFI_PEI_FILE_HANDLE *)'
| |-FieldDecl 0x55887c16c0a0 <line:908:3, col:37> col:37 FfsFindSectionData 'EFI_PEI_FFS_FIND_SECTION_DATA2':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_SECTION_TYPE, EFI_PEI_FILE_HANDLE, void **)'
| |-FieldDecl 0x55887c16c120 <line:913:3, col:37> col:37 InstallPeiMemory 'EFI_PEI_INSTALL_PEI_MEMORY':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_PHYSICAL_ADDRESS, UINT64)'
| |-FieldDecl 0x55887c16c1a0 <line:914:3, col:37> col:37 AllocatePages 'EFI_PEI_ALLOCATE_PAGES':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_MEMORY_TYPE, UINTN, EFI_PHYSICAL_ADDRESS *)'
| |-FieldDecl 0x55887c16c220 <line:915:3, col:37> col:37 AllocatePool 'EFI_PEI_ALLOCATE_POOL':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, UINTN, void **)'
| |-FieldDecl 0x55887c16c2a0 <line:916:3, col:37> col:37 CopyMem 'EFI_PEI_COPY_MEM':'void (*)(void *, void *, UINTN)'
| |-FieldDecl 0x55887c16d340 <line:917:3, col:37> col:37 SetMem 'EFI_PEI_SET_MEM':'void (*)(void *, UINTN, UINT8)'
| |-FieldDecl 0x55887c16d3c0 <line:922:3, col:37> col:37 ReportStatusCode 'EFI_PEI_REPORT_STATUS_CODE':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE, UINT32, const EFI_GUID *, const EFI_STATUS_CODE_DATA *)'
| |-FieldDecl 0x55887c16d440 <line:927:3, col:37> col:37 ResetSystem 'EFI_PEI_RESET_SYSTEM':'EFI_STATUS (*)(const EFI_PEI_SERVICES **)'
| |-FieldDecl 0x55887c16d4f8 <line:933:3, col:38> col:38 CpuIo 'EFI_PEI_CPU_IO_PPI *'
| |-FieldDecl 0x55887c16d5b8 <line:934:3, col:38> col:38 PciCfg 'EFI_PEI_PCI_CFG2_PPI *'
| |-FieldDecl 0x55887c16d640 <line:939:3, col:37> col:37 FfsFindFileByName 'EFI_PEI_FFS_FIND_BY_NAME':'EFI_STATUS (*)(const EFI_GUID *, EFI_PEI_FV_HANDLE, EFI_PEI_FILE_HANDLE *)'
| |-FieldDecl 0x55887c16d6c0 <line:940:3, col:37> col:37 FfsGetFileInfo 'EFI_PEI_FFS_GET_FILE_INFO':'EFI_STATUS (*)(EFI_PEI_FILE_HANDLE, EFI_FV_FILE_INFO *)'
| |-FieldDecl 0x55887c16d740 <line:941:3, col:37> col:37 FfsGetVolumeInfo 'EFI_PEI_FFS_GET_VOLUME_INFO':'EFI_STATUS (*)(EFI_PEI_FV_HANDLE, EFI_FV_INFO *)'
| |-FieldDecl 0x55887c16d7c0 <line:942:3, col:37> col:37 RegisterForShadow 'EFI_PEI_REGISTER_FOR_SHADOW':'EFI_STATUS (*)(EFI_PEI_FILE_HANDLE)'
| |-FieldDecl 0x55887c16d840 <line:943:3, col:37> col:37 FindSectionData3 'EFI_PEI_FFS_FIND_SECTION_DATA3':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_SECTION_TYPE, UINTN, EFI_PEI_FILE_HANDLE, void **, UINT32 *)'
| |-FieldDecl 0x55887c16d8c0 <line:944:3, col:37> col:37 FfsGetFileInfo2 'EFI_PEI_FFS_GET_FILE_INFO2':'EFI_STATUS (*)(EFI_PEI_FILE_HANDLE, EFI_FV_FILE_INFO2 *)'
| |-FieldDecl 0x55887c16d940 <line:945:3, col:37> col:37 ResetSystem2 'EFI_PEI_RESET2_SYSTEM':'void (*)(EFI_RESET_TYPE, EFI_STATUS, UINTN, void *)'
| `-FieldDecl 0x55887c16d9c0 <line:946:3, col:37> col:37 FreePages 'EFI_PEI_FREE_PAGES':'EFI_STATUS (*)(const EFI_PEI_SERVICES **, EFI_PHYSICAL_ADDRESS, UINTN)'
|-RecordDecl 0x55887c16dab8 <line:954:9, line:1011:1> line:954:16 struct _EFI_SEC_PEI_HAND_OFF definition
| |-FullComment 0x55887c3eac10 <line:950:4, line:952:55>
| | `-ParagraphComment 0x55887c3eabe0 <line:950:4, line:952:55>
| |   |-TextComment 0x55887c3eab60 <line:950:4, col:58> Text=" EFI_SEC_PEI_HAND_OFF structure holds information about"
| |   |-TextComment 0x55887c3eab80 <line:951:4, col:69> Text=" PEI core's operating environment, such as the size of location of"
| |   `-TextComment 0x55887c3eaba0 <line:952:4, col:55> Text=" temporary RAM, the stack location and BFV location."
| |-FieldDecl 0x55887c16db98 <line:958:3, col:13> col:13 DataSize 'UINT16':'unsigned short'
| | `-FullComment 0x55887c3eace0 <line:956:6, col:33>
| |   `-ParagraphComment 0x55887c3eacb0 <col:6, col:33>
| |     `-TextComment 0x55887c3eac80 <col:6, col:33> Text=" Size of the data structure."
| |-FieldDecl 0x55887c16dc30 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiPeiCis.h:965:14> col:14 BootFirmwareVolumeBase 'void *'
| | `-FullComment 0x55887c3eae00 <line:961:6, line:963:18>
| |   `-ParagraphComment 0x55887c3eadd0 <line:961:6, line:963:18>
| |     |-TextComment 0x55887c3ead50 <line:961:6, col:59> Text=" Points to the first byte of the boot firmware volume,"
| |     |-TextComment 0x55887c3ead70 <line:962:6, col:48> Text=" which the PEI Dispatcher should search for"
| |     `-TextComment 0x55887c3ead90 <line:963:6, col:18> Text=" PEI modules."
| |-FieldDecl 0x55887c16dcb8 <line:970:3, col:13> col:13 BootFirmwareVolumeSize 'UINTN':'unsigned long long'
| | `-FullComment 0x55887c3eaed0 <line:968:6, col:49>
| |   `-ParagraphComment 0x55887c3eaea0 <col:6, col:49>
| |     `-TextComment 0x55887c3eae70 <col:6, col:49> Text=" Size of the boot firmware volume, in bytes."
| |-FieldDecl 0x55887c16dd50 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiPeiCis.h:975:14> col:14 TemporaryRamBase 'void *'
| | `-FullComment 0x55887c3eafa0 <line:973:6, col:52>
| |   `-ParagraphComment 0x55887c3eaf70 <col:6, col:52>
| |     `-TextComment 0x55887c3eaf40 <col:6, col:52> Text=" Points to the first byte of the temporary RAM."
| |-FieldDecl 0x55887c16ddd8 <line:980:3, col:13> col:13 TemporaryRamSize 'UINTN':'unsigned long long'
| | `-FullComment 0x55887c3eb070 <line:978:6, col:42>
| |   `-ParagraphComment 0x55887c3eb040 <col:6, col:42>
| |     `-TextComment 0x55887c3eb010 <col:6, col:42> Text=" Size of the temporary RAM, in bytes."
| |-FieldDecl 0x55887c16de70 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiPeiCis.h:991:13> col:13 PeiTemporaryRamBase 'void *'
| | `-FullComment 0x55887c3eb2c0 <line:983:6, line:989:16>
| |   `-ParagraphComment 0x55887c3eb290 <line:983:6, line:989:16>
| |     |-TextComment 0x55887c3eb120 <line:983:6, col:51> Text=" Points to the first byte of the temporary RAM"
| |     |-TextComment 0x55887c3eb140 <line:984:6, col:55> Text=" available for use by the PEI Foundation. The area"
| |     |-TextComment 0x55887c3eb160 <line:985:6, col:62> Text=" described by PeiTemporaryRamBase and PeiTemporaryRamSize"
| |     |-TextComment 0x55887c3eb180 <line:986:6, col:58> Text=" must not extend outside beyond the area described by"
| |     |-TextComment 0x55887c3eb1a0 <line:987:6, col:23> Text=" TemporaryRamBase "
| |     |-TextComment 0x55887c3eb1c0 <col:24> Text="&"
| |     |-TextComment 0x55887c3eb1e0 <col:25, col:63> Text=" TemporaryRamSize. This area should not"
| |     |-TextComment 0x55887c3eb200 <line:988:6, col:53> Text=" overlap with the area reported by StackBase and"
| |     `-TextComment 0x55887c3eb220 <line:989:6, col:16> Text=" StackSize."
| |-FieldDecl 0x55887c16def8 <line:997:3, col:12> col:12 PeiTemporaryRamSize 'UINTN':'unsigned long long'
| | `-FullComment 0x55887c3eb3b0 <line:994:6, line:995:42>
| |   `-ParagraphComment 0x55887c3eb380 <line:994:6, line:995:42>
| |     |-TextComment 0x55887c3eb330 <line:994:6, col:59> Text=" The size of the available temporary RAM available for"
| |     `-TextComment 0x55887c3eb350 <line:995:6, col:42> Text=" use by the PEI Foundation, in bytes."
| |-FieldDecl 0x55887c16df90 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiPeiCis.h:1005:13> col:13 StackBase 'void *'
| | `-FullComment 0x55887c3eb4f0 <line:1000:6, line:1003:42>
| |   `-ParagraphComment 0x55887c3eb4c0 <line:1000:6, line:1003:42>
| |     |-TextComment 0x55887c3eb420 <line:1000:6, col:44> Text=" Points to the first byte of the stack."
| |     |-TextComment 0x55887c3eb440 <line:1001:6, col:53> Text=" This are may be part of the memory described by"
| |     |-TextComment 0x55887c3eb460 <line:1002:6, col:43> Text=" TemporaryRamBase and TemporaryRamSize"
| |     `-TextComment 0x55887c3eb480 <line:1003:6, col:42> Text=" or may be an entirely separate area."
| `-FieldDecl 0x55887c16e018 <line:1010:3, col:12> col:12 StackSize 'UINTN':'unsigned long long'
|   `-FullComment 0x55887c3eb5c0 <line:1008:6, col:34>
|     `-ParagraphComment 0x55887c3eb590 <col:6, col:34>
|       `-TextComment 0x55887c3eb560 <col:6, col:34> Text=" Size of the stack, in bytes."
|-TypedefDecl 0x55887c16e0c8 <line:954:1, line:1011:3> col:3 referenced EFI_SEC_PEI_HAND_OFF 'struct _EFI_SEC_PEI_HAND_OFF':'struct _EFI_SEC_PEI_HAND_OFF'
| |-ElaboratedType 0x55887c16e070 'struct _EFI_SEC_PEI_HAND_OFF' sugar
| | `-RecordType 0x55887c16db40 'struct _EFI_SEC_PEI_HAND_OFF'
| |   `-Record 0x55887c16dab8 '_EFI_SEC_PEI_HAND_OFF'
| `-FullComment 0x55887c3eb6e0 <line:950:4, line:952:55>
|   `-ParagraphComment 0x55887c3eb6b0 <line:950:4, line:952:55>
|     |-TextComment 0x55887c3eb630 <line:950:4, col:58> Text=" EFI_SEC_PEI_HAND_OFF structure holds information about"
|     |-TextComment 0x55887c3eb650 <line:951:4, col:69> Text=" PEI core's operating environment, such as the size of location of"
|     `-TextComment 0x55887c3eb670 <line:952:4, col:55> Text=" temporary RAM, the stack location and BFV location."
|-TypedefDecl 0x55887c16f698 <line:1049:1, line:1054:3> line:1051:10 EFI_PEI_CORE_ENTRY_POINT 'void (*)(const EFI_SEC_PEI_HAND_OFF *, const EFI_PEI_PPI_DESCRIPTOR *)'
| |-PointerType 0x55887c16f630 'void (*)(const EFI_SEC_PEI_HAND_OFF *, const EFI_PEI_PPI_DESCRIPTOR *)'
| | `-ParenType 0x55887c16f5d0 'void (const EFI_SEC_PEI_HAND_OFF *, const EFI_PEI_PPI_DESCRIPTOR *)' sugar
| |   `-FunctionProtoType 0x55887c16f590 'void (const EFI_SEC_PEI_HAND_OFF *, const EFI_PEI_PPI_DESCRIPTOR *)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887c16e1b0 'const EFI_SEC_PEI_HAND_OFF *'
| |     | `-QualType 0x55887c16e161 'const EFI_SEC_PEI_HAND_OFF' const
| |     |   `-TypedefType 0x55887c16e160 'EFI_SEC_PEI_HAND_OFF' sugar
| |     |     |-Typedef 0x55887c16e0c8 'EFI_SEC_PEI_HAND_OFF'
| |     |     `-ElaboratedType 0x55887c16e070 'struct _EFI_SEC_PEI_HAND_OFF' sugar
| |     |       `-RecordType 0x55887c16db40 'struct _EFI_SEC_PEI_HAND_OFF'
| |     |         `-Record 0x55887c16dab8 '_EFI_SEC_PEI_HAND_OFF'
| |     `-PointerType 0x55887c0de6b0 'const EFI_PEI_PPI_DESCRIPTOR *'
| |       `-QualType 0x55887c0de421 'const EFI_PEI_PPI_DESCRIPTOR' const
| |         `-TypedefType 0x55887c0de420 'EFI_PEI_PPI_DESCRIPTOR' sugar
| |           |-Typedef 0x55887c0ddfa8 'EFI_PEI_PPI_DESCRIPTOR'
| |           `-ElaboratedType 0x55887c0ddf50 'struct EFI_PEI_PPI_DESCRIPTOR' sugar
| |             `-RecordType 0x55887c0ddd50 'EFI_PEI_PPI_DESCRIPTOR'
| |               `-Record 0x55887c0ddcc8 ''
| `-FullComment 0x55887c3ebe00 <line:1014:1, line:1045:56>
|   |-ParagraphComment 0x55887c3eb780 <line:1014:1, col:36>
|   | `-TextComment 0x55887c3eb750 <col:1, col:36> Text="  The entry point of PEI Foundation."
|   |-ParagraphComment 0x55887c3eb980 <line:1016:1, line:1027:40>
|   | |-TextComment 0x55887c3eb7a0 <line:1016:1, col:64> Text="  This function is the entry point for the PEI Foundation, which"
|   | |-TextComment 0x55887c3eb7c0 <line:1017:1, col:59> Text="  allows the SEC phase to pass information about the stack,"
|   | |-TextComment 0x55887c3eb7e0 <line:1018:1, col:66> Text="  temporary RAM and the Boot Firmware Volume. In addition, it also"
|   | |-TextComment 0x55887c3eb800 <line:1019:1, col:64> Text="  allows the SEC phase to pass services and data forward for use"
|   | |-TextComment 0x55887c3eb820 <line:1020:1, col:67> Text="  during the PEI phase in the form of one or more PPIs. These PPI's"
|   | |-TextComment 0x55887c3eb840 <line:1021:1, col:59> Text="  will be installed and/or immediately signaled if they are"
|   | |-TextComment 0x55887c3eb860 <line:1022:1, col:66> Text="  notification type. There is no limit to the number of additional"
|   | |-TextComment 0x55887c3eb880 <line:1023:1, col:67> Text="  PPIs that can be passed from SEC into the PEI Foundation. As part"
|   | |-TextComment 0x55887c3eb8a0 <line:1024:1, col:64> Text="  of its initialization phase, the PEI Foundation will add these"
|   | |-TextComment 0x55887c3eb8c0 <line:1025:1, col:60> Text="  SEC-hosted PPIs to its PPI database such that both the PEI"
|   | |-TextComment 0x55887c3eb8e0 <line:1026:1, col:64> Text="  Foundation and any modules can leverage the associated service"
|   | `-TextComment 0x55887c3eb900 <line:1027:1, col:40> Text="  calls and/or code in these early PPIs."
|   |-ParagraphComment 0x55887c3eb9d0 <line:1029:1, col:2>
|   | `-TextComment 0x55887c3eb9a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3eb9f0 <col:3, line:1033:54> [in] implicitly Param="SecCoreData" ParamIndex=0
|   | `-ParagraphComment 0x55887c3ebb20 <line:1029:21, line:1033:54>
|   |   |-TextComment 0x55887c3eba50 <line:1029:21, col:61> Text="    Points to a data structure containing"
|   |   |-TextComment 0x55887c3eba70 <line:1030:1, col:56> Text="                        information about the PEI core's"
|   |   |-TextComment 0x55887c3eba90 <line:1031:1, col:63> Text="                        operating environment, such as the size"
|   |   |-TextComment 0x55887c3ebab0 <line:1032:1, col:64> Text="                        and location of temporary RAM, the stack"
|   |   `-TextComment 0x55887c3ebad0 <line:1033:1, col:54> Text="                        location and the BFV location."
|   |-ParagraphComment 0x55887c3ebb70 <line:1035:1, col:2>
|   | `-TextComment 0x55887c3ebb40 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3ebb90 <col:3, line:1045:56> [in] implicitly Param="PpiList" ParamIndex=1
|     `-ParagraphComment 0x55887c3ebdb0 <line:1035:17, line:1045:56>
|       |-TextComment 0x55887c3ebbf0 <line:1035:17, col:59> Text="        Points to a list of one or more PPI"
|       |-TextComment 0x55887c3ebc10 <line:1036:1, col:64> Text="                        descriptors to be installed initially by"
|       |-TextComment 0x55887c3ebc30 <line:1037:1, col:64> Text="                        the PEI core. An empty PPI list consists"
|       |-TextComment 0x55887c3ebc50 <line:1038:1, col:63> Text="                        of a single descriptor with the end-tag"
|       |-TextComment 0x55887c3ebc70 <line:1039:1, col:62> Text="                        EFI_PEI_PPI_DESCRIPTOR_TERMINATE_LIST."
|       |-TextComment 0x55887c3ebc90 <line:1040:1, col:64> Text="                        As part of its initialization phase, the"
|       |-TextComment 0x55887c3ebcb0 <line:1041:1, col:64> Text="                        PEI Foundation will add these SEC-hosted"
|       |-TextComment 0x55887c3ebcd0 <line:1042:1, col:63> Text="                        PPIs to its PPI database such that both"
|       |-TextComment 0x55887c3ebcf0 <line:1043:1, col:62> Text="                        the PEI Foundation and any modules can"
|       |-TextComment 0x55887c3ebd10 <line:1044:1, col:61> Text="                        leverage the associated service calls"
|       `-TextComment 0x55887c3ebd30 <line:1045:1, col:56> Text="                        and/or code in these early PPIs."
|-RecordDecl 0x55887c16f718 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Ppi/DxeIpl.h:21:9, col:16> col:16 struct _EFI_DXE_IPL_PPI
|-TypedefDecl 0x55887c16f818 <col:1, col:33> col:33 referenced EFI_DXE_IPL_PPI 'struct _EFI_DXE_IPL_PPI':'struct _EFI_DXE_IPL_PPI'
| `-ElaboratedType 0x55887c16f7c0 'struct _EFI_DXE_IPL_PPI' sugar
|   `-RecordType 0x55887c16f7a0 'struct _EFI_DXE_IPL_PPI'
|     `-Record 0x55887c16fc98 '_EFI_DXE_IPL_PPI'
|-TypedefDecl 0x55887c16fc10 <line:47:1, line:53:3> line:49:10 referenced EFI_DXE_IPL_ENTRY 'EFI_STATUS (*)(const EFI_DXE_IPL_PPI *, EFI_PEI_SERVICES **, EFI_PEI_HOB_POINTERS)'
| |-PointerType 0x55887c16fba0 'EFI_STATUS (*)(const EFI_DXE_IPL_PPI *, EFI_PEI_SERVICES **, EFI_PEI_HOB_POINTERS)'
| | `-ParenType 0x55887c16fb40 'EFI_STATUS (const EFI_DXE_IPL_PPI *, EFI_PEI_SERVICES **, EFI_PEI_HOB_POINTERS)' sugar
| |   `-FunctionProtoType 0x55887c16fb00 'EFI_STATUS (const EFI_DXE_IPL_PPI *, EFI_PEI_SERVICES **, EFI_PEI_HOB_POINTERS)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c16f900 'const EFI_DXE_IPL_PPI *'
| |     | `-QualType 0x55887c16f8b1 'const EFI_DXE_IPL_PPI' const
| |     |   `-TypedefType 0x55887c16f8b0 'EFI_DXE_IPL_PPI' sugar
| |     |     |-Typedef 0x55887c16f818 'EFI_DXE_IPL_PPI'
| |     |     `-ElaboratedType 0x55887c16f7c0 'struct _EFI_DXE_IPL_PPI' sugar
| |     |       `-RecordType 0x55887c16f7a0 'struct _EFI_DXE_IPL_PPI'
| |     |         `-Record 0x55887c16fc98 '_EFI_DXE_IPL_PPI'
| |     |-PointerType 0x55887c0dd8d0 'EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c160110 'EFI_PEI_SERVICES *'
| |     |   `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |     |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |     `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |       `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |         `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     `-TypedefType 0x55887c16fa20 'EFI_PEI_HOB_POINTERS' sugar
| |       |-Typedef 0x55887c0a3348 'EFI_PEI_HOB_POINTERS'
| |       `-ElaboratedType 0x55887c0a32f0 'union EFI_PEI_HOB_POINTERS' sugar
| |         `-RecordType 0x55887c0a14c0 'EFI_PEI_HOB_POINTERS'
| |           `-Record 0x55887c0a1440 ''
| `-FullComment 0x55887c3ec4b0 <line:24:1, line:44:59>
|   |-ParagraphComment 0x55887c3ebec0 <line:24:1, line:25:42>
|   | |-TextComment 0x55887c3ebe70 <line:24:1, col:60> Text="  The architectural PPI that the PEI Foundation invokes when"
|   | `-TextComment 0x55887c3ebe90 <line:25:1, col:42> Text="  there are no additional PEIMs to invoke."
|   |-ParagraphComment 0x55887c3ec070 <line:27:1, line:36:34>
|   | |-TextComment 0x55887c3ebee0 <line:27:1, col:49> Text="  This function is invoked by the PEI Foundation."
|   | |-TextComment 0x55887c3ebf00 <line:28:1, col:60> Text="  The PEI Foundation will invoke this service when there are"
|   | |-TextComment 0x55887c3ebf20 <line:29:1, col:46> Text="  no additional PEIMs to invoke in the system."
|   | |-TextComment 0x55887c3ebf40 <line:30:1, col:58> Text="  If this PPI does not exist, it is an error condition and"
|   | |-TextComment 0x55887c3ebf60 <line:31:1, col:58> Text="  an ill-formed firmware set. The DXE IPL PPI should never"
|   | |-TextComment 0x55887c3ebf80 <line:32:1, col:57> Text="  return after having been invoked by the PEI Foundation."
|   | |-TextComment 0x55887c3ebfa0 <line:33:1, col:73> Text="  The DXE IPL PPI can do many things internally, including the following:"
|   | |-TextComment 0x55887c3ebfc0 <line:34:1, col:55> Text="    - Invoke the DXE entry point from a firmware volume"
|   | |-TextComment 0x55887c3ebfe0 <line:35:1, col:44> Text="    - Invoke the recovery processing modules"
|   | `-TextComment 0x55887c3ec000 <line:36:1, col:34> Text="    - Invoke the S3 resume modules"
|   |-ParagraphComment 0x55887c3ec0c0 <line:38:1, col:2>
|   | `-TextComment 0x55887c3ec090 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ec0e0 <col:3, line:39:2> [in] implicitly Param="This" ParamIndex=0
|   | `-ParagraphComment 0x55887c3ec190 <line:38:15, line:39:2>
|   |   |-TextComment 0x55887c3ec140 <line:38:15, col:60> Text="           Pointer to the DXE IPL PPI instance"
|   |   `-TextComment 0x55887c3ec160 <line:39:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ec1b0 <col:3, line:40:2> [in] implicitly Param="PeiServices" ParamIndex=1
|   | `-ParagraphComment 0x55887c3ec260 <line:39:22, line:40:2>
|   |   |-TextComment 0x55887c3ec210 <line:39:22, col:59> Text="    Pointer to the PEI Services Table."
|   |   `-TextComment 0x55887c3ec230 <line:40:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ec280 <col:3, col:77> [in] implicitly Param="HobList" ParamIndex=2
|   | `-ParagraphComment 0x55887c3ec310 <col:18, col:77>
|   |   `-TextComment 0x55887c3ec2e0 <col:18, col:77> Text="        Pointer to the list of Hand-Off Block (HOB) entries."
|   |-ParagraphComment 0x55887c3ec360 <line:42:1, col:2>
|   | `-TextComment 0x55887c3ec330 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ec380 <col:3, line:44:59> Name="retval" Arg[0]="EFI_SUCCESS"
|     `-ParagraphComment 0x55887c3ec450 <line:42:22, line:44:59>
|       |-TextComment 0x55887c3ec3d0 <line:42:22, col:79> Text="    Upon this return code, the PEI Foundation should enter"
|       |-TextComment 0x55887c3ec3f0 <line:43:1, col:76> Text="                         some exception handling.Under normal circumstances,"
|       `-TextComment 0x55887c3ec410 <line:44:1, col:59> Text="                         the DXE IPL PPI should not return."
|-RecordDecl 0x55887c16fc98 prev 0x55887c16f718 <line:60:1, line:62:1> line:60:8 struct _EFI_DXE_IPL_PPI definition
| |-FullComment 0x55887c3ec5d0 <line:56:4, line:58:79>
| | `-ParagraphComment 0x55887c3ec5a0 <line:56:4, line:58:79>
| |   |-TextComment 0x55887c3ec520 <line:56:4, col:54> Text=" Final service to be invoked by the PEI Foundation."
| |   |-TextComment 0x55887c3ec540 <line:57:4, col:79> Text=" The DXE IPL PPI is responsible for locating and loading the DXE Foundation."
| |   `-TextComment 0x55887c3ec560 <line:58:4, col:79> Text=" The DXE IPL PPI may use PEI services to locate and load the DXE Foundation."
| `-FieldDecl 0x55887c16fd50 <line:61:3, col:24> col:24 Entry 'EFI_DXE_IPL_ENTRY':'EFI_STATUS (*)(const EFI_DXE_IPL_PPI *, EFI_PEI_SERVICES **, EFI_PEI_HOB_POINTERS)'
|-VarDecl 0x55887c16fdb0 <line:64:1, col:18> col:18 used gEfiDxeIplPpiGuid 'EFI_GUID':'GUID' extern
|-VarDecl 0x55887c16fe58 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Ppi/EndOfPeiPhase.h:23:1, col:18> col:18 used gEfiEndOfPeiSignalPpiGuid 'EFI_GUID':'GUID' extern
|-VarDecl 0x55887c16fef8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Ppi/MemoryDiscovered.h:24:1, col:18> col:18 used gEfiPeiMemoryDiscoveredPpiGuid 'EFI_GUID':'GUID' extern
|-RecordDecl 0x55887c16ff88 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Ppi/ReadOnlyVariable2.h:19:9, col:16> col:16 struct _EFI_PEI_READ_ONLY_VARIABLE2_PPI
|-TypedefDecl 0x55887c170088 <col:1, col:49> col:49 referenced EFI_PEI_READ_ONLY_VARIABLE2_PPI 'struct _EFI_PEI_READ_ONLY_VARIABLE2_PPI':'struct _EFI_PEI_READ_ONLY_VARIABLE2_PPI'
| `-ElaboratedType 0x55887c170030 'struct _EFI_PEI_READ_ONLY_VARIABLE2_PPI' sugar
|   `-RecordType 0x55887c170010 'struct _EFI_PEI_READ_ONLY_VARIABLE2_PPI'
|     `-Record 0x55887c172f98 '_EFI_PEI_READ_ONLY_VARIABLE2_PPI'
|-TypedefDecl 0x55887c172b38 <line:48:1, line:57:3> line:50:10 referenced EFI_PEI_GET_VARIABLE2 'EFI_STATUS (*)(const EFI_PEI_READ_ONLY_VARIABLE2_PPI *, const CHAR16 *, const EFI_GUID *, UINT32 *, UINTN *, void *)'
| |-PointerType 0x55887c172ab0 'EFI_STATUS (*)(const EFI_PEI_READ_ONLY_VARIABLE2_PPI *, const CHAR16 *, const EFI_GUID *, UINT32 *, UINTN *, void *)'
| | `-ParenType 0x55887c170530 'EFI_STATUS (const EFI_PEI_READ_ONLY_VARIABLE2_PPI *, const CHAR16 *, const EFI_GUID *, UINT32 *, UINTN *, void *)' sugar
| |   `-FunctionProtoType 0x55887c1704d0 'EFI_STATUS (const EFI_PEI_READ_ONLY_VARIABLE2_PPI *, const CHAR16 *, const EFI_GUID *, UINT32 *, UINTN *, void *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c170170 'const EFI_PEI_READ_ONLY_VARIABLE2_PPI *'
| |     | `-QualType 0x55887c170121 'const EFI_PEI_READ_ONLY_VARIABLE2_PPI' const
| |     |   `-TypedefType 0x55887c170120 'EFI_PEI_READ_ONLY_VARIABLE2_PPI' sugar
| |     |     |-Typedef 0x55887c170088 'EFI_PEI_READ_ONLY_VARIABLE2_PPI'
| |     |     `-ElaboratedType 0x55887c170030 'struct _EFI_PEI_READ_ONLY_VARIABLE2_PPI' sugar
| |     |       `-RecordType 0x55887c170010 'struct _EFI_PEI_READ_ONLY_VARIABLE2_PPI'
| |     |         `-Record 0x55887c172f98 '_EFI_PEI_READ_ONLY_VARIABLE2_PPI'
| |     |-PointerType 0x55887c119d80 'const CHAR16 *'
| |     | `-QualType 0x55887c05e4c1 'const CHAR16' const
| |     |   `-TypedefType 0x55887c05e4c0 'CHAR16' sugar
| |     |     |-Typedef 0x55887c049c50 'CHAR16'
| |     |     `-BuiltinType 0x55887bfe9130 'unsigned short'
| |     |-PointerType 0x55887c164730 'const EFI_GUID *'
| |     | `-QualType 0x55887c0705c1 'const EFI_GUID' const
| |     |   `-TypedefType 0x55887c0705c0 'EFI_GUID' sugar
| |     |     |-Typedef 0x55887c06c210 'EFI_GUID'
| |     |     `-TypedefType 0x55887c06c1e0 'GUID' sugar
| |     |       |-Typedef 0x55887c051a78 'GUID'
| |     |       `-ElaboratedType 0x55887c051a20 'struct GUID' sugar
| |     |         `-RecordType 0x55887c04a5b0 'GUID'
| |     |           `-Record 0x55887c04a528 ''
| |     |-PointerType 0x55887c12dee0 'UINT32 *'
| |     | `-TypedefType 0x55887c04a5d0 'UINT32' sugar
| |     |   |-Typedef 0x55887c049a70 'UINT32'
| |     |   `-BuiltinType 0x55887bfe9150 'unsigned int'
| |     |-PointerType 0x55887c052800 'UINTN *'
| |     | `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |   |-Typedef 0x55887c04a020 'UINTN'
| |     |   `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |     |-Typedef 0x55887c049930 'UINT64'
| |     |     `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-PointerType 0x55887bfe9730 'void *'
| |       `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c3ed1d0 <line:22:1, line:45:94>
|   |-ParagraphComment 0x55887c3ec670 <line:22:1, col:68>
|   | `-TextComment 0x55887c3ec640 <col:1, col:68> Text="  This service retrieves a variable's value using its name and GUID."
|   |-ParagraphComment 0x55887c3ec730 <line:24:1, line:27:42>
|   | |-TextComment 0x55887c3ec690 <line:24:1, col:71> Text="  Read the specified variable from the UEFI variable store. If the Data"
|   | |-TextComment 0x55887c3ec6b0 <line:25:1, col:59> Text="  buffer is too small to hold the contents of the variable,"
|   | |-TextComment 0x55887c3ec6d0 <line:26:1, col:71> Text="  the error EFI_BUFFER_TOO_SMALL is returned and DataSize is set to the"
|   | `-TextComment 0x55887c3ec6f0 <line:27:1, col:42> Text="  required buffer size to obtain the data."
|   |-ParagraphComment 0x55887c3ec780 <line:29:1, col:2>
|   | `-TextComment 0x55887c3ec750 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ec7a0 <col:3, line:30:2> [in] implicitly Param="This" ParamIndex=0
|   | `-ParagraphComment 0x55887c3ec850 <line:29:15, line:30:2>
|   |   |-TextComment 0x55887c3ec800 <line:29:15, col:98> Text="                  A pointer to this instance of the EFI_PEI_READ_ONLY_VARIABLE2_PPI."
|   |   `-TextComment 0x55887c3ec820 <line:30:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ec870 <col:3, line:31:2> [in] implicitly Param="VariableName" ParamIndex=1
|   | `-ParagraphComment 0x55887c3ec920 <line:30:23, line:31:2>
|   |   |-TextComment 0x55887c3ec8d0 <line:30:23, col:98> Text="          A pointer to a null-terminated string that is the variable's name."
|   |   `-TextComment 0x55887c3ec8f0 <line:31:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ec940 <col:3, line:33:2> [in] implicitly Param="VariableGuid" ParamIndex=2
|   | `-ParagraphComment 0x55887c3eca20 <line:31:23, line:33:2>
|   |   |-TextComment 0x55887c3ec9a0 <line:31:23, col:104> Text="          A pointer to an EFI_GUID that is the variable's GUID. The combination of"
|   |   |-TextComment 0x55887c3ec9c0 <line:32:1, col:77> Text="                                VariableGuid and VariableName must be unique."
|   |   `-TextComment 0x55887c3ec9e0 <line:33:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3eca40 <col:3, line:34:2> [in] implicitly Param="Attributes" ParamIndex=3
|   | `-ParagraphComment 0x55887c3ecaf0 <line:33:21, line:34:2>
|   |   |-TextComment 0x55887c3ecaa0 <line:33:21, col:92> Text="            If non-NULL, on return, points to the variable's attributes."
|   |   `-TextComment 0x55887c3ecac0 <line:34:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ecb10 <col:3, line:36:2> [in] implicitly Param="DataSize" ParamIndex=4
|   | `-ParagraphComment 0x55887c3ecbf0 <line:34:19, line:36:2>
|   |   |-TextComment 0x55887c3ecb70 <line:34:19, col:89> Text="              On entry, points to the size in bytes of the Data buffer."
|   |   |-TextComment 0x55887c3ecb90 <line:35:1, col:91> Text="                                On return, points to the size of the data returned in Data."
|   |   `-TextComment 0x55887c3ecbb0 <line:36:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ecc10 <col:3, line:37:117> [in] implicitly Param="Data" ParamIndex=5
|   | `-ParagraphComment 0x55887c3eccc0 <line:36:15, line:37:117>
|   |   |-TextComment 0x55887c3ecc70 <line:36:15, col:97> Text="                  Points to the buffer which will hold the returned variable value."
|   |   `-TextComment 0x55887c3ecc90 <line:37:1, col:117> Text="                                May be NULL with a zero DataSize in order to determine the size of the buffer needed."
|   |-ParagraphComment 0x55887c3ecd10 <line:39:1, col:2>
|   | `-TextComment 0x55887c3ecce0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3ecd30 <col:3, line:40:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3ecdd0 <line:39:22, line:40:2>
|   |   |-TextComment 0x55887c3ecd80 <line:39:22, col:67> Text="           The variable was read successfully."
|   |   `-TextComment 0x55887c3ecda0 <line:40:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3ecdf0 <col:3, line:41:2> Name="retval" Arg[0]="EFI_NOT_FOUND"
|   | `-ParagraphComment 0x55887c3ece90 <line:40:24, line:41:2>
|   |   |-TextComment 0x55887c3ece40 <line:40:24, col:59> Text="         The variable was not found."
|   |   `-TextComment 0x55887c3ece60 <line:41:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3eceb0 <col:3, line:44:2> Name="retval" Arg[0]="EFI_BUFFER_TOO_SMALL"
|   | `-ParagraphComment 0x55887c3ecfb0 <line:41:31, line:44:2>
|   |   |-TextComment 0x55887c3ecf10 <line:41:31, col:81> Text="  The DataSize is too small for the resulting data."
|   |   |-TextComment 0x55887c3ecf30 <line:42:1, col:78> Text="                                DataSize is updated with the size required for"
|   |   |-TextComment 0x55887c3ecf50 <line:43:1, col:55> Text="                                the specified variable."
|   |   `-TextComment 0x55887c3ecf70 <line:44:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3ecfd0 <col:3, line:45:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c3ed080 <line:44:32, line:45:2>
|   |   |-TextComment 0x55887c3ed030 <line:44:32, col:85> Text=" VariableName, VariableGuid, DataSize or Data is NULL."
|   |   `-TextComment 0x55887c3ed050 <line:45:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ed0a0 <col:3, col:94> Name="retval" Arg[0]="EFI_DEVICE_ERROR"
|     `-ParagraphComment 0x55887c3ed130 <col:27, col:94>
|       `-TextComment 0x55887c3ed100 <col:27, col:94> Text="      The variable could not be retrieved because of a device error."
|-TypedefDecl 0x55887c172f18 <line:89:1, line:96:3> line:91:10 referenced EFI_PEI_GET_NEXT_VARIABLE_NAME2 'EFI_STATUS (*)(const EFI_PEI_READ_ONLY_VARIABLE2_PPI *, UINTN *, CHAR16 *, EFI_GUID *)'
| |-PointerType 0x55887c172ea0 'EFI_STATUS (*)(const EFI_PEI_READ_ONLY_VARIABLE2_PPI *, UINTN *, CHAR16 *, EFI_GUID *)'
| | `-ParenType 0x55887c172e40 'EFI_STATUS (const EFI_PEI_READ_ONLY_VARIABLE2_PPI *, UINTN *, CHAR16 *, EFI_GUID *)' sugar
| |   `-FunctionProtoType 0x55887c172df0 'EFI_STATUS (const EFI_PEI_READ_ONLY_VARIABLE2_PPI *, UINTN *, CHAR16 *, EFI_GUID *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c170170 'const EFI_PEI_READ_ONLY_VARIABLE2_PPI *'
| |     | `-QualType 0x55887c170121 'const EFI_PEI_READ_ONLY_VARIABLE2_PPI' const
| |     |   `-TypedefType 0x55887c170120 'EFI_PEI_READ_ONLY_VARIABLE2_PPI' sugar
| |     |     |-Typedef 0x55887c170088 'EFI_PEI_READ_ONLY_VARIABLE2_PPI'
| |     |     `-ElaboratedType 0x55887c170030 'struct _EFI_PEI_READ_ONLY_VARIABLE2_PPI' sugar
| |     |       `-RecordType 0x55887c170010 'struct _EFI_PEI_READ_ONLY_VARIABLE2_PPI'
| |     |         `-Record 0x55887c172f98 '_EFI_PEI_READ_ONLY_VARIABLE2_PPI'
| |     |-PointerType 0x55887c052800 'UINTN *'
| |     | `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |   |-Typedef 0x55887c04a020 'UINTN'
| |     |   `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |     |-Typedef 0x55887c049930 'UINT64'
| |     |     `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c11c850 'CHAR16 *'
| |     | `-TypedefType 0x55887c05e4c0 'CHAR16' sugar
| |     |   |-Typedef 0x55887c049c50 'CHAR16'
| |     |   `-BuiltinType 0x55887bfe9130 'unsigned short'
| |     `-PointerType 0x55887c0dde30 'EFI_GUID *'
| |       `-TypedefType 0x55887c0705c0 'EFI_GUID' sugar
| |         |-Typedef 0x55887c06c210 'EFI_GUID'
| |         `-TypedefType 0x55887c06c1e0 'GUID' sugar
| |           |-Typedef 0x55887c051a78 'GUID'
| |           `-ElaboratedType 0x55887c051a20 'struct GUID' sugar
| |             `-RecordType 0x55887c04a5b0 'GUID'
| |               `-Record 0x55887c04a528 ''
| `-FullComment 0x55887c3edd10 <line:60:1, line:86:94>
|   |-ParagraphComment 0x55887c3ed270 <line:60:1, col:41>
|   | `-TextComment 0x55887c3ed240 <col:1, col:41> Text="  Return the next variable name and GUID."
|   |-ParagraphComment 0x55887c3ed380 <line:62:1, line:67:28>
|   | |-TextComment 0x55887c3ed290 <line:62:1, col:69> Text="  This function is called multiple times to retrieve the VariableName"
|   | |-TextComment 0x55887c3ed2b0 <line:63:1, col:70> Text="  and VariableGuid of all variables currently available in the system."
|   | |-TextComment 0x55887c3ed2d0 <line:64:1, col:67> Text="  On each call, the previous results are passed into the interface,"
|   | |-TextComment 0x55887c3ed2f0 <line:65:1, col:61> Text="  and, on return, the interface returns the data for the next"
|   | |-TextComment 0x55887c3ed310 <line:66:1, col:61> Text="  interface. When the entire variable list has been returned,"
|   | `-TextComment 0x55887c3ed330 <line:67:1, col:28> Text="  EFI_NOT_FOUND is returned."
|   |-ParagraphComment 0x55887c3ed3d0 <line:69:1, col:2>
|   | `-TextComment 0x55887c3ed3a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ed3f0 <col:3, col:94> [in] implicitly Param="This" ParamIndex=0
|   | `-ParagraphComment 0x55887c3ed480 <col:15, col:94>
|   |   `-TextComment 0x55887c3ed450 <col:15, col:94> Text="              A pointer to this instance of the EFI_PEI_READ_ONLY_VARIABLE2_PPI."
|   |-ParagraphComment 0x55887c3ed4d0 <line:71:1, col:2>
|   | `-TextComment 0x55887c3ed4a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ed4f0 <col:3, line:73:2> [in] implicitly Param="VariableNameSize" ParamIndex=1
|   | `-ParagraphComment 0x55887c3ed5e0 <line:71:27, line:73:2>
|   |   |-TextComment 0x55887c3ed560 <line:71:27, col:98> Text="  On entry, points to the size of the buffer pointed to by VariableName."
|   |   |-TextComment 0x55887c3ed580 <line:72:1, col:76> Text="                            On return, the size of the variable name buffer."
|   |   `-TextComment 0x55887c3ed5a0 <line:73:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ed600 <col:3, line:74:97> [in] implicitly Param="VariableName" ParamIndex=2
|   | `-ParagraphComment 0x55887c3ed6b0 <line:73:23, line:74:97>
|   |   |-TextComment 0x55887c3ed660 <line:73:23, col:104> Text="      On entry, a pointer to a null-terminated string that is the variable's name."
|   |   `-TextComment 0x55887c3ed680 <line:74:1, col:97> Text="                            On return, points to the next variable's null-terminated name string."
|   |-ParagraphComment 0x55887c3ed700 <line:76:1, col:2>
|   | `-TextComment 0x55887c3ed6d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ed720 <col:3, line:77:77> [in] implicitly Param="VariableGuid" ParamIndex=3
|   | `-ParagraphComment 0x55887c3ed7d0 <line:76:23, line:77:77>
|   |   |-TextComment 0x55887c3ed780 <line:76:23, col:91> Text="      On entry, a pointer to an EFI_GUID that is the variable's GUID."
|   |   `-TextComment 0x55887c3ed7a0 <line:77:1, col:77> Text="                            On return, a pointer to the next variable's GUID."
|   |-ParagraphComment 0x55887c3ed820 <line:79:1, col:2>
|   | `-TextComment 0x55887c3ed7f0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3ed840 <col:3, line:80:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3ed8e0 <line:79:22, line:80:2>
|   |   |-TextComment 0x55887c3ed890 <line:79:22, col:67> Text="           The variable was read successfully."
|   |   `-TextComment 0x55887c3ed8b0 <line:80:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3ed900 <col:3, line:81:2> Name="retval" Arg[0]="EFI_NOT_FOUND"
|   | `-ParagraphComment 0x55887c3ed9a0 <line:80:24, line:81:2>
|   |   |-TextComment 0x55887c3ed950 <line:80:24, col:64> Text="         The variable could not be found."
|   |   `-TextComment 0x55887c3ed970 <line:81:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3ed9c0 <col:3, line:84:2> Name="retval" Arg[0]="EFI_BUFFER_TOO_SMALL"
|   | `-ParagraphComment 0x55887c3edac0 <line:81:31, line:84:2>
|   |   |-TextComment 0x55887c3eda20 <line:81:31, col:83> Text="  The VariableNameSize is too small for the resulting"
|   |   |-TextComment 0x55887c3eda40 <line:82:1, col:79> Text="                                data. VariableNameSize is updated with the size"
|   |   |-TextComment 0x55887c3eda60 <line:83:1, col:68> Text="                                required for the specified variable."
|   |   `-TextComment 0x55887c3eda80 <line:84:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3edae0 <col:3, line:86:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c3edbc0 <line:84:32, line:86:2>
|   |   |-TextComment 0x55887c3edb40 <line:84:32, col:61> Text=" VariableName, VariableGuid or"
|   |   |-TextComment 0x55887c3edb60 <line:85:1, col:57> Text="                                VariableNameSize is NULL."
|   |   `-TextComment 0x55887c3edb80 <line:86:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3edbe0 <col:3, col:94> Name="retval" Arg[0]="EFI_DEVICE_ERROR"
|     `-ParagraphComment 0x55887c3edc70 <col:27, col:94>
|       `-TextComment 0x55887c3edc40 <col:27, col:94> Text="      The variable could not be retrieved because of a device error."
|-RecordDecl 0x55887c172f98 prev 0x55887c16ff88 <line:102:1, line:105:1> line:102:8 struct _EFI_PEI_READ_ONLY_VARIABLE2_PPI definition
| |-FullComment 0x55887c3ede00 <line:99:4, line:100:22>
| | `-ParagraphComment 0x55887c3eddd0 <line:99:4, line:100:22>
| |   |-TextComment 0x55887c3edd80 <line:99:4, col:70> Text=" This PPI provides a lightweight, read-only variant of the full EFI"
| |   `-TextComment 0x55887c3edda0 <line:100:4, col:22> Text=" variable services."
| |-FieldDecl 0x55887c173050 <line:103:3, col:38> col:38 referenced GetVariable 'EFI_PEI_GET_VARIABLE2':'EFI_STATUS (*)(const EFI_PEI_READ_ONLY_VARIABLE2_PPI *, const CHAR16 *, const EFI_GUID *, UINT32 *, UINTN *, void *)'
| `-FieldDecl 0x55887c1730d0 <line:104:3, col:38> col:38 NextVariableName 'EFI_PEI_GET_NEXT_VARIABLE_NAME2':'EFI_STATUS (*)(const EFI_PEI_READ_ONLY_VARIABLE2_PPI *, UINTN *, CHAR16 *, EFI_GUID *)'
|-VarDecl 0x55887c173130 <line:107:1, col:18> col:18 used gEfiPeiReadOnlyVariable2PpiGuid 'EFI_GUID':'GUID' extern
|-RecordDecl 0x55887c1731c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Ppi/Decompress.h:18:9, col:16> col:16 struct _EFI_PEI_DECOMPRESS_PPI
|-TypedefDecl 0x55887c1732c8 <col:1, col:40> col:40 referenced EFI_PEI_DECOMPRESS_PPI 'struct _EFI_PEI_DECOMPRESS_PPI':'struct _EFI_PEI_DECOMPRESS_PPI'
| `-ElaboratedType 0x55887c173270 'struct _EFI_PEI_DECOMPRESS_PPI' sugar
|   `-RecordType 0x55887c173250 'struct _EFI_PEI_DECOMPRESS_PPI'
|     `-Record 0x55887c173838 '_EFI_PEI_DECOMPRESS_PPI'
|-TypedefDecl 0x55887c1737b8 <line:45:1, line:52:3> line:47:10 referenced EFI_PEI_DECOMPRESS_DECOMPRESS 'EFI_STATUS (*)(const EFI_PEI_DECOMPRESS_PPI *, const EFI_COMPRESSION_SECTION *, void **, UINTN *)'
| |-PointerType 0x55887c173740 'EFI_STATUS (*)(const EFI_PEI_DECOMPRESS_PPI *, const EFI_COMPRESSION_SECTION *, void **, UINTN *)'
| | `-ParenType 0x55887c1736e0 'EFI_STATUS (const EFI_PEI_DECOMPRESS_PPI *, const EFI_COMPRESSION_SECTION *, void **, UINTN *)' sugar
| |   `-FunctionProtoType 0x55887c173690 'EFI_STATUS (const EFI_PEI_DECOMPRESS_PPI *, const EFI_COMPRESSION_SECTION *, void **, UINTN *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c1733b0 'const EFI_PEI_DECOMPRESS_PPI *'
| |     | `-QualType 0x55887c173361 'const EFI_PEI_DECOMPRESS_PPI' const
| |     |   `-TypedefType 0x55887c173360 'EFI_PEI_DECOMPRESS_PPI' sugar
| |     |     |-Typedef 0x55887c1732c8 'EFI_PEI_DECOMPRESS_PPI'
| |     |     `-ElaboratedType 0x55887c173270 'struct _EFI_PEI_DECOMPRESS_PPI' sugar
| |     |       `-RecordType 0x55887c173250 'struct _EFI_PEI_DECOMPRESS_PPI'
| |     |         `-Record 0x55887c173838 '_EFI_PEI_DECOMPRESS_PPI'
| |     |-PointerType 0x55887c1734a0 'const EFI_COMPRESSION_SECTION *'
| |     | `-QualType 0x55887c173451 'const EFI_COMPRESSION_SECTION' const
| |     |   `-TypedefType 0x55887c173450 'EFI_COMPRESSION_SECTION' sugar
| |     |     |-Typedef 0x55887c094b98 'EFI_COMPRESSION_SECTION'
| |     |     `-ElaboratedType 0x55887c094b40 'struct EFI_COMPRESSION_SECTION' sugar
| |     |       `-RecordType 0x55887c0948b0 'EFI_COMPRESSION_SECTION'
| |     |         `-Record 0x55887c090b18 ''
| |     |-PointerType 0x55887c164990 'void **'
| |     | `-PointerType 0x55887bfe9730 'void *'
| |     |   `-BuiltinType 0x55887bfe9010 'void'
| |     `-PointerType 0x55887c052800 'UINTN *'
| |       `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |         |-Typedef 0x55887c04a020 'UINTN'
| |         `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |           |-Typedef 0x55887c049930 'UINT64'
| |           `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c3ee700 <line:21:1, line:42:73>
|   |-ParagraphComment 0x55887c3edea0 <line:21:1, col:61>
|   | `-TextComment 0x55887c3ede70 <col:1, col:61> Text="  Decompress a single compression section in a firmware file."
|   |-ParagraphComment 0x55887c3edf40 <line:23:1, line:25:53>
|   | |-TextComment 0x55887c3edec0 <line:23:1, col:62> Text="  Decompresses the data in a compressed section and returns it"
|   | |-TextComment 0x55887c3edee0 <line:24:1, col:56> Text="  as a series of standard PI Firmware File Sections. The"
|   | `-TextComment 0x55887c3edf00 <line:25:1, col:53> Text="  required memory is allocated from permanent memory."
|   |-ParagraphComment 0x55887c3edf90 <line:27:1, col:2>
|   | `-TextComment 0x55887c3edf60 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3edfb0 <col:3, line:29:2> [in] implicitly Param="This" ParamIndex=0
|   | `-ParagraphComment 0x55887c3ee090 <line:27:14, line:29:2>
|   |   |-TextComment 0x55887c3ee010 <line:27:14, col:62> Text="                   Points to this instance of the"
|   |   |-TextComment 0x55887c3ee030 <line:28:1, col:59> Text="                                EFI_PEI_DECOMPRESS_PEI PPI."
|   |   `-TextComment 0x55887c3ee050 <line:29:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ee0b0 <col:3, line:30:2> [in] implicitly Param="InputSection" ParamIndex=1
|   | `-ParagraphComment 0x55887c3ee160 <line:29:22, line:30:2>
|   |   |-TextComment 0x55887c3ee110 <line:29:22, col:65> Text="           Points to the compressed section."
|   |   `-TextComment 0x55887c3ee130 <line:30:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ee180 <col:3, line:32:2> [in] implicitly Param="OutputBuffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c3ee260 <line:30:22, line:32:2>
|   |   |-TextComment 0x55887c3ee1e0 <line:30:22, col:65> Text="           Holds the returned pointer to the"
|   |   |-TextComment 0x55887c3ee200 <line:31:1, col:54> Text="                                decompressed sections."
|   |   `-TextComment 0x55887c3ee220 <line:32:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3ee280 <col:3, line:33:48> [in] implicitly Param="OutputSize" ParamIndex=3
|   | `-ParagraphComment 0x55887c3ee330 <line:32:20, line:33:48>
|   |   |-TextComment 0x55887c3ee2e0 <line:32:20, col:73> Text="             Holds the returned size of the decompress"
|   |   `-TextComment 0x55887c3ee300 <line:33:1, col:48> Text="                                section streams."
|   |-ParagraphComment 0x55887c3ee380 <line:35:1, col:2>
|   | `-TextComment 0x55887c3ee350 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3ee3a0 <col:3, line:39:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3ee4c0 <line:35:22, line:39:2>
|   |   |-TextComment 0x55887c3ee3f0 <line:35:22, col:60> Text="           The section was decompressed"
|   |   |-TextComment 0x55887c3ee410 <line:36:1, col:71> Text="                                successfully. OutputBuffer contains the"
|   |   |-TextComment 0x55887c3ee430 <line:37:1, col:70> Text="                                resulting data and OutputSize contains"
|   |   |-TextComment 0x55887c3ee450 <line:38:1, col:51> Text="                                the resulting size."
|   |   `-TextComment 0x55887c3ee470 <line:39:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3ee4e0 <col:3, line:41:2> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|   | `-ParagraphComment 0x55887c3ee5c0 <line:39:31, line:41:2>
|   |   |-TextComment 0x55887c3ee540 <line:39:31, col:61> Text="  Unable to allocate sufficient"
|   |   |-TextComment 0x55887c3ee560 <line:40:1, col:69> Text="                                memory to hold the decompressed data."
|   |   `-TextComment 0x55887c3ee580 <line:41:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3ee5e0 <col:3, line:42:73> Name="retval" Arg[0]="EFI_UNSUPPORTED"
|     `-ParagraphComment 0x55887c3ee680 <line:41:26, line:42:73>
|       |-TextComment 0x55887c3ee630 <line:41:26, col:62> Text="       The compression type specified"
|       `-TextComment 0x55887c3ee650 <line:42:1, col:73> Text="                                in the compression header is unsupported."
|-RecordDecl 0x55887c173838 prev 0x55887c1731c8 <line:60:1, line:62:1> line:60:8 struct _EFI_PEI_DECOMPRESS_PPI definition
| |-FullComment 0x55887c3ee840 <line:55:4, line:58:41>
| | `-ParagraphComment 0x55887c3ee810 <line:55:4, line:58:41>
| |   |-TextComment 0x55887c3ee770 <line:55:4, col:64> Text=" This PPI's single member function decompresses a compression"
| |   |-TextComment 0x55887c3ee790 <line:56:4, col:61> Text=" encapsulated section. It is used by the PEI Foundation to"
| |   |-TextComment 0x55887c3ee7b0 <line:57:4, col:67> Text=" process sectioned files. Prior to the installation of this PPI,"
| |   `-TextComment 0x55887c3ee7d0 <line:58:4, col:41> Text=" compression sections will be ignored."
| `-FieldDecl 0x55887c1738f0 <line:61:3, col:36> col:36 Decompress 'EFI_PEI_DECOMPRESS_DECOMPRESS':'EFI_STATUS (*)(const EFI_PEI_DECOMPRESS_PPI *, const EFI_COMPRESSION_SECTION *, void **, UINTN *)'
|-VarDecl 0x55887c173950 <line:64:1, col:18> col:18 used gEfiPeiDecompressPpiGuid 'EFI_GUID':'GUID' extern
|-RecordDecl 0x55887c1739e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Ppi/FirmwareVolumeInfo.h:18:9, col:16> col:16 struct _EFI_PEI_FIRMWARE_VOLUME_INFO_PPI
|-TypedefDecl 0x55887c1773c8 <col:1, col:50> col:50 EFI_PEI_FIRMWARE_VOLUME_INFO_PPI 'struct _EFI_PEI_FIRMWARE_VOLUME_INFO_PPI':'struct _EFI_PEI_FIRMWARE_VOLUME_INFO_PPI'
| `-ElaboratedType 0x55887c177370 'struct _EFI_PEI_FIRMWARE_VOLUME_INFO_PPI' sugar
|   `-RecordType 0x55887c173a70 'struct _EFI_PEI_FIRMWARE_VOLUME_INFO_PPI'
|     `-Record 0x55887c177460 '_EFI_PEI_FIRMWARE_VOLUME_INFO_PPI'
|-RecordDecl 0x55887c177460 prev 0x55887c1739e8 <line:26:1, line:55:1> line:26:8 struct _EFI_PEI_FIRMWARE_VOLUME_INFO_PPI definition
| |-FullComment 0x55887c3ee980 <line:21:4, line:24:35>
| | `-ParagraphComment 0x55887c3ee950 <line:21:4, line:24:35>
| |   |-TextComment 0x55887c3ee8b0 <line:21:4, col:69> Text="  This PPI describes the location and format of a firmware volume."
| |   |-TextComment 0x55887c3ee8d0 <line:22:4, col:71> Text="  The FvFormat can be EFI_FIRMWARE_FILE_SYSTEM2_GUID or the GUID for"
| |   |-TextComment 0x55887c3ee8f0 <line:23:4, col:66> Text="  a user-defined format. The  EFI_FIRMWARE_FILE_SYSTEM2_GUID is"
| |   `-TextComment 0x55887c3ee910 <line:24:4, col:35> Text="  the PI Firmware Volume format."
| |-FieldDecl 0x55887c177518 <line:30:3, col:15> col:15 FvFormat 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c3eea50 <line:28:6, col:75>
| |   `-ParagraphComment 0x55887c3eea20 <col:6, col:75>
| |     `-TextComment 0x55887c3ee9f0 <col:6, col:75> Text=" Unique identifier of the format of the memory-mapped firmware volume."
| |-FieldDecl 0x55887c1775b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Ppi/FirmwareVolumeInfo.h:37:16> col:16 FvInfo 'void *'
| | `-FullComment 0x55887c3eeb90 <line:32:6, line:35:29>
| |   `-ParagraphComment 0x55887c3eeb60 <line:32:6, line:35:29>
| |     |-TextComment 0x55887c3eeac0 <line:32:6, col:80> Text=" Points to a buffer which allows the EFI_PEI_FIRMWARE_VOLUME_PPI to process"
| |     |-TextComment 0x55887c3eeae0 <line:33:6, col:72> Text=" the volume. The format of this buffer is specific to the FvFormat."
| |     |-TextComment 0x55887c3eeb00 <line:34:6, col:81> Text=" For memory-mapped firmware volumes, this typically points to the first byte"
| |     `-TextComment 0x55887c3eeb20 <line:35:6, col:29> Text=" of the firmware volume."
| |-FieldDecl 0x55887c177638 <line:42:3, col:15> col:15 FvInfoSize 'UINT32':'unsigned int'
| | `-FullComment 0x55887c3eec80 <line:39:6, line:40:56>
| |   `-ParagraphComment 0x55887c3eec50 <line:39:6, line:40:56>
| |     |-TextComment 0x55887c3eec00 <line:39:6, col:78> Text=" Size of the data provided by FvInfo. For memory-mapped firmware volumes,"
| |     `-TextComment 0x55887c3eec20 <line:40:6, col:56> Text=" this is typically the size of the firmware volume."
| |-FieldDecl 0x55887c1776c8 <line:48:3, col:16> col:16 ParentFvName 'EFI_GUID *'
| | `-FullComment 0x55887c3eeda0 <line:44:6, line:46:79>
| |   `-ParagraphComment 0x55887c3eed70 <line:44:6, line:46:79>
| |     |-TextComment 0x55887c3eecf0 <line:44:6, col:77> Text=" If the firmware volume originally came from a firmware file, then these"
| |     |-TextComment 0x55887c3eed10 <line:45:6, col:72> Text=" point to the parent firmware volume name and firmware volume file."
| |     `-TextComment 0x55887c3eed30 <line:46:6, col:79> Text=" If it did not originally come from a firmware file, these should be NULL."
| `-FieldDecl 0x55887c177758 <line:54:3, col:16> col:16 ParentFileName 'EFI_GUID *'
|   `-FullComment 0x55887c3eeec0 <line:50:6, line:52:79>
|     `-ParagraphComment 0x55887c3eee90 <line:50:6, line:52:79>
|       |-TextComment 0x55887c3eee10 <line:50:6, col:77> Text=" If the firmware volume originally came from a firmware file, then these"
|       |-TextComment 0x55887c3eee30 <line:51:6, col:72> Text=" point to the parent firmware volume name and firmware volume file."
|       `-TextComment 0x55887c3eee50 <line:52:6, col:79> Text=" If it did not originally come from a firmware file, these should be NULL."
|-VarDecl 0x55887c1777b8 <line:57:1, col:18> col:18 gEfiPeiFirmwareVolumeInfoPpiGuid 'EFI_GUID':'GUID' extern
|-RecordDecl 0x55887c177848 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Ppi/GuidedSectionExtraction.h:31:9, col:16> col:16 struct _EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI
|-TypedefDecl 0x55887c177948 <col:1, col:55> col:55 referenced EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI 'struct _EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI':'struct _EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI'
| `-ElaboratedType 0x55887c1778f0 'struct _EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI' sugar
|   `-RecordType 0x55887c1778d0 'struct _EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI'
|     `-Record 0x55887c177ec8 '_EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI'
|-TypedefDecl 0x55887c177e40 <line:72:1, line:80:3> line:74:10 referenced EFI_PEI_EXTRACT_GUIDED_SECTION 'EFI_STATUS (*)(const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI *, const void *, void **, UINTN *, UINT32 *)'
| |-PointerType 0x55887c177dc0 'EFI_STATUS (*)(const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI *, const void *, void **, UINTN *, UINT32 *)'
| | `-ParenType 0x55887c177d60 'EFI_STATUS (const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI *, const void *, void **, UINTN *, UINT32 *)' sugar
| |   `-FunctionProtoType 0x55887c177d10 'EFI_STATUS (const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI *, const void *, void **, UINTN *, UINT32 *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c177a30 'const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI *'
| |     | `-QualType 0x55887c1779e1 'const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI' const
| |     |   `-TypedefType 0x55887c1779e0 'EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI' sugar
| |     |     |-Typedef 0x55887c177948 'EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI'
| |     |     `-ElaboratedType 0x55887c1778f0 'struct _EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI' sugar
| |     |       `-RecordType 0x55887c1778d0 'struct _EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI'
| |     |         `-Record 0x55887c177ec8 '_EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI'
| |     |-PointerType 0x55887c1299b0 'const void *'
| |     | `-QualType 0x55887bfe9011 'const void' const
| |     |   `-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887c164990 'void **'
| |     | `-PointerType 0x55887bfe9730 'void *'
| |     |   `-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887c052800 'UINTN *'
| |     | `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |   |-Typedef 0x55887c04a020 'UINTN'
| |     |   `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |     |-Typedef 0x55887c049930 'UINT64'
| |     |     `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-PointerType 0x55887c12dee0 'UINT32 *'
| |       `-TypedefType 0x55887c04a5d0 'UINT32' sugar
| |         |-Typedef 0x55887c049a70 'UINT32'
| |         `-BuiltinType 0x55887bfe9150 'unsigned int'
| `-FullComment 0x55887c3f0b00 <line:34:1, line:70:62>
|   |-ParagraphComment 0x55887c3eef80 <line:34:1, line:35:39>
|   | |-TextComment 0x55887c3eef30 <line:34:1, col:68> Text="  Processes the input section and returns the data contained therein"
|   | `-TextComment 0x55887c3eef50 <line:35:1, col:39> Text="  along with the authentication status."
|   |-ParagraphComment 0x55887c3f0100 <line:37:1, line:44:28>
|   | |-TextComment 0x55887c3eefa0 <line:37:1, col:63> Text="  The ExtractSection() function processes the input section and"
|   | |-TextComment 0x55887c3eefc0 <line:38:1, col:65> Text="  returns a pointer to the section contents. If the section being"
|   | |-TextComment 0x55887c3eefe0 <line:39:1, col:55> Text="  extracted does not require processing (if the section"
|   | |-TextComment 0x55887c3ef000 <line:40:1, col:40> Text="  GuidedSectionHeader.Attributes has the"
|   | |-TextComment 0x55887c3ef020 <line:41:1, col:61> Text="  EFI_GUIDED_SECTION_PROCESSING_REQUIRED field cleared), then"
|   | |-TextComment 0x55887c3ef040 <line:42:1, col:59> Text="  OutputBuffer is just updated to point to the start of the"
|   | |-TextComment 0x55887c3ef060 <line:43:1, col:58> Text="  section's contents. Otherwise, *Buffer must be allocated"
|   | `-TextComment 0x55887c3ef080 <line:44:1, col:28> Text="  from PEI permanent memory."
|   |-ParagraphComment 0x55887c3f0150 <line:46:1, col:2>
|   | `-TextComment 0x55887c3f0120 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f0170 <col:3, line:48:2> [in] implicitly Param="This" ParamIndex=0
|   | `-ParagraphComment 0x55887c3f0250 <line:46:14, line:48:2>
|   |   |-TextComment 0x55887c3f01d0 <line:46:14, col:83> Text="                   Indicates the EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI"
|   |   |-TextComment 0x55887c3f01f0 <line:47:1, col:41> Text="                                instance."
|   |   `-TextComment 0x55887c3f0210 <line:48:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f0270 <col:3, line:50:2> [in] implicitly Param="InputSection" ParamIndex=1
|   | `-ParagraphComment 0x55887c3f0350 <line:48:22, line:50:2>
|   |   |-TextComment 0x55887c3f02d0 <line:48:22, col:80> Text="           Buffer containing the input GUIDed section to be"
|   |   |-TextComment 0x55887c3f02f0 <line:49:1, col:42> Text="                                processed."
|   |   `-TextComment 0x55887c3f0310 <line:50:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f0370 <col:3, line:52:2> [in] implicitly Param="OutputBuffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c3f0450 <line:50:22, line:52:2>
|   |   |-TextComment 0x55887c3f03d0 <line:50:22, col:84> Text="           *OutputBuffer is allocated from PEI permanent memory"
|   |   |-TextComment 0x55887c3f03f0 <line:51:1, col:68> Text="                                and contains the new section stream."
|   |   `-TextComment 0x55887c3f0410 <line:52:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f0470 <col:3, line:56:2> [in] implicitly Param="OutputSize" ParamIndex=3
|   | `-ParagraphComment 0x55887c3f05a0 <line:52:20, line:56:2>
|   |   |-TextComment 0x55887c3f04d0 <line:52:20, col:78> Text="             A pointer to a caller-allocated UINTN in which"
|   |   |-TextComment 0x55887c3f04f0 <line:53:1, col:79> Text="                                the size of *OutputBuffer allocation is stored."
|   |   |-TextComment 0x55887c3f0510 <line:54:1, col:75> Text="                                If the function returns anything other than"
|   |   |-TextComment 0x55887c3f0530 <line:55:1, col:83> Text="                                EFI_SUCCESS, the value of *OutputSize is undefined."
|   |   `-TextComment 0x55887c3f0550 <line:56:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f05c0 <col:3, line:64:80> [in] implicitly Param="AuthenticationStatus" ParamIndex=4
|   | `-ParagraphComment 0x55887c3f07a0 <line:56:30, line:64:80>
|   |   |-TextComment 0x55887c3f0630 <line:56:30, col:85> Text="   A pointer to a caller-allocated UINT32 that indicates"
|   |   |-TextComment 0x55887c3f0650 <line:57:1, col:79> Text="                                the authentication status of the output buffer."
|   |   |-TextComment 0x55887c3f0670 <line:58:1, col:54> Text="                                If the input section's"
|   |   |-TextComment 0x55887c3f0690 <line:59:1, col:76> Text="                                GuidedSectionHeader.Attributes field has the"
|   |   |-TextComment 0x55887c3f06b0 <line:60:1, col:82> Text="                                EFI_GUIDED_SECTION_AUTH_STATUS_VALID bit as clear,"
|   |   |-TextComment 0x55887c3f06d0 <line:61:34, col:82> Text="AuthenticationStatus must return zero. These bits"
|   |   |-TextComment 0x55887c3f06f0 <line:62:1, col:79> Text="                                reflect the status of the extraction operation."
|   |   |-TextComment 0x55887c3f0710 <line:63:1, col:88> Text="                                If the function returns anything other than EFI_SUCCESS,"
|   |   `-TextComment 0x55887c3f0730 <line:64:1, col:80> Text="                                the value of *AuthenticationStatus is undefined."
|   |-ParagraphComment 0x55887c3f07f0 <line:66:1, col:2>
|   | `-TextComment 0x55887c3f07c0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f0810 <col:3, line:68:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3f08e0 <line:66:22, line:68:2>
|   |   |-TextComment 0x55887c3f0860 <line:66:22, col:83> Text="           The InputSection was successfully processed and the"
|   |   |-TextComment 0x55887c3f0880 <line:67:1, col:63> Text="                                section contents were returned."
|   |   `-TextComment 0x55887c3f08a0 <line:68:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f0900 <col:3, line:69:2> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|   | `-ParagraphComment 0x55887c3f09b0 <line:68:31, line:69:2>
|   |   |-TextComment 0x55887c3f0960 <line:68:31, col:93> Text="  The system has insufficient resources to process the request."
|   |   `-TextComment 0x55887c3f0980 <line:69:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3f09d0 <col:3, line:70:62> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c3f0a80 <line:69:32, line:70:62>
|       |-TextComment 0x55887c3f0a30 <line:69:32, col:92> Text=" The GUID in InputSection does not match this instance of the"
|       `-TextComment 0x55887c3f0a50 <line:70:1, col:62> Text="                                GUIDed Section Extraction PPI."
|-RecordDecl 0x55887c177ec8 prev 0x55887c177848 <line:89:1, line:91:1> line:89:8 struct _EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI definition
| |-FullComment 0x55887c3f0c70 <line:83:4, line:87:12>
| | `-ParagraphComment 0x55887c3f0c40 <line:83:4, line:87:12>
| |   |-TextComment 0x55887c3f0b70 <line:83:4, col:75> Text=" If a GUID-defined section is encountered when doing section extraction,"
| |   |-TextComment 0x55887c3f0b90 <line:84:4, col:62> Text=" the PEI Foundation or the EFI_PEI_FILE_LOADER_PPI instance"
| |   |-TextComment 0x55887c3f0bb0 <line:85:4, col:56> Text=" calls the appropriate instance of the GUIDed Section"
| |   |-TextComment 0x55887c3f0bd0 <line:86:4, col:58> Text=" Extraction PPI to extract the section stream contained"
| |   `-TextComment 0x55887c3f0bf0 <line:87:4, col:12> Text=" therein."
| `-FieldDecl 0x55887c177f80 <line:90:3, col:37> col:37 ExtractSection 'EFI_PEI_EXTRACT_GUIDED_SECTION':'EFI_STATUS (*)(const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI *, const void *, void **, UINTN *, UINT32 *)'
|-RecordDecl 0x55887c177ff8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Ppi/LoadFile.h:18:9, col:16> col:16 struct _EFI_PEI_LOAD_FILE_PPI
|-TypedefDecl 0x55887c1780f8 <col:1, col:39> col:39 referenced EFI_PEI_LOAD_FILE_PPI 'struct _EFI_PEI_LOAD_FILE_PPI':'struct _EFI_PEI_LOAD_FILE_PPI'
| `-ElaboratedType 0x55887c1780a0 'struct _EFI_PEI_LOAD_FILE_PPI' sugar
|   `-RecordType 0x55887c178080 'struct _EFI_PEI_LOAD_FILE_PPI'
|     `-Record 0x55887c17b7f8 '_EFI_PEI_LOAD_FILE_PPI'
|-TypedefDecl 0x55887c17b778 <line:48:1, line:57:3> line:50:10 referenced EFI_PEI_LOAD_FILE 'EFI_STATUS (*)(const EFI_PEI_LOAD_FILE_PPI *, EFI_PEI_FILE_HANDLE, EFI_PHYSICAL_ADDRESS *, UINT64 *, EFI_PHYSICAL_ADDRESS *, UINT32 *)'
| |-PointerType 0x55887c17b6f0 'EFI_STATUS (*)(const EFI_PEI_LOAD_FILE_PPI *, EFI_PEI_FILE_HANDLE, EFI_PHYSICAL_ADDRESS *, UINT64 *, EFI_PHYSICAL_ADDRESS *, UINT32 *)'
| | `-ParenType 0x55887c17b690 'EFI_STATUS (const EFI_PEI_LOAD_FILE_PPI *, EFI_PEI_FILE_HANDLE, EFI_PHYSICAL_ADDRESS *, UINT64 *, EFI_PHYSICAL_ADDRESS *, UINT32 *)' sugar
| |   `-FunctionProtoType 0x55887c17b630 'EFI_STATUS (const EFI_PEI_LOAD_FILE_PPI *, EFI_PEI_FILE_HANDLE, EFI_PHYSICAL_ADDRESS *, UINT64 *, EFI_PHYSICAL_ADDRESS *, UINT32 *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c1781e0 'const EFI_PEI_LOAD_FILE_PPI *'
| |     | `-QualType 0x55887c178191 'const EFI_PEI_LOAD_FILE_PPI' const
| |     |   `-TypedefType 0x55887c178190 'EFI_PEI_LOAD_FILE_PPI' sugar
| |     |     |-Typedef 0x55887c1780f8 'EFI_PEI_LOAD_FILE_PPI'
| |     |     `-ElaboratedType 0x55887c1780a0 'struct _EFI_PEI_LOAD_FILE_PPI' sugar
| |     |       `-RecordType 0x55887c178080 'struct _EFI_PEI_LOAD_FILE_PPI'
| |     |         `-Record 0x55887c17b7f8 '_EFI_PEI_LOAD_FILE_PPI'
| |     |-TypedefType 0x55887c15fdf0 'EFI_PEI_FILE_HANDLE' sugar
| |     | |-Typedef 0x55887c10b3a0 'EFI_PEI_FILE_HANDLE'
| |     | `-PointerType 0x55887bfe9730 'void *'
| |     |   `-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887c168140 'EFI_PHYSICAL_ADDRESS *'
| |     | `-TypedefType 0x55887c09add0 'EFI_PHYSICAL_ADDRESS' sugar
| |     |   |-Typedef 0x55887c06c5c8 'EFI_PHYSICAL_ADDRESS'
| |     |   `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |     |-Typedef 0x55887c049930 'UINT64'
| |     |     `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c11d970 'UINT64 *'
| |     | `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |   |-Typedef 0x55887c049930 'UINT64'
| |     |   `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c168140 'EFI_PHYSICAL_ADDRESS *'
| |     | `-TypedefType 0x55887c09add0 'EFI_PHYSICAL_ADDRESS' sugar
| |     |   |-Typedef 0x55887c06c5c8 'EFI_PHYSICAL_ADDRESS'
| |     |   `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |     |-Typedef 0x55887c049930 'UINT64'
| |     |     `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-PointerType 0x55887c12dee0 'UINT32 *'
| |       `-TypedefType 0x55887c04a5d0 'UINT32' sugar
| |         |-Typedef 0x55887c049a70 'UINT32'
| |         `-BuiltinType 0x55887bfe9150 'unsigned int'
| `-FullComment 0x55887c3f19d0 <line:21:1, line:45:87>
|   |-ParagraphComment 0x55887c3f0d10 <line:21:1, col:52>
|   | `-TextComment 0x55887c3f0ce0 <col:1, col:52> Text="  Loads a PEIM into memory for subsequent execution."
|   |-ParagraphComment 0x55887c3f0d80 <line:23:1, line:24:78>
|   | |-TextComment 0x55887c3f0d30 <line:23:1, col:66> Text="  This service is the single member function of EFI_LOAD_FILE_PPI."
|   | `-TextComment 0x55887c3f0d50 <line:24:1, col:78> Text="  This service separates image loading and relocating from the PEI Foundation."
|   |-ParagraphComment 0x55887c3f0dd0 <line:26:1, col:2>
|   | `-TextComment 0x55887c3f0da0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f0df0 <col:3, line:28:2> [in] implicitly Param="This" ParamIndex=0
|   | `-ParagraphComment 0x55887c3f0ed0 <line:26:14, line:28:2>
|   |   |-TextComment 0x55887c3f0e50 <line:26:14, col:65> Text="                   Interface pointer that implements"
|   |   |-TextComment 0x55887c3f0e70 <line:27:1, col:59> Text="                                the Load File PPI instance."
|   |   `-TextComment 0x55887c3f0e90 <line:28:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f0ef0 <col:3, line:29:2> [in] implicitly Param="FileHandle" ParamIndex=1
|   | `-ParagraphComment 0x55887c3f0fa0 <line:28:20, line:29:2>
|   |   |-TextComment 0x55887c3f0f50 <line:28:20, col:64> Text="             File handle of the file to load."
|   |   `-TextComment 0x55887c3f0f70 <line:29:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f0fc0 <col:3, line:30:2> [in] implicitly Param="ImageAddress" ParamIndex=2
|   | `-ParagraphComment 0x55887c3f1070 <line:29:22, line:30:2>
|   |   |-TextComment 0x55887c3f1020 <line:29:22, col:75> Text="           Pointer to the address of the loaded image."
|   |   `-TextComment 0x55887c3f1040 <line:30:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f1090 <col:3, line:31:2> [in] implicitly Param="ImageSize" ParamIndex=3
|   | `-ParagraphComment 0x55887c3f1140 <line:30:19, line:31:2>
|   |   |-TextComment 0x55887c3f10f0 <line:30:19, col:72> Text="              Pointer to the size of the loaded image."
|   |   `-TextComment 0x55887c3f1110 <line:31:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f1160 <col:3, line:32:2> [in] implicitly Param="EntryPoint" ParamIndex=4
|   | `-ParagraphComment 0x55887c3f1210 <line:31:20, line:32:2>
|   |   |-TextComment 0x55887c3f11c0 <line:31:20, col:72> Text="             Pointer to the entry point of the image."
|   |   `-TextComment 0x55887c3f11e0 <line:32:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f1230 <col:3, line:34:69> [in] implicitly Param="AuthenticationState" ParamIndex=5
|   | `-ParagraphComment 0x55887c3f1320 <line:32:29, line:34:69>
|   |   |-TextComment 0x55887c3f12a0 <line:32:29, col:66> Text="    On exit, points to the attestation"
|   |   |-TextComment 0x55887c3f12c0 <line:33:1, col:65> Text="                                authentication state of the image"
|   |   `-TextComment 0x55887c3f12e0 <line:34:1, col:69> Text="                                or 0 if no attestation was performed."
|   |-ParagraphComment 0x55887c3f1370 <line:36:1, col:2>
|   | `-TextComment 0x55887c3f1340 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f1390 <col:3, line:37:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3f1430 <line:36:22, line:37:2>
|   |   |-TextComment 0x55887c3f13e0 <line:36:22, col:66> Text="           The image was loaded successfully."
|   |   `-TextComment 0x55887c3f1400 <line:37:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f1450 <col:3, line:38:2> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|   | `-ParagraphComment 0x55887c3f1500 <line:37:31, line:38:2>
|   |   |-TextComment 0x55887c3f14b0 <line:37:31, col:60> Text="  There was not enough memory."
|   |   `-TextComment 0x55887c3f14d0 <line:38:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f1520 <col:3, line:39:2> Name="retval" Arg[0]="EFI_LOAD_ERROR"
|   | `-ParagraphComment 0x55887c3f15c0 <line:38:25, line:39:2>
|   |   |-TextComment 0x55887c3f1570 <line:38:25, col:73> Text="        There was no supported image in the file."
|   |   `-TextComment 0x55887c3f1590 <line:39:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f15e0 <col:3, line:40:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c3f1690 <line:39:32, line:40:2>
|   |   |-TextComment 0x55887c3f1640 <line:39:32, col:80> Text=" FileHandle was not a valid firmware file handle."
|   |   `-TextComment 0x55887c3f1660 <line:40:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f16b0 <col:3, line:41:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c3f1760 <line:40:32, line:41:2>
|   |   |-TextComment 0x55887c3f1710 <line:40:32, col:52> Text=" EntryPoint was NULL."
|   |   `-TextComment 0x55887c3f1730 <line:41:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f1780 <col:3, line:43:2> Name="retval" Arg[0]="EFI_UNSUPPORTED"
|   | `-ParagraphComment 0x55887c3f1850 <line:41:26, line:43:2>
|   |   |-TextComment 0x55887c3f17d0 <line:41:26, col:71> Text="       An image requires relocations or is not"
|   |   |-TextComment 0x55887c3f17f0 <line:42:1, col:46> Text="                                memory mapped."
|   |   `-TextComment 0x55887c3f1810 <line:43:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3f1870 <col:3, line:45:87> Name="retval" Arg[0]="EFI_WARN_BUFFER_TOO_SMALL"
|     `-ParagraphComment 0x55887c3f1920 <line:44:1, line:45:87>
|       |-TextComment 0x55887c3f18d0 <line:44:1, col:88> Text="                                There is not enough heap to allocate the requested size."
|       `-TextComment 0x55887c3f18f0 <line:45:1, col:87> Text="                                This will not prevent the XIP image from being invoked."
|-RecordDecl 0x55887c17b7f8 prev 0x55887c177ff8 <line:64:1, line:66:1> line:64:8 struct _EFI_PEI_LOAD_FILE_PPI definition
| |-FullComment 0x55887c3f1af0 <line:60:4, line:62:64>
| | `-ParagraphComment 0x55887c3f1ac0 <line:60:4, line:62:64>
| |   |-TextComment 0x55887c3f1a40 <line:60:4, col:51> Text=" This PPI is a pointer to the Load File service."
| |   |-TextComment 0x55887c3f1a60 <line:61:4, col:64> Text=" This service will be published by a PEIM. The PEI Foundation"
| |   `-TextComment 0x55887c3f1a80 <line:62:4, col:64> Text=" will use this service to launch the known PEI module images."
| `-FieldDecl 0x55887c17b8b0 <line:65:3, col:24> col:24 referenced LoadFile 'EFI_PEI_LOAD_FILE':'EFI_STATUS (*)(const EFI_PEI_LOAD_FILE_PPI *, EFI_PEI_FILE_HANDLE, EFI_PHYSICAL_ADDRESS *, UINT64 *, EFI_PHYSICAL_ADDRESS *, UINT32 *)'
|-VarDecl 0x55887c17b910 <line:68:1, col:18> col:18 used gEfiPeiLoadFilePpiGuid 'EFI_GUID':'GUID' extern
|-RecordDecl 0x55887c17ba08 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Ppi/S3Resume2.h:33:9, col:16> col:16 struct _EFI_PEI_S3_RESUME2_PPI
|-TypedefDecl 0x55887c17bb08 <col:1, col:40> col:40 referenced EFI_PEI_S3_RESUME2_PPI 'struct _EFI_PEI_S3_RESUME2_PPI':'struct _EFI_PEI_S3_RESUME2_PPI'
| |-ElaboratedType 0x55887c17bab0 'struct _EFI_PEI_S3_RESUME2_PPI' sugar
| | `-RecordType 0x55887c17ba90 'struct _EFI_PEI_S3_RESUME2_PPI'
| |   `-Record 0x55887c17be38 '_EFI_PEI_S3_RESUME2_PPI'
| `-FullComment 0x55887c3f1bc0 <line:31:4, col:49>
|   `-ParagraphComment 0x55887c3f1b90 <col:4, col:49>
|     `-TextComment 0x55887c3f1b60 <col:4, col:49> Text=" Forward declaration for EFI_PEI_S3_RESUME_PPI"
|-TypedefDecl 0x55887c17bdb0 <line:66:1, line:70:3> line:68:10 referenced EFI_PEI_S3_RESUME_PPI_RESTORE_CONFIG2 'EFI_STATUS (*)(EFI_PEI_S3_RESUME2_PPI *)'
| |-PointerType 0x55887c17bd50 'EFI_STATUS (*)(EFI_PEI_S3_RESUME2_PPI *)'
| | `-ParenType 0x55887c17bcf0 'EFI_STATUS (EFI_PEI_S3_RESUME2_PPI *)' sugar
| |   `-FunctionProtoType 0x55887c17bcc0 'EFI_STATUS (EFI_PEI_S3_RESUME2_PPI *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     `-PointerType 0x55887c17bbf0 'EFI_PEI_S3_RESUME2_PPI *'
| |       `-TypedefType 0x55887c17bba0 'EFI_PEI_S3_RESUME2_PPI' sugar
| |         |-Typedef 0x55887c17bb08 'EFI_PEI_S3_RESUME2_PPI'
| |         `-ElaboratedType 0x55887c17bab0 'struct _EFI_PEI_S3_RESUME2_PPI' sugar
| |           `-RecordType 0x55887c17ba90 'struct _EFI_PEI_S3_RESUME2_PPI'
| |             `-Record 0x55887c17be38 '_EFI_PEI_S3_RESUME2_PPI'
| `-FullComment 0x55887c3f22d0 <line:36:1, line:63:64>
|   |-ParagraphComment 0x55887c3f1c80 <line:36:1, line:37:32>
|   | |-TextComment 0x55887c3f1c30 <line:36:1, col:73> Text="  Restores the platform to its preboot configuration for an S3 resume and"
|   | `-TextComment 0x55887c3f1c50 <line:37:1, col:32> Text="  jumps to the OS waking vector."
|   |-ParagraphComment 0x55887c3f1dc0 <line:39:1, line:45:41>
|   | |-TextComment 0x55887c3f1ca0 <line:39:1, col:80> Text="  This function will restore the platform to its pre-boot configuration that was"
|   | |-TextComment 0x55887c3f1cc0 <line:40:1, col:79> Text="  pre-stored in the boot script table and transfer control to OS waking vector."
|   | |-TextComment 0x55887c3f1ce0 <line:41:1, col:74> Text="  Upon invocation, this function is responsible for locating the following"
|   | |-TextComment 0x55887c3f1d00 <line:42:1, col:49> Text="  information before jumping to OS waking vector:"
|   | |-TextComment 0x55887c3f1d20 <line:43:1, col:17> Text="    - ACPI tables"
|   | |-TextComment 0x55887c3f1d40 <line:44:1, col:23> Text="    - boot script table"
|   | `-TextComment 0x55887c3f1d60 <line:45:1, col:41> Text="    - any other information that it needs"
|   |-ParagraphComment 0x55887c3f1fa0 <line:47:1, line:57:38>
|   | |-TextComment 0x55887c3f1de0 <line:47:1, col:79> Text="  The S3RestoreConfig() function then executes the pre-stored boot script table"
|   | |-TextComment 0x55887c3f1e00 <line:48:1, col:81> Text="  and transitions the platform to the pre-boot state. The boot script is recorded"
|   | |-TextComment 0x55887c3f1e20 <line:49:1, col:70> Text="  during regular boot using the EFI_S3_SAVE_STATE_PROTOCOL.Write() and"
|   | |-TextComment 0x55887c3f1e40 <line:50:1, col:75> Text="  EFI_S3_SMM_SAVE_STATE_PROTOCOL.Write() functions.  Finally, this function"
|   | |-TextComment 0x55887c3f1e60 <line:51:1, col:80> Text="  transfers control to the OS waking vector. If the OS supports only a real-mode"
|   | |-TextComment 0x55887c3f1e80 <line:52:1, col:77> Text="  waking vector, this function will switch from flat mode to real mode before"
|   | |-TextComment 0x55887c3f1ea0 <line:53:1, col:76> Text="  jumping to the waking vector.  If all platform pre-boot configurations are"
|   | |-TextComment 0x55887c3f1ec0 <line:54:1, col:74> Text="  successfully restored and all other necessary information is ready, this"
|   | |-TextComment 0x55887c3f1ee0 <line:55:1, col:76> Text="  function will never return and instead will directly jump to the OS waking"
|   | |-TextComment 0x55887c3f1f00 <line:56:1, col:75> Text="  vector. If this function returns, it indicates that the attempt to resume"
|   | `-TextComment 0x55887c3f1f20 <line:57:1, col:38> Text="  from the ACPI S3 sleep state failed."
|   |-ParagraphComment 0x55887c3f1ff0 <line:59:1, col:2>
|   | `-TextComment 0x55887c3f1fc0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f2010 <col:3, col:69> [in] explicitly Param="This" ParamIndex=0
|   | `-ParagraphComment 0x55887c3f20a0 <col:18, col:69>
|   |   `-TextComment 0x55887c3f2070 <col:18, col:69> Text="   Pointer to this instance of the PEI_S3_RESUME_PPI"
|   |-ParagraphComment 0x55887c3f20f0 <line:61:1, col:2>
|   | `-TextComment 0x55887c3f20c0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f2110 <col:3, line:62:2> Name="retval" Arg[0]="EFI_ABORTED"
|   | `-ParagraphComment 0x55887c3f21b0 <line:61:22, line:62:2>
|   |   |-TextComment 0x55887c3f2160 <line:61:22, col:78> Text="     Execution of the S3 resume boot script table failed."
|   |   `-TextComment 0x55887c3f2180 <line:62:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3f21d0 <col:3, line:63:64> Name="retval" Arg[0]="EFI_NOT_FOUND"
|     `-ParagraphComment 0x55887c3f2270 <line:62:24, line:63:64>
|       |-TextComment 0x55887c3f2220 <line:62:24, col:76> Text="   Some necessary information that is used for the S3"
|       `-TextComment 0x55887c3f2240 <line:63:1, col:64> Text="                          resume boot path could not be located."
|-RecordDecl 0x55887c17be38 prev 0x55887c17ba08 <line:76:1, line:82:1> line:76:8 struct _EFI_PEI_S3_RESUME2_PPI definition
| |-FullComment 0x55887c3f23c0 <line:73:1, line:74:35>
| | `-ParagraphComment 0x55887c3f2390 <line:73:1, line:74:35>
| |   |-TextComment 0x55887c3f2340 <line:73:1, col:65> Text="  EFI_PEI_S3_RESUME2_PPI accomplishes the firmware S3 resume boot"
| |   `-TextComment 0x55887c3f2360 <line:74:1, col:35> Text="  path and transfers control to OS."
| `-FieldDecl 0x55887c17bf20 <line:81:3, col:44> col:44 referenced S3RestoreConfig2 'EFI_PEI_S3_RESUME_PPI_RESTORE_CONFIG2':'EFI_STATUS (*)(EFI_PEI_S3_RESUME2_PPI *)'
|   `-FullComment 0x55887c3f24b0 <line:78:6, line:79:36>
|     `-ParagraphComment 0x55887c3f2480 <line:78:6, line:79:36>
|       |-TextComment 0x55887c3f2430 <line:78:6, col:77> Text=" Restores the platform to its preboot configuration for an S3 resume and"
|       `-TextComment 0x55887c3f2450 <line:79:6, col:36> Text=" jumps to the OS waking vector."
|-VarDecl 0x55887c17bf80 <line:84:1, col:18> col:18 used gEfiPeiS3Resume2PpiGuid 'EFI_GUID':'GUID' extern
|-RecordDecl 0x55887c17c018 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Ppi/RecoveryModule.h:51:9, col:16> col:16 struct _EFI_PEI_RECOVERY_MODULE_PPI
|-TypedefDecl 0x55887c17c118 <col:1, col:45> col:45 referenced EFI_PEI_RECOVERY_MODULE_PPI 'struct _EFI_PEI_RECOVERY_MODULE_PPI':'struct _EFI_PEI_RECOVERY_MODULE_PPI'
| `-ElaboratedType 0x55887c17c0c0 'struct _EFI_PEI_RECOVERY_MODULE_PPI' sugar
|   `-RecordType 0x55887c17c0a0 'struct _EFI_PEI_RECOVERY_MODULE_PPI'
|     `-Record 0x55887c17e378 '_EFI_PEI_RECOVERY_MODULE_PPI'
|-TypedefDecl 0x55887c17e2f0 <line:65:1, line:70:3> line:67:10 referenced EFI_PEI_LOAD_RECOVERY_CAPSULE 'EFI_STATUS (*)(EFI_PEI_SERVICES **, EFI_PEI_RECOVERY_MODULE_PPI *)'
| |-PointerType 0x55887c17c400 'EFI_STATUS (*)(EFI_PEI_SERVICES **, EFI_PEI_RECOVERY_MODULE_PPI *)'
| | `-ParenType 0x55887c17c3a0 'EFI_STATUS (EFI_PEI_SERVICES **, EFI_PEI_RECOVERY_MODULE_PPI *)' sugar
| |   `-FunctionProtoType 0x55887c17c360 'EFI_STATUS (EFI_PEI_SERVICES **, EFI_PEI_RECOVERY_MODULE_PPI *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c0dd8d0 'EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c160110 'EFI_PEI_SERVICES *'
| |     |   `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |     |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |     `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |       `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |         `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     `-PointerType 0x55887c17c280 'EFI_PEI_RECOVERY_MODULE_PPI *'
| |       `-TypedefType 0x55887c17c230 'EFI_PEI_RECOVERY_MODULE_PPI' sugar
| |         |-Typedef 0x55887c17c118 'EFI_PEI_RECOVERY_MODULE_PPI'
| |         `-ElaboratedType 0x55887c17c0c0 'struct _EFI_PEI_RECOVERY_MODULE_PPI' sugar
| |           `-RecordType 0x55887c17c0a0 'struct _EFI_PEI_RECOVERY_MODULE_PPI'
| |             `-Record 0x55887c17e378 '_EFI_PEI_RECOVERY_MODULE_PPI'
| `-FullComment 0x55887c3f2a20 <line:54:1, line:62:68>
|   |-ParagraphComment 0x55887c3f2570 <line:54:1, line:55:43>
|   | |-TextComment 0x55887c3f2520 <line:54:1, col:75> Text="  Loads a DXE capsule from some media into memory and updates the HOB table"
|   | `-TextComment 0x55887c3f2540 <line:55:1, col:43> Text="  with the DXE firmware volume information."
|   |-ParagraphComment 0x55887c3f25c0 <line:57:1, col:2>
|   | `-TextComment 0x55887c3f2590 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f25e0 <col:3, line:58:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3f2690 <line:57:22, line:58:2>
|   |   |-TextComment 0x55887c3f2640 <line:57:22, col:82> Text="   General-purpose services that are available to every PEIM."
|   |   `-TextComment 0x55887c3f2660 <line:58:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f26b0 <col:3, col:75> [in] implicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c3f2740 <col:15, col:75>
|   |   `-TextComment 0x55887c3f2710 <col:15, col:75> Text="          Indicates the EFI_PEI_RECOVERY_MODULE_PPI instance."
|   |-ParagraphComment 0x55887c3f2790 <line:60:1, col:2>
|   | `-TextComment 0x55887c3f2760 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f27b0 <col:3, line:61:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3f2850 <line:60:22, line:61:2>
|   |   |-TextComment 0x55887c3f2800 <line:60:22, col:62> Text="        The capsule was loaded correctly."
|   |   `-TextComment 0x55887c3f2820 <line:61:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f2870 <col:3, line:62:2> Name="retval" Arg[0]="EFI_DEVICE_ERROR"
|   | `-ParagraphComment 0x55887c3f2920 <line:61:27, line:62:2>
|   |   |-TextComment 0x55887c3f28d0 <line:61:27, col:53> Text="   A device error occurred."
|   |   `-TextComment 0x55887c3f28f0 <line:62:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3f2940 <col:3, col:68> Name="retval" Arg[0]="EFI_NOT_FOUND"
|     `-ParagraphComment 0x55887c3f29c0 <col:24, col:68>
|       `-TextComment 0x55887c3f2990 <col:24, col:68> Text="      A recovery DXE capsule cannot be found."
|-RecordDecl 0x55887c17e378 prev 0x55887c17c018 <line:75:1, line:77:1> line:75:8 struct _EFI_PEI_RECOVERY_MODULE_PPI definition
| |-FullComment 0x55887c3f2af0 <line:73:4, col:40>
| | `-ParagraphComment 0x55887c3f2ac0 <col:4, col:40>
| |   `-TextComment 0x55887c3f2a90 <col:4, col:40> Text="  Finds and loads the recovery files."
| `-FieldDecl 0x55887c17e430 <line:76:3, col:36> col:36 referenced LoadRecoveryCapsule 'EFI_PEI_LOAD_RECOVERY_CAPSULE':'EFI_STATUS (*)(EFI_PEI_SERVICES **, EFI_PEI_RECOVERY_MODULE_PPI *)'
|   `-FullComment 0x55887c3f2bc0 <col:61, col:100>
|     `-ParagraphComment 0x55887c3f2b90 <col:61, col:100>
|       `-TextComment 0x55887c3f2b60 <col:61, col:100> Text=" Loads a DXE binary capsule into memory."
|-VarDecl 0x55887c17e4b8 <line:79:1, col:18> col:18 used gEfiPeiRecoveryModulePpiGuid 'EFI_GUID':'GUID' extern
|-RecordDecl 0x55887c17e548 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Include/Ppi/CapsuleOnDisk.h:18:9, col:16> col:16 struct _EDKII_PEI_CAPSULE_ON_DISK_PPI
|-TypedefDecl 0x55887c17e648 <col:1, col:47> col:47 referenced EDKII_PEI_CAPSULE_ON_DISK_PPI 'struct _EDKII_PEI_CAPSULE_ON_DISK_PPI':'struct _EDKII_PEI_CAPSULE_ON_DISK_PPI'
| `-ElaboratedType 0x55887c17e5f0 'struct _EDKII_PEI_CAPSULE_ON_DISK_PPI' sugar
|   `-RecordType 0x55887c17e5d0 'struct _EDKII_PEI_CAPSULE_ON_DISK_PPI'
|     `-Record 0x55887c17ea18 '_EDKII_PEI_CAPSULE_ON_DISK_PPI'
|-TypedefDecl 0x55887c17e998 <line:32:1, line:37:3> line:34:10 referenced EDKII_PEI_LOAD_CAPSULE_ON_DISK 'EFI_STATUS (*)(EFI_PEI_SERVICES **, EDKII_PEI_CAPSULE_ON_DISK_PPI *)'
| |-PointerType 0x55887c17e930 'EFI_STATUS (*)(EFI_PEI_SERVICES **, EDKII_PEI_CAPSULE_ON_DISK_PPI *)'
| | `-ParenType 0x55887c17e8d0 'EFI_STATUS (EFI_PEI_SERVICES **, EDKII_PEI_CAPSULE_ON_DISK_PPI *)' sugar
| |   `-FunctionProtoType 0x55887c17e890 'EFI_STATUS (EFI_PEI_SERVICES **, EDKII_PEI_CAPSULE_ON_DISK_PPI *)' cdecl
| |     |-TypedefType 0x55887c0db460 'EFI_STATUS' sugar
| |     | |-Typedef 0x55887c06c2d0 'EFI_STATUS'
| |     | `-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     |   |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     |   `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |     |-Typedef 0x55887c04a020 'UINTN'
| |     |     `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |       |-Typedef 0x55887c049930 'UINT64'
| |     |       `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c0dd8d0 'EFI_PEI_SERVICES **'
| |     | `-PointerType 0x55887c160110 'EFI_PEI_SERVICES *'
| |     |   `-TypedefType 0x55887c10bea0 'EFI_PEI_SERVICES' sugar
| |     |     |-Typedef 0x55887c10b528 'EFI_PEI_SERVICES'
| |     |     `-ElaboratedType 0x55887c10b4d0 'struct _EFI_PEI_SERVICES' sugar
| |     |       `-RecordType 0x55887c10b4b0 'struct _EFI_PEI_SERVICES'
| |     |         `-Record 0x55887c16ba38 '_EFI_PEI_SERVICES'
| |     `-PointerType 0x55887c17e7b0 'EDKII_PEI_CAPSULE_ON_DISK_PPI *'
| |       `-TypedefType 0x55887c17e760 'EDKII_PEI_CAPSULE_ON_DISK_PPI' sugar
| |         |-Typedef 0x55887c17e648 'EDKII_PEI_CAPSULE_ON_DISK_PPI'
| |         `-ElaboratedType 0x55887c17e5f0 'struct _EDKII_PEI_CAPSULE_ON_DISK_PPI' sugar
| |           `-RecordType 0x55887c17e5d0 'struct _EDKII_PEI_CAPSULE_ON_DISK_PPI'
| |             `-Record 0x55887c17ea18 '_EDKII_PEI_CAPSULE_ON_DISK_PPI'
| `-FullComment 0x55887c3f3130 <line:21:1, line:29:68>
|   |-ParagraphComment 0x55887c3f2c80 <line:21:1, line:22:43>
|   | |-TextComment 0x55887c3f2c30 <line:21:1, col:75> Text="  Loads a DXE capsule from some media into memory and updates the HOB table"
|   | `-TextComment 0x55887c3f2c50 <line:22:1, col:43> Text="  with the DXE firmware volume information."
|   |-ParagraphComment 0x55887c3f2cd0 <line:24:1, col:2>
|   | `-TextComment 0x55887c3f2ca0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f2cf0 <col:3, line:25:2> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3f2da0 <line:24:22, line:25:2>
|   |   |-TextComment 0x55887c3f2d50 <line:24:22, col:82> Text="   General-purpose services that are available to every PEIM."
|   |   `-TextComment 0x55887c3f2d70 <line:25:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f2dc0 <col:3, col:75> [in] implicitly Param="This" ParamIndex=1
|   | `-ParagraphComment 0x55887c3f2e50 <col:15, col:75>
|   |   `-TextComment 0x55887c3f2e20 <col:15, col:75> Text="          Indicates the EFI_PEI_RECOVERY_MODULE_PPI instance."
|   |-ParagraphComment 0x55887c3f2ea0 <line:27:1, col:2>
|   | `-TextComment 0x55887c3f2e70 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f2ec0 <col:3, line:28:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3f2f60 <line:27:22, line:28:2>
|   |   |-TextComment 0x55887c3f2f10 <line:27:22, col:62> Text="        The capsule was loaded correctly."
|   |   `-TextComment 0x55887c3f2f30 <line:28:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f2f80 <col:3, line:29:2> Name="retval" Arg[0]="EFI_DEVICE_ERROR"
|   | `-ParagraphComment 0x55887c3f3030 <line:28:27, line:29:2>
|   |   |-TextComment 0x55887c3f2fe0 <line:28:27, col:53> Text="   A device error occurred."
|   |   `-TextComment 0x55887c3f3000 <line:29:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3f3050 <col:3, col:68> Name="retval" Arg[0]="EFI_NOT_FOUND"
|     `-ParagraphComment 0x55887c3f30d0 <col:24, col:68>
|       `-TextComment 0x55887c3f30a0 <col:24, col:68> Text="      A recovery DXE capsule cannot be found."
|-RecordDecl 0x55887c17ea18 prev 0x55887c17e548 <line:42:1, line:44:1> line:42:8 struct _EDKII_PEI_CAPSULE_ON_DISK_PPI definition
| |-FullComment 0x55887c3f3200 <line:40:4, col:40>
| | `-ParagraphComment 0x55887c3f31d0 <col:4, col:40>
| |   `-TextComment 0x55887c3f31a0 <col:4, col:40> Text="  Finds and loads the recovery files."
| `-FieldDecl 0x55887c17ead0 <line:43:3, col:37> col:37 referenced LoadCapsuleOnDisk 'EDKII_PEI_LOAD_CAPSULE_ON_DISK':'EFI_STATUS (*)(EFI_PEI_SERVICES **, EDKII_PEI_CAPSULE_ON_DISK_PPI *)'
|   `-FullComment 0x55887c3f32d0 <col:60, col:99>
|     `-ParagraphComment 0x55887c3f32a0 <col:60, col:99>
|       `-TextComment 0x55887c3f3270 <col:60, col:99> Text=" Loads a DXE binary capsule into memory."
|-VarDecl 0x55887c17eb58 <line:46:1, col:18> col:18 used gEdkiiPeiCapsuleOnDiskPpiGuid 'EFI_GUID':'GUID' extern
|-VarDecl 0x55887c17ebd0 <line:53:1, col:18> col:18 used gEdkiiPeiBootInCapsuleOnDiskModePpiGuid 'EFI_GUID':'GUID' extern
|-RecordDecl 0x55887c17ed28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Ppi/VectorHandoffInfo.h:40:9, line:54:1> line:40:9 struct definition
| |-FullComment 0x55887c3f33c0 <line:37:4, line:38:46>
| | `-ParagraphComment 0x55887c3f3390 <line:37:4, line:38:46>
| |   |-TextComment 0x55887c3f3340 <line:37:4, col:71> Text=" EFI_VECTOR_HANDOFF_INFO entries that describes the interrupt and/or"
| |   `-TextComment 0x55887c3f3360 <line:38:4, col:46> Text=" exception vectors in use in the PEI Phase."
| |-FieldDecl 0x55887c17ede0 <line:44:3, col:15> col:15 VectorNumber 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c17ee40 <line:48:3, col:15> col:15 Attribute 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c17eea0 <line:53:3, col:15> col:15 Owner 'EFI_GUID':'GUID'
|-TypedefDecl 0x55887c17ef48 <line:40:1, line:54:3> col:3 referenced EFI_VECTOR_HANDOFF_INFO 'struct EFI_VECTOR_HANDOFF_INFO':'EFI_VECTOR_HANDOFF_INFO'
| |-ElaboratedType 0x55887c17eef0 'struct EFI_VECTOR_HANDOFF_INFO' sugar
| | `-RecordType 0x55887c17edb0 'EFI_VECTOR_HANDOFF_INFO'
| |   `-Record 0x55887c17ed28 ''
| `-FullComment 0x55887c3f34b0 <line:37:4, line:38:46>
|   `-ParagraphComment 0x55887c3f3480 <line:37:4, line:38:46>
|     |-TextComment 0x55887c3f3430 <line:37:4, col:71> Text=" EFI_VECTOR_HANDOFF_INFO entries that describes the interrupt and/or"
|     `-TextComment 0x55887c3f3450 <line:38:4, col:46> Text=" exception vectors in use in the PEI Phase."
|-RecordDecl 0x55887c17efe0 <line:60:9, line:65:1> line:60:16 struct _EFI_PEI_VECTOR_HANDOFF_INFO_PPI definition
| |-FullComment 0x55887c3f35a0 <line:57:4, line:58:75>
| | `-ParagraphComment 0x55887c3f3570 <line:57:4, line:58:75>
| |   |-TextComment 0x55887c3f3520 <line:57:4, col:73> Text=" Provides a description of the interrupt and/or exception vectors that"
| |   `-TextComment 0x55887c3f3540 <line:58:4, col:75> Text=" were established in the SEC Phase and need to persist into PEI and DXE."
| `-FieldDecl 0x55887c17f108 <line:64:3, col:31> col:31 Info 'EFI_VECTOR_HANDOFF_INFO *'
|-TypedefDecl 0x55887c17f1b8 <line:60:1, line:65:3> col:3 EFI_PEI_VECTOR_HANDOFF_INFO_PPI 'struct _EFI_PEI_VECTOR_HANDOFF_INFO_PPI':'struct _EFI_PEI_VECTOR_HANDOFF_INFO_PPI'
| |-ElaboratedType 0x55887c17f160 'struct _EFI_PEI_VECTOR_HANDOFF_INFO_PPI' sugar
| | `-RecordType 0x55887c17f060 'struct _EFI_PEI_VECTOR_HANDOFF_INFO_PPI'
| |   `-Record 0x55887c17efe0 '_EFI_PEI_VECTOR_HANDOFF_INFO_PPI'
| `-FullComment 0x55887c3f3690 <line:57:4, line:58:75>
|   `-ParagraphComment 0x55887c3f3660 <line:57:4, line:58:75>
|     |-TextComment 0x55887c3f3610 <line:57:4, col:73> Text=" Provides a description of the interrupt and/or exception vectors that"
|     `-TextComment 0x55887c3f3630 <line:58:4, col:75> Text=" were established in the SEC Phase and need to persist into PEI and DXE."
|-VarDecl 0x55887c17f238 <line:67:1, col:18> col:18 gEfiVectorHandoffInfoPpiGuid 'EFI_GUID':'GUID' extern
|-VarDecl 0x55887c184508 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Include/Guid/MemoryTypeInformation.h:23:1, col:18> col:18 used gEfiMemoryTypeInformationGuid 'EFI_GUID':'GUID' extern
|-RecordDecl 0x55887c184570 <line:25:9, line:28:1> line:25:9 struct definition
| |-FieldDecl 0x55887c184620 <line:26:3, col:13> col:13 referenced Type 'UINT32':'unsigned int'
| | `-FullComment 0x55887c3f3760 <col:33, col:79>
| |   `-ParagraphComment 0x55887c3f3730 <col:33, col:79>
| |     `-TextComment 0x55887c3f3700 <col:33, col:79> Text=" EFI memory type defined in UEFI specification."
| `-FieldDecl 0x55887c1846a8 <line:27:3, col:13> col:13 NumberOfPages 'UINT32':'unsigned int'
|   `-FullComment 0x55887c3f3830 <col:33, col:63>
|     `-ParagraphComment 0x55887c3f3800 <col:33, col:63>
|       `-TextComment 0x55887c3f37d0 <col:33, col:63> Text=" The pages of this type memory."
|-TypedefDecl 0x55887c184788 <line:25:1, line:28:3> col:3 referenced EFI_MEMORY_TYPE_INFORMATION 'struct EFI_MEMORY_TYPE_INFORMATION':'EFI_MEMORY_TYPE_INFORMATION'
| `-ElaboratedType 0x55887c184730 'struct EFI_MEMORY_TYPE_INFORMATION' sugar
|   `-RecordType 0x55887c1845f0 'EFI_MEMORY_TYPE_INFORMATION'
|     `-Record 0x55887c184570 ''
|-VarDecl 0x55887c184830 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Guid/MemoryAllocationHob.h:24:1, col:18> col:18 gEfiHobMemoryAllocBspStoreGuid 'EFI_GUID':'GUID' extern
|-VarDecl 0x55887c1848a8 <line:25:1, col:18> col:18 used gEfiHobMemoryAllocStackGuid 'EFI_GUID':'GUID' extern
|-VarDecl 0x55887c184920 <line:26:1, col:18> col:18 gEfiHobMemoryAllocModuleGuid 'EFI_GUID':'GUID' extern
|-VarDecl 0x55887c184a28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Guid/FirmwareFileSystem2.h:30:1, col:18> col:18 gEfiFirmwareFileSystem2Guid 'EFI_GUID':'GUID' extern
|-VarDecl 0x55887c184aa0 <line:31:1, col:18> col:18 gEfiFirmwareVolumeTopFileGuid 'EFI_GUID':'GUID' extern
|-FunctionDecl 0x55887c184d40 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:132:3> line:128:1 used DebugPrint 'void (UINTN, const CHAR8 *, ...)'
| |-ParmVarDecl 0x55887c184ba8 <line:129:7, col:20> col:20 ErrorLevel 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c184c20 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:130:21> col:21 Format 'const CHAR8 *'
| `-FullComment 0x55887c3f3ce0 <line:112:1, line:123:69>
|   |-ParagraphComment 0x55887c3f38d0 <line:112:1, col:92>
|   | `-TextComment 0x55887c3f38a0 <col:1, col:92> Text="  Prints a debug message to the debug output device if the specified error level is enabled."
|   |-ParagraphComment 0x55887c3f3970 <line:114:1, line:116:63>
|   | |-TextComment 0x55887c3f38f0 <line:114:1, col:74> Text="  If any bit in ErrorLevel is also set in DebugPrintErrorLevelLib function"
|   | |-TextComment 0x55887c3f3910 <line:115:1, col:80> Text="  GetDebugPrintErrorLevel (), then print the message specified by Format and the"
|   | `-TextComment 0x55887c3f3930 <line:116:1, col:63> Text="  associated variable argument list to the debug output device."
|   |-ParagraphComment 0x55887c3f39c0 <line:118:1, col:35>
|   | `-TextComment 0x55887c3f3990 <col:1, col:35> Text="  If Format is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3f3a10 <line:120:1, col:2>
|   | `-TextComment 0x55887c3f39e0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f3a30 <col:3, line:121:2> [in] implicitly Param="ErrorLevel" ParamIndex=0
|   | `-ParagraphComment 0x55887c3f3ae0 <line:120:21, line:121:2>
|   |   |-TextComment 0x55887c3f3a90 <line:120:21, col:59> Text="  The error level of the debug message."
|   |   `-TextComment 0x55887c3f3ab0 <line:121:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f3b00 <col:3, line:122:2> [in] implicitly Param="Format" ParamIndex=1
|   | `-ParagraphComment 0x55887c3f3bb0 <line:121:17, line:122:2>
|   |   |-TextComment 0x55887c3f3b60 <line:121:17, col:71> Text="      The format string for the debug message to print."
|   |   `-TextComment 0x55887c3f3b80 <line:122:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3f3bd0 <col:3, line:123:69> [in] implicitly Param="..."
|     `-ParagraphComment 0x55887c3f3c80 <line:122:14, line:123:69>
|       |-TextComment 0x55887c3f3c30 <line:122:14, col:76> Text="         The variable argument list whose contents are accessed"
|       `-TextComment 0x55887c3f3c50 <line:123:1, col:69> Text="                      based on the format string specified by Format."
|-FunctionDecl 0x55887c185068 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:155:3> line:151:1 DebugVPrint 'void (UINTN, const CHAR8 *, VA_LIST)'
| |-ParmVarDecl 0x55887c184e28 <line:152:7, col:20> col:20 ErrorLevel 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c184ea0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:153:21> col:21 Format 'const CHAR8 *'
| |-ParmVarDecl 0x55887c184f40 <line:154:7, col:20> col:20 VaListMarker 'VA_LIST':'char *'
| `-FullComment 0x55887c3f61d0 <line:135:1, line:146:70>
|   |-ParagraphComment 0x55887c3f3da0 <line:135:1, line:136:25>
|   | |-TextComment 0x55887c3f3d50 <line:135:1, col:68> Text="  Prints a debug message to the debug output device if the specified"
|   | `-TextComment 0x55887c3f3d70 <line:136:1, col:25> Text="  error level is enabled."
|   |-ParagraphComment 0x55887c3f3e40 <line:138:1, line:140:67>
|   | |-TextComment 0x55887c3f3dc0 <line:138:1, col:74> Text="  If any bit in ErrorLevel is also set in DebugPrintErrorLevelLib function"
|   | |-TextComment 0x55887c3f3de0 <line:139:1, col:76> Text="  GetDebugPrintErrorLevel (), then print the message specified by Format and"
|   | `-TextComment 0x55887c3f3e00 <line:140:1, col:67> Text="  the associated variable argument list to the debug output device."
|   |-ParagraphComment 0x55887c3f3e90 <line:142:1, col:35>
|   | `-TextComment 0x55887c3f3e60 <col:1, col:35> Text="  If Format is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3f3ee0 <line:144:1, col:2>
|   | `-TextComment 0x55887c3f3eb0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f3f00 <col:3, line:145:2> [in] implicitly Param="ErrorLevel" ParamIndex=0
|   | `-ParagraphComment 0x55887c3f3fb0 <line:144:21, line:145:2>
|   |   |-TextComment 0x55887c3f3f60 <line:144:21, col:61> Text="    The error level of the debug message."
|   |   `-TextComment 0x55887c3f3f80 <line:145:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f3fd0 <col:3, line:146:2> [in] implicitly Param="Format" ParamIndex=1
|   | `-ParagraphComment 0x55887c3f4080 <line:145:17, line:146:2>
|   |   |-TextComment 0x55887c3f4030 <line:145:17, col:69> Text="        Format string for the debug message to print."
|   |   `-TextComment 0x55887c3f4050 <line:146:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3f40a0 <col:3, col:70> [in] implicitly Param="VaListMarker" ParamIndex=2
|     `-ParagraphComment 0x55887c3f6170 <col:23, col:70>
|       `-TextComment 0x55887c3f6140 <col:23, col:70> Text="  VA_LIST marker for the variable argument list."
|-FunctionDecl 0x55887c185398 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:180:3> line:176:1 DebugBPrint 'void (UINTN, const CHAR8 *, BASE_LIST)'
| |-ParmVarDecl 0x55887c185158 <line:177:7, col:20> col:20 ErrorLevel 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1851d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:178:21> col:21 Format 'const CHAR8 *'
| |-ParmVarDecl 0x55887c185270 <line:179:7, col:20> col:20 BaseListMarker 'BASE_LIST':'UINTN *'
| `-FullComment 0x55887c3f66d0 <line:158:1, line:171:74>
|   |-ParagraphComment 0x55887c3f62e0 <line:158:1, line:161:23>
|   | |-TextComment 0x55887c3f6240 <line:158:1, col:68> Text="  Prints a debug message to the debug output device if the specified"
|   | |-TextComment 0x55887c3f6260 <line:159:1, col:25> Text="  error level is enabled."
|   | |-TextComment 0x55887c3f6280 <line:160:1, col:67> Text="  This function use BASE_LIST which would provide a more compatible"
|   | `-TextComment 0x55887c3f62a0 <line:161:1, col:23> Text="  service than VA_LIST."
|   |-ParagraphComment 0x55887c3f6380 <line:163:1, line:165:67>
|   | |-TextComment 0x55887c3f6300 <line:163:1, col:74> Text="  If any bit in ErrorLevel is also set in DebugPrintErrorLevelLib function"
|   | |-TextComment 0x55887c3f6320 <line:164:1, col:76> Text="  GetDebugPrintErrorLevel (), then print the message specified by Format and"
|   | `-TextComment 0x55887c3f6340 <line:165:1, col:67> Text="  the associated variable argument list to the debug output device."
|   |-ParagraphComment 0x55887c3f63d0 <line:167:1, col:35>
|   | `-TextComment 0x55887c3f63a0 <col:1, col:35> Text="  If Format is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3f6420 <line:169:1, col:2>
|   | `-TextComment 0x55887c3f63f0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f6440 <col:3, line:170:2> [in] implicitly Param="ErrorLevel" ParamIndex=0
|   | `-ParagraphComment 0x55887c3f64f0 <line:169:21, line:170:2>
|   |   |-TextComment 0x55887c3f64a0 <line:169:21, col:63> Text="      The error level of the debug message."
|   |   `-TextComment 0x55887c3f64c0 <line:170:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f6510 <col:3, line:171:2> [in] implicitly Param="Format" ParamIndex=1
|   | `-ParagraphComment 0x55887c3f65c0 <line:170:17, line:171:2>
|   |   |-TextComment 0x55887c3f6570 <line:170:17, col:71> Text="          Format string for the debug message to print."
|   |   `-TextComment 0x55887c3f6590 <line:171:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3f65e0 <col:3, col:74> [in] implicitly Param="BaseListMarker" ParamIndex=2
|     `-ParagraphComment 0x55887c3f6670 <col:25, col:74>
|       `-TextComment 0x55887c3f6640 <col:25, col:74> Text="  BASE_LIST marker for the variable argument list."
|-FunctionDecl 0x55887c18d0f8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:209:3> line:205:1 used DebugAssert 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| |-ParmVarDecl 0x55887c18cee0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:206:20> col:20 FileName 'const CHAR8 *'
| |-ParmVarDecl 0x55887c18cf58 <line:207:6, col:19> col:19 LineNumber 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c18cfd0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:208:20> col:20 Description 'const CHAR8 *'
| `-FullComment 0x55887c3f6d00 <line:183:1, line:200:78>
|   |-ParagraphComment 0x55887c3f6790 <line:183:1, line:184:54>
|   | |-TextComment 0x55887c3f6740 <line:183:1, col:79> Text="  Prints an assert message containing a filename, line number, and description."
|   | `-TextComment 0x55887c3f6760 <line:184:1, col:54> Text="  This may be followed by a breakpoint or a dead loop."
|   |-ParagraphComment 0x55887c3f68f0 <line:186:1, line:193:79>
|   | |-TextComment 0x55887c3f67b0 <line:186:1, col:80> Text="  Print a message of the form "ASSERT <FileName>(<LineNumber>): <Description>\n""
|   | |-TextComment 0x55887c3f67d0 <line:187:1, col:81> Text="  to the debug output device.  If DEBUG_PROPERTY_ASSERT_BREAKPOINT_ENABLED bit of"
|   | |-TextComment 0x55887c3f67f0 <line:188:1, col:74> Text="  PcdDebugProperyMask is set then CpuBreakpoint() is called. Otherwise, if"
|   | |-TextComment 0x55887c3f6810 <line:189:1, col:79> Text="  DEBUG_PROPERTY_ASSERT_DEADLOOP_ENABLED bit of PcdDebugProperyMask is set then"
|   | |-TextComment 0x55887c3f6830 <line:190:1, col:80> Text="  CpuDeadLoop() is called.  If neither of these bits are set, then this function"
|   | |-TextComment 0x55887c3f6850 <line:191:1, col:78> Text="  returns immediately after the message is printed to the debug output device."
|   | |-TextComment 0x55887c3f6870 <line:192:1, col:82> Text="  DebugAssert() must actively prevent recursion.  If DebugAssert() is called while"
|   | `-TextComment 0x55887c3f6890 <line:193:1, col:79> Text="  processing another DebugAssert(), then DebugAssert() must return immediately."
|   |-ParagraphComment 0x55887c3f6a00 <line:195:1, line:196:89>
|   | |-TextComment 0x55887c3f6910 <line:195:1, col:30> Text="  If FileName is NULL, then a "
|   | |-TextComment 0x55887c3f6930 <col:31, col:39> Text="<FileName"
|   | |-TextComment 0x55887c3f6950 <col:40, col:80> Text="> string of "(NULL) Filename" is printed."
|   | |-TextComment 0x55887c3f6970 <line:196:1, col:33> Text="  If Description is NULL, then a "
|   | |-TextComment 0x55887c3f6990 <col:34, col:45> Text="<Description"
|   | `-TextComment 0x55887c3f69b0 <col:46, col:89> Text="> string of "(NULL) Description" is printed."
|   |-ParagraphComment 0x55887c3f6a50 <line:198:1, col:2>
|   | `-TextComment 0x55887c3f6a20 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f6a70 <col:3, line:199:2> [in] implicitly Param="FileName" ParamIndex=0
|   | `-ParagraphComment 0x55887c3f6b20 <line:198:19, line:199:2>
|   |   |-TextComment 0x55887c3f6ad0 <line:198:19, col:102> Text="     The pointer to the name of the source file that generated the assert condition."
|   |   `-TextComment 0x55887c3f6af0 <line:199:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f6b40 <col:3, line:200:2> [in] implicitly Param="LineNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c3f6bf0 <line:199:21, line:200:2>
|   |   |-TextComment 0x55887c3f6ba0 <line:199:21, col:93> Text="   The line number in the source file that generated the assert condition"
|   |   `-TextComment 0x55887c3f6bc0 <line:200:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3f6c10 <col:3, col:78> [in] implicitly Param="Description" ParamIndex=2
|     `-ParagraphComment 0x55887c3f6ca0 <col:22, col:78>
|       `-TextComment 0x55887c3f6c70 <col:22, col:78> Text="  The pointer to the description of the assert condition."
|-FunctionDecl 0x55887c18d380 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:231:3> line:228:1 DebugClearMemory 'void *(void *, UINTN)'
| |-ParmVarDecl 0x55887c18d1f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:229:14> col:14 Buffer 'void *'
| |-ParmVarDecl 0x55887c18d268 <line:230:6, col:13> col:13 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c3f7180 <line:212:1, line:223:89>
|   |-ParagraphComment 0x55887c3f6da0 <line:212:1, col:85>
|   | `-TextComment 0x55887c3f6d70 <col:1, col:85> Text="  Fills a target buffer with PcdDebugClearMemoryValue, and returns the target buffer."
|   |-ParagraphComment 0x55887c3f6e10 <line:214:1, line:215:47>
|   | |-TextComment 0x55887c3f6dc0 <line:214:1, col:72> Text="  This function fills Length bytes of Buffer with the value specified by"
|   | `-TextComment 0x55887c3f6de0 <line:215:1, col:47> Text="  PcdDebugClearMemoryValue, and returns Buffer."
|   |-ParagraphComment 0x55887c3f6e80 <line:217:1, line:218:70>
|   | |-TextComment 0x55887c3f6e30 <line:217:1, col:35> Text="  If Buffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c3f6e50 <line:218:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c3f6ed0 <line:220:1, col:2>
|   | `-TextComment 0x55887c3f6ea0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f6ef0 <col:3, line:221:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c3f6fa0 <line:220:18, line:221:2>
|   |   |-TextComment 0x55887c3f6f50 <line:220:18, col:95> Text="  The pointer to the target buffer to be filled with PcdDebugClearMemoryValue."
|   |   `-TextComment 0x55887c3f6f70 <line:221:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f6fc0 <col:3, col:93> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c3f7050 <col:18, col:93>
|   |   `-TextComment 0x55887c3f7020 <col:18, col:93> Text="  The number of bytes in Buffer to fill with zeros PcdDebugClearMemoryValue."
|   |-ParagraphComment 0x55887c3f70a0 <line:223:1, col:2>
|   | `-TextComment 0x55887c3f7070 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3f70c0 <col:3, col:89> Name="return"
|     `-ParagraphComment 0x55887c3f7120 <col:10, col:89>
|       `-TextComment 0x55887c3f70f0 <col:10, col:89> Text="  Buffer  The pointer to the target buffer filled with PcdDebugClearMemoryValue."
|-FunctionDecl 0x55887c18d4f0 <line:243:1, line:247:3> line:245:1 used DebugAssertEnabled 'BOOLEAN (void)'
| `-FullComment 0x55887c3f7490 <line:234:1, line:240:95>
|   |-ParagraphComment 0x55887c3f7220 <line:234:1, col:46>
|   | `-TextComment 0x55887c3f71f0 <col:1, col:46> Text="  Returns TRUE if ASSERT() macros are enabled."
|   |-ParagraphComment 0x55887c3f7290 <line:236:1, line:237:60>
|   | |-TextComment 0x55887c3f7240 <line:236:1, col:78> Text="  This function returns TRUE if the DEBUG_PROPERTY_DEBUG_ASSERT_ENABLED bit of"
|   | `-TextComment 0x55887c3f7260 <line:237:1, col:60> Text="  PcdDebugProperyMask is set.  Otherwise, FALSE is returned."
|   |-ParagraphComment 0x55887c3f72e0 <line:239:1, col:2>
|   | `-TextComment 0x55887c3f72b0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f7300 <col:3, line:240:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c3f73a0 <line:239:16, line:240:2>
|   |   |-TextComment 0x55887c3f7350 <line:239:16, col:93> Text="    The DEBUG_PROPERTY_DEBUG_ASSERT_ENABLED bit of PcdDebugProperyMask is set."
|   |   `-TextComment 0x55887c3f7370 <line:240:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3f73c0 <col:3, col:95> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c3f7440 <col:17, col:95>
|       `-TextComment 0x55887c3f7410 <col:17, col:95> Text="   The DEBUG_PROPERTY_DEBUG_ASSERT_ENABLED bit of PcdDebugProperyMask is clear."
|-FunctionDecl 0x55887c18d650 <line:259:1, line:263:3> line:261:1 used DebugPrintEnabled 'BOOLEAN (void)'
| `-FullComment 0x55887c3f77a0 <line:250:1, line:256:94>
|   |-ParagraphComment 0x55887c3f7530 <line:250:1, col:45>
|   | `-TextComment 0x55887c3f7500 <col:1, col:45> Text="  Returns TRUE if DEBUG() macros are enabled."
|   |-ParagraphComment 0x55887c3f75a0 <line:252:1, line:253:60>
|   | |-TextComment 0x55887c3f7550 <line:252:1, col:77> Text="  This function returns TRUE if the DEBUG_PROPERTY_DEBUG_PRINT_ENABLED bit of"
|   | `-TextComment 0x55887c3f7570 <line:253:1, col:60> Text="  PcdDebugProperyMask is set.  Otherwise, FALSE is returned."
|   |-ParagraphComment 0x55887c3f75f0 <line:255:1, col:2>
|   | `-TextComment 0x55887c3f75c0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f7610 <col:3, line:256:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c3f76b0 <line:255:16, line:256:2>
|   |   |-TextComment 0x55887c3f7660 <line:255:16, col:92> Text="    The DEBUG_PROPERTY_DEBUG_PRINT_ENABLED bit of PcdDebugProperyMask is set."
|   |   `-TextComment 0x55887c3f7680 <line:256:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3f76d0 <col:3, col:94> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c3f7750 <col:17, col:94>
|       `-TextComment 0x55887c3f7720 <col:17, col:94> Text="   The DEBUG_PROPERTY_DEBUG_PRINT_ENABLED bit of PcdDebugProperyMask is clear."
|-FunctionDecl 0x55887c18d7b0 <line:275:1, line:279:3> line:277:1 DebugCodeEnabled 'BOOLEAN (void)'
| `-FullComment 0x55887c3f7ab0 <line:266:1, line:272:93>
|   |-ParagraphComment 0x55887c3f7840 <line:266:1, col:50>
|   | `-TextComment 0x55887c3f7810 <col:1, col:50> Text="  Returns TRUE if DEBUG_CODE() macros are enabled."
|   |-ParagraphComment 0x55887c3f78b0 <line:268:1, line:269:60>
|   | |-TextComment 0x55887c3f7860 <line:268:1, col:76> Text="  This function returns TRUE if the DEBUG_PROPERTY_DEBUG_CODE_ENABLED bit of"
|   | `-TextComment 0x55887c3f7880 <line:269:1, col:60> Text="  PcdDebugProperyMask is set.  Otherwise, FALSE is returned."
|   |-ParagraphComment 0x55887c3f7900 <line:271:1, col:2>
|   | `-TextComment 0x55887c3f78d0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f7920 <col:3, line:272:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c3f79c0 <line:271:16, line:272:2>
|   |   |-TextComment 0x55887c3f7970 <line:271:16, col:91> Text="    The DEBUG_PROPERTY_DEBUG_CODE_ENABLED bit of PcdDebugProperyMask is set."
|   |   `-TextComment 0x55887c3f7990 <line:272:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3f79e0 <col:3, col:93> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c3f7a60 <col:17, col:93>
|       `-TextComment 0x55887c3f7a30 <col:17, col:93> Text="   The DEBUG_PROPERTY_DEBUG_CODE_ENABLED bit of PcdDebugProperyMask is clear."
|-FunctionDecl 0x55887c18d910 <line:291:1, line:295:3> line:293:1 DebugClearMemoryEnabled 'BOOLEAN (void)'
| `-FullComment 0x55887c3f7dc0 <line:282:1, line:288:95>
|   |-ParagraphComment 0x55887c3f7b50 <line:282:1, col:56>
|   | `-TextComment 0x55887c3f7b20 <col:1, col:56> Text="  Returns TRUE if DEBUG_CLEAR_MEMORY() macro is enabled."
|   |-ParagraphComment 0x55887c3f7bc0 <line:284:1, line:285:60>
|   | |-TextComment 0x55887c3f7b70 <line:284:1, col:78> Text="  This function returns TRUE if the DEBUG_PROPERTY_CLEAR_MEMORY_ENABLED bit of"
|   | `-TextComment 0x55887c3f7b90 <line:285:1, col:60> Text="  PcdDebugProperyMask is set.  Otherwise, FALSE is returned."
|   |-ParagraphComment 0x55887c3f7c10 <line:287:1, col:2>
|   | `-TextComment 0x55887c3f7be0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f7c30 <col:3, line:288:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c3f7cd0 <line:287:16, line:288:2>
|   |   |-TextComment 0x55887c3f7c80 <line:287:16, col:93> Text="    The DEBUG_PROPERTY_CLEAR_MEMORY_ENABLED bit of PcdDebugProperyMask is set."
|   |   `-TextComment 0x55887c3f7ca0 <line:288:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3f7cf0 <col:3, col:95> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c3f7d70 <col:17, col:95>
|       `-TextComment 0x55887c3f7d40 <col:17, col:95> Text="   The DEBUG_PROPERTY_CLEAR_MEMORY_ENABLED bit of PcdDebugProperyMask is clear."
|-FunctionDecl 0x55887c18dad8 <line:306:1, line:310:3> line:308:1 used DebugPrintLevelEnabled 'BOOLEAN (const UINTN)'
| |-ParmVarDecl 0x55887c18d9e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:309:20> col:20 ErrorLevel 'const UINTN':'const unsigned long long'
| `-FullComment 0x55887c3f80b0 <line:298:1, line:303:55>
|   |-ParagraphComment 0x55887c3f7e60 <line:298:1, col:96>
|   | `-TextComment 0x55887c3f7e30 <col:1, col:96> Text="  Returns TRUE if any one of the bit is set both in ErrorLevel and PcdFixedDebugPrintErrorLevel."
|   |-ParagraphComment 0x55887c3f7eb0 <line:300:1, col:85>
|   | `-TextComment 0x55887c3f7e80 <col:1, col:85> Text="  This function compares the bit mask of ErrorLevel and PcdFixedDebugPrintErrorLevel."
|   |-ParagraphComment 0x55887c3f7f00 <line:302:1, col:2>
|   | `-TextComment 0x55887c3f7ed0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f7f20 <col:3, line:303:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c3f7fc0 <line:302:16, line:303:2>
|   |   |-TextComment 0x55887c3f7f70 <line:302:16, col:51> Text="    Current ErrorLevel is supported."
|   |   `-TextComment 0x55887c3f7f90 <line:303:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3f7fe0 <col:3, col:55> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c3f8060 <col:17, col:55>
|       `-TextComment 0x55887c3f8030 <col:17, col:55> Text="   Current ErrorLevel is not supported."
|-VarDecl 0x55887c18de28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeimEntryPoint.h:15:1, col:22> col:22 _gPeimRevision 'const UINT32':'const unsigned int' extern
| `-FullComment 0x55887c3f8180 <line:13:4, col:83>
|   `-ParagraphComment 0x55887c3f8150 <col:4, col:83>
|     `-TextComment 0x55887c3f8120 <col:4, col:83> Text=" Declare the EFI/UEFI Specification Revision to which this driver is implemented"
|-FunctionDecl 0x55887c193978 <line:30:1, line:35:3> line:32:1 _ModuleEntryPoint 'EFI_STATUS (EFI_PEI_FILE_HANDLE, const EFI_PEI_SERVICES **)'
| |-ParmVarDecl 0x55887c193860 <line:33:6, col:30> col:30 FileHandle 'EFI_PEI_FILE_HANDLE':'void *'
| |-ParmVarDecl 0x55887c1938e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeimEntryPoint.h:34:32> col:32 PeiServices 'const EFI_PEI_SERVICES **'
| `-FullComment 0x55887c3f86a0 <line:18:1, line:28:61>
|   |-ParagraphComment 0x55887c3f8220 <line:18:1, col:46>
|   | `-TextComment 0x55887c3f81f0 <col:1, col:46> Text="  The entry point of PE/COFF Image for a PEIM."
|   |-ParagraphComment 0x55887c3f82c0 <line:20:1, line:22:104>
|   | |-TextComment 0x55887c3f8240 <line:20:1, col:103> Text="  This function is the entry point for a PEIM.  This function must call ProcessLibraryConstructorList()"
|   | |-TextComment 0x55887c3f8260 <line:21:1, col:102> Text="  and ProcessModuleEntryPointList().  The return value from ProcessModuleEntryPointList() is returned."
|   | `-TextComment 0x55887c3f8280 <line:22:1, col:104> Text="  If _gPeimRevision is not zero and PeiServices->Hdr.Revision is less than _gPeimRevison, then ASSERT()."
|   |-ParagraphComment 0x55887c3f8310 <line:24:1, col:2>
|   | `-TextComment 0x55887c3f82e0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f8330 <col:3, line:25:2> [in] implicitly Param="FileHandle" ParamIndex=0
|   | `-ParagraphComment 0x55887c3f83e0 <line:24:21, line:25:2>
|   |   |-TextComment 0x55887c3f8390 <line:24:21, col:55> Text="  Handle of the file being invoked."
|   |   `-TextComment 0x55887c3f83b0 <line:25:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f8400 <col:3, col:66> [in] implicitly Param="PeiServices" ParamIndex=1
|   | `-ParagraphComment 0x55887c3f8490 <col:22, col:66>
|   |   `-TextComment 0x55887c3f8460 <col:22, col:66> Text=" Describes the list of possible PEI Services."
|   |-ParagraphComment 0x55887c3f84e0 <line:27:1, col:2>
|   | `-TextComment 0x55887c3f84b0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f8500 <col:3, line:28:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3f85a0 <line:27:23, line:28:2>
|   |   |-TextComment 0x55887c3f8550 <line:27:23, col:52> Text="   The PEIM executed normally."
|   |   `-TextComment 0x55887c3f8570 <line:28:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3f85c0 <col:3, col:61> Name="retval" Arg[0]="!EFI_SUCCESS"
|     `-ParagraphComment 0x55887c3f8640 <col:24, col:61>
|       `-TextComment 0x55887c3f8610 <col:24, col:61> Text="  The PEIM failed to execute normally."
|-FunctionDecl 0x55887c193b80 <line:49:1, line:54:3> line:51:1 EfiMain 'EFI_STATUS (EFI_PEI_FILE_HANDLE, const EFI_PEI_SERVICES **)'
| |-ParmVarDecl 0x55887c193a68 <line:52:6, col:30> col:30 FileHandle 'EFI_PEI_FILE_HANDLE':'void *'
| |-ParmVarDecl 0x55887c193ae8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeimEntryPoint.h:53:32> col:32 PeiServices 'const EFI_PEI_SERVICES **'
| `-FullComment 0x55887c3f8b70 <line:38:1, line:46:59>
|   |-ParagraphComment 0x55887c3f8740 <line:38:1, col:85>
|   | `-TextComment 0x55887c3f8710 <col:1, col:85> Text="  Required by the EBC compiler and identical in functionality to _ModuleEntryPoint()."
|   |-ParagraphComment 0x55887c3f8790 <line:40:1, col:94>
|   | `-TextComment 0x55887c3f8760 <col:1, col:94> Text="  This function is required to call _ModuleEntryPoint() passing in FileHandle and PeiServices."
|   |-ParagraphComment 0x55887c3f87e0 <line:42:1, col:2>
|   | `-TextComment 0x55887c3f87b0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f8800 <col:3, line:43:2> [in] implicitly Param="FileHandle" ParamIndex=0
|   | `-ParagraphComment 0x55887c3f88b0 <line:42:21, line:43:2>
|   |   |-TextComment 0x55887c3f8860 <line:42:21, col:55> Text="  Handle of the file being invoked."
|   |   `-TextComment 0x55887c3f8880 <line:43:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f88d0 <col:3, col:66> [in] implicitly Param="PeiServices" ParamIndex=1
|   | `-ParagraphComment 0x55887c3f8960 <col:22, col:66>
|   |   `-TextComment 0x55887c3f8930 <col:22, col:66> Text=" Describes the list of possible PEI Services."
|   |-ParagraphComment 0x55887c3f89b0 <line:45:1, col:2>
|   | `-TextComment 0x55887c3f8980 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f89d0 <col:3, line:46:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3f8a70 <line:45:22, line:46:2>
|   |   |-TextComment 0x55887c3f8a20 <line:45:22, col:50> Text="  The PEIM executed normally."
|   |   `-TextComment 0x55887c3f8a40 <line:46:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3f8a90 <col:3, col:59> Name="retval" Arg[0]="!EFI_SUCCESS"
|     `-ParagraphComment 0x55887c3f8b10 <col:23, col:59>
|       `-TextComment 0x55887c3f8ae0 <col:23, col:59> Text=" The PEIM failed to execute normally."
|-FunctionDecl 0x55887c193df8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeimEntryPoint.h:77:3> line:74:1 ProcessLibraryConstructorList 'void (EFI_PEI_FILE_HANDLE, const EFI_PEI_SERVICES **)'
| |-ParmVarDecl 0x55887c193c68 <line:75:6, col:30> col:30 FileHandle 'EFI_PEI_FILE_HANDLE':'void *'
| |-ParmVarDecl 0x55887c193ce8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeimEntryPoint.h:76:32> col:32 PeiServices 'const EFI_PEI_SERVICES **'
| `-FullComment 0x55887c3f8f90 <line:57:1, line:69:67>
|   |-ParagraphComment 0x55887c3f8c30 <line:57:1, line:58:22>
|   | |-TextComment 0x55887c3f8be0 <line:57:1, col:84> Text="  Autogenerated function that calls the library constructors for all of the module's"
|   | `-TextComment 0x55887c3f8c00 <line:58:1, col:22> Text="  dependent libraries."
|   |-ParagraphComment 0x55887c3f8d70 <line:60:1, line:66:93>
|   | |-TextComment 0x55887c3f8c50 <line:60:1, col:54> Text="  This function must be called by _ModuleEntryPoint()."
|   | |-TextComment 0x55887c3f8c70 <line:61:1, col:93> Text="  This function calls the set of library constructors for the set of library instances that a"
|   | |-TextComment 0x55887c3f8c90 <line:62:1, col:98> Text="  module depends on. This includes library instances that a module depends on directly and library"
|   | |-TextComment 0x55887c3f8cb0 <line:63:1, col:72> Text="  instances that a module depends on indirectly through other libraries."
|   | |-TextComment 0x55887c3f8cd0 <line:64:1, col:100> Text="  This function is autogenerated by build tools and those build tools are responsible for collecting"
|   | |-TextComment 0x55887c3f8cf0 <line:65:1, col:95> Text="  the set of library instances, determine which ones have constructors, and calling the library"
|   | `-TextComment 0x55887c3f8d10 <line:66:1, col:93> Text="  constructors in the proper order based upon each of the library instances own dependencies."
|   |-ParagraphComment 0x55887c3f8dc0 <line:68:1, col:2>
|   | `-TextComment 0x55887c3f8d90 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f8de0 <col:3, line:69:2> [in] implicitly Param="FileHandle" ParamIndex=0
|   | `-ParagraphComment 0x55887c3f8e90 <line:68:21, line:69:2>
|   |   |-TextComment 0x55887c3f8e40 <line:68:21, col:56> Text="   Handle of the file being invoked."
|   |   `-TextComment 0x55887c3f8e60 <line:69:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c3f8eb0 <col:3, col:67> [in] implicitly Param="PeiServices" ParamIndex=1
|     `-ParagraphComment 0x55887c3f8f40 <col:22, col:67>
|       `-TextComment 0x55887c3f8f10 <col:22, col:67> Text="  Describes the list of possible PEI Services."
|-FunctionDecl 0x55887c194000 <line:94:1, line:99:3> line:96:1 ProcessModuleEntryPointList 'EFI_STATUS (EFI_PEI_FILE_HANDLE, const EFI_PEI_SERVICES **)'
| |-ParmVarDecl 0x55887c193ee8 <line:97:6, col:30> col:30 FileHandle 'EFI_PEI_FILE_HANDLE':'void *'
| |-ParmVarDecl 0x55887c193f68 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeimEntryPoint.h:98:32> col:32 PeiServices 'const EFI_PEI_SERVICES **'
| `-FullComment 0x55887c3f94d0 <line:80:1, line:91:59>
|   |-ParagraphComment 0x55887c3f9030 <line:80:1, col:65>
|   | `-TextComment 0x55887c3f9000 <col:1, col:65> Text="  Autogenerated function that calls a set of module entry points."
|   |-ParagraphComment 0x55887c3f90f0 <line:82:1, line:85:79>
|   | |-TextComment 0x55887c3f9050 <line:82:1, col:54> Text="  This function must be called by _ModuleEntryPoint()."
|   | |-TextComment 0x55887c3f9070 <line:83:1, col:53> Text="  This function calls the set of module entry points."
|   | |-TextComment 0x55887c3f9090 <line:84:1, col:85> Text="  This function is autogenerated by build tools and those build tools are responsible"
|   | `-TextComment 0x55887c3f90b0 <line:85:1, col:79> Text="  for collecting the module entry points and calling them in a specified order."
|   |-ParagraphComment 0x55887c3f9140 <line:87:1, col:2>
|   | `-TextComment 0x55887c3f9110 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f9160 <col:3, line:88:2> [in] implicitly Param="FileHandle" ParamIndex=0
|   | `-ParagraphComment 0x55887c3f9210 <line:87:21, line:88:2>
|   |   |-TextComment 0x55887c3f91c0 <line:87:21, col:55> Text="  Handle of the file being invoked."
|   |   `-TextComment 0x55887c3f91e0 <line:88:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f9230 <col:3, col:66> [in] implicitly Param="PeiServices" ParamIndex=1
|   | `-ParagraphComment 0x55887c3f92c0 <col:22, col:66>
|   |   `-TextComment 0x55887c3f9290 <col:22, col:66> Text=" Describes the list of possible PEI Services."
|   |-ParagraphComment 0x55887c3f9310 <line:90:1, col:2>
|   | `-TextComment 0x55887c3f92e0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3f9330 <col:3, line:91:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3f93d0 <line:90:22, line:91:2>
|   |   |-TextComment 0x55887c3f9380 <line:90:22, col:50> Text="  The PEIM executed normally."
|   |   `-TextComment 0x55887c3f93a0 <line:91:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3f93f0 <col:3, col:59> Name="retval" Arg[0]="!EFI_SUCCESS"
|     `-ParagraphComment 0x55887c3f9470 <col:23, col:59>
|       `-TextComment 0x55887c3f9440 <col:23, col:59> Text=" The PEIM failed to execute normally."
|-FunctionDecl 0x55887c1941d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:39:3> line:37:1 used GetHobList 'void *(void)'
| `-FullComment 0x55887c3f9820 <line:20:1, line:32:38>
|   |-ParagraphComment 0x55887c3f9570 <line:20:1, col:38>
|   | `-TextComment 0x55887c3f9540 <col:1, col:38> Text="  Returns the pointer to the HOB list."
|   |-ParagraphComment 0x55887c3f96b0 <line:22:1, line:28:40>
|   | |-TextComment 0x55887c3f9590 <line:22:1, col:61> Text="  This function returns the pointer to first HOB in the list."
|   | |-TextComment 0x55887c3f95b0 <line:23:1, col:81> Text="  For PEI phase, the PEI service GetHobList() can be used to retrieve the pointer"
|   | |-TextComment 0x55887c3f95d0 <line:24:1, col:84> Text="  to the HOB list.  For the DXE phase, the HOB list pointer can be retrieved through"
|   | |-TextComment 0x55887c3f95f0 <line:25:1, col:88> Text="  the EFI System Table by looking up theHOB list GUID in the System Configuration Table."
|   | |-TextComment 0x55887c3f9610 <line:26:1, col:83> Text="  Since the System Configuration Table does not exist that the time the DXE Core is"
|   | |-TextComment 0x55887c3f9630 <line:27:1, col:85> Text="  launched, the DXE Core uses a global variable from the DXE Core Entry Point Library"
|   | `-TextComment 0x55887c3f9650 <line:28:1, col:40> Text="  to manage the pointer to the HOB list."
|   |-ParagraphComment 0x55887c3f9700 <line:30:1, col:56>
|   | `-TextComment 0x55887c3f96d0 <col:1, col:56> Text="  If the pointer to the HOB list is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3f9750 <line:32:1, col:2>
|   | `-TextComment 0x55887c3f9720 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3f9770 <col:3, col:38> Name="return"
|     `-ParagraphComment 0x55887c3f97d0 <col:10, col:38>
|       `-TextComment 0x55887c3f97a0 <col:10, col:38> Text=" The pointer to the HOB list."
|-FunctionDecl 0x55887c194440 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:63:3> line:60:1 used GetNextHob 'void *(UINT16, const void *)'
| |-ParmVarDecl 0x55887c1942a8 <line:61:6, col:18> col:18 Type 'UINT16':'unsigned short'
| |-ParmVarDecl 0x55887c194328 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:62:19> col:19 HobStart 'const void *'
| `-FullComment 0x55887c3f9d00 <line:42:1, line:55:64>
|   |-ParagraphComment 0x55887c3f98c0 <line:42:1, col:64>
|   | `-TextComment 0x55887c3f9890 <col:1, col:64> Text="  Returns the next instance of a HOB type from the starting HOB."
|   |-ParagraphComment 0x55887c3f99b0 <line:44:1, line:48:81>
|   | |-TextComment 0x55887c3f98e0 <line:44:1, col:88> Text="  This function searches the first instance of a HOB type from the starting HOB pointer."
|   | |-TextComment 0x55887c3f9900 <line:45:1, col:91> Text="  If there does not exist such HOB type from the starting HOB pointer, it will return NULL."
|   | |-TextComment 0x55887c3f9920 <line:46:1, col:93> Text="  In contrast with macro GET_NEXT_HOB(), this function does not skip the starting HOB pointer"
|   | |-TextComment 0x55887c3f9940 <line:47:1, col:85> Text="  unconditionally: it returns HobStart back if HobStart itself meets the requirement;"
|   | `-TextComment 0x55887c3f9960 <line:48:1, col:81> Text="  caller is required to use GET_NEXT_HOB() if it wishes to skip current HobStart."
|   |-ParagraphComment 0x55887c3f9a00 <line:50:1, col:37>
|   | `-TextComment 0x55887c3f99d0 <col:1, col:37> Text="  If HobStart is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3f9a50 <line:52:1, col:2>
|   | `-TextComment 0x55887c3f9a20 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f9a70 <col:3, line:53:2> [in] implicitly Param="Type" ParamIndex=0
|   | `-ParagraphComment 0x55887c3f9b20 <line:52:15, line:53:2>
|   |   |-TextComment 0x55887c3f9ad0 <line:52:15, col:47> Text="          The HOB type to return."
|   |   `-TextComment 0x55887c3f9af0 <line:53:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f9b40 <col:3, col:64> [in] implicitly Param="HobStart" ParamIndex=1
|   | `-ParagraphComment 0x55887c3f9bd0 <col:19, col:64>
|   |   `-TextComment 0x55887c3f9ba0 <col:19, col:64> Text="      The starting HOB pointer to search from."
|   |-ParagraphComment 0x55887c3f9c20 <line:55:1, col:2>
|   | `-TextComment 0x55887c3f9bf0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3f9c40 <col:3, col:64> Name="return"
|     `-ParagraphComment 0x55887c3f9ca0 <col:10, col:64>
|       `-TextComment 0x55887c3f9c70 <col:10, col:64> Text=" The next instance of a HOB type from the starting HOB."
|-FunctionDecl 0x55887c194620 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:82:3> line:80:1 GetFirstHob 'void *(UINT16)'
| |-ParmVarDecl 0x55887c194528 <line:81:6, col:14> col:14 Type 'UINT16':'unsigned short'
| `-FullComment 0x55887c3fa090 <line:66:1, line:75:64>
|   |-ParagraphComment 0x55887c3f9da0 <line:66:1, col:68>
|   | `-TextComment 0x55887c3f9d70 <col:1, col:68> Text="  Returns the first instance of a HOB type among the whole HOB list."
|   |-ParagraphComment 0x55887c3f9e10 <line:68:1, line:69:77>
|   | |-TextComment 0x55887c3f9dc0 <line:68:1, col:83> Text="  This function searches the first instance of a HOB type among the whole HOB list."
|   | `-TextComment 0x55887c3f9de0 <line:69:1, col:77> Text="  If there does not exist such HOB type in the HOB list, it will return NULL."
|   |-ParagraphComment 0x55887c3f9e60 <line:71:1, col:56>
|   | `-TextComment 0x55887c3f9e30 <col:1, col:56> Text="  If the pointer to the HOB list is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3f9eb0 <line:73:1, col:2>
|   | `-TextComment 0x55887c3f9e80 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3f9ed0 <col:3, col:47> [in] implicitly Param="Type" ParamIndex=0
|   | `-ParagraphComment 0x55887c3f9f60 <col:15, col:47>
|   |   `-TextComment 0x55887c3f9f30 <col:15, col:47> Text="          The HOB type to return."
|   |-ParagraphComment 0x55887c3f9fb0 <line:75:1, col:2>
|   | `-TextComment 0x55887c3f9f80 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3f9fd0 <col:3, col:64> Name="return"
|     `-ParagraphComment 0x55887c3fa030 <col:10, col:64>
|       `-TextComment 0x55887c3fa000 <col:10, col:64> Text=" The next instance of a HOB type from the starting HOB."
|-FunctionDecl 0x55887c1958f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:111:3> line:108:1 GetNextGuidHob 'void *(const EFI_GUID *, const void *)'
| |-ParmVarDecl 0x55887c194708 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:109:23> col:23 Guid 'const EFI_GUID *'
| |-ParmVarDecl 0x55887c194788 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:110:23> col:23 HobStart 'const void *'
| `-FullComment 0x55887c38b460 <line:85:1, line:103:74>
|   |-ParagraphComment 0x55887c38af60 <line:85:1, col:74>
|   | `-TextComment 0x55887c3fa100 <col:1, col:74> Text="  Returns the next instance of the matched GUID HOB from the starting HOB."
|   |-ParagraphComment 0x55887c38b0f0 <line:87:1, line:95:81>
|   | |-TextComment 0x55887c38af80 <line:87:1, col:83> Text="  This function searches the first instance of a HOB from the starting HOB pointer."
|   | |-TextComment 0x55887c38afa0 <line:88:1, col:41> Text="  Such HOB should satisfy two conditions:"
|   | |-TextComment 0x55887c38afc0 <line:89:1, col:89> Text="  its HOB type is EFI_HOB_TYPE_GUID_EXTENSION and its GUID Name equals to the input Guid."
|   | |-TextComment 0x55887c38afe0 <line:90:1, col:86> Text="  If there does not exist such HOB from the starting HOB pointer, it will return NULL."
|   | |-TextComment 0x55887c38b000 <line:91:1, col:80> Text="  Caller is required to apply GET_GUID_HOB_DATA () and GET_GUID_HOB_DATA_SIZE ()"
|   | |-TextComment 0x55887c38b020 <line:92:1, col:61> Text="  to extract the data section and its size info respectively."
|   | |-TextComment 0x55887c38b040 <line:93:1, col:93> Text="  In contrast with macro GET_NEXT_HOB(), this function does not skip the starting HOB pointer"
|   | |-TextComment 0x55887c38b060 <line:94:1, col:85> Text="  unconditionally: it returns HobStart back if HobStart itself meets the requirement;"
|   | `-TextComment 0x55887c38b080 <line:95:1, col:81> Text="  caller is required to use GET_NEXT_HOB() if it wishes to skip current HobStart."
|   |-ParagraphComment 0x55887c38b160 <line:97:1, line:98:37>
|   | |-TextComment 0x55887c38b110 <line:97:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   | `-TextComment 0x55887c38b130 <line:98:1, col:37> Text="  If HobStart is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c38b1b0 <line:100:1, col:2>
|   | `-TextComment 0x55887c38b180 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38b1d0 <col:3, line:101:2> [in] implicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c38b280 <line:100:15, line:101:2>
|   |   |-TextComment 0x55887c38b230 <line:100:15, col:63> Text="          The GUID to match with in the HOB list."
|   |   `-TextComment 0x55887c38b250 <line:101:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38b2a0 <col:3, col:44> [in] implicitly Param="HobStart" ParamIndex=1
|   | `-ParagraphComment 0x55887c38b330 <col:19, col:44>
|   |   `-TextComment 0x55887c38b300 <col:19, col:44> Text="      A pointer to a Guid."
|   |-ParagraphComment 0x55887c38b380 <line:103:1, col:2>
|   | `-TextComment 0x55887c38b350 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c38b3a0 <col:3, col:74> Name="return"
|     `-ParagraphComment 0x55887c38b400 <col:10, col:74>
|       `-TextComment 0x55887c38b3d0 <col:10, col:74> Text=" The next instance of the matched GUID HOB from the starting HOB."
|-FunctionDecl 0x55887c195ad0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:135:3> line:133:1 used GetFirstGuidHob 'void *(const EFI_GUID *)'
| |-ParmVarDecl 0x55887c1959d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:134:23> col:23 Guid 'const EFI_GUID *'
| `-FullComment 0x55887c38b8b0 <line:114:1, line:128:78>
|   |-ParagraphComment 0x55887c38b500 <line:114:1, col:78>
|   | `-TextComment 0x55887c38b4d0 <col:1, col:78> Text="  Returns the first instance of the matched GUID HOB among the whole HOB list."
|   |-ParagraphComment 0x55887c38b610 <line:116:1, line:121:61>
|   | |-TextComment 0x55887c38b520 <line:116:1, col:78> Text="  This function searches the first instance of a HOB among the whole HOB list."
|   | |-TextComment 0x55887c38b540 <line:117:1, col:41> Text="  Such HOB should satisfy two conditions:"
|   | |-TextComment 0x55887c38b560 <line:118:1, col:89> Text="  its HOB type is EFI_HOB_TYPE_GUID_EXTENSION and its GUID Name equals to the input Guid."
|   | |-TextComment 0x55887c38b580 <line:119:1, col:86> Text="  If there does not exist such HOB from the starting HOB pointer, it will return NULL."
|   | |-TextComment 0x55887c38b5a0 <line:120:1, col:80> Text="  Caller is required to apply GET_GUID_HOB_DATA () and GET_GUID_HOB_DATA_SIZE ()"
|   | `-TextComment 0x55887c38b5c0 <line:121:1, col:61> Text="  to extract the data section and its size info respectively."
|   |-ParagraphComment 0x55887c38b680 <line:123:1, line:124:33>
|   | |-TextComment 0x55887c38b630 <line:123:1, col:56> Text="  If the pointer to the HOB list is NULL, then ASSERT()."
|   | `-TextComment 0x55887c38b650 <line:124:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c38b6d0 <line:126:1, col:2>
|   | `-TextComment 0x55887c38b6a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38b6f0 <col:3, col:63> [in] implicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c38b780 <col:15, col:63>
|   |   `-TextComment 0x55887c38b750 <col:15, col:63> Text="          The GUID to match with in the HOB list."
|   |-ParagraphComment 0x55887c38b7d0 <line:128:1, col:2>
|   | `-TextComment 0x55887c38b7a0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c38b7f0 <col:3, col:78> Name="return"
|     `-ParagraphComment 0x55887c38b850 <col:10, col:78>
|       `-TextComment 0x55887c38b820 <col:10, col:78> Text=" The first instance of the matched GUID HOB among the whole HOB list."
|-FunctionDecl 0x55887c195c98 <line:150:1, line:154:3> line:152:1 used GetBootModeHob 'EFI_BOOT_MODE (void)'
| `-FullComment 0x55887c38bc10 <line:138:1, line:147:24>
|   |-ParagraphComment 0x55887c38b950 <line:138:1, col:45>
|   | `-TextComment 0x55887c38b920 <col:1, col:45> Text="  Get the system boot mode from the HOB list."
|   |-ParagraphComment 0x55887c38b9c0 <line:140:1, line:141:23>
|   | |-TextComment 0x55887c38b970 <line:140:1, col:65> Text="  This function returns the system boot mode information from the"
|   | `-TextComment 0x55887c38b990 <line:141:1, col:23> Text="  PHIT HOB in HOB list."
|   |-ParagraphComment 0x55887c38ba10 <line:143:1, col:56>
|   | `-TextComment 0x55887c38b9e0 <col:1, col:56> Text="  If the pointer to the HOB list is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c38ba60 <line:145:1, col:2>
|   | `-TextComment 0x55887c38ba30 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38ba80 <col:3, col:14> [in] implicitly Param="VOID"
|   | `-ParagraphComment 0x55887c38bae0 <<invalid sloc>>
|   |-ParagraphComment 0x55887c38bb30 <line:147:1, col:2>
|   | `-TextComment 0x55887c38bb00 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c38bb50 <col:3, col:24> Name="return"
|     `-ParagraphComment 0x55887c38bbb0 <col:10, col:24>
|       `-TextComment 0x55887c38bb80 <col:10, col:24> Text=" The Boot Mode."
|-FunctionDecl 0x55887c196028 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:179:3> line:174:1 used BuildModuleHob 'void (const EFI_GUID *, EFI_PHYSICAL_ADDRESS, UINT64, EFI_PHYSICAL_ADDRESS)'
| |-ParmVarDecl 0x55887c195d78 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:175:29> col:29 ModuleName 'const EFI_GUID *'
| |-ParmVarDecl 0x55887c195df0 <line:176:6, col:28> col:28 MemoryAllocationModule 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| |-ParmVarDecl 0x55887c195e68 <line:177:6, col:28> col:28 ModuleLength 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c195ee0 <line:178:6, col:28> col:28 EntryPoint 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| `-FullComment 0x55887c38c1a0 <line:157:1, line:169:88>
|   |-ParagraphComment 0x55887c38bcb0 <line:157:1, col:40>
|   | `-TextComment 0x55887c38bc80 <col:1, col:40> Text="  Builds a HOB for a loaded PE32 module."
|   |-ParagraphComment 0x55887c38bd50 <line:159:1, line:161:75>
|   | |-TextComment 0x55887c38bcd0 <line:159:1, col:54> Text="  This function builds a HOB for a loaded PE32 module."
|   | |-TextComment 0x55887c38bcf0 <line:160:1, col:42> Text="  It can only be invoked during PEI phase;"
|   | `-TextComment 0x55887c38bd10 <line:161:1, col:75> Text="  for DXE phase, it will ASSERT() since PEI HOB is read-only for DXE phase."
|   |-ParagraphComment 0x55887c38bdc0 <line:163:1, line:164:66>
|   | |-TextComment 0x55887c38bd70 <line:163:1, col:39> Text="  If ModuleName is NULL, then ASSERT()."
|   | `-TextComment 0x55887c38bd90 <line:164:1, col:66> Text="  If there is no additional space for HOB creation, then ASSERT()."
|   |-ParagraphComment 0x55887c38be10 <line:166:1, col:2>
|   | `-TextComment 0x55887c38bde0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38be30 <col:3, line:167:2> [in] implicitly Param="ModuleName" ParamIndex=0
|   | `-ParagraphComment 0x55887c38bee0 <line:166:21, line:167:2>
|   |   |-TextComment 0x55887c38be90 <line:166:21, col:67> Text="              The GUID File Name of the module."
|   |   `-TextComment 0x55887c38beb0 <line:167:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38bf00 <col:3, line:168:2> [in] implicitly Param="MemoryAllocationModule" ParamIndex=1
|   | `-ParagraphComment 0x55887c38bfc0 <line:167:33, line:168:2>
|   |   |-TextComment 0x55887c38bf70 <line:167:33, col:76> Text="  The 64 bit physical address of the module."
|   |   `-TextComment 0x55887c38bf90 <line:168:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38bfe0 <col:3, line:169:2> [in] implicitly Param="ModuleLength" ParamIndex=2
|   | `-ParagraphComment 0x55887c38c090 <line:168:23, line:169:2>
|   |   |-TextComment 0x55887c38c040 <line:168:23, col:68> Text="            The length of the module in bytes."
|   |   `-TextComment 0x55887c38c060 <line:169:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c38c0b0 <col:3, col:88> [in] implicitly Param="EntryPoint" ParamIndex=3
|     `-ParagraphComment 0x55887c38c140 <col:21, col:88>
|       `-TextComment 0x55887c38c110 <col:21, col:88> Text="              The 64 bit physical address of the module entry point."
|-FunctionDecl 0x55887c196458 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:205:3> line:199:1 BuildResourceDescriptorWithOwnerHob 'void (EFI_RESOURCE_TYPE, EFI_RESOURCE_ATTRIBUTE_TYPE, EFI_PHYSICAL_ADDRESS, UINT64, EFI_GUID *)'
| |-ParmVarDecl 0x55887c196128 <line:200:6, col:35> col:35 ResourceType 'EFI_RESOURCE_TYPE':'unsigned int'
| |-ParmVarDecl 0x55887c1961a0 <line:201:6, col:35> col:35 ResourceAttribute 'EFI_RESOURCE_ATTRIBUTE_TYPE':'unsigned int'
| |-ParmVarDecl 0x55887c196218 <line:202:6, col:35> col:35 PhysicalStart 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| |-ParmVarDecl 0x55887c196290 <line:203:6, col:35> col:35 NumberOfBytes 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c196308 <line:204:6, col:36> col:36 OwnerGUID 'EFI_GUID *'
| `-FullComment 0x55887c38c7f0 <line:182:1, line:194:66>
|   |-ParagraphComment 0x55887c38c240 <line:182:1, col:71>
|   | `-TextComment 0x55887c38c210 <col:1, col:71> Text="  Builds a HOB that describes a chunk of system memory with Owner GUID."
|   |-ParagraphComment 0x55887c38c2e0 <line:184:1, line:186:75>
|   | |-TextComment 0x55887c38c260 <line:184:1, col:69> Text="  This function builds a HOB that describes a chunk of system memory."
|   | |-TextComment 0x55887c38c280 <line:185:1, col:42> Text="  It can only be invoked during PEI phase;"
|   | `-TextComment 0x55887c38c2a0 <line:186:1, col:75> Text="  for DXE phase, it will ASSERT() since PEI HOB is read-only for DXE phase."
|   |-ParagraphComment 0x55887c38c330 <line:188:1, col:66>
|   | `-TextComment 0x55887c38c300 <col:1, col:66> Text="  If there is no additional space for HOB creation, then ASSERT()."
|   |-ParagraphComment 0x55887c38c380 <line:190:1, col:2>
|   | `-TextComment 0x55887c38c350 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38c3a0 <col:3, line:191:2> [in] implicitly Param="ResourceType" ParamIndex=0
|   | `-ParagraphComment 0x55887c38c450 <line:190:23, line:191:2>
|   |   |-TextComment 0x55887c38c400 <line:190:23, col:73> Text="        The type of resource described by this HOB."
|   |   `-TextComment 0x55887c38c420 <line:191:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38c470 <col:3, line:192:2> [in] implicitly Param="ResourceAttribute" ParamIndex=1
|   | `-ParagraphComment 0x55887c38c530 <line:191:28, line:192:2>
|   |   |-TextComment 0x55887c38c4e0 <line:191:28, col:90> Text="   The resource attributes of the memory described by this HOB."
|   |   `-TextComment 0x55887c38c500 <line:192:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38c550 <col:3, line:193:2> [in] implicitly Param="PhysicalStart" ParamIndex=2
|   | `-ParagraphComment 0x55887c38c600 <line:192:24, line:193:2>
|   |   |-TextComment 0x55887c38c5b0 <line:192:24, col:90> Text="       The 64 bit physical address of memory described by this HOB."
|   |   `-TextComment 0x55887c38c5d0 <line:193:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38c620 <col:3, line:194:2> [in] implicitly Param="NumberOfBytes" ParamIndex=3
|   | `-ParagraphComment 0x55887c38c6d0 <line:193:24, line:194:2>
|   |   |-TextComment 0x55887c38c680 <line:193:24, col:86> Text="       The length of the memory described by this HOB in bytes."
|   |   `-TextComment 0x55887c38c6a0 <line:194:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c38c6f0 <col:3, col:66> [in] implicitly Param="OwnerGUID" ParamIndex=4
|     `-ParagraphComment 0x55887c38c780 <col:20, col:66>
|       `-TextComment 0x55887c38c750 <col:20, col:66> Text="           GUID for the owner of this resource."
|-FunctionDecl 0x55887c196890 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:229:3> line:224:1 BuildResourceDescriptorHob 'void (EFI_RESOURCE_TYPE, EFI_RESOURCE_ATTRIBUTE_TYPE, EFI_PHYSICAL_ADDRESS, UINT64)'
| |-ParmVarDecl 0x55887c196558 <line:225:6, col:35> col:35 ResourceType 'EFI_RESOURCE_TYPE':'unsigned int'
| |-ParmVarDecl 0x55887c1965d0 <line:226:6, col:35> col:35 ResourceAttribute 'EFI_RESOURCE_ATTRIBUTE_TYPE':'unsigned int'
| |-ParmVarDecl 0x55887c196648 <line:227:6, col:35> col:35 PhysicalStart 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| |-ParmVarDecl 0x55887c1966c0 <line:228:6, col:35> col:35 NumberOfBytes 'UINT64':'unsigned long long'
| `-FullComment 0x55887c38cd60 <line:208:1, line:219:86>
|   |-ParagraphComment 0x55887c38c890 <line:208:1, col:55>
|   | `-TextComment 0x55887c38c860 <col:1, col:55> Text="  Builds a HOB that describes a chunk of system memory."
|   |-ParagraphComment 0x55887c38c930 <line:210:1, line:212:75>
|   | |-TextComment 0x55887c38c8b0 <line:210:1, col:69> Text="  This function builds a HOB that describes a chunk of system memory."
|   | |-TextComment 0x55887c38c8d0 <line:211:1, col:42> Text="  It can only be invoked during PEI phase;"
|   | `-TextComment 0x55887c38c8f0 <line:212:1, col:75> Text="  for DXE phase, it will ASSERT() since PEI HOB is read-only for DXE phase."
|   |-ParagraphComment 0x55887c38c980 <line:214:1, col:66>
|   | `-TextComment 0x55887c38c950 <col:1, col:66> Text="  If there is no additional space for HOB creation, then ASSERT()."
|   |-ParagraphComment 0x55887c38c9d0 <line:216:1, col:2>
|   | `-TextComment 0x55887c38c9a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38c9f0 <col:3, line:217:2> [in] implicitly Param="ResourceType" ParamIndex=0
|   | `-ParagraphComment 0x55887c38caa0 <line:216:23, line:217:2>
|   |   |-TextComment 0x55887c38ca50 <line:216:23, col:73> Text="        The type of resource described by this HOB."
|   |   `-TextComment 0x55887c38ca70 <line:217:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38cac0 <col:3, line:218:2> [in] implicitly Param="ResourceAttribute" ParamIndex=1
|   | `-ParagraphComment 0x55887c38cb80 <line:217:28, line:218:2>
|   |   |-TextComment 0x55887c38cb30 <line:217:28, col:90> Text="   The resource attributes of the memory described by this HOB."
|   |   `-TextComment 0x55887c38cb50 <line:218:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38cba0 <col:3, line:219:2> [in] implicitly Param="PhysicalStart" ParamIndex=2
|   | `-ParagraphComment 0x55887c38cc50 <line:218:24, line:219:2>
|   |   |-TextComment 0x55887c38cc00 <line:218:24, col:90> Text="       The 64 bit physical address of memory described by this HOB."
|   |   `-TextComment 0x55887c38cc20 <line:219:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c38cc70 <col:3, col:86> [in] implicitly Param="NumberOfBytes" ParamIndex=3
|     `-ParagraphComment 0x55887c38cd00 <col:24, col:86>
|       `-TextComment 0x55887c38ccd0 <col:24, col:86> Text="       The length of the memory described by this HOB in bytes."
|-FunctionDecl 0x55887c196b20 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:258:3> line:255:1 BuildGuidHob 'void *(const EFI_GUID *, UINTN)'
| |-ParmVarDecl 0x55887c196988 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:256:23> col:23 Guid 'const EFI_GUID *'
| |-ParmVarDecl 0x55887c196a00 <line:257:6, col:22> col:22 DataLength 'UINTN':'unsigned long long'
| `-FullComment 0x55887c38d3c0 <line:232:1, line:250:59>
|   |-ParagraphComment 0x55887c38ce20 <line:232:1, line:233:37>
|   | |-TextComment 0x55887c38cdd0 <line:232:1, col:75> Text="  Builds a customized HOB tagged with a GUID for identification and returns"
|   | `-TextComment 0x55887c38cdf0 <line:233:1, col:37> Text="  the start address of GUID HOB data."
|   |-ParagraphComment 0x55887c38cf10 <line:235:1, line:239:75>
|   | |-TextComment 0x55887c38ce40 <line:235:1, col:77> Text="  This function builds a customized HOB tagged with a GUID for identification"
|   | |-TextComment 0x55887c38ce60 <line:236:1, col:93> Text="  and returns the start address of GUID HOB data so that caller can fill the customized data."
|   | |-TextComment 0x55887c38ce80 <line:237:1, col:52> Text="  The HOB Header and Name field is already stripped."
|   | |-TextComment 0x55887c38cea0 <line:238:1, col:42> Text="  It can only be invoked during PEI phase;"
|   | `-TextComment 0x55887c38cec0 <line:239:1, col:75> Text="  for DXE phase, it will ASSERT() since PEI HOB is read-only for DXE phase."
|   |-ParagraphComment 0x55887c38cfd0 <line:241:1, line:244:79>
|   | |-TextComment 0x55887c38cf30 <line:241:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   | |-TextComment 0x55887c38cf50 <line:242:1, col:66> Text="  If there is no additional space for HOB creation, then ASSERT()."
|   | |-TextComment 0x55887c38cf70 <line:243:1, col:71> Text="  If DataLength > (0xFFF8 - sizeof (EFI_HOB_GUID_TYPE)), then ASSERT()."
|   | `-TextComment 0x55887c38cf90 <line:244:1, col:79> Text="  HobLength is UINT16 and multiples of 8 bytes, so the max HobLength is 0xFFF8."
|   |-ParagraphComment 0x55887c38d020 <line:246:1, col:2>
|   | `-TextComment 0x55887c38cff0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38d040 <col:3, line:247:2> [in] implicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c38d0f0 <line:246:15, line:247:2>
|   |   |-TextComment 0x55887c38d0a0 <line:246:15, col:59> Text="          The GUID to tag the customized HOB."
|   |   `-TextComment 0x55887c38d0c0 <line:247:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38d110 <col:3, col:70> [in] implicitly Param="DataLength" ParamIndex=1
|   | `-ParagraphComment 0x55887c38d1a0 <col:21, col:70>
|   |   `-TextComment 0x55887c38d170 <col:21, col:70> Text="    The size of the data payload for the GUID HOB."
|   |-ParagraphComment 0x55887c38d1f0 <line:249:1, col:2>
|   | `-TextComment 0x55887c38d1c0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c38d210 <col:3, line:250:2> Name="retval" Arg[0]="NULL"
|   | `-ParagraphComment 0x55887c38d2b0 <line:249:16, line:250:2>
|   |   |-TextComment 0x55887c38d260 <line:249:16, col:60> Text="         The GUID HOB could not be allocated."
|   |   `-TextComment 0x55887c38d280 <line:250:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c38d2d0 <col:3, col:59> Name="retval" Arg[0]="others"
|     `-ParagraphComment 0x55887c38d350 <col:18, col:59>
|       `-TextComment 0x55887c38d320 <col:18, col:59> Text="       The start address of GUID HOB data."
|-FunctionDecl 0x55887c196e30 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:291:3> line:287:1 used BuildGuidDataHob 'void *(const EFI_GUID *, void *, UINTN)'
| |-ParmVarDecl 0x55887c196c08 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:288:23> col:23 Guid 'const EFI_GUID *'
| |-ParmVarDecl 0x55887c196c88 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:289:23> col:23 Data 'void *'
| |-ParmVarDecl 0x55887c196d00 <line:290:6, col:22> col:22 DataLength 'UINTN':'unsigned long long'
| `-FullComment 0x55887c38db40 <line:261:1, line:282:59>
|   |-ParagraphComment 0x55887c38d480 <line:261:1, line:262:65>
|   | |-TextComment 0x55887c38d430 <line:261:1, col:97> Text="  Builds a customized HOB tagged with a GUID for identification, copies the input data to the HOB"
|   | `-TextComment 0x55887c38d450 <line:262:1, col:65> Text="  data field, and returns the start address of the GUID HOB data."
|   |-ParagraphComment 0x55887c38d590 <line:264:1, line:269:75>
|   | |-TextComment 0x55887c38d4a0 <line:264:1, col:98> Text="  This function builds a customized HOB tagged with a GUID for identification and copies the input"
|   | |-TextComment 0x55887c38d4c0 <line:265:1, col:96> Text="  data to the HOB data field and returns the start address of the GUID HOB data.  It can only be"
|   | |-TextComment 0x55887c38d4e0 <line:266:1, col:101> Text="  invoked during PEI phase; for DXE phase, it will ASSERT() since PEI HOB is read-only for DXE phase."
|   | |-TextComment 0x55887c38d500 <line:267:1, col:52> Text="  The HOB Header and Name field is already stripped."
|   | |-TextComment 0x55887c38d520 <line:268:1, col:42> Text="  It can only be invoked during PEI phase;"
|   | `-TextComment 0x55887c38d540 <line:269:1, col:75> Text="  for DXE phase, it will ASSERT() since PEI HOB is read-only for DXE phase."
|   |-ParagraphComment 0x55887c38d680 <line:271:1, line:275:79>
|   | |-TextComment 0x55887c38d5b0 <line:271:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   | |-TextComment 0x55887c38d5d0 <line:272:1, col:52> Text="  If Data is NULL and DataLength > 0, then ASSERT()."
|   | |-TextComment 0x55887c38d5f0 <line:273:1, col:66> Text="  If there is no additional space for HOB creation, then ASSERT()."
|   | |-TextComment 0x55887c38d610 <line:274:1, col:71> Text="  If DataLength > (0xFFF8 - sizeof (EFI_HOB_GUID_TYPE)), then ASSERT()."
|   | `-TextComment 0x55887c38d630 <line:275:1, col:79> Text="  HobLength is UINT16 and multiples of 8 bytes, so the max HobLength is 0xFFF8."
|   |-ParagraphComment 0x55887c38d6d0 <line:277:1, col:2>
|   | `-TextComment 0x55887c38d6a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38d6f0 <col:3, line:278:2> [in] implicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c38d7a0 <line:277:15, line:278:2>
|   |   |-TextComment 0x55887c38d750 <line:277:15, col:59> Text="          The GUID to tag the customized HOB."
|   |   `-TextComment 0x55887c38d770 <line:278:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38d7c0 <col:3, line:279:2> [in] implicitly Param="Data" ParamIndex=1
|   | `-ParagraphComment 0x55887c38d870 <line:278:15, line:279:2>
|   |   |-TextComment 0x55887c38d820 <line:278:15, col:82> Text="          The data to be copied into the data field of the GUID HOB."
|   |   `-TextComment 0x55887c38d840 <line:279:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38d890 <col:3, col:70> [in] implicitly Param="DataLength" ParamIndex=2
|   | `-ParagraphComment 0x55887c38d920 <col:21, col:70>
|   |   `-TextComment 0x55887c38d8f0 <col:21, col:70> Text="    The size of the data payload for the GUID HOB."
|   |-ParagraphComment 0x55887c38d970 <line:281:1, col:2>
|   | `-TextComment 0x55887c38d940 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c38d990 <col:3, line:282:2> Name="retval" Arg[0]="NULL"
|   | `-ParagraphComment 0x55887c38da30 <line:281:16, line:282:2>
|   |   |-TextComment 0x55887c38d9e0 <line:281:16, col:60> Text="         The GUID HOB could not be allocated."
|   |   `-TextComment 0x55887c38da00 <line:282:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c38da50 <col:3, col:59> Name="retval" Arg[0]="others"
|     `-ParagraphComment 0x55887c38dad0 <col:18, col:59>
|       `-TextComment 0x55887c38daa0 <col:18, col:59> Text="       The start address of GUID HOB data."
|-FunctionDecl 0x55887c1970b8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:312:3> line:309:1 BuildFvHob 'void (EFI_PHYSICAL_ADDRESS, UINT64)'
| |-ParmVarDecl 0x55887c196f28 <line:310:6, col:28> col:28 BaseAddress 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| |-ParmVarDecl 0x55887c196fa0 <line:311:6, col:28> col:28 Length 'UINT64':'unsigned long long'
| `-FullComment 0x55887c38df10 <line:294:1, line:304:65>
|   |-ParagraphComment 0x55887c38dbe0 <line:294:1, col:31>
|   | `-TextComment 0x55887c38dbb0 <col:1, col:31> Text="  Builds a Firmware Volume HOB."
|   |-ParagraphComment 0x55887c38dc80 <line:296:1, line:298:75>
|   | |-TextComment 0x55887c38dc00 <line:296:1, col:45> Text="  This function builds a Firmware Volume HOB."
|   | |-TextComment 0x55887c38dc20 <line:297:1, col:42> Text="  It can only be invoked during PEI phase;"
|   | `-TextComment 0x55887c38dc40 <line:298:1, col:75> Text="  for DXE phase, it will ASSERT() since PEI HOB is read-only for DXE phase."
|   |-ParagraphComment 0x55887c38dcf0 <line:300:1, line:301:72>
|   | |-TextComment 0x55887c38dca0 <line:300:1, col:66> Text="  If there is no additional space for HOB creation, then ASSERT()."
|   | `-TextComment 0x55887c38dcc0 <line:301:1, col:72> Text="  If the FvImage buffer is not at its required alignment, then ASSERT()."
|   |-ParagraphComment 0x55887c38dd40 <line:303:1, col:2>
|   | `-TextComment 0x55887c38dd10 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38dd60 <col:3, line:304:2> [in] implicitly Param="BaseAddress" ParamIndex=0
|   | `-ParagraphComment 0x55887c38de10 <line:303:22, line:304:2>
|   |   |-TextComment 0x55887c38ddc0 <line:303:22, col:64> Text="   The base address of the Firmware Volume."
|   |   `-TextComment 0x55887c38dde0 <line:304:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c38de30 <col:3, col:65> [in] implicitly Param="Length" ParamIndex=1
|     `-ParagraphComment 0x55887c38dec0 <col:17, col:65>
|       `-TextComment 0x55887c38de90 <col:17, col:65> Text="        The size of the Firmware Volume in bytes."
|-FunctionDecl 0x55887c197458 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:337:3> line:332:1 BuildFv2Hob 'void (EFI_PHYSICAL_ADDRESS, UINT64, const EFI_GUID *, const EFI_GUID *)'
| |-ParmVarDecl 0x55887c1971a8 <line:333:15, col:37> col:37 BaseAddress 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| |-ParmVarDecl 0x55887c197220 <line:334:15, col:37> col:37 Length 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c197298 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:335:38> col:38 FvName 'const EFI_GUID *'
| |-ParmVarDecl 0x55887c197310 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:336:38> col:38 FileName 'const EFI_GUID *'
| `-FullComment 0x55887c38e490 <line:315:1, line:327:45>
|   |-ParagraphComment 0x55887c38dfb0 <line:315:1, col:32>
|   | `-TextComment 0x55887c38df80 <col:1, col:32> Text="  Builds a EFI_HOB_TYPE_FV2 HOB."
|   |-ParagraphComment 0x55887c38e050 <line:317:1, line:319:75>
|   | |-TextComment 0x55887c38dfd0 <line:317:1, col:46> Text="  This function builds a EFI_HOB_TYPE_FV2 HOB."
|   | |-TextComment 0x55887c38dff0 <line:318:1, col:42> Text="  It can only be invoked during PEI phase;"
|   | `-TextComment 0x55887c38e010 <line:319:1, col:75> Text="  for DXE phase, it will ASSERT() since PEI HOB is read-only for DXE phase."
|   |-ParagraphComment 0x55887c38e0c0 <line:321:1, line:322:72>
|   | |-TextComment 0x55887c38e070 <line:321:1, col:66> Text="  If there is no additional space for HOB creation, then ASSERT()."
|   | `-TextComment 0x55887c38e090 <line:322:1, col:72> Text="  If the FvImage buffer is not at its required alignment, then ASSERT()."
|   |-ParagraphComment 0x55887c38e110 <line:324:1, col:2>
|   | `-TextComment 0x55887c38e0e0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38e130 <col:3, line:325:2> [in] implicitly Param="BaseAddress" ParamIndex=0
|   | `-ParagraphComment 0x55887c38e1e0 <line:324:22, line:325:2>
|   |   |-TextComment 0x55887c38e190 <line:324:22, col:64> Text="   The base address of the Firmware Volume."
|   |   `-TextComment 0x55887c38e1b0 <line:325:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38e200 <col:3, line:326:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c38e2b0 <line:325:17, line:326:2>
|   |   |-TextComment 0x55887c38e260 <line:325:17, col:65> Text="        The size of the Firmware Volume in bytes."
|   |   `-TextComment 0x55887c38e280 <line:326:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38e2d0 <col:3, line:327:2> [in] implicitly Param="FvName" ParamIndex=2
|   | `-ParagraphComment 0x55887c38e380 <line:326:17, line:327:2>
|   |   |-TextComment 0x55887c38e330 <line:326:17, col:56> Text="        The name of the Firmware Volume."
|   |   `-TextComment 0x55887c38e350 <line:327:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c38e3a0 <col:3, col:45> [in] implicitly Param="FileName" ParamIndex=3
|     `-ParagraphComment 0x55887c38e430 <col:19, col:45>
|       `-TextComment 0x55887c38e400 <col:19, col:45> Text="      The name of the file."
|-FunctionDecl 0x55887c137f38 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:369:3> line:362:1 BuildFv3Hob 'void (EFI_PHYSICAL_ADDRESS, UINT64, UINT32, BOOLEAN, const EFI_GUID *, const EFI_GUID *)'
| |-ParmVarDecl 0x55887c197558 <line:363:15, col:37> col:37 BaseAddress 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| |-ParmVarDecl 0x55887c1975d0 <line:364:15, col:37> col:37 Length 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c197648 <line:365:15, col:37> col:37 AuthenticationStatus 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c1976c0 <line:366:15, col:37> col:37 ExtractedFv 'BOOLEAN':'unsigned char'
| |-ParmVarDecl 0x55887c197738 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:367:38> col:38 FvName 'const EFI_GUID *'
| |-ParmVarDecl 0x55887c1977b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:368:38> col:38 FileName 'const EFI_GUID *'
| `-FullComment 0x55887c38ec50 <line:340:1, line:357:68>
|   |-ParagraphComment 0x55887c38e530 <line:340:1, col:32>
|   | `-TextComment 0x55887c38e500 <col:1, col:32> Text="  Builds a EFI_HOB_TYPE_FV3 HOB."
|   |-ParagraphComment 0x55887c38e5d0 <line:342:1, line:344:75>
|   | |-TextComment 0x55887c38e550 <line:342:1, col:46> Text="  This function builds a EFI_HOB_TYPE_FV3 HOB."
|   | |-TextComment 0x55887c38e570 <line:343:1, col:42> Text="  It can only be invoked during PEI phase;"
|   | `-TextComment 0x55887c38e590 <line:344:1, col:75> Text="  for DXE phase, it will ASSERT() since PEI HOB is read-only for DXE phase."
|   |-ParagraphComment 0x55887c38e640 <line:346:1, line:347:72>
|   | |-TextComment 0x55887c38e5f0 <line:346:1, col:66> Text="  If there is no additional space for HOB creation, then ASSERT()."
|   | `-TextComment 0x55887c38e610 <line:347:1, col:72> Text="  If the FvImage buffer is not at its required alignment, then ASSERT()."
|   |-ParagraphComment 0x55887c38e690 <line:349:1, col:2>
|   | `-TextComment 0x55887c38e660 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38e6b0 <col:3, line:350:2> [in] implicitly Param="BaseAddress" ParamIndex=0
|   | `-ParagraphComment 0x55887c38e760 <line:349:21, line:350:2>
|   |   |-TextComment 0x55887c38e710 <line:349:21, col:72> Text="            The base address of the Firmware Volume."
|   |   `-TextComment 0x55887c38e730 <line:350:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38e780 <col:3, line:351:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c38e830 <line:350:16, line:351:2>
|   |   |-TextComment 0x55887c38e7e0 <line:350:16, col:73> Text="                 The size of the Firmware Volume in bytes."
|   |   `-TextComment 0x55887c38e800 <line:351:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38e850 <col:3, line:352:2> [in] implicitly Param="AuthenticationStatus" ParamIndex=2
|   | `-ParagraphComment 0x55887c38e910 <line:351:30, line:352:2>
|   |   |-TextComment 0x55887c38e8c0 <line:351:30, col:58> Text="   The authentication status."
|   |   `-TextComment 0x55887c38e8e0 <line:352:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38e930 <col:3, line:354:2> [in] implicitly Param="ExtractedFv" ParamIndex=3
|   | `-ParagraphComment 0x55887c38ea10 <line:352:21, line:354:2>
|   |   |-TextComment 0x55887c38e990 <line:352:21, col:77> Text="            TRUE if the FV was extracted as a file within"
|   |   |-TextComment 0x55887c38e9b0 <line:353:1, col:73> Text="                                another firmware volume. FALSE otherwise."
|   |   `-TextComment 0x55887c38e9d0 <line:354:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38ea30 <col:3, line:356:2> [in] implicitly Param="FvName" ParamIndex=4
|   | `-ParagraphComment 0x55887c38eb10 <line:354:16, line:356:2>
|   |   |-TextComment 0x55887c38ea90 <line:354:16, col:64> Text="                 The name of the Firmware Volume."
|   |   |-TextComment 0x55887c38eab0 <line:355:1, col:68> Text="                                Valid only if IsExtractedFv is TRUE."
|   |   `-TextComment 0x55887c38ead0 <line:356:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c38eb30 <col:3, line:357:68> [in] implicitly Param="FileName" ParamIndex=5
|     `-ParagraphComment 0x55887c38ebe0 <line:356:18, line:357:68>
|       |-TextComment 0x55887c38eb90 <line:356:18, col:53> Text="               The name of the file."
|       `-TextComment 0x55887c38ebb0 <line:357:1, col:68> Text="                                Valid only if IsExtractedFv is TRUE."
|-FunctionDecl 0x55887c138158 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:390:3> line:387:1 BuildCvHob 'void (EFI_PHYSICAL_ADDRESS, UINT64)'
| |-ParmVarDecl 0x55887c138048 <line:388:6, col:28> col:28 BaseAddress 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| |-ParmVarDecl 0x55887c1380c0 <line:389:6, col:28> col:28 Length 'UINT64':'unsigned long long'
| `-FullComment 0x55887c403250 <line:372:1, line:382:64>
|   |-ParagraphComment 0x55887c38ecf0 <line:372:1, col:30>
|   | `-TextComment 0x55887c38ecc0 <col:1, col:30> Text="  Builds a Capsule Volume HOB."
|   |-ParagraphComment 0x55887c38ed90 <line:374:1, line:376:75>
|   | |-TextComment 0x55887c38ed10 <line:374:1, col:44> Text="  This function builds a Capsule Volume HOB."
|   | |-TextComment 0x55887c38ed30 <line:375:1, col:42> Text="  It can only be invoked during PEI phase;"
|   | `-TextComment 0x55887c38ed50 <line:376:1, col:75> Text="  for DXE phase, it will ASSERT() since PEI HOB is read-only for DXE phase."
|   |-ParagraphComment 0x55887c38ee00 <line:378:1, line:379:66>
|   | |-TextComment 0x55887c38edb0 <line:378:1, col:70> Text="  If the platform does not support Capsule Volume HOBs, then ASSERT()."
|   | `-TextComment 0x55887c38edd0 <line:379:1, col:66> Text="  If there is no additional space for HOB creation, then ASSERT()."
|   |-ParagraphComment 0x55887c38ee50 <line:381:1, col:2>
|   | `-TextComment 0x55887c38ee20 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c38ee70 <col:3, line:382:2> [in] implicitly Param="BaseAddress" ParamIndex=0
|   | `-ParagraphComment 0x55887c38ef20 <line:381:22, line:382:2>
|   |   |-TextComment 0x55887c38eed0 <line:381:22, col:63> Text="   The base address of the Capsule Volume."
|   |   `-TextComment 0x55887c38eef0 <line:382:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c403170 <col:3, col:64> [in] implicitly Param="Length" ParamIndex=1
|     `-ParagraphComment 0x55887c403200 <col:17, col:64>
|       `-TextComment 0x55887c4031d0 <col:17, col:64> Text="        The size of the Capsule Volume in bytes."
|-FunctionDecl 0x55887c1383d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:410:3> line:407:1 BuildCpuHob 'void (UINT8, UINT8)'
| |-ParmVarDecl 0x55887c138248 <line:408:6, col:13> col:13 SizeOfMemorySpace 'UINT8':'unsigned char'
| |-ParmVarDecl 0x55887c1382c0 <line:409:6, col:13> col:13 SizeOfIoSpace 'UINT8':'unsigned char'
| `-FullComment 0x55887c403610 <line:393:1, line:402:87>
|   |-ParagraphComment 0x55887c4032f0 <line:393:1, col:27>
|   | `-TextComment 0x55887c4032c0 <col:1, col:27> Text="  Builds a HOB for the CPU."
|   |-ParagraphComment 0x55887c403390 <line:395:1, line:397:75>
|   | |-TextComment 0x55887c403310 <line:395:1, col:41> Text="  This function builds a HOB for the CPU."
|   | |-TextComment 0x55887c403330 <line:396:1, col:42> Text="  It can only be invoked during PEI phase;"
|   | `-TextComment 0x55887c403350 <line:397:1, col:75> Text="  for DXE phase, it will ASSERT() since PEI HOB is read-only for DXE phase."
|   |-ParagraphComment 0x55887c4033e0 <line:399:1, col:66>
|   | `-TextComment 0x55887c4033b0 <col:1, col:66> Text="  If there is no additional space for HOB creation, then ASSERT()."
|   |-ParagraphComment 0x55887c403430 <line:401:1, col:2>
|   | `-TextComment 0x55887c403400 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c403450 <col:3, line:402:2> [in] implicitly Param="SizeOfMemorySpace" ParamIndex=0
|   | `-ParagraphComment 0x55887c403510 <line:401:28, line:402:2>
|   |   |-TextComment 0x55887c4034c0 <line:401:28, col:90> Text="   The maximum physical memory addressability of the processor."
|   |   `-TextComment 0x55887c4034e0 <line:402:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c403530 <col:3, col:87> [in] implicitly Param="SizeOfIoSpace" ParamIndex=1
|     `-ParagraphComment 0x55887c4035c0 <col:24, col:87>
|       `-TextComment 0x55887c403590 <col:24, col:87> Text="       The maximum physical I/O addressability of the processor."
|-FunctionDecl 0x55887c1385d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:430:3> line:427:1 BuildStackHob 'void (EFI_PHYSICAL_ADDRESS, UINT64)'
| |-ParmVarDecl 0x55887c1384c8 <line:428:6, col:28> col:28 BaseAddress 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| |-ParmVarDecl 0x55887c138540 <line:429:6, col:28> col:28 Length 'UINT64':'unsigned long long'
| `-FullComment 0x55887c4039c0 <line:413:1, line:422:57>
|   |-ParagraphComment 0x55887c4036b0 <line:413:1, col:29>
|   | `-TextComment 0x55887c403680 <col:1, col:29> Text="  Builds a HOB for the Stack."
|   |-ParagraphComment 0x55887c403750 <line:415:1, line:417:75>
|   | |-TextComment 0x55887c4036d0 <line:415:1, col:43> Text="  This function builds a HOB for the stack."
|   | |-TextComment 0x55887c4036f0 <line:416:1, col:42> Text="  It can only be invoked during PEI phase;"
|   | `-TextComment 0x55887c403710 <line:417:1, col:75> Text="  for DXE phase, it will ASSERT() since PEI HOB is read-only for DXE phase."
|   |-ParagraphComment 0x55887c4037a0 <line:419:1, col:66>
|   | `-TextComment 0x55887c403770 <col:1, col:66> Text="  If there is no additional space for HOB creation, then ASSERT()."
|   |-ParagraphComment 0x55887c4037f0 <line:421:1, col:2>
|   | `-TextComment 0x55887c4037c0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c403810 <col:3, line:422:2> [in] implicitly Param="BaseAddress" ParamIndex=0
|   | `-ParagraphComment 0x55887c4038c0 <line:421:22, line:422:2>
|   |   |-TextComment 0x55887c403870 <line:421:22, col:65> Text="   The 64 bit physical address of the Stack."
|   |   `-TextComment 0x55887c403890 <line:422:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c4038e0 <col:3, col:57> [in] implicitly Param="Length" ParamIndex=1
|     `-ParagraphComment 0x55887c403970 <col:17, col:57>
|       `-TextComment 0x55887c403940 <col:17, col:57> Text="        The length of the stack in bytes."
|-FunctionDecl 0x55887c1388d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:452:3> line:448:1 BuildBspStoreHob 'void (EFI_PHYSICAL_ADDRESS, UINT64, EFI_MEMORY_TYPE)'
| |-ParmVarDecl 0x55887c1386c8 <line:449:6, col:28> col:28 BaseAddress 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| |-ParmVarDecl 0x55887c138740 <line:450:6, col:28> col:28 Length 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c1387b8 <line:451:6, col:28> col:28 MemoryType 'EFI_MEMORY_TYPE':'EFI_MEMORY_TYPE'
| `-FullComment 0x55887c403e50 <line:433:1, line:443:61>
|   |-ParagraphComment 0x55887c403a60 <line:433:1, col:33>
|   | `-TextComment 0x55887c403a30 <col:1, col:33> Text="  Builds a HOB for the BSP store."
|   |-ParagraphComment 0x55887c403b00 <line:435:1, line:437:75>
|   | |-TextComment 0x55887c403a80 <line:435:1, col:43> Text="  This function builds a HOB for BSP store."
|   | |-TextComment 0x55887c403aa0 <line:436:1, col:42> Text="  It can only be invoked during PEI phase;"
|   | `-TextComment 0x55887c403ac0 <line:437:1, col:75> Text="  for DXE phase, it will ASSERT() since PEI HOB is read-only for DXE phase."
|   |-ParagraphComment 0x55887c403b50 <line:439:1, col:66>
|   | `-TextComment 0x55887c403b20 <col:1, col:66> Text="  If there is no additional space for HOB creation, then ASSERT()."
|   |-ParagraphComment 0x55887c403ba0 <line:441:1, col:2>
|   | `-TextComment 0x55887c403b70 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c403bc0 <col:3, line:442:2> [in] implicitly Param="BaseAddress" ParamIndex=0
|   | `-ParagraphComment 0x55887c403c70 <line:441:22, line:442:2>
|   |   |-TextComment 0x55887c403c20 <line:441:22, col:63> Text="   The 64 bit physical address of the BSP."
|   |   `-TextComment 0x55887c403c40 <line:442:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c403c90 <col:3, line:443:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c403d40 <line:442:17, line:443:2>
|   |   |-TextComment 0x55887c403cf0 <line:442:17, col:61> Text="        The length of the BSP store in bytes."
|   |   `-TextComment 0x55887c403d10 <line:443:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c403d60 <col:3, col:61> [in] implicitly Param="MemoryType" ParamIndex=2
|     `-ParagraphComment 0x55887c403df0 <col:21, col:61>
|       `-TextComment 0x55887c403dc0 <col:21, col:61> Text="    Type of memory allocated by this HOB."
|-FunctionDecl 0x55887c138b58 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:474:3> line:470:1 used BuildMemoryAllocationHob 'void (EFI_PHYSICAL_ADDRESS, UINT64, EFI_MEMORY_TYPE)'
| |-ParmVarDecl 0x55887c1389c8 <line:471:6, col:28> col:28 BaseAddress 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| |-ParmVarDecl 0x55887c138a40 <line:472:6, col:28> col:28 Length 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c138ab8 <line:473:6, col:28> col:28 MemoryType 'EFI_MEMORY_TYPE':'EFI_MEMORY_TYPE'
| `-FullComment 0x55887c4042e0 <line:455:1, line:465:61>
|   |-ParagraphComment 0x55887c403ef0 <line:455:1, col:41>
|   | `-TextComment 0x55887c403ec0 <col:1, col:41> Text="  Builds a HOB for the memory allocation."
|   |-ParagraphComment 0x55887c403f90 <line:457:1, line:459:75>
|   | |-TextComment 0x55887c403f10 <line:457:1, col:55> Text="  This function builds a HOB for the memory allocation."
|   | |-TextComment 0x55887c403f30 <line:458:1, col:42> Text="  It can only be invoked during PEI phase;"
|   | `-TextComment 0x55887c403f50 <line:459:1, col:75> Text="  for DXE phase, it will ASSERT() since PEI HOB is read-only for DXE phase."
|   |-ParagraphComment 0x55887c403fe0 <line:461:1, col:66>
|   | `-TextComment 0x55887c403fb0 <col:1, col:66> Text="  If there is no additional space for HOB creation, then ASSERT()."
|   |-ParagraphComment 0x55887c404030 <line:463:1, col:2>
|   | `-TextComment 0x55887c404000 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c404050 <col:3, line:464:2> [in] implicitly Param="BaseAddress" ParamIndex=0
|   | `-ParagraphComment 0x55887c404100 <line:463:22, line:464:2>
|   |   |-TextComment 0x55887c4040b0 <line:463:22, col:66> Text="   The 64 bit physical address of the memory."
|   |   `-TextComment 0x55887c4040d0 <line:464:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c404120 <col:3, line:465:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c4041d0 <line:464:17, line:465:2>
|   |   |-TextComment 0x55887c404180 <line:464:17, col:69> Text="        The length of the memory allocation in bytes."
|   |   `-TextComment 0x55887c4041a0 <line:465:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c4041f0 <col:3, col:61> [in] implicitly Param="MemoryType" ParamIndex=2
|     `-ParagraphComment 0x55887c404280 <col:21, col:61>
|       `-TextComment 0x55887c404250 <col:21, col:61> Text="    Type of memory allocated by this HOB."
|-FunctionDecl 0x55887c138e88 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:24:1, line:28:3> line:26:1 used PeiServicesInstallPpi 'EFI_STATUS (const EFI_PEI_PPI_DESCRIPTOR *)'
| |-ParmVarDecl 0x55887c138d98 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:27:37> col:37 PpiList 'const EFI_PEI_PPI_DESCRIPTOR *'
| `-FullComment 0x55887c404870 <line:13:1, line:21:81>
|   |-ParagraphComment 0x55887c404380 <line:13:1, col:85>
|   | `-TextComment 0x55887c404350 <col:1, col:85> Text="  This service enables a given PEIM to register an interface into the PEI Foundation."
|   |-ParagraphComment 0x55887c4043d0 <line:15:1, col:2>
|   | `-TextComment 0x55887c4043a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4043f0 <col:3, col:98> [in] implicitly Param="PpiList" ParamIndex=0
|   | `-ParagraphComment 0x55887c404480 <col:18, col:98>
|   |   `-TextComment 0x55887c404450 <col:18, col:98> Text="               A pointer to the list of interfaces that the caller shall install."
|   |-ParagraphComment 0x55887c4044d0 <line:17:1, col:2>
|   | `-TextComment 0x55887c4044a0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c4044f0 <col:3, line:18:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c404590 <line:17:22, line:18:2>
|   |   |-TextComment 0x55887c404540 <line:17:22, col:73> Text="           The interface was successfully installed."
|   |   `-TextComment 0x55887c404560 <line:18:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c4045b0 <col:3, line:19:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c404660 <line:18:32, line:19:2>
|   |   |-TextComment 0x55887c404610 <line:18:32, col:60> Text=" The PpiList pointer is NULL."
|   |   `-TextComment 0x55887c404630 <line:19:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c404680 <col:3, line:21:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c404760 <line:19:32, line:21:2>
|   |   |-TextComment 0x55887c4046e0 <line:19:32, col:90> Text=" Any of the PEI PPI descriptors in the list do not have the"
|   |   |-TextComment 0x55887c404700 <line:20:1, col:86> Text="                                EFI_PEI_PPI_DESCRIPTOR_PPI bit set in the Flags field."
|   |   `-TextComment 0x55887c404720 <line:21:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c404780 <col:3, col:81> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|     `-ParagraphComment 0x55887c404810 <col:31, col:81>
|       `-TextComment 0x55887c4047e0 <col:31, col:81> Text="  There is no additional space in the PPI database."
|-FunctionDecl 0x55887c1390f8 <line:45:1, line:50:3> line:47:1 PeiServicesReInstallPpi 'EFI_STATUS (const EFI_PEI_PPI_DESCRIPTOR *, const EFI_PEI_PPI_DESCRIPTOR *)'
| |-ParmVarDecl 0x55887c138f68 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:48:37> col:37 OldPpi 'const EFI_PEI_PPI_DESCRIPTOR *'
| |-ParmVarDecl 0x55887c138fe0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:49:37> col:37 NewPpi 'const EFI_PEI_PPI_DESCRIPTOR *'
| `-FullComment 0x55887c404fc0 <line:31:1, line:42:42>
|   |-ParagraphComment 0x55887c404910 <line:31:1, col:93>
|   | `-TextComment 0x55887c4048e0 <col:1, col:93> Text="  This service enables PEIMs to replace an entry in the PPI database with an alternate entry."
|   |-ParagraphComment 0x55887c404960 <line:33:1, col:2>
|   | `-TextComment 0x55887c404930 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c404980 <col:3, line:34:2> [in] implicitly Param="OldPpi" ParamIndex=0
|   | `-ParagraphComment 0x55887c404a30 <line:33:17, line:34:2>
|   |   |-TextComment 0x55887c4049e0 <line:33:17, col:71> Text="                Pointer to the old PEI PPI Descriptors."
|   |   `-TextComment 0x55887c404a00 <line:34:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c404a50 <col:3, col:71> [in] implicitly Param="NewPpi" ParamIndex=1
|   | `-ParagraphComment 0x55887c404ae0 <col:17, col:71>
|   |   `-TextComment 0x55887c404ab0 <col:17, col:71> Text="                Pointer to the new PEI PPI Descriptors."
|   |-ParagraphComment 0x55887c404b30 <line:36:1, col:2>
|   | `-TextComment 0x55887c404b00 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c404b50 <col:3, line:37:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c404bf0 <line:36:22, line:37:2>
|   |   |-TextComment 0x55887c404ba0 <line:36:22, col:73> Text="           The interface was successfully installed."
|   |   `-TextComment 0x55887c404bc0 <line:37:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c404c10 <col:3, line:38:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c404cc0 <line:37:32, line:38:2>
|   |   |-TextComment 0x55887c404c70 <line:37:32, col:61> Text=" The OldPpi or NewPpi is NULL."
|   |   `-TextComment 0x55887c404c90 <line:38:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c404ce0 <col:3, line:40:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c404dc0 <line:38:32, line:40:2>
|   |   |-TextComment 0x55887c404d40 <line:38:32, col:90> Text=" Any of the PEI PPI descriptors in the list do not have the"
|   |   |-TextComment 0x55887c404d60 <line:39:1, col:86> Text="                                EFI_PEI_PPI_DESCRIPTOR_PPI bit set in the Flags field."
|   |   `-TextComment 0x55887c404d80 <line:40:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c404de0 <col:3, line:41:2> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|   | `-ParagraphComment 0x55887c404e90 <line:40:31, line:41:2>
|   |   |-TextComment 0x55887c404e40 <line:40:31, col:81> Text="  There is no additional space in the PPI database."
|   |   `-TextComment 0x55887c404e60 <line:41:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c404eb0 <col:3, line:42:42> Name="retval" Arg[0]="EFI_NOT_FOUND"
|     `-ParagraphComment 0x55887c404f50 <line:41:24, line:42:42>
|       |-TextComment 0x55887c404f00 <line:41:24, col:95> Text="         The PPI for which the reinstallation was requested has not been"
|       `-TextComment 0x55887c404f20 <line:42:1, col:42> Text="                                installed."
|-FunctionDecl 0x55887c1394a8 <line:65:1, line:72:3> line:67:1 used PeiServicesLocatePpi 'EFI_STATUS (const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)'
| |-ParmVarDecl 0x55887c1391e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:68:35> col:35 Guid 'const EFI_GUID *'
| |-ParmVarDecl 0x55887c139260 <line:69:6, col:34> col:34 Instance 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1392e0 <line:70:10, col:36> col:36 PpiDescriptor 'EFI_PEI_PPI_DESCRIPTOR **'
| |-ParmVarDecl 0x55887c139360 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:71:36> col:36 Ppi 'void **'
| `-FullComment 0x55887c405620 <line:53:1, line:62:80>
|   |-ParagraphComment 0x55887c405060 <line:53:1, col:74>
|   | `-TextComment 0x55887c405030 <col:1, col:74> Text="  This service enables PEIMs to discover a given instance of an interface."
|   |-ParagraphComment 0x55887c4050b0 <line:55:1, col:2>
|   | `-TextComment 0x55887c405080 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4050d0 <col:3, line:57:2> [in] implicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c4051b0 <line:55:15, line:57:2>
|   |   |-TextComment 0x55887c405130 <line:55:15, col:95> Text="                  A pointer to the GUID whose corresponding interface needs to be"
|   |   |-TextComment 0x55887c405150 <line:56:1, col:38> Text="                                found."
|   |   `-TextComment 0x55887c405170 <line:57:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4051d0 <col:3, line:58:2> [in] implicitly Param="Instance" ParamIndex=1
|   | `-ParagraphComment 0x55887c405280 <line:57:19, line:58:2>
|   |   |-TextComment 0x55887c405230 <line:57:19, col:84> Text="              The N-th instance of the interface that is required."
|   |   `-TextComment 0x55887c405250 <line:58:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4052a0 <col:3, line:59:2> [in] implicitly Param="PpiDescriptor" ParamIndex=2
|   | `-ParagraphComment 0x55887c405350 <line:58:24, line:59:2>
|   |   |-TextComment 0x55887c405300 <line:58:24, col:84> Text="         A pointer to instance of the EFI_PEI_PPI_DESCRIPTOR."
|   |   `-TextComment 0x55887c405320 <line:59:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c405370 <col:3, col:75> [in] implicitly Param="Ppi" ParamIndex=3
|   | `-ParagraphComment 0x55887c405400 <col:14, col:75>
|   |   `-TextComment 0x55887c4053d0 <col:14, col:75> Text="                   A pointer to the instance of the interface."
|   |-ParagraphComment 0x55887c405450 <line:61:1, col:2>
|   | `-TextComment 0x55887c405420 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c405470 <col:3, line:62:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c405510 <line:61:22, line:62:2>
|   |   |-TextComment 0x55887c4054c0 <line:61:22, col:72> Text="           The interface was successfully returned."
|   |   `-TextComment 0x55887c4054e0 <line:62:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c405530 <col:3, col:80> Name="retval" Arg[0]="EFI_NOT_FOUND"
|     `-ParagraphComment 0x55887c4055b0 <col:24, col:80>
|       `-TextComment 0x55887c405580 <col:24, col:80> Text="         The PPI descriptor is not found in the database."
|-FunctionDecl 0x55887c139698 <line:88:1, line:92:3> line:90:1 used PeiServicesNotifyPpi 'EFI_STATUS (const EFI_PEI_NOTIFY_DESCRIPTOR *)'
| |-ParmVarDecl 0x55887c1395a8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:91:40> col:40 NotifyList 'const EFI_PEI_NOTIFY_DESCRIPTOR *'
| `-FullComment 0x55887c405bf0 <line:75:1, line:85:81>
|   |-ParagraphComment 0x55887c4056e0 <line:75:1, line:76:27>
|   | |-TextComment 0x55887c405690 <line:75:1, col:94> Text="  This service enables PEIMs to register a given service to be invoked when another service is"
|   | `-TextComment 0x55887c4056b0 <line:76:1, col:27> Text="  installed or reinstalled."
|   |-ParagraphComment 0x55887c405730 <line:78:1, col:2>
|   | `-TextComment 0x55887c405700 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c405750 <col:3, line:79:46> [in] implicitly Param="NotifyList" ParamIndex=0
|   | `-ParagraphComment 0x55887c405800 <line:78:21, line:79:46>
|   |   |-TextComment 0x55887c4057b0 <line:78:21, col:96> Text="            A pointer to the list of notification interfaces that the caller"
|   |   `-TextComment 0x55887c4057d0 <line:79:1, col:46> Text="                                shall install."
|   |-ParagraphComment 0x55887c405850 <line:81:1, col:2>
|   | `-TextComment 0x55887c405820 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c405870 <col:3, line:82:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c405910 <line:81:22, line:82:2>
|   |   |-TextComment 0x55887c4058c0 <line:81:22, col:73> Text="           The interface was successfully installed."
|   |   `-TextComment 0x55887c4058e0 <line:82:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c405930 <col:3, line:83:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c4059e0 <line:82:32, line:83:2>
|   |   |-TextComment 0x55887c405990 <line:82:32, col:63> Text=" The NotifyList pointer is NULL."
|   |   `-TextComment 0x55887c4059b0 <line:83:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c405a00 <col:3, line:85:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c405ae0 <line:83:32, line:85:2>
|   |   |-TextComment 0x55887c405a60 <line:83:32, col:93> Text=" Any of the PEI notify descriptors in the list do not have the"
|   |   |-TextComment 0x55887c405a80 <line:84:1, col:95> Text="                                EFI_PEI_PPI_DESCRIPTOR_NOTIFY_TYPES bit set in the Flags field."
|   |   `-TextComment 0x55887c405aa0 <line:85:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c405b00 <col:3, col:81> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|     `-ParagraphComment 0x55887c405b90 <col:31, col:81>
|       `-TextComment 0x55887c405b60 <col:31, col:81> Text="  There is no additional space in the PPI database."
|-FunctionDecl 0x55887c139868 <line:103:1, line:107:3> line:105:1 PeiServicesGetBootMode 'EFI_STATUS (EFI_BOOT_MODE *)'
| |-ParmVarDecl 0x55887c139778 <line:106:7, col:23> col:23 BootMode 'EFI_BOOT_MODE *'
| `-FullComment 0x55887c405fa0 <line:95:1, line:100:49>
|   |-ParagraphComment 0x55887c405c90 <line:95:1, col:77>
|   | `-TextComment 0x55887c405c60 <col:1, col:77> Text="  This service enables PEIMs to ascertain the present value of the boot mode."
|   |-ParagraphComment 0x55887c405ce0 <line:97:1, col:2>
|   | `-TextComment 0x55887c405cb0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c405d00 <col:3, col:80> [in] implicitly Param="BootMode" ParamIndex=0
|   | `-ParagraphComment 0x55887c405d90 <col:19, col:80>
|   |   `-TextComment 0x55887c405d60 <col:19, col:80> Text="              A pointer to contain the value of the boot mode."
|   |-ParagraphComment 0x55887c405de0 <line:99:1, col:2>
|   | `-TextComment 0x55887c405db0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c405e00 <col:3, line:100:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c405ea0 <line:99:22, line:100:2>
|   |   |-TextComment 0x55887c405e50 <line:99:22, col:72> Text="           The boot mode was returned successfully."
|   |   `-TextComment 0x55887c405e70 <line:100:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c405ec0 <col:3, col:49> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c405f50 <col:32, col:49>
|       `-TextComment 0x55887c405f20 <col:32, col:49> Text=" BootMode is NULL."
|-FunctionDecl 0x55887c139a08 <line:117:1, line:121:3> line:119:1 PeiServicesSetBootMode 'EFI_STATUS (EFI_BOOT_MODE)'
| |-ParmVarDecl 0x55887c139948 <line:120:6, col:21> col:21 BootMode 'EFI_BOOT_MODE':'unsigned int'
| `-FullComment 0x55887c406280 <line:110:1, line:114:66>
|   |-ParagraphComment 0x55887c406040 <line:110:1, col:62>
|   | `-TextComment 0x55887c406010 <col:1, col:62> Text="  This service enables PEIMs to update the boot mode variable."
|   |-ParagraphComment 0x55887c406090 <line:112:1, col:2>
|   | `-TextComment 0x55887c406060 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4060b0 <col:3, col:66> [in] implicitly Param="BootMode" ParamIndex=0
|   | `-ParagraphComment 0x55887c406140 <col:19, col:66>
|   |   `-TextComment 0x55887c406110 <col:19, col:66> Text="              The value of the boot mode to set."
|   |-ParagraphComment 0x55887c406190 <line:114:1, col:2>
|   | `-TextComment 0x55887c406160 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c4061b0 <col:3, col:66> Name="retval" Arg[0]="EFI_SUCCESS"
|     `-ParagraphComment 0x55887c406230 <col:22, col:66>
|       `-TextComment 0x55887c406200 <col:22, col:66> Text="           The value was successfully updated"
|-FunctionDecl 0x55887c139be8 <line:132:1, line:136:3> line:134:1 PeiServicesGetHobList 'EFI_STATUS (void **)'
| |-ParmVarDecl 0x55887c139af0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:135:15> col:15 HobList 'void **'
| `-FullComment 0x55887c406630 <line:124:1, line:129:66>
|   |-ParagraphComment 0x55887c406320 <line:124:1, col:85>
|   | `-TextComment 0x55887c4062f0 <col:1, col:85> Text="  This service enables a PEIM to ascertain the address of the list of HOBs in memory."
|   |-ParagraphComment 0x55887c406370 <line:126:1, col:2>
|   | `-TextComment 0x55887c406340 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c406390 <col:3, col:102> [in] implicitly Param="HobList" ParamIndex=0
|   | `-ParagraphComment 0x55887c406420 <col:18, col:102>
|   |   `-TextComment 0x55887c4063f0 <col:18, col:102> Text="               A pointer to the list of HOBs that the PEI Foundation will initialize."
|   |-ParagraphComment 0x55887c406470 <line:128:1, col:2>
|   | `-TextComment 0x55887c406440 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c406490 <col:3, line:129:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c406530 <line:128:22, line:129:2>
|   |   |-TextComment 0x55887c4064e0 <line:128:22, col:67> Text="           The list was successfully returned."
|   |   `-TextComment 0x55887c406500 <line:129:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c406550 <col:3, col:66> Name="retval" Arg[0]="EFI_NOT_AVAILABLE_YET"
|     `-ParagraphComment 0x55887c4065e0 <col:32, col:66>
|       `-TextComment 0x55887c4065b0 <col:32, col:66> Text=" The HOB list is not yet published."
|-FunctionDecl 0x55887c1a0938 <line:149:1, line:155:3> line:151:1 PeiServicesCreateHob 'EFI_STATUS (UINT16, UINT16, void **)'
| |-ParmVarDecl 0x55887c139cc8 <line:152:6, col:14> col:14 Type 'UINT16':'unsigned short'
| |-ParmVarDecl 0x55887c139d40 <line:153:6, col:14> col:14 Length 'UINT16':'unsigned short'
| |-ParmVarDecl 0x55887c139dc0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:154:16> col:16 Hob 'void **'
| `-FullComment 0x55887c406b90 <line:139:1, line:146:78>
|   |-ParagraphComment 0x55887c4066d0 <line:139:1, col:61>
|   | `-TextComment 0x55887c4066a0 <col:1, col:61> Text="  This service enables PEIMs to create various types of HOBs."
|   |-ParagraphComment 0x55887c406720 <line:141:1, col:2>
|   | `-TextComment 0x55887c4066f0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c406740 <col:3, line:142:2> [in] implicitly Param="Type" ParamIndex=0
|   | `-ParagraphComment 0x55887c4067f0 <line:141:15, line:142:2>
|   |   |-TextComment 0x55887c4067a0 <line:141:15, col:64> Text="                  The type of HOB to be installed."
|   |   `-TextComment 0x55887c4067c0 <line:142:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c406810 <col:3, line:143:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c4068c0 <line:142:17, line:143:2>
|   |   |-TextComment 0x55887c406870 <line:142:17, col:66> Text="                The length of the HOB to be added."
|   |   `-TextComment 0x55887c406890 <line:143:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4068e0 <col:3, col:90> [in] implicitly Param="Hob" ParamIndex=2
|   | `-ParagraphComment 0x55887c406970 <col:14, col:90>
|   |   `-TextComment 0x55887c406940 <col:14, col:90> Text="                   The address of a pointer that will contain the HOB header."
|   |-ParagraphComment 0x55887c4069c0 <line:145:1, col:2>
|   | `-TextComment 0x55887c406990 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c4069e0 <col:3, line:146:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c406a80 <line:145:22, line:146:2>
|   |   |-TextComment 0x55887c406a30 <line:145:22, col:65> Text="           The HOB was successfully created."
|   |   `-TextComment 0x55887c406a50 <line:146:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c406aa0 <col:3, col:78> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|     `-ParagraphComment 0x55887c406b30 <col:31, col:78>
|       `-TextComment 0x55887c406b00 <col:31, col:78> Text="  There is no additional space for HOB creation."
|-FunctionDecl 0x55887c1a0bb8 <line:169:1, line:174:3> line:171:1 used PeiServicesFfsFindNextVolume 'EFI_STATUS (UINTN, EFI_PEI_FV_HANDLE *)'
| |-ParmVarDecl 0x55887c1a0a28 <line:172:6, col:29> col:29 Instance 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1a0aa0 <line:173:10, col:30> col:30 VolumeHandle 'EFI_PEI_FV_HANDLE *'
| `-FullComment 0x55887c407110 <line:158:1, line:166:52>
|   |-ParagraphComment 0x55887c406c30 <line:158:1, col:69>
|   | `-TextComment 0x55887c406c00 <col:1, col:69> Text="  This service enables PEIMs to discover additional firmware volumes."
|   |-ParagraphComment 0x55887c406c80 <line:160:1, col:2>
|   | `-TextComment 0x55887c406c50 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c406ca0 <col:3, line:162:2> [in] implicitly Param="Instance" ParamIndex=0
|   | `-ParagraphComment 0x55887c406d80 <line:160:19, line:162:2>
|   |   |-TextComment 0x55887c406d00 <line:160:19, col:97> Text="              This instance of the firmware volume to find.  The value 0 is the"
|   |   |-TextComment 0x55887c406d20 <line:161:1, col:59> Text="                                Boot Firmware Volume (BFV)."
|   |   `-TextComment 0x55887c406d40 <line:162:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c406da0 <col:3, col:93> [in] implicitly Param="VolumeHandle" ParamIndex=1
|   | `-ParagraphComment 0x55887c406e30 <col:23, col:93>
|   |   `-TextComment 0x55887c406e00 <col:23, col:93> Text="          Handle of the firmware volume header of the volume to return."
|   |-ParagraphComment 0x55887c406e80 <line:164:1, col:2>
|   | `-TextComment 0x55887c406e50 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c406ea0 <col:3, line:165:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c406f40 <line:164:22, line:165:2>
|   |   |-TextComment 0x55887c406ef0 <line:164:22, col:53> Text="           The volume was found."
|   |   `-TextComment 0x55887c406f10 <line:165:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c406f60 <col:3, line:166:2> Name="retval" Arg[0]="EFI_NOT_FOUND"
|   | `-ParagraphComment 0x55887c407000 <line:165:24, line:166:2>
|   |   |-TextComment 0x55887c406fb0 <line:165:24, col:57> Text="         The volume was not found."
|   |   `-TextComment 0x55887c406fd0 <line:166:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c407020 <col:3, col:52> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c4070b0 <col:32, col:52>
|       `-TextComment 0x55887c407080 <col:32, col:52> Text=" FwVolHeader is NULL."
|-FunctionDecl 0x55887c1a0eb8 <line:189:1, line:195:3> line:191:1 used PeiServicesFfsFindNextFile 'EFI_STATUS (EFI_FV_FILETYPE, EFI_PEI_FV_HANDLE, EFI_PEI_FILE_HANDLE *)'
| |-ParmVarDecl 0x55887c1a0ca8 <line:192:6, col:31> col:31 SearchType 'EFI_FV_FILETYPE':'unsigned char'
| |-ParmVarDecl 0x55887c1a0d20 <line:193:6, col:31> col:31 VolumeHandle 'EFI_PEI_FV_HANDLE':'void *'
| |-ParmVarDecl 0x55887c1a0d98 <line:194:10, col:32> col:32 FileHandle 'EFI_PEI_FILE_HANDLE *'
| `-FullComment 0x55887c4087b0 <line:177:1, line:186:65>
|   |-ParagraphComment 0x55887c408200 <line:177:1, col:67>
|   | `-TextComment 0x55887c4081d0 <col:1, col:67> Text="  This service enables PEIMs to discover additional firmware files."
|   |-ParagraphComment 0x55887c408250 <line:179:1, col:2>
|   | `-TextComment 0x55887c408220 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c408270 <col:3, line:180:2> [in] implicitly Param="SearchType" ParamIndex=0
|   | `-ParagraphComment 0x55887c408320 <line:179:21, line:180:2>
|   |   |-TextComment 0x55887c4082d0 <line:179:21, col:73> Text="            A filter to find files only of this type."
|   |   `-TextComment 0x55887c4082f0 <line:180:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c408340 <col:3, line:182:2> [in] implicitly Param="VolumeHandle" ParamIndex=1
|   | `-ParagraphComment 0x55887c408420 <line:180:23, line:182:2>
|   |   |-TextComment 0x55887c4083a0 <line:180:23, col:94> Text="          Pointer to the firmware volume header of the volume to search."
|   |   |-TextComment 0x55887c4083c0 <line:181:1, col:80> Text="                                This parameter must point to a valid FFS volume."
|   |   `-TextComment 0x55887c4083e0 <line:182:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c408440 <col:3, col:89> [in] implicitly Param="FileHandle" ParamIndex=2
|   | `-ParagraphComment 0x55887c4084d0 <col:21, col:89>
|   |   `-TextComment 0x55887c4084a0 <col:21, col:89> Text="            Handle of the current file from which to begin searching."
|   |-ParagraphComment 0x55887c408520 <line:184:1, col:2>
|   | `-TextComment 0x55887c4084f0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c408540 <col:3, line:185:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c4085e0 <line:184:22, line:185:2>
|   |   |-TextComment 0x55887c408590 <line:184:22, col:51> Text="           The file was found."
|   |   `-TextComment 0x55887c4085b0 <line:185:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c408600 <col:3, line:186:2> Name="retval" Arg[0]="EFI_NOT_FOUND"
|   | `-ParagraphComment 0x55887c4086a0 <line:185:24, line:186:2>
|   |   |-TextComment 0x55887c408650 <line:185:24, col:55> Text="         The file was not found."
|   |   `-TextComment 0x55887c408670 <line:186:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c4086c0 <col:3, col:65> Name="retval" Arg[0]="EFI_NOT_FOUND"
|     `-ParagraphComment 0x55887c408740 <col:24, col:65>
|       `-TextComment 0x55887c408710 <col:24, col:65> Text="         The header checksum was not zero."
|-FunctionDecl 0x55887c1a1188 <line:209:1, line:215:3> line:211:1 PeiServicesFfsFindSectionData 'EFI_STATUS (EFI_SECTION_TYPE, EFI_PEI_FILE_HANDLE, void **)'
| |-ParmVarDecl 0x55887c1a0fa8 <line:212:6, col:27> col:27 SectionType 'EFI_SECTION_TYPE':'unsigned char'
| |-ParmVarDecl 0x55887c1a1020 <line:213:6, col:27> col:27 FileHandle 'EFI_PEI_FILE_HANDLE':'void *'
| |-ParmVarDecl 0x55887c1a10a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:214:29> col:29 SectionData 'void **'
| `-FullComment 0x55887c408d30 <line:198:1, line:206:58>
|   |-ParagraphComment 0x55887c408850 <line:198:1, col:90>
|   | `-TextComment 0x55887c408820 <col:1, col:90> Text="  This service enables PEIMs to discover sections of a given type within a valid FFS file."
|   |-ParagraphComment 0x55887c4088a0 <line:200:1, col:2>
|   | `-TextComment 0x55887c408870 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4088c0 <col:3, line:201:2> [in] implicitly Param="SectionType" ParamIndex=0
|   | `-ParagraphComment 0x55887c408970 <line:200:22, line:201:2>
|   |   |-TextComment 0x55887c408920 <line:200:22, col:70> Text="           The value of the section type to find."
|   |   `-TextComment 0x55887c408940 <line:201:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c408990 <col:3, line:203:2> [in] implicitly Param="FileHandle" ParamIndex=1
|   | `-ParagraphComment 0x55887c408a70 <line:201:21, line:203:2>
|   |   |-TextComment 0x55887c4089f0 <line:201:21, col:97> Text="            A pointer to the file header that contains the set of sections to"
|   |   |-TextComment 0x55887c408a10 <line:202:1, col:44> Text="                                be searched."
|   |   `-TextComment 0x55887c408a30 <line:203:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c408a90 <col:3, col:83> [in] implicitly Param="SectionData" ParamIndex=2
|   | `-ParagraphComment 0x55887c408b20 <col:22, col:83>
|   |   `-TextComment 0x55887c408af0 <col:22, col:83> Text="           A pointer to the discovered section, if successful."
|   |-ParagraphComment 0x55887c408b70 <line:205:1, col:2>
|   | `-TextComment 0x55887c408b40 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c408b90 <col:3, line:206:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c408c30 <line:205:22, line:206:2>
|   |   |-TextComment 0x55887c408be0 <line:205:22, col:54> Text="           The section was found."
|   |   `-TextComment 0x55887c408c00 <line:206:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c408c50 <col:3, col:58> Name="retval" Arg[0]="EFI_NOT_FOUND"
|     `-ParagraphComment 0x55887c408cd0 <col:24, col:58>
|       `-TextComment 0x55887c408ca0 <col:24, col:58> Text="         The section was not found."
|-FunctionDecl 0x55887c1a15b8 <line:231:1, line:239:3> line:233:1 PeiServicesFfsFindSectionData3 'EFI_STATUS (EFI_SECTION_TYPE, UINTN, EFI_PEI_FILE_HANDLE, void **, UINT32 *)'
| |-ParmVarDecl 0x55887c1a1278 <line:234:6, col:27> col:27 SectionType 'EFI_SECTION_TYPE':'unsigned char'
| |-ParmVarDecl 0x55887c1a12f0 <line:235:6, col:27> col:27 SectionInstance 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1a1368 <line:236:6, col:27> col:27 FileHandle 'EFI_PEI_FILE_HANDLE':'void *'
| |-ParmVarDecl 0x55887c1a13e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:237:29> col:29 SectionData 'void **'
| |-ParmVarDecl 0x55887c1a1460 <line:238:7, col:28> col:28 AuthenticationStatus 'UINT32 *'
| `-FullComment 0x55887c409470 <line:218:1, line:228:58>
|   |-ParagraphComment 0x55887c408dd0 <line:218:1, col:103>
|   | `-TextComment 0x55887c408da0 <col:1, col:103> Text="  This service enables PEIMs to discover sections of a given instance and type within a valid FFS file."
|   |-ParagraphComment 0x55887c408e20 <line:220:1, col:2>
|   | `-TextComment 0x55887c408df0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c408e40 <col:3, line:221:2> [in] implicitly Param="SectionType" ParamIndex=0
|   | `-ParagraphComment 0x55887c408ef0 <line:220:22, line:221:2>
|   |   |-TextComment 0x55887c408ea0 <line:220:22, col:70> Text="           The value of the section type to find."
|   |   `-TextComment 0x55887c408ec0 <line:221:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c408f10 <col:3, line:222:2> [in] implicitly Param="SectionInstance" ParamIndex=1
|   | `-ParagraphComment 0x55887c408fc0 <line:221:26, line:222:2>
|   |   |-TextComment 0x55887c408f70 <line:221:26, col:57> Text="       Section instance to find."
|   |   `-TextComment 0x55887c408f90 <line:222:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c408fe0 <col:3, line:224:2> [in] implicitly Param="FileHandle" ParamIndex=2
|   | `-ParagraphComment 0x55887c4090c0 <line:222:21, line:224:2>
|   |   |-TextComment 0x55887c409040 <line:222:21, col:82> Text="            A pointer to the file header that contains the set"
|   |   |-TextComment 0x55887c409060 <line:223:1, col:59> Text="                                of sections to be searched."
|   |   `-TextComment 0x55887c409080 <line:224:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4090e0 <col:3, line:225:2> [in] implicitly Param="SectionData" ParamIndex=3
|   | `-ParagraphComment 0x55887c409190 <line:224:22, line:225:2>
|   |   |-TextComment 0x55887c409140 <line:224:22, col:83> Text="           A pointer to the discovered section, if successful."
|   |   `-TextComment 0x55887c409160 <line:225:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4091b0 <col:3, col:88> [in] implicitly Param="AuthenticationStatus" ParamIndex=4
|   | `-ParagraphComment 0x55887c409250 <col:31, col:88>
|   |   `-TextComment 0x55887c409220 <col:31, col:88> Text="  A pointer to the authentication status for this section."
|   |-ParagraphComment 0x55887c4092a0 <line:227:1, col:2>
|   | `-TextComment 0x55887c409270 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c4092c0 <col:3, line:228:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c409360 <line:227:22, line:228:2>
|   |   |-TextComment 0x55887c409310 <line:227:22, col:54> Text="           The section was found."
|   |   `-TextComment 0x55887c409330 <line:228:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c409380 <col:3, col:58> Name="retval" Arg[0]="EFI_NOT_FOUND"
|     `-ParagraphComment 0x55887c409400 <col:24, col:58>
|       `-TextComment 0x55887c4093d0 <col:24, col:58> Text="         The section was not found."
|-FunctionDecl 0x55887c1a1808 <line:253:1, line:258:3> line:255:1 PeiServicesInstallPeiMemory 'EFI_STATUS (EFI_PHYSICAL_ADDRESS, UINT64)'
| |-ParmVarDecl 0x55887c1a16b8 <line:256:6, col:28> col:28 MemoryBegin 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| |-ParmVarDecl 0x55887c1a1730 <line:257:6, col:28> col:28 MemoryLength 'UINT64':'unsigned long long'
| `-FullComment 0x55887c4099f0 <line:242:1, line:250:78>
|   |-ParagraphComment 0x55887c409530 <line:242:1, line:243:52>
|   | |-TextComment 0x55887c4094e0 <line:242:1, col:75> Text="  This service enables PEIMs to register the permanent memory configuration"
|   | `-TextComment 0x55887c409500 <line:243:1, col:52> Text="  that has been initialized with the PEI Foundation."
|   |-ParagraphComment 0x55887c409580 <line:245:1, col:2>
|   | `-TextComment 0x55887c409550 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4095a0 <col:3, line:246:2> [in] implicitly Param="MemoryBegin" ParamIndex=0
|   | `-ParagraphComment 0x55887c409650 <line:245:22, line:246:2>
|   |   |-TextComment 0x55887c409600 <line:245:22, col:74> Text="           The value of a region of installed memory."
|   |   `-TextComment 0x55887c409620 <line:246:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c409670 <col:3, col:89> [in] implicitly Param="MemoryLength" ParamIndex=1
|   | `-ParagraphComment 0x55887c409700 <col:23, col:89>
|   |   `-TextComment 0x55887c4096d0 <col:23, col:89> Text="          The corresponding length of a region of installed memory."
|   |-ParagraphComment 0x55887c409750 <line:248:1, col:2>
|   | `-TextComment 0x55887c409720 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c409770 <col:3, line:249:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c409810 <line:248:22, line:249:2>
|   |   |-TextComment 0x55887c4097c0 <line:248:22, col:79> Text="           The region was successfully installed in a HOB."
|   |   `-TextComment 0x55887c4097e0 <line:249:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c409830 <col:3, line:250:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c4098e0 <line:249:32, line:250:2>
|   |   |-TextComment 0x55887c409890 <line:249:32, col:89> Text=" MemoryBegin and MemoryLength are illegal for this system."
|   |   `-TextComment 0x55887c4098b0 <line:250:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c409900 <col:3, col:78> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|     `-ParagraphComment 0x55887c409990 <col:31, col:78>
|       `-TextComment 0x55887c409960 <col:31, col:78> Text="  There is no additional space for HOB creation."
|-FunctionDecl 0x55887c1a1b08 <line:274:1, line:280:3> line:276:1 PeiServicesAllocatePages 'EFI_STATUS (EFI_MEMORY_TYPE, UINTN, EFI_PHYSICAL_ADDRESS *)'
| |-ParmVarDecl 0x55887c1a18f8 <line:277:6, col:29> col:29 MemoryType 'EFI_MEMORY_TYPE':'EFI_MEMORY_TYPE'
| |-ParmVarDecl 0x55887c1a1970 <line:278:6, col:29> col:29 Pages 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1a19e8 <line:279:7, col:30> col:30 Memory 'EFI_PHYSICAL_ADDRESS *'
| `-FullComment 0x55887c40a080 <line:261:1, line:271:65>
|   |-ParagraphComment 0x55887c409a90 <line:261:1, col:48>
|   | `-TextComment 0x55887c409a60 <col:1, col:48> Text="  This service enables PEIMs to allocate memory."
|   |-ParagraphComment 0x55887c409ae0 <line:263:1, col:2>
|   | `-TextComment 0x55887c409ab0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c409b00 <col:3, line:264:2> [in] implicitly Param="MemoryType" ParamIndex=0
|   | `-ParagraphComment 0x55887c409bb0 <line:263:21, line:264:2>
|   |   |-TextComment 0x55887c409b60 <line:263:21, col:59> Text="            Type of memory to allocate."
|   |   `-TextComment 0x55887c409b80 <line:264:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c409bd0 <col:3, line:265:2> [in] implicitly Param="Pages" ParamIndex=1
|   | `-ParagraphComment 0x55887c409c80 <line:264:16, line:265:2>
|   |   |-TextComment 0x55887c409c30 <line:264:16, col:64> Text="                 The number of pages to allocate."
|   |   `-TextComment 0x55887c409c50 <line:265:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c409ca0 <col:3, col:60> [in] implicitly Param="Memory" ParamIndex=2
|   | `-ParagraphComment 0x55887c409d30 <col:17, col:60>
|   |   `-TextComment 0x55887c409d00 <col:17, col:60> Text="                Pointer of memory allocated."
|   |-ParagraphComment 0x55887c409d80 <line:267:1, col:2>
|   | `-TextComment 0x55887c409d50 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c409da0 <col:3, line:268:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c409e40 <line:267:22, line:268:2>
|   |   |-TextComment 0x55887c409df0 <line:267:22, col:76> Text="           The memory range was successfully allocated."
|   |   `-TextComment 0x55887c409e10 <line:268:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c409e60 <col:3, line:271:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c409f60 <line:268:32, line:271:2>
|   |   |-TextComment 0x55887c409ec0 <line:268:32, col:106> Text=" Type is not equal to EfiLoaderCode, EfiLoaderData, EfiRuntimeServicesCode,"
|   |   |-TextComment 0x55887c409ee0 <line:269:1, col:97> Text="                                EfiRuntimeServicesData, EfiBootServicesCode, EfiBootServicesData,"
|   |   |-TextComment 0x55887c409f00 <line:270:1, col:97> Text="                                EfiACPIReclaimMemory, EfiReservedMemoryType, or EfiACPIMemoryNVS."
|   |   `-TextComment 0x55887c409f20 <line:271:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c409f80 <col:3, col:65> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|     `-ParagraphComment 0x55887c40a010 <col:31, col:65>
|       `-TextComment 0x55887c409fe0 <col:31, col:65> Text="  The pages could not be allocated."
|-FunctionDecl 0x55887c1a1d48 <line:294:1, line:299:3> line:296:1 PeiServicesFreePages 'EFI_STATUS (EFI_PHYSICAL_ADDRESS, UINTN)'
| |-ParmVarDecl 0x55887c1a1bf8 <line:297:6, col:28> col:28 Memory 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| |-ParmVarDecl 0x55887c1a1c70 <line:298:6, col:28> col:28 Pages 'UINTN':'unsigned long long'
| `-FullComment 0x55887c40a5f0 <line:283:1, line:291:48>
|   |-ParagraphComment 0x55887c40a120 <line:283:1, col:44>
|   | `-TextComment 0x55887c40a0f0 <col:1, col:44> Text="  This service enables PEIMs to free memory."
|   |-ParagraphComment 0x55887c40a170 <line:285:1, col:2>
|   | `-TextComment 0x55887c40a140 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40a190 <col:3, line:286:2> [in] implicitly Param="Memory" ParamIndex=0
|   | `-ParagraphComment 0x55887c40a240 <line:285:16, line:286:2>
|   |   |-TextComment 0x55887c40a1f0 <line:285:16, col:51> Text="                 Memory to be freed."
|   |   `-TextComment 0x55887c40a210 <line:286:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40a260 <col:3, col:60> [in] implicitly Param="Pages" ParamIndex=1
|   | `-ParagraphComment 0x55887c40a2f0 <col:15, col:60>
|   |   `-TextComment 0x55887c40a2c0 <col:15, col:60> Text="                  The number of pages to free."
|   |-ParagraphComment 0x55887c40a340 <line:288:1, col:2>
|   | `-TextComment 0x55887c40a310 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c40a360 <col:3, line:289:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c40a400 <line:288:22, line:289:2>
|   |   |-TextComment 0x55887c40a3b0 <line:288:22, col:63> Text="           The requested pages were freed."
|   |   `-TextComment 0x55887c40a3d0 <line:289:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c40a420 <col:3, line:290:2> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c40a4d0 <line:289:32, line:290:2>
|   |   |-TextComment 0x55887c40a480 <line:289:32, col:89> Text=" Memory is not a page-aligned address or Pages is invalid."
|   |   `-TextComment 0x55887c40a4a0 <line:290:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c40a4f0 <col:3, line:291:48> Name="retval" Arg[0]="EFI_NOT_FOUND"
|     `-ParagraphComment 0x55887c40a590 <line:290:24, line:291:48>
|       |-TextComment 0x55887c40a540 <line:290:24, col:82> Text="         The requested memory pages were not allocated with"
|       `-TextComment 0x55887c40a560 <line:291:1, col:48> Text="                                AllocatePages()."
|-FunctionDecl 0x55887c1a1f88 <line:312:1, line:317:3> line:314:1 PeiServicesAllocatePool 'EFI_STATUS (UINTN, void **)'
| |-ParmVarDecl 0x55887c1a1e38 <line:315:6, col:13> col:13 Size 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1a1eb8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:316:15> col:15 Buffer 'void **'
| `-FullComment 0x55887c40aaa0 <line:302:1, line:309:88>
|   |-ParagraphComment 0x55887c40a690 <line:302:1, col:67>
|   | `-TextComment 0x55887c40a660 <col:1, col:67> Text="  This service allocates memory from the Hand-Off Block (HOB) heap."
|   |-ParagraphComment 0x55887c40a6e0 <line:304:1, col:2>
|   | `-TextComment 0x55887c40a6b0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40a700 <col:3, line:305:2> [in] implicitly Param="Size" ParamIndex=0
|   | `-ParagraphComment 0x55887c40a7b0 <line:304:15, line:305:2>
|   |   |-TextComment 0x55887c40a760 <line:304:15, col:78> Text="                  The number of bytes to allocate from the pool."
|   |   `-TextComment 0x55887c40a780 <line:305:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40a7d0 <col:3, line:306:60> [in] implicitly Param="Buffer" ParamIndex=1
|   | `-ParagraphComment 0x55887c40a880 <line:305:17, line:306:60>
|   |   |-TextComment 0x55887c40a830 <line:305:17, col:92> Text="                If the call succeeds, a pointer to a pointer to the allocate"
|   |   `-TextComment 0x55887c40a850 <line:306:1, col:60> Text="                                buffer; undefined otherwise."
|   |-ParagraphComment 0x55887c40a8d0 <line:308:1, col:2>
|   | `-TextComment 0x55887c40a8a0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c40a8f0 <col:3, line:309:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c40a990 <line:308:22, line:309:2>
|   |   |-TextComment 0x55887c40a940 <line:308:22, col:61> Text="           The allocation was successful"
|   |   `-TextComment 0x55887c40a960 <line:309:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c40a9b0 <col:3, col:88> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|     `-ParagraphComment 0x55887c40aa40 <col:31, col:88>
|       `-TextComment 0x55887c40aa10 <col:31, col:88> Text="  There is not enough heap to allocate the requested size."
|-FunctionDecl 0x55887c1a2128 <line:326:1, line:330:3> line:328:1 PeiServicesResetSystem 'EFI_STATUS (void)'
| `-FullComment 0x55887c40ad40 <line:320:1, line:323:71>
|   |-ParagraphComment 0x55887c40ab40 <line:320:1, col:29>
|   | `-TextComment 0x55887c40ab10 <col:1, col:29> Text="  Resets the entire platform."
|   |-ParagraphComment 0x55887c40ab90 <line:322:1, col:2>
|   | `-TextComment 0x55887c40ab60 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c40abb0 <col:3, line:323:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c40ac50 <line:322:22, line:323:2>
|   |   |-TextComment 0x55887c40ac00 <line:322:22, col:68> Text="           The function completed successfully."
|   |   `-TextComment 0x55887c40ac20 <line:323:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c40ac70 <col:3, col:71> Name="retval" Arg[0]="EFI_NOT_AVAILABLE_YET"
|     `-ParagraphComment 0x55887c40ad00 <col:32, col:71>
|       `-TextComment 0x55887c40acd0 <col:32, col:71> Text=" The service has not been installed yet."
|-FunctionDecl 0x55887c1a23d8 <line:353:1, line:359:3> line:355:1 PeiServicesFfsFindFileByName 'EFI_STATUS (const EFI_GUID *, const EFI_PEI_FV_HANDLE, EFI_PEI_FILE_HANDLE *)'
| |-ParmVarDecl 0x55887c1a2208 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:356:35> col:35 FileName 'const EFI_GUID *'
| |-ParmVarDecl 0x55887c1a2280 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:357:34> col:34 VolumeHandle 'const EFI_PEI_FV_HANDLE':'void *const'
| |-ParmVarDecl 0x55887c1a22f8 <line:358:13, col:35> col:35 FileHandle 'EFI_PEI_FILE_HANDLE *'
| `-FullComment 0x55887c40b4f0 <line:333:1, line:350:52>
|   |-ParagraphComment 0x55887c40ae30 <line:333:1, line:335:28>
|   | |-TextComment 0x55887c40adb0 <line:333:1, col:103> Text="  This service is a wrapper for the PEI Service FfsFindByName(), except the pointer to the PEI Services"
|   | |-TextComment 0x55887c40add0 <line:334:1, col:96> Text="  Table has been removed.  See the Platform Initialization Pre-EFI Initialization Core Interface"
|   | `-TextComment 0x55887c40adf0 <line:335:1, col:28> Text="  Specification for details."
|   |-ParagraphComment 0x55887c40ae80 <line:337:1, col:2>
|   | `-TextComment 0x55887c40ae50 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40aea0 <col:3, line:338:56> [in] implicitly Param="FileName" ParamIndex=0
|   | `-ParagraphComment 0x55887c40af50 <line:337:18, line:338:56>
|   |   |-TextComment 0x55887c40af00 <line:337:18, col:60> Text="       A pointer to the name of the file to"
|   |   `-TextComment 0x55887c40af20 <line:338:1, col:56> Text="                        find within the firmware volume."
|   |-ParagraphComment 0x55887c40afa0 <line:340:1, col:2>
|   | `-TextComment 0x55887c40af70 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40afc0 <col:3, line:343:2> [in] implicitly Param="VolumeHandle" ParamIndex=1
|   | `-ParagraphComment 0x55887c40b0c0 <line:340:22, line:343:2>
|   |   |-TextComment 0x55887c40b020 <line:340:22, col:64> Text="   The firmware volume to search FileHandle"
|   |   |-TextComment 0x55887c40b040 <line:341:1, col:61> Text="                        Upon exit, points to the found file's"
|   |   |-TextComment 0x55887c40b060 <line:342:1, col:64> Text="                        handle or NULL if it could not be found."
|   |   `-TextComment 0x55887c40b080 <line:343:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40b0e0 <col:3, col:52> [in] implicitly Param="FileHandle" ParamIndex=2
|   | `-ParagraphComment 0x55887c40b170 <col:20, col:52>
|   |   `-TextComment 0x55887c40b140 <col:20, col:52> Text="     Pointer to found file handle"
|   |-ParagraphComment 0x55887c40b1c0 <line:345:1, col:2>
|   | `-TextComment 0x55887c40b190 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c40b1e0 <col:3, col:49> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c40b260 <col:22, col:49>
|   |   `-TextComment 0x55887c40b230 <col:22, col:49> Text="             File was found."
|   |-ParagraphComment 0x55887c40b2b0 <line:347:1, col:2>
|   | `-TextComment 0x55887c40b280 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c40b2d0 <col:3, col:53> Name="retval" Arg[0]="EFI_NOT_FOUND"
|   | `-ParagraphComment 0x55887c40b350 <col:24, col:53>
|   |   `-TextComment 0x55887c40b320 <col:24, col:53> Text="           File was not found."
|   |-ParagraphComment 0x55887c40b3a0 <line:349:1, col:2>
|   | `-TextComment 0x55887c40b370 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c40b3c0 <col:3, line:350:52> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c40b470 <line:349:32, line:350:52>
|       |-TextComment 0x55887c40b420 <line:349:32, col:63> Text="   VolumeHandle or FileHandle or"
|       `-TextComment 0x55887c40b440 <line:350:1, col:52> Text="                                  FileName was NULL."
|-FunctionDecl 0x55887c1a2618 <line:379:1, line:384:3> line:381:1 used PeiServicesFfsGetFileInfo 'EFI_STATUS (const EFI_PEI_FILE_HANDLE, EFI_FV_FILE_INFO *)'
| |-ParmVarDecl 0x55887c1a24c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:382:34> col:34 FileHandle 'const EFI_PEI_FILE_HANDLE':'void *const'
| |-ParmVarDecl 0x55887c1a2540 <line:383:7, col:35> col:35 FileInfo 'EFI_FV_FILE_INFO *'
| `-FullComment 0x55887c40bb90 <line:362:1, line:376:54>
|   |-ParagraphComment 0x55887c40b5e0 <line:362:1, line:364:28>
|   | |-TextComment 0x55887c40b560 <line:362:1, col:104> Text="  This service is a wrapper for the PEI Service FfsGetFileInfo(), except the pointer to the PEI Services"
|   | |-TextComment 0x55887c40b580 <line:363:1, col:96> Text="  Table has been removed.  See the Platform Initialization Pre-EFI Initialization Core Interface"
|   | `-TextComment 0x55887c40b5a0 <line:364:1, col:28> Text="  Specification for details."
|   |-ParagraphComment 0x55887c40b630 <line:366:1, col:2>
|   | `-TextComment 0x55887c40b600 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40b650 <col:3, col:41> [in] implicitly Param="FileHandle" ParamIndex=0
|   | `-ParagraphComment 0x55887c40b6e0 <col:20, col:41>
|   |   `-TextComment 0x55887c40b6b0 <col:20, col:41> Text="   Handle of the file."
|   |-ParagraphComment 0x55887c40b730 <line:368:1, col:2>
|   | `-TextComment 0x55887c40b700 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40b750 <col:3, line:369:34> [in] implicitly Param="FileInfo" ParamIndex=1
|   | `-ParagraphComment 0x55887c40b800 <line:368:18, line:369:34>
|   |   |-TextComment 0x55887c40b7b0 <line:368:18, col:53> Text="     Upon exit, points to the file's"
|   |   `-TextComment 0x55887c40b7d0 <line:369:1, col:34> Text="                      information."
|   |-ParagraphComment 0x55887c40b850 <line:371:1, col:2>
|   | `-TextComment 0x55887c40b820 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c40b870 <col:3, col:60> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c40b8f0 <col:22, col:60>
|   |   `-TextComment 0x55887c40b8c0 <col:22, col:60> Text="             File information returned."
|   |-ParagraphComment 0x55887c40b940 <line:373:1, col:2>
|   | `-TextComment 0x55887c40b910 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c40b960 <col:3, line:374:57> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c40ba10 <line:373:32, line:374:57>
|   |   |-TextComment 0x55887c40b9c0 <line:373:32, col:56> Text="   If FileHandle does not"
|   |   `-TextComment 0x55887c40b9e0 <line:374:1, col:57> Text="                                  represent a valid file."
|   |-ParagraphComment 0x55887c40ba60 <line:376:1, col:2>
|   | `-TextComment 0x55887c40ba30 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c40ba80 <col:3, col:54> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c40bb10 <col:32, col:54>
|       `-TextComment 0x55887c40bae0 <col:32, col:54> Text="   If FileInfo is NULL."
|-FunctionDecl 0x55887c1a28d0 <line:404:1, line:409:3> line:406:1 PeiServicesFfsGetFileInfo2 'EFI_STATUS (const EFI_PEI_FILE_HANDLE, EFI_FV_FILE_INFO2 *)'
| |-ParmVarDecl 0x55887c1a2708 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:407:34> col:34 FileHandle 'const EFI_PEI_FILE_HANDLE':'void *const'
| |-ParmVarDecl 0x55887c1a2780 <line:408:7, col:35> col:35 FileInfo 'EFI_FV_FILE_INFO2 *'
| `-FullComment 0x55887c40c250 <line:387:1, line:401:54>
|   |-ParagraphComment 0x55887c40bc80 <line:387:1, line:389:28>
|   | |-TextComment 0x55887c40bc00 <line:387:1, col:105> Text="  This service is a wrapper for the PEI Service FfsGetFileInfo2(), except the pointer to the PEI Services"
|   | |-TextComment 0x55887c40bc20 <line:388:1, col:95> Text="  Table has been removed. See the Platform Initialization Pre-EFI Initialization Core Interface"
|   | `-TextComment 0x55887c40bc40 <line:389:1, col:28> Text="  Specification for details."
|   |-ParagraphComment 0x55887c40bcd0 <line:391:1, col:2>
|   | `-TextComment 0x55887c40bca0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40bcf0 <col:3, col:41> [in] implicitly Param="FileHandle" ParamIndex=0
|   | `-ParagraphComment 0x55887c40bd80 <col:20, col:41>
|   |   `-TextComment 0x55887c40bd50 <col:20, col:41> Text="   Handle of the file."
|   |-ParagraphComment 0x55887c40bdd0 <line:393:1, col:2>
|   | `-TextComment 0x55887c40bda0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40bdf0 <col:3, line:394:34> [in] implicitly Param="FileInfo" ParamIndex=1
|   | `-ParagraphComment 0x55887c40bea0 <line:393:18, line:394:34>
|   |   |-TextComment 0x55887c40be50 <line:393:18, col:53> Text="     Upon exit, points to the file's"
|   |   `-TextComment 0x55887c40be70 <line:394:1, col:34> Text="                      information."
|   |-ParagraphComment 0x55887c40bef0 <line:396:1, col:2>
|   | `-TextComment 0x55887c40bec0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c40bf10 <col:3, col:60> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c40bf90 <col:22, col:60>
|   |   `-TextComment 0x55887c40bf60 <col:22, col:60> Text="             File information returned."
|   |-ParagraphComment 0x55887c40bfe0 <line:398:1, col:2>
|   | `-TextComment 0x55887c40bfb0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c40c000 <col:3, line:399:57> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c40c0b0 <line:398:32, line:399:57>
|   |   |-TextComment 0x55887c40c060 <line:398:32, col:56> Text="   If FileHandle does not"
|   |   `-TextComment 0x55887c40c080 <line:399:1, col:57> Text="                                  represent a valid file."
|   |-ParagraphComment 0x55887c40c100 <line:401:1, col:2>
|   | `-TextComment 0x55887c40c0d0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c40c120 <col:3, col:54> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c40c1d0 <col:32, col:54>
|       `-TextComment 0x55887c40c1a0 <col:32, col:54> Text="   If FileInfo is NULL."
|-FunctionDecl 0x55887c1a2ac8 <line:429:1, line:434:3> line:431:1 PeiServicesFfsGetVolumeInfo 'EFI_STATUS (EFI_PEI_FV_HANDLE, EFI_FV_INFO *)'
| |-ParmVarDecl 0x55887c1a29b8 <line:432:7, col:26> col:26 VolumeHandle 'EFI_PEI_FV_HANDLE':'void *'
| |-ParmVarDecl 0x55887c1a2a30 <line:433:7, col:27> col:27 VolumeInfo 'EFI_FV_INFO *'
| `-FullComment 0x55887c40c8f0 <line:412:1, line:426:54>
|   |-ParagraphComment 0x55887c40c340 <line:412:1, line:414:28>
|   | |-TextComment 0x55887c40c2c0 <line:412:1, col:106> Text="  This service is a wrapper for the PEI Service FfsGetVolumeInfo(), except the pointer to the PEI Services"
|   | |-TextComment 0x55887c40c2e0 <line:413:1, col:96> Text="  Table has been removed.  See the Platform Initialization Pre-EFI Initialization Core Interface"
|   | `-TextComment 0x55887c40c300 <line:414:1, col:28> Text="  Specification for details."
|   |-ParagraphComment 0x55887c40c390 <line:416:1, col:2>
|   | `-TextComment 0x55887c40c360 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40c3b0 <col:3, col:45> [in] implicitly Param="VolumeHandle" ParamIndex=0
|   | `-ParagraphComment 0x55887c40c440 <col:22, col:45>
|   |   `-TextComment 0x55887c40c410 <col:22, col:45> Text="   Handle of the volume."
|   |-ParagraphComment 0x55887c40c490 <line:418:1, col:2>
|   | `-TextComment 0x55887c40c460 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40c4b0 <col:3, line:419:36> [in] implicitly Param="VolumeInfo" ParamIndex=1
|   | `-ParagraphComment 0x55887c40c560 <line:418:20, line:419:36>
|   |   |-TextComment 0x55887c40c510 <line:418:20, col:57> Text="     Upon exit, points to the volume's"
|   |   `-TextComment 0x55887c40c530 <line:419:1, col:36> Text="                        information."
|   |-ParagraphComment 0x55887c40c5b0 <line:421:1, col:2>
|   | `-TextComment 0x55887c40c580 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c40c5d0 <col:3, col:60> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c40c650 <col:22, col:60>
|   |   `-TextComment 0x55887c40c620 <col:22, col:60> Text="             File information returned."
|   |-ParagraphComment 0x55887c40c6a0 <line:423:1, col:2>
|   | `-TextComment 0x55887c40c670 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c40c6c0 <col:3, line:424:57> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|   | `-ParagraphComment 0x55887c40c770 <line:423:32, line:424:57>
|   |   |-TextComment 0x55887c40c720 <line:423:32, col:56> Text="   If FileHandle does not"
|   |   `-TextComment 0x55887c40c740 <line:424:1, col:57> Text="                                  represent a valid file."
|   |-ParagraphComment 0x55887c40c7c0 <line:426:1, col:2>
|   | `-TextComment 0x55887c40c790 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c40c7e0 <col:3, col:54> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c40c870 <col:32, col:54>
|       `-TextComment 0x55887c40c840 <col:32, col:54> Text="   If FileInfo is NULL."
|-FunctionDecl 0x55887c1a2c48 <line:453:1, line:457:3> line:455:1 used PeiServicesRegisterForShadow 'EFI_STATUS (EFI_PEI_FILE_HANDLE)'
| |-ParmVarDecl 0x55887c1a2bb8 <line:456:7, col:28> col:28 FileHandle 'EFI_PEI_FILE_HANDLE':'void *'
| `-FullComment 0x55887c40ceb0 <line:437:1, line:451:44>
|   |-ParagraphComment 0x55887c40c9e0 <line:437:1, line:439:28>
|   | |-TextComment 0x55887c40c960 <line:437:1, col:107> Text="  This service is a wrapper for the PEI Service RegisterForShadow(), except the pointer to the PEI Services"
|   | |-TextComment 0x55887c40c980 <line:438:1, col:96> Text="  Table has been removed.  See the Platform Initialization Pre-EFI Initialization Core Interface"
|   | `-TextComment 0x55887c40c9a0 <line:439:1, col:28> Text="  Specification for details."
|   |-ParagraphComment 0x55887c40ca30 <line:441:1, col:2>
|   | `-TextComment 0x55887c40ca00 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40ca50 <col:3, line:442:37> [in] implicitly Param="FileHandle" ParamIndex=0
|   | `-ParagraphComment 0x55887c40cb00 <line:441:20, line:442:37>
|   |   |-TextComment 0x55887c40cab0 <line:441:20, col:63> Text="   PEIM's file handle. Must be the currently"
|   |   `-TextComment 0x55887c40cad0 <line:442:1, col:37> Text="                      executing PEIM."
|   |-ParagraphComment 0x55887c40cb50 <line:444:1, col:2>
|   | `-TextComment 0x55887c40cb20 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c40cb70 <col:3, line:445:34> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c40cc10 <line:444:22, line:445:34>
|   |   |-TextComment 0x55887c40cbc0 <line:444:22, col:64> Text="   The PEIM was successfully registered for"
|   |   `-TextComment 0x55887c40cbe0 <line:445:1, col:34> Text="                        shadowing."
|   |-ParagraphComment 0x55887c40cc60 <line:447:1, col:2>
|   | `-TextComment 0x55887c40cc30 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c40cc80 <col:3, line:448:57> Name="retval" Arg[0]="EFI_ALREADY_STARTED"
|   | `-ParagraphComment 0x55887c40cd30 <line:447:30, line:448:57>
|   |   |-TextComment 0x55887c40cce0 <line:447:30, col:55> Text="   The PEIM was previously"
|   |   `-TextComment 0x55887c40cd00 <line:448:1, col:57> Text="                                registered for shadowing."
|   |-ParagraphComment 0x55887c40cd80 <line:450:1, col:2>
|   | `-TextComment 0x55887c40cd50 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c40cda0 <col:3, line:451:44> Name="retval" Arg[0]="EFI_NOT_FOUND"
|     `-ParagraphComment 0x55887c40ce40 <line:450:24, line:451:44>
|       |-TextComment 0x55887c40cdf0 <line:450:24, col:60> Text="   The FileHandle does not refer to a"
|       `-TextComment 0x55887c40ce10 <line:451:1, col:44> Text="                          valid file handle."
|-FunctionDecl 0x55887c1a3068 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:491:3> line:485:1 PeiServicesInstallFvInfoPpi 'void (const EFI_GUID *, const void *, UINT32, const EFI_GUID *, const EFI_GUID *)'
| |-ParmVarDecl 0x55887c1a2d28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:486:23> col:23 FvFormat 'const EFI_GUID *'
| |-ParmVarDecl 0x55887c1a2da8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:487:23> col:23 FvInfo 'const void *'
| |-ParmVarDecl 0x55887c1a2e20 <line:488:12, col:22> col:22 FvInfoSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c1a2e98 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:489:23> col:23 ParentFvName 'const EFI_GUID *'
| |-ParmVarDecl 0x55887c1a2f10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:490:23> col:23 ParentFileName 'const EFI_GUID *'
| `-FullComment 0x55887c40d620 <line:460:1, line:481:70>
|   |-ParagraphComment 0x55887c40cf50 <line:460:1, col:115>
|   | `-TextComment 0x55887c40cf20 <col:1, col:115> Text="  Install a EFI_PEI_FIRMWARE_VOLUME_INFO_PPI instance so the PEI Core will be notified about a new firmware volume."
|   |-ParagraphComment 0x55887c40d010 <line:462:1, line:465:78>
|   | |-TextComment 0x55887c40cf70 <line:462:1, col:97> Text="  This function allocates, initializes, and installs a new EFI_PEI_FIRMWARE_VOLUME_INFO_PPI using"
|   | |-TextComment 0x55887c40cf90 <line:463:1, col:101> Text="  the parameters passed in to initialize the fields of the EFI_PEI_FIRMWARE_VOLUME_INFO_PPI instance."
|   | |-TextComment 0x55887c40cfb0 <line:464:1, col:92> Text="  If the resources can not be allocated for EFI_PEI_FIRMWARE_VOLUME_INFO_PPI, then ASSERT()."
|   | `-TextComment 0x55887c40cfd0 <line:465:1, col:78> Text="  If the EFI_PEI_FIRMWARE_VOLUME_INFO_PPI can not be installed, then ASSERT()."
|   |-ParagraphComment 0x55887c40d060 <line:468:1, col:2>
|   | `-TextComment 0x55887c40d030 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40d080 <col:3, line:471:2> [in] implicitly Param="FvFormat" ParamIndex=0
|   | `-ParagraphComment 0x55887c40d180 <line:468:19, line:471:2>
|   |   |-TextComment 0x55887c40d0e0 <line:468:19, col:100> Text="             Unique identifier of the format of the memory-mapped firmware volume."
|   |   |-TextComment 0x55887c40d100 <line:469:1, col:74> Text="                               This parameter is optional and may be NULL."
|   |   |-TextComment 0x55887c40d120 <line:470:1, col:106> Text="                               If NULL is specified, the EFI_FIRMWARE_FILE_SYSTEM2_GUID format is assumed."
|   |   `-TextComment 0x55887c40d140 <line:471:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40d1a0 <col:3, line:474:2> [in] implicitly Param="FvInfo" ParamIndex=1
|   | `-ParagraphComment 0x55887c40d2a0 <line:471:17, line:474:2>
|   |   |-TextComment 0x55887c40d200 <line:471:17, col:117> Text="               Points to a buffer which allows the EFI_PEI_FIRMWARE_VOLUME_PPI to process the volume."
|   |   |-TextComment 0x55887c40d220 <line:472:1, col:121> Text="                               The format of this buffer is specific to the FvFormat. For memory-mapped firmware volumes,"
|   |   |-TextComment 0x55887c40d240 <line:473:1, col:94> Text="                               this typically points to the first byte of the firmware volume."
|   |   `-TextComment 0x55887c40d260 <line:474:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40d2c0 <col:3, line:476:2> [in] implicitly Param="FvInfoSize" ParamIndex=2
|   | `-ParagraphComment 0x55887c40d3a0 <line:474:21, line:476:2>
|   |   |-TextComment 0x55887c40d320 <line:474:21, col:97> Text="           The size, in bytes, of FvInfo. For memory-mapped firmware volumes,"
|   |   |-TextComment 0x55887c40d340 <line:475:1, col:81> Text="                               this is typically the size of the firmware volume."
|   |   `-TextComment 0x55887c40d360 <line:476:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40d3c0 <col:3, line:479:2> [in] implicitly Param="ParentFvName" ParamIndex=3
|   | `-ParagraphComment 0x55887c40d4c0 <line:476:23, line:479:2>
|   |   |-TextComment 0x55887c40d420 <line:476:23, col:112> Text="         If the new firmware volume originated from a file in a different firmware volume,"
|   |   |-TextComment 0x55887c40d440 <line:477:1, col:110> Text="                               then this parameter specifies the GUID name of the originating firmware volume."
|   |   |-TextComment 0x55887c40d460 <line:478:1, col:70> Text="                               Otherwise, this parameter must be NULL."
|   |   `-TextComment 0x55887c40d480 <line:479:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c40d4e0 <col:3, line:481:70> [in] implicitly Param="ParentFileName" ParamIndex=4
|     `-ParagraphComment 0x55887c40d5c0 <line:479:25, line:481:70>
|       |-TextComment 0x55887c40d540 <line:479:25, col:112> Text="       If the new firmware volume originated from a file in a different firmware volume,"
|       |-TextComment 0x55887c40d560 <line:480:1, col:113> Text="                               then this parameter specifies the GUID file name of the originating firmware file."
|       `-TextComment 0x55887c40d580 <line:481:1, col:70> Text="                               Otherwise, this parameter must be NULL."
|-FunctionDecl 0x55887c1a3538 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:532:3> line:525:1 PeiServicesInstallFvInfo2Ppi 'void (const EFI_GUID *, const void *, UINT32, const EFI_GUID *, const EFI_GUID *, UINT32)'
| |-ParmVarDecl 0x55887c1a3168 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:526:23> col:23 FvFormat 'const EFI_GUID *'
| |-ParmVarDecl 0x55887c1a31e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:527:23> col:23 FvInfo 'const void *'
| |-ParmVarDecl 0x55887c1a3260 <line:528:12, col:22> col:22 FvInfoSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c1a32d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:529:23> col:23 ParentFvName 'const EFI_GUID *'
| |-ParmVarDecl 0x55887c1a3350 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:530:23> col:23 ParentFileName 'const EFI_GUID *'
| |-ParmVarDecl 0x55887c1a33c8 <line:531:12, col:22> col:22 AuthenticationStatus 'UINT32':'unsigned int'
| `-FullComment 0x55887c40df80 <line:494:1, line:521:52>
|   |-ParagraphComment 0x55887c40d6c0 <line:494:1, col:116>
|   | `-TextComment 0x55887c40d690 <col:1, col:116> Text="  Install a EFI_PEI_FIRMWARE_VOLUME_INFO2_PPI instance so the PEI Core will be notified about a new firmware volume."
|   |-ParagraphComment 0x55887c40d780 <line:496:1, line:499:79>
|   | |-TextComment 0x55887c40d6e0 <line:496:1, col:98> Text="  This function allocates, initializes, and installs a new EFI_PEI_FIRMWARE_VOLUME_INFO2_PPI using"
|   | |-TextComment 0x55887c40d700 <line:497:1, col:102> Text="  the parameters passed in to initialize the fields of the EFI_PEI_FIRMWARE_VOLUME_INFO2_PPI instance."
|   | |-TextComment 0x55887c40d720 <line:498:1, col:93> Text="  If the resources can not be allocated for EFI_PEI_FIRMWARE_VOLUME_INFO2_PPI, then ASSERT()."
|   | `-TextComment 0x55887c40d740 <line:499:1, col:79> Text="  If the EFI_PEI_FIRMWARE_VOLUME_INFO2_PPI can not be installed, then ASSERT()."
|   |-ParagraphComment 0x55887c40d7d0 <line:501:1, col:2>
|   | `-TextComment 0x55887c40d7a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40d7f0 <col:3, line:505:2> [in] implicitly Param="FvFormat" ParamIndex=0
|   | `-ParagraphComment 0x55887c40d920 <line:501:19, line:505:2>
|   |   |-TextComment 0x55887c40d850 <line:501:19, col:83> Text="             Unique identifier of the format of the memory-mapped"
|   |   |-TextComment 0x55887c40d870 <line:502:1, col:79> Text="                               firmware volume.  This parameter is optional and"
|   |   |-TextComment 0x55887c40d890 <line:503:1, col:70> Text="                               may be NULL.  If NULL is specified, the"
|   |   |-TextComment 0x55887c40d8b0 <line:504:1, col:80> Text="                               EFI_FIRMWARE_FILE_SYSTEM2_GUID format is assumed."
|   |   `-TextComment 0x55887c40d8d0 <line:505:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40d940 <col:3, line:510:2> [in] implicitly Param="FvInfo" ParamIndex=1
|   | `-ParagraphComment 0x55887c40da90 <line:505:17, line:510:2>
|   |   |-TextComment 0x55887c40d9a0 <line:505:17, col:66> Text="               Points to a buffer which allows the"
|   |   |-TextComment 0x55887c40d9c0 <line:506:1, col:81> Text="                               EFI_PEI_FIRMWARE_VOLUME_PPI to process the volume."
|   |   |-TextComment 0x55887c40d9e0 <line:507:1, col:85> Text="                               The format of this buffer is specific to the FvFormat."
|   |   |-TextComment 0x55887c40da00 <line:508:1, col:81> Text="                               For memory-mapped firmware volumes, this typically"
|   |   |-TextComment 0x55887c40da20 <line:509:1, col:79> Text="                               points to the first byte of the firmware volume."
|   |   `-TextComment 0x55887c40da40 <line:510:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40dab0 <col:3, line:513:2> [in] implicitly Param="FvInfoSize" ParamIndex=2
|   | `-ParagraphComment 0x55887c40dbb0 <line:510:21, line:513:2>
|   |   |-TextComment 0x55887c40db10 <line:510:21, col:79> Text="           The size, in bytes, of FvInfo. For memory-mapped"
|   |   |-TextComment 0x55887c40db30 <line:511:1, col:78> Text="                               firmware volumes, this is typically the size of"
|   |   |-TextComment 0x55887c40db50 <line:512:1, col:51> Text="                               the firmware volume."
|   |   `-TextComment 0x55887c40db70 <line:513:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40dbd0 <col:3, line:517:2> [in] implicitly Param="ParentFvName" ParamIndex=3
|   | `-ParagraphComment 0x55887c40dd00 <line:513:23, line:517:2>
|   |   |-TextComment 0x55887c40dc30 <line:513:23, col:80> Text="         If the new firmware volume originated from a file"
|   |   |-TextComment 0x55887c40dc50 <line:514:1, col:82> Text="                               in a different firmware volume, then this parameter"
|   |   |-TextComment 0x55887c40dc70 <line:515:1, col:82> Text="                               specifies the GUID name of the originating firmware"
|   |   |-TextComment 0x55887c40dc90 <line:516:1, col:78> Text="                               volume. Otherwise, this parameter must be NULL."
|   |   `-TextComment 0x55887c40dcb0 <line:517:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40dd20 <col:3, line:521:2> [in] implicitly Param="ParentFileName" ParamIndex=4
|   | `-ParagraphComment 0x55887c40de50 <line:517:25, line:521:2>
|   |   |-TextComment 0x55887c40dd80 <line:517:25, col:80> Text="       If the new firmware volume originated from a file"
|   |   |-TextComment 0x55887c40dda0 <line:518:1, col:82> Text="                               in a different firmware volume, then this parameter"
|   |   |-TextComment 0x55887c40ddc0 <line:519:1, col:78> Text="                               specifies the GUID file name of the originating"
|   |   |-TextComment 0x55887c40dde0 <line:520:1, col:85> Text="                               firmware file. Otherwise, this parameter must be NULL."
|   |   `-TextComment 0x55887c40de00 <line:521:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c40de70 <col:3, col:52> [in] implicitly Param="AuthenticationStatus" ParamIndex=5
|     `-ParagraphComment 0x55887c40df10 <col:31, col:52>
|       `-TextComment 0x55887c40dee0 <col:31, col:52> Text=" Authentication Status"
|-FunctionDecl 0x55887c1a3860 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:554:3> line:549:1 PeiServicesResetSystem2 'void (EFI_RESET_TYPE, EFI_STATUS, UINTN, void *)'
| |-ParmVarDecl 0x55887c1a3648 <line:550:6, col:22> col:22 ResetType 'EFI_RESET_TYPE':'EFI_RESET_TYPE'
| |-ParmVarDecl 0x55887c1a36c0 <line:551:6, col:22> col:22 ResetStatus 'EFI_STATUS':'unsigned long long'
| |-ParmVarDecl 0x55887c1a3738 <line:552:6, col:22> col:22 DataSize 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c1a37b8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesLib.h:553:23> col:23 ResetData 'void *'
| `-FullComment 0x55887c40e490 <line:535:1, line:544:41>
|   |-ParagraphComment 0x55887c40e020 <line:535:1, col:29>
|   | `-TextComment 0x55887c40dff0 <col:1, col:29> Text="  Resets the entire platform."
|   |-ParagraphComment 0x55887c40e070 <line:537:1, col:2>
|   | `-TextComment 0x55887c40e040 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40e090 <col:3, line:538:2> [in] explicitly Param="ResetType" ParamIndex=0
|   | `-ParagraphComment 0x55887c40e140 <line:537:23, line:538:2>
|   |   |-TextComment 0x55887c40e0f0 <line:537:23, col:57> Text="      The type of reset to perform."
|   |   `-TextComment 0x55887c40e110 <line:538:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40e160 <col:3, line:539:2> [in] explicitly Param="ResetStatus" ParamIndex=1
|   | `-ParagraphComment 0x55887c40e220 <line:538:25, line:539:2>
|   |   |-TextComment 0x55887c40e1d0 <line:538:25, col:58> Text="    The status code for the reset."
|   |   `-TextComment 0x55887c40e1f0 <line:539:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c40e240 <col:3, line:540:2> [in] explicitly Param="DataSize" ParamIndex=2
|   | `-ParagraphComment 0x55887c40e2f0 <line:539:22, line:540:2>
|   |   |-TextComment 0x55887c40e2a0 <line:539:22, col:61> Text="       The size, in bytes, of ResetData."
|   |   `-TextComment 0x55887c40e2c0 <line:540:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c40e310 <col:3, line:544:41> [in] explicitly Param="ResetData" ParamIndex=3
|     `-ParagraphComment 0x55887c40e440 <line:540:23, line:544:41>
|       |-TextComment 0x55887c40e370 <line:540:23, col:94> Text="      For a ResetType of EfiResetCold, EfiResetWarm, or EfiResetShutdown"
|       |-TextComment 0x55887c40e390 <line:541:1, col:92> Text="                            the data buffer starts with a Null-terminated string, optionally"
|       |-TextComment 0x55887c40e3b0 <line:542:1, col:91> Text="                            followed by additional binary data. The string is a description"
|       |-TextComment 0x55887c40e3d0 <line:543:1, col:90> Text="                            that the caller may use to further indicate the reason for the"
|       `-TextComment 0x55887c40e3f0 <line:544:1, col:41> Text="                            system reset."
|-VarDecl 0x55887c1a39b8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Guid/PcAnsi.h:45:1, col:18> col:18 gEfiPcAnsiGuid 'EFI_GUID':'GUID' extern
|-VarDecl 0x55887c1a3a30 <line:46:1, col:18> col:18 gEfiVT100Guid 'EFI_GUID':'GUID' extern
|-VarDecl 0x55887c1a3aa8 <line:47:1, col:18> col:18 gEfiVT100PlusGuid 'EFI_GUID':'GUID' extern
|-VarDecl 0x55887c1a3b20 <line:48:1, col:18> col:18 gEfiVTUTF8Guid 'EFI_GUID':'GUID' extern
|-VarDecl 0x55887c1a3b98 <line:49:1, col:18> col:18 gEfiUartDevicePathGuid 'EFI_GUID':'GUID' extern
|-VarDecl 0x55887c1a3c10 <line:50:1, col:18> col:18 gEfiSasDevicePathGuid 'EFI_GUID':'GUID' extern
|-RecordDecl 0x55887c1a3cf8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/Bluetooth.h:18:9, line:23:1> line:18:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1a3da0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c40e560 <line:16:4, col:21>
| | `-ParagraphComment 0x55887c40e530 <col:4, col:21>
| |   `-TextComment 0x55887c40e500 <col:4, col:21> Text=" BLUETOOTH_ADDRESS"
| `-FieldDecl 0x55887c1a3e88 <line:22:3, col:21> col:12 Address 'UINT8[6]'
|   `-FullComment 0x55887c40e630 <line:20:6, col:37>
|     `-ParagraphComment 0x55887c40e600 <col:6, col:37>
|       `-TextComment 0x55887c40e5d0 <col:6, col:37> Text=" 48bit Bluetooth device address."
|-TypedefDecl 0x55887c1a3f38 <line:18:1, line:23:3> col:3 referenced BLUETOOTH_ADDRESS 'struct BLUETOOTH_ADDRESS':'BLUETOOTH_ADDRESS'
| |-ElaboratedType 0x55887c1a3ee0 'struct BLUETOOTH_ADDRESS' sugar
| | `-RecordType 0x55887c1a3d80 'BLUETOOTH_ADDRESS'
| |   `-Record 0x55887c1a3cf8 ''
| `-FullComment 0x55887c40e700 <line:16:4, col:21>
|   `-ParagraphComment 0x55887c40e6d0 <col:4, col:21>
|     `-TextComment 0x55887c40e6a0 <col:4, col:21> Text=" BLUETOOTH_ADDRESS"
|-RecordDecl 0x55887c1a3fd0 <line:28:9, line:33:1> line:28:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1a4070 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c40e7d0 <line:26:4, col:70>
| | `-ParagraphComment 0x55887c40e7a0 <col:4, col:70>
| |   `-TextComment 0x55887c40e770 <col:4, col:70> Text=" BLUETOOTH_CLASS_OF_DEVICE. See Bluetooth specification for detail."
| |-FieldDecl 0x55887c1a4118 <line:29:3, col:33> col:13 FormatType 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c1a40f8 <col:33> 'int'
| |   |-value: Int 2
| |   `-IntegerLiteral 0x55887c1a40c8 <col:33> 'int' 2
| |-FieldDecl 0x55887c1a41b8 <line:30:3, col:33> col:13 MinorDeviceClass 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c1a4198 <col:33> 'int'
| |   |-value: Int 6
| |   `-IntegerLiteral 0x55887c1a4168 <col:33> 'int' 6
| |-FieldDecl 0x55887c1a4258 <line:31:3, col:33> col:13 MajorDeviceClass 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c1a4238 <col:33> 'int'
| |   |-value: Int 5
| |   `-IntegerLiteral 0x55887c1a4208 <col:33> 'int' 5
| `-FieldDecl 0x55887c1a42f8 <line:32:3, col:33> col:13 MajorServiceClass 'UINT16':'unsigned short'
|   `-ConstantExpr 0x55887c1a42d8 <col:33> 'int'
|     |-value: Int 11
|     `-IntegerLiteral 0x55887c1a42a8 <col:33> 'int' 11
|-TypedefDecl 0x55887c1a43a8 <line:28:1, line:33:3> col:3 BLUETOOTH_CLASS_OF_DEVICE 'struct BLUETOOTH_CLASS_OF_DEVICE':'BLUETOOTH_CLASS_OF_DEVICE'
| |-ElaboratedType 0x55887c1a4350 'struct BLUETOOTH_CLASS_OF_DEVICE' sugar
| | `-RecordType 0x55887c1a4050 'BLUETOOTH_CLASS_OF_DEVICE'
| |   `-Record 0x55887c1a3fd0 ''
| `-FullComment 0x55887c40e8a0 <line:26:4, col:70>
|   `-ParagraphComment 0x55887c40e870 <col:4, col:70>
|     `-TextComment 0x55887c40e840 <col:4, col:70> Text=" BLUETOOTH_CLASS_OF_DEVICE. See Bluetooth specification for detail."
|-RecordDecl 0x55887c1a4440 <line:38:9, line:48:1> line:38:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1a44e0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c40e970 <line:36:4, col:24>
| | `-ParagraphComment 0x55887c40e940 <col:4, col:24>
| |   `-TextComment 0x55887c40e910 <col:4, col:24> Text=" BLUETOOTH_LE_ADDRESS"
| |-FieldDecl 0x55887c1a45c8 <line:42:3, col:21> col:12 Address 'UINT8[6]'
| | `-FullComment 0x55887c40ea40 <line:40:6, col:37>
| |   `-ParagraphComment 0x55887c40ea10 <col:6, col:37>
| |     `-TextComment 0x55887c40e9e0 <col:6, col:37> Text=" 48-bit Bluetooth device address"
| `-FieldDecl 0x55887c1a4658 <line:47:3, col:12> col:12 Type 'UINT8':'unsigned char'
|   `-FullComment 0x55887c40eb30 <line:44:6, line:45:34>
|     `-ParagraphComment 0x55887c40eb00 <line:44:6, line:45:34>
|       |-TextComment 0x55887c40eab0 <line:44:6, col:34> Text=" 0x00 - Public Device Address"
|       `-TextComment 0x55887c40ead0 <line:45:6, col:34> Text=" 0x01 - Random Device Address"
|-TypedefDecl 0x55887c1a4708 <line:38:1, line:48:3> col:3 referenced BLUETOOTH_LE_ADDRESS 'struct BLUETOOTH_LE_ADDRESS':'BLUETOOTH_LE_ADDRESS'
| |-ElaboratedType 0x55887c1a46b0 'struct BLUETOOTH_LE_ADDRESS' sugar
| | `-RecordType 0x55887c1a44c0 'BLUETOOTH_LE_ADDRESS'
| |   `-Record 0x55887c1a4440 ''
| `-FullComment 0x55887c40ec00 <line:36:4, col:24>
|   `-ParagraphComment 0x55887c40ebd0 <col:4, col:24>
|     `-TextComment 0x55887c40eba0 <col:4, col:24> Text=" BLUETOOTH_LE_ADDRESS"
|-RecordDecl 0x55887c1ae758 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/Acpi10.h:18:9, line:21:1> line:18:9 struct definition
| |-FullComment 0x55887c40ecf0 <line:15:4, line:16:36>
| | `-ParagraphComment 0x55887c40ecc0 <line:15:4, line:16:36>
| |   |-TextComment 0x55887c40ec70 <line:15:4, col:75> Text=" Common table header, this prefaces all ACPI tables, including FACS, but"
| |   `-TextComment 0x55887c40ec90 <line:16:4, col:36> Text=" excluding the RSD PTR structure."
| |-FieldDecl 0x55887c1ae810 <line:19:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1ae870 <line:20:3, col:13> col:13 Length 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1ae918 <line:18:1, line:21:3> col:3 EFI_ACPI_COMMON_HEADER 'struct EFI_ACPI_COMMON_HEADER':'EFI_ACPI_COMMON_HEADER'
| |-ElaboratedType 0x55887c1ae8c0 'struct EFI_ACPI_COMMON_HEADER' sugar
| | `-RecordType 0x55887c1ae7e0 'EFI_ACPI_COMMON_HEADER'
| |   `-Record 0x55887c1ae758 ''
| `-FullComment 0x55887c40ede0 <line:15:4, line:16:36>
|   `-ParagraphComment 0x55887c40edb0 <line:15:4, line:16:36>
|     |-TextComment 0x55887c40ed60 <line:15:4, col:75> Text=" Common table header, this prefaces all ACPI tables, including FACS, but"
|     `-TextComment 0x55887c40ed80 <line:16:4, col:36> Text=" excluding the RSD PTR structure."
|-RecordDecl 0x55887c1ae9d8 <line:27:9, line:37:1> line:27:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1aea80 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c40eeb0 <line:25:4, col:88>
| | `-ParagraphComment 0x55887c40ee80 <col:4, col:88>
| |   `-TextComment 0x55887c40ee50 <col:4, col:88> Text=" The common ACPI description table header.  This structure prefaces most ACPI tables."
| |-FieldDecl 0x55887c1aeae8 <line:28:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1aeb48 <line:29:3, col:13> col:13 Length 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1aeba8 <line:30:3, col:13> col:13 Revision 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1aec08 <line:31:3, col:13> col:13 Checksum 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1aecb8 <line:32:3, col:20> col:13 OemId 'UINT8[6]'
| |-FieldDecl 0x55887c1aed18 <line:33:3, col:13> col:13 OemTableId 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1aed78 <line:34:3, col:13> col:13 OemRevision 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1aedd8 <line:35:3, col:13> col:13 CreatorId 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1aee38 <line:36:3, col:13> col:13 CreatorRevision 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1aeee8 <line:27:1, line:37:3> col:3 referenced EFI_ACPI_DESCRIPTION_HEADER 'struct EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-ElaboratedType 0x55887c1aee90 'struct EFI_ACPI_DESCRIPTION_HEADER' sugar
| | `-RecordType 0x55887c1aea60 'EFI_ACPI_DESCRIPTION_HEADER'
| |   `-Record 0x55887c1ae9d8 ''
| `-FullComment 0x55887c40ef80 <line:25:4, col:88>
|   `-ParagraphComment 0x55887c40ef50 <col:4, col:88>
|     `-TextComment 0x55887c40ef20 <col:4, col:88> Text=" The common ACPI description table header.  This structure prefaces most ACPI tables."
|-RecordDecl 0x55887c1aefd8 <line:116:16, line:127:1> line:116:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1af080 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c40f070 <line:113:4, line:114:30>
| | `-ParagraphComment 0x55887c40f040 <line:113:4, line:114:30>
| |   |-TextComment 0x55887c40eff0 <line:113:4, col:51> Text=" The common definition of QWORD, DWORD, and WORD"
| |   `-TextComment 0x55887c40f010 <line:114:4, col:30> Text=" Address Space Descriptors."
| |-FieldDecl 0x55887c1af0e8 <line:117:3, col:13> col:13 Desc 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1af148 <line:118:3, col:13> col:13 Len 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1af1a8 <line:119:3, col:13> col:13 ResType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1af208 <line:120:3, col:13> col:13 GenFlag 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1af268 <line:121:3, col:13> col:13 SpecificFlag 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1af2c8 <line:122:3, col:13> col:13 AddrSpaceGranularity 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1af328 <line:123:3, col:13> col:13 AddrRangeMin 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1af388 <line:124:3, col:13> col:13 AddrRangeMax 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1af3e8 <line:125:3, col:13> col:13 AddrTranslationOffset 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c1af448 <line:126:3, col:13> col:13 AddrLen 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1af4f8 <line:116:1, line:127:3> col:3 EFI_ACPI_ADDRESS_SPACE_DESCRIPTOR 'struct EFI_ACPI_ADDRESS_SPACE_DESCRIPTOR':'EFI_ACPI_ADDRESS_SPACE_DESCRIPTOR'
| |-ElaboratedType 0x55887c1af4a0 'struct EFI_ACPI_ADDRESS_SPACE_DESCRIPTOR' sugar
| | `-RecordType 0x55887c1af060 'EFI_ACPI_ADDRESS_SPACE_DESCRIPTOR'
| |   `-Record 0x55887c1aefd8 ''
| `-FullComment 0x55887c40f160 <line:113:4, line:114:30>
|   `-ParagraphComment 0x55887c40f130 <line:113:4, line:114:30>
|     |-TextComment 0x55887c40f0e0 <line:113:4, col:51> Text=" The common definition of QWORD, DWORD, and WORD"
|     `-TextComment 0x55887c40f100 <line:114:4, col:30> Text=" Address Space Descriptors."
|-RecordDecl 0x55887c1af568 <line:129:16, line:136:1> line:129:16 union definition
| |-MaxFieldAlignmentAttr 0x55887c1af610 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c1af678 <line:130:3, col:12> col:12 Byte 'UINT8':'unsigned char'
| |-RecordDecl 0x55887c1af6c8 <line:131:10, line:135:3> line:131:10 struct definition
| | |-MaxFieldAlignmentAttr 0x55887c1af770 <<invalid sloc>> Implicit 8
| | |-FieldDecl 0x55887c1af818 <line:132:5, col:23> col:14 Length 'UINT8':'unsigned char'
| | | `-ConstantExpr 0x55887c1af7f8 <col:23> 'int'
| | |   |-value: Int 3
| | |   `-IntegerLiteral 0x55887c1af7c8 <col:23> 'int' 3
| | |-FieldDecl 0x55887c1af8b8 <line:133:5, col:23> col:14 Name 'UINT8':'unsigned char'
| | | `-ConstantExpr 0x55887c1af898 <col:23> 'int'
| | |   |-value: Int 4
| | |   `-IntegerLiteral 0x55887c1af868 <col:23> 'int' 4
| | `-FieldDecl 0x55887c1af958 <line:134:5, col:23> col:14 Type 'UINT8':'unsigned char'
| |   `-ConstantExpr 0x55887c1af938 <col:23> 'int'
| |     |-value: Int 1
| |     `-IntegerLiteral 0x55887c1af908 <col:23> 'int' 1
| `-FieldDecl 0x55887c1afa08 <line:131:10, line:135:5> col:5 Bits 'struct (unnamed struct at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/Acpi10.h:131:10)':'struct ACPI_SMALL_RESOURCE_HEADER::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/Acpi10.h:131:10)'
|-TypedefDecl 0x55887c1afab8 <line:129:1, line:136:3> col:3 referenced ACPI_SMALL_RESOURCE_HEADER 'union ACPI_SMALL_RESOURCE_HEADER':'ACPI_SMALL_RESOURCE_HEADER'
| `-ElaboratedType 0x55887c1afa60 'union ACPI_SMALL_RESOURCE_HEADER' sugar
|   `-RecordType 0x55887c1af5f0 'ACPI_SMALL_RESOURCE_HEADER'
|     `-Record 0x55887c1af568 ''
|-RecordDecl 0x55887c1afb28 <line:138:16, line:147:1> line:138:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1afbd0 <<invalid sloc>> Implicit 8
| |-RecordDecl 0x55887c1afc28 <line:139:10, line:145:3> line:139:10 union definition
| | |-MaxFieldAlignmentAttr 0x55887c1afcd0 <<invalid sloc>> Implicit 8
| | |-FieldDecl 0x55887c1afd38 <line:140:5, col:14> col:14 Byte 'UINT8':'unsigned char'
| | |-RecordDecl 0x55887c1afd88 <line:141:12, line:144:5> line:141:12 struct definition
| | | |-MaxFieldAlignmentAttr 0x55887c1afe30 <<invalid sloc>> Implicit 8
| | | |-FieldDecl 0x55887c1afed8 <line:142:7, col:23> col:16 Name 'UINT8':'unsigned char'
| | | | `-ConstantExpr 0x55887c1afeb8 <col:23> 'int'
| | | |   |-value: Int 7
| | | |   `-IntegerLiteral 0x55887c1afe88 <col:23> 'int' 7
| | | `-FieldDecl 0x55887c1aff78 <line:143:7, col:23> col:16 Type 'UINT8':'unsigned char'
| | |   `-ConstantExpr 0x55887c1aff58 <col:23> 'int'
| | |     |-value: Int 1
| | |     `-IntegerLiteral 0x55887c1aff28 <col:23> 'int' 1
| | `-FieldDecl 0x55887c1b0028 <line:141:12, line:144:7> col:7 Bits 'struct (unnamed struct at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/Acpi10.h:141:12)':'struct ACPI_LARGE_RESOURCE_HEADER::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/Acpi10.h:141:12)'
| |-FieldDecl 0x55887c1b00d8 <line:139:10, line:145:5> col:5 Header 'union (unnamed union at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/Acpi10.h:139:10)':'union ACPI_LARGE_RESOURCE_HEADER::(unnamed at /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/Acpi10.h:139:10)'
| `-FieldDecl 0x55887c1b0138 <line:146:3, col:13> col:13 Length 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c1b02a8 <line:138:1, line:147:3> col:3 referenced ACPI_LARGE_RESOURCE_HEADER 'struct ACPI_LARGE_RESOURCE_HEADER':'ACPI_LARGE_RESOURCE_HEADER'
| `-ElaboratedType 0x55887c1b0250 'struct ACPI_LARGE_RESOURCE_HEADER' sugar
|   `-RecordType 0x55887c1afbb0 'ACPI_LARGE_RESOURCE_HEADER'
|     `-Record 0x55887c1afb28 ''
|-RecordDecl 0x55887c1b0340 <line:152:16, line:155:1> line:152:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1b03e0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c40f230 <line:150:4, col:19>
| | `-ParagraphComment 0x55887c40f200 <col:4, col:19>
| |   `-TextComment 0x55887c40f1d0 <col:4, col:19> Text=" IRQ Descriptor."
| |-FieldDecl 0x55887c1b0470 <line:153:3, col:33> col:33 Header 'ACPI_SMALL_RESOURCE_HEADER':'ACPI_SMALL_RESOURCE_HEADER'
| `-FieldDecl 0x55887c1b04d0 <line:154:3, col:33> col:33 Mask 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c1b0648 <line:152:1, line:155:3> col:3 EFI_ACPI_IRQ_NOFLAG_DESCRIPTOR 'struct EFI_ACPI_IRQ_NOFLAG_DESCRIPTOR':'EFI_ACPI_IRQ_NOFLAG_DESCRIPTOR'
| |-ElaboratedType 0x55887c1b05f0 'struct EFI_ACPI_IRQ_NOFLAG_DESCRIPTOR' sugar
| | `-RecordType 0x55887c1b03c0 'EFI_ACPI_IRQ_NOFLAG_DESCRIPTOR'
| |   `-Record 0x55887c1b0340 ''
| `-FullComment 0x55887c40f300 <line:150:4, col:19>
|   `-ParagraphComment 0x55887c40f2d0 <col:4, col:19>
|     `-TextComment 0x55887c40f2a0 <col:4, col:19> Text=" IRQ Descriptor."
|-RecordDecl 0x55887c1b9820 <line:160:16, line:164:1> line:160:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1b98c0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c40f3d0 <line:158:4, col:19>
| | `-ParagraphComment 0x55887c40f3a0 <col:4, col:19>
| |   `-TextComment 0x55887c40f370 <col:4, col:19> Text=" IRQ Descriptor."
| |-FieldDecl 0x55887c1b9928 <line:161:3, col:33> col:33 Header 'ACPI_SMALL_RESOURCE_HEADER':'ACPI_SMALL_RESOURCE_HEADER'
| |-FieldDecl 0x55887c1b9988 <line:162:3, col:33> col:33 Mask 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c1b99e8 <line:163:3, col:33> col:33 Information 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c1b9a98 <line:160:1, line:164:3> col:3 EFI_ACPI_IRQ_DESCRIPTOR 'struct EFI_ACPI_IRQ_DESCRIPTOR':'EFI_ACPI_IRQ_DESCRIPTOR'
| |-ElaboratedType 0x55887c1b9a40 'struct EFI_ACPI_IRQ_DESCRIPTOR' sugar
| | `-RecordType 0x55887c1b98a0 'EFI_ACPI_IRQ_DESCRIPTOR'
| |   `-Record 0x55887c1b9820 ''
| `-FullComment 0x55887c40f4a0 <line:158:4, col:19>
|   `-ParagraphComment 0x55887c40f470 <col:4, col:19>
|     `-TextComment 0x55887c40f440 <col:4, col:19> Text=" IRQ Descriptor."
|-RecordDecl 0x55887c1b9b30 <line:169:16, line:173:1> line:169:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1b9bd0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c40f570 <line:167:4, col:19>
| | `-ParagraphComment 0x55887c40f540 <col:4, col:19>
| |   `-TextComment 0x55887c40f510 <col:4, col:19> Text=" DMA Descriptor."
| |-FieldDecl 0x55887c1b9c38 <line:170:3, col:33> col:33 Header 'ACPI_SMALL_RESOURCE_HEADER':'ACPI_SMALL_RESOURCE_HEADER'
| |-FieldDecl 0x55887c1b9c98 <line:171:3, col:33> col:33 ChannelMask 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1b9cf8 <line:172:3, col:33> col:33 Information 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c1b9da8 <line:169:1, line:173:3> col:3 EFI_ACPI_DMA_DESCRIPTOR 'struct EFI_ACPI_DMA_DESCRIPTOR':'EFI_ACPI_DMA_DESCRIPTOR'
| |-ElaboratedType 0x55887c1b9d50 'struct EFI_ACPI_DMA_DESCRIPTOR' sugar
| | `-RecordType 0x55887c1b9bb0 'EFI_ACPI_DMA_DESCRIPTOR'
| |   `-Record 0x55887c1b9b30 ''
| `-FullComment 0x55887c40f640 <line:167:4, col:19>
|   `-ParagraphComment 0x55887c40f610 <col:4, col:19>
|     `-TextComment 0x55887c40f5e0 <col:4, col:19> Text=" DMA Descriptor."
|-RecordDecl 0x55887c1b9e40 <line:178:16, line:185:1> line:178:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1b9ee0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c40f710 <line:176:4, col:23>
| | `-ParagraphComment 0x55887c40f6e0 <col:4, col:23>
| |   `-TextComment 0x55887c40f6b0 <col:4, col:23> Text=" I/O Port Descriptor"
| |-FieldDecl 0x55887c1b9f48 <line:179:3, col:33> col:33 Header 'ACPI_SMALL_RESOURCE_HEADER':'ACPI_SMALL_RESOURCE_HEADER'
| |-FieldDecl 0x55887c1b9fa8 <line:180:3, col:33> col:33 Information 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ba008 <line:181:3, col:33> col:33 BaseAddressMin 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1ba068 <line:182:3, col:33> col:33 BaseAddressMax 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1ba0c8 <line:183:3, col:33> col:33 Alignment 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1ba128 <line:184:3, col:33> col:33 Length 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c1ba1d8 <line:178:1, line:185:3> col:3 EFI_ACPI_IO_PORT_DESCRIPTOR 'struct EFI_ACPI_IO_PORT_DESCRIPTOR':'EFI_ACPI_IO_PORT_DESCRIPTOR'
| |-ElaboratedType 0x55887c1ba180 'struct EFI_ACPI_IO_PORT_DESCRIPTOR' sugar
| | `-RecordType 0x55887c1b9ec0 'EFI_ACPI_IO_PORT_DESCRIPTOR'
| |   `-Record 0x55887c1b9e40 ''
| `-FullComment 0x55887c40f7e0 <line:176:4, col:23>
|   `-ParagraphComment 0x55887c40f7b0 <col:4, col:23>
|     `-TextComment 0x55887c40f780 <col:4, col:23> Text=" I/O Port Descriptor"
|-RecordDecl 0x55887c1ba270 <line:190:16, line:194:1> line:190:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1ba310 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c40f8b0 <line:188:4, col:39>
| | `-ParagraphComment 0x55887c40f880 <col:4, col:39>
| |   `-TextComment 0x55887c40f850 <col:4, col:39> Text=" Fixed Location I/O Port Descriptor."
| |-FieldDecl 0x55887c1ba378 <line:191:3, col:33> col:33 Header 'ACPI_SMALL_RESOURCE_HEADER':'ACPI_SMALL_RESOURCE_HEADER'
| |-FieldDecl 0x55887c1ba3d8 <line:192:3, col:33> col:33 BaseAddress 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c1ba438 <line:193:3, col:33> col:33 Length 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c1ba4e8 <line:190:1, line:194:3> col:3 EFI_ACPI_FIXED_LOCATION_IO_PORT_DESCRIPTOR 'struct EFI_ACPI_FIXED_LOCATION_IO_PORT_DESCRIPTOR':'EFI_ACPI_FIXED_LOCATION_IO_PORT_DESCRIPTOR'
| |-ElaboratedType 0x55887c1ba490 'struct EFI_ACPI_FIXED_LOCATION_IO_PORT_DESCRIPTOR' sugar
| | `-RecordType 0x55887c1ba2f0 'EFI_ACPI_FIXED_LOCATION_IO_PORT_DESCRIPTOR'
| |   `-Record 0x55887c1ba270 ''
| `-FullComment 0x55887c40f980 <line:188:4, col:39>
|   `-ParagraphComment 0x55887c40f950 <col:4, col:39>
|     `-TextComment 0x55887c40f920 <col:4, col:39> Text=" Fixed Location I/O Port Descriptor."
|-RecordDecl 0x55887c1ba580 <line:199:16, line:206:1> line:199:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1ba620 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c40fa50 <line:197:4, col:34>
| | `-ParagraphComment 0x55887c40fa20 <col:4, col:34>
| |   `-TextComment 0x55887c40f9f0 <col:4, col:34> Text=" 24-Bit Memory Range Descriptor"
| |-FieldDecl 0x55887c1ba6b0 <line:200:3, col:33> col:33 Header 'ACPI_LARGE_RESOURCE_HEADER':'ACPI_LARGE_RESOURCE_HEADER'
| |-FieldDecl 0x55887c1ba710 <line:201:3, col:33> col:33 Information 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ba770 <line:202:3, col:33> col:33 BaseAddressMin 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1ba7d0 <line:203:3, col:33> col:33 BaseAddressMax 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1ba830 <line:204:3, col:33> col:33 Alignment 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c1ba890 <line:205:3, col:33> col:33 Length 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c1ba998 <line:199:1, line:206:3> col:3 EFI_ACPI_24_BIT_MEMORY_RANGE_DESCRIPTOR 'struct EFI_ACPI_24_BIT_MEMORY_RANGE_DESCRIPTOR':'EFI_ACPI_24_BIT_MEMORY_RANGE_DESCRIPTOR'
| |-ElaboratedType 0x55887c1ba940 'struct EFI_ACPI_24_BIT_MEMORY_RANGE_DESCRIPTOR' sugar
| | `-RecordType 0x55887c1ba600 'EFI_ACPI_24_BIT_MEMORY_RANGE_DESCRIPTOR'
| |   `-Record 0x55887c1ba580 ''
| `-FullComment 0x55887c40fb20 <line:197:4, col:34>
|   `-ParagraphComment 0x55887c40faf0 <col:4, col:34>
|     `-TextComment 0x55887c40fac0 <col:4, col:34> Text=" 24-Bit Memory Range Descriptor"
|-RecordDecl 0x55887c1baa30 <line:211:16, line:218:1> line:211:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1baad0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c40fbf0 <line:209:4, col:34>
| | `-ParagraphComment 0x55887c40fbc0 <col:4, col:34>
| |   `-TextComment 0x55887c40fb90 <col:4, col:34> Text=" 32-Bit Memory Range Descriptor"
| |-FieldDecl 0x55887c1bab38 <line:212:3, col:33> col:33 Header 'ACPI_LARGE_RESOURCE_HEADER':'ACPI_LARGE_RESOURCE_HEADER'
| |-FieldDecl 0x55887c1bab98 <line:213:3, col:33> col:33 Information 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1babf8 <line:214:3, col:33> col:33 BaseAddressMin 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1bac58 <line:215:3, col:33> col:33 BaseAddressMax 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1bacb8 <line:216:3, col:33> col:33 Alignment 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1bad18 <line:217:3, col:33> col:33 Length 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1badc8 <line:211:1, line:218:3> col:3 EFI_ACPI_32_BIT_MEMORY_RANGE_DESCRIPTOR 'struct EFI_ACPI_32_BIT_MEMORY_RANGE_DESCRIPTOR':'EFI_ACPI_32_BIT_MEMORY_RANGE_DESCRIPTOR'
| |-ElaboratedType 0x55887c1bad70 'struct EFI_ACPI_32_BIT_MEMORY_RANGE_DESCRIPTOR' sugar
| | `-RecordType 0x55887c1baab0 'EFI_ACPI_32_BIT_MEMORY_RANGE_DESCRIPTOR'
| |   `-Record 0x55887c1baa30 ''
| `-FullComment 0x55887c40fcc0 <line:209:4, col:34>
|   `-ParagraphComment 0x55887c40fc90 <col:4, col:34>
|     `-TextComment 0x55887c40fc60 <col:4, col:34> Text=" 32-Bit Memory Range Descriptor"
|-RecordDecl 0x55887c1bae60 <line:223:16, line:228:1> line:223:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1baf00 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c40fd90 <line:221:4, col:46>
| | `-ParagraphComment 0x55887c40fd60 <col:4, col:46>
| |   `-TextComment 0x55887c40fd30 <col:4, col:46> Text=" Fixed 32-Bit Fixed Memory Range Descriptor"
| |-FieldDecl 0x55887c1baf68 <line:224:3, col:33> col:33 Header 'ACPI_LARGE_RESOURCE_HEADER':'ACPI_LARGE_RESOURCE_HEADER'
| |-FieldDecl 0x55887c1bafc8 <line:225:3, col:33> col:33 Information 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bb028 <line:226:3, col:33> col:33 BaseAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1bb088 <line:227:3, col:33> col:33 Length 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1bb138 <line:223:1, line:228:3> col:3 EFI_ACPI_32_BIT_FIXED_MEMORY_RANGE_DESCRIPTOR 'struct EFI_ACPI_32_BIT_FIXED_MEMORY_RANGE_DESCRIPTOR':'EFI_ACPI_32_BIT_FIXED_MEMORY_RANGE_DESCRIPTOR'
| |-ElaboratedType 0x55887c1bb0e0 'struct EFI_ACPI_32_BIT_FIXED_MEMORY_RANGE_DESCRIPTOR' sugar
| | `-RecordType 0x55887c1baee0 'EFI_ACPI_32_BIT_FIXED_MEMORY_RANGE_DESCRIPTOR'
| |   `-Record 0x55887c1bae60 ''
| `-FullComment 0x55887c40fe60 <line:221:4, col:46>
|   `-ParagraphComment 0x55887c40fe30 <col:4, col:46>
|     `-TextComment 0x55887c40fe00 <col:4, col:46> Text=" Fixed 32-Bit Fixed Memory Range Descriptor"
|-RecordDecl 0x55887c1bb1d0 <line:233:16, line:243:1> line:233:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1bb270 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c40ff30 <line:231:4, col:34>
| | `-ParagraphComment 0x55887c40ff00 <col:4, col:34>
| |   `-TextComment 0x55887c40fed0 <col:4, col:34> Text=" QWORD Address Space Descriptor"
| |-FieldDecl 0x55887c1bb2d8 <line:234:3, col:33> col:33 Header 'ACPI_LARGE_RESOURCE_HEADER':'ACPI_LARGE_RESOURCE_HEADER'
| |-FieldDecl 0x55887c1bb338 <line:235:3, col:33> col:33 ResType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bb398 <line:236:3, col:33> col:33 GenFlag 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bb3f8 <line:237:3, col:33> col:33 SpecificFlag 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bb458 <line:238:3, col:33> col:33 AddrSpaceGranularity 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1bb4b8 <line:239:3, col:33> col:33 AddrRangeMin 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1bb518 <line:240:3, col:33> col:33 AddrRangeMax 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1bb578 <line:241:3, col:33> col:33 AddrTranslationOffset 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c1bb5d8 <line:242:3, col:33> col:33 AddrLen 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1bb688 <line:233:1, line:243:3> col:3 EFI_ACPI_QWORD_ADDRESS_SPACE_DESCRIPTOR 'struct EFI_ACPI_QWORD_ADDRESS_SPACE_DESCRIPTOR':'EFI_ACPI_QWORD_ADDRESS_SPACE_DESCRIPTOR'
| |-ElaboratedType 0x55887c1bb630 'struct EFI_ACPI_QWORD_ADDRESS_SPACE_DESCRIPTOR' sugar
| | `-RecordType 0x55887c1bb250 'EFI_ACPI_QWORD_ADDRESS_SPACE_DESCRIPTOR'
| |   `-Record 0x55887c1bb1d0 ''
| `-FullComment 0x55887c410000 <line:231:4, col:34>
|   `-ParagraphComment 0x55887c40ffd0 <col:4, col:34>
|     `-TextComment 0x55887c40ffa0 <col:4, col:34> Text=" QWORD Address Space Descriptor"
|-RecordDecl 0x55887c1bb720 <line:248:16, line:258:1> line:248:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1bb7c0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4100d0 <line:246:4, col:34>
| | `-ParagraphComment 0x55887c4100a0 <col:4, col:34>
| |   `-TextComment 0x55887c410070 <col:4, col:34> Text=" DWORD Address Space Descriptor"
| |-FieldDecl 0x55887c1bba40 <line:249:3, col:33> col:33 Header 'ACPI_LARGE_RESOURCE_HEADER':'ACPI_LARGE_RESOURCE_HEADER'
| |-FieldDecl 0x55887c1bbaa0 <line:250:3, col:33> col:33 ResType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bbb00 <line:251:3, col:33> col:33 GenFlag 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bbb60 <line:252:3, col:33> col:33 SpecificFlag 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bbbc0 <line:253:3, col:33> col:33 AddrSpaceGranularity 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1bbc20 <line:254:3, col:33> col:33 AddrRangeMin 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1bbc80 <line:255:3, col:33> col:33 AddrRangeMax 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1bbce0 <line:256:3, col:33> col:33 AddrTranslationOffset 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1bbd40 <line:257:3, col:33> col:33 AddrLen 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1bbde8 <line:248:1, line:258:3> col:3 EFI_ACPI_DWORD_ADDRESS_SPACE_DESCRIPTOR 'struct EFI_ACPI_DWORD_ADDRESS_SPACE_DESCRIPTOR':'EFI_ACPI_DWORD_ADDRESS_SPACE_DESCRIPTOR'
| |-ElaboratedType 0x55887c1bbd90 'struct EFI_ACPI_DWORD_ADDRESS_SPACE_DESCRIPTOR' sugar
| | `-RecordType 0x55887c1bb7a0 'EFI_ACPI_DWORD_ADDRESS_SPACE_DESCRIPTOR'
| |   `-Record 0x55887c1bb720 ''
| `-FullComment 0x55887c4111c0 <line:246:4, col:34>
|   `-ParagraphComment 0x55887c410170 <col:4, col:34>
|     `-TextComment 0x55887c410140 <col:4, col:34> Text=" DWORD Address Space Descriptor"
|-RecordDecl 0x55887c1bbe80 <line:263:16, line:273:1> line:263:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1bbf20 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c411290 <line:261:4, col:33>
| | `-ParagraphComment 0x55887c411260 <col:4, col:33>
| |   `-TextComment 0x55887c411230 <col:4, col:33> Text=" WORD Address Space Descriptor"
| |-FieldDecl 0x55887c1bbf88 <line:264:3, col:33> col:33 Header 'ACPI_LARGE_RESOURCE_HEADER':'ACPI_LARGE_RESOURCE_HEADER'
| |-FieldDecl 0x55887c1bbfe8 <line:265:3, col:33> col:33 ResType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bc048 <line:266:3, col:33> col:33 GenFlag 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bc0a8 <line:267:3, col:33> col:33 SpecificFlag 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bc108 <line:268:3, col:33> col:33 AddrSpaceGranularity 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1bc168 <line:269:3, col:33> col:33 AddrRangeMin 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1bc1c8 <line:270:3, col:33> col:33 AddrRangeMax 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1bc228 <line:271:3, col:33> col:33 AddrTranslationOffset 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c1bc288 <line:272:3, col:33> col:33 AddrLen 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c1bc338 <line:263:1, line:273:3> col:3 EFI_ACPI_WORD_ADDRESS_SPACE_DESCRIPTOR 'struct EFI_ACPI_WORD_ADDRESS_SPACE_DESCRIPTOR':'EFI_ACPI_WORD_ADDRESS_SPACE_DESCRIPTOR'
| |-ElaboratedType 0x55887c1bc2e0 'struct EFI_ACPI_WORD_ADDRESS_SPACE_DESCRIPTOR' sugar
| | `-RecordType 0x55887c1bbf00 'EFI_ACPI_WORD_ADDRESS_SPACE_DESCRIPTOR'
| |   `-Record 0x55887c1bbe80 ''
| `-FullComment 0x55887c411360 <line:261:4, col:33>
|   `-ParagraphComment 0x55887c411330 <col:4, col:33>
|     `-TextComment 0x55887c411300 <col:4, col:33> Text=" WORD Address Space Descriptor"
|-RecordDecl 0x55887c1bc3d0 <line:278:16, line:283:1> line:278:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1bc470 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c411430 <line:276:4, col:33>
| | `-ParagraphComment 0x55887c411400 <col:4, col:33>
| |   `-TextComment 0x55887c4113d0 <col:4, col:33> Text=" Extended Interrupt Descriptor"
| |-FieldDecl 0x55887c1bc4d8 <line:279:3, col:33> col:33 Header 'ACPI_LARGE_RESOURCE_HEADER':'ACPI_LARGE_RESOURCE_HEADER'
| |-FieldDecl 0x55887c1bc538 <line:280:3, col:33> col:33 InterruptVectorFlags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bc598 <line:281:3, col:33> col:33 InterruptTableLength 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1bc6c8 <line:282:3, col:50> col:33 InterruptNumber 'UINT32[1]'
|-TypedefDecl 0x55887c1bc778 <line:278:1, line:283:3> col:3 EFI_ACPI_EXTENDED_INTERRUPT_DESCRIPTOR 'struct EFI_ACPI_EXTENDED_INTERRUPT_DESCRIPTOR':'EFI_ACPI_EXTENDED_INTERRUPT_DESCRIPTOR'
| |-ElaboratedType 0x55887c1bc720 'struct EFI_ACPI_EXTENDED_INTERRUPT_DESCRIPTOR' sugar
| | `-RecordType 0x55887c1bc450 'EFI_ACPI_EXTENDED_INTERRUPT_DESCRIPTOR'
| |   `-Record 0x55887c1bc3d0 ''
| `-FullComment 0x55887c411500 <line:276:4, col:33>
|   `-ParagraphComment 0x55887c4114d0 <col:4, col:33>
|     `-TextComment 0x55887c4114a0 <col:4, col:33> Text=" Extended Interrupt Descriptor"
|-RecordDecl 0x55887c1bc818 <line:290:9, line:293:1> line:290:9 struct definition
| |-FullComment 0x55887c4115d0 <line:288:4, col:51>
| | `-ParagraphComment 0x55887c4115a0 <col:4, col:51>
| |   `-TextComment 0x55887c411570 <col:4, col:51> Text=" The End tag identifies an end of resource data."
| |-FieldDecl 0x55887c1bc8d0 <line:291:3, col:12> col:12 Desc 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1bc930 <line:292:3, col:12> col:12 Checksum 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c1bc9d8 <line:290:1, line:293:3> col:3 EFI_ACPI_END_TAG_DESCRIPTOR 'struct EFI_ACPI_END_TAG_DESCRIPTOR':'EFI_ACPI_END_TAG_DESCRIPTOR'
| |-ElaboratedType 0x55887c1bc980 'struct EFI_ACPI_END_TAG_DESCRIPTOR' sugar
| | `-RecordType 0x55887c1bc8a0 'EFI_ACPI_END_TAG_DESCRIPTOR'
| |   `-Record 0x55887c1bc818 ''
| `-FullComment 0x55887c4116a0 <line:288:4, col:51>
|   `-ParagraphComment 0x55887c411670 <col:4, col:51>
|     `-TextComment 0x55887c411640 <col:4, col:51> Text=" The End tag identifies an end of resource data."
|-RecordDecl 0x55887c1bca98 <line:401:9, line:407:1> line:401:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1bcb40 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c411770 <line:399:4, col:46>
| | `-ParagraphComment 0x55887c411740 <col:4, col:46>
| |   `-TextComment 0x55887c411710 <col:4, col:46> Text=" Root System Description Pointer Structure."
| |-FieldDecl 0x55887c1bcba8 <line:402:3, col:13> col:13 Signature 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1bcc08 <line:403:3, col:13> col:13 Checksum 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bccb8 <line:404:3, col:20> col:13 OemId 'UINT8[6]'
| |-FieldDecl 0x55887c1bcd18 <line:405:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1bcd78 <line:406:3, col:13> col:13 RsdtAddress 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1bce28 <line:401:1, line:407:3> col:3 EFI_ACPI_1_0_ROOT_SYSTEM_DESCRIPTION_POINTER 'struct EFI_ACPI_1_0_ROOT_SYSTEM_DESCRIPTION_POINTER':'EFI_ACPI_1_0_ROOT_SYSTEM_DESCRIPTION_POINTER'
| |-ElaboratedType 0x55887c1bcdd0 'struct EFI_ACPI_1_0_ROOT_SYSTEM_DESCRIPTION_POINTER' sugar
| | `-RecordType 0x55887c1bcb20 'EFI_ACPI_1_0_ROOT_SYSTEM_DESCRIPTION_POINTER'
| |   `-Record 0x55887c1bca98 ''
| `-FullComment 0x55887c411840 <line:399:4, col:46>
|   `-ParagraphComment 0x55887c411810 <col:4, col:46>
|     `-TextComment 0x55887c4117e0 <col:4, col:46> Text=" Root System Description Pointer Structure."
|-RecordDecl 0x55887c1bcef0 <line:423:9, line:464:1> line:423:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1bcf90 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c411910 <line:421:4, col:50>
| | `-ParagraphComment 0x55887c4118e0 <col:4, col:50>
| |   `-TextComment 0x55887c4118b0 <col:4, col:50> Text=" Fixed ACPI Description Table Structure (FADT)."
| |-FieldDecl 0x55887c1bd020 <line:424:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1bd080 <line:425:3, col:34> col:34 FirmwareCtrl 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1bd0e0 <line:426:3, col:34> col:34 Dsdt 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1bd140 <line:427:3, col:34> col:34 IntModel 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bd1a0 <line:428:3, col:34> col:34 Reserved1 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bd200 <line:429:3, col:34> col:34 SciInt 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1bd260 <line:430:3, col:34> col:34 SmiCmd 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1bd2c0 <line:431:3, col:34> col:34 AcpiEnable 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bd320 <line:432:3, col:34> col:34 AcpiDisable 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bd380 <line:433:3, col:34> col:34 S4BiosReq 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bd3e0 <line:434:3, col:34> col:34 Reserved2 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bd440 <line:435:3, col:34> col:34 Pm1aEvtBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1bd4a0 <line:436:3, col:34> col:34 Pm1bEvtBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1bd500 <line:437:3, col:34> col:34 Pm1aCntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1bd560 <line:438:3, col:34> col:34 Pm1bCntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1bd5c0 <line:439:3, col:34> col:34 Pm2CntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1bd620 <line:440:3, col:34> col:34 PmTmrBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1bd680 <line:441:3, col:34> col:34 Gpe0Blk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1bd6e0 <line:442:3, col:34> col:34 Gpe1Blk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1bd740 <line:443:3, col:34> col:34 Pm1EvtLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bd7a0 <line:444:3, col:34> col:34 Pm1CntLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bd800 <line:445:3, col:34> col:34 Pm2CntLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bd860 <line:446:3, col:34> col:34 PmTmLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bd8c0 <line:447:3, col:34> col:34 Gpe0BlkLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bd920 <line:448:3, col:34> col:34 Gpe1BlkLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bd980 <line:449:3, col:34> col:34 Gpe1Base 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1bd9e0 <line:450:3, col:34> col:34 Reserved3 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c1410 <line:451:3, col:34> col:34 PLvl2Lat 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1c1470 <line:452:3, col:34> col:34 PLvl3Lat 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1c14d0 <line:453:3, col:34> col:34 FlushSize 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1c1530 <line:454:3, col:34> col:34 FlushStride 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1c1590 <line:455:3, col:34> col:34 DutyOffset 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c15f0 <line:456:3, col:34> col:34 DutyWidth 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c1650 <line:457:3, col:34> col:34 DayAlrm 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c16b0 <line:458:3, col:34> col:34 MonAlrm 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c1710 <line:459:3, col:34> col:34 Century 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c1770 <line:460:3, col:34> col:34 Reserved4 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c17d0 <line:461:3, col:34> col:34 Reserved5 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c1830 <line:462:3, col:34> col:34 Reserved6 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1c1890 <line:463:3, col:34> col:34 Flags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1c19d8 <line:423:1, line:464:3> col:3 EFI_ACPI_1_0_FIXED_ACPI_DESCRIPTION_TABLE 'struct EFI_ACPI_1_0_FIXED_ACPI_DESCRIPTION_TABLE':'EFI_ACPI_1_0_FIXED_ACPI_DESCRIPTION_TABLE'
| |-ElaboratedType 0x55887c1c1980 'struct EFI_ACPI_1_0_FIXED_ACPI_DESCRIPTION_TABLE' sugar
| | `-RecordType 0x55887c1bcf70 'EFI_ACPI_1_0_FIXED_ACPI_DESCRIPTION_TABLE'
| |   `-Record 0x55887c1bcef0 ''
| `-FullComment 0x55887c4119e0 <line:421:4, col:50>
|   `-ParagraphComment 0x55887c4119b0 <col:4, col:50>
|     `-TextComment 0x55887c411980 <col:4, col:50> Text=" Fixed ACPI Description Table Structure (FADT)."
|-RecordDecl 0x55887c1c1aa0 <line:492:9, line:500:1> line:492:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1c1b40 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c411ab0 <line:490:4, col:36>
| | `-ParagraphComment 0x55887c411a80 <col:4, col:36>
| |   `-TextComment 0x55887c411a50 <col:4, col:36> Text=" Firmware ACPI Control Structure."
| |-FieldDecl 0x55887c1c1ba8 <line:493:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c1c08 <line:494:3, col:13> col:13 Length 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c1c68 <line:495:3, col:13> col:13 HardwareSignature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c1cc8 <line:496:3, col:13> col:13 FirmwareWakingVector 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c1d28 <line:497:3, col:13> col:13 GlobalLock 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c1d88 <line:498:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1c1eb8 <line:499:3, col:24> col:13 Reserved 'UINT8[40]'
|-TypedefDecl 0x55887c1c1f68 <line:492:1, line:500:3> col:3 EFI_ACPI_1_0_FIRMWARE_ACPI_CONTROL_STRUCTURE 'struct EFI_ACPI_1_0_FIRMWARE_ACPI_CONTROL_STRUCTURE':'EFI_ACPI_1_0_FIRMWARE_ACPI_CONTROL_STRUCTURE'
| |-ElaboratedType 0x55887c1c1f10 'struct EFI_ACPI_1_0_FIRMWARE_ACPI_CONTROL_STRUCTURE' sugar
| | `-RecordType 0x55887c1c1b20 'EFI_ACPI_1_0_FIRMWARE_ACPI_CONTROL_STRUCTURE'
| |   `-Record 0x55887c1c1aa0 ''
| `-FullComment 0x55887c411b80 <line:490:4, col:36>
|   `-ParagraphComment 0x55887c411b50 <col:4, col:36>
|     `-TextComment 0x55887c411b20 <col:4, col:36> Text=" Firmware ACPI Control Structure."
|-RecordDecl 0x55887c1c2030 <line:512:9, line:516:1> line:512:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1c20d0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c411c70 <line:509:4, line:510:50>
| | `-ParagraphComment 0x55887c411c40 <line:509:4, line:510:50>
| |   |-TextComment 0x55887c411bf0 <line:509:4, col:77> Text=" Multiple APIC Description Table header definition.  The rest of the table"
| |   `-TextComment 0x55887c411c10 <line:510:4, col:50> Text=" must be defined in a platform-specific manner."
| |-FieldDecl 0x55887c1c2138 <line:513:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1c2198 <line:514:3, col:34> col:34 LocalApicAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1c21f8 <line:515:3, col:34> col:34 Flags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1c22a8 <line:512:1, line:516:3> col:3 EFI_ACPI_1_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER 'struct EFI_ACPI_1_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER':'EFI_ACPI_1_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER'
| |-ElaboratedType 0x55887c1c2250 'struct EFI_ACPI_1_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c1c20b0 'EFI_ACPI_1_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER'
| |   `-Record 0x55887c1c2030 ''
| `-FullComment 0x55887c411d60 <line:509:4, line:510:50>
|   `-ParagraphComment 0x55887c411d30 <line:509:4, line:510:50>
|     |-TextComment 0x55887c411ce0 <line:509:4, col:77> Text=" Multiple APIC Description Table header definition.  The rest of the table"
|     `-TextComment 0x55887c411d00 <line:510:4, col:50> Text=" must be defined in a platform-specific manner."
|-RecordDecl 0x55887c1c23a0 <line:547:9, line:553:1> line:547:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1c2440 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c411e30 <line:545:4, col:46>
| | `-ParagraphComment 0x55887c411e00 <col:4, col:46>
| |   `-TextComment 0x55887c411dd0 <col:4, col:46> Text=" Processor Local APIC Structure Definition."
| |-FieldDecl 0x55887c1c24a8 <line:548:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c2508 <line:549:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c2568 <line:550:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c25c8 <line:551:3, col:13> col:13 ApicId 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1c2628 <line:552:3, col:13> col:13 Flags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1c26d8 <line:547:1, line:553:3> col:3 EFI_ACPI_1_0_PROCESSOR_LOCAL_APIC_STRUCTURE 'struct EFI_ACPI_1_0_PROCESSOR_LOCAL_APIC_STRUCTURE':'EFI_ACPI_1_0_PROCESSOR_LOCAL_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c1c2680 'struct EFI_ACPI_1_0_PROCESSOR_LOCAL_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1c2420 'EFI_ACPI_1_0_PROCESSOR_LOCAL_APIC_STRUCTURE'
| |   `-Record 0x55887c1c23a0 ''
| `-FullComment 0x55887c411f00 <line:545:4, col:46>
|   `-ParagraphComment 0x55887c411ed0 <col:4, col:46>
|     `-TextComment 0x55887c411ea0 <col:4, col:46> Text=" Processor Local APIC Structure Definition."
|-RecordDecl 0x55887c1c27a0 <line:563:9, line:570:1> line:563:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1c2840 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c411fd0 <line:561:4, col:22>
| | `-ParagraphComment 0x55887c411fa0 <col:4, col:22>
| |   `-TextComment 0x55887c411f70 <col:4, col:22> Text=" IO APIC Structure."
| |-FieldDecl 0x55887c1c28a8 <line:564:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c2908 <line:565:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c2968 <line:566:3, col:13> col:13 IoApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c29c8 <line:567:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c2a28 <line:568:3, col:13> col:13 IoApicAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1c2a88 <line:569:3, col:13> col:13 SystemVectorBase 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1c2b38 <line:563:1, line:570:3> col:3 EFI_ACPI_1_0_IO_APIC_STRUCTURE 'struct EFI_ACPI_1_0_IO_APIC_STRUCTURE':'EFI_ACPI_1_0_IO_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c1c2ae0 'struct EFI_ACPI_1_0_IO_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1c2820 'EFI_ACPI_1_0_IO_APIC_STRUCTURE'
| |   `-Record 0x55887c1c27a0 ''
| `-FullComment 0x55887c4120a0 <line:561:4, col:22>
|   `-ParagraphComment 0x55887c412070 <col:4, col:22>
|     `-TextComment 0x55887c412040 <col:4, col:22> Text=" IO APIC Structure."
|-RecordDecl 0x55887c1c2bd0 <line:575:9, line:582:1> line:575:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1c2c70 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c412170 <line:573:4, col:40>
| | `-ParagraphComment 0x55887c412140 <col:4, col:40>
| |   `-TextComment 0x55887c412110 <col:4, col:40> Text=" Interrupt Source Override Structure."
| |-FieldDecl 0x55887c1c2cd8 <line:576:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c2d38 <line:577:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c2d98 <line:578:3, col:13> col:13 Bus 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c2df8 <line:579:3, col:13> col:13 Source 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c2e58 <line:580:3, col:13> col:13 GlobalSystemInterruptVector 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1c2eb8 <line:581:3, col:13> col:13 Flags 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c1c2f68 <line:575:1, line:582:3> col:3 EFI_ACPI_1_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE 'struct EFI_ACPI_1_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE':'EFI_ACPI_1_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE'
| |-ElaboratedType 0x55887c1c2f10 'struct EFI_ACPI_1_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE' sugar
| | `-RecordType 0x55887c1c2c50 'EFI_ACPI_1_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE'
| |   `-Record 0x55887c1c2bd0 ''
| `-FullComment 0x55887c412240 <line:573:4, col:40>
|   `-ParagraphComment 0x55887c412210 <col:4, col:40>
|     `-TextComment 0x55887c4121e0 <col:4, col:40> Text=" Interrupt Source Override Structure."
|-RecordDecl 0x55887c1c3000 <line:587:9, line:592:1> line:587:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1c30a0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c412310 <line:585:4, col:44>
| | `-ParagraphComment 0x55887c4122e0 <col:4, col:44>
| |   `-TextComment 0x55887c4122b0 <col:4, col:44> Text=" Non-Maskable Interrupt Source Structure."
| |-FieldDecl 0x55887c1c3108 <line:588:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c3168 <line:589:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c31c8 <line:590:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c1c3228 <line:591:3, col:13> col:13 GlobalSystemInterruptVector 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1c32d8 <line:587:1, line:592:3> col:3 EFI_ACPI_1_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE 'struct EFI_ACPI_1_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE':'EFI_ACPI_1_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE'
| |-ElaboratedType 0x55887c1c3280 'struct EFI_ACPI_1_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE' sugar
| | `-RecordType 0x55887c1c3080 'EFI_ACPI_1_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE'
| |   `-Record 0x55887c1c3000 ''
| `-FullComment 0x55887c4123e0 <line:585:4, col:44>
|   `-ParagraphComment 0x55887c4123b0 <col:4, col:44>
|     `-TextComment 0x55887c412380 <col:4, col:44> Text=" Non-Maskable Interrupt Source Structure."
|-RecordDecl 0x55887c1c3370 <line:597:9, line:603:1> line:597:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1c5750 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4124b0 <line:595:4, col:29>
| | `-ParagraphComment 0x55887c412480 <col:4, col:29>
| |   `-TextComment 0x55887c412450 <col:4, col:29> Text=" Local APIC NMI Structure."
| |-FieldDecl 0x55887c1c57b8 <line:598:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c5818 <line:599:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c5878 <line:600:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c58d8 <line:601:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c1c5938 <line:602:3, col:13> col:13 LocalApicInti 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c1c59e8 <line:597:1, line:603:3> col:3 EFI_ACPI_1_0_LOCAL_APIC_NMI_STRUCTURE 'struct EFI_ACPI_1_0_LOCAL_APIC_NMI_STRUCTURE':'EFI_ACPI_1_0_LOCAL_APIC_NMI_STRUCTURE'
| |-ElaboratedType 0x55887c1c5990 'struct EFI_ACPI_1_0_LOCAL_APIC_NMI_STRUCTURE' sugar
| | `-RecordType 0x55887c1c5730 'EFI_ACPI_1_0_LOCAL_APIC_NMI_STRUCTURE'
| |   `-Record 0x55887c1c3370 ''
| `-FullComment 0x55887c412580 <line:595:4, col:29>
|   `-ParagraphComment 0x55887c412550 <col:4, col:29>
|     `-TextComment 0x55887c412520 <col:4, col:29> Text=" Local APIC NMI Structure."
|-RecordDecl 0x55887c1c5a80 <line:608:9, line:613:1> line:608:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1c5b20 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c412650 <line:606:4, col:42>
| | `-ParagraphComment 0x55887c412620 <col:4, col:42>
| |   `-TextComment 0x55887c4125f0 <col:4, col:42> Text=" Smart Battery Description Table (SBST)"
| |-FieldDecl 0x55887c1c5b88 <line:609:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1c5be8 <line:610:3, col:34> col:34 WarningEnergyLevel 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c5c48 <line:611:3, col:34> col:34 LowEnergyLevel 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1c5ca8 <line:612:3, col:34> col:34 CriticalEnergyLevel 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1c5d58 <line:608:1, line:613:3> col:3 EFI_ACPI_1_0_SMART_BATTERY_DESCRIPTION_TABLE 'struct EFI_ACPI_1_0_SMART_BATTERY_DESCRIPTION_TABLE':'EFI_ACPI_1_0_SMART_BATTERY_DESCRIPTION_TABLE'
| |-ElaboratedType 0x55887c1c5d00 'struct EFI_ACPI_1_0_SMART_BATTERY_DESCRIPTION_TABLE' sugar
| | `-RecordType 0x55887c1c5b00 'EFI_ACPI_1_0_SMART_BATTERY_DESCRIPTION_TABLE'
| |   `-Record 0x55887c1c5a80 ''
| `-FullComment 0x55887c412720 <line:606:4, col:42>
|   `-ParagraphComment 0x55887c4126f0 <col:4, col:42>
|     `-TextComment 0x55887c4126c0 <col:4, col:42> Text=" Smart Battery Description Table (SBST)"
|-RecordDecl 0x55887c1c5fb8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/Acpi20.h:28:16, line:35:1> line:28:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1c6060 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4127f0 <line:26:4, col:31>
| | `-ParagraphComment 0x55887c4127c0 <col:4, col:31>
| |   `-TextComment 0x55887c412790 <col:4, col:31> Text=" Generic Register Descriptor"
| |-FieldDecl 0x55887c1c60c8 <line:29:3, col:33> col:33 Header 'ACPI_LARGE_RESOURCE_HEADER':'ACPI_LARGE_RESOURCE_HEADER'
| |-FieldDecl 0x55887c1c6128 <line:30:3, col:33> col:33 AddressSpaceId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c6188 <line:31:3, col:33> col:33 RegisterBitWidth 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c61e8 <line:32:3, col:33> col:33 RegisterBitOffset 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c6248 <line:33:3, col:33> col:33 AddressSize 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1c62a8 <line:34:3, col:33> col:33 RegisterAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1c6358 <line:28:1, line:35:3> col:3 EFI_ACPI_GENERIC_REGISTER_DESCRIPTOR 'struct EFI_ACPI_GENERIC_REGISTER_DESCRIPTOR':'EFI_ACPI_GENERIC_REGISTER_DESCRIPTOR'
| |-ElaboratedType 0x55887c1c6300 'struct EFI_ACPI_GENERIC_REGISTER_DESCRIPTOR' sugar
| | `-RecordType 0x55887c1c6040 'EFI_ACPI_GENERIC_REGISTER_DESCRIPTOR'
| |   `-Record 0x55887c1c5fb8 ''
| `-FullComment 0x55887c4128c0 <line:26:4, col:31>
|   `-ParagraphComment 0x55887c412890 <col:4, col:31>
|     `-TextComment 0x55887c412860 <col:4, col:31> Text=" Generic Register Descriptor"
|-RecordDecl 0x55887c1c6418 <line:47:9, line:53:1> line:47:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1c64c0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c412990 <line:45:4, col:45>
| | `-ParagraphComment 0x55887c412960 <col:4, col:45>
| |   `-TextComment 0x55887c412930 <col:4, col:45> Text=" ACPI 2.0 Generic Address Space definition"
| |-FieldDecl 0x55887c1c6528 <line:48:3, col:13> col:13 AddressSpaceId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c6588 <line:49:3, col:13> col:13 RegisterBitWidth 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c65e8 <line:50:3, col:13> col:13 RegisterBitOffset 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c6648 <line:51:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1c66a8 <line:52:3, col:13> col:13 Address 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1c6758 <line:47:1, line:53:3> col:3 referenced EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE 'struct EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE'
| |-ElaboratedType 0x55887c1c6700 'struct EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE' sugar
| | `-RecordType 0x55887c1c64a0 'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE'
| |   `-Record 0x55887c1c6418 ''
| `-FullComment 0x55887c412a60 <line:45:4, col:45>
|   `-ParagraphComment 0x55887c412a30 <col:4, col:45>
|     `-TextComment 0x55887c412a00 <col:4, col:45> Text=" ACPI 2.0 Generic Address Space definition"
|-RecordDecl 0x55887c1c67f0 <line:72:9, line:82:1> line:72:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1c6890 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c412b30 <line:70:4, col:45>
| | `-ParagraphComment 0x55887c412b00 <col:4, col:45>
| |   `-TextComment 0x55887c412ad0 <col:4, col:45> Text=" Root System Description Pointer Structure"
| |-FieldDecl 0x55887c1c68f8 <line:73:3, col:13> col:13 Signature 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1c6958 <line:74:3, col:13> col:13 Checksum 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c6a08 <line:75:3, col:20> col:13 OemId 'UINT8[6]'
| |-FieldDecl 0x55887c1c6a68 <line:76:3, col:13> col:13 Revision 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c6ac8 <line:77:3, col:13> col:13 RsdtAddress 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c6b28 <line:78:3, col:13> col:13 Length 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c6b88 <line:79:3, col:13> col:13 XsdtAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1c6be8 <line:80:3, col:13> col:13 ExtendedChecksum 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1c6c98 <line:81:3, col:23> col:13 Reserved 'UINT8[3]'
|-TypedefDecl 0x55887c1c6d48 <line:72:1, line:82:3> col:3 EFI_ACPI_2_0_ROOT_SYSTEM_DESCRIPTION_POINTER 'struct EFI_ACPI_2_0_ROOT_SYSTEM_DESCRIPTION_POINTER':'EFI_ACPI_2_0_ROOT_SYSTEM_DESCRIPTION_POINTER'
| |-ElaboratedType 0x55887c1c6cf0 'struct EFI_ACPI_2_0_ROOT_SYSTEM_DESCRIPTION_POINTER' sugar
| | `-RecordType 0x55887c1c6870 'EFI_ACPI_2_0_ROOT_SYSTEM_DESCRIPTION_POINTER'
| |   `-Record 0x55887c1c67f0 ''
| `-FullComment 0x55887c412c00 <line:70:4, col:45>
|   `-ParagraphComment 0x55887c412bd0 <col:4, col:45>
|     `-TextComment 0x55887c412ba0 <col:4, col:45> Text=" Root System Description Pointer Structure"
|-RecordDecl 0x55887c1c6e10 <line:93:9, line:96:1> line:93:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1c6eb0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c412cf0 <line:90:4, line:91:35>
| | `-ParagraphComment 0x55887c412cc0 <line:90:4, line:91:35>
| |   |-TextComment 0x55887c412c70 <line:90:4, col:75> Text=" Common table header, this prefaces all ACPI tables, including FACS, but"
| |   `-TextComment 0x55887c412c90 <line:91:4, col:35> Text=" excluding the RSD PTR structure"
| |-FieldDecl 0x55887c1c6f18 <line:94:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1c6f78 <line:95:3, col:13> col:13 Length 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1c7028 <line:93:1, line:96:3> col:3 EFI_ACPI_2_0_COMMON_HEADER 'struct EFI_ACPI_2_0_COMMON_HEADER':'EFI_ACPI_2_0_COMMON_HEADER'
| |-ElaboratedType 0x55887c1c6fd0 'struct EFI_ACPI_2_0_COMMON_HEADER' sugar
| | `-RecordType 0x55887c1c6e90 'EFI_ACPI_2_0_COMMON_HEADER'
| |   `-Record 0x55887c1c6e10 ''
| `-FullComment 0x55887c412de0 <line:90:4, line:91:35>
|   `-ParagraphComment 0x55887c412db0 <line:90:4, line:91:35>
|     |-TextComment 0x55887c412d60 <line:90:4, col:75> Text=" Common table header, this prefaces all ACPI tables, including FACS, but"
|     `-TextComment 0x55887c412d80 <line:91:4, col:35> Text=" excluding the RSD PTR structure"
|-RecordDecl 0x55887c1c7120 <line:123:9, line:176:1> line:123:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1c71c0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c412eb0 <line:121:4, col:49>
| | `-ParagraphComment 0x55887c412e80 <col:4, col:49>
| |   `-TextComment 0x55887c412e50 <col:4, col:49> Text=" Fixed ACPI Description Table Structure (FADT)"
| |-FieldDecl 0x55887c1c7228 <line:124:3, col:45> col:45 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1c7288 <line:125:3, col:45> col:45 FirmwareCtrl 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c72e8 <line:126:3, col:45> col:45 Dsdt 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c7348 <line:127:3, col:45> col:45 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c73a8 <line:128:3, col:45> col:45 PreferredPmProfile 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c7408 <line:129:3, col:45> col:45 SciInt 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1c7468 <line:130:3, col:45> col:45 SmiCmd 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c74c8 <line:131:3, col:45> col:45 AcpiEnable 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c7528 <line:132:3, col:45> col:45 AcpiDisable 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c7588 <line:133:3, col:45> col:45 S4BiosReq 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c75e8 <line:134:3, col:45> col:45 PstateCnt 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c7648 <line:135:3, col:45> col:45 Pm1aEvtBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c76a8 <line:136:3, col:45> col:45 Pm1bEvtBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c9be0 <line:137:3, col:45> col:45 Pm1aCntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c9c40 <line:138:3, col:45> col:45 Pm1bCntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c9ca0 <line:139:3, col:45> col:45 Pm2CntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c9d00 <line:140:3, col:45> col:45 PmTmrBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c9d60 <line:141:3, col:45> col:45 Gpe0Blk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c9dc0 <line:142:3, col:45> col:45 Gpe1Blk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1c9e20 <line:143:3, col:45> col:45 Pm1EvtLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c9e80 <line:144:3, col:45> col:45 Pm1CntLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c9ee0 <line:145:3, col:45> col:45 Pm2CntLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c9f40 <line:146:3, col:45> col:45 PmTmrLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1c9fa0 <line:147:3, col:45> col:45 Gpe0BlkLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ca000 <line:148:3, col:45> col:45 Gpe1BlkLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ca060 <line:149:3, col:45> col:45 Gpe1Base 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ca0c0 <line:150:3, col:45> col:45 CstCnt 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ca120 <line:151:3, col:45> col:45 PLvl2Lat 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1ca180 <line:152:3, col:45> col:45 PLvl3Lat 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1ca1e0 <line:153:3, col:45> col:45 FlushSize 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1ca240 <line:154:3, col:45> col:45 FlushStride 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1ca2a0 <line:155:3, col:45> col:45 DutyOffset 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ca300 <line:156:3, col:45> col:45 DutyWidth 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ca360 <line:157:3, col:45> col:45 DayAlrm 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ca3c0 <line:158:3, col:45> col:45 MonAlrm 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ca420 <line:159:3, col:45> col:45 Century 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ca480 <line:160:3, col:45> col:45 IaPcBootArch 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1ca4e0 <line:161:3, col:45> col:45 Reserved1 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ca540 <line:162:3, col:45> col:45 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1ca5c0 <line:163:3, col:45> col:45 ResetReg 'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1ca620 <line:164:3, col:45> col:45 ResetValue 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ca6d0 <line:165:3, col:56> col:45 Reserved2 'UINT8[3]'
| |-FieldDecl 0x55887c1ca730 <line:166:3, col:45> col:45 XFirmwareCtrl 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1ca790 <line:167:3, col:45> col:45 XDsdt 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1ca7f0 <line:168:3, col:45> col:45 XPm1aEvtBlk 'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1ca850 <line:169:3, col:45> col:45 XPm1bEvtBlk 'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1ca8b0 <line:170:3, col:45> col:45 XPm1aCntBlk 'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1ca910 <line:171:3, col:45> col:45 XPm1bCntBlk 'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1ca970 <line:172:3, col:45> col:45 XPm2CntBlk 'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1ca9d0 <line:173:3, col:45> col:45 XPmTmrBlk 'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1caa30 <line:174:3, col:45> col:45 XGpe0Blk 'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE'
| `-FieldDecl 0x55887c1caa90 <line:175:3, col:45> col:45 XGpe1Blk 'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE'
|-TypedefDecl 0x55887c1cab38 <line:123:1, line:176:3> col:3 EFI_ACPI_2_0_FIXED_ACPI_DESCRIPTION_TABLE 'struct EFI_ACPI_2_0_FIXED_ACPI_DESCRIPTION_TABLE':'EFI_ACPI_2_0_FIXED_ACPI_DESCRIPTION_TABLE'
| |-ElaboratedType 0x55887c1caae0 'struct EFI_ACPI_2_0_FIXED_ACPI_DESCRIPTION_TABLE' sugar
| | `-RecordType 0x55887c1c71a0 'EFI_ACPI_2_0_FIXED_ACPI_DESCRIPTION_TABLE'
| |   `-Record 0x55887c1c7120 ''
| `-FullComment 0x55887c412f80 <line:121:4, col:49>
|   `-ParagraphComment 0x55887c412f50 <col:4, col:49>
|     `-TextComment 0x55887c412f20 <col:4, col:49> Text=" Fixed ACPI Description Table Structure (FADT)"
|-RecordDecl 0x55887c1cac00 <line:223:9, line:233:1> line:223:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1caca0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c413050 <line:221:4, col:35>
| | `-ParagraphComment 0x55887c413020 <col:4, col:35>
| |   `-TextComment 0x55887c412ff0 <col:4, col:35> Text=" Firmware ACPI Control Structure"
| |-FieldDecl 0x55887c1cad08 <line:224:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1cad68 <line:225:3, col:13> col:13 Length 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1cadc8 <line:226:3, col:13> col:13 HardwareSignature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1cae28 <line:227:3, col:13> col:13 FirmwareWakingVector 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1cae88 <line:228:3, col:13> col:13 GlobalLock 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1caee8 <line:229:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1caf48 <line:230:3, col:13> col:13 XFirmwareWakingVector 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1cafa8 <line:231:3, col:13> col:13 Version 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1cb0d8 <line:232:3, col:24> col:13 Reserved 'UINT8[31]'
|-TypedefDecl 0x55887c1cb188 <line:223:1, line:233:3> col:3 EFI_ACPI_2_0_FIRMWARE_ACPI_CONTROL_STRUCTURE 'struct EFI_ACPI_2_0_FIRMWARE_ACPI_CONTROL_STRUCTURE':'EFI_ACPI_2_0_FIRMWARE_ACPI_CONTROL_STRUCTURE'
| |-ElaboratedType 0x55887c1cb130 'struct EFI_ACPI_2_0_FIRMWARE_ACPI_CONTROL_STRUCTURE' sugar
| | `-RecordType 0x55887c1cac80 'EFI_ACPI_2_0_FIRMWARE_ACPI_CONTROL_STRUCTURE'
| |   `-Record 0x55887c1cac00 ''
| `-FullComment 0x55887c413120 <line:221:4, col:35>
|   `-ParagraphComment 0x55887c4130f0 <col:4, col:35>
|     `-TextComment 0x55887c4130c0 <col:4, col:35> Text=" Firmware ACPI Control Structure"
|-RecordDecl 0x55887c1cb280 <line:250:9, line:254:1> line:250:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1cb320 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c413210 <line:247:4, line:248:50>
| | `-ParagraphComment 0x55887c4131e0 <line:247:4, line:248:50>
| |   |-TextComment 0x55887c413190 <line:247:4, col:77> Text=" Multiple APIC Description Table header definition.  The rest of the table"
| |   `-TextComment 0x55887c4131b0 <line:248:4, col:50> Text=" must be defined in a platform specific manner."
| |-FieldDecl 0x55887c1cb388 <line:251:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1cb3e8 <line:252:3, col:34> col:34 LocalApicAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1cb448 <line:253:3, col:34> col:34 Flags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1cb4f8 <line:250:1, line:254:3> col:3 EFI_ACPI_2_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER 'struct EFI_ACPI_2_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER':'EFI_ACPI_2_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER'
| |-ElaboratedType 0x55887c1cb4a0 'struct EFI_ACPI_2_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c1cb300 'EFI_ACPI_2_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER'
| |   `-Record 0x55887c1cb280 ''
| `-FullComment 0x55887c413300 <line:247:4, line:248:50>
|   `-ParagraphComment 0x55887c4132d0 <line:247:4, line:248:50>
|     |-TextComment 0x55887c413280 <line:247:4, col:77> Text=" Multiple APIC Description Table header definition.  The rest of the table"
|     `-TextComment 0x55887c4132a0 <line:248:4, col:50> Text=" must be defined in a platform specific manner."
|-RecordDecl 0x55887c1cb5f0 <line:289:9, line:295:1> line:289:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1cb690 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4133d0 <line:287:4, col:45>
| | `-ParagraphComment 0x55887c4133a0 <col:4, col:45>
| |   `-TextComment 0x55887c413370 <col:4, col:45> Text=" Processor Local APIC Structure Definition"
| |-FieldDecl 0x55887c1cb6f8 <line:290:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cb758 <line:291:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cb7b8 <line:292:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cb818 <line:293:3, col:13> col:13 ApicId 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1cb878 <line:294:3, col:13> col:13 Flags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1cb928 <line:289:1, line:295:3> col:3 EFI_ACPI_2_0_PROCESSOR_LOCAL_APIC_STRUCTURE 'struct EFI_ACPI_2_0_PROCESSOR_LOCAL_APIC_STRUCTURE':'EFI_ACPI_2_0_PROCESSOR_LOCAL_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c1cb8d0 'struct EFI_ACPI_2_0_PROCESSOR_LOCAL_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1cb670 'EFI_ACPI_2_0_PROCESSOR_LOCAL_APIC_STRUCTURE'
| |   `-Record 0x55887c1cb5f0 ''
| `-FullComment 0x55887c4134a0 <line:287:4, col:45>
|   `-ParagraphComment 0x55887c413470 <col:4, col:45>
|     `-TextComment 0x55887c413440 <col:4, col:45> Text=" Processor Local APIC Structure Definition"
|-RecordDecl 0x55887c1cb9f0 <line:305:9, line:312:1> line:305:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1cba90 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c413570 <line:303:4, col:21>
| | `-ParagraphComment 0x55887c413540 <col:4, col:21>
| |   `-TextComment 0x55887c413510 <col:4, col:21> Text=" IO APIC Structure"
| |-FieldDecl 0x55887c1cbaf8 <line:306:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cbb58 <line:307:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cde90 <line:308:3, col:13> col:13 IoApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cdef0 <line:309:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cdf50 <line:310:3, col:13> col:13 IoApicAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1cdfb0 <line:311:3, col:13> col:13 GlobalSystemInterruptBase 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1ce058 <line:305:1, line:312:3> col:3 EFI_ACPI_2_0_IO_APIC_STRUCTURE 'struct EFI_ACPI_2_0_IO_APIC_STRUCTURE':'EFI_ACPI_2_0_IO_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c1ce000 'struct EFI_ACPI_2_0_IO_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1cba70 'EFI_ACPI_2_0_IO_APIC_STRUCTURE'
| |   `-Record 0x55887c1cb9f0 ''
| `-FullComment 0x55887c413640 <line:303:4, col:21>
|   `-ParagraphComment 0x55887c413610 <col:4, col:21>
|     `-TextComment 0x55887c4135e0 <col:4, col:21> Text=" IO APIC Structure"
|-RecordDecl 0x55887c1ce0f0 <line:317:9, line:324:1> line:317:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1ce190 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c413710 <line:315:4, col:39>
| | `-ParagraphComment 0x55887c4136e0 <col:4, col:39>
| |   `-TextComment 0x55887c4136b0 <col:4, col:39> Text=" Interrupt Source Override Structure"
| |-FieldDecl 0x55887c1ce1f8 <line:318:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ce258 <line:319:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ce2b8 <line:320:3, col:13> col:13 Bus 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ce318 <line:321:3, col:13> col:13 Source 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ce378 <line:322:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1ce3d8 <line:323:3, col:13> col:13 Flags 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c1ce488 <line:317:1, line:324:3> col:3 EFI_ACPI_2_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE 'struct EFI_ACPI_2_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE':'EFI_ACPI_2_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE'
| |-ElaboratedType 0x55887c1ce430 'struct EFI_ACPI_2_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE' sugar
| | `-RecordType 0x55887c1ce170 'EFI_ACPI_2_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE'
| |   `-Record 0x55887c1ce0f0 ''
| `-FullComment 0x55887c4137e0 <line:315:4, col:39>
|   `-ParagraphComment 0x55887c4137b0 <col:4, col:39>
|     `-TextComment 0x55887c413780 <col:4, col:39> Text=" Interrupt Source Override Structure"
|-RecordDecl 0x55887c1ce520 <line:329:9, line:334:1> line:329:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1ce5c0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4138b0 <line:327:4, col:43>
| | `-ParagraphComment 0x55887c413880 <col:4, col:43>
| |   `-TextComment 0x55887c413850 <col:4, col:43> Text=" Non-Maskable Interrupt Source Structure"
| |-FieldDecl 0x55887c1ce628 <line:330:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ce688 <line:331:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ce6e8 <line:332:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c1ce748 <line:333:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1ce7f8 <line:329:1, line:334:3> col:3 EFI_ACPI_2_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE 'struct EFI_ACPI_2_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE':'EFI_ACPI_2_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE'
| |-ElaboratedType 0x55887c1ce7a0 'struct EFI_ACPI_2_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE' sugar
| | `-RecordType 0x55887c1ce5a0 'EFI_ACPI_2_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE'
| |   `-Record 0x55887c1ce520 ''
| `-FullComment 0x55887c413980 <line:327:4, col:43>
|   `-ParagraphComment 0x55887c413950 <col:4, col:43>
|     `-TextComment 0x55887c413920 <col:4, col:43> Text=" Non-Maskable Interrupt Source Structure"
|-RecordDecl 0x55887c1ce890 <line:339:9, line:345:1> line:339:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1ce930 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c413a50 <line:337:4, col:28>
| | `-ParagraphComment 0x55887c413a20 <col:4, col:28>
| |   `-TextComment 0x55887c4139f0 <col:4, col:28> Text=" Local APIC NMI Structure"
| |-FieldDecl 0x55887c1ce998 <line:340:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ce9f8 <line:341:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cea58 <line:342:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ceab8 <line:343:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c1ceb18 <line:344:3, col:13> col:13 LocalApicLint 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c1cebc8 <line:339:1, line:345:3> col:3 EFI_ACPI_2_0_LOCAL_APIC_NMI_STRUCTURE 'struct EFI_ACPI_2_0_LOCAL_APIC_NMI_STRUCTURE':'EFI_ACPI_2_0_LOCAL_APIC_NMI_STRUCTURE'
| |-ElaboratedType 0x55887c1ceb70 'struct EFI_ACPI_2_0_LOCAL_APIC_NMI_STRUCTURE' sugar
| | `-RecordType 0x55887c1ce910 'EFI_ACPI_2_0_LOCAL_APIC_NMI_STRUCTURE'
| |   `-Record 0x55887c1ce890 ''
| `-FullComment 0x55887c413b20 <line:337:4, col:28>
|   `-ParagraphComment 0x55887c413af0 <col:4, col:28>
|     `-TextComment 0x55887c413ac0 <col:4, col:28> Text=" Local APIC NMI Structure"
|-RecordDecl 0x55887c1cec60 <line:350:9, line:355:1> line:350:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1ced00 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c413bf0 <line:348:4, col:41>
| | `-ParagraphComment 0x55887c413bc0 <col:4, col:41>
| |   `-TextComment 0x55887c413b90 <col:4, col:41> Text=" Local APIC Address Override Structure"
| |-FieldDecl 0x55887c1ced68 <line:351:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cedc8 <line:352:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cee28 <line:353:3, col:13> col:13 Reserved 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c1cee88 <line:354:3, col:13> col:13 LocalApicAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1cef38 <line:350:1, line:355:3> col:3 EFI_ACPI_2_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE 'struct EFI_ACPI_2_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE':'EFI_ACPI_2_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE'
| |-ElaboratedType 0x55887c1ceee0 'struct EFI_ACPI_2_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE' sugar
| | `-RecordType 0x55887c1cece0 'EFI_ACPI_2_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE'
| |   `-Record 0x55887c1cec60 ''
| `-FullComment 0x55887c413cc0 <line:348:4, col:41>
|   `-ParagraphComment 0x55887c413c90 <col:4, col:41>
|     `-TextComment 0x55887c413c60 <col:4, col:41> Text=" Local APIC Address Override Structure"
|-RecordDecl 0x55887c1cefd0 <line:360:9, line:367:1> line:360:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1cf070 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c413d90 <line:358:4, col:22>
| | `-ParagraphComment 0x55887c413d60 <col:4, col:22>
| |   `-TextComment 0x55887c413d30 <col:4, col:22> Text=" IO SAPIC Structure"
| |-FieldDecl 0x55887c1cf0d8 <line:361:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cf138 <line:362:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cf198 <line:363:3, col:13> col:13 IoApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cf1f8 <line:364:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cf258 <line:365:3, col:13> col:13 GlobalSystemInterruptBase 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1cf2b8 <line:366:3, col:13> col:13 IoSapicAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1cf368 <line:360:1, line:367:3> col:3 EFI_ACPI_2_0_IO_SAPIC_STRUCTURE 'struct EFI_ACPI_2_0_IO_SAPIC_STRUCTURE':'EFI_ACPI_2_0_IO_SAPIC_STRUCTURE'
| |-ElaboratedType 0x55887c1cf310 'struct EFI_ACPI_2_0_IO_SAPIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1cf050 'EFI_ACPI_2_0_IO_SAPIC_STRUCTURE'
| |   `-Record 0x55887c1cefd0 ''
| `-FullComment 0x55887c413e60 <line:358:4, col:22>
|   `-ParagraphComment 0x55887c413e30 <col:4, col:22>
|     `-TextComment 0x55887c413e00 <col:4, col:22> Text=" IO SAPIC Structure"
|-RecordDecl 0x55887c1cf400 <line:372:9, line:380:1> line:372:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1cf4a0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c413f30 <line:370:4, col:25>
| | `-ParagraphComment 0x55887c413f00 <col:4, col:25>
| |   `-TextComment 0x55887c413ed0 <col:4, col:25> Text=" Local SAPIC Structure"
| |-FieldDecl 0x55887c1cf508 <line:373:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cf568 <line:374:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cf5c8 <line:375:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cf628 <line:376:3, col:13> col:13 LocalSapicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cf688 <line:377:3, col:13> col:13 LocalSapicEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cf738 <line:378:3, col:23> col:13 Reserved 'UINT8[3]'
| `-FieldDecl 0x55887c1cf798 <line:379:3, col:13> col:13 Flags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1cf848 <line:372:1, line:380:3> col:3 EFI_ACPI_2_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE 'struct EFI_ACPI_2_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE':'EFI_ACPI_2_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE'
| |-ElaboratedType 0x55887c1cf7f0 'struct EFI_ACPI_2_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1cf480 'EFI_ACPI_2_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE'
| |   `-Record 0x55887c1cf400 ''
| `-FullComment 0x55887c414000 <line:370:4, col:25>
|   `-ParagraphComment 0x55887c413fd0 <col:4, col:25>
|     `-TextComment 0x55887c413fa0 <col:4, col:25> Text=" Local SAPIC Structure"
|-RecordDecl 0x55887c1cf8e0 <line:385:9, line:395:1> line:385:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1cf980 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4140d0 <line:383:4, col:40>
| | `-ParagraphComment 0x55887c4140a0 <col:4, col:40>
| |   `-TextComment 0x55887c414070 <col:4, col:40> Text=" Platform Interrupt Sources Structure"
| |-FieldDecl 0x55887c1cf9e8 <line:386:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cfa48 <line:387:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cfaa8 <line:388:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1cfb08 <line:389:3, col:13> col:13 InterruptType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cfb68 <line:390:3, col:13> col:13 ProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cfbc8 <line:391:3, col:13> col:13 ProcessorEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cfc28 <line:392:3, col:13> col:13 IoSapicVector 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1cfc88 <line:393:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1cfce8 <line:394:3, col:13> col:13 Reserved 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1cfd98 <line:385:1, line:395:3> col:3 EFI_ACPI_2_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE 'struct EFI_ACPI_2_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE':'EFI_ACPI_2_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE'
| |-ElaboratedType 0x55887c1cfd40 'struct EFI_ACPI_2_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE' sugar
| | `-RecordType 0x55887c1cf960 'EFI_ACPI_2_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE'
| |   `-Record 0x55887c1cf8e0 ''
| `-FullComment 0x55887c4141a0 <line:383:4, col:40>
|   `-ParagraphComment 0x55887c414170 <col:4, col:40>
|     `-TextComment 0x55887c414140 <col:4, col:40> Text=" Platform Interrupt Sources Structure"
|-RecordDecl 0x55887c1d00a0 <line:400:9, line:405:1> line:400:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1d0140 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c414270 <line:398:4, col:42>
| | `-ParagraphComment 0x55887c414240 <col:4, col:42>
| |   `-TextComment 0x55887c414210 <col:4, col:42> Text=" Smart Battery Description Table (SBST)"
| |-FieldDecl 0x55887c1d01a8 <line:401:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1d0208 <line:402:3, col:34> col:34 WarningEnergyLevel 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1d0268 <line:403:3, col:34> col:34 LowEnergyLevel 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1d02c8 <line:404:3, col:34> col:34 CriticalEnergyLevel 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1d0378 <line:400:1, line:405:3> col:3 EFI_ACPI_2_0_SMART_BATTERY_DESCRIPTION_TABLE 'struct EFI_ACPI_2_0_SMART_BATTERY_DESCRIPTION_TABLE':'EFI_ACPI_2_0_SMART_BATTERY_DESCRIPTION_TABLE'
| |-ElaboratedType 0x55887c1d0320 'struct EFI_ACPI_2_0_SMART_BATTERY_DESCRIPTION_TABLE' sugar
| | `-RecordType 0x55887c1d0120 'EFI_ACPI_2_0_SMART_BATTERY_DESCRIPTION_TABLE'
| |   `-Record 0x55887c1d00a0 ''
| `-FullComment 0x55887c414340 <line:398:4, col:42>
|   `-ParagraphComment 0x55887c414310 <col:4, col:42>
|     `-TextComment 0x55887c4142e0 <col:4, col:42> Text=" Smart Battery Description Table (SBST)"
|-RecordDecl 0x55887c1d0440 <line:417:9, line:423:1> line:417:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1d04e0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c414460 <line:413:4, line:415:57>
| | `-ParagraphComment 0x55887c414430 <line:413:4, line:415:57>
| |   |-TextComment 0x55887c4143b0 <line:413:4, col:51> Text=" Embedded Controller Boot Resources Table (ECDT)"
| |   |-TextComment 0x55887c4143d0 <line:414:4, col:73> Text=" The table is followed by a null terminated ASCII string that contains"
| |   `-TextComment 0x55887c4143f0 <line:415:4, col:57> Text=" a fully qualified reference to the name space object."
| |-FieldDecl 0x55887c1d0548 <line:418:3, col:45> col:45 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1d05a8 <line:419:3, col:45> col:45 EcControl 'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1d0608 <line:420:3, col:45> col:45 EcData 'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_2_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1d0668 <line:421:3, col:45> col:45 Uid 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1d06c8 <line:422:3, col:45> col:45 GpeBit 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c1d0778 <line:417:1, line:423:3> col:3 EFI_ACPI_2_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE 'struct EFI_ACPI_2_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE':'EFI_ACPI_2_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE'
| |-ElaboratedType 0x55887c1d0720 'struct EFI_ACPI_2_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE' sugar
| | `-RecordType 0x55887c1d04c0 'EFI_ACPI_2_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE'
| |   `-Record 0x55887c1d0440 ''
| `-FullComment 0x55887c414580 <line:413:4, line:415:57>
|   `-ParagraphComment 0x55887c414550 <line:413:4, line:415:57>
|     |-TextComment 0x55887c4144d0 <line:413:4, col:51> Text=" Embedded Controller Boot Resources Table (ECDT)"
|     |-TextComment 0x55887c4144f0 <line:414:4, col:73> Text=" The table is followed by a null terminated ASCII string that contains"
|     `-TextComment 0x55887c414510 <line:415:4, col:57> Text=" a fully qualified reference to the name space object."
|-RecordDecl 0x55887c1d0c18 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/Acpi30.h:28:16, line:41:1> line:28:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1d0cc0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c414650 <line:26:4, col:37>
| | `-ParagraphComment 0x55887c414620 <col:4, col:37>
| |   `-TextComment 0x55887c4145f0 <col:4, col:37> Text=" Extended Address Space Descriptor"
| |-FieldDecl 0x55887c1d0d28 <line:29:3, col:33> col:33 Header 'ACPI_LARGE_RESOURCE_HEADER':'ACPI_LARGE_RESOURCE_HEADER'
| |-FieldDecl 0x55887c1d0d88 <line:30:3, col:33> col:33 ResType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d0de8 <line:31:3, col:33> col:33 GenFlag 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d0e48 <line:32:3, col:33> col:33 SpecificFlag 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d0ea8 <line:33:3, col:33> col:33 RevisionId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d0f08 <line:34:3, col:33> col:33 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d0f68 <line:35:3, col:33> col:33 AddrSpaceGranularity 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1d0fc8 <line:36:3, col:33> col:33 AddrRangeMin 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1d1028 <line:37:3, col:33> col:33 AddrRangeMax 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1d1088 <line:38:3, col:33> col:33 AddrTranslationOffset 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1d10e8 <line:39:3, col:33> col:33 AddrLen 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c1d1148 <line:40:3, col:33> col:33 TypeSpecificAttribute 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1d11f8 <line:28:1, line:41:3> col:3 EFI_ACPI_EXTENDED_ADDRESS_SPACE_DESCRIPTOR 'struct EFI_ACPI_EXTENDED_ADDRESS_SPACE_DESCRIPTOR':'EFI_ACPI_EXTENDED_ADDRESS_SPACE_DESCRIPTOR'
| |-ElaboratedType 0x55887c1d11a0 'struct EFI_ACPI_EXTENDED_ADDRESS_SPACE_DESCRIPTOR' sugar
| | `-RecordType 0x55887c1d0ca0 'EFI_ACPI_EXTENDED_ADDRESS_SPACE_DESCRIPTOR'
| |   `-Record 0x55887c1d0c18 ''
| `-FullComment 0x55887c414720 <line:26:4, col:37>
|   `-ParagraphComment 0x55887c4146f0 <col:4, col:37>
|     `-TextComment 0x55887c4146c0 <col:4, col:37> Text=" Extended Address Space Descriptor"
|-RecordDecl 0x55887c1d12b8 <line:63:9, line:69:1> line:63:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1d1360 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4147f0 <line:61:4, col:45>
| | `-ParagraphComment 0x55887c4147c0 <col:4, col:45>
| |   `-TextComment 0x55887c414790 <col:4, col:45> Text=" ACPI 3.0 Generic Address Space definition"
| |-FieldDecl 0x55887c1d13c8 <line:64:3, col:13> col:13 AddressSpaceId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d1428 <line:65:3, col:13> col:13 RegisterBitWidth 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d1488 <line:66:3, col:13> col:13 RegisterBitOffset 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d14e8 <line:67:3, col:13> col:13 AccessSize 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1d1548 <line:68:3, col:13> col:13 Address 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1d15f8 <line:63:1, line:69:3> col:3 referenced EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE 'struct EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE'
| |-ElaboratedType 0x55887c1d15a0 'struct EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE' sugar
| | `-RecordType 0x55887c1d1340 'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE'
| |   `-Record 0x55887c1d12b8 ''
| `-FullComment 0x55887c4148c0 <line:61:4, col:45>
|   `-ParagraphComment 0x55887c414890 <col:4, col:45>
|     `-TextComment 0x55887c414860 <col:4, col:45> Text=" ACPI 3.0 Generic Address Space definition"
|-RecordDecl 0x55887c1d1690 <line:97:9, line:107:1> line:97:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1d1730 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c414990 <line:95:4, col:45>
| | `-ParagraphComment 0x55887c414960 <col:4, col:45>
| |   `-TextComment 0x55887c414930 <col:4, col:45> Text=" Root System Description Pointer Structure"
| |-FieldDecl 0x55887c1d1798 <line:98:3, col:13> col:13 Signature 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1d17f8 <line:99:3, col:13> col:13 Checksum 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d18a8 <line:100:3, col:20> col:13 OemId 'UINT8[6]'
| |-FieldDecl 0x55887c1d1908 <line:101:3, col:13> col:13 Revision 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d1968 <line:102:3, col:13> col:13 RsdtAddress 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1d19c8 <line:103:3, col:13> col:13 Length 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1d1a28 <line:104:3, col:13> col:13 XsdtAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1d1a88 <line:105:3, col:13> col:13 ExtendedChecksum 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1d1b38 <line:106:3, col:23> col:13 Reserved 'UINT8[3]'
|-TypedefDecl 0x55887c1d1be8 <line:97:1, line:107:3> col:3 EFI_ACPI_3_0_ROOT_SYSTEM_DESCRIPTION_POINTER 'struct EFI_ACPI_3_0_ROOT_SYSTEM_DESCRIPTION_POINTER':'EFI_ACPI_3_0_ROOT_SYSTEM_DESCRIPTION_POINTER'
| |-ElaboratedType 0x55887c1d1b90 'struct EFI_ACPI_3_0_ROOT_SYSTEM_DESCRIPTION_POINTER' sugar
| | `-RecordType 0x55887c1d1710 'EFI_ACPI_3_0_ROOT_SYSTEM_DESCRIPTION_POINTER'
| |   `-Record 0x55887c1d1690 ''
| `-FullComment 0x55887c414a60 <line:95:4, col:45>
|   `-ParagraphComment 0x55887c414a30 <col:4, col:45>
|     `-TextComment 0x55887c414a00 <col:4, col:45> Text=" Root System Description Pointer Structure"
|-RecordDecl 0x55887c1d1ce0 <line:118:9, line:121:1> line:118:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1d1d80 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c414b50 <line:115:4, line:116:35>
| | `-ParagraphComment 0x55887c414b20 <line:115:4, line:116:35>
| |   |-TextComment 0x55887c414ad0 <line:115:4, col:75> Text=" Common table header, this prefaces all ACPI tables, including FACS, but"
| |   `-TextComment 0x55887c414af0 <line:116:4, col:35> Text=" excluding the RSD PTR structure"
| |-FieldDecl 0x55887c1d1de8 <line:119:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1d1e48 <line:120:3, col:13> col:13 Length 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1d1ef8 <line:118:1, line:121:3> col:3 EFI_ACPI_3_0_COMMON_HEADER 'struct EFI_ACPI_3_0_COMMON_HEADER':'EFI_ACPI_3_0_COMMON_HEADER'
| |-ElaboratedType 0x55887c1d1ea0 'struct EFI_ACPI_3_0_COMMON_HEADER' sugar
| | `-RecordType 0x55887c1d1d60 'EFI_ACPI_3_0_COMMON_HEADER'
| |   `-Record 0x55887c1d1ce0 ''
| `-FullComment 0x55887c414c40 <line:115:4, line:116:35>
|   `-ParagraphComment 0x55887c414c10 <line:115:4, line:116:35>
|     |-TextComment 0x55887c414bc0 <line:115:4, col:75> Text=" Common table header, this prefaces all ACPI tables, including FACS, but"
|     `-TextComment 0x55887c414be0 <line:116:4, col:35> Text=" excluding the RSD PTR structure"
|-RecordDecl 0x55887c1d1ff0 <line:148:9, line:201:1> line:148:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1d9730 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c414d10 <line:146:4, col:49>
| | `-ParagraphComment 0x55887c414ce0 <col:4, col:49>
| |   `-TextComment 0x55887c414cb0 <col:4, col:49> Text=" Fixed ACPI Description Table Structure (FADT)"
| |-FieldDecl 0x55887c1d9798 <line:149:3, col:45> col:45 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1d97f8 <line:150:3, col:45> col:45 FirmwareCtrl 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1d9858 <line:151:3, col:45> col:45 Dsdt 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1d98b8 <line:152:3, col:45> col:45 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d9918 <line:153:3, col:45> col:45 PreferredPmProfile 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d9978 <line:154:3, col:45> col:45 SciInt 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1d99d8 <line:155:3, col:45> col:45 SmiCmd 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1d9a38 <line:156:3, col:45> col:45 AcpiEnable 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d9a98 <line:157:3, col:45> col:45 AcpiDisable 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d9af8 <line:158:3, col:45> col:45 S4BiosReq 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d9b58 <line:159:3, col:45> col:45 PstateCnt 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d9bb8 <line:160:3, col:45> col:45 Pm1aEvtBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1d9c18 <line:161:3, col:45> col:45 Pm1bEvtBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1d9c78 <line:162:3, col:45> col:45 Pm1aCntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1d9cd8 <line:163:3, col:45> col:45 Pm1bCntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1d9d38 <line:164:3, col:45> col:45 Pm2CntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1d9d98 <line:165:3, col:45> col:45 PmTmrBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1d9df8 <line:166:3, col:45> col:45 Gpe0Blk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1d9e58 <line:167:3, col:45> col:45 Gpe1Blk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1d9eb8 <line:168:3, col:45> col:45 Pm1EvtLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d9f18 <line:169:3, col:45> col:45 Pm1CntLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d9f78 <line:170:3, col:45> col:45 Pm2CntLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1d9fd8 <line:171:3, col:45> col:45 PmTmrLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1da038 <line:172:3, col:45> col:45 Gpe0BlkLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1da098 <line:173:3, col:45> col:45 Gpe1BlkLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1da0f8 <line:174:3, col:45> col:45 Gpe1Base 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1da158 <line:175:3, col:45> col:45 CstCnt 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1da1b8 <line:176:3, col:45> col:45 PLvl2Lat 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1da218 <line:177:3, col:45> col:45 PLvl3Lat 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1da278 <line:178:3, col:45> col:45 FlushSize 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1da2d8 <line:179:3, col:45> col:45 FlushStride 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1da338 <line:180:3, col:45> col:45 DutyOffset 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1da398 <line:181:3, col:45> col:45 DutyWidth 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1da3f8 <line:182:3, col:45> col:45 DayAlrm 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1da458 <line:183:3, col:45> col:45 MonAlrm 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1da4b8 <line:184:3, col:45> col:45 Century 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1da518 <line:185:3, col:45> col:45 IaPcBootArch 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1da578 <line:186:3, col:45> col:45 Reserved1 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1da5d8 <line:187:3, col:45> col:45 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1da660 <line:188:3, col:45> col:45 ResetReg 'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1da6c0 <line:189:3, col:45> col:45 ResetValue 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1da770 <line:190:3, col:56> col:45 Reserved2 'UINT8[3]'
| |-FieldDecl 0x55887c1da7d0 <line:191:3, col:45> col:45 XFirmwareCtrl 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1da830 <line:192:3, col:45> col:45 XDsdt 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1da890 <line:193:3, col:45> col:45 XPm1aEvtBlk 'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1da8f0 <line:194:3, col:45> col:45 XPm1bEvtBlk 'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1da950 <line:195:3, col:45> col:45 XPm1aCntBlk 'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1da9b0 <line:196:3, col:45> col:45 XPm1bCntBlk 'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1daa10 <line:197:3, col:45> col:45 XPm2CntBlk 'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1daa70 <line:198:3, col:45> col:45 XPmTmrBlk 'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1daad0 <line:199:3, col:45> col:45 XGpe0Blk 'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE'
| `-FieldDecl 0x55887c1dab30 <line:200:3, col:45> col:45 XGpe1Blk 'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE'
|-TypedefDecl 0x55887c1dabd8 <line:148:1, line:201:3> col:3 EFI_ACPI_3_0_FIXED_ACPI_DESCRIPTION_TABLE 'struct EFI_ACPI_3_0_FIXED_ACPI_DESCRIPTION_TABLE':'EFI_ACPI_3_0_FIXED_ACPI_DESCRIPTION_TABLE'
| |-ElaboratedType 0x55887c1dab80 'struct EFI_ACPI_3_0_FIXED_ACPI_DESCRIPTION_TABLE' sugar
| | `-RecordType 0x55887c1d2070 'EFI_ACPI_3_0_FIXED_ACPI_DESCRIPTION_TABLE'
| |   `-Record 0x55887c1d1ff0 ''
| `-FullComment 0x55887c414de0 <line:146:4, col:49>
|   `-ParagraphComment 0x55887c414db0 <col:4, col:49>
|     `-TextComment 0x55887c414d80 <col:4, col:49> Text=" Fixed ACPI Description Table Structure (FADT)"
|-RecordDecl 0x55887c1daca0 <line:258:9, line:268:1> line:258:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1dad40 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c414eb0 <line:256:4, col:35>
| | `-ParagraphComment 0x55887c414e80 <col:4, col:35>
| |   `-TextComment 0x55887c414e50 <col:4, col:35> Text=" Firmware ACPI Control Structure"
| |-FieldDecl 0x55887c1dada8 <line:259:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1dae08 <line:260:3, col:13> col:13 Length 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1dae68 <line:261:3, col:13> col:13 HardwareSignature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1daec8 <line:262:3, col:13> col:13 FirmwareWakingVector 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1daf28 <line:263:3, col:13> col:13 GlobalLock 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1daf88 <line:264:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1dafe8 <line:265:3, col:13> col:13 XFirmwareWakingVector 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1db048 <line:266:3, col:13> col:13 Version 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1db0f8 <line:267:3, col:24> col:13 Reserved 'UINT8[31]'
|-TypedefDecl 0x55887c1db1a8 <line:258:1, line:268:3> col:3 EFI_ACPI_3_0_FIRMWARE_ACPI_CONTROL_STRUCTURE 'struct EFI_ACPI_3_0_FIRMWARE_ACPI_CONTROL_STRUCTURE':'EFI_ACPI_3_0_FIRMWARE_ACPI_CONTROL_STRUCTURE'
| |-ElaboratedType 0x55887c1db150 'struct EFI_ACPI_3_0_FIRMWARE_ACPI_CONTROL_STRUCTURE' sugar
| | `-RecordType 0x55887c1dad20 'EFI_ACPI_3_0_FIRMWARE_ACPI_CONTROL_STRUCTURE'
| |   `-Record 0x55887c1daca0 ''
| `-FullComment 0x55887c414f80 <line:256:4, col:35>
|   `-ParagraphComment 0x55887c414f50 <col:4, col:35>
|     `-TextComment 0x55887c414f20 <col:4, col:35> Text=" Firmware ACPI Control Structure"
|-RecordDecl 0x55887c1db2a0 <line:295:9, line:299:1> line:295:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1db340 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c415070 <line:292:4, line:293:50>
| | `-ParagraphComment 0x55887c415040 <line:292:4, line:293:50>
| |   |-TextComment 0x55887c414ff0 <line:292:4, col:77> Text=" Multiple APIC Description Table header definition.  The rest of the table"
| |   `-TextComment 0x55887c415010 <line:293:4, col:50> Text=" must be defined in a platform specific manner."
| |-FieldDecl 0x55887c1db3a8 <line:296:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1db408 <line:297:3, col:34> col:34 LocalApicAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1db468 <line:298:3, col:34> col:34 Flags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1db518 <line:295:1, line:299:3> col:3 EFI_ACPI_3_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER 'struct EFI_ACPI_3_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER':'EFI_ACPI_3_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER'
| |-ElaboratedType 0x55887c1db4c0 'struct EFI_ACPI_3_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c1db320 'EFI_ACPI_3_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER'
| |   `-Record 0x55887c1db2a0 ''
| `-FullComment 0x55887c415160 <line:292:4, line:293:50>
|   `-ParagraphComment 0x55887c415130 <line:292:4, line:293:50>
|     |-TextComment 0x55887c4150e0 <line:292:4, col:77> Text=" Multiple APIC Description Table header definition.  The rest of the table"
|     `-TextComment 0x55887c415100 <line:293:4, col:50> Text=" must be defined in a platform specific manner."
|-RecordDecl 0x55887c1db610 <line:334:9, line:340:1> line:334:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1db6b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c417290 <line:332:4, col:45>
| | `-ParagraphComment 0x55887c417260 <col:4, col:45>
| |   `-TextComment 0x55887c417230 <col:4, col:45> Text=" Processor Local APIC Structure Definition"
| |-FieldDecl 0x55887c1dc750 <line:335:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dc7b0 <line:336:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dc810 <line:337:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dc870 <line:338:3, col:13> col:13 ApicId 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1dc8d0 <line:339:3, col:13> col:13 Flags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1dc978 <line:334:1, line:340:3> col:3 EFI_ACPI_3_0_PROCESSOR_LOCAL_APIC_STRUCTURE 'struct EFI_ACPI_3_0_PROCESSOR_LOCAL_APIC_STRUCTURE':'EFI_ACPI_3_0_PROCESSOR_LOCAL_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c1dc920 'struct EFI_ACPI_3_0_PROCESSOR_LOCAL_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1db690 'EFI_ACPI_3_0_PROCESSOR_LOCAL_APIC_STRUCTURE'
| |   `-Record 0x55887c1db610 ''
| `-FullComment 0x55887c417360 <line:332:4, col:45>
|   `-ParagraphComment 0x55887c417330 <col:4, col:45>
|     `-TextComment 0x55887c417300 <col:4, col:45> Text=" Processor Local APIC Structure Definition"
|-RecordDecl 0x55887c1dca40 <line:350:9, line:357:1> line:350:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1dcae0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c417430 <line:348:4, col:21>
| | `-ParagraphComment 0x55887c417400 <col:4, col:21>
| |   `-TextComment 0x55887c4173d0 <col:4, col:21> Text=" IO APIC Structure"
| |-FieldDecl 0x55887c1dcb48 <line:351:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dcba8 <line:352:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dcc08 <line:353:3, col:13> col:13 IoApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dcc68 <line:354:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dccc8 <line:355:3, col:13> col:13 IoApicAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1dcd28 <line:356:3, col:13> col:13 GlobalSystemInterruptBase 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1dcdd8 <line:350:1, line:357:3> col:3 EFI_ACPI_3_0_IO_APIC_STRUCTURE 'struct EFI_ACPI_3_0_IO_APIC_STRUCTURE':'EFI_ACPI_3_0_IO_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c1dcd80 'struct EFI_ACPI_3_0_IO_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1dcac0 'EFI_ACPI_3_0_IO_APIC_STRUCTURE'
| |   `-Record 0x55887c1dca40 ''
| `-FullComment 0x55887c417500 <line:348:4, col:21>
|   `-ParagraphComment 0x55887c4174d0 <col:4, col:21>
|     `-TextComment 0x55887c4174a0 <col:4, col:21> Text=" IO APIC Structure"
|-RecordDecl 0x55887c1dce70 <line:362:9, line:369:1> line:362:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1dcf10 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4175d0 <line:360:4, col:39>
| | `-ParagraphComment 0x55887c4175a0 <col:4, col:39>
| |   `-TextComment 0x55887c417570 <col:4, col:39> Text=" Interrupt Source Override Structure"
| |-FieldDecl 0x55887c1dcf78 <line:363:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dcfd8 <line:364:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dd038 <line:365:3, col:13> col:13 Bus 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dd098 <line:366:3, col:13> col:13 Source 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dd0f8 <line:367:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1dd158 <line:368:3, col:13> col:13 Flags 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c1dd208 <line:362:1, line:369:3> col:3 EFI_ACPI_3_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE 'struct EFI_ACPI_3_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE':'EFI_ACPI_3_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE'
| |-ElaboratedType 0x55887c1dd1b0 'struct EFI_ACPI_3_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE' sugar
| | `-RecordType 0x55887c1dcef0 'EFI_ACPI_3_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE'
| |   `-Record 0x55887c1dce70 ''
| `-FullComment 0x55887c4176a0 <line:360:4, col:39>
|   `-ParagraphComment 0x55887c417670 <col:4, col:39>
|     `-TextComment 0x55887c417640 <col:4, col:39> Text=" Interrupt Source Override Structure"
|-RecordDecl 0x55887c1dd2a0 <line:374:9, line:386:1> line:374:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1dd340 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c417770 <line:372:4, col:51>
| | `-ParagraphComment 0x55887c417740 <col:4, col:51>
| |   `-TextComment 0x55887c417710 <col:4, col:51> Text=" Platform Interrupt Sources Structure Definition"
| |-FieldDecl 0x55887c1dd3a8 <line:375:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dd408 <line:376:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dd468 <line:377:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1dd4c8 <line:378:3, col:13> col:13 InterruptType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dd528 <line:379:3, col:13> col:13 ProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dd588 <line:380:3, col:13> col:13 ProcessorEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dd5e8 <line:381:3, col:13> col:13 IoSapicVector 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dd648 <line:382:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1dd6a8 <line:383:3, col:13> col:13 PlatformInterruptSourceFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1dd708 <line:384:3, col:13> col:13 CpeiProcessorOverride 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1dd7b8 <line:385:3, col:24> col:13 Reserved 'UINT8[31]'
|-TypedefDecl 0x55887c1dd868 <line:374:1, line:386:3> col:3 EFI_ACPI_3_0_PLATFORM_INTERRUPT_APIC_STRUCTURE 'struct EFI_ACPI_3_0_PLATFORM_INTERRUPT_APIC_STRUCTURE':'EFI_ACPI_3_0_PLATFORM_INTERRUPT_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c1dd810 'struct EFI_ACPI_3_0_PLATFORM_INTERRUPT_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1dd320 'EFI_ACPI_3_0_PLATFORM_INTERRUPT_APIC_STRUCTURE'
| |   `-Record 0x55887c1dd2a0 ''
| `-FullComment 0x55887c417840 <line:372:4, col:51>
|   `-ParagraphComment 0x55887c417810 <col:4, col:51>
|     `-TextComment 0x55887c4177e0 <col:4, col:51> Text=" Platform Interrupt Sources Structure Definition"
|-RecordDecl 0x55887c1dd900 <line:398:9, line:403:1> line:398:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1dd9a0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c417910 <line:396:4, col:43>
| | `-ParagraphComment 0x55887c4178e0 <col:4, col:43>
| |   `-TextComment 0x55887c4178b0 <col:4, col:43> Text=" Non-Maskable Interrupt Source Structure"
| |-FieldDecl 0x55887c1dda08 <line:399:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dda68 <line:400:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ddac8 <line:401:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c1ddb28 <line:402:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1ddbd8 <line:398:1, line:403:3> col:3 EFI_ACPI_3_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE 'struct EFI_ACPI_3_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE':'EFI_ACPI_3_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE'
| |-ElaboratedType 0x55887c1ddb80 'struct EFI_ACPI_3_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE' sugar
| | `-RecordType 0x55887c1dd980 'EFI_ACPI_3_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE'
| |   `-Record 0x55887c1dd900 ''
| `-FullComment 0x55887c4179e0 <line:396:4, col:43>
|   `-ParagraphComment 0x55887c4179b0 <col:4, col:43>
|     `-TextComment 0x55887c417980 <col:4, col:43> Text=" Non-Maskable Interrupt Source Structure"
|-RecordDecl 0x55887c1ddc70 <line:408:9, line:414:1> line:408:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1ddd10 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c417ab0 <line:406:4, col:28>
| | `-ParagraphComment 0x55887c417a80 <col:4, col:28>
| |   `-TextComment 0x55887c417a50 <col:4, col:28> Text=" Local APIC NMI Structure"
| |-FieldDecl 0x55887c1ddd78 <line:409:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dddd8 <line:410:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dde38 <line:411:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1dde98 <line:412:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c1ddef8 <line:413:3, col:13> col:13 LocalApicLint 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c1ddfa8 <line:408:1, line:414:3> col:3 EFI_ACPI_3_0_LOCAL_APIC_NMI_STRUCTURE 'struct EFI_ACPI_3_0_LOCAL_APIC_NMI_STRUCTURE':'EFI_ACPI_3_0_LOCAL_APIC_NMI_STRUCTURE'
| |-ElaboratedType 0x55887c1ddf50 'struct EFI_ACPI_3_0_LOCAL_APIC_NMI_STRUCTURE' sugar
| | `-RecordType 0x55887c1ddcf0 'EFI_ACPI_3_0_LOCAL_APIC_NMI_STRUCTURE'
| |   `-Record 0x55887c1ddc70 ''
| `-FullComment 0x55887c417b80 <line:406:4, col:28>
|   `-ParagraphComment 0x55887c417b50 <col:4, col:28>
|     `-TextComment 0x55887c417b20 <col:4, col:28> Text=" Local APIC NMI Structure"
|-RecordDecl 0x55887c1de040 <line:419:9, line:424:1> line:419:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1de0e0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c417c50 <line:417:4, col:41>
| | `-ParagraphComment 0x55887c417c20 <col:4, col:41>
| |   `-TextComment 0x55887c417bf0 <col:4, col:41> Text=" Local APIC Address Override Structure"
| |-FieldDecl 0x55887c1de148 <line:420:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1de1a8 <line:421:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1de208 <line:422:3, col:13> col:13 Reserved 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c1de268 <line:423:3, col:13> col:13 LocalApicAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1de318 <line:419:1, line:424:3> col:3 EFI_ACPI_3_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE 'struct EFI_ACPI_3_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE':'EFI_ACPI_3_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE'
| |-ElaboratedType 0x55887c1de2c0 'struct EFI_ACPI_3_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE' sugar
| | `-RecordType 0x55887c1de0c0 'EFI_ACPI_3_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE'
| |   `-Record 0x55887c1de040 ''
| `-FullComment 0x55887c417d20 <line:417:4, col:41>
|   `-ParagraphComment 0x55887c417cf0 <col:4, col:41>
|     `-TextComment 0x55887c417cc0 <col:4, col:41> Text=" Local APIC Address Override Structure"
|-RecordDecl 0x55887c1de3b0 <line:429:9, line:436:1> line:429:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1de450 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c417df0 <line:427:4, col:22>
| | `-ParagraphComment 0x55887c417dc0 <col:4, col:22>
| |   `-TextComment 0x55887c417d90 <col:4, col:22> Text=" IO SAPIC Structure"
| |-FieldDecl 0x55887c1de4b8 <line:430:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1de518 <line:431:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1de578 <line:432:3, col:13> col:13 IoApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1de5d8 <line:433:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1de638 <line:434:3, col:13> col:13 GlobalSystemInterruptBase 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1de698 <line:435:3, col:13> col:13 IoSapicAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1e0780 <line:429:1, line:436:3> col:3 EFI_ACPI_3_0_IO_SAPIC_STRUCTURE 'struct EFI_ACPI_3_0_IO_SAPIC_STRUCTURE':'EFI_ACPI_3_0_IO_SAPIC_STRUCTURE'
| |-ElaboratedType 0x55887c1de6f0 'struct EFI_ACPI_3_0_IO_SAPIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1de430 'EFI_ACPI_3_0_IO_SAPIC_STRUCTURE'
| |   `-Record 0x55887c1de3b0 ''
| `-FullComment 0x55887c417ec0 <line:427:4, col:22>
|   `-ParagraphComment 0x55887c417e90 <col:4, col:22>
|     `-TextComment 0x55887c417e60 <col:4, col:22> Text=" IO SAPIC Structure"
|-RecordDecl 0x55887c1e0820 <line:442:9, line:451:1> line:442:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1e08c0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c417fb0 <line:439:4, line:440:86>
| | `-ParagraphComment 0x55887c417f80 <line:439:4, line:440:86>
| |   |-TextComment 0x55887c417f30 <line:439:4, col:25> Text=" Local SAPIC Structure"
| |   `-TextComment 0x55887c417f50 <line:440:4, col:86> Text=" This struct followed by a null-terminated ASCII string - ACPI Processor UID String"
| |-FieldDecl 0x55887c1e0928 <line:443:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e0988 <line:444:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e09e8 <line:445:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e0a48 <line:446:3, col:13> col:13 LocalSapicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e0aa8 <line:447:3, col:13> col:13 LocalSapicEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e0b58 <line:448:3, col:23> col:13 Reserved 'UINT8[3]'
| |-FieldDecl 0x55887c1e0bb8 <line:449:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1e0c18 <line:450:3, col:13> col:13 ACPIProcessorUIDValue 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1e0cc8 <line:442:1, line:451:3> col:3 EFI_ACPI_3_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE 'struct EFI_ACPI_3_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE':'EFI_ACPI_3_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE'
| |-ElaboratedType 0x55887c1e0c70 'struct EFI_ACPI_3_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1e08a0 'EFI_ACPI_3_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE'
| |   `-Record 0x55887c1e0820 ''
| `-FullComment 0x55887c4180a0 <line:439:4, line:440:86>
|   `-ParagraphComment 0x55887c418070 <line:439:4, line:440:86>
|     |-TextComment 0x55887c418020 <line:439:4, col:25> Text=" Local SAPIC Structure"
|     `-TextComment 0x55887c418040 <line:440:4, col:86> Text=" This struct followed by a null-terminated ASCII string - ACPI Processor UID String"
|-RecordDecl 0x55887c1e0d60 <line:456:9, line:466:1> line:456:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1e0e00 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c418170 <line:454:4, col:40>
| | `-ParagraphComment 0x55887c418140 <col:4, col:40>
| |   `-TextComment 0x55887c418110 <col:4, col:40> Text=" Platform Interrupt Sources Structure"
| |-FieldDecl 0x55887c1e0e68 <line:457:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e0ec8 <line:458:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e0f28 <line:459:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1e0f88 <line:460:3, col:13> col:13 InterruptType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e0fe8 <line:461:3, col:13> col:13 ProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e1048 <line:462:3, col:13> col:13 ProcessorEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e10a8 <line:463:3, col:13> col:13 IoSapicVector 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e1108 <line:464:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1e1168 <line:465:3, col:13> col:13 PlatformInterruptSourceFlags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1e1218 <line:456:1, line:466:3> col:3 EFI_ACPI_3_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE 'struct EFI_ACPI_3_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE':'EFI_ACPI_3_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE'
| |-ElaboratedType 0x55887c1e11c0 'struct EFI_ACPI_3_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE' sugar
| | `-RecordType 0x55887c1e0de0 'EFI_ACPI_3_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE'
| |   `-Record 0x55887c1e0d60 ''
| `-FullComment 0x55887c418240 <line:454:4, col:40>
|   `-ParagraphComment 0x55887c418210 <col:4, col:40>
|     `-TextComment 0x55887c4181e0 <col:4, col:40> Text=" Platform Interrupt Sources Structure"
|-RecordDecl 0x55887c1e12e0 <line:477:9, line:482:1> line:477:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1e1380 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c418310 <line:475:4, col:42>
| | `-ParagraphComment 0x55887c4182e0 <col:4, col:42>
| |   `-TextComment 0x55887c4182b0 <col:4, col:42> Text=" Smart Battery Description Table (SBST)"
| |-FieldDecl 0x55887c1e13e8 <line:478:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1e1448 <line:479:3, col:34> col:34 WarningEnergyLevel 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e14a8 <line:480:3, col:34> col:34 LowEnergyLevel 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1e1508 <line:481:3, col:34> col:34 CriticalEnergyLevel 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1e15b8 <line:477:1, line:482:3> col:3 EFI_ACPI_3_0_SMART_BATTERY_DESCRIPTION_TABLE 'struct EFI_ACPI_3_0_SMART_BATTERY_DESCRIPTION_TABLE':'EFI_ACPI_3_0_SMART_BATTERY_DESCRIPTION_TABLE'
| |-ElaboratedType 0x55887c1e1560 'struct EFI_ACPI_3_0_SMART_BATTERY_DESCRIPTION_TABLE' sugar
| | `-RecordType 0x55887c1e1360 'EFI_ACPI_3_0_SMART_BATTERY_DESCRIPTION_TABLE'
| |   `-Record 0x55887c1e12e0 ''
| `-FullComment 0x55887c4183e0 <line:475:4, col:42>
|   `-ParagraphComment 0x55887c4183b0 <col:4, col:42>
|     `-TextComment 0x55887c418380 <col:4, col:42> Text=" Smart Battery Description Table (SBST)"
|-RecordDecl 0x55887c1e1680 <line:494:9, line:500:1> line:494:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1e1720 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c418500 <line:490:4, line:492:57>
| | `-ParagraphComment 0x55887c4184d0 <line:490:4, line:492:57>
| |   |-TextComment 0x55887c418450 <line:490:4, col:51> Text=" Embedded Controller Boot Resources Table (ECDT)"
| |   |-TextComment 0x55887c418470 <line:491:4, col:73> Text=" The table is followed by a null terminated ASCII string that contains"
| |   `-TextComment 0x55887c418490 <line:492:4, col:57> Text=" a fully qualified reference to the name space object."
| |-FieldDecl 0x55887c1e1788 <line:495:3, col:45> col:45 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1e17e8 <line:496:3, col:45> col:45 EcControl 'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1e1848 <line:497:3, col:45> col:45 EcData 'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_3_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1e18a8 <line:498:3, col:45> col:45 Uid 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1e1908 <line:499:3, col:45> col:45 GpeBit 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c1e19b8 <line:494:1, line:500:3> col:3 EFI_ACPI_3_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE 'struct EFI_ACPI_3_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE':'EFI_ACPI_3_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE'
| |-ElaboratedType 0x55887c1e1960 'struct EFI_ACPI_3_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE' sugar
| | `-RecordType 0x55887c1e1700 'EFI_ACPI_3_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE'
| |   `-Record 0x55887c1e1680 ''
| `-FullComment 0x55887c418620 <line:490:4, line:492:57>
|   `-ParagraphComment 0x55887c4185f0 <line:490:4, line:492:57>
|     |-TextComment 0x55887c418570 <line:490:4, col:51> Text=" Embedded Controller Boot Resources Table (ECDT)"
|     |-TextComment 0x55887c418590 <line:491:4, col:73> Text=" The table is followed by a null terminated ASCII string that contains"
|     `-TextComment 0x55887c4185b0 <line:492:4, col:57> Text=" a fully qualified reference to the name space object."
|-RecordDecl 0x55887c1e1a80 <line:511:9, line:515:1> line:511:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1e1b20 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c418710 <line:508:4, line:509:50>
| | `-ParagraphComment 0x55887c4186e0 <line:508:4, line:509:50>
| |   |-TextComment 0x55887c418690 <line:508:4, col:64> Text=" System Resource Affinity Table (SRAT.  The rest of the table"
| |   `-TextComment 0x55887c4186b0 <line:509:4, col:50> Text=" must be defined in a platform specific manner."
| |-FieldDecl 0x55887c1e1b88 <line:512:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1e1be8 <line:513:3, col:34> col:34 Reserved1 'UINT32':'unsigned int'
| | `-FullComment 0x55887c4187e0 <col:49, col:65>
| |   `-ParagraphComment 0x55887c4187b0 <col:49, col:65>
| |     `-TextComment 0x55887c418780 <col:49, col:65> Text=" Must be set to 1"
| `-FieldDecl 0x55887c1e1c78 <line:514:3, col:34> col:34 Reserved2 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1e1d28 <line:511:1, line:515:3> col:3 EFI_ACPI_3_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER 'struct EFI_ACPI_3_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER':'EFI_ACPI_3_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER'
| |-ElaboratedType 0x55887c1e1cd0 'struct EFI_ACPI_3_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER' sugar
| | `-RecordType 0x55887c1e1b00 'EFI_ACPI_3_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER'
| |   `-Record 0x55887c1e1a80 ''
| `-FullComment 0x55887c4188d0 <line:508:4, line:509:50>
|   `-ParagraphComment 0x55887c4188a0 <line:508:4, line:509:50>
|     |-TextComment 0x55887c418850 <line:508:4, col:64> Text=" System Resource Affinity Table (SRAT.  The rest of the table"
|     `-TextComment 0x55887c418870 <line:509:4, col:50> Text=" must be defined in a platform specific manner."
|-RecordDecl 0x55887c1e1df0 <line:533:9, line:542:1> line:533:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1e1e90 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4189a0 <line:531:4, col:60>
| | `-ParagraphComment 0x55887c418970 <col:4, col:60>
| |   `-TextComment 0x55887c418940 <col:4, col:60> Text=" Processor Local APIC/SAPIC Affinity Structure Definition"
| |-FieldDecl 0x55887c1e1ef8 <line:534:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e1f58 <line:535:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e1fb8 <line:536:3, col:13> col:13 ProximityDomain7To0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e2018 <line:537:3, col:13> col:13 ApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e2078 <line:538:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e20d8 <line:539:3, col:13> col:13 LocalSapicEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e2188 <line:540:3, col:35> col:13 ProximityDomain31To8 'UINT8[3]'
| `-FieldDecl 0x55887c1e2238 <line:541:3, col:23> col:13 Reserved 'UINT8[4]'
|-TypedefDecl 0x55887c1e22e8 <line:533:1, line:542:3> col:3 EFI_ACPI_3_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE 'struct EFI_ACPI_3_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE':'EFI_ACPI_3_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE'
| |-ElaboratedType 0x55887c1e2290 'struct EFI_ACPI_3_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE' sugar
| | `-RecordType 0x55887c1e1e70 'EFI_ACPI_3_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE'
| |   `-Record 0x55887c1e1df0 ''
| `-FullComment 0x55887c418a70 <line:531:4, col:60>
|   `-ParagraphComment 0x55887c418a40 <col:4, col:60>
|     `-TextComment 0x55887c418a10 <col:4, col:60> Text=" Processor Local APIC/SAPIC Affinity Structure Definition"
|-RecordDecl 0x55887c1e23b0 <line:552:9, line:564:1> line:552:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1e2450 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c418b40 <line:550:4, col:40>
| | `-ParagraphComment 0x55887c418b10 <col:4, col:40>
| |   `-TextComment 0x55887c418ae0 <col:4, col:40> Text=" Memory Affinity Structure Definition"
| |-FieldDecl 0x55887c1e24b8 <line:553:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e2518 <line:554:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e2578 <line:555:3, col:13> col:13 ProximityDomain 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e25d8 <line:556:3, col:13> col:13 Reserved1 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1e2638 <line:557:3, col:13> col:13 AddressBaseLow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e2698 <line:558:3, col:13> col:13 AddressBaseHigh 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e26f8 <line:559:3, col:13> col:13 LengthLow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e37a0 <line:560:3, col:13> col:13 LengthHigh 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e3800 <line:561:3, col:13> col:13 Reserved2 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e3860 <line:562:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1e38c0 <line:563:3, col:13> col:13 Reserved3 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1e3968 <line:552:1, line:564:3> col:3 EFI_ACPI_3_0_MEMORY_AFFINITY_STRUCTURE 'struct EFI_ACPI_3_0_MEMORY_AFFINITY_STRUCTURE':'EFI_ACPI_3_0_MEMORY_AFFINITY_STRUCTURE'
| |-ElaboratedType 0x55887c1e3910 'struct EFI_ACPI_3_0_MEMORY_AFFINITY_STRUCTURE' sugar
| | `-RecordType 0x55887c1e2430 'EFI_ACPI_3_0_MEMORY_AFFINITY_STRUCTURE'
| |   `-Record 0x55887c1e23b0 ''
| `-FullComment 0x55887c418c10 <line:550:4, col:40>
|   `-ParagraphComment 0x55887c418be0 <col:4, col:40>
|     `-TextComment 0x55887c418bb0 <col:4, col:40> Text=" Memory Affinity Structure Definition"
|-RecordDecl 0x55887c1e3a00 <line:577:9, line:580:1> line:577:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1e3aa0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c418d00 <line:574:4, line:575:38>
| | `-ParagraphComment 0x55887c418cd0 <line:574:4, line:575:38>
| |   |-TextComment 0x55887c418c80 <line:574:4, col:54> Text=" System Locality Distance Information Table (SLIT)."
| |   `-TextComment 0x55887c418ca0 <line:575:4, col:38> Text=" The rest of the table is a matrix."
| |-FieldDecl 0x55887c1e3b08 <line:578:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c1e3b68 <line:579:3, col:34> col:34 NumberOfSystemLocalities 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1e3c18 <line:577:1, line:580:3> col:3 EFI_ACPI_3_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER 'struct EFI_ACPI_3_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER':'EFI_ACPI_3_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER'
| |-ElaboratedType 0x55887c1e3bc0 'struct EFI_ACPI_3_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c1e3a80 'EFI_ACPI_3_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER'
| |   `-Record 0x55887c1e3a00 ''
| `-FullComment 0x55887c418df0 <line:574:4, line:575:38>
|   `-ParagraphComment 0x55887c418dc0 <line:574:4, line:575:38>
|     |-TextComment 0x55887c418d70 <line:574:4, col:54> Text=" System Locality Distance Information Table (SLIT)."
|     `-TextComment 0x55887c418d90 <line:575:4, col:38> Text=" The rest of the table is a matrix."
|-RecordDecl 0x55887c1e41d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/Acpi40.h:21:9, line:27:1> line:21:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1e4280 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c418ec0 <line:19:4, col:45>
| | `-ParagraphComment 0x55887c418e90 <col:4, col:45>
| |   `-TextComment 0x55887c418e60 <col:4, col:45> Text=" ACPI 4.0 Generic Address Space definition"
| |-FieldDecl 0x55887c1e42e8 <line:22:3, col:13> col:13 AddressSpaceId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e4348 <line:23:3, col:13> col:13 RegisterBitWidth 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e43a8 <line:24:3, col:13> col:13 RegisterBitOffset 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e4408 <line:25:3, col:13> col:13 AccessSize 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1e4468 <line:26:3, col:13> col:13 Address 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1e4518 <line:21:1, line:27:3> col:3 referenced EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE 'struct EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE'
| |-ElaboratedType 0x55887c1e44c0 'struct EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE' sugar
| | `-RecordType 0x55887c1e4260 'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE'
| |   `-Record 0x55887c1e41d8 ''
| `-FullComment 0x55887c418f90 <line:19:4, col:45>
|   `-ParagraphComment 0x55887c418f60 <col:4, col:45>
|     `-TextComment 0x55887c418f30 <col:4, col:45> Text=" ACPI 4.0 Generic Address Space definition"
|-RecordDecl 0x55887c1e45b0 <line:55:9, line:65:1> line:55:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1e4650 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c419060 <line:53:4, col:45>
| | `-ParagraphComment 0x55887c419030 <col:4, col:45>
| |   `-TextComment 0x55887c419000 <col:4, col:45> Text=" Root System Description Pointer Structure"
| |-FieldDecl 0x55887c1e46b8 <line:56:3, col:13> col:13 Signature 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1e4718 <line:57:3, col:13> col:13 Checksum 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e47c8 <line:58:3, col:20> col:13 OemId 'UINT8[6]'
| |-FieldDecl 0x55887c1e4828 <line:59:3, col:13> col:13 Revision 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e4888 <line:60:3, col:13> col:13 RsdtAddress 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e48e8 <line:61:3, col:13> col:13 Length 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e4948 <line:62:3, col:13> col:13 XsdtAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1e49a8 <line:63:3, col:13> col:13 ExtendedChecksum 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1e4a58 <line:64:3, col:23> col:13 Reserved 'UINT8[3]'
|-TypedefDecl 0x55887c1e4b08 <line:55:1, line:65:3> col:3 EFI_ACPI_4_0_ROOT_SYSTEM_DESCRIPTION_POINTER 'struct EFI_ACPI_4_0_ROOT_SYSTEM_DESCRIPTION_POINTER':'EFI_ACPI_4_0_ROOT_SYSTEM_DESCRIPTION_POINTER'
| |-ElaboratedType 0x55887c1e4ab0 'struct EFI_ACPI_4_0_ROOT_SYSTEM_DESCRIPTION_POINTER' sugar
| | `-RecordType 0x55887c1e4630 'EFI_ACPI_4_0_ROOT_SYSTEM_DESCRIPTION_POINTER'
| |   `-Record 0x55887c1e45b0 ''
| `-FullComment 0x55887c419130 <line:53:4, col:45>
|   `-ParagraphComment 0x55887c419100 <col:4, col:45>
|     `-TextComment 0x55887c4190d0 <col:4, col:45> Text=" Root System Description Pointer Structure"
|-RecordDecl 0x55887c1e4c00 <line:76:9, line:79:1> line:76:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1e4ca0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c419220 <line:73:4, line:74:35>
| | `-ParagraphComment 0x55887c4191f0 <line:73:4, line:74:35>
| |   |-TextComment 0x55887c4191a0 <line:73:4, col:75> Text=" Common table header, this prefaces all ACPI tables, including FACS, but"
| |   `-TextComment 0x55887c4191c0 <line:74:4, col:35> Text=" excluding the RSD PTR structure"
| |-FieldDecl 0x55887c1e4d08 <line:77:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1e4d68 <line:78:3, col:13> col:13 Length 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1e4e18 <line:76:1, line:79:3> col:3 EFI_ACPI_4_0_COMMON_HEADER 'struct EFI_ACPI_4_0_COMMON_HEADER':'EFI_ACPI_4_0_COMMON_HEADER'
| |-ElaboratedType 0x55887c1e4dc0 'struct EFI_ACPI_4_0_COMMON_HEADER' sugar
| | `-RecordType 0x55887c1e4c80 'EFI_ACPI_4_0_COMMON_HEADER'
| |   `-Record 0x55887c1e4c00 ''
| `-FullComment 0x55887c419310 <line:73:4, line:74:35>
|   `-ParagraphComment 0x55887c4192e0 <line:73:4, line:74:35>
|     |-TextComment 0x55887c419290 <line:73:4, col:75> Text=" Common table header, this prefaces all ACPI tables, including FACS, but"
|     `-TextComment 0x55887c4192b0 <line:74:4, col:35> Text=" excluding the RSD PTR structure"
|-RecordDecl 0x55887c1e4f10 <line:106:9, line:159:1> line:106:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1e4fb0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4193e0 <line:104:4, col:49>
| | `-ParagraphComment 0x55887c4193b0 <col:4, col:49>
| |   `-TextComment 0x55887c419380 <col:4, col:49> Text=" Fixed ACPI Description Table Structure (FADT)"
| |-FieldDecl 0x55887c1e5018 <line:107:3, col:45> col:45 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1e5078 <line:108:3, col:45> col:45 FirmwareCtrl 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e50d8 <line:109:3, col:45> col:45 Dsdt 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e5138 <line:110:3, col:45> col:45 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e5198 <line:111:3, col:45> col:45 PreferredPmProfile 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e51f8 <line:112:3, col:45> col:45 SciInt 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1e5258 <line:113:3, col:45> col:45 SmiCmd 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e52b8 <line:114:3, col:45> col:45 AcpiEnable 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e5318 <line:115:3, col:45> col:45 AcpiDisable 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e5378 <line:116:3, col:45> col:45 S4BiosReq 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e53d8 <line:117:3, col:45> col:45 PstateCnt 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e5438 <line:118:3, col:45> col:45 Pm1aEvtBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e5498 <line:119:3, col:45> col:45 Pm1bEvtBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e54f8 <line:120:3, col:45> col:45 Pm1aCntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e5558 <line:121:3, col:45> col:45 Pm1bCntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e55b8 <line:122:3, col:45> col:45 Pm2CntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e5618 <line:123:3, col:45> col:45 PmTmrBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e5678 <line:124:3, col:45> col:45 Gpe0Blk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e56d8 <line:125:3, col:45> col:45 Gpe1Blk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e5738 <line:126:3, col:45> col:45 Pm1EvtLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e87e0 <line:127:3, col:45> col:45 Pm1CntLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e8840 <line:128:3, col:45> col:45 Pm2CntLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e88a0 <line:129:3, col:45> col:45 PmTmrLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e8900 <line:130:3, col:45> col:45 Gpe0BlkLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e8960 <line:131:3, col:45> col:45 Gpe1BlkLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e89c0 <line:132:3, col:45> col:45 Gpe1Base 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e8a20 <line:133:3, col:45> col:45 CstCnt 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e8a80 <line:134:3, col:45> col:45 PLvl2Lat 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1e8ae0 <line:135:3, col:45> col:45 PLvl3Lat 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1e8b40 <line:136:3, col:45> col:45 FlushSize 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1e8ba0 <line:137:3, col:45> col:45 FlushStride 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1e8c00 <line:138:3, col:45> col:45 DutyOffset 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e8c60 <line:139:3, col:45> col:45 DutyWidth 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e8cc0 <line:140:3, col:45> col:45 DayAlrm 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e8d20 <line:141:3, col:45> col:45 MonAlrm 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e8d80 <line:142:3, col:45> col:45 Century 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e8de0 <line:143:3, col:45> col:45 IaPcBootArch 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1e8e40 <line:144:3, col:45> col:45 Reserved1 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e8ea0 <line:145:3, col:45> col:45 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e8f20 <line:146:3, col:45> col:45 ResetReg 'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1e8f80 <line:147:3, col:45> col:45 ResetValue 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e9030 <line:148:3, col:56> col:45 Reserved2 'UINT8[3]'
| |-FieldDecl 0x55887c1e9090 <line:149:3, col:45> col:45 XFirmwareCtrl 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1e90f0 <line:150:3, col:45> col:45 XDsdt 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1e9150 <line:151:3, col:45> col:45 XPm1aEvtBlk 'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1e91b0 <line:152:3, col:45> col:45 XPm1bEvtBlk 'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1e9210 <line:153:3, col:45> col:45 XPm1aCntBlk 'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1e9270 <line:154:3, col:45> col:45 XPm1bCntBlk 'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1e92d0 <line:155:3, col:45> col:45 XPm2CntBlk 'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1e9330 <line:156:3, col:45> col:45 XPmTmrBlk 'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1e9390 <line:157:3, col:45> col:45 XGpe0Blk 'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE'
| `-FieldDecl 0x55887c1e93f0 <line:158:3, col:45> col:45 XGpe1Blk 'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE'
|-TypedefDecl 0x55887c1e9498 <line:106:1, line:159:3> col:3 EFI_ACPI_4_0_FIXED_ACPI_DESCRIPTION_TABLE 'struct EFI_ACPI_4_0_FIXED_ACPI_DESCRIPTION_TABLE':'EFI_ACPI_4_0_FIXED_ACPI_DESCRIPTION_TABLE'
| |-ElaboratedType 0x55887c1e9440 'struct EFI_ACPI_4_0_FIXED_ACPI_DESCRIPTION_TABLE' sugar
| | `-RecordType 0x55887c1e4f90 'EFI_ACPI_4_0_FIXED_ACPI_DESCRIPTION_TABLE'
| |   `-Record 0x55887c1e4f10 ''
| `-FullComment 0x55887c4194b0 <line:104:4, col:49>
|   `-ParagraphComment 0x55887c419480 <col:4, col:49>
|     `-TextComment 0x55887c419450 <col:4, col:49> Text=" Fixed ACPI Description Table Structure (FADT)"
|-RecordDecl 0x55887c1e9560 <line:216:9, line:228:1> line:216:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1e9600 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c419580 <line:214:4, col:35>
| | `-ParagraphComment 0x55887c419550 <col:4, col:35>
| |   `-TextComment 0x55887c419520 <col:4, col:35> Text=" Firmware ACPI Control Structure"
| |-FieldDecl 0x55887c1e9668 <line:217:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e96c8 <line:218:3, col:13> col:13 Length 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e9728 <line:219:3, col:13> col:13 HardwareSignature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e9788 <line:220:3, col:13> col:13 FirmwareWakingVector 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e97e8 <line:221:3, col:13> col:13 GlobalLock 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e9848 <line:222:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1e98a8 <line:223:3, col:13> col:13 XFirmwareWakingVector 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1e9908 <line:224:3, col:13> col:13 Version 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1e99b8 <line:225:3, col:24> col:13 Reserved0 'UINT8[3]'
| |-FieldDecl 0x55887c1e9a18 <line:226:3, col:13> col:13 OspmFlags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1e9b48 <line:227:3, col:25> col:13 Reserved1 'UINT8[24]'
|-TypedefDecl 0x55887c1e9bf8 <line:216:1, line:228:3> col:3 EFI_ACPI_4_0_FIRMWARE_ACPI_CONTROL_STRUCTURE 'struct EFI_ACPI_4_0_FIRMWARE_ACPI_CONTROL_STRUCTURE':'EFI_ACPI_4_0_FIRMWARE_ACPI_CONTROL_STRUCTURE'
| |-ElaboratedType 0x55887c1e9ba0 'struct EFI_ACPI_4_0_FIRMWARE_ACPI_CONTROL_STRUCTURE' sugar
| | `-RecordType 0x55887c1e95e0 'EFI_ACPI_4_0_FIRMWARE_ACPI_CONTROL_STRUCTURE'
| |   `-Record 0x55887c1e9560 ''
| `-FullComment 0x55887c419650 <line:214:4, col:35>
|   `-ParagraphComment 0x55887c419620 <col:4, col:35>
|     `-TextComment 0x55887c4195f0 <col:4, col:35> Text=" Firmware ACPI Control Structure"
|-RecordDecl 0x55887c1e9d20 <line:262:9, line:266:1> line:262:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1e9dc0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c419740 <line:259:4, line:260:50>
| | `-ParagraphComment 0x55887c419710 <line:259:4, line:260:50>
| |   |-TextComment 0x55887c4196c0 <line:259:4, col:77> Text=" Multiple APIC Description Table header definition.  The rest of the table"
| |   `-TextComment 0x55887c4196e0 <line:260:4, col:50> Text=" must be defined in a platform specific manner."
| |-FieldDecl 0x55887c1e9e28 <line:263:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1e9e88 <line:264:3, col:34> col:34 LocalApicAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1e9ee8 <line:265:3, col:34> col:34 Flags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1e9f98 <line:262:1, line:266:3> col:3 EFI_ACPI_4_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER 'struct EFI_ACPI_4_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER':'EFI_ACPI_4_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER'
| |-ElaboratedType 0x55887c1e9f40 'struct EFI_ACPI_4_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c1e9da0 'EFI_ACPI_4_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER'
| |   `-Record 0x55887c1e9d20 ''
| `-FullComment 0x55887c419830 <line:259:4, line:260:50>
|   `-ParagraphComment 0x55887c419800 <line:259:4, line:260:50>
|     |-TextComment 0x55887c4197b0 <line:259:4, col:77> Text=" Multiple APIC Description Table header definition.  The rest of the table"
|     `-TextComment 0x55887c4197d0 <line:260:4, col:50> Text=" must be defined in a platform specific manner."
|-RecordDecl 0x55887c1ea090 <line:303:9, line:309:1> line:303:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1ea130 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c419900 <line:301:4, col:45>
| | `-ParagraphComment 0x55887c4198d0 <col:4, col:45>
| |   `-TextComment 0x55887c4198a0 <col:4, col:45> Text=" Processor Local APIC Structure Definition"
| |-FieldDecl 0x55887c1ea198 <line:304:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ea1f8 <line:305:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ea258 <line:306:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ea2b8 <line:307:3, col:13> col:13 ApicId 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1ea318 <line:308:3, col:13> col:13 Flags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1ea3c8 <line:303:1, line:309:3> col:3 EFI_ACPI_4_0_PROCESSOR_LOCAL_APIC_STRUCTURE 'struct EFI_ACPI_4_0_PROCESSOR_LOCAL_APIC_STRUCTURE':'EFI_ACPI_4_0_PROCESSOR_LOCAL_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c1ea370 'struct EFI_ACPI_4_0_PROCESSOR_LOCAL_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1ea110 'EFI_ACPI_4_0_PROCESSOR_LOCAL_APIC_STRUCTURE'
| |   `-Record 0x55887c1ea090 ''
| `-FullComment 0x55887c4199d0 <line:301:4, col:45>
|   `-ParagraphComment 0x55887c4199a0 <col:4, col:45>
|     `-TextComment 0x55887c419970 <col:4, col:45> Text=" Processor Local APIC Structure Definition"
|-RecordDecl 0x55887c1ea490 <line:319:9, line:326:1> line:319:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1ea530 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c419aa0 <line:317:4, col:21>
| | `-ParagraphComment 0x55887c419a70 <col:4, col:21>
| |   `-TextComment 0x55887c419a40 <col:4, col:21> Text=" IO APIC Structure"
| |-FieldDecl 0x55887c1ea598 <line:320:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ea5f8 <line:321:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ea658 <line:322:3, col:13> col:13 IoApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ea6b8 <line:323:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ea718 <line:324:3, col:13> col:13 IoApicAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1ea778 <line:325:3, col:13> col:13 GlobalSystemInterruptBase 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1ed878 <line:319:1, line:326:3> col:3 EFI_ACPI_4_0_IO_APIC_STRUCTURE 'struct EFI_ACPI_4_0_IO_APIC_STRUCTURE':'EFI_ACPI_4_0_IO_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c1ed820 'struct EFI_ACPI_4_0_IO_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1ea510 'EFI_ACPI_4_0_IO_APIC_STRUCTURE'
| |   `-Record 0x55887c1ea490 ''
| `-FullComment 0x55887c419b70 <line:317:4, col:21>
|   `-ParagraphComment 0x55887c419b40 <col:4, col:21>
|     `-TextComment 0x55887c419b10 <col:4, col:21> Text=" IO APIC Structure"
|-RecordDecl 0x55887c1ed910 <line:331:9, line:338:1> line:331:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1ed9b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c419c40 <line:329:4, col:39>
| | `-ParagraphComment 0x55887c419c10 <col:4, col:39>
| |   `-TextComment 0x55887c419be0 <col:4, col:39> Text=" Interrupt Source Override Structure"
| |-FieldDecl 0x55887c1eda18 <line:332:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1eda78 <line:333:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1edad8 <line:334:3, col:13> col:13 Bus 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1edb38 <line:335:3, col:13> col:13 Source 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1edb98 <line:336:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1edbf8 <line:337:3, col:13> col:13 Flags 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c1edca8 <line:331:1, line:338:3> col:3 EFI_ACPI_4_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE 'struct EFI_ACPI_4_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE':'EFI_ACPI_4_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE'
| |-ElaboratedType 0x55887c1edc50 'struct EFI_ACPI_4_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE' sugar
| | `-RecordType 0x55887c1ed990 'EFI_ACPI_4_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE'
| |   `-Record 0x55887c1ed910 ''
| `-FullComment 0x55887c419d10 <line:329:4, col:39>
|   `-ParagraphComment 0x55887c419ce0 <col:4, col:39>
|     `-TextComment 0x55887c419cb0 <col:4, col:39> Text=" Interrupt Source Override Structure"
|-RecordDecl 0x55887c1edd40 <line:343:9, line:355:1> line:343:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1edde0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c419de0 <line:341:4, col:51>
| | `-ParagraphComment 0x55887c419db0 <col:4, col:51>
| |   `-TextComment 0x55887c419d80 <col:4, col:51> Text=" Platform Interrupt Sources Structure Definition"
| |-FieldDecl 0x55887c1ede48 <line:344:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1edea8 <line:345:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1edf08 <line:346:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1edf68 <line:347:3, col:13> col:13 InterruptType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1edfc8 <line:348:3, col:13> col:13 ProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ee028 <line:349:3, col:13> col:13 ProcessorEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ee088 <line:350:3, col:13> col:13 IoSapicVector 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ee0e8 <line:351:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1ee148 <line:352:3, col:13> col:13 PlatformInterruptSourceFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1ee1a8 <line:353:3, col:13> col:13 CpeiProcessorOverride 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1ee258 <line:354:3, col:24> col:13 Reserved 'UINT8[31]'
|-TypedefDecl 0x55887c1ee308 <line:343:1, line:355:3> col:3 EFI_ACPI_4_0_PLATFORM_INTERRUPT_APIC_STRUCTURE 'struct EFI_ACPI_4_0_PLATFORM_INTERRUPT_APIC_STRUCTURE':'EFI_ACPI_4_0_PLATFORM_INTERRUPT_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c1ee2b0 'struct EFI_ACPI_4_0_PLATFORM_INTERRUPT_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1eddc0 'EFI_ACPI_4_0_PLATFORM_INTERRUPT_APIC_STRUCTURE'
| |   `-Record 0x55887c1edd40 ''
| `-FullComment 0x55887c419eb0 <line:341:4, col:51>
|   `-ParagraphComment 0x55887c419e80 <col:4, col:51>
|     `-TextComment 0x55887c419e50 <col:4, col:51> Text=" Platform Interrupt Sources Structure Definition"
|-RecordDecl 0x55887c1ee3a0 <line:367:9, line:372:1> line:367:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1ee440 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c419f80 <line:365:4, col:43>
| | `-ParagraphComment 0x55887c419f50 <col:4, col:43>
| |   `-TextComment 0x55887c419f20 <col:4, col:43> Text=" Non-Maskable Interrupt Source Structure"
| |-FieldDecl 0x55887c1ee4a8 <line:368:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ee508 <line:369:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ee568 <line:370:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c1ee5c8 <line:371:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1ee678 <line:367:1, line:372:3> col:3 EFI_ACPI_4_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE 'struct EFI_ACPI_4_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE':'EFI_ACPI_4_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE'
| |-ElaboratedType 0x55887c1ee620 'struct EFI_ACPI_4_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE' sugar
| | `-RecordType 0x55887c1ee420 'EFI_ACPI_4_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE'
| |   `-Record 0x55887c1ee3a0 ''
| `-FullComment 0x55887c41a050 <line:365:4, col:43>
|   `-ParagraphComment 0x55887c41a020 <col:4, col:43>
|     `-TextComment 0x55887c419ff0 <col:4, col:43> Text=" Non-Maskable Interrupt Source Structure"
|-RecordDecl 0x55887c1ee710 <line:377:9, line:383:1> line:377:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1ee7b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41a120 <line:375:4, col:28>
| | `-ParagraphComment 0x55887c41a0f0 <col:4, col:28>
| |   `-TextComment 0x55887c41a0c0 <col:4, col:28> Text=" Local APIC NMI Structure"
| |-FieldDecl 0x55887c1ee818 <line:378:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ee878 <line:379:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ee8d8 <line:380:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ee938 <line:381:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c1ee998 <line:382:3, col:13> col:13 LocalApicLint 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c1eea48 <line:377:1, line:383:3> col:3 EFI_ACPI_4_0_LOCAL_APIC_NMI_STRUCTURE 'struct EFI_ACPI_4_0_LOCAL_APIC_NMI_STRUCTURE':'EFI_ACPI_4_0_LOCAL_APIC_NMI_STRUCTURE'
| |-ElaboratedType 0x55887c1ee9f0 'struct EFI_ACPI_4_0_LOCAL_APIC_NMI_STRUCTURE' sugar
| | `-RecordType 0x55887c1ee790 'EFI_ACPI_4_0_LOCAL_APIC_NMI_STRUCTURE'
| |   `-Record 0x55887c1ee710 ''
| `-FullComment 0x55887c41a1f0 <line:375:4, col:28>
|   `-ParagraphComment 0x55887c41a1c0 <col:4, col:28>
|     `-TextComment 0x55887c41a190 <col:4, col:28> Text=" Local APIC NMI Structure"
|-RecordDecl 0x55887c1eeae0 <line:388:9, line:393:1> line:388:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1eeb80 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41a2c0 <line:386:4, col:41>
| | `-ParagraphComment 0x55887c41a290 <col:4, col:41>
| |   `-TextComment 0x55887c41a260 <col:4, col:41> Text=" Local APIC Address Override Structure"
| |-FieldDecl 0x55887c1eebe8 <line:389:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1eec48 <line:390:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1eeca8 <line:391:3, col:13> col:13 Reserved 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c1eed08 <line:392:3, col:13> col:13 LocalApicAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1eedb8 <line:388:1, line:393:3> col:3 EFI_ACPI_4_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE 'struct EFI_ACPI_4_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE':'EFI_ACPI_4_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE'
| |-ElaboratedType 0x55887c1eed60 'struct EFI_ACPI_4_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE' sugar
| | `-RecordType 0x55887c1eeb60 'EFI_ACPI_4_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE'
| |   `-Record 0x55887c1eeae0 ''
| `-FullComment 0x55887c41a390 <line:386:4, col:41>
|   `-ParagraphComment 0x55887c41a360 <col:4, col:41>
|     `-TextComment 0x55887c41a330 <col:4, col:41> Text=" Local APIC Address Override Structure"
|-RecordDecl 0x55887c1eee50 <line:398:9, line:405:1> line:398:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1eeef0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41a460 <line:396:4, col:22>
| | `-ParagraphComment 0x55887c41a430 <col:4, col:22>
| |   `-TextComment 0x55887c41a400 <col:4, col:22> Text=" IO SAPIC Structure"
| |-FieldDecl 0x55887c1eef58 <line:399:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1eefb8 <line:400:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ef018 <line:401:3, col:13> col:13 IoApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ef078 <line:402:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ef0d8 <line:403:3, col:13> col:13 GlobalSystemInterruptBase 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1ef138 <line:404:3, col:13> col:13 IoSapicAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1ef1e8 <line:398:1, line:405:3> col:3 EFI_ACPI_4_0_IO_SAPIC_STRUCTURE 'struct EFI_ACPI_4_0_IO_SAPIC_STRUCTURE':'EFI_ACPI_4_0_IO_SAPIC_STRUCTURE'
| |-ElaboratedType 0x55887c1ef190 'struct EFI_ACPI_4_0_IO_SAPIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1eeed0 'EFI_ACPI_4_0_IO_SAPIC_STRUCTURE'
| |   `-Record 0x55887c1eee50 ''
| `-FullComment 0x55887c41a530 <line:396:4, col:22>
|   `-ParagraphComment 0x55887c41a500 <col:4, col:22>
|     `-TextComment 0x55887c41a4d0 <col:4, col:22> Text=" IO SAPIC Structure"
|-RecordDecl 0x55887c1ef280 <line:411:9, line:420:1> line:411:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1ef320 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41a620 <line:408:4, line:409:86>
| | `-ParagraphComment 0x55887c41a5f0 <line:408:4, line:409:86>
| |   |-TextComment 0x55887c41a5a0 <line:408:4, col:25> Text=" Local SAPIC Structure"
| |   `-TextComment 0x55887c41a5c0 <line:409:4, col:86> Text=" This struct followed by a null-terminated ASCII string - ACPI Processor UID String"
| |-FieldDecl 0x55887c1ef388 <line:412:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ef3e8 <line:413:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ef448 <line:414:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ef4a8 <line:415:3, col:13> col:13 LocalSapicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ef508 <line:416:3, col:13> col:13 LocalSapicEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ef5b8 <line:417:3, col:23> col:13 Reserved 'UINT8[3]'
| |-FieldDecl 0x55887c1ef618 <line:418:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1ef678 <line:419:3, col:13> col:13 ACPIProcessorUIDValue 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1ef728 <line:411:1, line:420:3> col:3 EFI_ACPI_4_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE 'struct EFI_ACPI_4_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE':'EFI_ACPI_4_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE'
| |-ElaboratedType 0x55887c1ef6d0 'struct EFI_ACPI_4_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1ef300 'EFI_ACPI_4_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE'
| |   `-Record 0x55887c1ef280 ''
| `-FullComment 0x55887c41a710 <line:408:4, line:409:86>
|   `-ParagraphComment 0x55887c41a6e0 <line:408:4, line:409:86>
|     |-TextComment 0x55887c41a690 <line:408:4, col:25> Text=" Local SAPIC Structure"
|     `-TextComment 0x55887c41a6b0 <line:409:4, col:86> Text=" This struct followed by a null-terminated ASCII string - ACPI Processor UID String"
|-RecordDecl 0x55887c1ef830 <line:425:9, line:435:1> line:425:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1ef8d0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41a7e0 <line:423:4, col:40>
| | `-ParagraphComment 0x55887c41a7b0 <col:4, col:40>
| |   `-TextComment 0x55887c41a780 <col:4, col:40> Text=" Platform Interrupt Sources Structure"
| |-FieldDecl 0x55887c1ef938 <line:426:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ef998 <line:427:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ef9f8 <line:428:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1efa58 <line:429:3, col:13> col:13 InterruptType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1efab8 <line:430:3, col:13> col:13 ProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1efb18 <line:431:3, col:13> col:13 ProcessorEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1efb78 <line:432:3, col:13> col:13 IoSapicVector 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1efbd8 <line:433:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1efc38 <line:434:3, col:13> col:13 PlatformInterruptSourceFlags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1efce8 <line:425:1, line:435:3> col:3 EFI_ACPI_4_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE 'struct EFI_ACPI_4_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE':'EFI_ACPI_4_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE'
| |-ElaboratedType 0x55887c1efc90 'struct EFI_ACPI_4_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE' sugar
| | `-RecordType 0x55887c1ef8b0 'EFI_ACPI_4_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE'
| |   `-Record 0x55887c1ef830 ''
| `-FullComment 0x55887c41a8b0 <line:423:4, col:40>
|   `-ParagraphComment 0x55887c41a880 <col:4, col:40>
|     `-TextComment 0x55887c41a850 <col:4, col:40> Text=" Platform Interrupt Sources Structure"
|-RecordDecl 0x55887c1efdb0 <line:446:9, line:453:1> line:446:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1efe50 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41a980 <line:444:4, col:47>
| | `-ParagraphComment 0x55887c41a950 <col:4, col:47>
| |   `-TextComment 0x55887c41a920 <col:4, col:47> Text=" Processor Local x2APIC Structure Definition"
| |-FieldDecl 0x55887c1efeb8 <line:447:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1eff18 <line:448:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1effc8 <line:449:3, col:23> col:13 Reserved 'UINT8[2]'
| |-FieldDecl 0x55887c1f0028 <line:450:3, col:13> col:13 X2ApicId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f0088 <line:451:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1f00e8 <line:452:3, col:13> col:13 AcpiProcessorUid 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1f0198 <line:446:1, line:453:3> col:3 EFI_ACPI_4_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE 'struct EFI_ACPI_4_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE':'EFI_ACPI_4_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE'
| |-ElaboratedType 0x55887c1f0140 'struct EFI_ACPI_4_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1efe30 'EFI_ACPI_4_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE'
| |   `-Record 0x55887c1efdb0 ''
| `-FullComment 0x55887c41aa50 <line:444:4, col:47>
|   `-ParagraphComment 0x55887c41aa20 <col:4, col:47>
|     `-TextComment 0x55887c41a9f0 <col:4, col:47> Text=" Processor Local x2APIC Structure Definition"
|-RecordDecl 0x55887c1f0230 <line:458:9, line:465:1> line:458:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f02d0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41ab20 <line:456:4, col:30>
| | `-ParagraphComment 0x55887c41aaf0 <col:4, col:30>
| |   `-TextComment 0x55887c41aac0 <col:4, col:30> Text=" Local x2APIC NMI Structure"
| |-FieldDecl 0x55887c1f0338 <line:459:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f0398 <line:460:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f03f8 <line:461:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1f0458 <line:462:3, col:13> col:13 AcpiProcessorUid 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f04b8 <line:463:3, col:13> col:13 LocalX2ApicLint 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1f0568 <line:464:3, col:23> col:13 Reserved 'UINT8[3]'
|-TypedefDecl 0x55887c1f0618 <line:458:1, line:465:3> col:3 EFI_ACPI_4_0_LOCAL_X2APIC_NMI_STRUCTURE 'struct EFI_ACPI_4_0_LOCAL_X2APIC_NMI_STRUCTURE':'EFI_ACPI_4_0_LOCAL_X2APIC_NMI_STRUCTURE'
| |-ElaboratedType 0x55887c1f05c0 'struct EFI_ACPI_4_0_LOCAL_X2APIC_NMI_STRUCTURE' sugar
| | `-RecordType 0x55887c1f02b0 'EFI_ACPI_4_0_LOCAL_X2APIC_NMI_STRUCTURE'
| |   `-Record 0x55887c1f0230 ''
| `-FullComment 0x55887c41abf0 <line:456:4, col:30>
|   `-ParagraphComment 0x55887c41abc0 <col:4, col:30>
|     `-TextComment 0x55887c41ab90 <col:4, col:30> Text=" Local x2APIC NMI Structure"
|-RecordDecl 0x55887c1f06b0 <line:470:9, line:475:1> line:470:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f0750 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41acc0 <line:468:4, col:42>
| | `-ParagraphComment 0x55887c41ac90 <col:4, col:42>
| |   `-TextComment 0x55887c41ac60 <col:4, col:42> Text=" Smart Battery Description Table (SBST)"
| |-FieldDecl 0x55887c1f07b8 <line:471:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1f0818 <line:472:3, col:34> col:34 WarningEnergyLevel 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f0878 <line:473:3, col:34> col:34 LowEnergyLevel 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1f08d8 <line:474:3, col:34> col:34 CriticalEnergyLevel 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1f0988 <line:470:1, line:475:3> col:3 EFI_ACPI_4_0_SMART_BATTERY_DESCRIPTION_TABLE 'struct EFI_ACPI_4_0_SMART_BATTERY_DESCRIPTION_TABLE':'EFI_ACPI_4_0_SMART_BATTERY_DESCRIPTION_TABLE'
| |-ElaboratedType 0x55887c1f0930 'struct EFI_ACPI_4_0_SMART_BATTERY_DESCRIPTION_TABLE' sugar
| | `-RecordType 0x55887c1f0730 'EFI_ACPI_4_0_SMART_BATTERY_DESCRIPTION_TABLE'
| |   `-Record 0x55887c1f06b0 ''
| `-FullComment 0x55887c41ad90 <line:468:4, col:42>
|   `-ParagraphComment 0x55887c41ad60 <col:4, col:42>
|     `-TextComment 0x55887c41ad30 <col:4, col:42> Text=" Smart Battery Description Table (SBST)"
|-RecordDecl 0x55887c1f0a50 <line:487:9, line:493:1> line:487:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f0af0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41aeb0 <line:483:4, line:485:57>
| | `-ParagraphComment 0x55887c41ae80 <line:483:4, line:485:57>
| |   |-TextComment 0x55887c41ae00 <line:483:4, col:51> Text=" Embedded Controller Boot Resources Table (ECDT)"
| |   |-TextComment 0x55887c41ae20 <line:484:4, col:73> Text=" The table is followed by a null terminated ASCII string that contains"
| |   `-TextComment 0x55887c41ae40 <line:485:4, col:57> Text=" a fully qualified reference to the name space object."
| |-FieldDecl 0x55887c1f0b58 <line:488:3, col:45> col:45 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1f0bb8 <line:489:3, col:45> col:45 EcControl 'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1f0c18 <line:490:3, col:45> col:45 EcData 'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1f0c78 <line:491:3, col:45> col:45 Uid 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1f0cd8 <line:492:3, col:45> col:45 GpeBit 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c1f0d88 <line:487:1, line:493:3> col:3 EFI_ACPI_4_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE 'struct EFI_ACPI_4_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE':'EFI_ACPI_4_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE'
| |-ElaboratedType 0x55887c1f0d30 'struct EFI_ACPI_4_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE' sugar
| | `-RecordType 0x55887c1f0ad0 'EFI_ACPI_4_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE'
| |   `-Record 0x55887c1f0a50 ''
| `-FullComment 0x55887c41afd0 <line:483:4, line:485:57>
|   `-ParagraphComment 0x55887c41afa0 <line:483:4, line:485:57>
|     |-TextComment 0x55887c41af20 <line:483:4, col:51> Text=" Embedded Controller Boot Resources Table (ECDT)"
|     |-TextComment 0x55887c41af40 <line:484:4, col:73> Text=" The table is followed by a null terminated ASCII string that contains"
|     `-TextComment 0x55887c41af60 <line:485:4, col:57> Text=" a fully qualified reference to the name space object."
|-RecordDecl 0x55887c1f0e50 <line:504:9, line:508:1> line:504:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f0ef0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41b0c0 <line:501:4, line:502:50>
| | `-ParagraphComment 0x55887c41b090 <line:501:4, line:502:50>
| |   |-TextComment 0x55887c41b040 <line:501:4, col:64> Text=" System Resource Affinity Table (SRAT.  The rest of the table"
| |   `-TextComment 0x55887c41b060 <line:502:4, col:50> Text=" must be defined in a platform specific manner."
| |-FieldDecl 0x55887c1f0f58 <line:505:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1f0fb8 <line:506:3, col:34> col:34 Reserved1 'UINT32':'unsigned int'
| | `-FullComment 0x55887c41b190 <col:49, col:65>
| |   `-ParagraphComment 0x55887c41b160 <col:49, col:65>
| |     `-TextComment 0x55887c41b130 <col:49, col:65> Text=" Must be set to 1"
| `-FieldDecl 0x55887c1f1048 <line:507:3, col:34> col:34 Reserved2 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1f10f8 <line:504:1, line:508:3> col:3 EFI_ACPI_4_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER 'struct EFI_ACPI_4_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER':'EFI_ACPI_4_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER'
| |-ElaboratedType 0x55887c1f10a0 'struct EFI_ACPI_4_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER' sugar
| | `-RecordType 0x55887c1f0ed0 'EFI_ACPI_4_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER'
| |   `-Record 0x55887c1f0e50 ''
| `-FullComment 0x55887c41e770 <line:501:4, line:502:50>
|   `-ParagraphComment 0x55887c41e740 <line:501:4, line:502:50>
|     |-TextComment 0x55887c41e6f0 <line:501:4, col:64> Text=" System Resource Affinity Table (SRAT.  The rest of the table"
|     `-TextComment 0x55887c41e710 <line:502:4, col:50> Text=" must be defined in a platform specific manner."
|-RecordDecl 0x55887c1f11c0 <line:527:9, line:536:1> line:527:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f1260 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41e840 <line:525:4, col:60>
| | `-ParagraphComment 0x55887c41e810 <col:4, col:60>
| |   `-TextComment 0x55887c41e7e0 <col:4, col:60> Text=" Processor Local APIC/SAPIC Affinity Structure Definition"
| |-FieldDecl 0x55887c1f12c8 <line:528:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f1328 <line:529:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f1388 <line:530:3, col:13> col:13 ProximityDomain7To0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f13e8 <line:531:3, col:13> col:13 ApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f1448 <line:532:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f14a8 <line:533:3, col:13> col:13 LocalSapicEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f1558 <line:534:3, col:35> col:13 ProximityDomain31To8 'UINT8[3]'
| `-FieldDecl 0x55887c1f15b8 <line:535:3, col:13> col:13 ClockDomain 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1f1668 <line:527:1, line:536:3> col:3 EFI_ACPI_4_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE 'struct EFI_ACPI_4_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE':'EFI_ACPI_4_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE'
| |-ElaboratedType 0x55887c1f1610 'struct EFI_ACPI_4_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE' sugar
| | `-RecordType 0x55887c1f1240 'EFI_ACPI_4_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE'
| |   `-Record 0x55887c1f11c0 ''
| `-FullComment 0x55887c41e910 <line:525:4, col:60>
|   `-ParagraphComment 0x55887c41e8e0 <col:4, col:60>
|     `-TextComment 0x55887c41e8b0 <col:4, col:60> Text=" Processor Local APIC/SAPIC Affinity Structure Definition"
|-RecordDecl 0x55887c1f1730 <line:546:9, line:558:1> line:546:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f17d0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41e9e0 <line:544:4, col:40>
| | `-ParagraphComment 0x55887c41e9b0 <col:4, col:40>
| |   `-TextComment 0x55887c41e980 <col:4, col:40> Text=" Memory Affinity Structure Definition"
| |-FieldDecl 0x55887c1f2a60 <line:547:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f2ac0 <line:548:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f2b20 <line:549:3, col:13> col:13 ProximityDomain 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f2b80 <line:550:3, col:13> col:13 Reserved1 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1f2be0 <line:551:3, col:13> col:13 AddressBaseLow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f2c40 <line:552:3, col:13> col:13 AddressBaseHigh 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f2ca0 <line:553:3, col:13> col:13 LengthLow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f2d00 <line:554:3, col:13> col:13 LengthHigh 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f2d60 <line:555:3, col:13> col:13 Reserved2 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f2dc0 <line:556:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1f2e20 <line:557:3, col:13> col:13 Reserved3 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1f2ec8 <line:546:1, line:558:3> col:3 EFI_ACPI_4_0_MEMORY_AFFINITY_STRUCTURE 'struct EFI_ACPI_4_0_MEMORY_AFFINITY_STRUCTURE':'EFI_ACPI_4_0_MEMORY_AFFINITY_STRUCTURE'
| |-ElaboratedType 0x55887c1f2e70 'struct EFI_ACPI_4_0_MEMORY_AFFINITY_STRUCTURE' sugar
| | `-RecordType 0x55887c1f17b0 'EFI_ACPI_4_0_MEMORY_AFFINITY_STRUCTURE'
| |   `-Record 0x55887c1f1730 ''
| `-FullComment 0x55887c41eab0 <line:544:4, col:40>
|   `-ParagraphComment 0x55887c41ea80 <col:4, col:40>
|     `-TextComment 0x55887c41ea50 <col:4, col:40> Text=" Memory Affinity Structure Definition"
|-RecordDecl 0x55887c1f2f60 <line:570:9, line:579:1> line:570:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f3000 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41eb80 <line:568:4, col:56>
| | `-ParagraphComment 0x55887c41eb50 <col:4, col:56>
| |   `-TextComment 0x55887c41eb20 <col:4, col:56> Text=" Processor Local x2APIC Affinity Structure Definition"
| |-FieldDecl 0x55887c1f3068 <line:571:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f30c8 <line:572:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f3178 <line:573:3, col:24> col:13 Reserved1 'UINT8[2]'
| |-FieldDecl 0x55887c1f31d8 <line:574:3, col:13> col:13 ProximityDomain 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f3238 <line:575:3, col:13> col:13 X2ApicId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f3298 <line:576:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f32f8 <line:577:3, col:13> col:13 ClockDomain 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1f33a8 <line:578:3, col:24> col:13 Reserved2 'UINT8[4]'
|-TypedefDecl 0x55887c1f3458 <line:570:1, line:579:3> col:3 EFI_ACPI_4_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE 'struct EFI_ACPI_4_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE':'EFI_ACPI_4_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE'
| |-ElaboratedType 0x55887c1f3400 'struct EFI_ACPI_4_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE' sugar
| | `-RecordType 0x55887c1f2fe0 'EFI_ACPI_4_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE'
| |   `-Record 0x55887c1f2f60 ''
| `-FullComment 0x55887c41ec50 <line:568:4, col:56>
|   `-ParagraphComment 0x55887c41ec20 <col:4, col:56>
|     `-TextComment 0x55887c41ebf0 <col:4, col:56> Text=" Processor Local x2APIC Affinity Structure Definition"
|-RecordDecl 0x55887c1f34f0 <line:585:9, line:588:1> line:585:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f3590 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41ed40 <line:582:4, line:583:38>
| | `-ParagraphComment 0x55887c41ed10 <line:582:4, line:583:38>
| |   |-TextComment 0x55887c41ecc0 <line:582:4, col:54> Text=" System Locality Distance Information Table (SLIT)."
| |   `-TextComment 0x55887c41ece0 <line:583:4, col:38> Text=" The rest of the table is a matrix."
| |-FieldDecl 0x55887c1f35f8 <line:586:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c1f3658 <line:587:3, col:34> col:34 NumberOfSystemLocalities 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1f3708 <line:585:1, line:588:3> col:3 EFI_ACPI_4_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER 'struct EFI_ACPI_4_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER':'EFI_ACPI_4_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER'
| |-ElaboratedType 0x55887c1f36b0 'struct EFI_ACPI_4_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c1f3570 'EFI_ACPI_4_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER'
| |   `-Record 0x55887c1f34f0 ''
| `-FullComment 0x55887c41ee30 <line:582:4, line:583:38>
|   `-ParagraphComment 0x55887c41ee00 <line:582:4, line:583:38>
|     |-TextComment 0x55887c41edb0 <line:582:4, col:54> Text=" System Locality Distance Information Table (SLIT)."
|     `-TextComment 0x55887c41edd0 <line:583:4, col:38> Text=" The rest of the table is a matrix."
|-RecordDecl 0x55887c1f37d0 <line:598:9, line:601:1> line:598:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f3870 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41ef00 <line:596:4, col:49>
| | `-ParagraphComment 0x55887c41eed0 <col:4, col:49>
| |   `-TextComment 0x55887c41eea0 <col:4, col:49> Text=" Corrected Platform Error Polling Table (CPEP)"
| |-FieldDecl 0x55887c1f38d8 <line:599:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c1f3988 <line:600:3, col:44> col:34 Reserved 'UINT8[8]'
|-TypedefDecl 0x55887c1f3a38 <line:598:1, line:601:3> col:3 EFI_ACPI_4_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER 'struct EFI_ACPI_4_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER':'EFI_ACPI_4_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER'
| |-ElaboratedType 0x55887c1f39e0 'struct EFI_ACPI_4_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER' sugar
| | `-RecordType 0x55887c1f3850 'EFI_ACPI_4_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER'
| |   `-Record 0x55887c1f37d0 ''
| `-FullComment 0x55887c41efd0 <line:596:4, col:49>
|   `-ParagraphComment 0x55887c41efa0 <col:4, col:49>
|     `-TextComment 0x55887c41ef70 <col:4, col:49> Text=" Corrected Platform Error Polling Table (CPEP)"
|-RecordDecl 0x55887c1f3b00 <line:616:9, line:622:1> line:616:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f3ba0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41f0a0 <line:614:4, col:67>
| | `-ParagraphComment 0x55887c41f070 <col:4, col:67>
| |   `-TextComment 0x55887c41f040 <col:4, col:67> Text=" Corrected Platform Error Polling Processor Structure Definition"
| |-FieldDecl 0x55887c1f3c08 <line:617:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f3c68 <line:618:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f3cc8 <line:619:3, col:13> col:13 ProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f3d28 <line:620:3, col:13> col:13 ProcessorEid 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1f3d88 <line:621:3, col:13> col:13 PollingInterval 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1f3e38 <line:616:1, line:622:3> col:3 EFI_ACPI_4_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE 'struct EFI_ACPI_4_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE':'EFI_ACPI_4_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE'
| |-ElaboratedType 0x55887c1f3de0 'struct EFI_ACPI_4_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE' sugar
| | `-RecordType 0x55887c1f3b80 'EFI_ACPI_4_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE'
| |   `-Record 0x55887c1f3b00 ''
| `-FullComment 0x55887c41f170 <line:614:4, col:67>
|   `-ParagraphComment 0x55887c41f140 <col:4, col:67>
|     `-TextComment 0x55887c41f110 <col:4, col:67> Text=" Corrected Platform Error Polling Processor Structure Definition"
|-RecordDecl 0x55887c1f3ed0 <line:627:9, line:633:1> line:627:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f3f70 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41f240 <line:625:4, col:47>
| | `-ParagraphComment 0x55887c41f210 <col:4, col:47>
| |   `-TextComment 0x55887c41f1e0 <col:4, col:47> Text=" Maximum System Characteristics Table (MSCT)"
| |-FieldDecl 0x55887c1f3fd8 <line:628:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1f4038 <line:629:3, col:34> col:34 OffsetProxDomInfo 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f4098 <line:630:3, col:34> col:34 MaximumNumberOfProximityDomains 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f40f8 <line:631:3, col:34> col:34 MaximumNumberOfClockDomains 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1f4158 <line:632:3, col:34> col:34 MaximumPhysicalAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1f4208 <line:627:1, line:633:3> col:3 EFI_ACPI_4_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER 'struct EFI_ACPI_4_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER':'EFI_ACPI_4_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER'
| |-ElaboratedType 0x55887c1f41b0 'struct EFI_ACPI_4_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER' sugar
| | `-RecordType 0x55887c1f3f50 'EFI_ACPI_4_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER'
| |   `-Record 0x55887c1f3ed0 ''
| `-FullComment 0x55887c41f310 <line:625:4, col:47>
|   `-ParagraphComment 0x55887c41f2e0 <col:4, col:47>
|     `-TextComment 0x55887c41f2b0 <col:4, col:47> Text=" Maximum System Characteristics Table (MSCT)"
|-RecordDecl 0x55887c1f42d0 <line:643:9, line:650:1> line:643:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f4370 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41f3e0 <line:641:4, col:61>
| | `-ParagraphComment 0x55887c41f3b0 <col:4, col:61>
| |   `-TextComment 0x55887c41f380 <col:4, col:61> Text=" Maximum Proximity Domain Information Structure Definition"
| |-FieldDecl 0x55887c1f43d8 <line:644:3, col:13> col:13 Revision 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f4438 <line:645:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f4498 <line:646:3, col:13> col:13 ProximityDomainRangeLow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f44f8 <line:647:3, col:13> col:13 ProximityDomainRangeHigh 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f4558 <line:648:3, col:13> col:13 MaximumProcessorCapacity 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1f45b8 <line:649:3, col:13> col:13 MaximumMemoryCapacity 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1f4668 <line:643:1, line:650:3> col:3 EFI_ACPI_4_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE 'struct EFI_ACPI_4_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE':'EFI_ACPI_4_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE'
| |-ElaboratedType 0x55887c1f4610 'struct EFI_ACPI_4_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE' sugar
| | `-RecordType 0x55887c1f4350 'EFI_ACPI_4_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE'
| |   `-Record 0x55887c1f42d0 ''
| `-FullComment 0x55887c41f4b0 <line:641:4, col:61>
|   `-ParagraphComment 0x55887c41f480 <col:4, col:61>
|     `-TextComment 0x55887c41f450 <col:4, col:61> Text=" Maximum Proximity Domain Information Structure Definition"
|-RecordDecl 0x55887c1f4700 <line:655:9, line:659:1> line:655:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f47a0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41f580 <line:653:4, col:34>
| | `-ParagraphComment 0x55887c41f550 <col:4, col:34>
| |   `-TextComment 0x55887c41f520 <col:4, col:34> Text=" Boot Error Record Table (BERT)"
| |-FieldDecl 0x55887c1f4808 <line:656:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1f4868 <line:657:3, col:34> col:34 BootErrorRegionLength 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1f48c8 <line:658:3, col:34> col:34 BootErrorRegion 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1f4978 <line:655:1, line:659:3> col:3 EFI_ACPI_4_0_BOOT_ERROR_RECORD_TABLE_HEADER 'struct EFI_ACPI_4_0_BOOT_ERROR_RECORD_TABLE_HEADER':'EFI_ACPI_4_0_BOOT_ERROR_RECORD_TABLE_HEADER'
| |-ElaboratedType 0x55887c1f4920 'struct EFI_ACPI_4_0_BOOT_ERROR_RECORD_TABLE_HEADER' sugar
| | `-RecordType 0x55887c1f4780 'EFI_ACPI_4_0_BOOT_ERROR_RECORD_TABLE_HEADER'
| |   `-Record 0x55887c1f4700 ''
| `-FullComment 0x55887c41f650 <line:653:4, col:34>
|   `-ParagraphComment 0x55887c41f620 <col:4, col:34>
|     `-TextComment 0x55887c41f5f0 <col:4, col:34> Text=" Boot Error Record Table (BERT)"
|-RecordDecl 0x55887c1f5d70 <line:669:9, line:676:1> line:669:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f5e10 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41f720 <line:667:4, col:45>
| | `-ParagraphComment 0x55887c41f6f0 <col:4, col:45>
| |   `-TextComment 0x55887c41f6c0 <col:4, col:45> Text=" Boot Error Region Block Status Definition"
| |-FieldDecl 0x55887c1f5eb8 <line:670:3, col:43> col:13 UncorrectableErrorValid 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c1f5e98 <col:43> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c1f5e68 <col:43> 'int' 1
| |-FieldDecl 0x55887c1f5f58 <line:671:3, col:43> col:13 CorrectableErrorValid 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c1f5f38 <col:43> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c1f5f08 <col:43> 'int' 1
| |-FieldDecl 0x55887c1f5ff8 <line:672:3, col:43> col:13 MultipleUncorrectableErrors 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c1f5fd8 <col:43> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c1f5fa8 <col:43> 'int' 1
| |-FieldDecl 0x55887c1f6098 <line:673:3, col:43> col:13 MultipleCorrectableErrors 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c1f6078 <col:43> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c1f6048 <col:43> 'int' 1
| |-FieldDecl 0x55887c1f6138 <line:674:3, col:43> col:13 ErrorDataEntryCount 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c1f6118 <col:43> 'int'
| |   |-value: Int 10
| |   `-IntegerLiteral 0x55887c1f60e8 <col:43> 'int' 10
| `-FieldDecl 0x55887c1f61d8 <line:675:3, col:43> col:13 Reserved 'UINT32':'unsigned int'
|   `-ConstantExpr 0x55887c1f61b8 <col:43> 'int'
|     |-value: Int 18
|     `-IntegerLiteral 0x55887c1f6188 <col:43> 'int' 18
|-TypedefDecl 0x55887c1f6288 <line:669:1, line:676:3> col:3 referenced EFI_ACPI_4_0_ERROR_BLOCK_STATUS 'struct EFI_ACPI_4_0_ERROR_BLOCK_STATUS':'EFI_ACPI_4_0_ERROR_BLOCK_STATUS'
| |-ElaboratedType 0x55887c1f6230 'struct EFI_ACPI_4_0_ERROR_BLOCK_STATUS' sugar
| | `-RecordType 0x55887c1f5df0 'EFI_ACPI_4_0_ERROR_BLOCK_STATUS'
| |   `-Record 0x55887c1f5d70 ''
| `-FullComment 0x55887c41f7f0 <line:667:4, col:45>
|   `-ParagraphComment 0x55887c41f7c0 <col:4, col:45>
|     `-TextComment 0x55887c41f790 <col:4, col:45> Text=" Boot Error Region Block Status Definition"
|-RecordDecl 0x55887c1f6320 <line:681:9, line:687:1> line:681:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f63c0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41f8c0 <line:679:4, col:32>
| | `-ParagraphComment 0x55887c41f890 <col:4, col:32>
| |   `-TextComment 0x55887c41f860 <col:4, col:32> Text=" Boot Error Region Definition"
| |-FieldDecl 0x55887c1f6450 <line:682:3, col:38> col:38 BlockStatus 'EFI_ACPI_4_0_ERROR_BLOCK_STATUS':'EFI_ACPI_4_0_ERROR_BLOCK_STATUS'
| |-FieldDecl 0x55887c1f64b0 <line:683:3, col:38> col:38 RawDataOffset 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f6510 <line:684:3, col:38> col:38 RawDataLength 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f6570 <line:685:3, col:38> col:38 DataLength 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1f65d0 <line:686:3, col:38> col:38 ErrorSeverity 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1f66f8 <line:681:1, line:687:3> col:3 EFI_ACPI_4_0_BOOT_ERROR_REGION_STRUCTURE 'struct EFI_ACPI_4_0_BOOT_ERROR_REGION_STRUCTURE':'EFI_ACPI_4_0_BOOT_ERROR_REGION_STRUCTURE'
| |-ElaboratedType 0x55887c1f66a0 'struct EFI_ACPI_4_0_BOOT_ERROR_REGION_STRUCTURE' sugar
| | `-RecordType 0x55887c1f63a0 'EFI_ACPI_4_0_BOOT_ERROR_REGION_STRUCTURE'
| |   `-Record 0x55887c1f6320 ''
| `-FullComment 0x55887c41f990 <line:679:4, col:32>
|   `-ParagraphComment 0x55887c41f960 <col:4, col:32>
|     `-TextComment 0x55887c41f930 <col:4, col:32> Text=" Boot Error Region Definition"
|-RecordDecl 0x55887c1f6790 <line:701:9, line:710:1> line:701:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f6830 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41fa60 <line:699:4, col:39>
| | `-ParagraphComment 0x55887c41fa30 <col:4, col:39>
| |   `-TextComment 0x55887c41fa00 <col:4, col:39> Text=" Generic Error Data Entry Definition"
| |-FieldDecl 0x55887c1f68e8 <line:702:3, col:27> col:13 SectionType 'UINT8[16]'
| |-FieldDecl 0x55887c1f6948 <line:703:3, col:13> col:13 ErrorSeverity 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f69a8 <line:704:3, col:13> col:13 Revision 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1f6a08 <line:705:3, col:13> col:13 ValidationBits 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f6a68 <line:706:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f6ac8 <line:707:3, col:13> col:13 ErrorDataLength 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f6b78 <line:708:3, col:21> col:13 FruId 'UINT8[16]'
| `-FieldDecl 0x55887c1f6ca8 <line:709:3, col:23> col:13 FruText 'UINT8[20]'
|-TypedefDecl 0x55887c1f6d58 <line:701:1, line:710:3> col:3 EFI_ACPI_4_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE 'struct EFI_ACPI_4_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE':'EFI_ACPI_4_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE'
| |-ElaboratedType 0x55887c1f6d00 'struct EFI_ACPI_4_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE' sugar
| | `-RecordType 0x55887c1f6810 'EFI_ACPI_4_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE'
| |   `-Record 0x55887c1f6790 ''
| `-FullComment 0x55887c41fb30 <line:699:4, col:39>
|   `-ParagraphComment 0x55887c41fb00 <col:4, col:39>
|     `-TextComment 0x55887c41fad0 <col:4, col:39> Text=" Generic Error Data Entry Definition"
|-RecordDecl 0x55887c1f6e20 <line:720:9, line:723:1> line:720:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f6ec0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41fc00 <line:718:4, col:38>
| | `-ParagraphComment 0x55887c41fbd0 <col:4, col:38>
| |   `-TextComment 0x55887c41fba0 <col:4, col:38> Text=" HEST - Hardware Error Source Table"
| |-FieldDecl 0x55887c1f6f28 <line:721:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c1f6f88 <line:722:3, col:34> col:34 ErrorSourceCount 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1f7038 <line:720:1, line:723:3> col:3 EFI_ACPI_4_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER 'struct EFI_ACPI_4_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER':'EFI_ACPI_4_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER'
| |-ElaboratedType 0x55887c1f6fe0 'struct EFI_ACPI_4_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER' sugar
| | `-RecordType 0x55887c1f6ea0 'EFI_ACPI_4_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER'
| |   `-Record 0x55887c1f6e20 ''
| `-FullComment 0x55887c41fcd0 <line:718:4, col:38>
|   `-ParagraphComment 0x55887c41fca0 <col:4, col:38>
|     `-TextComment 0x55887c41fc70 <col:4, col:38> Text=" HEST - Hardware Error Source Table"
|-RecordDecl 0x55887c1f7100 <line:750:9, line:762:1> line:750:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f71a0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41fda0 <line:748:4, col:67>
| | `-ParagraphComment 0x55887c41fd70 <col:4, col:67>
| |   `-TextComment 0x55887c41fd40 <col:4, col:67> Text=" IA-32 Architecture Machine Check Exception Structure Definition"
| |-FieldDecl 0x55887c1f7208 <line:751:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1f7268 <line:752:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1f7318 <line:753:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c1f7378 <line:754:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f73d8 <line:755:3, col:13> col:13 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f7438 <line:756:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f7498 <line:757:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f74f8 <line:758:3, col:13> col:13 GlobalCapabilityInitData 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1f7558 <line:759:3, col:13> col:13 GlobalControlInitData 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1f75b8 <line:760:3, col:13> col:13 NumberOfHardwareBanks 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1f76e8 <line:761:3, col:24> col:13 Reserved1 'UINT8[7]'
|-TypedefDecl 0x55887c1f7798 <line:750:1, line:762:3> col:3 EFI_ACPI_4_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE 'struct EFI_ACPI_4_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE':'EFI_ACPI_4_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE'
| |-ElaboratedType 0x55887c1f7740 'struct EFI_ACPI_4_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE' sugar
| | `-RecordType 0x55887c1f7180 'EFI_ACPI_4_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE'
| |   `-Record 0x55887c1f7100 ''
| `-FullComment 0x55887c41fe70 <line:748:4, col:67>
|   `-ParagraphComment 0x55887c41fe40 <col:4, col:67>
|     `-TextComment 0x55887c41fe10 <col:4, col:67> Text=" IA-32 Architecture Machine Check Exception Structure Definition"
|-RecordDecl 0x55887c1f7830 <line:767:9, line:777:1> line:767:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1f78d0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c41ff40 <line:765:4, col:62>
| | `-ParagraphComment 0x55887c41ff10 <col:4, col:62>
| |   `-TextComment 0x55887c41fee0 <col:4, col:62> Text=" IA-32 Architecture Machine Check Bank Structure Definition"
| |-FieldDecl 0x55887c1f7938 <line:768:3, col:13> col:13 BankNumber 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f7998 <line:769:3, col:13> col:13 ClearStatusOnInitialization 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f79f8 <line:770:3, col:13> col:13 StatusDataFormat 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f7a58 <line:771:3, col:13> col:13 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1f7ab8 <line:772:3, col:13> col:13 ControlRegisterMsrAddress 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f7b18 <line:773:3, col:13> col:13 ControlInitData 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c1f7b78 <line:774:3, col:13> col:13 StatusRegisterMsrAddress 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1f7bd8 <line:775:3, col:13> col:13 AddressRegisterMsrAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1f7c38 <line:776:3, col:13> col:13 MiscRegisterMsrAddress 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1f7ce8 <line:767:1, line:777:3> col:3 EFI_ACPI_4_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE 'struct EFI_ACPI_4_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE':'EFI_ACPI_4_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE'
| |-ElaboratedType 0x55887c1f7c90 'struct EFI_ACPI_4_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE' sugar
| | `-RecordType 0x55887c1f78b0 'EFI_ACPI_4_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE'
| |   `-Record 0x55887c1f7830 ''
| `-FullComment 0x55887c420010 <line:765:4, col:62>
|   `-ParagraphComment 0x55887c41ffe0 <col:4, col:62>
|     `-TextComment 0x55887c41ffb0 <col:4, col:62> Text=" IA-32 Architecture Machine Check Bank Structure Definition"
|-RecordDecl 0x55887c1f9fe0 <line:798:9, line:806:1> line:798:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1fa080 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4200e0 <line:796:4, col:79>
| | `-ParagraphComment 0x55887c4200b0 <col:4, col:79>
| |   `-TextComment 0x55887c420080 <col:4, col:79> Text=" Hardware Error Notification Configuration Write Enable Structure Definition"
| |-FieldDecl 0x55887c1fa128 <line:799:3, col:46> col:13 Type 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c1fa108 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c1fa0d8 <col:46> 'int' 1
| |-FieldDecl 0x55887c1fa1c8 <line:800:3, col:46> col:13 PollInterval 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c1fa1a8 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c1fa178 <col:46> 'int' 1
| |-FieldDecl 0x55887c1fa268 <line:801:3, col:46> col:13 SwitchToPollingThresholdValue 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c1fa248 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c1fa218 <col:46> 'int' 1
| |-FieldDecl 0x55887c1fa308 <line:802:3, col:46> col:13 SwitchToPollingThresholdWindow 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c1fa2e8 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c1fa2b8 <col:46> 'int' 1
| |-FieldDecl 0x55887c1fa3a8 <line:803:3, col:46> col:13 ErrorThresholdValue 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c1fa388 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c1fa358 <col:46> 'int' 1
| |-FieldDecl 0x55887c1fa448 <line:804:3, col:46> col:13 ErrorThresholdWindow 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c1fa428 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c1fa3f8 <col:46> 'int' 1
| `-FieldDecl 0x55887c1fa4e8 <line:805:3, col:46> col:13 Reserved 'UINT16':'unsigned short'
|   `-ConstantExpr 0x55887c1fa4c8 <col:46> 'int'
|     |-value: Int 10
|     `-IntegerLiteral 0x55887c1fa498 <col:46> 'int' 10
|-TypedefDecl 0x55887c1fa598 <line:798:1, line:806:3> col:3 referenced EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE 'struct EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE':'EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE'
| |-ElaboratedType 0x55887c1fa540 'struct EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE' sugar
| | `-RecordType 0x55887c1fa060 'EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE'
| |   `-Record 0x55887c1f9fe0 ''
| `-FullComment 0x55887c4201b0 <line:796:4, col:79>
|   `-ParagraphComment 0x55887c420180 <col:4, col:79>
|     `-TextComment 0x55887c420150 <col:4, col:79> Text=" Hardware Error Notification Configuration Write Enable Structure Definition"
|-RecordDecl 0x55887c1fa630 <line:811:9, line:821:1> line:811:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1fa6d0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c420280 <line:809:4, col:52>
| | `-ParagraphComment 0x55887c420250 <col:4, col:52>
| |   `-TextComment 0x55887c420220 <col:4, col:52> Text=" Hardware Error Notification Structure Definition"
| |-FieldDecl 0x55887c1fa738 <line:812:3, col:84> col:84 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1fa798 <line:813:3, col:84> col:84 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1fa820 <line:814:3, col:84> col:84 ConfigurationWriteEnable 'EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE':'EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE'
| |-FieldDecl 0x55887c1fa880 <line:815:3, col:84> col:84 PollInterval 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fa8e0 <line:816:3, col:84> col:84 Vector 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fa940 <line:817:3, col:84> col:84 SwitchToPollingThresholdValue 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fa9a0 <line:818:3, col:84> col:84 SwitchToPollingThresholdWindow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1faa00 <line:819:3, col:84> col:84 ErrorThresholdValue 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1faa60 <line:820:3, col:84> col:84 ErrorThresholdWindow 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1fab08 <line:811:1, line:821:3> col:3 referenced EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE 'struct EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE':'EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE'
| |-ElaboratedType 0x55887c1faab0 'struct EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE' sugar
| | `-RecordType 0x55887c1fa6b0 'EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE'
| |   `-Record 0x55887c1fa630 ''
| `-FullComment 0x55887c420350 <line:809:4, col:52>
|   `-ParagraphComment 0x55887c420320 <col:4, col:52>
|     `-TextComment 0x55887c4202f0 <col:4, col:52> Text=" Hardware Error Notification Structure Definition"
|-RecordDecl 0x55887c1faba0 <line:826:9, line:837:1> line:826:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1fac40 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c420420 <line:824:4, col:67>
| | `-ParagraphComment 0x55887c4203f0 <col:4, col:67>
| |   `-TextComment 0x55887c4203c0 <col:4, col:67> Text=" IA-32 Architecture Corrected Machine Check Structure Definition"
| |-FieldDecl 0x55887c1faca8 <line:827:3, col:57> col:57 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fad08 <line:828:3, col:57> col:57 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fadb8 <line:829:3, col:68> col:57 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c1fae18 <line:830:3, col:57> col:57 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1fae78 <line:831:3, col:57> col:57 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1faed8 <line:832:3, col:57> col:57 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1faf38 <line:833:3, col:57> col:57 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fafc0 <line:834:3, col:57> col:57 NotificationStructure 'EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE':'EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE'
| |-FieldDecl 0x55887c1fb020 <line:835:3, col:57> col:57 NumberOfHardwareBanks 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c1fb0d0 <line:836:3, col:68> col:57 Reserved1 'UINT8[3]'
|-TypedefDecl 0x55887c1fb178 <line:826:1, line:837:3> col:3 EFI_ACPI_4_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE 'struct EFI_ACPI_4_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE':'EFI_ACPI_4_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE'
| |-ElaboratedType 0x55887c1fb120 'struct EFI_ACPI_4_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE' sugar
| | `-RecordType 0x55887c1fac20 'EFI_ACPI_4_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE'
| |   `-Record 0x55887c1faba0 ''
| `-FullComment 0x55887c4204f0 <line:824:4, col:67>
|   `-ParagraphComment 0x55887c4204c0 <col:4, col:67>
|     `-TextComment 0x55887c420490 <col:4, col:67> Text=" IA-32 Architecture Corrected Machine Check Structure Definition"
|-RecordDecl 0x55887c1fb210 <line:842:9, line:849:1> line:842:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1fb2b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4205c0 <line:840:4, col:53>
| | `-ParagraphComment 0x55887c420590 <col:4, col:53>
| |   `-TextComment 0x55887c420560 <col:4, col:53> Text=" IA-32 Architecture NMI Error Structure Definition"
| |-FieldDecl 0x55887c1fb318 <line:843:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fb378 <line:844:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fb428 <line:845:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c1fb488 <line:846:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fb4e8 <line:847:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1fb548 <line:848:3, col:13> col:13 MaxRawDataLength 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1fb5f8 <line:842:1, line:849:3> col:3 EFI_ACPI_4_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE 'struct EFI_ACPI_4_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE':'EFI_ACPI_4_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE'
| |-ElaboratedType 0x55887c1fb5a0 'struct EFI_ACPI_4_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE' sugar
| | `-RecordType 0x55887c1fb290 'EFI_ACPI_4_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE'
| |   `-Record 0x55887c1fb210 ''
| `-FullComment 0x55887c420690 <line:840:4, col:53>
|   `-ParagraphComment 0x55887c420660 <col:4, col:53>
|     `-TextComment 0x55887c420630 <col:4, col:53> Text=" IA-32 Architecture NMI Error Structure Definition"
|-RecordDecl 0x55887c1fb690 <line:854:9, line:872:1> line:854:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1fb730 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c420760 <line:852:4, col:50>
| | `-ParagraphComment 0x55887c420730 <col:4, col:50>
| |   `-TextComment 0x55887c420700 <col:4, col:50> Text=" PCI Express Root Port AER Structure Definition"
| |-FieldDecl 0x55887c1fb798 <line:855:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fb7f8 <line:856:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fb8a8 <line:857:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c1fb908 <line:858:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1fb968 <line:859:3, col:13> col:13 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1fb9c8 <line:860:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fba28 <line:861:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fba88 <line:862:3, col:13> col:13 Bus 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fbae8 <line:863:3, col:13> col:13 Device 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fbb48 <line:864:3, col:13> col:13 Function 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fbba8 <line:865:3, col:13> col:13 DeviceControl 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fbc58 <line:866:3, col:24> col:13 Reserved1 'UINT8[2]'
| |-FieldDecl 0x55887c1fbcb8 <line:867:3, col:13> col:13 UncorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fbd18 <line:868:3, col:13> col:13 UncorrectableErrorSeverity 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fbd78 <line:869:3, col:13> col:13 CorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fbdd8 <line:870:3, col:13> col:13 AdvancedErrorCapabilitiesAndControl 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1fbe38 <line:871:3, col:13> col:13 RootErrorCommand 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1fbee8 <line:854:1, line:872:3> col:3 EFI_ACPI_4_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE 'struct EFI_ACPI_4_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE':'EFI_ACPI_4_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE'
| |-ElaboratedType 0x55887c1fbe90 'struct EFI_ACPI_4_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE' sugar
| | `-RecordType 0x55887c1fb710 'EFI_ACPI_4_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE'
| |   `-Record 0x55887c1fb690 ''
| `-FullComment 0x55887c420830 <line:852:4, col:50>
|   `-ParagraphComment 0x55887c420800 <col:4, col:50>
|     `-TextComment 0x55887c4207d0 <col:4, col:50> Text=" PCI Express Root Port AER Structure Definition"
|-RecordDecl 0x55887c1fc130 <line:877:9, line:894:1> line:877:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1fc1d0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c420900 <line:875:4, col:47>
| | `-ParagraphComment 0x55887c4208d0 <col:4, col:47>
| |   `-TextComment 0x55887c4208a0 <col:4, col:47> Text=" PCI Express Device AER Structure Definition"
| |-FieldDecl 0x55887c1fc238 <line:878:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fc298 <line:879:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fc348 <line:880:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c1fc3a8 <line:881:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1fc408 <line:882:3, col:13> col:13 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1fc468 <line:883:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fc4c8 <line:884:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fc528 <line:885:3, col:13> col:13 Bus 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fc588 <line:886:3, col:13> col:13 Device 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fc5e8 <line:887:3, col:13> col:13 Function 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fc648 <line:888:3, col:13> col:13 DeviceControl 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fc6f8 <line:889:3, col:24> col:13 Reserved1 'UINT8[2]'
| |-FieldDecl 0x55887c1fc758 <line:890:3, col:13> col:13 UncorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fc7b8 <line:891:3, col:13> col:13 UncorrectableErrorSeverity 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fc818 <line:892:3, col:13> col:13 CorrectableErrorMask 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1fc878 <line:893:3, col:13> col:13 AdvancedErrorCapabilitiesAndControl 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1fc928 <line:877:1, line:894:3> col:3 EFI_ACPI_4_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE 'struct EFI_ACPI_4_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE':'EFI_ACPI_4_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE'
| |-ElaboratedType 0x55887c1fc8d0 'struct EFI_ACPI_4_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE' sugar
| | `-RecordType 0x55887c1fc1b0 'EFI_ACPI_4_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE'
| |   `-Record 0x55887c1fc130 ''
| `-FullComment 0x55887c4209d0 <line:875:4, col:47>
|   `-ParagraphComment 0x55887c4209a0 <col:4, col:47>
|     `-TextComment 0x55887c420970 <col:4, col:47> Text=" PCI Express Device AER Structure Definition"
|-RecordDecl 0x55887c1fc9c0 <line:899:9, line:919:1> line:899:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1fca60 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c420aa0 <line:897:4, col:47>
| | `-ParagraphComment 0x55887c420a70 <col:4, col:47>
| |   `-TextComment 0x55887c420a40 <col:4, col:47> Text=" PCI Express Bridge AER Structure Definition"
| |-FieldDecl 0x55887c1fcac8 <line:900:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fcb28 <line:901:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fcbd8 <line:902:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c1fcc38 <line:903:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1fcc98 <line:904:3, col:13> col:13 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1fccf8 <line:905:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fcd58 <line:906:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fcdb8 <line:907:3, col:13> col:13 Bus 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fce18 <line:908:3, col:13> col:13 Device 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fce78 <line:909:3, col:13> col:13 Function 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fced8 <line:910:3, col:13> col:13 DeviceControl 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fcf88 <line:911:3, col:24> col:13 Reserved1 'UINT8[2]'
| |-FieldDecl 0x55887c1fcfe8 <line:912:3, col:13> col:13 UncorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fd048 <line:913:3, col:13> col:13 UncorrectableErrorSeverity 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fd0a8 <line:914:3, col:13> col:13 CorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fd108 <line:915:3, col:13> col:13 AdvancedErrorCapabilitiesAndControl 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fd168 <line:916:3, col:13> col:13 SecondaryUncorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fd1c8 <line:917:3, col:13> col:13 SecondaryUncorrectableErrorSeverity 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1fd228 <line:918:3, col:13> col:13 SecondaryAdvancedErrorCapabilitiesAndControl 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1fd2d8 <line:899:1, line:919:3> col:3 EFI_ACPI_4_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE 'struct EFI_ACPI_4_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE':'EFI_ACPI_4_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE'
| |-ElaboratedType 0x55887c1fd280 'struct EFI_ACPI_4_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE' sugar
| | `-RecordType 0x55887c1fca40 'EFI_ACPI_4_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE'
| |   `-Record 0x55887c1fc9c0 ''
| `-FullComment 0x55887c420b70 <line:897:4, col:47>
|   `-ParagraphComment 0x55887c420b40 <col:4, col:47>
|     `-TextComment 0x55887c420b10 <col:4, col:47> Text=" PCI Express Bridge AER Structure Definition"
|-RecordDecl 0x55887c1fd370 <line:924:9, line:936:1> line:924:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1fd410 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c420c40 <line:922:4, col:54>
| | `-ParagraphComment 0x55887c420c10 <col:4, col:54>
| |   `-TextComment 0x55887c420be0 <col:4, col:54> Text=" Generic Hardware Error Source Structure Definition"
| |-FieldDecl 0x55887c1fd478 <line:925:3, col:57> col:57 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fd4d8 <line:926:3, col:57> col:57 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fd538 <line:927:3, col:57> col:57 RelatedSourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1fd598 <line:928:3, col:57> col:57 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1fd5f8 <line:929:3, col:57> col:57 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1fd658 <line:930:3, col:57> col:57 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fd6b8 <line:931:3, col:57> col:57 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fd718 <line:932:3, col:57> col:57 MaxRawDataLength 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fd778 <line:933:3, col:57> col:57 ErrorStatusAddress 'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1fd7d8 <line:934:3, col:57> col:57 NotificationStructure 'EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE':'EFI_ACPI_4_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE'
| `-FieldDecl 0x55887c1fd838 <line:935:3, col:57> col:57 ErrorStatusBlockLength 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1fd8e8 <line:924:1, line:936:3> col:3 EFI_ACPI_4_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE 'struct EFI_ACPI_4_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE':'EFI_ACPI_4_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE'
| |-ElaboratedType 0x55887c1fd890 'struct EFI_ACPI_4_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE' sugar
| | `-RecordType 0x55887c1fd3f0 'EFI_ACPI_4_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE'
| |   `-Record 0x55887c1fd370 ''
| `-FullComment 0x55887c420d10 <line:922:4, col:54>
|   `-ParagraphComment 0x55887c420ce0 <col:4, col:54>
|     `-TextComment 0x55887c420cb0 <col:4, col:54> Text=" Generic Hardware Error Source Structure Definition"
|-RecordDecl 0x55887c1fd980 <line:941:9, line:947:1> line:941:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1fda20 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c420de0 <line:939:4, col:35>
| | `-ParagraphComment 0x55887c420db0 <col:4, col:35>
| |   `-TextComment 0x55887c420d80 <col:4, col:35> Text=" Generic Error Status Definition"
| |-FieldDecl 0x55887c1fda88 <line:942:3, col:38> col:38 BlockStatus 'EFI_ACPI_4_0_ERROR_BLOCK_STATUS':'EFI_ACPI_4_0_ERROR_BLOCK_STATUS'
| |-FieldDecl 0x55887c1fdae8 <line:943:3, col:38> col:38 RawDataOffset 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fdb48 <line:944:3, col:38> col:38 RawDataLength 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fdba8 <line:945:3, col:38> col:38 DataLength 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1fdc08 <line:946:3, col:38> col:38 ErrorSeverity 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1fdcb8 <line:941:1, line:947:3> col:3 EFI_ACPI_4_0_GENERIC_ERROR_STATUS_STRUCTURE 'struct EFI_ACPI_4_0_GENERIC_ERROR_STATUS_STRUCTURE':'EFI_ACPI_4_0_GENERIC_ERROR_STATUS_STRUCTURE'
| |-ElaboratedType 0x55887c1fdc60 'struct EFI_ACPI_4_0_GENERIC_ERROR_STATUS_STRUCTURE' sugar
| | `-RecordType 0x55887c1fda00 'EFI_ACPI_4_0_GENERIC_ERROR_STATUS_STRUCTURE'
| |   `-Record 0x55887c1fd980 ''
| `-FullComment 0x55887c420eb0 <line:939:4, col:35>
|   `-ParagraphComment 0x55887c420e80 <col:4, col:35>
|     `-TextComment 0x55887c420e50 <col:4, col:35> Text=" Generic Error Status Definition"
|-RecordDecl 0x55887c1fdd50 <line:952:9, line:957:1> line:952:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1fddf0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c420f80 <line:950:4, col:43>
| | `-ParagraphComment 0x55887c420f50 <col:4, col:43>
| |   `-TextComment 0x55887c420f20 <col:4, col:43> Text=" ERST - Error Record Serialization Table"
| |-FieldDecl 0x55887c1fde58 <line:953:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1fdeb8 <line:954:3, col:34> col:34 SerializationHeaderSize 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1fdf68 <line:955:3, col:45> col:34 Reserved0 'UINT8[4]'
| `-FieldDecl 0x55887c1fdfc8 <line:956:3, col:34> col:34 InstructionEntryCount 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1fe078 <line:952:1, line:957:3> col:3 EFI_ACPI_4_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER 'struct EFI_ACPI_4_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER':'EFI_ACPI_4_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER'
| |-ElaboratedType 0x55887c1fe020 'struct EFI_ACPI_4_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c1fddd0 'EFI_ACPI_4_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER'
| |   `-Record 0x55887c1fdd50 ''
| `-FullComment 0x55887c421050 <line:950:4, col:43>
|   `-ParagraphComment 0x55887c421020 <col:4, col:43>
|     `-TextComment 0x55887c420ff0 <col:4, col:43> Text=" ERST - Error Record Serialization Table"
|-RecordDecl 0x55887c1ff3a0 <line:1024:9, line:1032:1> line:1024:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1ff440 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c421120 <line:1022:4, col:40>
| | `-ParagraphComment 0x55887c4210f0 <col:4, col:40>
| |   `-TextComment 0x55887c4210c0 <col:4, col:40> Text=" ERST Serialization Instruction Entry"
| |-FieldDecl 0x55887c1ff4a8 <line:1025:3, col:45> col:45 SerializationAction 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ff508 <line:1026:3, col:45> col:45 Instruction 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ff568 <line:1027:3, col:45> col:45 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ff5c8 <line:1028:3, col:45> col:45 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ff628 <line:1029:3, col:45> col:45 RegisterRegion 'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c1ff688 <line:1030:3, col:45> col:45 Value 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c1ff6e8 <line:1031:3, col:45> col:45 Mask 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c1ff798 <line:1024:1, line:1032:3> col:3 EFI_ACPI_4_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY 'struct EFI_ACPI_4_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY':'EFI_ACPI_4_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY'
| |-ElaboratedType 0x55887c1ff740 'struct EFI_ACPI_4_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY' sugar
| | `-RecordType 0x55887c1ff420 'EFI_ACPI_4_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY'
| |   `-Record 0x55887c1ff3a0 ''
| `-FullComment 0x55887c4211f0 <line:1022:4, col:40>
|   `-ParagraphComment 0x55887c4211c0 <col:4, col:40>
|     `-TextComment 0x55887c421190 <col:4, col:40> Text=" ERST Serialization Instruction Entry"
|-RecordDecl 0x55887c1ff830 <line:1037:9, line:1043:1> line:1037:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1ff8d0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4212c0 <line:1035:4, col:32>
| | `-ParagraphComment 0x55887c421290 <col:4, col:32>
| |   `-TextComment 0x55887c421260 <col:4, col:32> Text=" EINJ - Error Injection Table"
| |-FieldDecl 0x55887c1ff938 <line:1038:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c1ff998 <line:1039:3, col:34> col:34 InjectionHeaderSize 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1ff9f8 <line:1040:3, col:34> col:34 InjectionFlags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ffaa8 <line:1041:3, col:45> col:34 Reserved0 'UINT8[3]'
| `-FieldDecl 0x55887c1ffb08 <line:1042:3, col:34> col:34 InjectionEntryCount 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1ffbb8 <line:1037:1, line:1043:3> col:3 EFI_ACPI_4_0_ERROR_INJECTION_TABLE_HEADER 'struct EFI_ACPI_4_0_ERROR_INJECTION_TABLE_HEADER':'EFI_ACPI_4_0_ERROR_INJECTION_TABLE_HEADER'
| |-ElaboratedType 0x55887c1ffb60 'struct EFI_ACPI_4_0_ERROR_INJECTION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c1ff8b0 'EFI_ACPI_4_0_ERROR_INJECTION_TABLE_HEADER'
| |   `-Record 0x55887c1ff830 ''
| `-FullComment 0x55887c421390 <line:1035:4, col:32>
|   `-ParagraphComment 0x55887c421360 <col:4, col:32>
|     `-TextComment 0x55887c421330 <col:4, col:32> Text=" EINJ - Error Injection Table"
|-RecordDecl 0x55887c1ffd70 <line:1103:9, line:1111:1> line:1103:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1ffe10 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c421460 <line:1101:4, col:36>
| | `-ParagraphComment 0x55887c421430 <col:4, col:36>
| |   `-TextComment 0x55887c421400 <col:4, col:36> Text=" EINJ Injection Instruction Entry"
| |-FieldDecl 0x55887c1ffe78 <line:1104:3, col:45> col:45 InjectionAction 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ffed8 <line:1105:3, col:45> col:45 Instruction 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1fff38 <line:1106:3, col:45> col:45 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1fff98 <line:1107:3, col:45> col:45 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1ffff8 <line:1108:3, col:45> col:45 RegisterRegion 'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_4_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c200058 <line:1109:3, col:45> col:45 Value 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c2000b8 <line:1110:3, col:45> col:45 Mask 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c200168 <line:1103:1, line:1111:3> col:3 EFI_ACPI_4_0_EINJ_INJECTION_INSTRUCTION_ENTRY 'struct EFI_ACPI_4_0_EINJ_INJECTION_INSTRUCTION_ENTRY':'EFI_ACPI_4_0_EINJ_INJECTION_INSTRUCTION_ENTRY'
| |-ElaboratedType 0x55887c200110 'struct EFI_ACPI_4_0_EINJ_INJECTION_INSTRUCTION_ENTRY' sugar
| | `-RecordType 0x55887c1ffdf0 'EFI_ACPI_4_0_EINJ_INJECTION_INSTRUCTION_ENTRY'
| |   `-Record 0x55887c1ffd70 ''
| `-FullComment 0x55887c421530 <line:1101:4, col:36>
|   `-ParagraphComment 0x55887c421500 <col:4, col:36>
|     `-TextComment 0x55887c4214d0 <col:4, col:36> Text=" EINJ Injection Instruction Entry"
|-RecordDecl 0x55887c200200 <line:1116:9, line:1121:1> line:1116:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2002a0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c421600 <line:1114:4, col:29>
| | `-ParagraphComment 0x55887c4215d0 <col:4, col:29>
| |   `-TextComment 0x55887c4215a0 <col:4, col:29> Text=" EINJ Trigger Action Table"
| |-FieldDecl 0x55887c200308 <line:1117:3, col:13> col:13 HeaderSize 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c200368 <line:1118:3, col:13> col:13 Revision 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2003c8 <line:1119:3, col:13> col:13 TableSize 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c200428 <line:1120:3, col:13> col:13 EntryCount 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c2004d8 <line:1116:1, line:1121:3> col:3 EFI_ACPI_4_0_EINJ_TRIGGER_ACTION_TABLE 'struct EFI_ACPI_4_0_EINJ_TRIGGER_ACTION_TABLE':'EFI_ACPI_4_0_EINJ_TRIGGER_ACTION_TABLE'
| |-ElaboratedType 0x55887c200480 'struct EFI_ACPI_4_0_EINJ_TRIGGER_ACTION_TABLE' sugar
| | `-RecordType 0x55887c200280 'EFI_ACPI_4_0_EINJ_TRIGGER_ACTION_TABLE'
| |   `-Record 0x55887c200200 ''
| `-FullComment 0x55887c4216d0 <line:1114:4, col:29>
|   `-ParagraphComment 0x55887c4216a0 <col:4, col:29>
|     `-TextComment 0x55887c421670 <col:4, col:29> Text=" EINJ Trigger Action Table"
|-RecordDecl 0x55887c200c18 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/Acpi50.h:31:16, line:36:1> line:31:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c200cc0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4217a0 <line:29:4, col:27>
| | `-ParagraphComment 0x55887c421770 <col:4, col:27>
| |   `-TextComment 0x55887c421740 <col:4, col:27> Text=" Generic DMA Descriptor."
| |-FieldDecl 0x55887c200d28 <line:32:3, col:33> col:33 Header 'ACPI_SMALL_RESOURCE_HEADER':'ACPI_SMALL_RESOURCE_HEADER'
| |-FieldDecl 0x55887c200d88 <line:33:3, col:33> col:33 DmaRequestLine 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c200de8 <line:34:3, col:33> col:33 DmaChannel 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c200e48 <line:35:3, col:33> col:33 DmaTransferWidth 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c200ef8 <line:31:1, line:36:3> col:3 EFI_ACPI_FIXED_DMA_DESCRIPTOR 'struct EFI_ACPI_FIXED_DMA_DESCRIPTOR':'EFI_ACPI_FIXED_DMA_DESCRIPTOR'
| |-ElaboratedType 0x55887c200ea0 'struct EFI_ACPI_FIXED_DMA_DESCRIPTOR' sugar
| | `-RecordType 0x55887c200ca0 'EFI_ACPI_FIXED_DMA_DESCRIPTOR'
| |   `-Record 0x55887c200c18 ''
| `-FullComment 0x55887c421870 <line:29:4, col:27>
|   `-ParagraphComment 0x55887c421840 <col:4, col:27>
|     `-TextComment 0x55887c421810 <col:4, col:27> Text=" Generic DMA Descriptor."
|-RecordDecl 0x55887c200f90 <line:41:16, line:55:1> line:41:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c201030 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c421940 <line:39:4, col:30>
| | `-ParagraphComment 0x55887c421910 <col:4, col:30>
| |   `-TextComment 0x55887c4218e0 <col:4, col:30> Text=" GPIO Connection Descriptor"
| |-FieldDecl 0x55887c201098 <line:42:3, col:33> col:33 Header 'ACPI_LARGE_RESOURCE_HEADER':'ACPI_LARGE_RESOURCE_HEADER'
| |-FieldDecl 0x55887c2010f8 <line:43:3, col:33> col:33 RevisionId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c201158 <line:44:3, col:33> col:33 ConnectionType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2011b8 <line:45:3, col:33> col:33 GeneralFlags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c201218 <line:46:3, col:33> col:33 InterruptFlags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c201278 <line:47:3, col:33> col:33 PinConfiguration 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c209ff0 <line:48:3, col:33> col:33 OutputDriveStrength 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20a050 <line:49:3, col:33> col:33 DebounceTimeout 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20a0b0 <line:50:3, col:33> col:33 PinTableOffset 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20a110 <line:51:3, col:33> col:33 ResourceSourceIndex 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20a170 <line:52:3, col:33> col:33 ResourceSourceNameOffset 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20a1d0 <line:53:3, col:33> col:33 VendorDataOffset 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c20a230 <line:54:3, col:33> col:33 VendorDataLength 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c20a2d8 <line:41:1, line:55:3> col:3 EFI_ACPI_GPIO_CONNECTION_DESCRIPTOR 'struct EFI_ACPI_GPIO_CONNECTION_DESCRIPTOR':'EFI_ACPI_GPIO_CONNECTION_DESCRIPTOR'
| |-ElaboratedType 0x55887c20a280 'struct EFI_ACPI_GPIO_CONNECTION_DESCRIPTOR' sugar
| | `-RecordType 0x55887c201010 'EFI_ACPI_GPIO_CONNECTION_DESCRIPTOR'
| |   `-Record 0x55887c200f90 ''
| `-FullComment 0x55887c421a10 <line:39:4, col:30>
|   `-ParagraphComment 0x55887c4219e0 <col:4, col:30>
|     `-TextComment 0x55887c4219b0 <col:4, col:30> Text=" GPIO Connection Descriptor"
|-RecordDecl 0x55887c20a370 <line:63:16, line:73:1> line:63:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c20a410 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c421ae0 <line:61:4, col:44>
| | `-ParagraphComment 0x55887c421ab0 <col:4, col:44>
| |   `-TextComment 0x55887c421a80 <col:4, col:44> Text=" Serial Bus Resource Descriptor (Generic)"
| |-FieldDecl 0x55887c20a478 <line:64:3, col:33> col:33 Header 'ACPI_LARGE_RESOURCE_HEADER':'ACPI_LARGE_RESOURCE_HEADER'
| |-FieldDecl 0x55887c20a4d8 <line:65:3, col:33> col:33 RevisionId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20a538 <line:66:3, col:33> col:33 ResourceSourceIndex 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20a598 <line:67:3, col:33> col:33 SerialBusType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20a5f8 <line:68:3, col:33> col:33 GeneralFlags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20a658 <line:69:3, col:33> col:33 TypeSpecificFlags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20a6b8 <line:70:3, col:33> col:33 TypeSpecificRevisionId 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c20a718 <line:71:3, col:33> col:33 TypeDataLength 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c20a7c8 <line:63:1, line:73:3> col:3 EFI_ACPI_SERIAL_BUS_RESOURCE_DESCRIPTOR 'struct EFI_ACPI_SERIAL_BUS_RESOURCE_DESCRIPTOR':'EFI_ACPI_SERIAL_BUS_RESOURCE_DESCRIPTOR'
| |-ElaboratedType 0x55887c20a770 'struct EFI_ACPI_SERIAL_BUS_RESOURCE_DESCRIPTOR' sugar
| | `-RecordType 0x55887c20a3f0 'EFI_ACPI_SERIAL_BUS_RESOURCE_DESCRIPTOR'
| |   `-Record 0x55887c20a370 ''
| `-FullComment 0x55887c421bb0 <line:61:4, col:44>
|   `-ParagraphComment 0x55887c421b80 <col:4, col:44>
|     `-TextComment 0x55887c421b50 <col:4, col:44> Text=" Serial Bus Resource Descriptor (Generic)"
|-RecordDecl 0x55887c20a860 <line:82:16, line:93:1> line:82:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c20a900 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c421c80 <line:80:4, col:40>
| | `-ParagraphComment 0x55887c421c50 <col:4, col:40>
| |   `-TextComment 0x55887c421c20 <col:4, col:40> Text=" Serial Bus Resource Descriptor (I2C)"
| |-FieldDecl 0x55887c20a968 <line:83:3, col:33> col:33 Header 'ACPI_LARGE_RESOURCE_HEADER':'ACPI_LARGE_RESOURCE_HEADER'
| |-FieldDecl 0x55887c20a9c8 <line:84:3, col:33> col:33 RevisionId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20aa28 <line:85:3, col:33> col:33 ResourceSourceIndex 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20aa88 <line:86:3, col:33> col:33 SerialBusType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20aae8 <line:87:3, col:33> col:33 GeneralFlags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20ab48 <line:88:3, col:33> col:33 TypeSpecificFlags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20aba8 <line:89:3, col:33> col:33 TypeSpecificRevisionId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20ac08 <line:90:3, col:33> col:33 TypeDataLength 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20ac68 <line:91:3, col:33> col:33 ConnectionSpeed 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c20acc8 <line:92:3, col:33> col:33 SlaveAddress 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c20ad78 <line:82:1, line:93:3> col:3 EFI_ACPI_SERIAL_BUS_RESOURCE_I2C_DESCRIPTOR 'struct EFI_ACPI_SERIAL_BUS_RESOURCE_I2C_DESCRIPTOR':'EFI_ACPI_SERIAL_BUS_RESOURCE_I2C_DESCRIPTOR'
| |-ElaboratedType 0x55887c20ad20 'struct EFI_ACPI_SERIAL_BUS_RESOURCE_I2C_DESCRIPTOR' sugar
| | `-RecordType 0x55887c20a8e0 'EFI_ACPI_SERIAL_BUS_RESOURCE_I2C_DESCRIPTOR'
| |   `-Record 0x55887c20a860 ''
| `-FullComment 0x55887c421d50 <line:80:4, col:40>
|   `-ParagraphComment 0x55887c421d20 <col:4, col:40>
|     `-TextComment 0x55887c421cf0 <col:4, col:40> Text=" Serial Bus Resource Descriptor (I2C)"
|-RecordDecl 0x55887c20ae10 <line:98:16, line:112:1> line:98:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c20aeb0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c421e20 <line:96:4, col:40>
| | `-ParagraphComment 0x55887c421df0 <col:4, col:40>
| |   `-TextComment 0x55887c421dc0 <col:4, col:40> Text=" Serial Bus Resource Descriptor (SPI)"
| |-FieldDecl 0x55887c20af18 <line:99:3, col:33> col:33 Header 'ACPI_LARGE_RESOURCE_HEADER':'ACPI_LARGE_RESOURCE_HEADER'
| |-FieldDecl 0x55887c20af78 <line:100:3, col:33> col:33 RevisionId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20afd8 <line:101:3, col:33> col:33 ResourceSourceIndex 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20b038 <line:102:3, col:33> col:33 SerialBusType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20b098 <line:103:3, col:33> col:33 GeneralFlags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20b0f8 <line:104:3, col:33> col:33 TypeSpecificFlags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20b158 <line:105:3, col:33> col:33 TypeSpecificRevisionId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20b1b8 <line:106:3, col:33> col:33 TypeDataLength 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20b218 <line:107:3, col:33> col:33 ConnectionSpeed 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c20b278 <line:108:3, col:33> col:33 DataBitLength 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20b2d8 <line:109:3, col:33> col:33 Phase 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20b338 <line:110:3, col:33> col:33 Polarity 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c20b398 <line:111:3, col:33> col:33 DeviceSelection 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c20b448 <line:98:1, line:112:3> col:3 EFI_ACPI_SERIAL_BUS_RESOURCE_SPI_DESCRIPTOR 'struct EFI_ACPI_SERIAL_BUS_RESOURCE_SPI_DESCRIPTOR':'EFI_ACPI_SERIAL_BUS_RESOURCE_SPI_DESCRIPTOR'
| |-ElaboratedType 0x55887c20b3f0 'struct EFI_ACPI_SERIAL_BUS_RESOURCE_SPI_DESCRIPTOR' sugar
| | `-RecordType 0x55887c20ae90 'EFI_ACPI_SERIAL_BUS_RESOURCE_SPI_DESCRIPTOR'
| |   `-Record 0x55887c20ae10 ''
| `-FullComment 0x55887c421ef0 <line:96:4, col:40>
|   `-ParagraphComment 0x55887c421ec0 <col:4, col:40>
|     `-TextComment 0x55887c421e90 <col:4, col:40> Text=" Serial Bus Resource Descriptor (SPI)"
|-RecordDecl 0x55887c20b4e0 <line:117:16, line:131:1> line:117:16 struct definition
| |-MaxFieldAlignmentAttr 0x55887c20b580 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c421fc0 <line:115:4, col:41>
| | `-ParagraphComment 0x55887c421f90 <col:4, col:41>
| |   `-TextComment 0x55887c421f60 <col:4, col:41> Text=" Serial Bus Resource Descriptor (UART)"
| |-FieldDecl 0x55887c20b5e8 <line:118:3, col:33> col:33 Header 'ACPI_LARGE_RESOURCE_HEADER':'ACPI_LARGE_RESOURCE_HEADER'
| |-FieldDecl 0x55887c20b648 <line:119:3, col:33> col:33 RevisionId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20b6a8 <line:120:3, col:33> col:33 ResourceSourceIndex 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20b708 <line:121:3, col:33> col:33 SerialBusType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20b768 <line:122:3, col:33> col:33 GeneralFlags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20b7c8 <line:123:3, col:33> col:33 TypeSpecificFlags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20b828 <line:124:3, col:33> col:33 TypeSpecificRevisionId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20b888 <line:125:3, col:33> col:33 TypeDataLength 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20b8e8 <line:126:3, col:33> col:33 DefaultBaudRate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c20b948 <line:127:3, col:33> col:33 RxFIFO 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20b9a8 <line:128:3, col:33> col:33 TxFIFO 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20ba08 <line:129:3, col:33> col:33 Parity 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c20ba68 <line:130:3, col:33> col:33 SerialLinesEnabled 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c20bb18 <line:117:1, line:131:3> col:3 EFI_ACPI_SERIAL_BUS_RESOURCE_UART_DESCRIPTOR 'struct EFI_ACPI_SERIAL_BUS_RESOURCE_UART_DESCRIPTOR':'EFI_ACPI_SERIAL_BUS_RESOURCE_UART_DESCRIPTOR'
| |-ElaboratedType 0x55887c20bac0 'struct EFI_ACPI_SERIAL_BUS_RESOURCE_UART_DESCRIPTOR' sugar
| | `-RecordType 0x55887c20b560 'EFI_ACPI_SERIAL_BUS_RESOURCE_UART_DESCRIPTOR'
| |   `-Record 0x55887c20b4e0 ''
| `-FullComment 0x55887c422090 <line:115:4, col:41>
|   `-ParagraphComment 0x55887c422060 <col:4, col:41>
|     `-TextComment 0x55887c422030 <col:4, col:41> Text=" Serial Bus Resource Descriptor (UART)"
|-RecordDecl 0x55887c20bbd8 <line:143:9, line:149:1> line:143:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c20bc80 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c422160 <line:141:4, col:45>
| | `-ParagraphComment 0x55887c422130 <col:4, col:45>
| |   `-TextComment 0x55887c422100 <col:4, col:45> Text=" ACPI 5.0 Generic Address Space definition"
| |-FieldDecl 0x55887c20bce8 <line:144:3, col:13> col:13 AddressSpaceId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20bd48 <line:145:3, col:13> col:13 RegisterBitWidth 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20bda8 <line:146:3, col:13> col:13 RegisterBitOffset 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20be08 <line:147:3, col:13> col:13 AccessSize 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c20be68 <line:148:3, col:13> col:13 Address 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c20bf18 <line:143:1, line:149:3> col:3 referenced EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE 'struct EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| |-ElaboratedType 0x55887c20bec0 'struct EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE' sugar
| | `-RecordType 0x55887c20bc60 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| |   `-Record 0x55887c20bbd8 ''
| `-FullComment 0x55887c422230 <line:141:4, col:45>
|   `-ParagraphComment 0x55887c422200 <col:4, col:45>
|     `-TextComment 0x55887c4221d0 <col:4, col:45> Text=" ACPI 5.0 Generic Address Space definition"
|-RecordDecl 0x55887c20d180 <line:178:9, line:188:1> line:178:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c20d220 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c422300 <line:176:4, col:45>
| | `-ParagraphComment 0x55887c4222d0 <col:4, col:45>
| |   `-TextComment 0x55887c4222a0 <col:4, col:45> Text=" Root System Description Pointer Structure"
| |-FieldDecl 0x55887c20d288 <line:179:3, col:13> col:13 Signature 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c20d2e8 <line:180:3, col:13> col:13 Checksum 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20d398 <line:181:3, col:20> col:13 OemId 'UINT8[6]'
| |-FieldDecl 0x55887c20d3f8 <line:182:3, col:13> col:13 Revision 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20d458 <line:183:3, col:13> col:13 RsdtAddress 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c20d4b8 <line:184:3, col:13> col:13 Length 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c20d518 <line:185:3, col:13> col:13 XsdtAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c20d578 <line:186:3, col:13> col:13 ExtendedChecksum 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c20d628 <line:187:3, col:23> col:13 Reserved 'UINT8[3]'
|-TypedefDecl 0x55887c20d6d8 <line:178:1, line:188:3> col:3 EFI_ACPI_5_0_ROOT_SYSTEM_DESCRIPTION_POINTER 'struct EFI_ACPI_5_0_ROOT_SYSTEM_DESCRIPTION_POINTER':'EFI_ACPI_5_0_ROOT_SYSTEM_DESCRIPTION_POINTER'
| |-ElaboratedType 0x55887c20d680 'struct EFI_ACPI_5_0_ROOT_SYSTEM_DESCRIPTION_POINTER' sugar
| | `-RecordType 0x55887c20d200 'EFI_ACPI_5_0_ROOT_SYSTEM_DESCRIPTION_POINTER'
| |   `-Record 0x55887c20d180 ''
| `-FullComment 0x55887c4223d0 <line:176:4, col:45>
|   `-ParagraphComment 0x55887c4223a0 <col:4, col:45>
|     `-TextComment 0x55887c422370 <col:4, col:45> Text=" Root System Description Pointer Structure"
|-RecordDecl 0x55887c20d7d0 <line:199:9, line:202:1> line:199:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c20d870 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4224c0 <line:196:4, line:197:35>
| | `-ParagraphComment 0x55887c422490 <line:196:4, line:197:35>
| |   |-TextComment 0x55887c422440 <line:196:4, col:75> Text=" Common table header, this prefaces all ACPI tables, including FACS, but"
| |   `-TextComment 0x55887c422460 <line:197:4, col:35> Text=" excluding the RSD PTR structure"
| |-FieldDecl 0x55887c20d8d8 <line:200:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c20d938 <line:201:3, col:13> col:13 Length 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c20d9e8 <line:199:1, line:202:3> col:3 EFI_ACPI_5_0_COMMON_HEADER 'struct EFI_ACPI_5_0_COMMON_HEADER':'EFI_ACPI_5_0_COMMON_HEADER'
| |-ElaboratedType 0x55887c20d990 'struct EFI_ACPI_5_0_COMMON_HEADER' sugar
| | `-RecordType 0x55887c20d850 'EFI_ACPI_5_0_COMMON_HEADER'
| |   `-Record 0x55887c20d7d0 ''
| `-FullComment 0x55887c4225b0 <line:196:4, line:197:35>
|   `-ParagraphComment 0x55887c422580 <line:196:4, line:197:35>
|     |-TextComment 0x55887c422530 <line:196:4, col:75> Text=" Common table header, this prefaces all ACPI tables, including FACS, but"
|     `-TextComment 0x55887c422550 <line:197:4, col:35> Text=" excluding the RSD PTR structure"
|-RecordDecl 0x55887c20dae0 <line:229:9, line:284:1> line:229:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c20db80 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c422680 <line:227:4, col:49>
| | `-ParagraphComment 0x55887c422650 <col:4, col:49>
| |   `-TextComment 0x55887c422620 <col:4, col:49> Text=" Fixed ACPI Description Table Structure (FADT)"
| |-FieldDecl 0x55887c20dbe8 <line:230:3, col:45> col:45 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c20dc48 <line:231:3, col:45> col:45 FirmwareCtrl 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c20dca8 <line:232:3, col:45> col:45 Dsdt 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c20dd08 <line:233:3, col:45> col:45 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20dd68 <line:234:3, col:45> col:45 PreferredPmProfile 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20ddc8 <line:235:3, col:45> col:45 SciInt 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20de28 <line:236:3, col:45> col:45 SmiCmd 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c20de88 <line:237:3, col:45> col:45 AcpiEnable 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20dee8 <line:238:3, col:45> col:45 AcpiDisable 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20df48 <line:239:3, col:45> col:45 S4BiosReq 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20dfa8 <line:240:3, col:45> col:45 PstateCnt 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20e008 <line:241:3, col:45> col:45 Pm1aEvtBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c20e068 <line:242:3, col:45> col:45 Pm1bEvtBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c20e0c8 <line:243:3, col:45> col:45 Pm1aCntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c20e128 <line:244:3, col:45> col:45 Pm1bCntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c20e188 <line:245:3, col:45> col:45 Pm2CntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c20e1e8 <line:246:3, col:45> col:45 PmTmrBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c20e248 <line:247:3, col:45> col:45 Gpe0Blk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c20e2a8 <line:248:3, col:45> col:45 Gpe1Blk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c20e308 <line:249:3, col:45> col:45 Pm1EvtLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20e368 <line:250:3, col:45> col:45 Pm1CntLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20e3c8 <line:251:3, col:45> col:45 Pm2CntLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20e428 <line:252:3, col:45> col:45 PmTmrLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20e488 <line:253:3, col:45> col:45 Gpe0BlkLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20e4e8 <line:254:3, col:45> col:45 Gpe1BlkLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20e548 <line:255:3, col:45> col:45 Gpe1Base 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20e5a8 <line:256:3, col:45> col:45 CstCnt 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20e608 <line:257:3, col:45> col:45 PLvl2Lat 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20e668 <line:258:3, col:45> col:45 PLvl3Lat 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20e6c8 <line:259:3, col:45> col:45 FlushSize 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20e728 <line:260:3, col:45> col:45 FlushStride 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20e788 <line:261:3, col:45> col:45 DutyOffset 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20e7e8 <line:262:3, col:45> col:45 DutyWidth 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20e848 <line:263:3, col:45> col:45 DayAlrm 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20e8a8 <line:264:3, col:45> col:45 MonAlrm 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20e908 <line:265:3, col:45> col:45 Century 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20e968 <line:266:3, col:45> col:45 IaPcBootArch 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c20e9c8 <line:267:3, col:45> col:45 Reserved1 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20ea28 <line:268:3, col:45> col:45 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c20eab0 <line:269:3, col:45> col:45 ResetReg 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c20eb10 <line:270:3, col:45> col:45 ResetValue 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c20ebc0 <line:271:3, col:56> col:45 Reserved2 'UINT8[3]'
| |-FieldDecl 0x55887c20ec20 <line:272:3, col:45> col:45 XFirmwareCtrl 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c20ec80 <line:273:3, col:45> col:45 XDsdt 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c20ece0 <line:274:3, col:45> col:45 XPm1aEvtBlk 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c20ed40 <line:275:3, col:45> col:45 XPm1bEvtBlk 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c20eda0 <line:276:3, col:45> col:45 XPm1aCntBlk 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c20ee00 <line:277:3, col:45> col:45 XPm1bCntBlk 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c20ee60 <line:278:3, col:45> col:45 XPm2CntBlk 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c20eec0 <line:279:3, col:45> col:45 XPmTmrBlk 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c20ef20 <line:280:3, col:45> col:45 XGpe0Blk 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c20ef80 <line:281:3, col:45> col:45 XGpe1Blk 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c20efe0 <line:282:3, col:45> col:45 SleepControlReg 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| `-FieldDecl 0x55887c20f040 <line:283:3, col:45> col:45 SleepStatusReg 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
|-TypedefDecl 0x55887c20f0e8 <line:229:1, line:284:3> col:3 EFI_ACPI_5_0_FIXED_ACPI_DESCRIPTION_TABLE 'struct EFI_ACPI_5_0_FIXED_ACPI_DESCRIPTION_TABLE':'EFI_ACPI_5_0_FIXED_ACPI_DESCRIPTION_TABLE'
| |-ElaboratedType 0x55887c20f090 'struct EFI_ACPI_5_0_FIXED_ACPI_DESCRIPTION_TABLE' sugar
| | `-RecordType 0x55887c20db60 'EFI_ACPI_5_0_FIXED_ACPI_DESCRIPTION_TABLE'
| |   `-Record 0x55887c20dae0 ''
| `-FullComment 0x55887c422760 <line:227:4, col:49>
|   `-ParagraphComment 0x55887c422730 <col:4, col:49>
|     `-TextComment 0x55887c422700 <col:4, col:49> Text=" Fixed ACPI Description Table Structure (FADT)"
|-RecordDecl 0x55887c2103a0 <line:345:9, line:357:1> line:345:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c210440 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c422830 <line:343:4, col:35>
| | `-ParagraphComment 0x55887c422800 <col:4, col:35>
| |   `-TextComment 0x55887c4227d0 <col:4, col:35> Text=" Firmware ACPI Control Structure"
| |-FieldDecl 0x55887c2104a8 <line:346:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c210508 <line:347:3, col:13> col:13 Length 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c210568 <line:348:3, col:13> col:13 HardwareSignature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2105c8 <line:349:3, col:13> col:13 FirmwareWakingVector 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c210628 <line:350:3, col:13> col:13 GlobalLock 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c210688 <line:351:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2106e8 <line:352:3, col:13> col:13 XFirmwareWakingVector 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c210748 <line:353:3, col:13> col:13 Version 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2107f8 <line:354:3, col:24> col:13 Reserved0 'UINT8[3]'
| |-FieldDecl 0x55887c210858 <line:355:3, col:13> col:13 OspmFlags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c210908 <line:356:3, col:25> col:13 Reserved1 'UINT8[24]'
|-TypedefDecl 0x55887c2109b8 <line:345:1, line:357:3> col:3 EFI_ACPI_5_0_FIRMWARE_ACPI_CONTROL_STRUCTURE 'struct EFI_ACPI_5_0_FIRMWARE_ACPI_CONTROL_STRUCTURE':'EFI_ACPI_5_0_FIRMWARE_ACPI_CONTROL_STRUCTURE'
| |-ElaboratedType 0x55887c210960 'struct EFI_ACPI_5_0_FIRMWARE_ACPI_CONTROL_STRUCTURE' sugar
| | `-RecordType 0x55887c210420 'EFI_ACPI_5_0_FIRMWARE_ACPI_CONTROL_STRUCTURE'
| |   `-Record 0x55887c2103a0 ''
| `-FullComment 0x55887c422900 <line:343:4, col:35>
|   `-ParagraphComment 0x55887c4228d0 <col:4, col:35>
|     `-TextComment 0x55887c4228a0 <col:4, col:35> Text=" Firmware ACPI Control Structure"
|-RecordDecl 0x55887c210ae0 <line:391:9, line:395:1> line:391:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c210b80 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4229f0 <line:388:4, line:389:50>
| | `-ParagraphComment 0x55887c4229c0 <line:388:4, line:389:50>
| |   |-TextComment 0x55887c422970 <line:388:4, col:77> Text=" Multiple APIC Description Table header definition.  The rest of the table"
| |   `-TextComment 0x55887c422990 <line:389:4, col:50> Text=" must be defined in a platform specific manner."
| |-FieldDecl 0x55887c210be8 <line:392:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c210c48 <line:393:3, col:34> col:34 LocalApicAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c210ca8 <line:394:3, col:34> col:34 Flags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c210d58 <line:391:1, line:395:3> col:3 EFI_ACPI_5_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER 'struct EFI_ACPI_5_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER':'EFI_ACPI_5_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER'
| |-ElaboratedType 0x55887c210d00 'struct EFI_ACPI_5_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c210b60 'EFI_ACPI_5_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER'
| |   `-Record 0x55887c210ae0 ''
| `-FullComment 0x55887c422ae0 <line:388:4, line:389:50>
|   `-ParagraphComment 0x55887c422ab0 <line:388:4, line:389:50>
|     |-TextComment 0x55887c422a60 <line:388:4, col:77> Text=" Multiple APIC Description Table header definition.  The rest of the table"
|     `-TextComment 0x55887c422a80 <line:389:4, col:50> Text=" must be defined in a platform specific manner."
|-RecordDecl 0x55887c210e50 <line:434:9, line:440:1> line:434:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c210ef0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c422bb0 <line:432:4, col:45>
| | `-ParagraphComment 0x55887c422b80 <col:4, col:45>
| |   `-TextComment 0x55887c422b50 <col:4, col:45> Text=" Processor Local APIC Structure Definition"
| |-FieldDecl 0x55887c210f58 <line:435:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c210fb8 <line:436:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c211018 <line:437:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c211078 <line:438:3, col:13> col:13 ApicId 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c2110d8 <line:439:3, col:13> col:13 Flags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c211188 <line:434:1, line:440:3> col:3 EFI_ACPI_5_0_PROCESSOR_LOCAL_APIC_STRUCTURE 'struct EFI_ACPI_5_0_PROCESSOR_LOCAL_APIC_STRUCTURE':'EFI_ACPI_5_0_PROCESSOR_LOCAL_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c211130 'struct EFI_ACPI_5_0_PROCESSOR_LOCAL_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c210ed0 'EFI_ACPI_5_0_PROCESSOR_LOCAL_APIC_STRUCTURE'
| |   `-Record 0x55887c210e50 ''
| `-FullComment 0x55887c422c80 <line:432:4, col:45>
|   `-ParagraphComment 0x55887c422c50 <col:4, col:45>
|     `-TextComment 0x55887c422c20 <col:4, col:45> Text=" Processor Local APIC Structure Definition"
|-RecordDecl 0x55887c211250 <line:450:9, line:457:1> line:450:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2112f0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c422d50 <line:448:4, col:21>
| | `-ParagraphComment 0x55887c422d20 <col:4, col:21>
| |   `-TextComment 0x55887c422cf0 <col:4, col:21> Text=" IO APIC Structure"
| |-FieldDecl 0x55887c211358 <line:451:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2113b8 <line:452:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c211418 <line:453:3, col:13> col:13 IoApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c211478 <line:454:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2114d8 <line:455:3, col:13> col:13 IoApicAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c211538 <line:456:3, col:13> col:13 GlobalSystemInterruptBase 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c2115e8 <line:450:1, line:457:3> col:3 EFI_ACPI_5_0_IO_APIC_STRUCTURE 'struct EFI_ACPI_5_0_IO_APIC_STRUCTURE':'EFI_ACPI_5_0_IO_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c211590 'struct EFI_ACPI_5_0_IO_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c2112d0 'EFI_ACPI_5_0_IO_APIC_STRUCTURE'
| |   `-Record 0x55887c211250 ''
| `-FullComment 0x55887c422e20 <line:448:4, col:21>
|   `-ParagraphComment 0x55887c422df0 <col:4, col:21>
|     `-TextComment 0x55887c422dc0 <col:4, col:21> Text=" IO APIC Structure"
|-RecordDecl 0x55887c211680 <line:462:9, line:469:1> line:462:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c211720 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c422ef0 <line:460:4, col:39>
| | `-ParagraphComment 0x55887c422ec0 <col:4, col:39>
| |   `-TextComment 0x55887c422e90 <col:4, col:39> Text=" Interrupt Source Override Structure"
| |-FieldDecl 0x55887c211788 <line:463:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2117e8 <line:464:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c211848 <line:465:3, col:13> col:13 Bus 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2118a8 <line:466:3, col:13> col:13 Source 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c211908 <line:467:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c211968 <line:468:3, col:13> col:13 Flags 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c211a18 <line:462:1, line:469:3> col:3 EFI_ACPI_5_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE 'struct EFI_ACPI_5_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE':'EFI_ACPI_5_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE'
| |-ElaboratedType 0x55887c2119c0 'struct EFI_ACPI_5_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE' sugar
| | `-RecordType 0x55887c211700 'EFI_ACPI_5_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE'
| |   `-Record 0x55887c211680 ''
| `-FullComment 0x55887c422fc0 <line:460:4, col:39>
|   `-ParagraphComment 0x55887c422f90 <col:4, col:39>
|     `-TextComment 0x55887c422f60 <col:4, col:39> Text=" Interrupt Source Override Structure"
|-RecordDecl 0x55887c211ab0 <line:474:9, line:486:1> line:474:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c211b50 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c423090 <line:472:4, col:51>
| | `-ParagraphComment 0x55887c423060 <col:4, col:51>
| |   `-TextComment 0x55887c423030 <col:4, col:51> Text=" Platform Interrupt Sources Structure Definition"
| |-FieldDecl 0x55887c211bb8 <line:475:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c211c18 <line:476:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c211c78 <line:477:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c211cd8 <line:478:3, col:13> col:13 InterruptType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c211d38 <line:479:3, col:13> col:13 ProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c211d98 <line:480:3, col:13> col:13 ProcessorEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c211df8 <line:481:3, col:13> col:13 IoSapicVector 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c211e58 <line:482:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c211eb8 <line:483:3, col:13> col:13 PlatformInterruptSourceFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c211f18 <line:484:3, col:13> col:13 CpeiProcessorOverride 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c211fc8 <line:485:3, col:24> col:13 Reserved 'UINT8[31]'
|-TypedefDecl 0x55887c212078 <line:474:1, line:486:3> col:3 EFI_ACPI_5_0_PLATFORM_INTERRUPT_APIC_STRUCTURE 'struct EFI_ACPI_5_0_PLATFORM_INTERRUPT_APIC_STRUCTURE':'EFI_ACPI_5_0_PLATFORM_INTERRUPT_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c212020 'struct EFI_ACPI_5_0_PLATFORM_INTERRUPT_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c211b30 'EFI_ACPI_5_0_PLATFORM_INTERRUPT_APIC_STRUCTURE'
| |   `-Record 0x55887c211ab0 ''
| `-FullComment 0x55887c423160 <line:472:4, col:51>
|   `-ParagraphComment 0x55887c423130 <col:4, col:51>
|     `-TextComment 0x55887c423100 <col:4, col:51> Text=" Platform Interrupt Sources Structure Definition"
|-RecordDecl 0x55887c212110 <line:498:9, line:503:1> line:498:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2121b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c423230 <line:496:4, col:43>
| | `-ParagraphComment 0x55887c423200 <col:4, col:43>
| |   `-TextComment 0x55887c4231d0 <col:4, col:43> Text=" Non-Maskable Interrupt Source Structure"
| |-FieldDecl 0x55887c212218 <line:499:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c212278 <line:500:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2122d8 <line:501:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c2156d0 <line:502:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c215778 <line:498:1, line:503:3> col:3 EFI_ACPI_5_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE 'struct EFI_ACPI_5_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE':'EFI_ACPI_5_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE'
| |-ElaboratedType 0x55887c215720 'struct EFI_ACPI_5_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE' sugar
| | `-RecordType 0x55887c212190 'EFI_ACPI_5_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE'
| |   `-Record 0x55887c212110 ''
| `-FullComment 0x55887c423300 <line:496:4, col:43>
|   `-ParagraphComment 0x55887c4232d0 <col:4, col:43>
|     `-TextComment 0x55887c4232a0 <col:4, col:43> Text=" Non-Maskable Interrupt Source Structure"
|-RecordDecl 0x55887c215810 <line:508:9, line:514:1> line:508:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2158b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4233d0 <line:506:4, col:28>
| | `-ParagraphComment 0x55887c4233a0 <col:4, col:28>
| |   `-TextComment 0x55887c423370 <col:4, col:28> Text=" Local APIC NMI Structure"
| |-FieldDecl 0x55887c215918 <line:509:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c215978 <line:510:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2159d8 <line:511:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c215a38 <line:512:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c215a98 <line:513:3, col:13> col:13 LocalApicLint 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c215b48 <line:508:1, line:514:3> col:3 EFI_ACPI_5_0_LOCAL_APIC_NMI_STRUCTURE 'struct EFI_ACPI_5_0_LOCAL_APIC_NMI_STRUCTURE':'EFI_ACPI_5_0_LOCAL_APIC_NMI_STRUCTURE'
| |-ElaboratedType 0x55887c215af0 'struct EFI_ACPI_5_0_LOCAL_APIC_NMI_STRUCTURE' sugar
| | `-RecordType 0x55887c215890 'EFI_ACPI_5_0_LOCAL_APIC_NMI_STRUCTURE'
| |   `-Record 0x55887c215810 ''
| `-FullComment 0x55887c4234a0 <line:506:4, col:28>
|   `-ParagraphComment 0x55887c423470 <col:4, col:28>
|     `-TextComment 0x55887c423440 <col:4, col:28> Text=" Local APIC NMI Structure"
|-RecordDecl 0x55887c215be0 <line:519:9, line:524:1> line:519:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c215c80 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c423570 <line:517:4, col:41>
| | `-ParagraphComment 0x55887c423540 <col:4, col:41>
| |   `-TextComment 0x55887c423510 <col:4, col:41> Text=" Local APIC Address Override Structure"
| |-FieldDecl 0x55887c215ce8 <line:520:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c215d48 <line:521:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c215da8 <line:522:3, col:13> col:13 Reserved 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c215e08 <line:523:3, col:13> col:13 LocalApicAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c215eb8 <line:519:1, line:524:3> col:3 EFI_ACPI_5_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE 'struct EFI_ACPI_5_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE':'EFI_ACPI_5_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE'
| |-ElaboratedType 0x55887c215e60 'struct EFI_ACPI_5_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE' sugar
| | `-RecordType 0x55887c215c60 'EFI_ACPI_5_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE'
| |   `-Record 0x55887c215be0 ''
| `-FullComment 0x55887c423640 <line:517:4, col:41>
|   `-ParagraphComment 0x55887c423610 <col:4, col:41>
|     `-TextComment 0x55887c4235e0 <col:4, col:41> Text=" Local APIC Address Override Structure"
|-RecordDecl 0x55887c215f50 <line:529:9, line:536:1> line:529:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c215ff0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c423710 <line:527:4, col:22>
| | `-ParagraphComment 0x55887c4236e0 <col:4, col:22>
| |   `-TextComment 0x55887c4236b0 <col:4, col:22> Text=" IO SAPIC Structure"
| |-FieldDecl 0x55887c216058 <line:530:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2160b8 <line:531:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c216118 <line:532:3, col:13> col:13 IoApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c216178 <line:533:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2161d8 <line:534:3, col:13> col:13 GlobalSystemInterruptBase 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c216238 <line:535:3, col:13> col:13 IoSapicAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c2162e8 <line:529:1, line:536:3> col:3 EFI_ACPI_5_0_IO_SAPIC_STRUCTURE 'struct EFI_ACPI_5_0_IO_SAPIC_STRUCTURE':'EFI_ACPI_5_0_IO_SAPIC_STRUCTURE'
| |-ElaboratedType 0x55887c216290 'struct EFI_ACPI_5_0_IO_SAPIC_STRUCTURE' sugar
| | `-RecordType 0x55887c215fd0 'EFI_ACPI_5_0_IO_SAPIC_STRUCTURE'
| |   `-Record 0x55887c215f50 ''
| `-FullComment 0x55887c4237e0 <line:527:4, col:22>
|   `-ParagraphComment 0x55887c4237b0 <col:4, col:22>
|     `-TextComment 0x55887c423780 <col:4, col:22> Text=" IO SAPIC Structure"
|-RecordDecl 0x55887c216380 <line:542:9, line:551:1> line:542:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c216420 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4238d0 <line:539:4, line:540:86>
| | `-ParagraphComment 0x55887c4238a0 <line:539:4, line:540:86>
| |   |-TextComment 0x55887c423850 <line:539:4, col:25> Text=" Local SAPIC Structure"
| |   `-TextComment 0x55887c423870 <line:540:4, col:86> Text=" This struct followed by a null-terminated ASCII string - ACPI Processor UID String"
| |-FieldDecl 0x55887c216488 <line:543:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2164e8 <line:544:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c216548 <line:545:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2165a8 <line:546:3, col:13> col:13 LocalSapicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c216608 <line:547:3, col:13> col:13 LocalSapicEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2166b8 <line:548:3, col:23> col:13 Reserved 'UINT8[3]'
| |-FieldDecl 0x55887c216718 <line:549:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c216778 <line:550:3, col:13> col:13 ACPIProcessorUIDValue 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c216828 <line:542:1, line:551:3> col:3 EFI_ACPI_5_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE 'struct EFI_ACPI_5_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE':'EFI_ACPI_5_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE'
| |-ElaboratedType 0x55887c2167d0 'struct EFI_ACPI_5_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE' sugar
| | `-RecordType 0x55887c216400 'EFI_ACPI_5_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE'
| |   `-Record 0x55887c216380 ''
| `-FullComment 0x55887c4239c0 <line:539:4, line:540:86>
|   `-ParagraphComment 0x55887c423990 <line:539:4, line:540:86>
|     |-TextComment 0x55887c423940 <line:539:4, col:25> Text=" Local SAPIC Structure"
|     `-TextComment 0x55887c423960 <line:540:4, col:86> Text=" This struct followed by a null-terminated ASCII string - ACPI Processor UID String"
|-RecordDecl 0x55887c2168c0 <line:556:9, line:566:1> line:556:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c216960 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c423a90 <line:554:4, col:40>
| | `-ParagraphComment 0x55887c423a60 <col:4, col:40>
| |   `-TextComment 0x55887c423a30 <col:4, col:40> Text=" Platform Interrupt Sources Structure"
| |-FieldDecl 0x55887c2169c8 <line:557:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c216a28 <line:558:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c216a88 <line:559:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c216ae8 <line:560:3, col:13> col:13 InterruptType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c216b48 <line:561:3, col:13> col:13 ProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c216ba8 <line:562:3, col:13> col:13 ProcessorEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c216c08 <line:563:3, col:13> col:13 IoSapicVector 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c216c68 <line:564:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c216cc8 <line:565:3, col:13> col:13 PlatformInterruptSourceFlags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c216d78 <line:556:1, line:566:3> col:3 EFI_ACPI_5_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE 'struct EFI_ACPI_5_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE':'EFI_ACPI_5_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE'
| |-ElaboratedType 0x55887c216d20 'struct EFI_ACPI_5_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE' sugar
| | `-RecordType 0x55887c216940 'EFI_ACPI_5_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE'
| |   `-Record 0x55887c2168c0 ''
| `-FullComment 0x55887c423b60 <line:554:4, col:40>
|   `-ParagraphComment 0x55887c423b30 <col:4, col:40>
|     `-TextComment 0x55887c423b00 <col:4, col:40> Text=" Platform Interrupt Sources Structure"
|-RecordDecl 0x55887c216e40 <line:577:9, line:584:1> line:577:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c216ee0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c423c30 <line:575:4, col:47>
| | `-ParagraphComment 0x55887c423c00 <col:4, col:47>
| |   `-TextComment 0x55887c423bd0 <col:4, col:47> Text=" Processor Local x2APIC Structure Definition"
| |-FieldDecl 0x55887c216f48 <line:578:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c216fa8 <line:579:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c217058 <line:580:3, col:23> col:13 Reserved 'UINT8[2]'
| |-FieldDecl 0x55887c2170b8 <line:581:3, col:13> col:13 X2ApicId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c217118 <line:582:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c217178 <line:583:3, col:13> col:13 AcpiProcessorUid 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c217228 <line:577:1, line:584:3> col:3 EFI_ACPI_5_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE 'struct EFI_ACPI_5_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE':'EFI_ACPI_5_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE'
| |-ElaboratedType 0x55887c2171d0 'struct EFI_ACPI_5_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c216ec0 'EFI_ACPI_5_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE'
| |   `-Record 0x55887c216e40 ''
| `-FullComment 0x55887c423d00 <line:575:4, col:47>
|   `-ParagraphComment 0x55887c423cd0 <col:4, col:47>
|     `-TextComment 0x55887c423ca0 <col:4, col:47> Text=" Processor Local x2APIC Structure Definition"
|-RecordDecl 0x55887c2172c0 <line:589:9, line:596:1> line:589:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c217360 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c423dd0 <line:587:4, col:30>
| | `-ParagraphComment 0x55887c423da0 <col:4, col:30>
| |   `-TextComment 0x55887c423d70 <col:4, col:30> Text=" Local x2APIC NMI Structure"
| |-FieldDecl 0x55887c2173c8 <line:590:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c217428 <line:591:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c217488 <line:592:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2174e8 <line:593:3, col:13> col:13 AcpiProcessorUid 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c217548 <line:594:3, col:13> col:13 LocalX2ApicLint 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c2175f8 <line:595:3, col:23> col:13 Reserved 'UINT8[3]'
|-TypedefDecl 0x55887c2178e0 <line:589:1, line:596:3> col:3 EFI_ACPI_5_0_LOCAL_X2APIC_NMI_STRUCTURE 'struct EFI_ACPI_5_0_LOCAL_X2APIC_NMI_STRUCTURE':'EFI_ACPI_5_0_LOCAL_X2APIC_NMI_STRUCTURE'
| |-ElaboratedType 0x55887c217650 'struct EFI_ACPI_5_0_LOCAL_X2APIC_NMI_STRUCTURE' sugar
| | `-RecordType 0x55887c217340 'EFI_ACPI_5_0_LOCAL_X2APIC_NMI_STRUCTURE'
| |   `-Record 0x55887c2172c0 ''
| `-FullComment 0x55887c423ea0 <line:587:4, col:30>
|   `-ParagraphComment 0x55887c423e70 <col:4, col:30>
|     `-TextComment 0x55887c423e40 <col:4, col:30> Text=" Local x2APIC NMI Structure"
|-RecordDecl 0x55887c217980 <line:601:9, line:612:1> line:601:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c217a20 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c423f70 <line:599:4, col:17>
| | `-ParagraphComment 0x55887c423f40 <col:4, col:17>
| |   `-TextComment 0x55887c423f10 <col:4, col:17> Text=" GIC Structure"
| |-FieldDecl 0x55887c217a88 <line:602:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c217ae8 <line:603:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c217b48 <line:604:3, col:13> col:13 Reserved 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c217ba8 <line:605:3, col:13> col:13 GicId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c217c08 <line:606:3, col:13> col:13 AcpiProcessorUid 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c217c68 <line:607:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c217cc8 <line:608:3, col:13> col:13 ParkingProtocolVersion 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c217d28 <line:609:3, col:13> col:13 PerformanceInterruptGsiv 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c217d88 <line:610:3, col:13> col:13 ParkedAddress 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c217de8 <line:611:3, col:13> col:13 PhysicalBaseAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c217e98 <line:601:1, line:612:3> col:3 EFI_ACPI_5_0_GIC_STRUCTURE 'struct EFI_ACPI_5_0_GIC_STRUCTURE':'EFI_ACPI_5_0_GIC_STRUCTURE'
| |-ElaboratedType 0x55887c217e40 'struct EFI_ACPI_5_0_GIC_STRUCTURE' sugar
| | `-RecordType 0x55887c217a00 'EFI_ACPI_5_0_GIC_STRUCTURE'
| |   `-Record 0x55887c217980 ''
| `-FullComment 0x55887c424040 <line:599:4, col:17>
|   `-ParagraphComment 0x55887c424010 <col:4, col:17>
|     `-TextComment 0x55887c423fe0 <col:4, col:17> Text=" GIC Structure"
|-RecordDecl 0x55887c217f60 <line:623:9, line:631:1> line:623:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c218000 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c424110 <line:621:4, col:29>
| | `-ParagraphComment 0x55887c4240e0 <col:4, col:29>
| |   `-TextComment 0x55887c4240b0 <col:4, col:29> Text=" GIC Distributor Structure"
| |-FieldDecl 0x55887c218068 <line:624:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2180c8 <line:625:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c218128 <line:626:3, col:13> col:13 Reserved1 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c218188 <line:627:3, col:13> col:13 GicId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2181e8 <line:628:3, col:13> col:13 PhysicalBaseAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c218248 <line:629:3, col:13> col:13 SystemVectorBase 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c2182a8 <line:630:3, col:13> col:13 Reserved2 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c218358 <line:623:1, line:631:3> col:3 EFI_ACPI_5_0_GIC_DISTRIBUTOR_STRUCTURE 'struct EFI_ACPI_5_0_GIC_DISTRIBUTOR_STRUCTURE':'EFI_ACPI_5_0_GIC_DISTRIBUTOR_STRUCTURE'
| |-ElaboratedType 0x55887c218300 'struct EFI_ACPI_5_0_GIC_DISTRIBUTOR_STRUCTURE' sugar
| | `-RecordType 0x55887c217fe0 'EFI_ACPI_5_0_GIC_DISTRIBUTOR_STRUCTURE'
| |   `-Record 0x55887c217f60 ''
| `-FullComment 0x55887c4241e0 <line:621:4, col:29>
|   `-ParagraphComment 0x55887c4241b0 <col:4, col:29>
|     `-TextComment 0x55887c424180 <col:4, col:29> Text=" GIC Distributor Structure"
|-RecordDecl 0x55887c2183f0 <line:636:9, line:641:1> line:636:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c218490 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4242b0 <line:634:4, col:42>
| | `-ParagraphComment 0x55887c424280 <col:4, col:42>
| |   `-TextComment 0x55887c424250 <col:4, col:42> Text=" Smart Battery Description Table (SBST)"
| |-FieldDecl 0x55887c2184f8 <line:637:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c218558 <line:638:3, col:34> col:34 WarningEnergyLevel 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2185b8 <line:639:3, col:34> col:34 LowEnergyLevel 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c218618 <line:640:3, col:34> col:34 CriticalEnergyLevel 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c2186c8 <line:636:1, line:641:3> col:3 EFI_ACPI_5_0_SMART_BATTERY_DESCRIPTION_TABLE 'struct EFI_ACPI_5_0_SMART_BATTERY_DESCRIPTION_TABLE':'EFI_ACPI_5_0_SMART_BATTERY_DESCRIPTION_TABLE'
| |-ElaboratedType 0x55887c218670 'struct EFI_ACPI_5_0_SMART_BATTERY_DESCRIPTION_TABLE' sugar
| | `-RecordType 0x55887c218470 'EFI_ACPI_5_0_SMART_BATTERY_DESCRIPTION_TABLE'
| |   `-Record 0x55887c2183f0 ''
| `-FullComment 0x55887c424380 <line:634:4, col:42>
|   `-ParagraphComment 0x55887c424350 <col:4, col:42>
|     `-TextComment 0x55887c424320 <col:4, col:42> Text=" Smart Battery Description Table (SBST)"
|-RecordDecl 0x55887c218790 <line:653:9, line:659:1> line:653:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c218830 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4244a0 <line:649:4, line:651:57>
| | `-ParagraphComment 0x55887c424470 <line:649:4, line:651:57>
| |   |-TextComment 0x55887c4243f0 <line:649:4, col:51> Text=" Embedded Controller Boot Resources Table (ECDT)"
| |   |-TextComment 0x55887c424410 <line:650:4, col:73> Text=" The table is followed by a null terminated ASCII string that contains"
| |   `-TextComment 0x55887c424430 <line:651:4, col:57> Text=" a fully qualified reference to the name space object."
| |-FieldDecl 0x55887c218898 <line:654:3, col:45> col:45 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c2188f8 <line:655:3, col:45> col:45 EcControl 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c218958 <line:656:3, col:45> col:45 EcData 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c2189b8 <line:657:3, col:45> col:45 Uid 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c218a18 <line:658:3, col:45> col:45 GpeBit 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c218ac8 <line:653:1, line:659:3> col:3 EFI_ACPI_5_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE 'struct EFI_ACPI_5_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE':'EFI_ACPI_5_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE'
| |-ElaboratedType 0x55887c218a70 'struct EFI_ACPI_5_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE' sugar
| | `-RecordType 0x55887c218810 'EFI_ACPI_5_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE'
| |   `-Record 0x55887c218790 ''
| `-FullComment 0x55887c4245c0 <line:649:4, line:651:57>
|   `-ParagraphComment 0x55887c424590 <line:649:4, line:651:57>
|     |-TextComment 0x55887c424510 <line:649:4, col:51> Text=" Embedded Controller Boot Resources Table (ECDT)"
|     |-TextComment 0x55887c424530 <line:650:4, col:73> Text=" The table is followed by a null terminated ASCII string that contains"
|     `-TextComment 0x55887c424550 <line:651:4, col:57> Text=" a fully qualified reference to the name space object."
|-RecordDecl 0x55887c218b90 <line:670:9, line:674:1> line:670:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c218c30 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4246b0 <line:667:4, line:668:50>
| | `-ParagraphComment 0x55887c424680 <line:667:4, line:668:50>
| |   |-TextComment 0x55887c424630 <line:667:4, col:65> Text=" System Resource Affinity Table (SRAT).  The rest of the table"
| |   `-TextComment 0x55887c424650 <line:668:4, col:50> Text=" must be defined in a platform specific manner."
| |-FieldDecl 0x55887c218c98 <line:671:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c218cf8 <line:672:3, col:34> col:34 Reserved1 'UINT32':'unsigned int'
| | `-FullComment 0x55887c424780 <col:49, col:65>
| |   `-ParagraphComment 0x55887c424750 <col:49, col:65>
| |     `-TextComment 0x55887c424720 <col:49, col:65> Text=" Must be set to 1"
| `-FieldDecl 0x55887c218d88 <line:673:3, col:34> col:34 Reserved2 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c218e38 <line:670:1, line:674:3> col:3 EFI_ACPI_5_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER 'struct EFI_ACPI_5_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER':'EFI_ACPI_5_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER'
| |-ElaboratedType 0x55887c218de0 'struct EFI_ACPI_5_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER' sugar
| | `-RecordType 0x55887c218c10 'EFI_ACPI_5_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER'
| |   `-Record 0x55887c218b90 ''
| `-FullComment 0x55887c424870 <line:667:4, line:668:50>
|   `-ParagraphComment 0x55887c424840 <line:667:4, line:668:50>
|     |-TextComment 0x55887c4247f0 <line:667:4, col:65> Text=" System Resource Affinity Table (SRAT).  The rest of the table"
|     `-TextComment 0x55887c424810 <line:668:4, col:50> Text=" must be defined in a platform specific manner."
|-RecordDecl 0x55887c218f00 <line:693:9, line:702:1> line:693:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c218fa0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c424940 <line:691:4, col:60>
| | `-ParagraphComment 0x55887c424910 <col:4, col:60>
| |   `-TextComment 0x55887c4248e0 <col:4, col:60> Text=" Processor Local APIC/SAPIC Affinity Structure Definition"
| |-FieldDecl 0x55887c219008 <line:694:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c219068 <line:695:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2190c8 <line:696:3, col:13> col:13 ProximityDomain7To0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c219128 <line:697:3, col:13> col:13 ApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c219188 <line:698:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2191e8 <line:699:3, col:13> col:13 LocalSapicEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c219298 <line:700:3, col:35> col:13 ProximityDomain31To8 'UINT8[3]'
| `-FieldDecl 0x55887c2192f8 <line:701:3, col:13> col:13 ClockDomain 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c2193a8 <line:693:1, line:702:3> col:3 EFI_ACPI_5_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE 'struct EFI_ACPI_5_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE':'EFI_ACPI_5_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE'
| |-ElaboratedType 0x55887c219350 'struct EFI_ACPI_5_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE' sugar
| | `-RecordType 0x55887c218f80 'EFI_ACPI_5_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE'
| |   `-Record 0x55887c218f00 ''
| `-FullComment 0x55887c424a10 <line:691:4, col:60>
|   `-ParagraphComment 0x55887c4249e0 <col:4, col:60>
|     `-TextComment 0x55887c4249b0 <col:4, col:60> Text=" Processor Local APIC/SAPIC Affinity Structure Definition"
|-RecordDecl 0x55887c219470 <line:712:9, line:724:1> line:712:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c219510 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c424ae0 <line:710:4, col:40>
| | `-ParagraphComment 0x55887c424ab0 <col:4, col:40>
| |   `-TextComment 0x55887c424a80 <col:4, col:40> Text=" Memory Affinity Structure Definition"
| |-FieldDecl 0x55887c219578 <line:713:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2195d8 <line:714:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c219638 <line:715:3, col:13> col:13 ProximityDomain 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c219698 <line:716:3, col:13> col:13 Reserved1 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2196f8 <line:717:3, col:13> col:13 AddressBaseLow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c219758 <line:718:3, col:13> col:13 AddressBaseHigh 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2197b8 <line:719:3, col:13> col:13 LengthLow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c219818 <line:720:3, col:13> col:13 LengthHigh 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c219878 <line:721:3, col:13> col:13 Reserved2 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c219c30 <line:722:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c219c90 <line:723:3, col:13> col:13 Reserved3 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c219d38 <line:712:1, line:724:3> col:3 EFI_ACPI_5_0_MEMORY_AFFINITY_STRUCTURE 'struct EFI_ACPI_5_0_MEMORY_AFFINITY_STRUCTURE':'EFI_ACPI_5_0_MEMORY_AFFINITY_STRUCTURE'
| |-ElaboratedType 0x55887c219ce0 'struct EFI_ACPI_5_0_MEMORY_AFFINITY_STRUCTURE' sugar
| | `-RecordType 0x55887c2194f0 'EFI_ACPI_5_0_MEMORY_AFFINITY_STRUCTURE'
| |   `-Record 0x55887c219470 ''
| `-FullComment 0x55887c424bb0 <line:710:4, col:40>
|   `-ParagraphComment 0x55887c424b80 <col:4, col:40>
|     `-TextComment 0x55887c424b50 <col:4, col:40> Text=" Memory Affinity Structure Definition"
|-RecordDecl 0x55887c219dd0 <line:736:9, line:745:1> line:736:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c219e70 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c424c80 <line:734:4, col:56>
| | `-ParagraphComment 0x55887c424c50 <col:4, col:56>
| |   `-TextComment 0x55887c424c20 <col:4, col:56> Text=" Processor Local x2APIC Affinity Structure Definition"
| |-FieldDecl 0x55887c219ed8 <line:737:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c219f38 <line:738:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c219fe8 <line:739:3, col:24> col:13 Reserved1 'UINT8[2]'
| |-FieldDecl 0x55887c21a048 <line:740:3, col:13> col:13 ProximityDomain 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c21a0a8 <line:741:3, col:13> col:13 X2ApicId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c21a108 <line:742:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c21a168 <line:743:3, col:13> col:13 ClockDomain 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c21a218 <line:744:3, col:24> col:13 Reserved2 'UINT8[4]'
|-TypedefDecl 0x55887c21a2c8 <line:736:1, line:745:3> col:3 EFI_ACPI_5_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE 'struct EFI_ACPI_5_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE':'EFI_ACPI_5_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE'
| |-ElaboratedType 0x55887c21a270 'struct EFI_ACPI_5_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE' sugar
| | `-RecordType 0x55887c219e50 'EFI_ACPI_5_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE'
| |   `-Record 0x55887c219dd0 ''
| `-FullComment 0x55887c424d50 <line:734:4, col:56>
|   `-ParagraphComment 0x55887c424d20 <col:4, col:56>
|     `-TextComment 0x55887c424cf0 <col:4, col:56> Text=" Processor Local x2APIC Affinity Structure Definition"
|-RecordDecl 0x55887c21a360 <line:751:9, line:754:1> line:751:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c21a400 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c424e40 <line:748:4, line:749:38>
| | `-ParagraphComment 0x55887c424e10 <line:748:4, line:749:38>
| |   |-TextComment 0x55887c424dc0 <line:748:4, col:54> Text=" System Locality Distance Information Table (SLIT)."
| |   `-TextComment 0x55887c424de0 <line:749:4, col:38> Text=" The rest of the table is a matrix."
| |-FieldDecl 0x55887c21a468 <line:752:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c21a4c8 <line:753:3, col:34> col:34 NumberOfSystemLocalities 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c21a578 <line:751:1, line:754:3> col:3 EFI_ACPI_5_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER 'struct EFI_ACPI_5_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER':'EFI_ACPI_5_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER'
| |-ElaboratedType 0x55887c21a520 'struct EFI_ACPI_5_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c21a3e0 'EFI_ACPI_5_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER'
| |   `-Record 0x55887c21a360 ''
| `-FullComment 0x55887c424f30 <line:748:4, line:749:38>
|   `-ParagraphComment 0x55887c424f00 <line:748:4, line:749:38>
|     |-TextComment 0x55887c424eb0 <line:748:4, col:54> Text=" System Locality Distance Information Table (SLIT)."
|     `-TextComment 0x55887c424ed0 <line:749:4, col:38> Text=" The rest of the table is a matrix."
|-RecordDecl 0x55887c21a640 <line:764:9, line:767:1> line:764:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c21a6e0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c425000 <line:762:4, col:49>
| | `-ParagraphComment 0x55887c424fd0 <col:4, col:49>
| |   `-TextComment 0x55887c424fa0 <col:4, col:49> Text=" Corrected Platform Error Polling Table (CPEP)"
| |-FieldDecl 0x55887c21a748 <line:765:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c21a7f8 <line:766:3, col:44> col:34 Reserved 'UINT8[8]'
|-TypedefDecl 0x55887c21a8a8 <line:764:1, line:767:3> col:3 EFI_ACPI_5_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER 'struct EFI_ACPI_5_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER':'EFI_ACPI_5_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER'
| |-ElaboratedType 0x55887c21a850 'struct EFI_ACPI_5_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER' sugar
| | `-RecordType 0x55887c21a6c0 'EFI_ACPI_5_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER'
| |   `-Record 0x55887c21a640 ''
| `-FullComment 0x55887c4250d0 <line:762:4, col:49>
|   `-ParagraphComment 0x55887c4250a0 <col:4, col:49>
|     `-TextComment 0x55887c425070 <col:4, col:49> Text=" Corrected Platform Error Polling Table (CPEP)"
|-RecordDecl 0x55887c21a970 <line:782:9, line:788:1> line:782:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c21aa10 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4251a0 <line:780:4, col:67>
| | `-ParagraphComment 0x55887c425170 <col:4, col:67>
| |   `-TextComment 0x55887c425140 <col:4, col:67> Text=" Corrected Platform Error Polling Processor Structure Definition"
| |-FieldDecl 0x55887c21aa78 <line:783:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c21aad8 <line:784:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c21ab38 <line:785:3, col:13> col:13 ProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c21ab98 <line:786:3, col:13> col:13 ProcessorEid 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c21abf8 <line:787:3, col:13> col:13 PollingInterval 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c21aca8 <line:782:1, line:788:3> col:3 EFI_ACPI_5_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE 'struct EFI_ACPI_5_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE':'EFI_ACPI_5_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE'
| |-ElaboratedType 0x55887c21ac50 'struct EFI_ACPI_5_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE' sugar
| | `-RecordType 0x55887c21a9f0 'EFI_ACPI_5_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE'
| |   `-Record 0x55887c21a970 ''
| `-FullComment 0x55887c425270 <line:780:4, col:67>
|   `-ParagraphComment 0x55887c425240 <col:4, col:67>
|     `-TextComment 0x55887c425210 <col:4, col:67> Text=" Corrected Platform Error Polling Processor Structure Definition"
|-RecordDecl 0x55887c21ad40 <line:793:9, line:799:1> line:793:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c21ade0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c425340 <line:791:4, col:47>
| | `-ParagraphComment 0x55887c425310 <col:4, col:47>
| |   `-TextComment 0x55887c4252e0 <col:4, col:47> Text=" Maximum System Characteristics Table (MSCT)"
| |-FieldDecl 0x55887c21ae48 <line:794:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c21aea8 <line:795:3, col:34> col:34 OffsetProxDomInfo 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c21af08 <line:796:3, col:34> col:34 MaximumNumberOfProximityDomains 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c21af68 <line:797:3, col:34> col:34 MaximumNumberOfClockDomains 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c21afc8 <line:798:3, col:34> col:34 MaximumPhysicalAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c21b078 <line:793:1, line:799:3> col:3 EFI_ACPI_5_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER 'struct EFI_ACPI_5_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER':'EFI_ACPI_5_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER'
| |-ElaboratedType 0x55887c21b020 'struct EFI_ACPI_5_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER' sugar
| | `-RecordType 0x55887c21adc0 'EFI_ACPI_5_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER'
| |   `-Record 0x55887c21ad40 ''
| `-FullComment 0x55887c425410 <line:791:4, col:47>
|   `-ParagraphComment 0x55887c4253e0 <col:4, col:47>
|     `-TextComment 0x55887c4253b0 <col:4, col:47> Text=" Maximum System Characteristics Table (MSCT)"
|-RecordDecl 0x55887c21b140 <line:809:9, line:816:1> line:809:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c21b1e0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4254e0 <line:807:4, col:61>
| | `-ParagraphComment 0x55887c4254b0 <col:4, col:61>
| |   `-TextComment 0x55887c425480 <col:4, col:61> Text=" Maximum Proximity Domain Information Structure Definition"
| |-FieldDecl 0x55887c21b248 <line:810:3, col:13> col:13 Revision 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c21b2a8 <line:811:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c21b308 <line:812:3, col:13> col:13 ProximityDomainRangeLow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c21b368 <line:813:3, col:13> col:13 ProximityDomainRangeHigh 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c21b3c8 <line:814:3, col:13> col:13 MaximumProcessorCapacity 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c21b428 <line:815:3, col:13> col:13 MaximumMemoryCapacity 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c21b4d8 <line:809:1, line:816:3> col:3 EFI_ACPI_5_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE 'struct EFI_ACPI_5_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE':'EFI_ACPI_5_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE'
| |-ElaboratedType 0x55887c21b480 'struct EFI_ACPI_5_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE' sugar
| | `-RecordType 0x55887c21b1c0 'EFI_ACPI_5_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE'
| |   `-Record 0x55887c21b140 ''
| `-FullComment 0x55887c4255b0 <line:807:4, col:61>
|   `-ParagraphComment 0x55887c425580 <col:4, col:61>
|     `-TextComment 0x55887c425550 <col:4, col:61> Text=" Maximum Proximity Domain Information Structure Definition"
|-RecordDecl 0x55887c21b570 <line:821:9, line:824:1> line:821:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c21b610 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c425680 <line:819:4, col:38>
| | `-ParagraphComment 0x55887c425650 <col:4, col:38>
| |   `-TextComment 0x55887c425620 <col:4, col:38> Text=" ACPI RAS Feature Table definition."
| |-FieldDecl 0x55887c21b678 <line:822:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c21b728 <line:823:3, col:75> col:34 PlatformCommunicationChannelIdentifier 'UINT8[12]'
|-TypedefDecl 0x55887c21b7d8 <line:821:1, line:824:3> col:3 EFI_ACPI_5_0_RAS_FEATURE_TABLE 'struct EFI_ACPI_5_0_RAS_FEATURE_TABLE':'EFI_ACPI_5_0_RAS_FEATURE_TABLE'
| |-ElaboratedType 0x55887c21b780 'struct EFI_ACPI_5_0_RAS_FEATURE_TABLE' sugar
| | `-RecordType 0x55887c21b5f0 'EFI_ACPI_5_0_RAS_FEATURE_TABLE'
| |   `-Record 0x55887c21b570 ''
| `-FullComment 0x55887c425750 <line:819:4, col:38>
|   `-ParagraphComment 0x55887c425720 <col:4, col:38>
|     `-TextComment 0x55887c4256f0 <col:4, col:38> Text=" ACPI RAS Feature Table definition."
|-RecordDecl 0x55887c21b8a0 <line:834:9, line:843:1> line:834:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c21b940 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c425820 <line:832:4, col:77>
| | `-ParagraphComment 0x55887c4257f0 <col:4, col:77>
| |   `-TextComment 0x55887c4257c0 <col:4, col:77> Text=" ACPI RASF Platform Communication Channel Shared Memory Region definition."
| |-FieldDecl 0x55887c21b9a8 <line:835:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c21ba08 <line:836:3, col:13> col:13 Command 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c21ba68 <line:837:3, col:13> col:13 Status 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c21bac8 <line:838:3, col:13> col:13 Version 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c21bb78 <line:839:3, col:31> col:13 RASCapabilities 'UINT8[16]'
| |-FieldDecl 0x55887c21bf40 <line:840:3, col:34> col:13 SetRASCapabilities 'UINT8[16]'
| |-FieldDecl 0x55887c21bfa0 <line:841:3, col:13> col:13 NumberOfRASFParameterBlocks 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c21c000 <line:842:3, col:13> col:13 SetRASCapabilitiesStatus 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c21c0a8 <line:834:1, line:843:3> col:3 EFI_ACPI_5_0_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION 'struct EFI_ACPI_5_0_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION':'EFI_ACPI_5_0_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION'
| |-ElaboratedType 0x55887c21c050 'struct EFI_ACPI_5_0_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION' sugar
| | `-RecordType 0x55887c21b920 'EFI_ACPI_5_0_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION'
| |   `-Record 0x55887c21b8a0 ''
| `-FullComment 0x55887c4258f0 <line:832:4, col:77>
|   `-ParagraphComment 0x55887c4258c0 <col:4, col:77>
|     `-TextComment 0x55887c425890 <col:4, col:77> Text=" ACPI RASF Platform Communication Channel Shared Memory Region definition."
|-RecordDecl 0x55887c21c1a0 <line:859:9, line:868:1> line:859:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c21c240 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4259c0 <line:857:4, col:56>
| | `-ParagraphComment 0x55887c425990 <col:4, col:56>
| |   `-TextComment 0x55887c425960 <col:4, col:56> Text=" ACPI RASF Parameter Block structure for PATROL_SCRUB"
| |-FieldDecl 0x55887c21c2a8 <line:860:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c21c308 <line:861:3, col:13> col:13 Version 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c21c368 <line:862:3, col:13> col:13 Length 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c21c3c8 <line:863:3, col:13> col:13 PatrolScrubCommand 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c21c478 <line:864:3, col:36> col:13 RequestedAddressRange 'UINT64[2]'
| |-FieldDecl 0x55887c21c528 <line:865:3, col:33> col:13 ActualAddressRange 'UINT64[2]'
| |-FieldDecl 0x55887c21c588 <line:866:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c21c5e8 <line:867:3, col:13> col:13 RequestedSpeed 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c21c698 <line:859:1, line:868:3> col:3 EFI_ACPI_5_0_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE 'struct EFI_ACPI_5_0_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE':'EFI_ACPI_5_0_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE'
| |-ElaboratedType 0x55887c21c640 'struct EFI_ACPI_5_0_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE' sugar
| | `-RecordType 0x55887c21c220 'EFI_ACPI_5_0_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE'
| |   `-Record 0x55887c21c1a0 ''
| `-FullComment 0x55887c425a90 <line:857:4, col:56>
|   `-ParagraphComment 0x55887c425a60 <col:4, col:56>
|     `-TextComment 0x55887c425a30 <col:4, col:56> Text=" ACPI RASF Parameter Block structure for PATROL_SCRUB"
|-RecordDecl 0x55887c21c760 <line:880:9, line:886:1> line:880:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c21c800 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c425b60 <line:878:4, col:40>
| | `-ParagraphComment 0x55887c425b30 <col:4, col:40>
| |   `-TextComment 0x55887c425b00 <col:4, col:40> Text=" Memory Power State Table definition."
| |-FieldDecl 0x55887c21c868 <line:881:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c21c8c8 <line:882:3, col:34> col:34 PlatformCommunicationChannelIdentifier 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c21c978 <line:883:3, col:44> col:34 Reserved 'UINT8[3]'
|-TypedefDecl 0x55887c21ca28 <line:880:1, line:886:3> col:3 EFI_ACPI_5_0_MEMORY_POWER_STATUS_TABLE 'struct EFI_ACPI_5_0_MEMORY_POWER_STATUS_TABLE':'EFI_ACPI_5_0_MEMORY_POWER_STATUS_TABLE'
| |-ElaboratedType 0x55887c21c9d0 'struct EFI_ACPI_5_0_MEMORY_POWER_STATUS_TABLE' sugar
| | `-RecordType 0x55887c21c7e0 'EFI_ACPI_5_0_MEMORY_POWER_STATUS_TABLE'
| |   `-Record 0x55887c21c760 ''
| `-FullComment 0x55887c425c30 <line:878:4, col:40>
|   `-ParagraphComment 0x55887c425c00 <col:4, col:40>
|     `-TextComment 0x55887c425bd0 <col:4, col:40> Text=" Memory Power State Table definition."
|-RecordDecl 0x55887c21caf0 <line:896:9, line:906:1> line:896:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c21cb90 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c425d00 <line:894:4, col:72>
| | `-ParagraphComment 0x55887c425cd0 <col:4, col:72>
| |   `-TextComment 0x55887c425ca0 <col:4, col:72> Text=" MPST Platform Communication Channel Shared Memory Region definition."
| |-FieldDecl 0x55887c21cbf8 <line:897:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c21cc58 <line:898:3, col:13> col:13 Command 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c21ccb8 <line:899:3, col:13> col:13 Status 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c21cd18 <line:900:3, col:13> col:13 MemoryPowerCommandRegister 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c21cd78 <line:901:3, col:13> col:13 MemoryPowerStatusRegister 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c21cdd8 <line:902:3, col:13> col:13 PowerStateId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c21ce38 <line:903:3, col:13> col:13 MemoryPowerNodeId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c21ce98 <line:904:3, col:13> col:13 MemoryEnergyConsumed 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c21cef8 <line:905:3, col:13> col:13 ExpectedAveragePowerComsuned 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c21cfa8 <line:896:1, line:906:3> col:3 EFI_ACPI_5_0_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION 'struct EFI_ACPI_5_0_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION':'EFI_ACPI_5_0_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION'
| |-ElaboratedType 0x55887c21cf50 'struct EFI_ACPI_5_0_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION' sugar
| | `-RecordType 0x55887c21cb70 'EFI_ACPI_5_0_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION'
| |   `-Record 0x55887c21caf0 ''
| `-FullComment 0x55887c425dd0 <line:894:4, col:72>
|   `-ParagraphComment 0x55887c425da0 <col:4, col:72>
|     `-TextComment 0x55887c425d70 <col:4, col:72> Text=" MPST Platform Communication Channel Shared Memory Region definition."
|-RecordDecl 0x55887c21d0a0 <line:924:9, line:927:1> line:924:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c21d140 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c425ea0 <line:922:4, col:32>
| | `-ParagraphComment 0x55887c425e70 <col:4, col:32>
| |   `-TextComment 0x55887c425e40 <col:4, col:32> Text=" MPST Memory Power Node Table"
| |-FieldDecl 0x55887c21d1a8 <line:925:3, col:12> col:12 PowerStateValue 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c21d208 <line:926:3, col:12> col:12 PowerStateInformationIndex 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c21d2b8 <line:924:1, line:927:3> col:3 EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE 'struct EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE':'EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE'
| |-ElaboratedType 0x55887c21d260 'struct EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE' sugar
| | `-RecordType 0x55887c21d120 'EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE'
| |   `-Record 0x55887c21d0a0 ''
| `-FullComment 0x55887c425f70 <line:922:4, col:32>
|   `-ParagraphComment 0x55887c425f40 <col:4, col:32>
|     `-TextComment 0x55887c425f10 <col:4, col:32> Text=" MPST Memory Power Node Table"
|-RecordDecl 0x55887c21d328 <line:929:9, line:940:1> line:929:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c21d3d0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c21d438 <line:930:3, col:13> col:13 Flag 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c21d498 <line:931:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c21d4f8 <line:932:3, col:13> col:13 MemoryPowerNodeId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c21d558 <line:933:3, col:13> col:13 Length 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c21d5b8 <line:934:3, col:13> col:13 AddressBase 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c21d618 <line:935:3, col:13> col:13 AddressLength 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c21d678 <line:936:3, col:13> col:13 NumberOfPowerStates 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c21d6d8 <line:937:3, col:13> col:13 NumberOfPhysicalComponents 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c21d788 <line:929:1, line:940:3> col:3 EFI_ACPI_5_0_MPST_MEMORY_POWER_STRUCTURE 'struct EFI_ACPI_5_0_MPST_MEMORY_POWER_STRUCTURE':'EFI_ACPI_5_0_MPST_MEMORY_POWER_STRUCTURE'
| `-ElaboratedType 0x55887c21d730 'struct EFI_ACPI_5_0_MPST_MEMORY_POWER_STRUCTURE' sugar
|   `-RecordType 0x55887c21d3b0 'EFI_ACPI_5_0_MPST_MEMORY_POWER_STRUCTURE'
|     `-Record 0x55887c21d328 ''
|-RecordDecl 0x55887c21d7f8 <line:946:9, line:949:1> line:946:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c21d8a0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c21d908 <line:947:3, col:13> col:13 MemoryPowerNodeCount 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c21d9b8 <line:948:3, col:23> col:13 Reserved 'UINT8[2]'
|-TypedefDecl 0x55887c21da68 <line:946:1, line:949:3> col:3 EFI_ACPI_5_0_MPST_MEMORY_POWER_NODE_TABLE 'struct EFI_ACPI_5_0_MPST_MEMORY_POWER_NODE_TABLE':'EFI_ACPI_5_0_MPST_MEMORY_POWER_NODE_TABLE'
| `-ElaboratedType 0x55887c21da10 'struct EFI_ACPI_5_0_MPST_MEMORY_POWER_NODE_TABLE' sugar
|   `-RecordType 0x55887c21d880 'EFI_ACPI_5_0_MPST_MEMORY_POWER_NODE_TABLE'
|     `-Record 0x55887c21d7f8 ''
|-RecordDecl 0x55887c21db00 <line:954:9, line:961:1> line:954:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c21dba0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c426040 <line:952:4, col:49>
| | `-ParagraphComment 0x55887c426010 <col:4, col:49>
| |   `-TextComment 0x55887c425fe0 <col:4, col:49> Text=" MPST Memory Power State Characteristics Table"
| |-FieldDecl 0x55887c21dc08 <line:955:3, col:13> col:13 PowerStateStructureID 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c21dc68 <line:956:3, col:13> col:13 Flag 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c21dcc8 <line:957:3, col:13> col:13 Reserved 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c21dd28 <line:958:3, col:13> col:13 AveragePowerConsumedInMPS0 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c21dd88 <line:959:3, col:13> col:13 RelativePowerSavingToMPS0 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c21dde8 <line:960:3, col:13> col:13 ExitLatencyToMPS0 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c21de98 <line:954:1, line:961:3> col:3 EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE 'struct EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE':'EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE'
| |-ElaboratedType 0x55887c21de40 'struct EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE' sugar
| | `-RecordType 0x55887c21db80 'EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE'
| |   `-Record 0x55887c21db00 ''
| `-FullComment 0x55887c426110 <line:952:4, col:49>
|   `-ParagraphComment 0x55887c4260e0 <col:4, col:49>
|     `-TextComment 0x55887c4260b0 <col:4, col:49> Text=" MPST Memory Power State Characteristics Table"
|-RecordDecl 0x55887c223200 <line:967:9, line:970:1> line:967:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2232a0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c223308 <line:968:3, col:13> col:13 MemoryPowerStateCharacteristicsCount 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c2233b8 <line:969:3, col:23> col:13 Reserved 'UINT8[2]'
|-TypedefDecl 0x55887c223468 <line:967:1, line:970:3> col:3 EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE 'struct EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE':'EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE'
| `-ElaboratedType 0x55887c223410 'struct EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE' sugar
|   `-RecordType 0x55887c223280 'EFI_ACPI_5_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE'
|     `-Record 0x55887c223200 ''
|-RecordDecl 0x55887c223500 <line:975:9, line:978:1> line:975:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2235a0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4261e0 <line:973:4, col:37>
| | `-ParagraphComment 0x55887c4261b0 <col:4, col:37>
| |   `-TextComment 0x55887c426180 <col:4, col:37> Text=" Memory Topology Table definition."
| |-FieldDecl 0x55887c223608 <line:976:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c223668 <line:977:3, col:34> col:34 Reserved 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c223718 <line:975:1, line:978:3> col:3 EFI_ACPI_5_0_MEMORY_TOPOLOGY_TABLE 'struct EFI_ACPI_5_0_MEMORY_TOPOLOGY_TABLE':'EFI_ACPI_5_0_MEMORY_TOPOLOGY_TABLE'
| |-ElaboratedType 0x55887c2236c0 'struct EFI_ACPI_5_0_MEMORY_TOPOLOGY_TABLE' sugar
| | `-RecordType 0x55887c223580 'EFI_ACPI_5_0_MEMORY_TOPOLOGY_TABLE'
| |   `-Record 0x55887c223500 ''
| `-FullComment 0x55887c4262b0 <line:973:4, col:37>
|   `-ParagraphComment 0x55887c426280 <col:4, col:37>
|     `-TextComment 0x55887c426250 <col:4, col:37> Text=" Memory Topology Table definition."
|-RecordDecl 0x55887c2237e0 <line:988:9, line:994:1> line:988:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c223880 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c426380 <line:986:4, col:46>
| | `-ParagraphComment 0x55887c426350 <col:4, col:46>
| |   `-TextComment 0x55887c426320 <col:4, col:46> Text=" Common Memory Aggregator Device Structure."
| |-FieldDecl 0x55887c2238e8 <line:989:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c223948 <line:990:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2239a8 <line:991:3, col:13> col:13 Length 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c223a08 <line:992:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c223a68 <line:993:3, col:13> col:13 Reserved1 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c223b18 <line:988:1, line:994:3> col:3 referenced EFI_ACPI_5_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE 'struct EFI_ACPI_5_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_5_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-ElaboratedType 0x55887c223ac0 'struct EFI_ACPI_5_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE' sugar
| | `-RecordType 0x55887c223860 'EFI_ACPI_5_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |   `-Record 0x55887c2237e0 ''
| `-FullComment 0x55887c426450 <line:986:4, col:46>
|   `-ParagraphComment 0x55887c426420 <col:4, col:46>
|     `-TextComment 0x55887c4263f0 <col:4, col:46> Text=" Common Memory Aggregator Device Structure."
|-RecordDecl 0x55887c223be0 <line:1006:9, line:1011:1> line:1006:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c223c80 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c426520 <line:1004:4, col:46>
| | `-ParagraphComment 0x55887c4264f0 <col:4, col:46>
| |   `-TextComment 0x55887c4264c0 <col:4, col:46> Text=" Socket Memory Aggregator Device Structure."
| |-FieldDecl 0x55887c223d10 <line:1007:3, col:66> col:66 Header 'EFI_ACPI_5_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_5_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-FieldDecl 0x55887c223d70 <line:1008:3, col:66> col:66 SocketIdentifier 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c223dd0 <line:1009:3, col:66> col:66 Reserved 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c223ef8 <line:1006:1, line:1011:3> col:3 EFI_ACPI_5_0_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE 'struct EFI_ACPI_5_0_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_5_0_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-ElaboratedType 0x55887c223ea0 'struct EFI_ACPI_5_0_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE' sugar
| | `-RecordType 0x55887c223c60 'EFI_ACPI_5_0_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |   `-Record 0x55887c223be0 ''
| `-FullComment 0x55887c4265f0 <line:1004:4, col:46>
|   `-ParagraphComment 0x55887c4265c0 <col:4, col:46>
|     `-TextComment 0x55887c426590 <col:4, col:46> Text=" Socket Memory Aggregator Device Structure."
|-RecordDecl 0x55887c223f90 <line:1016:9, line:1028:1> line:1016:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c224030 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c428850 <line:1014:4, col:56>
| | `-ParagraphComment 0x55887c426690 <col:4, col:56>
| |   `-TextComment 0x55887c426660 <col:4, col:56> Text=" MemoryController Memory Aggregator Device Structure."
| |-FieldDecl 0x55887c224098 <line:1017:3, col:66> col:66 Header 'EFI_ACPI_5_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_5_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-FieldDecl 0x55887c2240f8 <line:1018:3, col:66> col:66 ReadLatency 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c224158 <line:1019:3, col:66> col:66 WriteLatency 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2241b8 <line:1020:3, col:66> col:66 ReadBandwidth 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c224218 <line:1021:3, col:66> col:66 WriteBandwidth 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c224278 <line:1022:3, col:66> col:66 OptimalAccessUnit 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2242d8 <line:1023:3, col:66> col:66 OptimalAccessAlignment 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c224338 <line:1024:3, col:66> col:66 Reserved 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c224398 <line:1025:3, col:66> col:66 NumberOfProximityDomains 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c224448 <line:1016:1, line:1028:3> col:3 EFI_ACPI_5_0_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE 'struct EFI_ACPI_5_0_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_5_0_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-ElaboratedType 0x55887c2243f0 'struct EFI_ACPI_5_0_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE' sugar
| | `-RecordType 0x55887c224010 'EFI_ACPI_5_0_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |   `-Record 0x55887c223f90 ''
| `-FullComment 0x55887c428920 <line:1014:4, col:56>
|   `-ParagraphComment 0x55887c4288f0 <col:4, col:56>
|     `-TextComment 0x55887c4288c0 <col:4, col:56> Text=" MemoryController Memory Aggregator Device Structure."
|-RecordDecl 0x55887c2244e0 <line:1033:9, line:1039:1> line:1033:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c224580 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4289f0 <line:1031:4, col:44>
| | `-ParagraphComment 0x55887c4289c0 <col:4, col:44>
| |   `-TextComment 0x55887c428990 <col:4, col:44> Text=" DIMM Memory Aggregator Device Structure."
| |-FieldDecl 0x55887c2245e8 <line:1034:3, col:66> col:66 Header 'EFI_ACPI_5_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_5_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-FieldDecl 0x55887c224648 <line:1035:3, col:66> col:66 PhysicalComponentIdentifier 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2246a8 <line:1036:3, col:66> col:66 Reserved 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c224708 <line:1037:3, col:66> col:66 SizeOfDimm 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c224768 <line:1038:3, col:66> col:66 SmbiosHandle 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c224818 <line:1033:1, line:1039:3> col:3 EFI_ACPI_5_0_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE 'struct EFI_ACPI_5_0_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_5_0_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-ElaboratedType 0x55887c2247c0 'struct EFI_ACPI_5_0_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE' sugar
| | `-RecordType 0x55887c224560 'EFI_ACPI_5_0_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |   `-Record 0x55887c2244e0 ''
| `-FullComment 0x55887c428ac0 <line:1031:4, col:44>
|   `-ParagraphComment 0x55887c428a90 <col:4, col:44>
|     `-TextComment 0x55887c428a60 <col:4, col:44> Text=" DIMM Memory Aggregator Device Structure."
|-RecordDecl 0x55887c2248b0 <line:1044:9, line:1079:1> line:1044:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c224950 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c428b90 <line:1042:4, col:44>
| | `-ParagraphComment 0x55887c428b60 <col:4, col:44>
| |   `-TextComment 0x55887c428b30 <col:4, col:44> Text=" Boot Graphics Resource Table definition."
| |-FieldDecl 0x55887c2249b8 <line:1045:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c224a48 <line:1049:3, col:34> col:34 Version 'UINT16':'unsigned short'
| | `-FullComment 0x55887c428c60 <line:1047:6, col:56>
| |   `-ParagraphComment 0x55887c428c30 <col:6, col:56>
| |     `-TextComment 0x55887c428c00 <col:6, col:56> Text=" 2-bytes (16 bit) version ID. This value must be 1."
| |-FieldDecl 0x55887c224ad8 <line:1055:3, col:34> col:34 Status 'UINT8':'unsigned char'
| | `-FullComment 0x55887c428d80 <line:1051:6, line:1053:75>
| |   `-ParagraphComment 0x55887c428d50 <line:1051:6, line:1053:75>
| |     |-TextComment 0x55887c428cd0 <line:1051:6, col:68> Text=" 1-byte status field indicating current status about the table."
| |     |-TextComment 0x55887c428cf0 <line:1052:6, col:45> Text="     Bits[7:1] = Reserved (must be zero)"
| |     `-TextComment 0x55887c428d10 <line:1053:6, col:75> Text="     Bit [0] = Valid. A one indicates the boot image graphic is valid."
| |-FieldDecl 0x55887c224b68 <line:1061:3, col:34> col:34 ImageType 'UINT8':'unsigned char'
| | `-FullComment 0x55887c428ea0 <line:1057:6, line:1059:44>
| |   `-ParagraphComment 0x55887c428e70 <line:1057:6, line:1059:44>
| |     |-TextComment 0x55887c428df0 <line:1057:6, col:66> Text=" 1-byte enumerated type field indicating format of the image."
| |     |-TextComment 0x55887c428e10 <line:1058:6, col:20> Text="     0 = Bitmap"
| |     `-TextComment 0x55887c428e30 <line:1059:6, col:44> Text="     1 - 255  Reserved (for future use)"
| |-FieldDecl 0x55887c224bf8 <line:1066:3, col:34> col:34 ImageAddress 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c428f90 <line:1063:6, line:1064:26>
| |   `-ParagraphComment 0x55887c428f60 <line:1063:6, line:1064:26>
| |     |-TextComment 0x55887c428f10 <line:1063:6, col:80> Text=" 8-byte (64 bit) physical address pointing to the firmware's in-memory copy"
| |     `-TextComment 0x55887c428f30 <line:1064:6, col:26> Text=" of the image bitmap."
| |-FieldDecl 0x55887c224c88 <line:1072:3, col:34> col:34 ImageOffsetX 'UINT32':'unsigned int'
| | `-FullComment 0x55887c4290b0 <line:1068:6, line:1070:61>
| |   `-ParagraphComment 0x55887c429080 <line:1068:6, line:1070:61>
| |     |-TextComment 0x55887c429000 <line:1068:6, col:88> Text=" A 4-byte (32-bit) unsigned long describing the display X-offset of the boot image."
| |     |-TextComment 0x55887c429020 <line:1069:6, col:69> Text=" (X, Y) display offset of the top left corner of the boot image."
| |     `-TextComment 0x55887c429040 <line:1070:6, col:61> Text=" The top left corner of the display is at offset (0, 0)."
| `-FieldDecl 0x55887c224d18 <line:1078:3, col:34> col:34 ImageOffsetY 'UINT32':'unsigned int'
|   `-FullComment 0x55887c4291d0 <line:1074:6, line:1076:61>
|     `-ParagraphComment 0x55887c4291a0 <line:1074:6, line:1076:61>
|       |-TextComment 0x55887c429120 <line:1074:6, col:88> Text=" A 4-byte (32-bit) unsigned long describing the display Y-offset of the boot image."
|       |-TextComment 0x55887c429140 <line:1075:6, col:69> Text=" (X, Y) display offset of the top left corner of the boot image."
|       `-TextComment 0x55887c429160 <line:1076:6, col:61> Text=" The top left corner of the display is at offset (0, 0)."
|-TypedefDecl 0x55887c224dc8 <line:1044:1, line:1079:3> col:3 EFI_ACPI_5_0_BOOT_GRAPHICS_RESOURCE_TABLE 'struct EFI_ACPI_5_0_BOOT_GRAPHICS_RESOURCE_TABLE':'EFI_ACPI_5_0_BOOT_GRAPHICS_RESOURCE_TABLE'
| |-ElaboratedType 0x55887c224d70 'struct EFI_ACPI_5_0_BOOT_GRAPHICS_RESOURCE_TABLE' sugar
| | `-RecordType 0x55887c224930 'EFI_ACPI_5_0_BOOT_GRAPHICS_RESOURCE_TABLE'
| |   `-Record 0x55887c2248b0 ''
| `-FullComment 0x55887c4292a0 <line:1042:4, col:44>
|   `-ParagraphComment 0x55887c429270 <col:4, col:44>
|     `-TextComment 0x55887c429240 <col:4, col:44> Text=" Boot Graphics Resource Table definition."
|-RecordDecl 0x55887c225010 <line:1138:9, line:1142:1> line:1138:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2250b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c429370 <line:1136:4, col:34>
| | `-ParagraphComment 0x55887c429340 <col:4, col:34>
| |   `-TextComment 0x55887c429310 <col:4, col:34> Text=" FPDT Performance Record header"
| |-FieldDecl 0x55887c225118 <line:1139:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c225178 <line:1140:3, col:13> col:13 Length 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c226220 <line:1141:3, col:13> col:13 Revision 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c2262c8 <line:1138:1, line:1142:3> col:3 referenced EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER 'struct EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER'
| |-ElaboratedType 0x55887c226270 'struct EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER' sugar
| | `-RecordType 0x55887c225090 'EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER'
| |   `-Record 0x55887c225010 ''
| `-FullComment 0x55887c429440 <line:1136:4, col:34>
|   `-ParagraphComment 0x55887c429410 <col:4, col:34>
|     `-TextComment 0x55887c4293e0 <col:4, col:34> Text=" FPDT Performance Record header"
|-RecordDecl 0x55887c226360 <line:1147:9, line:1150:1> line:1147:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c226400 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c429510 <line:1145:4, col:33>
| | `-ParagraphComment 0x55887c4294e0 <col:4, col:33>
| |   `-TextComment 0x55887c4294b0 <col:4, col:33> Text=" FPDT Performance Table header"
| |-FieldDecl 0x55887c226468 <line:1148:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c2264c8 <line:1149:3, col:13> col:13 Length 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c226578 <line:1147:1, line:1150:3> col:3 referenced EFI_ACPI_5_0_FPDT_PERFORMANCE_TABLE_HEADER 'struct EFI_ACPI_5_0_FPDT_PERFORMANCE_TABLE_HEADER':'EFI_ACPI_5_0_FPDT_PERFORMANCE_TABLE_HEADER'
| |-ElaboratedType 0x55887c226520 'struct EFI_ACPI_5_0_FPDT_PERFORMANCE_TABLE_HEADER' sugar
| | `-RecordType 0x55887c2263e0 'EFI_ACPI_5_0_FPDT_PERFORMANCE_TABLE_HEADER'
| |   `-Record 0x55887c226360 ''
| `-FullComment 0x55887c4295e0 <line:1145:4, col:33>
|   `-ParagraphComment 0x55887c4295b0 <col:4, col:33>
|     `-TextComment 0x55887c429580 <col:4, col:33> Text=" FPDT Performance Table header"
|-RecordDecl 0x55887c226610 <line:1155:9, line:1162:1> line:1155:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2266b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4296b0 <line:1153:4, col:65>
| | `-ParagraphComment 0x55887c429680 <col:4, col:65>
| |   `-TextComment 0x55887c429650 <col:4, col:65> Text=" FPDT Firmware Basic Boot Performance Pointer Record Structure"
| |-FieldDecl 0x55887c226740 <line:1156:3, col:50> col:50 Header 'EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER'
| |-FieldDecl 0x55887c2267a0 <line:1157:3, col:50> col:50 Reserved 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c226828 <line:1161:3, col:50> col:50 BootPerformanceTablePointer 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c429780 <line:1159:6, col:85>
|     `-ParagraphComment 0x55887c429750 <col:6, col:85>
|       `-TextComment 0x55887c429720 <col:6, col:85> Text=" 64-bit processor-relative physical address of the Basic Boot Performance Table."
|-TypedefDecl 0x55887c226938 <line:1155:1, line:1162:3> col:3 EFI_ACPI_5_0_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD 'struct EFI_ACPI_5_0_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD':'EFI_ACPI_5_0_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD'
| |-ElaboratedType 0x55887c2268e0 'struct EFI_ACPI_5_0_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD' sugar
| | `-RecordType 0x55887c226690 'EFI_ACPI_5_0_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD'
| |   `-Record 0x55887c226610 ''
| `-FullComment 0x55887c429850 <line:1153:4, col:65>
|   `-ParagraphComment 0x55887c429820 <col:4, col:65>
|     `-TextComment 0x55887c4297f0 <col:4, col:65> Text=" FPDT Firmware Basic Boot Performance Pointer Record Structure"
|-RecordDecl 0x55887c2269d0 <line:1167:9, line:1174:1> line:1167:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c226a70 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c429920 <line:1165:4, col:54>
| | `-ParagraphComment 0x55887c4298f0 <col:4, col:54>
| |   `-TextComment 0x55887c4298c0 <col:4, col:54> Text=" FPDT S3 Performance Table Pointer Record Structure"
| |-FieldDecl 0x55887c226ad8 <line:1168:3, col:50> col:50 Header 'EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER'
| |-FieldDecl 0x55887c226b38 <line:1169:3, col:50> col:50 Reserved 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c226bc8 <line:1173:3, col:50> col:50 S3PerformanceTablePointer 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c4299f0 <line:1171:6, col:77>
|     `-ParagraphComment 0x55887c4299c0 <col:6, col:77>
|       `-TextComment 0x55887c429990 <col:6, col:77> Text=" 64-bit processor-relative physical address of the S3 Performance Table."
|-TypedefDecl 0x55887c226c78 <line:1167:1, line:1174:3> col:3 EFI_ACPI_5_0_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD 'struct EFI_ACPI_5_0_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD':'EFI_ACPI_5_0_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD'
| |-ElaboratedType 0x55887c226c20 'struct EFI_ACPI_5_0_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD' sugar
| | `-RecordType 0x55887c226a50 'EFI_ACPI_5_0_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD'
| |   `-Record 0x55887c2269d0 ''
| `-FullComment 0x55887c429ac0 <line:1165:4, col:54>
|   `-ParagraphComment 0x55887c429a90 <col:4, col:54>
|     `-TextComment 0x55887c429a60 <col:4, col:54> Text=" FPDT S3 Performance Table Pointer Record Structure"
|-RecordDecl 0x55887c226d10 <line:1179:9, line:1210:1> line:1179:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c226db0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c429b90 <line:1177:4, col:57>
| | `-ParagraphComment 0x55887c429b60 <col:4, col:57>
| |   `-TextComment 0x55887c429b30 <col:4, col:57> Text=" FPDT Firmware Basic Boot Performance Record Structure"
| |-FieldDecl 0x55887c226e18 <line:1180:3, col:50> col:50 Header 'EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER'
| |-FieldDecl 0x55887c226e78 <line:1181:3, col:50> col:50 Reserved 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c226f08 <line:1186:3, col:50> col:50 ResetEnd 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c429c80 <line:1183:6, line:1184:47>
| |   `-ParagraphComment 0x55887c429c50 <line:1183:6, line:1184:47>
| |     |-TextComment 0x55887c429c00 <line:1183:6, col:70> Text=" Timer value logged at the beginning of firmware image execution."
| |     `-TextComment 0x55887c429c20 <line:1184:6, col:47> Text=" This may not always be zero or near zero."
| |-FieldDecl 0x55887c226f98 <line:1191:3, col:50> col:50 OsLoaderLoadImageStart 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c429d70 <line:1188:6, line:1189:61>
| |   `-ParagraphComment 0x55887c429d40 <line:1188:6, line:1189:61>
| |     |-TextComment 0x55887c429cf0 <line:1188:6, col:78> Text=" Timer value logged just prior to loading the OS boot loader into memory."
| |     `-TextComment 0x55887c429d10 <line:1189:6, col:61> Text=" For non-UEFI compatible boots, this field must be zero."
| |-FieldDecl 0x55887c227028 <line:1197:3, col:50> col:50 OsLoaderStartImageStart 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c429e90 <line:1193:6, line:1195:40>
| |   `-ParagraphComment 0x55887c429e60 <line:1193:6, line:1195:40>
| |     |-TextComment 0x55887c429de0 <line:1193:6, col:92> Text=" Timer value logged just prior to launching the previously loaded OS boot loader image."
| |     |-TextComment 0x55887c429e00 <line:1194:6, col:78> Text=" For non-UEFI compatible boots, the timer value logged will be just prior"
| |     `-TextComment 0x55887c429e20 <line:1195:6, col:40> Text=" to the INT 19h handler invocation."
| |-FieldDecl 0x55887c2270b8 <line:1203:3, col:50> col:50 ExitBootServicesEntry 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c429fb0 <line:1199:6, line:1201:61>
| |   `-ParagraphComment 0x55887c429f80 <line:1199:6, line:1201:61>
| |     |-TextComment 0x55887c429f00 <line:1199:6, col:66> Text=" Timer value logged at the point when the OS loader calls the"
| |     |-TextComment 0x55887c429f20 <line:1200:6, col:61> Text=" ExitBootServices function for UEFI compatible firmware."
| |     `-TextComment 0x55887c429f40 <line:1201:6, col:61> Text=" For non-UEFI compatible boots, this field must be zero."
| `-FieldDecl 0x55887c227148 <line:1209:3, col:50> col:50 ExitBootServicesExit 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c42a0d0 <line:1205:6, line:1207:61>
|     `-ParagraphComment 0x55887c42a0a0 <line:1205:6, line:1207:61>
|       |-TextComment 0x55887c42a020 <line:1205:6, col:78> Text=" Timer value logged at the point just prior to when the OS loader gaining"
|       |-TextComment 0x55887c42a040 <line:1206:6, col:89> Text=" control back from calls the ExitBootServices function for UEFI compatible firmware."
|       `-TextComment 0x55887c42a060 <line:1207:6, col:61> Text=" For non-UEFI compatible boots, this field must be zero."
|-TypedefDecl 0x55887c2271f8 <line:1179:1, line:1210:3> col:3 EFI_ACPI_5_0_FPDT_FIRMWARE_BASIC_BOOT_RECORD 'struct EFI_ACPI_5_0_FPDT_FIRMWARE_BASIC_BOOT_RECORD':'EFI_ACPI_5_0_FPDT_FIRMWARE_BASIC_BOOT_RECORD'
| |-ElaboratedType 0x55887c2271a0 'struct EFI_ACPI_5_0_FPDT_FIRMWARE_BASIC_BOOT_RECORD' sugar
| | `-RecordType 0x55887c226d90 'EFI_ACPI_5_0_FPDT_FIRMWARE_BASIC_BOOT_RECORD'
| |   `-Record 0x55887c226d10 ''
| `-FullComment 0x55887c42a1a0 <line:1177:4, col:57>
|   `-ParagraphComment 0x55887c42a170 <col:4, col:57>
|     `-TextComment 0x55887c42a140 <col:4, col:57> Text=" FPDT Firmware Basic Boot Performance Record Structure"
|-RecordDecl 0x55887c227290 <line:1220:9, line:1225:1> line:1220:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c227330 <<invalid sloc>> Implicit 8
| `-FieldDecl 0x55887c2273c0 <line:1221:3, col:49> col:49 Header 'EFI_ACPI_5_0_FPDT_PERFORMANCE_TABLE_HEADER':'EFI_ACPI_5_0_FPDT_PERFORMANCE_TABLE_HEADER'
|-TypedefDecl 0x55887c2274c8 <line:1220:1, line:1225:3> col:3 EFI_ACPI_5_0_FPDT_FIRMWARE_BASIC_BOOT_TABLE 'struct EFI_ACPI_5_0_FPDT_FIRMWARE_BASIC_BOOT_TABLE':'EFI_ACPI_5_0_FPDT_FIRMWARE_BASIC_BOOT_TABLE'
| `-ElaboratedType 0x55887c227470 'struct EFI_ACPI_5_0_FPDT_FIRMWARE_BASIC_BOOT_TABLE' sugar
|   `-RecordType 0x55887c227310 'EFI_ACPI_5_0_FPDT_FIRMWARE_BASIC_BOOT_TABLE'
|     `-Record 0x55887c227290 ''
|-RecordDecl 0x55887c227560 <line:1235:9, line:1240:1> line:1235:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c227600 <<invalid sloc>> Implicit 8
| `-FieldDecl 0x55887c227668 <line:1236:3, col:49> col:49 Header 'EFI_ACPI_5_0_FPDT_PERFORMANCE_TABLE_HEADER':'EFI_ACPI_5_0_FPDT_PERFORMANCE_TABLE_HEADER'
|-TypedefDecl 0x55887c227718 <line:1235:1, line:1240:3> col:3 EFI_ACPI_5_0_FPDT_FIRMWARE_S3_BOOT_TABLE 'struct EFI_ACPI_5_0_FPDT_FIRMWARE_S3_BOOT_TABLE':'EFI_ACPI_5_0_FPDT_FIRMWARE_S3_BOOT_TABLE'
| `-ElaboratedType 0x55887c2276c0 'struct EFI_ACPI_5_0_FPDT_FIRMWARE_S3_BOOT_TABLE' sugar
|   `-RecordType 0x55887c2275e0 'EFI_ACPI_5_0_FPDT_FIRMWARE_S3_BOOT_TABLE'
|     `-Record 0x55887c227560 ''
|-RecordDecl 0x55887c2277b0 <line:1245:9, line:1262:1> line:1245:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c227850 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42a270 <line:1243:4, col:43>
| | `-ParagraphComment 0x55887c42a240 <col:4, col:43>
| |   `-TextComment 0x55887c42a210 <col:4, col:43> Text=" FPDT Basic S3 Resume Performance Record"
| |-FieldDecl 0x55887c2278b8 <line:1246:3, col:50> col:50 Header 'EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER'
| |-FieldDecl 0x55887c227948 <line:1250:3, col:50> col:50 ResumeCount 'UINT32':'unsigned int'
| | `-FullComment 0x55887c42a340 <line:1248:6, col:82>
| |   `-ParagraphComment 0x55887c42a310 <col:6, col:82>
| |     `-TextComment 0x55887c42a2e0 <col:6, col:82> Text=" A count of the number of S3 resume cycles since the last full boot sequence."
| |-FieldDecl 0x55887c2279d8 <line:1255:3, col:50> col:50 FullResume 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c42a430 <line:1252:6, line:1253:77>
| |   `-ParagraphComment 0x55887c42a400 <line:1252:6, line:1253:77>
| |     |-TextComment 0x55887c42a3b0 <line:1252:6, col:79> Text=" Timer recorded at the end of BIOS S3 resume, just prior to handoff to the"
| |     `-TextComment 0x55887c42a3d0 <line:1253:6, col:77> Text=" OS waking vector. Only the most recent resume cycle's time is retained."
| `-FieldDecl 0x55887c227a68 <line:1261:3, col:50> col:50 AverageResume 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c42a550 <line:1257:6, line:1259:83>
|     `-ParagraphComment 0x55887c42a520 <line:1257:6, line:1259:83>
|       |-TextComment 0x55887c42a4a0 <line:1257:6, col:78> Text=" Average timer value of all resume cycles logged since the last full boot"
|       |-TextComment 0x55887c42a4c0 <line:1258:6, col:78> Text=" sequence, including the most recent resume.  Note that the entire log of"
|       `-TextComment 0x55887c42a4e0 <line:1259:6, col:83> Text=" timer values does not need to be retained in order to calculate this average."
|-TypedefDecl 0x55887c227b18 <line:1245:1, line:1262:3> col:3 EFI_ACPI_5_0_FPDT_S3_RESUME_RECORD 'struct EFI_ACPI_5_0_FPDT_S3_RESUME_RECORD':'EFI_ACPI_5_0_FPDT_S3_RESUME_RECORD'
| |-ElaboratedType 0x55887c227ac0 'struct EFI_ACPI_5_0_FPDT_S3_RESUME_RECORD' sugar
| | `-RecordType 0x55887c227830 'EFI_ACPI_5_0_FPDT_S3_RESUME_RECORD'
| |   `-Record 0x55887c2277b0 ''
| `-FullComment 0x55887c42a620 <line:1243:4, col:43>
|   `-ParagraphComment 0x55887c42a5f0 <col:4, col:43>
|     `-TextComment 0x55887c42a5c0 <col:4, col:43> Text=" FPDT Basic S3 Resume Performance Record"
|-RecordDecl 0x55887c227bb0 <line:1267:9, line:1280:1> line:1267:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c227c50 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42a6f0 <line:1265:4, col:44>
| | `-ParagraphComment 0x55887c42a6c0 <col:4, col:44>
| |   `-TextComment 0x55887c42a690 <col:4, col:44> Text=" FPDT Basic S3 Suspend Performance Record"
| |-FieldDecl 0x55887c227cb8 <line:1268:3, col:50> col:50 Header 'EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_5_0_FPDT_PERFORMANCE_RECORD_HEADER'
| |-FieldDecl 0x55887c227d48 <line:1273:3, col:50> col:50 SuspendStart 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c42a7e0 <line:1270:6, line:1271:67>
| |   `-ParagraphComment 0x55887c42a7b0 <line:1270:6, line:1271:67>
| |     |-TextComment 0x55887c42a760 <line:1270:6, col:71> Text=" Timer value recorded at the OS write to SLP_TYP upon entry to S3."
| |     `-TextComment 0x55887c42a780 <line:1271:6, col:67> Text=" Only the most recent suspend cycle's timer value is retained."
| `-FieldDecl 0x55887c227dd8 <line:1279:3, col:50> col:50 SuspendEnd 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c42a900 <line:1275:6, line:1277:67>
|     `-ParagraphComment 0x55887c42a8d0 <line:1275:6, line:1277:67>
|       |-TextComment 0x55887c42a850 <line:1275:6, col:75> Text=" Timer value recorded at the final firmware write to SLP_TYP (or other"
|       |-TextComment 0x55887c42a870 <line:1276:6, col:54> Text=" mechanism) used to trigger hardware entry to S3."
|       `-TextComment 0x55887c42a890 <line:1277:6, col:67> Text=" Only the most recent suspend cycle's timer value is retained."
|-TypedefDecl 0x55887c227e88 <line:1267:1, line:1280:3> col:3 EFI_ACPI_5_0_FPDT_S3_SUSPEND_RECORD 'struct EFI_ACPI_5_0_FPDT_S3_SUSPEND_RECORD':'EFI_ACPI_5_0_FPDT_S3_SUSPEND_RECORD'
| |-ElaboratedType 0x55887c227e30 'struct EFI_ACPI_5_0_FPDT_S3_SUSPEND_RECORD' sugar
| | `-RecordType 0x55887c227c30 'EFI_ACPI_5_0_FPDT_S3_SUSPEND_RECORD'
| |   `-Record 0x55887c227bb0 ''
| `-FullComment 0x55887c42a9d0 <line:1265:4, col:44>
|   `-ParagraphComment 0x55887c42a9a0 <col:4, col:44>
|     `-TextComment 0x55887c42a970 <col:4, col:44> Text=" FPDT Basic S3 Suspend Performance Record"
|-RecordDecl 0x55887c227f20 <line:1285:9, line:1287:1> line:1285:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c227fc0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42aaa0 <line:1283:4, col:49>
| | `-ParagraphComment 0x55887c42aa70 <col:4, col:49>
| |   `-TextComment 0x55887c42aa40 <col:4, col:49> Text=" Firmware Performance Record Table definition."
| `-FieldDecl 0x55887c228028 <line:1286:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
|-TypedefDecl 0x55887c2280d8 <line:1285:1, line:1287:3> col:3 EFI_ACPI_5_0_FIRMWARE_PERFORMANCE_RECORD_TABLE 'struct EFI_ACPI_5_0_FIRMWARE_PERFORMANCE_RECORD_TABLE':'EFI_ACPI_5_0_FIRMWARE_PERFORMANCE_RECORD_TABLE'
| |-ElaboratedType 0x55887c228080 'struct EFI_ACPI_5_0_FIRMWARE_PERFORMANCE_RECORD_TABLE' sugar
| | `-RecordType 0x55887c227fa0 'EFI_ACPI_5_0_FIRMWARE_PERFORMANCE_RECORD_TABLE'
| |   `-Record 0x55887c227f20 ''
| `-FullComment 0x55887c42ab70 <line:1283:4, col:49>
|   `-ParagraphComment 0x55887c42ab40 <col:4, col:49>
|     `-TextComment 0x55887c42ab10 <col:4, col:49> Text=" Firmware Performance Record Table definition."
|-RecordDecl 0x55887c228170 <line:1292:9, line:1304:1> line:1292:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c228c30 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42ac40 <line:1290:4, col:47>
| | `-ParagraphComment 0x55887c42ac10 <col:4, col:47>
| |   `-TextComment 0x55887c42abe0 <col:4, col:47> Text=" Generic Timer Description Table definition."
| |-FieldDecl 0x55887c228c98 <line:1293:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c228cf8 <line:1294:3, col:34> col:34 PhysicalAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c228d58 <line:1295:3, col:34> col:34 GlobalFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c228db8 <line:1296:3, col:34> col:34 SecurePL1TimerGSIV 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c228e18 <line:1297:3, col:34> col:34 SecurePL1TimerFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c228e78 <line:1298:3, col:34> col:34 NonSecurePL1TimerGSIV 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c228ed8 <line:1299:3, col:34> col:34 NonSecurePL1TimerFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c228f38 <line:1300:3, col:34> col:34 VirtualTimerGSIV 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c228f98 <line:1301:3, col:34> col:34 VirtualTimerFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c228ff8 <line:1302:3, col:34> col:34 NonSecurePL2TimerGSIV 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c229058 <line:1303:3, col:34> col:34 NonSecurePL2TimerFlags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c229108 <line:1292:1, line:1304:3> col:3 EFI_ACPI_5_0_GENERIC_TIMER_DESCRIPTION_TABLE 'struct EFI_ACPI_5_0_GENERIC_TIMER_DESCRIPTION_TABLE':'EFI_ACPI_5_0_GENERIC_TIMER_DESCRIPTION_TABLE'
| |-ElaboratedType 0x55887c2290b0 'struct EFI_ACPI_5_0_GENERIC_TIMER_DESCRIPTION_TABLE' sugar
| | `-RecordType 0x55887c2281f0 'EFI_ACPI_5_0_GENERIC_TIMER_DESCRIPTION_TABLE'
| |   `-Record 0x55887c228170 ''
| `-FullComment 0x55887c42ad10 <line:1290:4, col:47>
|   `-ParagraphComment 0x55887c42ace0 <col:4, col:47>
|     `-TextComment 0x55887c42acb0 <col:4, col:47> Text=" Generic Timer Description Table definition."
|-RecordDecl 0x55887c229230 <line:1326:9, line:1330:1> line:1326:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2292d0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42ade0 <line:1324:4, col:34>
| | `-ParagraphComment 0x55887c42adb0 <col:4, col:34>
| |   `-TextComment 0x55887c42ad80 <col:4, col:34> Text=" Boot Error Record Table (BERT)"
| |-FieldDecl 0x55887c229338 <line:1327:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c229398 <line:1328:3, col:34> col:34 BootErrorRegionLength 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c2293f8 <line:1329:3, col:34> col:34 BootErrorRegion 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c2294a8 <line:1326:1, line:1330:3> col:3 EFI_ACPI_5_0_BOOT_ERROR_RECORD_TABLE_HEADER 'struct EFI_ACPI_5_0_BOOT_ERROR_RECORD_TABLE_HEADER':'EFI_ACPI_5_0_BOOT_ERROR_RECORD_TABLE_HEADER'
| |-ElaboratedType 0x55887c229450 'struct EFI_ACPI_5_0_BOOT_ERROR_RECORD_TABLE_HEADER' sugar
| | `-RecordType 0x55887c2292b0 'EFI_ACPI_5_0_BOOT_ERROR_RECORD_TABLE_HEADER'
| |   `-Record 0x55887c229230 ''
| `-FullComment 0x55887c42aeb0 <line:1324:4, col:34>
|   `-ParagraphComment 0x55887c42ae80 <col:4, col:34>
|     `-TextComment 0x55887c42ae50 <col:4, col:34> Text=" Boot Error Record Table (BERT)"
|-RecordDecl 0x55887c229570 <line:1340:9, line:1347:1> line:1340:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c229610 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42af80 <line:1338:4, col:45>
| | `-ParagraphComment 0x55887c42af50 <col:4, col:45>
| |   `-TextComment 0x55887c42af20 <col:4, col:45> Text=" Boot Error Region Block Status Definition"
| |-FieldDecl 0x55887c2296b8 <line:1341:3, col:43> col:13 UncorrectableErrorValid 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c229698 <col:43> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c229668 <col:43> 'int' 1
| |-FieldDecl 0x55887c229758 <line:1342:3, col:43> col:13 CorrectableErrorValid 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c229738 <col:43> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c229708 <col:43> 'int' 1
| |-FieldDecl 0x55887c2297f8 <line:1343:3, col:43> col:13 MultipleUncorrectableErrors 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c2297d8 <col:43> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c2297a8 <col:43> 'int' 1
| |-FieldDecl 0x55887c229898 <line:1344:3, col:43> col:13 MultipleCorrectableErrors 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c229878 <col:43> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c229848 <col:43> 'int' 1
| |-FieldDecl 0x55887c229938 <line:1345:3, col:43> col:13 ErrorDataEntryCount 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c229918 <col:43> 'int'
| |   |-value: Int 10
| |   `-IntegerLiteral 0x55887c2298e8 <col:43> 'int' 10
| `-FieldDecl 0x55887c2299d8 <line:1346:3, col:43> col:13 Reserved 'UINT32':'unsigned int'
|   `-ConstantExpr 0x55887c2299b8 <col:43> 'int'
|     |-value: Int 18
|     `-IntegerLiteral 0x55887c229988 <col:43> 'int' 18
|-TypedefDecl 0x55887c229a88 <line:1340:1, line:1347:3> col:3 referenced EFI_ACPI_5_0_ERROR_BLOCK_STATUS 'struct EFI_ACPI_5_0_ERROR_BLOCK_STATUS':'EFI_ACPI_5_0_ERROR_BLOCK_STATUS'
| |-ElaboratedType 0x55887c229a30 'struct EFI_ACPI_5_0_ERROR_BLOCK_STATUS' sugar
| | `-RecordType 0x55887c2295f0 'EFI_ACPI_5_0_ERROR_BLOCK_STATUS'
| |   `-Record 0x55887c229570 ''
| `-FullComment 0x55887c42b050 <line:1338:4, col:45>
|   `-ParagraphComment 0x55887c42b020 <col:4, col:45>
|     `-TextComment 0x55887c42aff0 <col:4, col:45> Text=" Boot Error Region Block Status Definition"
|-RecordDecl 0x55887c229b20 <line:1352:9, line:1358:1> line:1352:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c229bc0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42b120 <line:1350:4, col:32>
| | `-ParagraphComment 0x55887c42b0f0 <col:4, col:32>
| |   `-TextComment 0x55887c42b0c0 <col:4, col:32> Text=" Boot Error Region Definition"
| |-FieldDecl 0x55887c229c50 <line:1353:3, col:38> col:38 BlockStatus 'EFI_ACPI_5_0_ERROR_BLOCK_STATUS':'EFI_ACPI_5_0_ERROR_BLOCK_STATUS'
| |-FieldDecl 0x55887c229cb0 <line:1354:3, col:38> col:38 RawDataOffset 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c229d10 <line:1355:3, col:38> col:38 RawDataLength 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c229d70 <line:1356:3, col:38> col:38 DataLength 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c229dd0 <line:1357:3, col:38> col:38 ErrorSeverity 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c229ef8 <line:1352:1, line:1358:3> col:3 EFI_ACPI_5_0_BOOT_ERROR_REGION_STRUCTURE 'struct EFI_ACPI_5_0_BOOT_ERROR_REGION_STRUCTURE':'EFI_ACPI_5_0_BOOT_ERROR_REGION_STRUCTURE'
| |-ElaboratedType 0x55887c229ea0 'struct EFI_ACPI_5_0_BOOT_ERROR_REGION_STRUCTURE' sugar
| | `-RecordType 0x55887c229ba0 'EFI_ACPI_5_0_BOOT_ERROR_REGION_STRUCTURE'
| |   `-Record 0x55887c229b20 ''
| `-FullComment 0x55887c42b1f0 <line:1350:4, col:32>
|   `-ParagraphComment 0x55887c42b1c0 <col:4, col:32>
|     `-TextComment 0x55887c42b190 <col:4, col:32> Text=" Boot Error Region Definition"
|-RecordDecl 0x55887c229f90 <line:1372:9, line:1381:1> line:1372:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c22a030 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42b2c0 <line:1370:4, col:39>
| | `-ParagraphComment 0x55887c42b290 <col:4, col:39>
| |   `-TextComment 0x55887c42b260 <col:4, col:39> Text=" Generic Error Data Entry Definition"
| |-FieldDecl 0x55887c22a0e8 <line:1373:3, col:27> col:13 SectionType 'UINT8[16]'
| |-FieldDecl 0x55887c22a148 <line:1374:3, col:13> col:13 ErrorSeverity 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c22a1a8 <line:1375:3, col:13> col:13 Revision 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c22a208 <line:1376:3, col:13> col:13 ValidationBits 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c22a268 <line:1377:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c22a2c8 <line:1378:3, col:13> col:13 ErrorDataLength 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c22a378 <line:1379:3, col:21> col:13 FruId 'UINT8[16]'
| `-FieldDecl 0x55887c22a428 <line:1380:3, col:23> col:13 FruText 'UINT8[20]'
|-TypedefDecl 0x55887c22a4d8 <line:1372:1, line:1381:3> col:3 EFI_ACPI_5_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE 'struct EFI_ACPI_5_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE'
| |-ElaboratedType 0x55887c22a480 'struct EFI_ACPI_5_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE' sugar
| | `-RecordType 0x55887c22a010 'EFI_ACPI_5_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE'
| |   `-Record 0x55887c229f90 ''
| `-FullComment 0x55887c42b390 <line:1370:4, col:39>
|   `-ParagraphComment 0x55887c42b360 <col:4, col:39>
|     `-TextComment 0x55887c42b330 <col:4, col:39> Text=" Generic Error Data Entry Definition"
|-RecordDecl 0x55887c22a5a0 <line:1391:9, line:1394:1> line:1391:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c22a640 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42b460 <line:1389:4, col:38>
| | `-ParagraphComment 0x55887c42b430 <col:4, col:38>
| |   `-TextComment 0x55887c42b400 <col:4, col:38> Text=" HEST - Hardware Error Source Table"
| |-FieldDecl 0x55887c22a6a8 <line:1392:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c22a708 <line:1393:3, col:34> col:34 ErrorSourceCount 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c22a7b8 <line:1391:1, line:1394:3> col:3 EFI_ACPI_5_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER 'struct EFI_ACPI_5_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER':'EFI_ACPI_5_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER'
| |-ElaboratedType 0x55887c22a760 'struct EFI_ACPI_5_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER' sugar
| | `-RecordType 0x55887c22a620 'EFI_ACPI_5_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER'
| |   `-Record 0x55887c22a5a0 ''
| `-FullComment 0x55887c42b530 <line:1389:4, col:38>
|   `-ParagraphComment 0x55887c42b500 <col:4, col:38>
|     `-TextComment 0x55887c42b4d0 <col:4, col:38> Text=" HEST - Hardware Error Source Table"
|-RecordDecl 0x55887c22a880 <line:1421:9, line:1433:1> line:1421:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c22a920 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42b600 <line:1419:4, col:67>
| | `-ParagraphComment 0x55887c42b5d0 <col:4, col:67>
| |   `-TextComment 0x55887c42b5a0 <col:4, col:67> Text=" IA-32 Architecture Machine Check Exception Structure Definition"
| |-FieldDecl 0x55887c22a988 <line:1422:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c22a9e8 <line:1423:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c22aa98 <line:1424:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c22aaf8 <line:1425:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c22ab58 <line:1426:3, col:13> col:13 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c22abb8 <line:1427:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c22cc50 <line:1428:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c22ccb0 <line:1429:3, col:13> col:13 GlobalCapabilityInitData 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c22cd10 <line:1430:3, col:13> col:13 GlobalControlInitData 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c22cd70 <line:1431:3, col:13> col:13 NumberOfHardwareBanks 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c22ce20 <line:1432:3, col:24> col:13 Reserved1 'UINT8[7]'
|-TypedefDecl 0x55887c22cec8 <line:1421:1, line:1433:3> col:3 EFI_ACPI_5_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE 'struct EFI_ACPI_5_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE':'EFI_ACPI_5_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE'
| |-ElaboratedType 0x55887c22ce70 'struct EFI_ACPI_5_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE' sugar
| | `-RecordType 0x55887c22a900 'EFI_ACPI_5_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE'
| |   `-Record 0x55887c22a880 ''
| `-FullComment 0x55887c42b6d0 <line:1419:4, col:67>
|   `-ParagraphComment 0x55887c42b6a0 <col:4, col:67>
|     `-TextComment 0x55887c42b670 <col:4, col:67> Text=" IA-32 Architecture Machine Check Exception Structure Definition"
|-RecordDecl 0x55887c22cf60 <line:1438:9, line:1448:1> line:1438:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c22d000 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42b7a0 <line:1436:4, col:62>
| | `-ParagraphComment 0x55887c42b770 <col:4, col:62>
| |   `-TextComment 0x55887c42b740 <col:4, col:62> Text=" IA-32 Architecture Machine Check Bank Structure Definition"
| |-FieldDecl 0x55887c22d068 <line:1439:3, col:13> col:13 BankNumber 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c22d0c8 <line:1440:3, col:13> col:13 ClearStatusOnInitialization 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c22d128 <line:1441:3, col:13> col:13 StatusDataFormat 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c22d188 <line:1442:3, col:13> col:13 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c22d1e8 <line:1443:3, col:13> col:13 ControlRegisterMsrAddress 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c22d248 <line:1444:3, col:13> col:13 ControlInitData 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c22d2a8 <line:1445:3, col:13> col:13 StatusRegisterMsrAddress 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c22d308 <line:1446:3, col:13> col:13 AddressRegisterMsrAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c22d368 <line:1447:3, col:13> col:13 MiscRegisterMsrAddress 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c22d418 <line:1438:1, line:1448:3> col:3 EFI_ACPI_5_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE 'struct EFI_ACPI_5_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE':'EFI_ACPI_5_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE'
| |-ElaboratedType 0x55887c22d3c0 'struct EFI_ACPI_5_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE' sugar
| | `-RecordType 0x55887c22cfe0 'EFI_ACPI_5_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE'
| |   `-Record 0x55887c22cf60 ''
| `-FullComment 0x55887c42b870 <line:1436:4, col:62>
|   `-ParagraphComment 0x55887c42b840 <col:4, col:62>
|     `-TextComment 0x55887c42b810 <col:4, col:62> Text=" IA-32 Architecture Machine Check Bank Structure Definition"
|-RecordDecl 0x55887c22d4e0 <line:1469:9, line:1477:1> line:1469:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c22d580 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42b940 <line:1467:4, col:79>
| | `-ParagraphComment 0x55887c42b910 <col:4, col:79>
| |   `-TextComment 0x55887c42b8e0 <col:4, col:79> Text=" Hardware Error Notification Configuration Write Enable Structure Definition"
| |-FieldDecl 0x55887c22d628 <line:1470:3, col:46> col:13 Type 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c22d608 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c22d5d8 <col:46> 'int' 1
| |-FieldDecl 0x55887c22d6c8 <line:1471:3, col:46> col:13 PollInterval 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c22d6a8 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c22d678 <col:46> 'int' 1
| |-FieldDecl 0x55887c22d768 <line:1472:3, col:46> col:13 SwitchToPollingThresholdValue 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c22d748 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c22d718 <col:46> 'int' 1
| |-FieldDecl 0x55887c22d808 <line:1473:3, col:46> col:13 SwitchToPollingThresholdWindow 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c22d7e8 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c22d7b8 <col:46> 'int' 1
| |-FieldDecl 0x55887c22d8a8 <line:1474:3, col:46> col:13 ErrorThresholdValue 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c22d888 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c22d858 <col:46> 'int' 1
| |-FieldDecl 0x55887c22d948 <line:1475:3, col:46> col:13 ErrorThresholdWindow 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c22d928 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c22d8f8 <col:46> 'int' 1
| `-FieldDecl 0x55887c22d9e8 <line:1476:3, col:46> col:13 Reserved 'UINT16':'unsigned short'
|   `-ConstantExpr 0x55887c22d9c8 <col:46> 'int'
|     |-value: Int 10
|     `-IntegerLiteral 0x55887c22d998 <col:46> 'int' 10
|-TypedefDecl 0x55887c22da98 <line:1469:1, line:1477:3> col:3 referenced EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE 'struct EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE':'EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE'
| |-ElaboratedType 0x55887c22da40 'struct EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE' sugar
| | `-RecordType 0x55887c22d560 'EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE'
| |   `-Record 0x55887c22d4e0 ''
| `-FullComment 0x55887c42ba10 <line:1467:4, col:79>
|   `-ParagraphComment 0x55887c42b9e0 <col:4, col:79>
|     `-TextComment 0x55887c42b9b0 <col:4, col:79> Text=" Hardware Error Notification Configuration Write Enable Structure Definition"
|-RecordDecl 0x55887c22db30 <line:1482:9, line:1492:1> line:1482:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c22dbd0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42bae0 <line:1480:4, col:52>
| | `-ParagraphComment 0x55887c42bab0 <col:4, col:52>
| |   `-TextComment 0x55887c42ba80 <col:4, col:52> Text=" Hardware Error Notification Structure Definition"
| |-FieldDecl 0x55887c22dc38 <line:1483:3, col:84> col:84 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c22dc98 <line:1484:3, col:84> col:84 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c22dd20 <line:1485:3, col:84> col:84 ConfigurationWriteEnable 'EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE':'EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE'
| |-FieldDecl 0x55887c22dd80 <line:1486:3, col:84> col:84 PollInterval 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c22dde0 <line:1487:3, col:84> col:84 Vector 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c22de40 <line:1488:3, col:84> col:84 SwitchToPollingThresholdValue 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c22dea0 <line:1489:3, col:84> col:84 SwitchToPollingThresholdWindow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c22df00 <line:1490:3, col:84> col:84 ErrorThresholdValue 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c22df60 <line:1491:3, col:84> col:84 ErrorThresholdWindow 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c22e008 <line:1482:1, line:1492:3> col:3 referenced EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE 'struct EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE':'EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE'
| |-ElaboratedType 0x55887c22dfb0 'struct EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE' sugar
| | `-RecordType 0x55887c22dbb0 'EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE'
| |   `-Record 0x55887c22db30 ''
| `-FullComment 0x55887c42bbb0 <line:1480:4, col:52>
|   `-ParagraphComment 0x55887c42bb80 <col:4, col:52>
|     `-TextComment 0x55887c42bb50 <col:4, col:52> Text=" Hardware Error Notification Structure Definition"
|-RecordDecl 0x55887c22e0a0 <line:1497:9, line:1508:1> line:1497:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c22e140 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42bc80 <line:1495:4, col:67>
| | `-ParagraphComment 0x55887c42bc50 <col:4, col:67>
| |   `-TextComment 0x55887c42bc20 <col:4, col:67> Text=" IA-32 Architecture Corrected Machine Check Structure Definition"
| |-FieldDecl 0x55887c22e1a8 <line:1498:3, col:57> col:57 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c22e208 <line:1499:3, col:57> col:57 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c22e2b8 <line:1500:3, col:68> col:57 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c22e318 <line:1501:3, col:57> col:57 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c22e378 <line:1502:3, col:57> col:57 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c22e3d8 <line:1503:3, col:57> col:57 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c22e438 <line:1504:3, col:57> col:57 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c22e4c0 <line:1505:3, col:57> col:57 NotificationStructure 'EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE':'EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE'
| |-FieldDecl 0x55887c22e520 <line:1506:3, col:57> col:57 NumberOfHardwareBanks 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c22e5d0 <line:1507:3, col:68> col:57 Reserved1 'UINT8[3]'
|-TypedefDecl 0x55887c22e678 <line:1497:1, line:1508:3> col:3 EFI_ACPI_5_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE 'struct EFI_ACPI_5_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE':'EFI_ACPI_5_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE'
| |-ElaboratedType 0x55887c22e620 'struct EFI_ACPI_5_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE' sugar
| | `-RecordType 0x55887c22e120 'EFI_ACPI_5_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE'
| |   `-Record 0x55887c22e0a0 ''
| `-FullComment 0x55887c42bd50 <line:1495:4, col:67>
|   `-ParagraphComment 0x55887c42bd20 <col:4, col:67>
|     `-TextComment 0x55887c42bcf0 <col:4, col:67> Text=" IA-32 Architecture Corrected Machine Check Structure Definition"
|-RecordDecl 0x55887c22e710 <line:1513:9, line:1520:1> line:1513:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c22e7b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42be20 <line:1511:4, col:53>
| | `-ParagraphComment 0x55887c42bdf0 <col:4, col:53>
| |   `-TextComment 0x55887c42bdc0 <col:4, col:53> Text=" IA-32 Architecture NMI Error Structure Definition"
| |-FieldDecl 0x55887c22e818 <line:1514:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c22e878 <line:1515:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c22e928 <line:1516:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c22e988 <line:1517:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c22e9e8 <line:1518:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c22ea48 <line:1519:3, col:13> col:13 MaxRawDataLength 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c22eaf8 <line:1513:1, line:1520:3> col:3 EFI_ACPI_5_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE 'struct EFI_ACPI_5_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE':'EFI_ACPI_5_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE'
| |-ElaboratedType 0x55887c22eaa0 'struct EFI_ACPI_5_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE' sugar
| | `-RecordType 0x55887c22e790 'EFI_ACPI_5_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE'
| |   `-Record 0x55887c22e710 ''
| `-FullComment 0x55887c42bef0 <line:1511:4, col:53>
|   `-ParagraphComment 0x55887c42bec0 <col:4, col:53>
|     `-TextComment 0x55887c42be90 <col:4, col:53> Text=" IA-32 Architecture NMI Error Structure Definition"
|-RecordDecl 0x55887c22eb90 <line:1525:9, line:1543:1> line:1525:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c22fc70 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42bfc0 <line:1523:4, col:50>
| | `-ParagraphComment 0x55887c42bf90 <col:4, col:50>
| |   `-TextComment 0x55887c42bf60 <col:4, col:50> Text=" PCI Express Root Port AER Structure Definition"
| |-FieldDecl 0x55887c22fcd8 <line:1526:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c22fd38 <line:1527:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c22fde8 <line:1528:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c22fe48 <line:1529:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c22fea8 <line:1530:3, col:13> col:13 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c22ff08 <line:1531:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c22ff68 <line:1532:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c22ffc8 <line:1533:3, col:13> col:13 Bus 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c230028 <line:1534:3, col:13> col:13 Device 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c230088 <line:1535:3, col:13> col:13 Function 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2300e8 <line:1536:3, col:13> col:13 DeviceControl 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c230198 <line:1537:3, col:24> col:13 Reserved1 'UINT8[2]'
| |-FieldDecl 0x55887c2301f8 <line:1538:3, col:13> col:13 UncorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c230258 <line:1539:3, col:13> col:13 UncorrectableErrorSeverity 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2302b8 <line:1540:3, col:13> col:13 CorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c230318 <line:1541:3, col:13> col:13 AdvancedErrorCapabilitiesAndControl 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c230378 <line:1542:3, col:13> col:13 RootErrorCommand 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c230428 <line:1525:1, line:1543:3> col:3 EFI_ACPI_5_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE 'struct EFI_ACPI_5_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE':'EFI_ACPI_5_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE'
| |-ElaboratedType 0x55887c2303d0 'struct EFI_ACPI_5_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE' sugar
| | `-RecordType 0x55887c22ec10 'EFI_ACPI_5_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE'
| |   `-Record 0x55887c22eb90 ''
| `-FullComment 0x55887c42c090 <line:1523:4, col:50>
|   `-ParagraphComment 0x55887c42c060 <col:4, col:50>
|     `-TextComment 0x55887c42c030 <col:4, col:50> Text=" PCI Express Root Port AER Structure Definition"
|-RecordDecl 0x55887c2304c0 <line:1548:9, line:1565:1> line:1548:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c230560 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42c160 <line:1546:4, col:47>
| | `-ParagraphComment 0x55887c42c130 <col:4, col:47>
| |   `-TextComment 0x55887c42c100 <col:4, col:47> Text=" PCI Express Device AER Structure Definition"
| |-FieldDecl 0x55887c2305c8 <line:1549:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c230628 <line:1550:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2306d8 <line:1551:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c230738 <line:1552:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c230798 <line:1553:3, col:13> col:13 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2307f8 <line:1554:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c230858 <line:1555:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2308b8 <line:1556:3, col:13> col:13 Bus 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c230918 <line:1557:3, col:13> col:13 Device 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c230978 <line:1558:3, col:13> col:13 Function 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2309d8 <line:1559:3, col:13> col:13 DeviceControl 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c230a88 <line:1560:3, col:24> col:13 Reserved1 'UINT8[2]'
| |-FieldDecl 0x55887c230ae8 <line:1561:3, col:13> col:13 UncorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c230b48 <line:1562:3, col:13> col:13 UncorrectableErrorSeverity 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c230ba8 <line:1563:3, col:13> col:13 CorrectableErrorMask 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c230c08 <line:1564:3, col:13> col:13 AdvancedErrorCapabilitiesAndControl 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c230cb8 <line:1548:1, line:1565:3> col:3 EFI_ACPI_5_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE 'struct EFI_ACPI_5_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE':'EFI_ACPI_5_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE'
| |-ElaboratedType 0x55887c230c60 'struct EFI_ACPI_5_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE' sugar
| | `-RecordType 0x55887c230540 'EFI_ACPI_5_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE'
| |   `-Record 0x55887c2304c0 ''
| `-FullComment 0x55887c42c230 <line:1546:4, col:47>
|   `-ParagraphComment 0x55887c42c200 <col:4, col:47>
|     `-TextComment 0x55887c42c1d0 <col:4, col:47> Text=" PCI Express Device AER Structure Definition"
|-RecordDecl 0x55887c230d50 <line:1570:9, line:1590:1> line:1570:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c230df0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42c300 <line:1568:4, col:47>
| | `-ParagraphComment 0x55887c42c2d0 <col:4, col:47>
| |   `-TextComment 0x55887c42c2a0 <col:4, col:47> Text=" PCI Express Bridge AER Structure Definition"
| |-FieldDecl 0x55887c230e58 <line:1571:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c230eb8 <line:1572:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c230f68 <line:1573:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c230fc8 <line:1574:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c231028 <line:1575:3, col:13> col:13 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c231088 <line:1576:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2310e8 <line:1577:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c231148 <line:1578:3, col:13> col:13 Bus 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2311a8 <line:1579:3, col:13> col:13 Device 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c231208 <line:1580:3, col:13> col:13 Function 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c231268 <line:1581:3, col:13> col:13 DeviceControl 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c231318 <line:1582:3, col:24> col:13 Reserved1 'UINT8[2]'
| |-FieldDecl 0x55887c231378 <line:1583:3, col:13> col:13 UncorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2313d8 <line:1584:3, col:13> col:13 UncorrectableErrorSeverity 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c231438 <line:1585:3, col:13> col:13 CorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c231498 <line:1586:3, col:13> col:13 AdvancedErrorCapabilitiesAndControl 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2314f8 <line:1587:3, col:13> col:13 SecondaryUncorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c231558 <line:1588:3, col:13> col:13 SecondaryUncorrectableErrorSeverity 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c2315b8 <line:1589:3, col:13> col:13 SecondaryAdvancedErrorCapabilitiesAndControl 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c231668 <line:1570:1, line:1590:3> col:3 EFI_ACPI_5_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE 'struct EFI_ACPI_5_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE':'EFI_ACPI_5_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE'
| |-ElaboratedType 0x55887c231610 'struct EFI_ACPI_5_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE' sugar
| | `-RecordType 0x55887c230dd0 'EFI_ACPI_5_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE'
| |   `-Record 0x55887c230d50 ''
| `-FullComment 0x55887c42c3d0 <line:1568:4, col:47>
|   `-ParagraphComment 0x55887c42c3a0 <col:4, col:47>
|     `-TextComment 0x55887c42c370 <col:4, col:47> Text=" PCI Express Bridge AER Structure Definition"
|-RecordDecl 0x55887c231700 <line:1595:9, line:1607:1> line:1595:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2317a0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42c4a0 <line:1593:4, col:54>
| | `-ParagraphComment 0x55887c42c470 <col:4, col:54>
| |   `-TextComment 0x55887c42c440 <col:4, col:54> Text=" Generic Hardware Error Source Structure Definition"
| |-FieldDecl 0x55887c231808 <line:1596:3, col:57> col:57 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c231868 <line:1597:3, col:57> col:57 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2318c8 <line:1598:3, col:57> col:57 RelatedSourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c231928 <line:1599:3, col:57> col:57 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c231988 <line:1600:3, col:57> col:57 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2319e8 <line:1601:3, col:57> col:57 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c231a48 <line:1602:3, col:57> col:57 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c231aa8 <line:1603:3, col:57> col:57 MaxRawDataLength 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c231b08 <line:1604:3, col:57> col:57 ErrorStatusAddress 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c231b68 <line:1605:3, col:57> col:57 NotificationStructure 'EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE':'EFI_ACPI_5_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE'
| `-FieldDecl 0x55887c231bc8 <line:1606:3, col:57> col:57 ErrorStatusBlockLength 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c231ca0 <line:1595:1, line:1607:3> col:3 EFI_ACPI_5_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE 'struct EFI_ACPI_5_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE':'EFI_ACPI_5_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE'
| |-ElaboratedType 0x55887c231c20 'struct EFI_ACPI_5_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE' sugar
| | `-RecordType 0x55887c231780 'EFI_ACPI_5_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE'
| |   `-Record 0x55887c231700 ''
| `-FullComment 0x55887c42c570 <line:1593:4, col:54>
|   `-ParagraphComment 0x55887c42c540 <col:4, col:54>
|     `-TextComment 0x55887c42c510 <col:4, col:54> Text=" Generic Hardware Error Source Structure Definition"
|-RecordDecl 0x55887c231d40 <line:1612:9, line:1618:1> line:1612:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c231de0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42c640 <line:1610:4, col:35>
| | `-ParagraphComment 0x55887c42c610 <col:4, col:35>
| |   `-TextComment 0x55887c42c5e0 <col:4, col:35> Text=" Generic Error Status Definition"
| |-FieldDecl 0x55887c231e48 <line:1613:3, col:38> col:38 BlockStatus 'EFI_ACPI_5_0_ERROR_BLOCK_STATUS':'EFI_ACPI_5_0_ERROR_BLOCK_STATUS'
| |-FieldDecl 0x55887c231ea8 <line:1614:3, col:38> col:38 RawDataOffset 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c231f08 <line:1615:3, col:38> col:38 RawDataLength 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c231f68 <line:1616:3, col:38> col:38 DataLength 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c231fc8 <line:1617:3, col:38> col:38 ErrorSeverity 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c232078 <line:1612:1, line:1618:3> col:3 EFI_ACPI_5_0_GENERIC_ERROR_STATUS_STRUCTURE 'struct EFI_ACPI_5_0_GENERIC_ERROR_STATUS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ERROR_STATUS_STRUCTURE'
| |-ElaboratedType 0x55887c232020 'struct EFI_ACPI_5_0_GENERIC_ERROR_STATUS_STRUCTURE' sugar
| | `-RecordType 0x55887c231dc0 'EFI_ACPI_5_0_GENERIC_ERROR_STATUS_STRUCTURE'
| |   `-Record 0x55887c231d40 ''
| `-FullComment 0x55887c42c710 <line:1610:4, col:35>
|   `-ParagraphComment 0x55887c42c6e0 <col:4, col:35>
|     `-TextComment 0x55887c42c6b0 <col:4, col:35> Text=" Generic Error Status Definition"
|-RecordDecl 0x55887c232110 <line:1623:9, line:1628:1> line:1623:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2321b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42c7e0 <line:1621:4, col:43>
| | `-ParagraphComment 0x55887c42c7b0 <col:4, col:43>
| |   `-TextComment 0x55887c42c780 <col:4, col:43> Text=" ERST - Error Record Serialization Table"
| |-FieldDecl 0x55887c232218 <line:1624:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c232278 <line:1625:3, col:34> col:34 SerializationHeaderSize 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c232328 <line:1626:3, col:45> col:34 Reserved0 'UINT8[4]'
| `-FieldDecl 0x55887c232388 <line:1627:3, col:34> col:34 InstructionEntryCount 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c232438 <line:1623:1, line:1628:3> col:3 EFI_ACPI_5_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER 'struct EFI_ACPI_5_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER':'EFI_ACPI_5_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER'
| |-ElaboratedType 0x55887c2323e0 'struct EFI_ACPI_5_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c232190 'EFI_ACPI_5_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER'
| |   `-Record 0x55887c232110 ''
| `-FullComment 0x55887c42c8c0 <line:1621:4, col:43>
|   `-ParagraphComment 0x55887c42c890 <col:4, col:43>
|     `-TextComment 0x55887c42c860 <col:4, col:43> Text=" ERST - Error Record Serialization Table"
|-RecordDecl 0x55887c2325c0 <line:1695:9, line:1703:1> line:1695:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c232660 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42c990 <line:1693:4, col:40>
| | `-ParagraphComment 0x55887c42c960 <col:4, col:40>
| |   `-TextComment 0x55887c42c930 <col:4, col:40> Text=" ERST Serialization Instruction Entry"
| |-FieldDecl 0x55887c2326c8 <line:1696:3, col:45> col:45 SerializationAction 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c232728 <line:1697:3, col:45> col:45 Instruction 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c232788 <line:1698:3, col:45> col:45 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2327e8 <line:1699:3, col:45> col:45 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c232848 <line:1700:3, col:45> col:45 RegisterRegion 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c2328a8 <line:1701:3, col:45> col:45 Value 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c232908 <line:1702:3, col:45> col:45 Mask 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c2329b8 <line:1695:1, line:1703:3> col:3 EFI_ACPI_5_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY 'struct EFI_ACPI_5_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY':'EFI_ACPI_5_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY'
| |-ElaboratedType 0x55887c232960 'struct EFI_ACPI_5_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY' sugar
| | `-RecordType 0x55887c232640 'EFI_ACPI_5_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY'
| |   `-Record 0x55887c2325c0 ''
| `-FullComment 0x55887c42ca60 <line:1693:4, col:40>
|   `-ParagraphComment 0x55887c42ca30 <col:4, col:40>
|     `-TextComment 0x55887c42ca00 <col:4, col:40> Text=" ERST Serialization Instruction Entry"
|-RecordDecl 0x55887c232a50 <line:1708:9, line:1714:1> line:1708:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c232af0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42cb30 <line:1706:4, col:32>
| | `-ParagraphComment 0x55887c42cb00 <col:4, col:32>
| |   `-TextComment 0x55887c42cad0 <col:4, col:32> Text=" EINJ - Error Injection Table"
| |-FieldDecl 0x55887c232b58 <line:1709:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c232bb8 <line:1710:3, col:34> col:34 InjectionHeaderSize 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c232c18 <line:1711:3, col:34> col:34 InjectionFlags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c232cc8 <line:1712:3, col:45> col:34 Reserved0 'UINT8[3]'
| `-FieldDecl 0x55887c232d28 <line:1713:3, col:34> col:34 InjectionEntryCount 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c232dd8 <line:1708:1, line:1714:3> col:3 EFI_ACPI_5_0_ERROR_INJECTION_TABLE_HEADER 'struct EFI_ACPI_5_0_ERROR_INJECTION_TABLE_HEADER':'EFI_ACPI_5_0_ERROR_INJECTION_TABLE_HEADER'
| |-ElaboratedType 0x55887c232d80 'struct EFI_ACPI_5_0_ERROR_INJECTION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c232ad0 'EFI_ACPI_5_0_ERROR_INJECTION_TABLE_HEADER'
| |   `-Record 0x55887c232a50 ''
| `-FullComment 0x55887c42cc00 <line:1706:4, col:32>
|   `-ParagraphComment 0x55887c42cbd0 <col:4, col:32>
|     `-TextComment 0x55887c42cba0 <col:4, col:32> Text=" EINJ - Error Injection Table"
|-RecordDecl 0x55887c232f90 <line:1774:9, line:1782:1> line:1774:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c233030 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42ccd0 <line:1772:4, col:36>
| | `-ParagraphComment 0x55887c42cca0 <col:4, col:36>
| |   `-TextComment 0x55887c42cc70 <col:4, col:36> Text=" EINJ Injection Instruction Entry"
| |-FieldDecl 0x55887c233098 <line:1775:3, col:45> col:45 InjectionAction 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2330f8 <line:1776:3, col:45> col:45 Instruction 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c233158 <line:1777:3, col:45> col:45 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2331b8 <line:1778:3, col:45> col:45 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c233218 <line:1779:3, col:45> col:45 RegisterRegion 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c233278 <line:1780:3, col:45> col:45 Value 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c2332d8 <line:1781:3, col:45> col:45 Mask 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c233388 <line:1774:1, line:1782:3> col:3 EFI_ACPI_5_0_EINJ_INJECTION_INSTRUCTION_ENTRY 'struct EFI_ACPI_5_0_EINJ_INJECTION_INSTRUCTION_ENTRY':'EFI_ACPI_5_0_EINJ_INJECTION_INSTRUCTION_ENTRY'
| |-ElaboratedType 0x55887c233330 'struct EFI_ACPI_5_0_EINJ_INJECTION_INSTRUCTION_ENTRY' sugar
| | `-RecordType 0x55887c233010 'EFI_ACPI_5_0_EINJ_INJECTION_INSTRUCTION_ENTRY'
| |   `-Record 0x55887c232f90 ''
| `-FullComment 0x55887c42cda0 <line:1772:4, col:36>
|   `-ParagraphComment 0x55887c42cd70 <col:4, col:36>
|     `-TextComment 0x55887c42cd40 <col:4, col:36> Text=" EINJ Injection Instruction Entry"
|-RecordDecl 0x55887c233420 <line:1787:9, line:1792:1> line:1787:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2334c0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42ce70 <line:1785:4, col:29>
| | `-ParagraphComment 0x55887c42ce40 <col:4, col:29>
| |   `-TextComment 0x55887c42ce10 <col:4, col:29> Text=" EINJ Trigger Action Table"
| |-FieldDecl 0x55887c233528 <line:1788:3, col:13> col:13 HeaderSize 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c233588 <line:1789:3, col:13> col:13 Revision 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2335e8 <line:1790:3, col:13> col:13 TableSize 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c233648 <line:1791:3, col:13> col:13 EntryCount 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c2336f8 <line:1787:1, line:1792:3> col:3 EFI_ACPI_5_0_EINJ_TRIGGER_ACTION_TABLE 'struct EFI_ACPI_5_0_EINJ_TRIGGER_ACTION_TABLE':'EFI_ACPI_5_0_EINJ_TRIGGER_ACTION_TABLE'
| |-ElaboratedType 0x55887c2336a0 'struct EFI_ACPI_5_0_EINJ_TRIGGER_ACTION_TABLE' sugar
| | `-RecordType 0x55887c2334a0 'EFI_ACPI_5_0_EINJ_TRIGGER_ACTION_TABLE'
| |   `-Record 0x55887c233420 ''
| `-FullComment 0x55887c42cf40 <line:1785:4, col:29>
|   `-ParagraphComment 0x55887c42cf10 <col:4, col:29>
|     `-TextComment 0x55887c42cee0 <col:4, col:29> Text=" EINJ Trigger Action Table"
|-RecordDecl 0x55887c233790 <line:1797:9, line:1801:1> line:1797:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c233830 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42d010 <line:1795:4, col:48>
| | `-ParagraphComment 0x55887c42cfe0 <col:4, col:48>
| |   `-TextComment 0x55887c42cfb0 <col:4, col:48> Text=" Platform Communications Channel Table (PCCT)"
| |-FieldDecl 0x55887c233898 <line:1798:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c2338f8 <line:1799:3, col:34> col:34 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c233958 <line:1800:3, col:34> col:34 Reserved 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c233a08 <line:1797:1, line:1801:3> col:3 EFI_ACPI_5_0_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER 'struct EFI_ACPI_5_0_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER':'EFI_ACPI_5_0_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER'
| |-ElaboratedType 0x55887c2339b0 'struct EFI_ACPI_5_0_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER' sugar
| | `-RecordType 0x55887c233810 'EFI_ACPI_5_0_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER'
| |   `-Record 0x55887c233790 ''
| `-FullComment 0x55887c42d0e0 <line:1795:4, col:48>
|   `-ParagraphComment 0x55887c42d0b0 <col:4, col:48>
|     `-TextComment 0x55887c42d080 <col:4, col:48> Text=" Platform Communications Channel Table (PCCT)"
|-RecordDecl 0x55887c233b00 <line:1821:9, line:1824:1> line:1821:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c233ba0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42d1b0 <line:1819:4, col:33>
| | `-ParagraphComment 0x55887c42d180 <col:4, col:33>
| |   `-TextComment 0x55887c42d150 <col:4, col:33> Text=" PCC Subspace Structure Header"
| |-FieldDecl 0x55887c233c08 <line:1822:3, col:12> col:12 Type 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c237e40 <line:1823:3, col:12> col:12 Length 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c237ee8 <line:1821:1, line:1824:3> col:3 EFI_ACPI_5_0_PCCT_SUBSPACE_HEADER 'struct EFI_ACPI_5_0_PCCT_SUBSPACE_HEADER':'EFI_ACPI_5_0_PCCT_SUBSPACE_HEADER'
| |-ElaboratedType 0x55887c237e90 'struct EFI_ACPI_5_0_PCCT_SUBSPACE_HEADER' sugar
| | `-RecordType 0x55887c233b80 'EFI_ACPI_5_0_PCCT_SUBSPACE_HEADER'
| |   `-Record 0x55887c233b00 ''
| `-FullComment 0x55887c42d280 <line:1819:4, col:33>
|   `-ParagraphComment 0x55887c42d250 <col:4, col:33>
|     `-TextComment 0x55887c42d220 <col:4, col:33> Text=" PCC Subspace Structure Header"
|-RecordDecl 0x55887c237f80 <line:1829:9, line:1841:1> line:1829:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c238020 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42d350 <line:1827:4, col:45>
| | `-ParagraphComment 0x55887c42d320 <col:4, col:45>
| |   `-TextComment 0x55887c42d2f0 <col:4, col:45> Text=" Generic Communications Subspace Structure"
| |-FieldDecl 0x55887c238088 <line:1830:3, col:45> col:45 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2380e8 <line:1831:3, col:45> col:45 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c238198 <line:1832:3, col:55> col:45 Reserved 'UINT8[6]'
| |-FieldDecl 0x55887c2381f8 <line:1833:3, col:45> col:45 BaseAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c238258 <line:1834:3, col:45> col:45 AddressLength 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2382b8 <line:1835:3, col:45> col:45 DoorbellRegister 'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c238318 <line:1836:3, col:45> col:45 DoorbellPreserve 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c238378 <line:1837:3, col:45> col:45 DoorbellWrite 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2383d8 <line:1838:3, col:45> col:45 NominalLatency 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c238438 <line:1839:3, col:45> col:45 MaximumPeriodicAccessRate 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c238498 <line:1840:3, col:45> col:45 MinimumRequestTurnaroundTime 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c238548 <line:1829:1, line:1841:3> col:3 EFI_ACPI_5_0_PCCT_SUBSPACE_GENERIC 'struct EFI_ACPI_5_0_PCCT_SUBSPACE_GENERIC':'EFI_ACPI_5_0_PCCT_SUBSPACE_GENERIC'
| |-ElaboratedType 0x55887c2384f0 'struct EFI_ACPI_5_0_PCCT_SUBSPACE_GENERIC' sugar
| | `-RecordType 0x55887c238000 'EFI_ACPI_5_0_PCCT_SUBSPACE_GENERIC'
| |   `-Record 0x55887c237f80 ''
| `-FullComment 0x55887c42d420 <line:1827:4, col:45>
|   `-ParagraphComment 0x55887c42d3f0 <col:4, col:45>
|     `-TextComment 0x55887c42d3c0 <col:4, col:45> Text=" Generic Communications Subspace Structure"
|-RecordDecl 0x55887c2385e0 <line:1847:9, line:1851:1> line:1847:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c238680 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42d4f0 <line:1844:4, col:55>
| | `-ParagraphComment 0x55887c42d4c0 <col:4, col:55>
| |   `-TextComment 0x55887c42d490 <col:4, col:55> Text=" Generic Communications Channel Shared Memory Region"
| |-FieldDecl 0x55887c2386e8 <line:1848:3, col:12> col:12 Command 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c238788 <line:1849:3, col:26> col:12 Reserved 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c238768 <col:26> 'int'
| |   |-value: Int 7
| |   `-IntegerLiteral 0x55887c238738 <col:26> 'int' 7
| `-FieldDecl 0x55887c238828 <line:1850:3, col:26> col:12 GenerateSci 'UINT8':'unsigned char'
|   `-ConstantExpr 0x55887c238808 <col:26> 'int'
|     |-value: Int 1
|     `-IntegerLiteral 0x55887c2387d8 <col:26> 'int' 1
|-TypedefDecl 0x55887c2388d8 <line:1847:1, line:1851:3> col:3 referenced EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND 'struct EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND':'EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND'
| |-ElaboratedType 0x55887c238880 'struct EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND' sugar
| | `-RecordType 0x55887c238660 'EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND'
| |   `-Record 0x55887c2385e0 ''
| `-FullComment 0x55887c42d5c0 <line:1844:4, col:55>
|   `-ParagraphComment 0x55887c42d590 <col:4, col:55>
|     `-TextComment 0x55887c42d560 <col:4, col:55> Text=" Generic Communications Channel Shared Memory Region"
|-RecordDecl 0x55887c238948 <line:1853:9, line:1860:1> line:1853:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2389f0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c238a98 <line:1854:3, col:35> col:12 CommandComplete 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c238a78 <col:35> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c238a48 <col:35> 'int' 1
| |-FieldDecl 0x55887c238b38 <line:1855:3, col:35> col:12 SciDoorbell 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c238b18 <col:35> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c238ae8 <col:35> 'int' 1
| |-FieldDecl 0x55887c238bd8 <line:1856:3, col:35> col:12 Error 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c238bb8 <col:35> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c238b88 <col:35> 'int' 1
| |-FieldDecl 0x55887c238c78 <line:1857:3, col:35> col:12 PlatformNotification 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c238c58 <col:35> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c238c28 <col:35> 'int' 1
| |-FieldDecl 0x55887c238d18 <line:1858:3, col:35> col:12 Reserved 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c238cf8 <col:35> 'int'
| |   |-value: Int 4
| |   `-IntegerLiteral 0x55887c238cc8 <col:35> 'int' 4
| `-FieldDecl 0x55887c238d78 <line:1859:3, col:12> col:12 Reserved1 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c238e28 <line:1853:1, line:1860:3> col:3 referenced EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS 'struct EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS':'EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS'
| `-ElaboratedType 0x55887c238dd0 'struct EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS' sugar
|   `-RecordType 0x55887c2389d0 'EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS'
|     `-Record 0x55887c238948 ''
|-RecordDecl 0x55887c238e98 <line:1862:9, line:1866:1> line:1862:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c238f40 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c238fa8 <line:1863:3, col:61> col:61 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c239030 <line:1864:3, col:61> col:61 Command 'EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND':'EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND'
| `-FieldDecl 0x55887c2390b0 <line:1865:3, col:61> col:61 Status 'EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS':'EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS'
|-TypedefDecl 0x55887c239158 <line:1862:1, line:1866:3> col:3 EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER 'struct EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER':'EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER'
| `-ElaboratedType 0x55887c239100 'struct EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER' sugar
|   `-RecordType 0x55887c238f20 'EFI_ACPI_5_0_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER'
|     `-Record 0x55887c238e98 ''
|-RecordDecl 0x55887c239b38 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/Acpi51.h:24:9, line:30:1> line:24:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c239be0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42d690 <line:22:4, col:45>
| | `-ParagraphComment 0x55887c42d660 <col:4, col:45>
| |   `-TextComment 0x55887c42d630 <col:4, col:45> Text=" ACPI 5.1 Generic Address Space definition"
| |-FieldDecl 0x55887c239c48 <line:25:3, col:13> col:13 AddressSpaceId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c239ca8 <line:26:3, col:13> col:13 RegisterBitWidth 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c239d08 <line:27:3, col:13> col:13 RegisterBitOffset 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c239d68 <line:28:3, col:13> col:13 AccessSize 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c239dc8 <line:29:3, col:13> col:13 Address 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c240bf8 <line:24:1, line:30:3> col:3 referenced EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE 'struct EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| |-ElaboratedType 0x55887c240ba0 'struct EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE' sugar
| | `-RecordType 0x55887c239bc0 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| |   `-Record 0x55887c239b38 ''
| `-FullComment 0x55887c42d760 <line:22:4, col:45>
|   `-ParagraphComment 0x55887c42d730 <col:4, col:45>
|     `-TextComment 0x55887c42d700 <col:4, col:45> Text=" ACPI 5.1 Generic Address Space definition"
|-RecordDecl 0x55887c240c90 <line:59:9, line:69:1> line:59:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c240d30 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42d830 <line:57:4, col:45>
| | `-ParagraphComment 0x55887c42d800 <col:4, col:45>
| |   `-TextComment 0x55887c42d7d0 <col:4, col:45> Text=" Root System Description Pointer Structure"
| |-FieldDecl 0x55887c240d98 <line:60:3, col:13> col:13 Signature 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c240df8 <line:61:3, col:13> col:13 Checksum 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c240ea8 <line:62:3, col:20> col:13 OemId 'UINT8[6]'
| |-FieldDecl 0x55887c240f08 <line:63:3, col:13> col:13 Revision 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c240f68 <line:64:3, col:13> col:13 RsdtAddress 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c240fc8 <line:65:3, col:13> col:13 Length 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c241028 <line:66:3, col:13> col:13 XsdtAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c241088 <line:67:3, col:13> col:13 ExtendedChecksum 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c241138 <line:68:3, col:23> col:13 Reserved 'UINT8[3]'
|-TypedefDecl 0x55887c2411e8 <line:59:1, line:69:3> col:3 EFI_ACPI_5_1_ROOT_SYSTEM_DESCRIPTION_POINTER 'struct EFI_ACPI_5_1_ROOT_SYSTEM_DESCRIPTION_POINTER':'EFI_ACPI_5_1_ROOT_SYSTEM_DESCRIPTION_POINTER'
| |-ElaboratedType 0x55887c241190 'struct EFI_ACPI_5_1_ROOT_SYSTEM_DESCRIPTION_POINTER' sugar
| | `-RecordType 0x55887c240d10 'EFI_ACPI_5_1_ROOT_SYSTEM_DESCRIPTION_POINTER'
| |   `-Record 0x55887c240c90 ''
| `-FullComment 0x55887c42d900 <line:57:4, col:45>
|   `-ParagraphComment 0x55887c42d8d0 <col:4, col:45>
|     `-TextComment 0x55887c42d8a0 <col:4, col:45> Text=" Root System Description Pointer Structure"
|-RecordDecl 0x55887c2412e0 <line:80:9, line:83:1> line:80:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c241380 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42d9f0 <line:77:4, line:78:35>
| | `-ParagraphComment 0x55887c42d9c0 <line:77:4, line:78:35>
| |   |-TextComment 0x55887c42d970 <line:77:4, col:75> Text=" Common table header, this prefaces all ACPI tables, including FACS, but"
| |   `-TextComment 0x55887c42d990 <line:78:4, col:35> Text=" excluding the RSD PTR structure"
| |-FieldDecl 0x55887c2413e8 <line:81:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c241448 <line:82:3, col:13> col:13 Length 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c2414f8 <line:80:1, line:83:3> col:3 EFI_ACPI_5_1_COMMON_HEADER 'struct EFI_ACPI_5_1_COMMON_HEADER':'EFI_ACPI_5_1_COMMON_HEADER'
| |-ElaboratedType 0x55887c2414a0 'struct EFI_ACPI_5_1_COMMON_HEADER' sugar
| | `-RecordType 0x55887c241360 'EFI_ACPI_5_1_COMMON_HEADER'
| |   `-Record 0x55887c2412e0 ''
| `-FullComment 0x55887c42dae0 <line:77:4, line:78:35>
|   `-ParagraphComment 0x55887c42dab0 <line:77:4, line:78:35>
|     |-TextComment 0x55887c42da60 <line:77:4, col:75> Text=" Common table header, this prefaces all ACPI tables, including FACS, but"
|     `-TextComment 0x55887c42da80 <line:78:4, col:35> Text=" excluding the RSD PTR structure"
|-RecordDecl 0x55887c2415f0 <line:110:9, line:166:1> line:110:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c241690 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42dbb0 <line:108:4, col:49>
| | `-ParagraphComment 0x55887c42db80 <col:4, col:49>
| |   `-TextComment 0x55887c42db50 <col:4, col:49> Text=" Fixed ACPI Description Table Structure (FADT)"
| |-FieldDecl 0x55887c2416f8 <line:111:3, col:45> col:45 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c241758 <line:112:3, col:45> col:45 FirmwareCtrl 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2417b8 <line:113:3, col:45> col:45 Dsdt 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c241818 <line:114:3, col:45> col:45 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c241878 <line:115:3, col:45> col:45 PreferredPmProfile 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2418d8 <line:116:3, col:45> col:45 SciInt 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c241938 <line:117:3, col:45> col:45 SmiCmd 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c241998 <line:118:3, col:45> col:45 AcpiEnable 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2419f8 <line:119:3, col:45> col:45 AcpiDisable 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c241a58 <line:120:3, col:45> col:45 S4BiosReq 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c241ab8 <line:121:3, col:45> col:45 PstateCnt 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c241b18 <line:122:3, col:45> col:45 Pm1aEvtBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c241b78 <line:123:3, col:45> col:45 Pm1bEvtBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c241bd8 <line:124:3, col:45> col:45 Pm1aCntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c241c38 <line:125:3, col:45> col:45 Pm1bCntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c241c98 <line:126:3, col:45> col:45 Pm2CntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c241cf8 <line:127:3, col:45> col:45 PmTmrBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c241d58 <line:128:3, col:45> col:45 Gpe0Blk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c241db8 <line:129:3, col:45> col:45 Gpe1Blk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c241e18 <line:130:3, col:45> col:45 Pm1EvtLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c241e78 <line:131:3, col:45> col:45 Pm1CntLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c241ed8 <line:132:3, col:45> col:45 Pm2CntLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c241f38 <line:133:3, col:45> col:45 PmTmrLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c241f98 <line:134:3, col:45> col:45 Gpe0BlkLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c241ff8 <line:135:3, col:45> col:45 Gpe1BlkLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c242058 <line:136:3, col:45> col:45 Gpe1Base 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2420b8 <line:137:3, col:45> col:45 CstCnt 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c242118 <line:138:3, col:45> col:45 PLvl2Lat 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c242178 <line:139:3, col:45> col:45 PLvl3Lat 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2421d8 <line:140:3, col:45> col:45 FlushSize 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c242238 <line:141:3, col:45> col:45 FlushStride 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c242298 <line:142:3, col:45> col:45 DutyOffset 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2422f8 <line:143:3, col:45> col:45 DutyWidth 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c242358 <line:144:3, col:45> col:45 DayAlrm 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2423b8 <line:145:3, col:45> col:45 MonAlrm 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c242418 <line:146:3, col:45> col:45 Century 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c242478 <line:147:3, col:45> col:45 IaPcBootArch 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2424d8 <line:148:3, col:45> col:45 Reserved1 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c242538 <line:149:3, col:45> col:45 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2425c0 <line:150:3, col:45> col:45 ResetReg 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c242620 <line:151:3, col:45> col:45 ResetValue 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c242680 <line:152:3, col:45> col:45 ArmBootArch 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2426e0 <line:153:3, col:45> col:45 MinorVersion 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c242740 <line:154:3, col:45> col:45 XFirmwareCtrl 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2427a0 <line:155:3, col:45> col:45 XDsdt 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c242800 <line:156:3, col:45> col:45 XPm1aEvtBlk 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c242860 <line:157:3, col:45> col:45 XPm1bEvtBlk 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c2428c0 <line:158:3, col:45> col:45 XPm1aCntBlk 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c242920 <line:159:3, col:45> col:45 XPm1bCntBlk 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c242980 <line:160:3, col:45> col:45 XPm2CntBlk 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c2429e0 <line:161:3, col:45> col:45 XPmTmrBlk 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c242a40 <line:162:3, col:45> col:45 XGpe0Blk 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c242aa0 <line:163:3, col:45> col:45 XGpe1Blk 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c242b00 <line:164:3, col:45> col:45 SleepControlReg 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| `-FieldDecl 0x55887c242d70 <line:165:3, col:45> col:45 SleepStatusReg 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
|-TypedefDecl 0x55887c242e18 <line:110:1, line:166:3> col:3 EFI_ACPI_5_1_FIXED_ACPI_DESCRIPTION_TABLE 'struct EFI_ACPI_5_1_FIXED_ACPI_DESCRIPTION_TABLE':'EFI_ACPI_5_1_FIXED_ACPI_DESCRIPTION_TABLE'
| |-ElaboratedType 0x55887c242dc0 'struct EFI_ACPI_5_1_FIXED_ACPI_DESCRIPTION_TABLE' sugar
| | `-RecordType 0x55887c241670 'EFI_ACPI_5_1_FIXED_ACPI_DESCRIPTION_TABLE'
| |   `-Record 0x55887c2415f0 ''
| `-FullComment 0x55887c42dc80 <line:108:4, col:49>
|   `-ParagraphComment 0x55887c42dc50 <col:4, col:49>
|     `-TextComment 0x55887c42dc20 <col:4, col:49> Text=" Fixed ACPI Description Table Structure (FADT)"
|-RecordDecl 0x55887c242ee0 <line:235:9, line:247:1> line:235:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c242f80 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42dd50 <line:233:4, col:35>
| | `-ParagraphComment 0x55887c42dd20 <col:4, col:35>
| |   `-TextComment 0x55887c42dcf0 <col:4, col:35> Text=" Firmware ACPI Control Structure"
| |-FieldDecl 0x55887c242fe8 <line:236:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c243048 <line:237:3, col:13> col:13 Length 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2430a8 <line:238:3, col:13> col:13 HardwareSignature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c243108 <line:239:3, col:13> col:13 FirmwareWakingVector 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c243168 <line:240:3, col:13> col:13 GlobalLock 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2431c8 <line:241:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c243228 <line:242:3, col:13> col:13 XFirmwareWakingVector 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c243288 <line:243:3, col:13> col:13 Version 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c243338 <line:244:3, col:24> col:13 Reserved0 'UINT8[3]'
| |-FieldDecl 0x55887c243398 <line:245:3, col:13> col:13 OspmFlags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c243448 <line:246:3, col:25> col:13 Reserved1 'UINT8[24]'
|-TypedefDecl 0x55887c2434f8 <line:235:1, line:247:3> col:3 EFI_ACPI_5_1_FIRMWARE_ACPI_CONTROL_STRUCTURE 'struct EFI_ACPI_5_1_FIRMWARE_ACPI_CONTROL_STRUCTURE':'EFI_ACPI_5_1_FIRMWARE_ACPI_CONTROL_STRUCTURE'
| |-ElaboratedType 0x55887c2434a0 'struct EFI_ACPI_5_1_FIRMWARE_ACPI_CONTROL_STRUCTURE' sugar
| | `-RecordType 0x55887c242f60 'EFI_ACPI_5_1_FIRMWARE_ACPI_CONTROL_STRUCTURE'
| |   `-Record 0x55887c242ee0 ''
| `-FullComment 0x55887c42de20 <line:233:4, col:35>
|   `-ParagraphComment 0x55887c42ddf0 <col:4, col:35>
|     `-TextComment 0x55887c42ddc0 <col:4, col:35> Text=" Firmware ACPI Control Structure"
|-RecordDecl 0x55887c243620 <line:281:9, line:285:1> line:281:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2436c0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42df10 <line:278:4, line:279:50>
| | `-ParagraphComment 0x55887c42dee0 <line:278:4, line:279:50>
| |   |-TextComment 0x55887c42de90 <line:278:4, col:77> Text=" Multiple APIC Description Table header definition.  The rest of the table"
| |   `-TextComment 0x55887c42deb0 <line:279:4, col:50> Text=" must be defined in a platform specific manner."
| |-FieldDecl 0x55887c243728 <line:282:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c243788 <line:283:3, col:34> col:34 LocalApicAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c2437e8 <line:284:3, col:34> col:34 Flags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c243898 <line:281:1, line:285:3> col:3 EFI_ACPI_5_1_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER 'struct EFI_ACPI_5_1_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER':'EFI_ACPI_5_1_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER'
| |-ElaboratedType 0x55887c243840 'struct EFI_ACPI_5_1_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c2436a0 'EFI_ACPI_5_1_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER'
| |   `-Record 0x55887c243620 ''
| `-FullComment 0x55887c42e000 <line:278:4, line:279:50>
|   `-ParagraphComment 0x55887c42dfd0 <line:278:4, line:279:50>
|     |-TextComment 0x55887c42df80 <line:278:4, col:77> Text=" Multiple APIC Description Table header definition.  The rest of the table"
|     `-TextComment 0x55887c42dfa0 <line:279:4, col:50> Text=" must be defined in a platform specific manner."
|-RecordDecl 0x55887c243990 <line:326:9, line:332:1> line:326:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c243a30 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42e0d0 <line:324:4, col:45>
| | `-ParagraphComment 0x55887c42e0a0 <col:4, col:45>
| |   `-TextComment 0x55887c42e070 <col:4, col:45> Text=" Processor Local APIC Structure Definition"
| |-FieldDecl 0x55887c243a98 <line:327:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c243af8 <line:328:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c243b58 <line:329:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c243bb8 <line:330:3, col:13> col:13 ApicId 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c243c18 <line:331:3, col:13> col:13 Flags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c243cc8 <line:326:1, line:332:3> col:3 EFI_ACPI_5_1_PROCESSOR_LOCAL_APIC_STRUCTURE 'struct EFI_ACPI_5_1_PROCESSOR_LOCAL_APIC_STRUCTURE':'EFI_ACPI_5_1_PROCESSOR_LOCAL_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c243c70 'struct EFI_ACPI_5_1_PROCESSOR_LOCAL_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c243a10 'EFI_ACPI_5_1_PROCESSOR_LOCAL_APIC_STRUCTURE'
| |   `-Record 0x55887c243990 ''
| `-FullComment 0x55887c42e1a0 <line:324:4, col:45>
|   `-ParagraphComment 0x55887c42e170 <col:4, col:45>
|     `-TextComment 0x55887c42e140 <col:4, col:45> Text=" Processor Local APIC Structure Definition"
|-RecordDecl 0x55887c243d90 <line:342:9, line:349:1> line:342:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c243e30 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42e270 <line:340:4, col:21>
| | `-ParagraphComment 0x55887c42e240 <col:4, col:21>
| |   `-TextComment 0x55887c42e210 <col:4, col:21> Text=" IO APIC Structure"
| |-FieldDecl 0x55887c243e98 <line:343:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c243ef8 <line:344:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c243f58 <line:345:3, col:13> col:13 IoApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c243fb8 <line:346:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c244018 <line:347:3, col:13> col:13 IoApicAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c244078 <line:348:3, col:13> col:13 GlobalSystemInterruptBase 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c244128 <line:342:1, line:349:3> col:3 EFI_ACPI_5_1_IO_APIC_STRUCTURE 'struct EFI_ACPI_5_1_IO_APIC_STRUCTURE':'EFI_ACPI_5_1_IO_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c2440d0 'struct EFI_ACPI_5_1_IO_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c243e10 'EFI_ACPI_5_1_IO_APIC_STRUCTURE'
| |   `-Record 0x55887c243d90 ''
| `-FullComment 0x55887c42e340 <line:340:4, col:21>
|   `-ParagraphComment 0x55887c42e310 <col:4, col:21>
|     `-TextComment 0x55887c42e2e0 <col:4, col:21> Text=" IO APIC Structure"
|-RecordDecl 0x55887c2441c0 <line:354:9, line:361:1> line:354:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c244260 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42e410 <line:352:4, col:39>
| | `-ParagraphComment 0x55887c42e3e0 <col:4, col:39>
| |   `-TextComment 0x55887c42e3b0 <col:4, col:39> Text=" Interrupt Source Override Structure"
| |-FieldDecl 0x55887c2442c8 <line:355:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c244328 <line:356:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c244388 <line:357:3, col:13> col:13 Bus 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2443e8 <line:358:3, col:13> col:13 Source 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c244448 <line:359:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c2444a8 <line:360:3, col:13> col:13 Flags 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c244558 <line:354:1, line:361:3> col:3 EFI_ACPI_5_1_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE 'struct EFI_ACPI_5_1_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE':'EFI_ACPI_5_1_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE'
| |-ElaboratedType 0x55887c244500 'struct EFI_ACPI_5_1_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE' sugar
| | `-RecordType 0x55887c244240 'EFI_ACPI_5_1_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE'
| |   `-Record 0x55887c2441c0 ''
| `-FullComment 0x55887c42e4e0 <line:352:4, col:39>
|   `-ParagraphComment 0x55887c42e4b0 <col:4, col:39>
|     `-TextComment 0x55887c42e480 <col:4, col:39> Text=" Interrupt Source Override Structure"
|-RecordDecl 0x55887c2445f0 <line:366:9, line:378:1> line:366:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c244690 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42e5b0 <line:364:4, col:51>
| | `-ParagraphComment 0x55887c42e580 <col:4, col:51>
| |   `-TextComment 0x55887c42e550 <col:4, col:51> Text=" Platform Interrupt Sources Structure Definition"
| |-FieldDecl 0x55887c2446f8 <line:367:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c244758 <line:368:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2447b8 <line:369:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c244818 <line:370:3, col:13> col:13 InterruptType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c244878 <line:371:3, col:13> col:13 ProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2448d8 <line:372:3, col:13> col:13 ProcessorEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c244938 <line:373:3, col:13> col:13 IoSapicVector 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c244998 <line:374:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2449f8 <line:375:3, col:13> col:13 PlatformInterruptSourceFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c244a58 <line:376:3, col:13> col:13 CpeiProcessorOverride 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c244b08 <line:377:3, col:24> col:13 Reserved 'UINT8[31]'
|-TypedefDecl 0x55887c244bb8 <line:366:1, line:378:3> col:3 EFI_ACPI_5_1_PLATFORM_INTERRUPT_APIC_STRUCTURE 'struct EFI_ACPI_5_1_PLATFORM_INTERRUPT_APIC_STRUCTURE':'EFI_ACPI_5_1_PLATFORM_INTERRUPT_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c244b60 'struct EFI_ACPI_5_1_PLATFORM_INTERRUPT_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c244670 'EFI_ACPI_5_1_PLATFORM_INTERRUPT_APIC_STRUCTURE'
| |   `-Record 0x55887c2445f0 ''
| `-FullComment 0x55887c42e680 <line:364:4, col:51>
|   `-ParagraphComment 0x55887c42e650 <col:4, col:51>
|     `-TextComment 0x55887c42e620 <col:4, col:51> Text=" Platform Interrupt Sources Structure Definition"
|-RecordDecl 0x55887c244c50 <line:390:9, line:395:1> line:390:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c244cf0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42e750 <line:388:4, col:43>
| | `-ParagraphComment 0x55887c42e720 <col:4, col:43>
| |   `-TextComment 0x55887c42e6f0 <col:4, col:43> Text=" Non-Maskable Interrupt Source Structure"
| |-FieldDecl 0x55887c249130 <line:391:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c249190 <line:392:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2491f0 <line:393:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c249250 <line:394:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c2492f8 <line:390:1, line:395:3> col:3 EFI_ACPI_5_1_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE 'struct EFI_ACPI_5_1_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE':'EFI_ACPI_5_1_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE'
| |-ElaboratedType 0x55887c2492a0 'struct EFI_ACPI_5_1_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE' sugar
| | `-RecordType 0x55887c244cd0 'EFI_ACPI_5_1_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE'
| |   `-Record 0x55887c244c50 ''
| `-FullComment 0x55887c42e820 <line:388:4, col:43>
|   `-ParagraphComment 0x55887c42e7f0 <col:4, col:43>
|     `-TextComment 0x55887c42e7c0 <col:4, col:43> Text=" Non-Maskable Interrupt Source Structure"
|-RecordDecl 0x55887c249390 <line:400:9, line:406:1> line:400:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c249430 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42e8f0 <line:398:4, col:28>
| | `-ParagraphComment 0x55887c42e8c0 <col:4, col:28>
| |   `-TextComment 0x55887c42e890 <col:4, col:28> Text=" Local APIC NMI Structure"
| |-FieldDecl 0x55887c249498 <line:401:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2494f8 <line:402:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c249558 <line:403:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2495b8 <line:404:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c249618 <line:405:3, col:13> col:13 LocalApicLint 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c2496c8 <line:400:1, line:406:3> col:3 EFI_ACPI_5_1_LOCAL_APIC_NMI_STRUCTURE 'struct EFI_ACPI_5_1_LOCAL_APIC_NMI_STRUCTURE':'EFI_ACPI_5_1_LOCAL_APIC_NMI_STRUCTURE'
| |-ElaboratedType 0x55887c249670 'struct EFI_ACPI_5_1_LOCAL_APIC_NMI_STRUCTURE' sugar
| | `-RecordType 0x55887c249410 'EFI_ACPI_5_1_LOCAL_APIC_NMI_STRUCTURE'
| |   `-Record 0x55887c249390 ''
| `-FullComment 0x55887c42e9c0 <line:398:4, col:28>
|   `-ParagraphComment 0x55887c42e990 <col:4, col:28>
|     `-TextComment 0x55887c42e960 <col:4, col:28> Text=" Local APIC NMI Structure"
|-RecordDecl 0x55887c249760 <line:411:9, line:416:1> line:411:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c249800 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42ea90 <line:409:4, col:41>
| | `-ParagraphComment 0x55887c42ea60 <col:4, col:41>
| |   `-TextComment 0x55887c42ea30 <col:4, col:41> Text=" Local APIC Address Override Structure"
| |-FieldDecl 0x55887c249868 <line:412:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2498c8 <line:413:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c249928 <line:414:3, col:13> col:13 Reserved 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c249988 <line:415:3, col:13> col:13 LocalApicAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c249a38 <line:411:1, line:416:3> col:3 EFI_ACPI_5_1_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE 'struct EFI_ACPI_5_1_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE':'EFI_ACPI_5_1_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE'
| |-ElaboratedType 0x55887c2499e0 'struct EFI_ACPI_5_1_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE' sugar
| | `-RecordType 0x55887c2497e0 'EFI_ACPI_5_1_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE'
| |   `-Record 0x55887c249760 ''
| `-FullComment 0x55887c42eb60 <line:409:4, col:41>
|   `-ParagraphComment 0x55887c42eb30 <col:4, col:41>
|     `-TextComment 0x55887c42eb00 <col:4, col:41> Text=" Local APIC Address Override Structure"
|-RecordDecl 0x55887c249ad0 <line:421:9, line:428:1> line:421:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c249b70 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42ec30 <line:419:4, col:22>
| | `-ParagraphComment 0x55887c42ec00 <col:4, col:22>
| |   `-TextComment 0x55887c42ebd0 <col:4, col:22> Text=" IO SAPIC Structure"
| |-FieldDecl 0x55887c249bd8 <line:422:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c249c38 <line:423:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c249c98 <line:424:3, col:13> col:13 IoApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c249cf8 <line:425:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c249d58 <line:426:3, col:13> col:13 GlobalSystemInterruptBase 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c249db8 <line:427:3, col:13> col:13 IoSapicAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c249e68 <line:421:1, line:428:3> col:3 EFI_ACPI_5_1_IO_SAPIC_STRUCTURE 'struct EFI_ACPI_5_1_IO_SAPIC_STRUCTURE':'EFI_ACPI_5_1_IO_SAPIC_STRUCTURE'
| |-ElaboratedType 0x55887c249e10 'struct EFI_ACPI_5_1_IO_SAPIC_STRUCTURE' sugar
| | `-RecordType 0x55887c249b50 'EFI_ACPI_5_1_IO_SAPIC_STRUCTURE'
| |   `-Record 0x55887c249ad0 ''
| `-FullComment 0x55887c42ed00 <line:419:4, col:22>
|   `-ParagraphComment 0x55887c42ecd0 <col:4, col:22>
|     `-TextComment 0x55887c42eca0 <col:4, col:22> Text=" IO SAPIC Structure"
|-RecordDecl 0x55887c249f00 <line:434:9, line:443:1> line:434:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c249fa0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42edf0 <line:431:4, line:432:86>
| | `-ParagraphComment 0x55887c42edc0 <line:431:4, line:432:86>
| |   |-TextComment 0x55887c42ed70 <line:431:4, col:25> Text=" Local SAPIC Structure"
| |   `-TextComment 0x55887c42ed90 <line:432:4, col:86> Text=" This struct followed by a null-terminated ASCII string - ACPI Processor UID String"
| |-FieldDecl 0x55887c24a008 <line:435:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24a068 <line:436:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24a0c8 <line:437:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24a128 <line:438:3, col:13> col:13 LocalSapicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24a188 <line:439:3, col:13> col:13 LocalSapicEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24a238 <line:440:3, col:23> col:13 Reserved 'UINT8[3]'
| |-FieldDecl 0x55887c24a298 <line:441:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c24a2f8 <line:442:3, col:13> col:13 ACPIProcessorUIDValue 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c24a3a8 <line:434:1, line:443:3> col:3 EFI_ACPI_5_1_PROCESSOR_LOCAL_SAPIC_STRUCTURE 'struct EFI_ACPI_5_1_PROCESSOR_LOCAL_SAPIC_STRUCTURE':'EFI_ACPI_5_1_PROCESSOR_LOCAL_SAPIC_STRUCTURE'
| |-ElaboratedType 0x55887c24a350 'struct EFI_ACPI_5_1_PROCESSOR_LOCAL_SAPIC_STRUCTURE' sugar
| | `-RecordType 0x55887c249f80 'EFI_ACPI_5_1_PROCESSOR_LOCAL_SAPIC_STRUCTURE'
| |   `-Record 0x55887c249f00 ''
| `-FullComment 0x55887c42eee0 <line:431:4, line:432:86>
|   `-ParagraphComment 0x55887c42eeb0 <line:431:4, line:432:86>
|     |-TextComment 0x55887c42ee60 <line:431:4, col:25> Text=" Local SAPIC Structure"
|     `-TextComment 0x55887c42ee80 <line:432:4, col:86> Text=" This struct followed by a null-terminated ASCII string - ACPI Processor UID String"
|-RecordDecl 0x55887c24a440 <line:448:9, line:458:1> line:448:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c24a4e0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42efb0 <line:446:4, col:40>
| | `-ParagraphComment 0x55887c42ef80 <col:4, col:40>
| |   `-TextComment 0x55887c42ef50 <col:4, col:40> Text=" Platform Interrupt Sources Structure"
| |-FieldDecl 0x55887c24a548 <line:449:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24a5a8 <line:450:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24a608 <line:451:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c24a668 <line:452:3, col:13> col:13 InterruptType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24a6c8 <line:453:3, col:13> col:13 ProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24a728 <line:454:3, col:13> col:13 ProcessorEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24a788 <line:455:3, col:13> col:13 IoSapicVector 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24a7e8 <line:456:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c24a848 <line:457:3, col:13> col:13 PlatformInterruptSourceFlags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c24a8f8 <line:448:1, line:458:3> col:3 EFI_ACPI_5_1_PLATFORM_INTERRUPT_SOURCES_STRUCTURE 'struct EFI_ACPI_5_1_PLATFORM_INTERRUPT_SOURCES_STRUCTURE':'EFI_ACPI_5_1_PLATFORM_INTERRUPT_SOURCES_STRUCTURE'
| |-ElaboratedType 0x55887c24a8a0 'struct EFI_ACPI_5_1_PLATFORM_INTERRUPT_SOURCES_STRUCTURE' sugar
| | `-RecordType 0x55887c24a4c0 'EFI_ACPI_5_1_PLATFORM_INTERRUPT_SOURCES_STRUCTURE'
| |   `-Record 0x55887c24a440 ''
| `-FullComment 0x55887c42f080 <line:446:4, col:40>
|   `-ParagraphComment 0x55887c42f050 <col:4, col:40>
|     `-TextComment 0x55887c42f020 <col:4, col:40> Text=" Platform Interrupt Sources Structure"
|-RecordDecl 0x55887c24a9c0 <line:469:9, line:476:1> line:469:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c24aa60 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42f150 <line:467:4, col:47>
| | `-ParagraphComment 0x55887c42f120 <col:4, col:47>
| |   `-TextComment 0x55887c42f0f0 <col:4, col:47> Text=" Processor Local x2APIC Structure Definition"
| |-FieldDecl 0x55887c24aac8 <line:470:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24ab28 <line:471:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24abd8 <line:472:3, col:23> col:13 Reserved 'UINT8[2]'
| |-FieldDecl 0x55887c24ac38 <line:473:3, col:13> col:13 X2ApicId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24ac98 <line:474:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c24acf8 <line:475:3, col:13> col:13 AcpiProcessorUid 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c24ada8 <line:469:1, line:476:3> col:3 EFI_ACPI_5_1_PROCESSOR_LOCAL_X2APIC_STRUCTURE 'struct EFI_ACPI_5_1_PROCESSOR_LOCAL_X2APIC_STRUCTURE':'EFI_ACPI_5_1_PROCESSOR_LOCAL_X2APIC_STRUCTURE'
| |-ElaboratedType 0x55887c24ad50 'struct EFI_ACPI_5_1_PROCESSOR_LOCAL_X2APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c24aa40 'EFI_ACPI_5_1_PROCESSOR_LOCAL_X2APIC_STRUCTURE'
| |   `-Record 0x55887c24a9c0 ''
| `-FullComment 0x55887c42f220 <line:467:4, col:47>
|   `-ParagraphComment 0x55887c42f1f0 <col:4, col:47>
|     `-TextComment 0x55887c42f1c0 <col:4, col:47> Text=" Processor Local x2APIC Structure Definition"
|-RecordDecl 0x55887c24ae40 <line:481:9, line:488:1> line:481:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c24aee0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42f2f0 <line:479:4, col:30>
| | `-ParagraphComment 0x55887c42f2c0 <col:4, col:30>
| |   `-TextComment 0x55887c42f290 <col:4, col:30> Text=" Local x2APIC NMI Structure"
| |-FieldDecl 0x55887c24af48 <line:482:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24afa8 <line:483:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24b008 <line:484:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c24b068 <line:485:3, col:13> col:13 AcpiProcessorUid 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24b0c8 <line:486:3, col:13> col:13 LocalX2ApicLint 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c24b3a0 <line:487:3, col:23> col:13 Reserved 'UINT8[3]'
|-TypedefDecl 0x55887c24b448 <line:481:1, line:488:3> col:3 EFI_ACPI_5_1_LOCAL_X2APIC_NMI_STRUCTURE 'struct EFI_ACPI_5_1_LOCAL_X2APIC_NMI_STRUCTURE':'EFI_ACPI_5_1_LOCAL_X2APIC_NMI_STRUCTURE'
| |-ElaboratedType 0x55887c24b3f0 'struct EFI_ACPI_5_1_LOCAL_X2APIC_NMI_STRUCTURE' sugar
| | `-RecordType 0x55887c24aec0 'EFI_ACPI_5_1_LOCAL_X2APIC_NMI_STRUCTURE'
| |   `-Record 0x55887c24ae40 ''
| `-FullComment 0x55887c42f3c0 <line:479:4, col:30>
|   `-ParagraphComment 0x55887c42f390 <col:4, col:30>
|     `-TextComment 0x55887c42f360 <col:4, col:30> Text=" Local x2APIC NMI Structure"
|-RecordDecl 0x55887c24b4e0 <line:493:9, line:509:1> line:493:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c24b580 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42f490 <line:491:4, col:17>
| | `-ParagraphComment 0x55887c42f460 <col:4, col:17>
| |   `-TextComment 0x55887c42f430 <col:4, col:17> Text=" GIC Structure"
| |-FieldDecl 0x55887c24b5e8 <line:494:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24b648 <line:495:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24b6a8 <line:496:3, col:13> col:13 Reserved 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c24b708 <line:497:3, col:13> col:13 CPUInterfaceNumber 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24b768 <line:498:3, col:13> col:13 AcpiProcessorUid 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24b7c8 <line:499:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24b828 <line:500:3, col:13> col:13 ParkingProtocolVersion 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24b888 <line:501:3, col:13> col:13 PerformanceInterruptGsiv 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24b8e8 <line:502:3, col:13> col:13 ParkedAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c24b948 <line:503:3, col:13> col:13 PhysicalBaseAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c24b9a8 <line:504:3, col:13> col:13 GICV 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c24ba08 <line:505:3, col:13> col:13 GICH 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c24ba68 <line:506:3, col:13> col:13 VGICMaintenanceInterrupt 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24bac8 <line:507:3, col:13> col:13 GICRBaseAddress 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c24bb28 <line:508:3, col:13> col:13 MPIDR 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c24bbd8 <line:493:1, line:509:3> col:3 EFI_ACPI_5_1_GIC_STRUCTURE 'struct EFI_ACPI_5_1_GIC_STRUCTURE':'EFI_ACPI_5_1_GIC_STRUCTURE'
| |-ElaboratedType 0x55887c24bb80 'struct EFI_ACPI_5_1_GIC_STRUCTURE' sugar
| | `-RecordType 0x55887c24b560 'EFI_ACPI_5_1_GIC_STRUCTURE'
| |   `-Record 0x55887c24b4e0 ''
| `-FullComment 0x55887c42f560 <line:491:4, col:17>
|   `-ParagraphComment 0x55887c42f530 <col:4, col:17>
|     `-TextComment 0x55887c42f500 <col:4, col:17> Text=" GIC Structure"
|-RecordDecl 0x55887c24bca0 <line:521:9, line:530:1> line:521:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c24bd40 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42f630 <line:519:4, col:29>
| | `-ParagraphComment 0x55887c42f600 <col:4, col:29>
| |   `-TextComment 0x55887c42f5d0 <col:4, col:29> Text=" GIC Distributor Structure"
| |-FieldDecl 0x55887c24bda8 <line:522:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24be08 <line:523:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24be68 <line:524:3, col:13> col:13 Reserved1 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c24bec8 <line:525:3, col:13> col:13 GicId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24bf28 <line:526:3, col:13> col:13 PhysicalBaseAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c24bf88 <line:527:3, col:13> col:13 SystemVectorBase 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24bfe8 <line:528:3, col:13> col:13 GicVersion 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c24c098 <line:529:3, col:24> col:13 Reserved2 'UINT8[3]'
|-TypedefDecl 0x55887c24c148 <line:521:1, line:530:3> col:3 EFI_ACPI_5_1_GIC_DISTRIBUTOR_STRUCTURE 'struct EFI_ACPI_5_1_GIC_DISTRIBUTOR_STRUCTURE':'EFI_ACPI_5_1_GIC_DISTRIBUTOR_STRUCTURE'
| |-ElaboratedType 0x55887c24c0f0 'struct EFI_ACPI_5_1_GIC_DISTRIBUTOR_STRUCTURE' sugar
| | `-RecordType 0x55887c24bd20 'EFI_ACPI_5_1_GIC_DISTRIBUTOR_STRUCTURE'
| |   `-Record 0x55887c24bca0 ''
| `-FullComment 0x55887c42f700 <line:519:4, col:29>
|   `-ParagraphComment 0x55887c42f6d0 <col:4, col:29>
|     `-TextComment 0x55887c42f6a0 <col:4, col:29> Text=" GIC Distributor Structure"
|-RecordDecl 0x55887c24c210 <line:543:9, line:552:1> line:543:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c24c2b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42f7d0 <line:541:4, col:27>
| | `-ParagraphComment 0x55887c42f7a0 <col:4, col:27>
| |   `-TextComment 0x55887c42f770 <col:4, col:27> Text=" GIC MSI Frame Structure"
| |-FieldDecl 0x55887c24c318 <line:544:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24c378 <line:545:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24c3d8 <line:546:3, col:13> col:13 Reserved1 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c24c438 <line:547:3, col:13> col:13 GicMsiFrameId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24c498 <line:548:3, col:13> col:13 PhysicalBaseAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c24c4f8 <line:549:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24c558 <line:550:3, col:13> col:13 SPICount 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c24c5b8 <line:551:3, col:13> col:13 SPIBase 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c24c668 <line:543:1, line:552:3> col:3 EFI_ACPI_5_1_GIC_MSI_FRAME_STRUCTURE 'struct EFI_ACPI_5_1_GIC_MSI_FRAME_STRUCTURE':'EFI_ACPI_5_1_GIC_MSI_FRAME_STRUCTURE'
| |-ElaboratedType 0x55887c24c610 'struct EFI_ACPI_5_1_GIC_MSI_FRAME_STRUCTURE' sugar
| | `-RecordType 0x55887c24c290 'EFI_ACPI_5_1_GIC_MSI_FRAME_STRUCTURE'
| |   `-Record 0x55887c24c210 ''
| `-FullComment 0x55887c42f8a0 <line:541:4, col:27>
|   `-ParagraphComment 0x55887c42f870 <col:4, col:27>
|     `-TextComment 0x55887c42f840 <col:4, col:27> Text=" GIC MSI Frame Structure"
|-RecordDecl 0x55887c24c730 <line:562:9, line:568:1> line:562:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c24c7d0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42f970 <line:560:4, col:18>
| | `-ParagraphComment 0x55887c42f940 <col:4, col:18>
| |   `-TextComment 0x55887c42f910 <col:4, col:18> Text=" GICR Structure"
| |-FieldDecl 0x55887c24c838 <line:563:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24c898 <line:564:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24c8f8 <line:565:3, col:13> col:13 Reserved 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c24c958 <line:566:3, col:13> col:13 DiscoveryRangeBaseAddress 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c24c9b8 <line:567:3, col:13> col:13 DiscoveryRangeLength 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c24ca68 <line:562:1, line:568:3> col:3 EFI_ACPI_5_1_GICR_STRUCTURE 'struct EFI_ACPI_5_1_GICR_STRUCTURE':'EFI_ACPI_5_1_GICR_STRUCTURE'
| |-ElaboratedType 0x55887c24ca10 'struct EFI_ACPI_5_1_GICR_STRUCTURE' sugar
| | `-RecordType 0x55887c24c7b0 'EFI_ACPI_5_1_GICR_STRUCTURE'
| |   `-Record 0x55887c24c730 ''
| `-FullComment 0x55887c42fa40 <line:560:4, col:18>
|   `-ParagraphComment 0x55887c42fa10 <col:4, col:18>
|     `-TextComment 0x55887c42f9e0 <col:4, col:18> Text=" GICR Structure"
|-RecordDecl 0x55887c24cb00 <line:573:9, line:578:1> line:573:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c24cba0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42fb10 <line:571:4, col:42>
| | `-ParagraphComment 0x55887c42fae0 <col:4, col:42>
| |   `-TextComment 0x55887c42fab0 <col:4, col:42> Text=" Smart Battery Description Table (SBST)"
| |-FieldDecl 0x55887c24cc08 <line:574:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c24cc68 <line:575:3, col:34> col:34 WarningEnergyLevel 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24ccc8 <line:576:3, col:34> col:34 LowEnergyLevel 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c24cd28 <line:577:3, col:34> col:34 CriticalEnergyLevel 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c24cdd8 <line:573:1, line:578:3> col:3 EFI_ACPI_5_1_SMART_BATTERY_DESCRIPTION_TABLE 'struct EFI_ACPI_5_1_SMART_BATTERY_DESCRIPTION_TABLE':'EFI_ACPI_5_1_SMART_BATTERY_DESCRIPTION_TABLE'
| |-ElaboratedType 0x55887c24cd80 'struct EFI_ACPI_5_1_SMART_BATTERY_DESCRIPTION_TABLE' sugar
| | `-RecordType 0x55887c24cb80 'EFI_ACPI_5_1_SMART_BATTERY_DESCRIPTION_TABLE'
| |   `-Record 0x55887c24cb00 ''
| `-FullComment 0x55887c42fbe0 <line:571:4, col:42>
|   `-ParagraphComment 0x55887c42fbb0 <col:4, col:42>
|     `-TextComment 0x55887c42fb80 <col:4, col:42> Text=" Smart Battery Description Table (SBST)"
|-RecordDecl 0x55887c24cea0 <line:590:9, line:596:1> line:590:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c24cf40 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42fd00 <line:586:4, line:588:57>
| | `-ParagraphComment 0x55887c42fcd0 <line:586:4, line:588:57>
| |   |-TextComment 0x55887c42fc50 <line:586:4, col:51> Text=" Embedded Controller Boot Resources Table (ECDT)"
| |   |-TextComment 0x55887c42fc70 <line:587:4, col:73> Text=" The table is followed by a null terminated ASCII string that contains"
| |   `-TextComment 0x55887c42fc90 <line:588:4, col:57> Text=" a fully qualified reference to the name space object."
| |-FieldDecl 0x55887c24cfa8 <line:591:3, col:45> col:45 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c24d008 <line:592:3, col:45> col:45 EcControl 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c24d068 <line:593:3, col:45> col:45 EcData 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c24d0c8 <line:594:3, col:45> col:45 Uid 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c24d128 <line:595:3, col:45> col:45 GpeBit 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c24d1d8 <line:590:1, line:596:3> col:3 EFI_ACPI_5_1_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE 'struct EFI_ACPI_5_1_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE':'EFI_ACPI_5_1_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE'
| |-ElaboratedType 0x55887c24d180 'struct EFI_ACPI_5_1_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE' sugar
| | `-RecordType 0x55887c24cf20 'EFI_ACPI_5_1_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE'
| |   `-Record 0x55887c24cea0 ''
| `-FullComment 0x55887c42fe20 <line:586:4, line:588:57>
|   `-ParagraphComment 0x55887c42fdf0 <line:586:4, line:588:57>
|     |-TextComment 0x55887c42fd70 <line:586:4, col:51> Text=" Embedded Controller Boot Resources Table (ECDT)"
|     |-TextComment 0x55887c42fd90 <line:587:4, col:73> Text=" The table is followed by a null terminated ASCII string that contains"
|     `-TextComment 0x55887c42fdb0 <line:588:4, col:57> Text=" a fully qualified reference to the name space object."
|-RecordDecl 0x55887c24d2a0 <line:607:9, line:611:1> line:607:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c24e660 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c42ff10 <line:604:4, line:605:50>
| | `-ParagraphComment 0x55887c42fee0 <line:604:4, line:605:50>
| |   |-TextComment 0x55887c42fe90 <line:604:4, col:65> Text=" System Resource Affinity Table (SRAT).  The rest of the table"
| |   `-TextComment 0x55887c42feb0 <line:605:4, col:50> Text=" must be defined in a platform specific manner."
| |-FieldDecl 0x55887c24e6c8 <line:608:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c24e728 <line:609:3, col:34> col:34 Reserved1 'UINT32':'unsigned int'
| | `-FullComment 0x55887c42ffe0 <col:49, col:65>
| |   `-ParagraphComment 0x55887c42ffb0 <col:49, col:65>
| |     `-TextComment 0x55887c42ff80 <col:49, col:65> Text=" Must be set to 1"
| `-FieldDecl 0x55887c24e7b8 <line:610:3, col:34> col:34 Reserved2 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c24e868 <line:607:1, line:611:3> col:3 EFI_ACPI_5_1_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER 'struct EFI_ACPI_5_1_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER':'EFI_ACPI_5_1_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER'
| |-ElaboratedType 0x55887c24e810 'struct EFI_ACPI_5_1_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER' sugar
| | `-RecordType 0x55887c24d320 'EFI_ACPI_5_1_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER'
| |   `-Record 0x55887c24d2a0 ''
| `-FullComment 0x55887c4300d0 <line:604:4, line:605:50>
|   `-ParagraphComment 0x55887c4300a0 <line:604:4, line:605:50>
|     |-TextComment 0x55887c430050 <line:604:4, col:65> Text=" System Resource Affinity Table (SRAT).  The rest of the table"
|     `-TextComment 0x55887c430070 <line:605:4, col:50> Text=" must be defined in a platform specific manner."
|-RecordDecl 0x55887c24e930 <line:631:9, line:640:1> line:631:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c24e9d0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4301a0 <line:629:4, col:60>
| | `-ParagraphComment 0x55887c430170 <col:4, col:60>
| |   `-TextComment 0x55887c430140 <col:4, col:60> Text=" Processor Local APIC/SAPIC Affinity Structure Definition"
| |-FieldDecl 0x55887c24ea38 <line:632:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24ea98 <line:633:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24eaf8 <line:634:3, col:13> col:13 ProximityDomain7To0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24eb58 <line:635:3, col:13> col:13 ApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24ebb8 <line:636:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24ec18 <line:637:3, col:13> col:13 LocalSapicEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24ecc8 <line:638:3, col:35> col:13 ProximityDomain31To8 'UINT8[3]'
| `-FieldDecl 0x55887c24ed28 <line:639:3, col:13> col:13 ClockDomain 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c24edd8 <line:631:1, line:640:3> col:3 EFI_ACPI_5_1_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE 'struct EFI_ACPI_5_1_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE':'EFI_ACPI_5_1_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE'
| |-ElaboratedType 0x55887c24ed80 'struct EFI_ACPI_5_1_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE' sugar
| | `-RecordType 0x55887c24e9b0 'EFI_ACPI_5_1_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE'
| |   `-Record 0x55887c24e930 ''
| `-FullComment 0x55887c430270 <line:629:4, col:60>
|   `-ParagraphComment 0x55887c430240 <col:4, col:60>
|     `-TextComment 0x55887c430210 <col:4, col:60> Text=" Processor Local APIC/SAPIC Affinity Structure Definition"
|-RecordDecl 0x55887c24eea0 <line:650:9, line:662:1> line:650:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c24ef40 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c430340 <line:648:4, col:40>
| | `-ParagraphComment 0x55887c430310 <col:4, col:40>
| |   `-TextComment 0x55887c4302e0 <col:4, col:40> Text=" Memory Affinity Structure Definition"
| |-FieldDecl 0x55887c24efa8 <line:651:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24f008 <line:652:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24f068 <line:653:3, col:13> col:13 ProximityDomain 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24f0c8 <line:654:3, col:13> col:13 Reserved1 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c24f128 <line:655:3, col:13> col:13 AddressBaseLow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24f188 <line:656:3, col:13> col:13 AddressBaseHigh 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24f1e8 <line:657:3, col:13> col:13 LengthLow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24f248 <line:658:3, col:13> col:13 LengthHigh 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24f2a8 <line:659:3, col:13> col:13 Reserved2 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24f308 <line:660:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c24f368 <line:661:3, col:13> col:13 Reserved3 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c24f418 <line:650:1, line:662:3> col:3 EFI_ACPI_5_1_MEMORY_AFFINITY_STRUCTURE 'struct EFI_ACPI_5_1_MEMORY_AFFINITY_STRUCTURE':'EFI_ACPI_5_1_MEMORY_AFFINITY_STRUCTURE'
| |-ElaboratedType 0x55887c24f3c0 'struct EFI_ACPI_5_1_MEMORY_AFFINITY_STRUCTURE' sugar
| | `-RecordType 0x55887c24ef20 'EFI_ACPI_5_1_MEMORY_AFFINITY_STRUCTURE'
| |   `-Record 0x55887c24eea0 ''
| `-FullComment 0x55887c430410 <line:648:4, col:40>
|   `-ParagraphComment 0x55887c4303e0 <col:4, col:40>
|     `-TextComment 0x55887c4303b0 <col:4, col:40> Text=" Memory Affinity Structure Definition"
|-RecordDecl 0x55887c24f4b0 <line:674:9, line:683:1> line:674:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c24f550 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4304e0 <line:672:4, col:56>
| | `-ParagraphComment 0x55887c4304b0 <col:4, col:56>
| |   `-TextComment 0x55887c430480 <col:4, col:56> Text=" Processor Local x2APIC Affinity Structure Definition"
| |-FieldDecl 0x55887c24f5b8 <line:675:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24f618 <line:676:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24f6c8 <line:677:3, col:24> col:13 Reserved1 'UINT8[2]'
| |-FieldDecl 0x55887c24f728 <line:678:3, col:13> col:13 ProximityDomain 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24f788 <line:679:3, col:13> col:13 X2ApicId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24f7e8 <line:680:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24f848 <line:681:3, col:13> col:13 ClockDomain 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c24f8f8 <line:682:3, col:24> col:13 Reserved2 'UINT8[4]'
|-TypedefDecl 0x55887c24f9a8 <line:674:1, line:683:3> col:3 EFI_ACPI_5_1_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE 'struct EFI_ACPI_5_1_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE':'EFI_ACPI_5_1_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE'
| |-ElaboratedType 0x55887c24f950 'struct EFI_ACPI_5_1_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE' sugar
| | `-RecordType 0x55887c24f530 'EFI_ACPI_5_1_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE'
| |   `-Record 0x55887c24f4b0 ''
| `-FullComment 0x55887c4305b0 <line:672:4, col:56>
|   `-ParagraphComment 0x55887c430580 <col:4, col:56>
|     `-TextComment 0x55887c430550 <col:4, col:56> Text=" Processor Local x2APIC Affinity Structure Definition"
|-RecordDecl 0x55887c24fa40 <line:688:9, line:695:1> line:688:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c24fae0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c430680 <line:686:4, col:38>
| | `-ParagraphComment 0x55887c430650 <col:4, col:38>
| |   `-TextComment 0x55887c430620 <col:4, col:38> Text=" GICC Affinity Structure Definition"
| |-FieldDecl 0x55887c24fb48 <line:689:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24fba8 <line:690:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c24fc08 <line:691:3, col:13> col:13 ProximityDomain 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24fc68 <line:692:3, col:13> col:13 AcpiProcessorUid 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c24fcc8 <line:693:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c24fd28 <line:694:3, col:13> col:13 ClockDomain 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c24fdd8 <line:688:1, line:695:3> col:3 EFI_ACPI_5_1_GICC_AFFINITY_STRUCTURE 'struct EFI_ACPI_5_1_GICC_AFFINITY_STRUCTURE':'EFI_ACPI_5_1_GICC_AFFINITY_STRUCTURE'
| |-ElaboratedType 0x55887c24fd80 'struct EFI_ACPI_5_1_GICC_AFFINITY_STRUCTURE' sugar
| | `-RecordType 0x55887c24fac0 'EFI_ACPI_5_1_GICC_AFFINITY_STRUCTURE'
| |   `-Record 0x55887c24fa40 ''
| `-FullComment 0x55887c430750 <line:686:4, col:38>
|   `-ParagraphComment 0x55887c430720 <col:4, col:38>
|     `-TextComment 0x55887c4306f0 <col:4, col:38> Text=" GICC Affinity Structure Definition"
|-RecordDecl 0x55887c24fea0 <line:706:9, line:709:1> line:706:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c24ff40 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c430870 <line:703:4, line:704:38>
| | `-ParagraphComment 0x55887c430810 <line:703:4, line:704:38>
| |   |-TextComment 0x55887c4307c0 <line:703:4, col:54> Text=" System Locality Distance Information Table (SLIT)."
| |   `-TextComment 0x55887c4307e0 <line:704:4, col:38> Text=" The rest of the table is a matrix."
| |-FieldDecl 0x55887c24ffa8 <line:707:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c250008 <line:708:3, col:34> col:34 NumberOfSystemLocalities 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c2500b8 <line:706:1, line:709:3> col:3 EFI_ACPI_5_1_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER 'struct EFI_ACPI_5_1_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER':'EFI_ACPI_5_1_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER'
| |-ElaboratedType 0x55887c250060 'struct EFI_ACPI_5_1_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c24ff20 'EFI_ACPI_5_1_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER'
| |   `-Record 0x55887c24fea0 ''
| `-FullComment 0x55887c430960 <line:703:4, line:704:38>
|   `-ParagraphComment 0x55887c430930 <line:703:4, line:704:38>
|     |-TextComment 0x55887c4308e0 <line:703:4, col:54> Text=" System Locality Distance Information Table (SLIT)."
|     `-TextComment 0x55887c430900 <line:704:4, col:38> Text=" The rest of the table is a matrix."
|-RecordDecl 0x55887c250180 <line:719:9, line:722:1> line:719:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c250220 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c430a30 <line:717:4, col:49>
| | `-ParagraphComment 0x55887c430a00 <col:4, col:49>
| |   `-TextComment 0x55887c4309d0 <col:4, col:49> Text=" Corrected Platform Error Polling Table (CPEP)"
| |-FieldDecl 0x55887c250288 <line:720:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c250338 <line:721:3, col:44> col:34 Reserved 'UINT8[8]'
|-TypedefDecl 0x55887c2503e8 <line:719:1, line:722:3> col:3 EFI_ACPI_5_1_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER 'struct EFI_ACPI_5_1_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER':'EFI_ACPI_5_1_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER'
| |-ElaboratedType 0x55887c250390 'struct EFI_ACPI_5_1_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER' sugar
| | `-RecordType 0x55887c250200 'EFI_ACPI_5_1_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER'
| |   `-Record 0x55887c250180 ''
| `-FullComment 0x55887c430b00 <line:717:4, col:49>
|   `-ParagraphComment 0x55887c430ad0 <col:4, col:49>
|     `-TextComment 0x55887c430aa0 <col:4, col:49> Text=" Corrected Platform Error Polling Table (CPEP)"
|-RecordDecl 0x55887c2504b0 <line:737:9, line:743:1> line:737:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c250550 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c430bd0 <line:735:4, col:67>
| | `-ParagraphComment 0x55887c430ba0 <col:4, col:67>
| |   `-TextComment 0x55887c430b70 <col:4, col:67> Text=" Corrected Platform Error Polling Processor Structure Definition"
| |-FieldDecl 0x55887c2505b8 <line:738:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0eec40 <line:739:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0eeca0 <line:740:3, col:13> col:13 ProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0eed00 <line:741:3, col:13> col:13 ProcessorEid 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c0eed60 <line:742:3, col:13> col:13 PollingInterval 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0eee08 <line:737:1, line:743:3> col:3 EFI_ACPI_5_1_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE 'struct EFI_ACPI_5_1_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE':'EFI_ACPI_5_1_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE'
| |-ElaboratedType 0x55887c0eedb0 'struct EFI_ACPI_5_1_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE' sugar
| | `-RecordType 0x55887c250530 'EFI_ACPI_5_1_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE'
| |   `-Record 0x55887c2504b0 ''
| `-FullComment 0x55887c430ca0 <line:735:4, col:67>
|   `-ParagraphComment 0x55887c430c70 <col:4, col:67>
|     `-TextComment 0x55887c430c40 <col:4, col:67> Text=" Corrected Platform Error Polling Processor Structure Definition"
|-RecordDecl 0x55887c0eeea0 <line:748:9, line:754:1> line:748:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0eef40 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c430d70 <line:746:4, col:47>
| | `-ParagraphComment 0x55887c430d40 <col:4, col:47>
| |   `-TextComment 0x55887c430d10 <col:4, col:47> Text=" Maximum System Characteristics Table (MSCT)"
| |-FieldDecl 0x55887c0eefa8 <line:749:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c0ef008 <line:750:3, col:34> col:34 OffsetProxDomInfo 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ef068 <line:751:3, col:34> col:34 MaximumNumberOfProximityDomains 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ef0c8 <line:752:3, col:34> col:34 MaximumNumberOfClockDomains 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0ef128 <line:753:3, col:34> col:34 MaximumPhysicalAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c0ef1d8 <line:748:1, line:754:3> col:3 EFI_ACPI_5_1_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER 'struct EFI_ACPI_5_1_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER':'EFI_ACPI_5_1_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER'
| |-ElaboratedType 0x55887c0ef180 'struct EFI_ACPI_5_1_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER' sugar
| | `-RecordType 0x55887c0eef20 'EFI_ACPI_5_1_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER'
| |   `-Record 0x55887c0eeea0 ''
| `-FullComment 0x55887c430e40 <line:746:4, col:47>
|   `-ParagraphComment 0x55887c430e10 <col:4, col:47>
|     `-TextComment 0x55887c430de0 <col:4, col:47> Text=" Maximum System Characteristics Table (MSCT)"
|-RecordDecl 0x55887c0ef2a0 <line:764:9, line:771:1> line:764:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0ef340 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c430f10 <line:762:4, col:61>
| | `-ParagraphComment 0x55887c430ee0 <col:4, col:61>
| |   `-TextComment 0x55887c430eb0 <col:4, col:61> Text=" Maximum Proximity Domain Information Structure Definition"
| |-FieldDecl 0x55887c0ef3a8 <line:765:3, col:13> col:13 Revision 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0ef408 <line:766:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0ef468 <line:767:3, col:13> col:13 ProximityDomainRangeLow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ef4c8 <line:768:3, col:13> col:13 ProximityDomainRangeHigh 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0ef528 <line:769:3, col:13> col:13 MaximumProcessorCapacity 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0ef588 <line:770:3, col:13> col:13 MaximumMemoryCapacity 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c0ef638 <line:764:1, line:771:3> col:3 EFI_ACPI_5_1_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE 'struct EFI_ACPI_5_1_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE':'EFI_ACPI_5_1_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE'
| |-ElaboratedType 0x55887c0ef5e0 'struct EFI_ACPI_5_1_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE' sugar
| | `-RecordType 0x55887c0ef320 'EFI_ACPI_5_1_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE'
| |   `-Record 0x55887c0ef2a0 ''
| `-FullComment 0x55887c430fe0 <line:762:4, col:61>
|   `-ParagraphComment 0x55887c430fb0 <col:4, col:61>
|     `-TextComment 0x55887c430f80 <col:4, col:61> Text=" Maximum Proximity Domain Information Structure Definition"
|-RecordDecl 0x55887c0ef6d0 <line:776:9, line:779:1> line:776:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0ef770 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4310b0 <line:774:4, col:38>
| | `-ParagraphComment 0x55887c431080 <col:4, col:38>
| |   `-TextComment 0x55887c431050 <col:4, col:38> Text=" ACPI RAS Feature Table definition."
| |-FieldDecl 0x55887c0ef7d8 <line:777:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c0ef888 <line:778:3, col:75> col:34 PlatformCommunicationChannelIdentifier 'UINT8[12]'
|-TypedefDecl 0x55887c0ef938 <line:776:1, line:779:3> col:3 EFI_ACPI_5_1_RAS_FEATURE_TABLE 'struct EFI_ACPI_5_1_RAS_FEATURE_TABLE':'EFI_ACPI_5_1_RAS_FEATURE_TABLE'
| |-ElaboratedType 0x55887c0ef8e0 'struct EFI_ACPI_5_1_RAS_FEATURE_TABLE' sugar
| | `-RecordType 0x55887c0ef750 'EFI_ACPI_5_1_RAS_FEATURE_TABLE'
| |   `-Record 0x55887c0ef6d0 ''
| `-FullComment 0x55887c431180 <line:774:4, col:38>
|   `-ParagraphComment 0x55887c431150 <col:4, col:38>
|     `-TextComment 0x55887c431120 <col:4, col:38> Text=" ACPI RAS Feature Table definition."
|-RecordDecl 0x55887c0efa00 <line:789:9, line:798:1> line:789:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0efaa0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c431250 <line:787:4, col:77>
| | `-ParagraphComment 0x55887c431220 <col:4, col:77>
| |   `-TextComment 0x55887c4311f0 <col:4, col:77> Text=" ACPI RASF Platform Communication Channel Shared Memory Region definition."
| |-FieldDecl 0x55887c0efb08 <line:790:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0efb68 <line:791:3, col:13> col:13 Command 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0efbc8 <line:792:3, col:13> col:13 Status 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0efc28 <line:793:3, col:13> col:13 Version 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0efcd8 <line:794:3, col:31> col:13 RASCapabilities 'UINT8[16]'
| |-FieldDecl 0x55887c0efd88 <line:795:3, col:34> col:13 SetRASCapabilities 'UINT8[16]'
| |-FieldDecl 0x55887c0efde8 <line:796:3, col:13> col:13 NumberOfRASFParameterBlocks 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c0efe48 <line:797:3, col:13> col:13 SetRASCapabilitiesStatus 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0efef8 <line:789:1, line:798:3> col:3 EFI_ACPI_5_1_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION 'struct EFI_ACPI_5_1_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION':'EFI_ACPI_5_1_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION'
| |-ElaboratedType 0x55887c0efea0 'struct EFI_ACPI_5_1_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION' sugar
| | `-RecordType 0x55887c0efa80 'EFI_ACPI_5_1_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION'
| |   `-Record 0x55887c0efa00 ''
| `-FullComment 0x55887c431320 <line:787:4, col:77>
|   `-ParagraphComment 0x55887c4312f0 <col:4, col:77>
|     `-TextComment 0x55887c4312c0 <col:4, col:77> Text=" ACPI RASF Platform Communication Channel Shared Memory Region definition."
|-RecordDecl 0x55887c0efff0 <line:814:9, line:823:1> line:814:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f0090 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4313f0 <line:812:4, col:56>
| | `-ParagraphComment 0x55887c4313c0 <col:4, col:56>
| |   `-TextComment 0x55887c431390 <col:4, col:56> Text=" ACPI RASF Parameter Block structure for PATROL_SCRUB"
| |-FieldDecl 0x55887c0f00f8 <line:815:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0f0158 <line:816:3, col:13> col:13 Version 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0f01b8 <line:817:3, col:13> col:13 Length 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0f0218 <line:818:3, col:13> col:13 PatrolScrubCommand 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0f02c8 <line:819:3, col:36> col:13 RequestedAddressRange 'UINT64[2]'
| |-FieldDecl 0x55887c0f0378 <line:820:3, col:33> col:13 ActualAddressRange 'UINT64[2]'
| |-FieldDecl 0x55887c0f03d8 <line:821:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c0f0438 <line:822:3, col:13> col:13 RequestedSpeed 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c0f04e8 <line:814:1, line:823:3> col:3 EFI_ACPI_5_1_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE 'struct EFI_ACPI_5_1_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE':'EFI_ACPI_5_1_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE'
| |-ElaboratedType 0x55887c0f0490 'struct EFI_ACPI_5_1_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE' sugar
| | `-RecordType 0x55887c0f0070 'EFI_ACPI_5_1_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE'
| |   `-Record 0x55887c0efff0 ''
| `-FullComment 0x55887c4314c0 <line:812:4, col:56>
|   `-ParagraphComment 0x55887c431490 <col:4, col:56>
|     `-TextComment 0x55887c431460 <col:4, col:56> Text=" ACPI RASF Parameter Block structure for PATROL_SCRUB"
|-RecordDecl 0x55887c0f05b0 <line:835:9, line:841:1> line:835:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f0650 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c431590 <line:833:4, col:40>
| | `-ParagraphComment 0x55887c431560 <col:4, col:40>
| |   `-TextComment 0x55887c431530 <col:4, col:40> Text=" Memory Power State Table definition."
| |-FieldDecl 0x55887c0f06b8 <line:836:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c0f0718 <line:837:3, col:34> col:34 PlatformCommunicationChannelIdentifier 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c0f07c8 <line:838:3, col:44> col:34 Reserved 'UINT8[3]'
|-TypedefDecl 0x55887c0f0878 <line:835:1, line:841:3> col:3 EFI_ACPI_5_1_MEMORY_POWER_STATUS_TABLE 'struct EFI_ACPI_5_1_MEMORY_POWER_STATUS_TABLE':'EFI_ACPI_5_1_MEMORY_POWER_STATUS_TABLE'
| |-ElaboratedType 0x55887c0f0820 'struct EFI_ACPI_5_1_MEMORY_POWER_STATUS_TABLE' sugar
| | `-RecordType 0x55887c0f0630 'EFI_ACPI_5_1_MEMORY_POWER_STATUS_TABLE'
| |   `-Record 0x55887c0f05b0 ''
| `-FullComment 0x55887c431660 <line:833:4, col:40>
|   `-ParagraphComment 0x55887c431630 <col:4, col:40>
|     `-TextComment 0x55887c431600 <col:4, col:40> Text=" Memory Power State Table definition."
|-RecordDecl 0x55887c0f0940 <line:851:9, line:861:1> line:851:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f09e0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c431730 <line:849:4, col:72>
| | `-ParagraphComment 0x55887c431700 <col:4, col:72>
| |   `-TextComment 0x55887c4316d0 <col:4, col:72> Text=" MPST Platform Communication Channel Shared Memory Region definition."
| |-FieldDecl 0x55887c0f0a48 <line:852:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f0aa8 <line:853:3, col:13> col:13 Command 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0f0b08 <line:854:3, col:13> col:13 Status 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0f0b68 <line:855:3, col:13> col:13 MemoryPowerCommandRegister 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f0bc8 <line:856:3, col:13> col:13 MemoryPowerStatusRegister 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f0f90 <line:857:3, col:13> col:13 PowerStateId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f0ff0 <line:858:3, col:13> col:13 MemoryPowerNodeId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f1050 <line:859:3, col:13> col:13 MemoryEnergyConsumed 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c0f10b0 <line:860:3, col:13> col:13 ExpectedAveragePowerComsuned 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c0f1158 <line:851:1, line:861:3> col:3 EFI_ACPI_5_1_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION 'struct EFI_ACPI_5_1_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION':'EFI_ACPI_5_1_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION'
| |-ElaboratedType 0x55887c0f1100 'struct EFI_ACPI_5_1_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION' sugar
| | `-RecordType 0x55887c0f09c0 'EFI_ACPI_5_1_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION'
| |   `-Record 0x55887c0f0940 ''
| `-FullComment 0x55887c431800 <line:849:4, col:72>
|   `-ParagraphComment 0x55887c4317d0 <col:4, col:72>
|     `-TextComment 0x55887c4317a0 <col:4, col:72> Text=" MPST Platform Communication Channel Shared Memory Region definition."
|-RecordDecl 0x55887c0f1250 <line:879:9, line:882:1> line:879:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f12f0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4318d0 <line:877:4, col:32>
| | `-ParagraphComment 0x55887c4318a0 <col:4, col:32>
| |   `-TextComment 0x55887c431870 <col:4, col:32> Text=" MPST Memory Power Node Table"
| |-FieldDecl 0x55887c0f1358 <line:880:3, col:12> col:12 PowerStateValue 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c0f13b8 <line:881:3, col:12> col:12 PowerStateInformationIndex 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c0f1468 <line:879:1, line:882:3> col:3 EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE 'struct EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE':'EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE'
| |-ElaboratedType 0x55887c0f1410 'struct EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE' sugar
| | `-RecordType 0x55887c0f12d0 'EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE'
| |   `-Record 0x55887c0f1250 ''
| `-FullComment 0x55887c4319a0 <line:877:4, col:32>
|   `-ParagraphComment 0x55887c431970 <col:4, col:32>
|     `-TextComment 0x55887c431940 <col:4, col:32> Text=" MPST Memory Power Node Table"
|-RecordDecl 0x55887c0f14d8 <line:884:9, line:895:1> line:884:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f1580 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c0f15e8 <line:885:3, col:13> col:13 Flag 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0f1648 <line:886:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0f16a8 <line:887:3, col:13> col:13 MemoryPowerNodeId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0f1708 <line:888:3, col:13> col:13 Length 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f1768 <line:889:3, col:13> col:13 AddressBase 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0f17c8 <line:890:3, col:13> col:13 AddressLength 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0f1828 <line:891:3, col:13> col:13 NumberOfPowerStates 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0f1888 <line:892:3, col:13> col:13 NumberOfPhysicalComponents 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0f1938 <line:884:1, line:895:3> col:3 EFI_ACPI_5_1_MPST_MEMORY_POWER_STRUCTURE 'struct EFI_ACPI_5_1_MPST_MEMORY_POWER_STRUCTURE':'EFI_ACPI_5_1_MPST_MEMORY_POWER_STRUCTURE'
| `-ElaboratedType 0x55887c0f18e0 'struct EFI_ACPI_5_1_MPST_MEMORY_POWER_STRUCTURE' sugar
|   `-RecordType 0x55887c0f1560 'EFI_ACPI_5_1_MPST_MEMORY_POWER_STRUCTURE'
|     `-Record 0x55887c0f14d8 ''
|-RecordDecl 0x55887c0f19a8 <line:901:9, line:904:1> line:901:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f1a50 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c0f1ab8 <line:902:3, col:13> col:13 MemoryPowerNodeCount 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c0f1b68 <line:903:3, col:23> col:13 Reserved 'UINT8[2]'
|-TypedefDecl 0x55887c0f1c18 <line:901:1, line:904:3> col:3 EFI_ACPI_5_1_MPST_MEMORY_POWER_NODE_TABLE 'struct EFI_ACPI_5_1_MPST_MEMORY_POWER_NODE_TABLE':'EFI_ACPI_5_1_MPST_MEMORY_POWER_NODE_TABLE'
| `-ElaboratedType 0x55887c0f1bc0 'struct EFI_ACPI_5_1_MPST_MEMORY_POWER_NODE_TABLE' sugar
|   `-RecordType 0x55887c0f1a30 'EFI_ACPI_5_1_MPST_MEMORY_POWER_NODE_TABLE'
|     `-Record 0x55887c0f19a8 ''
|-RecordDecl 0x55887c0f1cb0 <line:909:9, line:916:1> line:909:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f1d50 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c431a70 <line:907:4, col:49>
| | `-ParagraphComment 0x55887c431a40 <col:4, col:49>
| |   `-TextComment 0x55887c431a10 <col:4, col:49> Text=" MPST Memory Power State Characteristics Table"
| |-FieldDecl 0x55887c0f1db8 <line:910:3, col:13> col:13 PowerStateStructureID 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0f1e18 <line:911:3, col:13> col:13 Flag 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0f1e78 <line:912:3, col:13> col:13 Reserved 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0f1ed8 <line:913:3, col:13> col:13 AveragePowerConsumedInMPS0 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f1f38 <line:914:3, col:13> col:13 RelativePowerSavingToMPS0 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0f1f98 <line:915:3, col:13> col:13 ExitLatencyToMPS0 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c0f2048 <line:909:1, line:916:3> col:3 EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE 'struct EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE':'EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE'
| |-ElaboratedType 0x55887c0f1ff0 'struct EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE' sugar
| | `-RecordType 0x55887c0f1d30 'EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE'
| |   `-Record 0x55887c0f1cb0 ''
| `-FullComment 0x55887c431b40 <line:907:4, col:49>
|   `-ParagraphComment 0x55887c431b10 <col:4, col:49>
|     `-TextComment 0x55887c431ae0 <col:4, col:49> Text=" MPST Memory Power State Characteristics Table"
|-RecordDecl 0x55887c0f20b8 <line:922:9, line:925:1> line:922:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f2160 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c0f21c8 <line:923:3, col:13> col:13 MemoryPowerStateCharacteristicsCount 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c0f2278 <line:924:3, col:23> col:13 Reserved 'UINT8[2]'
|-TypedefDecl 0x55887c0f2328 <line:922:1, line:925:3> col:3 EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE 'struct EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE':'EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE'
| `-ElaboratedType 0x55887c0f22d0 'struct EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE' sugar
|   `-RecordType 0x55887c0f2140 'EFI_ACPI_5_1_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE'
|     `-Record 0x55887c0f20b8 ''
|-RecordDecl 0x55887c0f23c0 <line:930:9, line:933:1> line:930:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f2460 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c431c10 <line:928:4, col:37>
| | `-ParagraphComment 0x55887c431be0 <col:4, col:37>
| |   `-TextComment 0x55887c431bb0 <col:4, col:37> Text=" Memory Topology Table definition."
| |-FieldDecl 0x55887c0f24c8 <line:931:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c0f2528 <line:932:3, col:34> col:34 Reserved 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0f25d8 <line:930:1, line:933:3> col:3 EFI_ACPI_5_1_MEMORY_TOPOLOGY_TABLE 'struct EFI_ACPI_5_1_MEMORY_TOPOLOGY_TABLE':'EFI_ACPI_5_1_MEMORY_TOPOLOGY_TABLE'
| |-ElaboratedType 0x55887c0f2580 'struct EFI_ACPI_5_1_MEMORY_TOPOLOGY_TABLE' sugar
| | `-RecordType 0x55887c0f2440 'EFI_ACPI_5_1_MEMORY_TOPOLOGY_TABLE'
| |   `-Record 0x55887c0f23c0 ''
| `-FullComment 0x55887c431ce0 <line:928:4, col:37>
|   `-ParagraphComment 0x55887c431cb0 <col:4, col:37>
|     `-TextComment 0x55887c431c80 <col:4, col:37> Text=" Memory Topology Table definition."
|-RecordDecl 0x55887c0f26a0 <line:943:9, line:949:1> line:943:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f2740 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c431db0 <line:941:4, col:46>
| | `-ParagraphComment 0x55887c431d80 <col:4, col:46>
| |   `-TextComment 0x55887c431d50 <col:4, col:46> Text=" Common Memory Aggregator Device Structure."
| |-FieldDecl 0x55887c0f27a8 <line:944:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0f2808 <line:945:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0f2868 <line:946:3, col:13> col:13 Length 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0f28c8 <line:947:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c0f2928 <line:948:3, col:13> col:13 Reserved1 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c0f29d8 <line:943:1, line:949:3> col:3 referenced EFI_ACPI_5_1_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE 'struct EFI_ACPI_5_1_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_5_1_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-ElaboratedType 0x55887c0f2980 'struct EFI_ACPI_5_1_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE' sugar
| | `-RecordType 0x55887c0f2720 'EFI_ACPI_5_1_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |   `-Record 0x55887c0f26a0 ''
| `-FullComment 0x55887c431e80 <line:941:4, col:46>
|   `-ParagraphComment 0x55887c431e50 <col:4, col:46>
|     `-TextComment 0x55887c431e20 <col:4, col:46> Text=" Common Memory Aggregator Device Structure."
|-RecordDecl 0x55887c0f2aa0 <line:961:9, line:966:1> line:961:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f2b40 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c431f50 <line:959:4, col:46>
| | `-ParagraphComment 0x55887c431f20 <col:4, col:46>
| |   `-TextComment 0x55887c431ef0 <col:4, col:46> Text=" Socket Memory Aggregator Device Structure."
| |-FieldDecl 0x55887c0f2bd0 <line:962:3, col:66> col:66 Header 'EFI_ACPI_5_1_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_5_1_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-FieldDecl 0x55887c0f2c30 <line:963:3, col:66> col:66 SocketIdentifier 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c0f2c90 <line:964:3, col:66> col:66 Reserved 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c0f2db8 <line:961:1, line:966:3> col:3 EFI_ACPI_5_1_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE 'struct EFI_ACPI_5_1_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_5_1_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-ElaboratedType 0x55887c0f2d60 'struct EFI_ACPI_5_1_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE' sugar
| | `-RecordType 0x55887c0f2b20 'EFI_ACPI_5_1_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |   `-Record 0x55887c0f2aa0 ''
| `-FullComment 0x55887c432020 <line:959:4, col:46>
|   `-ParagraphComment 0x55887c431ff0 <col:4, col:46>
|     `-TextComment 0x55887c431fc0 <col:4, col:46> Text=" Socket Memory Aggregator Device Structure."
|-RecordDecl 0x55887c0f2e50 <line:971:9, line:983:1> line:971:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f2ef0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4320f0 <line:969:4, col:56>
| | `-ParagraphComment 0x55887c4320c0 <col:4, col:56>
| |   `-TextComment 0x55887c432090 <col:4, col:56> Text=" MemoryController Memory Aggregator Device Structure."
| |-FieldDecl 0x55887c0f6240 <line:972:3, col:66> col:66 Header 'EFI_ACPI_5_1_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_5_1_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-FieldDecl 0x55887c0f62a0 <line:973:3, col:66> col:66 ReadLatency 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f6300 <line:974:3, col:66> col:66 WriteLatency 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f6360 <line:975:3, col:66> col:66 ReadBandwidth 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f63c0 <line:976:3, col:66> col:66 WriteBandwidth 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f6420 <line:977:3, col:66> col:66 OptimalAccessUnit 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0f6480 <line:978:3, col:66> col:66 OptimalAccessAlignment 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0f64e0 <line:979:3, col:66> col:66 Reserved 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c0f6540 <line:980:3, col:66> col:66 NumberOfProximityDomains 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c0f65e8 <line:971:1, line:983:3> col:3 EFI_ACPI_5_1_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE 'struct EFI_ACPI_5_1_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_5_1_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-ElaboratedType 0x55887c0f6590 'struct EFI_ACPI_5_1_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE' sugar
| | `-RecordType 0x55887c0f2ed0 'EFI_ACPI_5_1_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |   `-Record 0x55887c0f2e50 ''
| `-FullComment 0x55887c4321c0 <line:969:4, col:56>
|   `-ParagraphComment 0x55887c432190 <col:4, col:56>
|     `-TextComment 0x55887c432160 <col:4, col:56> Text=" MemoryController Memory Aggregator Device Structure."
|-RecordDecl 0x55887c0f6680 <line:988:9, line:994:1> line:988:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f6720 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c432290 <line:986:4, col:44>
| | `-ParagraphComment 0x55887c432260 <col:4, col:44>
| |   `-TextComment 0x55887c432230 <col:4, col:44> Text=" DIMM Memory Aggregator Device Structure."
| |-FieldDecl 0x55887c0f6788 <line:989:3, col:66> col:66 Header 'EFI_ACPI_5_1_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_5_1_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-FieldDecl 0x55887c0f67e8 <line:990:3, col:66> col:66 PhysicalComponentIdentifier 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0f6848 <line:991:3, col:66> col:66 Reserved 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0f68a8 <line:992:3, col:66> col:66 SizeOfDimm 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0f6908 <line:993:3, col:66> col:66 SmbiosHandle 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0f69b8 <line:988:1, line:994:3> col:3 EFI_ACPI_5_1_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE 'struct EFI_ACPI_5_1_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_5_1_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-ElaboratedType 0x55887c0f6960 'struct EFI_ACPI_5_1_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE' sugar
| | `-RecordType 0x55887c0f6700 'EFI_ACPI_5_1_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |   `-Record 0x55887c0f6680 ''
| `-FullComment 0x55887c432360 <line:986:4, col:44>
|   `-ParagraphComment 0x55887c432330 <col:4, col:44>
|     `-TextComment 0x55887c432300 <col:4, col:44> Text=" DIMM Memory Aggregator Device Structure."
|-RecordDecl 0x55887c0f6a50 <line:999:9, line:1034:1> line:999:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f6af0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c432430 <line:997:4, col:44>
| | `-ParagraphComment 0x55887c432400 <col:4, col:44>
| |   `-TextComment 0x55887c4323d0 <col:4, col:44> Text=" Boot Graphics Resource Table definition."
| |-FieldDecl 0x55887c0f6b58 <line:1000:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c0f6be8 <line:1004:3, col:34> col:34 Version 'UINT16':'unsigned short'
| | `-FullComment 0x55887c432500 <line:1002:6, col:56>
| |   `-ParagraphComment 0x55887c4324d0 <col:6, col:56>
| |     `-TextComment 0x55887c4324a0 <col:6, col:56> Text=" 2-bytes (16 bit) version ID. This value must be 1."
| |-FieldDecl 0x55887c0f6c78 <line:1010:3, col:34> col:34 Status 'UINT8':'unsigned char'
| | `-FullComment 0x55887c432620 <line:1006:6, line:1008:75>
| |   `-ParagraphComment 0x55887c4325f0 <line:1006:6, line:1008:75>
| |     |-TextComment 0x55887c432570 <line:1006:6, col:68> Text=" 1-byte status field indicating current status about the table."
| |     |-TextComment 0x55887c432590 <line:1007:6, col:45> Text="     Bits[7:1] = Reserved (must be zero)"
| |     `-TextComment 0x55887c4325b0 <line:1008:6, col:75> Text="     Bit [0] = Valid. A one indicates the boot image graphic is valid."
| |-FieldDecl 0x55887c0f6d08 <line:1016:3, col:34> col:34 ImageType 'UINT8':'unsigned char'
| | `-FullComment 0x55887c432740 <line:1012:6, line:1014:44>
| |   `-ParagraphComment 0x55887c432710 <line:1012:6, line:1014:44>
| |     |-TextComment 0x55887c432690 <line:1012:6, col:66> Text=" 1-byte enumerated type field indicating format of the image."
| |     |-TextComment 0x55887c4326b0 <line:1013:6, col:20> Text="     0 = Bitmap"
| |     `-TextComment 0x55887c4326d0 <line:1014:6, col:44> Text="     1 - 255  Reserved (for future use)"
| |-FieldDecl 0x55887c0f6d98 <line:1021:3, col:34> col:34 ImageAddress 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c432830 <line:1018:6, line:1019:26>
| |   `-ParagraphComment 0x55887c432800 <line:1018:6, line:1019:26>
| |     |-TextComment 0x55887c4327b0 <line:1018:6, col:80> Text=" 8-byte (64 bit) physical address pointing to the firmware's in-memory copy"
| |     `-TextComment 0x55887c4327d0 <line:1019:6, col:26> Text=" of the image bitmap."
| |-FieldDecl 0x55887c0f6e28 <line:1027:3, col:34> col:34 ImageOffsetX 'UINT32':'unsigned int'
| | `-FullComment 0x55887c432950 <line:1023:6, line:1025:61>
| |   `-ParagraphComment 0x55887c432920 <line:1023:6, line:1025:61>
| |     |-TextComment 0x55887c4328a0 <line:1023:6, col:88> Text=" A 4-byte (32-bit) unsigned long describing the display X-offset of the boot image."
| |     |-TextComment 0x55887c4328c0 <line:1024:6, col:69> Text=" (X, Y) display offset of the top left corner of the boot image."
| |     `-TextComment 0x55887c4328e0 <line:1025:6, col:61> Text=" The top left corner of the display is at offset (0, 0)."
| `-FieldDecl 0x55887c0f6eb8 <line:1033:3, col:34> col:34 ImageOffsetY 'UINT32':'unsigned int'
|   `-FullComment 0x55887c432a70 <line:1029:6, line:1031:61>
|     `-ParagraphComment 0x55887c432a40 <line:1029:6, line:1031:61>
|       |-TextComment 0x55887c4329c0 <line:1029:6, col:88> Text=" A 4-byte (32-bit) unsigned long describing the display Y-offset of the boot image."
|       |-TextComment 0x55887c4329e0 <line:1030:6, col:69> Text=" (X, Y) display offset of the top left corner of the boot image."
|       `-TextComment 0x55887c432a00 <line:1031:6, col:61> Text=" The top left corner of the display is at offset (0, 0)."
|-TypedefDecl 0x55887c0f6f68 <line:999:1, line:1034:3> col:3 EFI_ACPI_5_1_BOOT_GRAPHICS_RESOURCE_TABLE 'struct EFI_ACPI_5_1_BOOT_GRAPHICS_RESOURCE_TABLE':'EFI_ACPI_5_1_BOOT_GRAPHICS_RESOURCE_TABLE'
| |-ElaboratedType 0x55887c0f6f10 'struct EFI_ACPI_5_1_BOOT_GRAPHICS_RESOURCE_TABLE' sugar
| | `-RecordType 0x55887c0f6ad0 'EFI_ACPI_5_1_BOOT_GRAPHICS_RESOURCE_TABLE'
| |   `-Record 0x55887c0f6a50 ''
| `-FullComment 0x55887c432b40 <line:997:4, col:44>
|   `-ParagraphComment 0x55887c432b10 <col:4, col:44>
|     `-TextComment 0x55887c432ae0 <col:4, col:44> Text=" Boot Graphics Resource Table definition."
|-RecordDecl 0x55887c0f71b0 <line:1091:9, line:1095:1> line:1091:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f7250 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c432c10 <line:1089:4, col:34>
| | `-ParagraphComment 0x55887c432be0 <col:4, col:34>
| |   `-TextComment 0x55887c432bb0 <col:4, col:34> Text=" FPDT Performance Record header"
| |-FieldDecl 0x55887c0f72b8 <line:1092:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0f7318 <line:1093:3, col:13> col:13 Length 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c0f7378 <line:1094:3, col:13> col:13 Revision 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c0f7428 <line:1091:1, line:1095:3> col:3 referenced EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER 'struct EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER'
| |-ElaboratedType 0x55887c0f73d0 'struct EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER' sugar
| | `-RecordType 0x55887c0f7230 'EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER'
| |   `-Record 0x55887c0f71b0 ''
| `-FullComment 0x55887c432ce0 <line:1089:4, col:34>
|   `-ParagraphComment 0x55887c432cb0 <col:4, col:34>
|     `-TextComment 0x55887c432c80 <col:4, col:34> Text=" FPDT Performance Record header"
|-RecordDecl 0x55887c0f74c0 <line:1100:9, line:1103:1> line:1100:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f7560 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c432db0 <line:1098:4, col:33>
| | `-ParagraphComment 0x55887c432d80 <col:4, col:33>
| |   `-TextComment 0x55887c432d50 <col:4, col:33> Text=" FPDT Performance Table header"
| |-FieldDecl 0x55887c0f75c8 <line:1101:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0f7628 <line:1102:3, col:13> col:13 Length 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0f76d8 <line:1100:1, line:1103:3> col:3 referenced EFI_ACPI_5_1_FPDT_PERFORMANCE_TABLE_HEADER 'struct EFI_ACPI_5_1_FPDT_PERFORMANCE_TABLE_HEADER':'EFI_ACPI_5_1_FPDT_PERFORMANCE_TABLE_HEADER'
| |-ElaboratedType 0x55887c0f7680 'struct EFI_ACPI_5_1_FPDT_PERFORMANCE_TABLE_HEADER' sugar
| | `-RecordType 0x55887c0f7540 'EFI_ACPI_5_1_FPDT_PERFORMANCE_TABLE_HEADER'
| |   `-Record 0x55887c0f74c0 ''
| `-FullComment 0x55887c432e80 <line:1098:4, col:33>
|   `-ParagraphComment 0x55887c432e50 <col:4, col:33>
|     `-TextComment 0x55887c432e20 <col:4, col:33> Text=" FPDT Performance Table header"
|-RecordDecl 0x55887c0f7770 <line:1108:9, line:1115:1> line:1108:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f7810 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c432f50 <line:1106:4, col:65>
| | `-ParagraphComment 0x55887c432f20 <col:4, col:65>
| |   `-TextComment 0x55887c432ef0 <col:4, col:65> Text=" FPDT Firmware Basic Boot Performance Pointer Record Structure"
| |-FieldDecl 0x55887c0f78a0 <line:1109:3, col:50> col:50 Header 'EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER'
| |-FieldDecl 0x55887c0f7900 <line:1110:3, col:50> col:50 Reserved 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0f7988 <line:1114:3, col:50> col:50 BootPerformanceTablePointer 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c433020 <line:1112:6, col:85>
|     `-ParagraphComment 0x55887c432ff0 <col:6, col:85>
|       `-TextComment 0x55887c432fc0 <col:6, col:85> Text=" 64-bit processor-relative physical address of the Basic Boot Performance Table."
|-TypedefDecl 0x55887c0f7a98 <line:1108:1, line:1115:3> col:3 EFI_ACPI_5_1_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD 'struct EFI_ACPI_5_1_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD':'EFI_ACPI_5_1_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD'
| |-ElaboratedType 0x55887c0f7a40 'struct EFI_ACPI_5_1_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD' sugar
| | `-RecordType 0x55887c0f77f0 'EFI_ACPI_5_1_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD'
| |   `-Record 0x55887c0f7770 ''
| `-FullComment 0x55887c4330f0 <line:1106:4, col:65>
|   `-ParagraphComment 0x55887c4330c0 <col:4, col:65>
|     `-TextComment 0x55887c433090 <col:4, col:65> Text=" FPDT Firmware Basic Boot Performance Pointer Record Structure"
|-RecordDecl 0x55887c0f7b30 <line:1120:9, line:1127:1> line:1120:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f7bd0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4331c0 <line:1118:4, col:54>
| | `-ParagraphComment 0x55887c433190 <col:4, col:54>
| |   `-TextComment 0x55887c433160 <col:4, col:54> Text=" FPDT S3 Performance Table Pointer Record Structure"
| |-FieldDecl 0x55887c0f7c38 <line:1121:3, col:50> col:50 Header 'EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER'
| |-FieldDecl 0x55887c0f7c98 <line:1122:3, col:50> col:50 Reserved 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0f7d28 <line:1126:3, col:50> col:50 S3PerformanceTablePointer 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c433290 <line:1124:6, col:77>
|     `-ParagraphComment 0x55887c433260 <col:6, col:77>
|       `-TextComment 0x55887c433230 <col:6, col:77> Text=" 64-bit processor-relative physical address of the S3 Performance Table."
|-TypedefDecl 0x55887c0f7dd8 <line:1120:1, line:1127:3> col:3 EFI_ACPI_5_1_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD 'struct EFI_ACPI_5_1_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD':'EFI_ACPI_5_1_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD'
| |-ElaboratedType 0x55887c0f7d80 'struct EFI_ACPI_5_1_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD' sugar
| | `-RecordType 0x55887c0f7bb0 'EFI_ACPI_5_1_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD'
| |   `-Record 0x55887c0f7b30 ''
| `-FullComment 0x55887c433360 <line:1118:4, col:54>
|   `-ParagraphComment 0x55887c433330 <col:4, col:54>
|     `-TextComment 0x55887c433300 <col:4, col:54> Text=" FPDT S3 Performance Table Pointer Record Structure"
|-RecordDecl 0x55887c0f7e70 <line:1132:9, line:1163:1> line:1132:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f7f10 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c433430 <line:1130:4, col:57>
| | `-ParagraphComment 0x55887c433400 <col:4, col:57>
| |   `-TextComment 0x55887c4333d0 <col:4, col:57> Text=" FPDT Firmware Basic Boot Performance Record Structure"
| |-FieldDecl 0x55887c0f7f78 <line:1133:3, col:50> col:50 Header 'EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER'
| |-FieldDecl 0x55887c0f7fd8 <line:1134:3, col:50> col:50 Reserved 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f8068 <line:1139:3, col:50> col:50 ResetEnd 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c433520 <line:1136:6, line:1137:47>
| |   `-ParagraphComment 0x55887c4334f0 <line:1136:6, line:1137:47>
| |     |-TextComment 0x55887c4334a0 <line:1136:6, col:70> Text=" Timer value logged at the beginning of firmware image execution."
| |     `-TextComment 0x55887c4334c0 <line:1137:6, col:47> Text=" This may not always be zero or near zero."
| |-FieldDecl 0x55887c0f80f8 <line:1144:3, col:50> col:50 OsLoaderLoadImageStart 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c433610 <line:1141:6, line:1142:61>
| |   `-ParagraphComment 0x55887c4335e0 <line:1141:6, line:1142:61>
| |     |-TextComment 0x55887c433590 <line:1141:6, col:78> Text=" Timer value logged just prior to loading the OS boot loader into memory."
| |     `-TextComment 0x55887c4335b0 <line:1142:6, col:61> Text=" For non-UEFI compatible boots, this field must be zero."
| |-FieldDecl 0x55887c0f8188 <line:1150:3, col:50> col:50 OsLoaderStartImageStart 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c433730 <line:1146:6, line:1148:40>
| |   `-ParagraphComment 0x55887c433700 <line:1146:6, line:1148:40>
| |     |-TextComment 0x55887c433680 <line:1146:6, col:92> Text=" Timer value logged just prior to launching the previously loaded OS boot loader image."
| |     |-TextComment 0x55887c4336a0 <line:1147:6, col:78> Text=" For non-UEFI compatible boots, the timer value logged will be just prior"
| |     `-TextComment 0x55887c4336c0 <line:1148:6, col:40> Text=" to the INT 19h handler invocation."
| |-FieldDecl 0x55887c0f8950 <line:1156:3, col:50> col:50 ExitBootServicesEntry 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c433850 <line:1152:6, line:1154:61>
| |   `-ParagraphComment 0x55887c433820 <line:1152:6, line:1154:61>
| |     |-TextComment 0x55887c4337a0 <line:1152:6, col:66> Text=" Timer value logged at the point when the OS loader calls the"
| |     |-TextComment 0x55887c4337c0 <line:1153:6, col:61> Text=" ExitBootServices function for UEFI compatible firmware."
| |     `-TextComment 0x55887c4337e0 <line:1154:6, col:61> Text=" For non-UEFI compatible boots, this field must be zero."
| `-FieldDecl 0x55887c0f89d8 <line:1162:3, col:50> col:50 ExitBootServicesExit 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c433970 <line:1158:6, line:1160:61>
|     `-ParagraphComment 0x55887c433940 <line:1158:6, line:1160:61>
|       |-TextComment 0x55887c4338c0 <line:1158:6, col:78> Text=" Timer value logged at the point just prior to when the OS loader gaining"
|       |-TextComment 0x55887c4338e0 <line:1159:6, col:89> Text=" control back from calls the ExitBootServices function for UEFI compatible firmware."
|       `-TextComment 0x55887c433900 <line:1160:6, col:61> Text=" For non-UEFI compatible boots, this field must be zero."
|-TypedefDecl 0x55887c0f8a88 <line:1132:1, line:1163:3> col:3 EFI_ACPI_5_1_FPDT_FIRMWARE_BASIC_BOOT_RECORD 'struct EFI_ACPI_5_1_FPDT_FIRMWARE_BASIC_BOOT_RECORD':'EFI_ACPI_5_1_FPDT_FIRMWARE_BASIC_BOOT_RECORD'
| |-ElaboratedType 0x55887c0f8a30 'struct EFI_ACPI_5_1_FPDT_FIRMWARE_BASIC_BOOT_RECORD' sugar
| | `-RecordType 0x55887c0f7ef0 'EFI_ACPI_5_1_FPDT_FIRMWARE_BASIC_BOOT_RECORD'
| |   `-Record 0x55887c0f7e70 ''
| `-FullComment 0x55887c433a40 <line:1130:4, col:57>
|   `-ParagraphComment 0x55887c433a10 <col:4, col:57>
|     `-TextComment 0x55887c4339e0 <col:4, col:57> Text=" FPDT Firmware Basic Boot Performance Record Structure"
|-RecordDecl 0x55887c0f8b20 <line:1173:9, line:1178:1> line:1173:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f8bc0 <<invalid sloc>> Implicit 8
| `-FieldDecl 0x55887c0f8c50 <line:1174:3, col:49> col:49 Header 'EFI_ACPI_5_1_FPDT_PERFORMANCE_TABLE_HEADER':'EFI_ACPI_5_1_FPDT_PERFORMANCE_TABLE_HEADER'
|-TypedefDecl 0x55887c0f8d58 <line:1173:1, line:1178:3> col:3 EFI_ACPI_5_1_FPDT_FIRMWARE_BASIC_BOOT_TABLE 'struct EFI_ACPI_5_1_FPDT_FIRMWARE_BASIC_BOOT_TABLE':'EFI_ACPI_5_1_FPDT_FIRMWARE_BASIC_BOOT_TABLE'
| `-ElaboratedType 0x55887c0f8d00 'struct EFI_ACPI_5_1_FPDT_FIRMWARE_BASIC_BOOT_TABLE' sugar
|   `-RecordType 0x55887c0f8ba0 'EFI_ACPI_5_1_FPDT_FIRMWARE_BASIC_BOOT_TABLE'
|     `-Record 0x55887c0f8b20 ''
|-RecordDecl 0x55887c0f8df0 <line:1188:9, line:1193:1> line:1188:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f8e90 <<invalid sloc>> Implicit 8
| `-FieldDecl 0x55887c0f8ef8 <line:1189:3, col:49> col:49 Header 'EFI_ACPI_5_1_FPDT_PERFORMANCE_TABLE_HEADER':'EFI_ACPI_5_1_FPDT_PERFORMANCE_TABLE_HEADER'
|-TypedefDecl 0x55887c0f8fa8 <line:1188:1, line:1193:3> col:3 EFI_ACPI_5_1_FPDT_FIRMWARE_S3_BOOT_TABLE 'struct EFI_ACPI_5_1_FPDT_FIRMWARE_S3_BOOT_TABLE':'EFI_ACPI_5_1_FPDT_FIRMWARE_S3_BOOT_TABLE'
| `-ElaboratedType 0x55887c0f8f50 'struct EFI_ACPI_5_1_FPDT_FIRMWARE_S3_BOOT_TABLE' sugar
|   `-RecordType 0x55887c0f8e70 'EFI_ACPI_5_1_FPDT_FIRMWARE_S3_BOOT_TABLE'
|     `-Record 0x55887c0f8df0 ''
|-RecordDecl 0x55887c0f9040 <line:1198:9, line:1215:1> line:1198:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f90e0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c433b10 <line:1196:4, col:43>
| | `-ParagraphComment 0x55887c433ae0 <col:4, col:43>
| |   `-TextComment 0x55887c433ab0 <col:4, col:43> Text=" FPDT Basic S3 Resume Performance Record"
| |-FieldDecl 0x55887c0f9148 <line:1199:3, col:50> col:50 Header 'EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER'
| |-FieldDecl 0x55887c0f91d8 <line:1203:3, col:50> col:50 ResumeCount 'UINT32':'unsigned int'
| | `-FullComment 0x55887c433be0 <line:1201:6, col:82>
| |   `-ParagraphComment 0x55887c433bb0 <col:6, col:82>
| |     `-TextComment 0x55887c433b80 <col:6, col:82> Text=" A count of the number of S3 resume cycles since the last full boot sequence."
| |-FieldDecl 0x55887c0f9268 <line:1208:3, col:50> col:50 FullResume 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c433cd0 <line:1205:6, line:1206:77>
| |   `-ParagraphComment 0x55887c433ca0 <line:1205:6, line:1206:77>
| |     |-TextComment 0x55887c433c50 <line:1205:6, col:79> Text=" Timer recorded at the end of BIOS S3 resume, just prior to handoff to the"
| |     `-TextComment 0x55887c433c70 <line:1206:6, col:77> Text=" OS waking vector. Only the most recent resume cycle's time is retained."
| `-FieldDecl 0x55887c0f92f8 <line:1214:3, col:50> col:50 AverageResume 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c433df0 <line:1210:6, line:1212:83>
|     `-ParagraphComment 0x55887c433dc0 <line:1210:6, line:1212:83>
|       |-TextComment 0x55887c433d40 <line:1210:6, col:78> Text=" Average timer value of all resume cycles logged since the last full boot"
|       |-TextComment 0x55887c433d60 <line:1211:6, col:78> Text=" sequence, including the most recent resume.  Note that the entire log of"
|       `-TextComment 0x55887c433d80 <line:1212:6, col:83> Text=" timer values does not need to be retained in order to calculate this average."
|-TypedefDecl 0x55887c0f93a8 <line:1198:1, line:1215:3> col:3 EFI_ACPI_5_1_FPDT_S3_RESUME_RECORD 'struct EFI_ACPI_5_1_FPDT_S3_RESUME_RECORD':'EFI_ACPI_5_1_FPDT_S3_RESUME_RECORD'
| |-ElaboratedType 0x55887c0f9350 'struct EFI_ACPI_5_1_FPDT_S3_RESUME_RECORD' sugar
| | `-RecordType 0x55887c0f90c0 'EFI_ACPI_5_1_FPDT_S3_RESUME_RECORD'
| |   `-Record 0x55887c0f9040 ''
| `-FullComment 0x55887c433ec0 <line:1196:4, col:43>
|   `-ParagraphComment 0x55887c433e90 <col:4, col:43>
|     `-TextComment 0x55887c433e60 <col:4, col:43> Text=" FPDT Basic S3 Resume Performance Record"
|-RecordDecl 0x55887c0f9440 <line:1220:9, line:1233:1> line:1220:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f94e0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c433f90 <line:1218:4, col:44>
| | `-ParagraphComment 0x55887c433f60 <col:4, col:44>
| |   `-TextComment 0x55887c433f30 <col:4, col:44> Text=" FPDT Basic S3 Suspend Performance Record"
| |-FieldDecl 0x55887c0f9548 <line:1221:3, col:50> col:50 Header 'EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_5_1_FPDT_PERFORMANCE_RECORD_HEADER'
| |-FieldDecl 0x55887c0f95d8 <line:1226:3, col:50> col:50 SuspendStart 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c434080 <line:1223:6, line:1224:67>
| |   `-ParagraphComment 0x55887c434050 <line:1223:6, line:1224:67>
| |     |-TextComment 0x55887c434000 <line:1223:6, col:71> Text=" Timer value recorded at the OS write to SLP_TYP upon entry to S3."
| |     `-TextComment 0x55887c434020 <line:1224:6, col:67> Text=" Only the most recent suspend cycle's timer value is retained."
| `-FieldDecl 0x55887c0f9668 <line:1232:3, col:50> col:50 SuspendEnd 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c4341a0 <line:1228:6, line:1230:67>
|     `-ParagraphComment 0x55887c434170 <line:1228:6, line:1230:67>
|       |-TextComment 0x55887c4340f0 <line:1228:6, col:75> Text=" Timer value recorded at the final firmware write to SLP_TYP (or other"
|       |-TextComment 0x55887c434110 <line:1229:6, col:54> Text=" mechanism) used to trigger hardware entry to S3."
|       `-TextComment 0x55887c434130 <line:1230:6, col:67> Text=" Only the most recent suspend cycle's timer value is retained."
|-TypedefDecl 0x55887c0f9718 <line:1220:1, line:1233:3> col:3 EFI_ACPI_5_1_FPDT_S3_SUSPEND_RECORD 'struct EFI_ACPI_5_1_FPDT_S3_SUSPEND_RECORD':'EFI_ACPI_5_1_FPDT_S3_SUSPEND_RECORD'
| |-ElaboratedType 0x55887c0f96c0 'struct EFI_ACPI_5_1_FPDT_S3_SUSPEND_RECORD' sugar
| | `-RecordType 0x55887c0f94c0 'EFI_ACPI_5_1_FPDT_S3_SUSPEND_RECORD'
| |   `-Record 0x55887c0f9440 ''
| `-FullComment 0x55887c434270 <line:1218:4, col:44>
|   `-ParagraphComment 0x55887c434240 <col:4, col:44>
|     `-TextComment 0x55887c434210 <col:4, col:44> Text=" FPDT Basic S3 Suspend Performance Record"
|-RecordDecl 0x55887c0f97b0 <line:1238:9, line:1240:1> line:1238:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f9850 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c434340 <line:1236:4, col:49>
| | `-ParagraphComment 0x55887c434310 <col:4, col:49>
| |   `-TextComment 0x55887c4342e0 <col:4, col:49> Text=" Firmware Performance Record Table definition."
| `-FieldDecl 0x55887c0f98b8 <line:1239:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
|-TypedefDecl 0x55887c0f9968 <line:1238:1, line:1240:3> col:3 EFI_ACPI_5_1_FIRMWARE_PERFORMANCE_RECORD_TABLE 'struct EFI_ACPI_5_1_FIRMWARE_PERFORMANCE_RECORD_TABLE':'EFI_ACPI_5_1_FIRMWARE_PERFORMANCE_RECORD_TABLE'
| |-ElaboratedType 0x55887c0f9910 'struct EFI_ACPI_5_1_FIRMWARE_PERFORMANCE_RECORD_TABLE' sugar
| | `-RecordType 0x55887c0f9830 'EFI_ACPI_5_1_FIRMWARE_PERFORMANCE_RECORD_TABLE'
| |   `-Record 0x55887c0f97b0 ''
| `-FullComment 0x55887c434410 <line:1236:4, col:49>
|   `-ParagraphComment 0x55887c4343e0 <col:4, col:49>
|     `-TextComment 0x55887c4343b0 <col:4, col:49> Text=" Firmware Performance Record Table definition."
|-RecordDecl 0x55887c0f9a00 <line:1245:9, line:1260:1> line:1245:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0f9aa0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4344e0 <line:1243:4, col:47>
| | `-ParagraphComment 0x55887c4344b0 <col:4, col:47>
| |   `-TextComment 0x55887c434480 <col:4, col:47> Text=" Generic Timer Description Table definition."
| |-FieldDecl 0x55887c0f9b08 <line:1246:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c0f9b68 <line:1247:3, col:34> col:34 CntControlBasePhysicalAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0f9bc8 <line:1248:3, col:34> col:34 Reserved 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f9c28 <line:1249:3, col:34> col:34 SecurePL1TimerGSIV 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f9c88 <line:1250:3, col:34> col:34 SecurePL1TimerFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f9ce8 <line:1251:3, col:34> col:34 NonSecurePL1TimerGSIV 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f9d48 <line:1252:3, col:34> col:34 NonSecurePL1TimerFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f9da8 <line:1253:3, col:34> col:34 VirtualTimerGSIV 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f9e08 <line:1254:3, col:34> col:34 VirtualTimerFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f9e68 <line:1255:3, col:34> col:34 NonSecurePL2TimerGSIV 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f9ec8 <line:1256:3, col:34> col:34 NonSecurePL2TimerFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0f9f28 <line:1257:3, col:34> col:34 CntReadBasePhysicalAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0f9f88 <line:1258:3, col:34> col:34 PlatformTimerCount 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0f9fe8 <line:1259:3, col:34> col:34 PlatformTimerOffset 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0fa098 <line:1245:1, line:1260:3> col:3 EFI_ACPI_5_1_GENERIC_TIMER_DESCRIPTION_TABLE 'struct EFI_ACPI_5_1_GENERIC_TIMER_DESCRIPTION_TABLE':'EFI_ACPI_5_1_GENERIC_TIMER_DESCRIPTION_TABLE'
| |-ElaboratedType 0x55887c0fa040 'struct EFI_ACPI_5_1_GENERIC_TIMER_DESCRIPTION_TABLE' sugar
| | `-RecordType 0x55887c0f9a80 'EFI_ACPI_5_1_GENERIC_TIMER_DESCRIPTION_TABLE'
| |   `-Record 0x55887c0f9a00 ''
| `-FullComment 0x55887c4345b0 <line:1243:4, col:47>
|   `-ParagraphComment 0x55887c434580 <col:4, col:47>
|     `-TextComment 0x55887c434550 <col:4, col:47> Text=" Generic Timer Description Table definition."
|-RecordDecl 0x55887c0fa1c0 <line:1283:9, line:1290:1> line:1283:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0fa260 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c434680 <line:1281:4, col:22>
| | `-ParagraphComment 0x55887c434650 <col:4, col:22>
| |   `-TextComment 0x55887c434620 <col:4, col:22> Text=" GT Block Structure"
| |-FieldDecl 0x55887c0fa2c8 <line:1284:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0fa328 <line:1285:3, col:13> col:13 Length 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0fa388 <line:1286:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0fa3e8 <line:1287:3, col:13> col:13 CntCtlBase 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0fa448 <line:1288:3, col:13> col:13 GTBlockTimerCount 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0fa4a8 <line:1289:3, col:13> col:13 GTBlockTimerOffset 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0fa558 <line:1283:1, line:1290:3> col:3 EFI_ACPI_5_1_GTDT_GT_BLOCK_STRUCTURE 'struct EFI_ACPI_5_1_GTDT_GT_BLOCK_STRUCTURE':'EFI_ACPI_5_1_GTDT_GT_BLOCK_STRUCTURE'
| |-ElaboratedType 0x55887c0fa500 'struct EFI_ACPI_5_1_GTDT_GT_BLOCK_STRUCTURE' sugar
| | `-RecordType 0x55887c0fa240 'EFI_ACPI_5_1_GTDT_GT_BLOCK_STRUCTURE'
| |   `-Record 0x55887c0fa1c0 ''
| `-FullComment 0x55887c434750 <line:1281:4, col:22>
|   `-ParagraphComment 0x55887c434720 <col:4, col:22>
|     `-TextComment 0x55887c4346f0 <col:4, col:22> Text=" GT Block Structure"
|-RecordDecl 0x55887c0fa5f0 <line:1295:9, line:1305:1> line:1295:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0fa690 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c434820 <line:1293:4, col:28>
| | `-ParagraphComment 0x55887c4347f0 <col:4, col:28>
| |   `-TextComment 0x55887c4347c0 <col:4, col:28> Text=" GT Block Timer Structure"
| |-FieldDecl 0x55887c0fa6f8 <line:1296:3, col:13> col:13 GTFrameNumber 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0fa7a8 <line:1297:3, col:23> col:13 Reserved 'UINT8[3]'
| |-FieldDecl 0x55887c0fa808 <line:1298:3, col:13> col:13 CntBaseX 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0fa868 <line:1299:3, col:13> col:13 CntEL0BaseX 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0fa8c8 <line:1300:3, col:13> col:13 GTxPhysicalTimerGSIV 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0fbdb0 <line:1301:3, col:13> col:13 GTxPhysicalTimerFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0fbe10 <line:1302:3, col:13> col:13 GTxVirtualTimerGSIV 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0fbe70 <line:1303:3, col:13> col:13 GTxVirtualTimerFlags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0fbed0 <line:1304:3, col:13> col:13 GTxCommonFlags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0fbf78 <line:1295:1, line:1305:3> col:3 EFI_ACPI_5_1_GTDT_GT_BLOCK_TIMER_STRUCTURE 'struct EFI_ACPI_5_1_GTDT_GT_BLOCK_TIMER_STRUCTURE':'EFI_ACPI_5_1_GTDT_GT_BLOCK_TIMER_STRUCTURE'
| |-ElaboratedType 0x55887c0fbf20 'struct EFI_ACPI_5_1_GTDT_GT_BLOCK_TIMER_STRUCTURE' sugar
| | `-RecordType 0x55887c0fa670 'EFI_ACPI_5_1_GTDT_GT_BLOCK_TIMER_STRUCTURE'
| |   `-Record 0x55887c0fa5f0 ''
| `-FullComment 0x55887c436b00 <line:1293:4, col:28>
|   `-ParagraphComment 0x55887c436ad0 <col:4, col:28>
|     `-TextComment 0x55887c436aa0 <col:4, col:28> Text=" GT Block Timer Structure"
|-RecordDecl 0x55887c0fc070 <line:1322:9, line:1330:1> line:1322:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0fc110 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c436bd0 <line:1320:4, col:35>
| | `-ParagraphComment 0x55887c436ba0 <col:4, col:35>
| |   `-TextComment 0x55887c436b70 <col:4, col:35> Text=" SBSA Generic Watchdog Structure"
| |-FieldDecl 0x55887c0fc178 <line:1323:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0fc1d8 <line:1324:3, col:13> col:13 Length 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0fc238 <line:1325:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0fc298 <line:1326:3, col:13> col:13 RefreshFramePhysicalAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0fc2f8 <line:1327:3, col:13> col:13 WatchdogControlFramePhysicalAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c0fc358 <line:1328:3, col:13> col:13 WatchdogTimerGSIV 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0fc3b8 <line:1329:3, col:13> col:13 WatchdogTimerFlags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0fc468 <line:1322:1, line:1330:3> col:3 EFI_ACPI_5_1_GTDT_SBSA_GENERIC_WATCHDOG_STRUCTURE 'struct EFI_ACPI_5_1_GTDT_SBSA_GENERIC_WATCHDOG_STRUCTURE':'EFI_ACPI_5_1_GTDT_SBSA_GENERIC_WATCHDOG_STRUCTURE'
| |-ElaboratedType 0x55887c0fc410 'struct EFI_ACPI_5_1_GTDT_SBSA_GENERIC_WATCHDOG_STRUCTURE' sugar
| | `-RecordType 0x55887c0fc0f0 'EFI_ACPI_5_1_GTDT_SBSA_GENERIC_WATCHDOG_STRUCTURE'
| |   `-Record 0x55887c0fc070 ''
| `-FullComment 0x55887c436ca0 <line:1320:4, col:35>
|   `-ParagraphComment 0x55887c436c70 <col:4, col:35>
|     `-TextComment 0x55887c436c40 <col:4, col:35> Text=" SBSA Generic Watchdog Structure"
|-RecordDecl 0x55887c0fc530 <line:1342:9, line:1346:1> line:1342:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0fc5d0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c436d70 <line:1340:4, col:34>
| | `-ParagraphComment 0x55887c436d40 <col:4, col:34>
| |   `-TextComment 0x55887c436d10 <col:4, col:34> Text=" Boot Error Record Table (BERT)"
| |-FieldDecl 0x55887c0fc638 <line:1343:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c0fc698 <line:1344:3, col:34> col:34 BootErrorRegionLength 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0fc6f8 <line:1345:3, col:34> col:34 BootErrorRegion 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c0fc7a8 <line:1342:1, line:1346:3> col:3 EFI_ACPI_5_1_BOOT_ERROR_RECORD_TABLE_HEADER 'struct EFI_ACPI_5_1_BOOT_ERROR_RECORD_TABLE_HEADER':'EFI_ACPI_5_1_BOOT_ERROR_RECORD_TABLE_HEADER'
| |-ElaboratedType 0x55887c0fc750 'struct EFI_ACPI_5_1_BOOT_ERROR_RECORD_TABLE_HEADER' sugar
| | `-RecordType 0x55887c0fc5b0 'EFI_ACPI_5_1_BOOT_ERROR_RECORD_TABLE_HEADER'
| |   `-Record 0x55887c0fc530 ''
| `-FullComment 0x55887c436e40 <line:1340:4, col:34>
|   `-ParagraphComment 0x55887c436e10 <col:4, col:34>
|     `-TextComment 0x55887c436de0 <col:4, col:34> Text=" Boot Error Record Table (BERT)"
|-RecordDecl 0x55887c0fc870 <line:1356:9, line:1363:1> line:1356:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0fc910 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c436f10 <line:1354:4, col:45>
| | `-ParagraphComment 0x55887c436ee0 <col:4, col:45>
| |   `-TextComment 0x55887c436eb0 <col:4, col:45> Text=" Boot Error Region Block Status Definition"
| |-FieldDecl 0x55887c0fc9b8 <line:1357:3, col:43> col:13 UncorrectableErrorValid 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c0fc998 <col:43> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c0fc968 <col:43> 'int' 1
| |-FieldDecl 0x55887c0fca58 <line:1358:3, col:43> col:13 CorrectableErrorValid 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c0fca38 <col:43> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c0fca08 <col:43> 'int' 1
| |-FieldDecl 0x55887c0fcaf8 <line:1359:3, col:43> col:13 MultipleUncorrectableErrors 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c0fcad8 <col:43> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c0fcaa8 <col:43> 'int' 1
| |-FieldDecl 0x55887c0fcb98 <line:1360:3, col:43> col:13 MultipleCorrectableErrors 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c0fcb78 <col:43> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c0fcb48 <col:43> 'int' 1
| |-FieldDecl 0x55887c0fcc38 <line:1361:3, col:43> col:13 ErrorDataEntryCount 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c0fcc18 <col:43> 'int'
| |   |-value: Int 10
| |   `-IntegerLiteral 0x55887c0fcbe8 <col:43> 'int' 10
| `-FieldDecl 0x55887c0fccd8 <line:1362:3, col:43> col:13 Reserved 'UINT32':'unsigned int'
|   `-ConstantExpr 0x55887c0fccb8 <col:43> 'int'
|     |-value: Int 18
|     `-IntegerLiteral 0x55887c0fcc88 <col:43> 'int' 18
|-TypedefDecl 0x55887c0fcd88 <line:1356:1, line:1363:3> col:3 referenced EFI_ACPI_5_1_ERROR_BLOCK_STATUS 'struct EFI_ACPI_5_1_ERROR_BLOCK_STATUS':'EFI_ACPI_5_1_ERROR_BLOCK_STATUS'
| |-ElaboratedType 0x55887c0fcd30 'struct EFI_ACPI_5_1_ERROR_BLOCK_STATUS' sugar
| | `-RecordType 0x55887c0fc8f0 'EFI_ACPI_5_1_ERROR_BLOCK_STATUS'
| |   `-Record 0x55887c0fc870 ''
| `-FullComment 0x55887c436fe0 <line:1354:4, col:45>
|   `-ParagraphComment 0x55887c436fb0 <col:4, col:45>
|     `-TextComment 0x55887c436f80 <col:4, col:45> Text=" Boot Error Region Block Status Definition"
|-RecordDecl 0x55887c0fce20 <line:1368:9, line:1374:1> line:1368:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0fcec0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4370b0 <line:1366:4, col:32>
| | `-ParagraphComment 0x55887c437080 <col:4, col:32>
| |   `-TextComment 0x55887c437050 <col:4, col:32> Text=" Boot Error Region Definition"
| |-FieldDecl 0x55887c0fcf50 <line:1369:3, col:38> col:38 BlockStatus 'EFI_ACPI_5_1_ERROR_BLOCK_STATUS':'EFI_ACPI_5_1_ERROR_BLOCK_STATUS'
| |-FieldDecl 0x55887c0fcfb0 <line:1370:3, col:38> col:38 RawDataOffset 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0fd010 <line:1371:3, col:38> col:38 RawDataLength 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0fd070 <line:1372:3, col:38> col:38 DataLength 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c0fd0d0 <line:1373:3, col:38> col:38 ErrorSeverity 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0fd1f8 <line:1368:1, line:1374:3> col:3 EFI_ACPI_5_1_BOOT_ERROR_REGION_STRUCTURE 'struct EFI_ACPI_5_1_BOOT_ERROR_REGION_STRUCTURE':'EFI_ACPI_5_1_BOOT_ERROR_REGION_STRUCTURE'
| |-ElaboratedType 0x55887c0fd1a0 'struct EFI_ACPI_5_1_BOOT_ERROR_REGION_STRUCTURE' sugar
| | `-RecordType 0x55887c0fcea0 'EFI_ACPI_5_1_BOOT_ERROR_REGION_STRUCTURE'
| |   `-Record 0x55887c0fce20 ''
| `-FullComment 0x55887c437180 <line:1366:4, col:32>
|   `-ParagraphComment 0x55887c437150 <col:4, col:32>
|     `-TextComment 0x55887c437120 <col:4, col:32> Text=" Boot Error Region Definition"
|-RecordDecl 0x55887c0fd290 <line:1393:9, line:1402:1> line:1393:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0fd330 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c437250 <line:1391:4, col:39>
| | `-ParagraphComment 0x55887c437220 <col:4, col:39>
| |   `-TextComment 0x55887c4371f0 <col:4, col:39> Text=" Generic Error Data Entry Definition"
| |-FieldDecl 0x55887c0fd3e8 <line:1394:3, col:27> col:13 SectionType 'UINT8[16]'
| |-FieldDecl 0x55887c0fd448 <line:1395:3, col:13> col:13 ErrorSeverity 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0fd4a8 <line:1396:3, col:13> col:13 Revision 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0fd508 <line:1397:3, col:13> col:13 ValidationBits 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0fd568 <line:1398:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c0fd5c8 <line:1399:3, col:13> col:13 ErrorDataLength 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c0fd678 <line:1400:3, col:21> col:13 FruId 'UINT8[16]'
| `-FieldDecl 0x55887c0fd728 <line:1401:3, col:23> col:13 FruText 'UINT8[20]'
|-TypedefDecl 0x55887c0fd7d8 <line:1393:1, line:1402:3> col:3 EFI_ACPI_5_1_GENERIC_ERROR_DATA_ENTRY_STRUCTURE 'struct EFI_ACPI_5_1_GENERIC_ERROR_DATA_ENTRY_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ERROR_DATA_ENTRY_STRUCTURE'
| |-ElaboratedType 0x55887c0fd780 'struct EFI_ACPI_5_1_GENERIC_ERROR_DATA_ENTRY_STRUCTURE' sugar
| | `-RecordType 0x55887c0fd310 'EFI_ACPI_5_1_GENERIC_ERROR_DATA_ENTRY_STRUCTURE'
| |   `-Record 0x55887c0fd290 ''
| `-FullComment 0x55887c437320 <line:1391:4, col:39>
|   `-ParagraphComment 0x55887c4372f0 <col:4, col:39>
|     `-TextComment 0x55887c4372c0 <col:4, col:39> Text=" Generic Error Data Entry Definition"
|-RecordDecl 0x55887c0fd8a0 <line:1412:9, line:1415:1> line:1412:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0fd940 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4373f0 <line:1410:4, col:38>
| | `-ParagraphComment 0x55887c4373c0 <col:4, col:38>
| |   `-TextComment 0x55887c437390 <col:4, col:38> Text=" HEST - Hardware Error Source Table"
| |-FieldDecl 0x55887c0fd9a8 <line:1413:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c0fda08 <line:1414:3, col:34> col:34 ErrorSourceCount 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c0fdab8 <line:1412:1, line:1415:3> col:3 EFI_ACPI_5_1_HARDWARE_ERROR_SOURCE_TABLE_HEADER 'struct EFI_ACPI_5_1_HARDWARE_ERROR_SOURCE_TABLE_HEADER':'EFI_ACPI_5_1_HARDWARE_ERROR_SOURCE_TABLE_HEADER'
| |-ElaboratedType 0x55887c0fda60 'struct EFI_ACPI_5_1_HARDWARE_ERROR_SOURCE_TABLE_HEADER' sugar
| | `-RecordType 0x55887c0fd920 'EFI_ACPI_5_1_HARDWARE_ERROR_SOURCE_TABLE_HEADER'
| |   `-Record 0x55887c0fd8a0 ''
| `-FullComment 0x55887c4374c0 <line:1410:4, col:38>
|   `-ParagraphComment 0x55887c437490 <col:4, col:38>
|     `-TextComment 0x55887c437460 <col:4, col:38> Text=" HEST - Hardware Error Source Table"
|-RecordDecl 0x55887c0fdb80 <line:1442:9, line:1454:1> line:1442:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c0fdc20 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c437590 <line:1440:4, col:67>
| | `-ParagraphComment 0x55887c437560 <col:4, col:67>
| |   `-TextComment 0x55887c437530 <col:4, col:67> Text=" IA-32 Architecture Machine Check Exception Structure Definition"
| |-FieldDecl 0x55887c0fdc88 <line:1443:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c0fdce8 <line:1444:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c252700 <line:1445:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c252760 <line:1446:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2527c0 <line:1447:3, col:13> col:13 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c252820 <line:1448:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c252880 <line:1449:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2528e0 <line:1450:3, col:13> col:13 GlobalCapabilityInitData 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c252940 <line:1451:3, col:13> col:13 GlobalControlInitData 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2529a0 <line:1452:3, col:13> col:13 NumberOfHardwareBanks 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c252a50 <line:1453:3, col:24> col:13 Reserved1 'UINT8[7]'
|-TypedefDecl 0x55887c252af8 <line:1442:1, line:1454:3> col:3 EFI_ACPI_5_1_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE 'struct EFI_ACPI_5_1_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE':'EFI_ACPI_5_1_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE'
| |-ElaboratedType 0x55887c252aa0 'struct EFI_ACPI_5_1_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE' sugar
| | `-RecordType 0x55887c0fdc00 'EFI_ACPI_5_1_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE'
| |   `-Record 0x55887c0fdb80 ''
| `-FullComment 0x55887c437660 <line:1440:4, col:67>
|   `-ParagraphComment 0x55887c437630 <col:4, col:67>
|     `-TextComment 0x55887c437600 <col:4, col:67> Text=" IA-32 Architecture Machine Check Exception Structure Definition"
|-RecordDecl 0x55887c252b90 <line:1459:9, line:1469:1> line:1459:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c252c30 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c437730 <line:1457:4, col:62>
| | `-ParagraphComment 0x55887c437700 <col:4, col:62>
| |   `-TextComment 0x55887c4376d0 <col:4, col:62> Text=" IA-32 Architecture Machine Check Bank Structure Definition"
| |-FieldDecl 0x55887c252c98 <line:1460:3, col:13> col:13 BankNumber 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c252cf8 <line:1461:3, col:13> col:13 ClearStatusOnInitialization 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c252d58 <line:1462:3, col:13> col:13 StatusDataFormat 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c252db8 <line:1463:3, col:13> col:13 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c252e18 <line:1464:3, col:13> col:13 ControlRegisterMsrAddress 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c252e78 <line:1465:3, col:13> col:13 ControlInitData 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c252ed8 <line:1466:3, col:13> col:13 StatusRegisterMsrAddress 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c252f38 <line:1467:3, col:13> col:13 AddressRegisterMsrAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c252f98 <line:1468:3, col:13> col:13 MiscRegisterMsrAddress 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c253048 <line:1459:1, line:1469:3> col:3 EFI_ACPI_5_1_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE 'struct EFI_ACPI_5_1_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE':'EFI_ACPI_5_1_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE'
| |-ElaboratedType 0x55887c252ff0 'struct EFI_ACPI_5_1_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE' sugar
| | `-RecordType 0x55887c252c10 'EFI_ACPI_5_1_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE'
| |   `-Record 0x55887c252b90 ''
| `-FullComment 0x55887c437800 <line:1457:4, col:62>
|   `-ParagraphComment 0x55887c4377d0 <col:4, col:62>
|     `-TextComment 0x55887c4377a0 <col:4, col:62> Text=" IA-32 Architecture Machine Check Bank Structure Definition"
|-RecordDecl 0x55887c253110 <line:1490:9, line:1498:1> line:1490:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2531b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4378d0 <line:1488:4, col:79>
| | `-ParagraphComment 0x55887c4378a0 <col:4, col:79>
| |   `-TextComment 0x55887c437870 <col:4, col:79> Text=" Hardware Error Notification Configuration Write Enable Structure Definition"
| |-FieldDecl 0x55887c253258 <line:1491:3, col:46> col:13 Type 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c253238 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c253208 <col:46> 'int' 1
| |-FieldDecl 0x55887c2532f8 <line:1492:3, col:46> col:13 PollInterval 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c2532d8 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c2532a8 <col:46> 'int' 1
| |-FieldDecl 0x55887c253398 <line:1493:3, col:46> col:13 SwitchToPollingThresholdValue 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c253378 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c253348 <col:46> 'int' 1
| |-FieldDecl 0x55887c253438 <line:1494:3, col:46> col:13 SwitchToPollingThresholdWindow 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c253418 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c2533e8 <col:46> 'int' 1
| |-FieldDecl 0x55887c2534d8 <line:1495:3, col:46> col:13 ErrorThresholdValue 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c2534b8 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c253488 <col:46> 'int' 1
| |-FieldDecl 0x55887c253578 <line:1496:3, col:46> col:13 ErrorThresholdWindow 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c253558 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c253528 <col:46> 'int' 1
| `-FieldDecl 0x55887c253618 <line:1497:3, col:46> col:13 Reserved 'UINT16':'unsigned short'
|   `-ConstantExpr 0x55887c2535f8 <col:46> 'int'
|     |-value: Int 10
|     `-IntegerLiteral 0x55887c2535c8 <col:46> 'int' 10
|-TypedefDecl 0x55887c2536c8 <line:1490:1, line:1498:3> col:3 referenced EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE 'struct EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE':'EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE'
| |-ElaboratedType 0x55887c253670 'struct EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE' sugar
| | `-RecordType 0x55887c253190 'EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE'
| |   `-Record 0x55887c253110 ''
| `-FullComment 0x55887c4379a0 <line:1488:4, col:79>
|   `-ParagraphComment 0x55887c437970 <col:4, col:79>
|     `-TextComment 0x55887c437940 <col:4, col:79> Text=" Hardware Error Notification Configuration Write Enable Structure Definition"
|-RecordDecl 0x55887c253760 <line:1503:9, line:1513:1> line:1503:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c253800 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c437a70 <line:1501:4, col:52>
| | `-ParagraphComment 0x55887c437a40 <col:4, col:52>
| |   `-TextComment 0x55887c437a10 <col:4, col:52> Text=" Hardware Error Notification Structure Definition"
| |-FieldDecl 0x55887c253868 <line:1504:3, col:84> col:84 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2538c8 <line:1505:3, col:84> col:84 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c253950 <line:1506:3, col:84> col:84 ConfigurationWriteEnable 'EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE':'EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE'
| |-FieldDecl 0x55887c2539b0 <line:1507:3, col:84> col:84 PollInterval 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c253a10 <line:1508:3, col:84> col:84 Vector 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c253a70 <line:1509:3, col:84> col:84 SwitchToPollingThresholdValue 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c253ad0 <line:1510:3, col:84> col:84 SwitchToPollingThresholdWindow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c253b30 <line:1511:3, col:84> col:84 ErrorThresholdValue 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c253b90 <line:1512:3, col:84> col:84 ErrorThresholdWindow 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c253c38 <line:1503:1, line:1513:3> col:3 referenced EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_STRUCTURE 'struct EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_STRUCTURE':'EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_STRUCTURE'
| |-ElaboratedType 0x55887c253be0 'struct EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_STRUCTURE' sugar
| | `-RecordType 0x55887c2537e0 'EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_STRUCTURE'
| |   `-Record 0x55887c253760 ''
| `-FullComment 0x55887c437b40 <line:1501:4, col:52>
|   `-ParagraphComment 0x55887c437b10 <col:4, col:52>
|     `-TextComment 0x55887c437ae0 <col:4, col:52> Text=" Hardware Error Notification Structure Definition"
|-RecordDecl 0x55887c253cd0 <line:1518:9, line:1529:1> line:1518:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c253d70 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c437c10 <line:1516:4, col:67>
| | `-ParagraphComment 0x55887c437be0 <col:4, col:67>
| |   `-TextComment 0x55887c437bb0 <col:4, col:67> Text=" IA-32 Architecture Corrected Machine Check Structure Definition"
| |-FieldDecl 0x55887c253dd8 <line:1519:3, col:57> col:57 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c253e38 <line:1520:3, col:57> col:57 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c253ee8 <line:1521:3, col:68> col:57 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c253f48 <line:1522:3, col:57> col:57 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c253fa8 <line:1523:3, col:57> col:57 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c254008 <line:1524:3, col:57> col:57 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c254068 <line:1525:3, col:57> col:57 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2540f0 <line:1526:3, col:57> col:57 NotificationStructure 'EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_STRUCTURE':'EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_STRUCTURE'
| |-FieldDecl 0x55887c254150 <line:1527:3, col:57> col:57 NumberOfHardwareBanks 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c254200 <line:1528:3, col:68> col:57 Reserved1 'UINT8[3]'
|-TypedefDecl 0x55887c2542a8 <line:1518:1, line:1529:3> col:3 EFI_ACPI_5_1_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE 'struct EFI_ACPI_5_1_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE':'EFI_ACPI_5_1_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE'
| |-ElaboratedType 0x55887c254250 'struct EFI_ACPI_5_1_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE' sugar
| | `-RecordType 0x55887c253d50 'EFI_ACPI_5_1_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE'
| |   `-Record 0x55887c253cd0 ''
| `-FullComment 0x55887c437ce0 <line:1516:4, col:67>
|   `-ParagraphComment 0x55887c437cb0 <col:4, col:67>
|     `-TextComment 0x55887c437c80 <col:4, col:67> Text=" IA-32 Architecture Corrected Machine Check Structure Definition"
|-RecordDecl 0x55887c254340 <line:1534:9, line:1541:1> line:1534:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2543e0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c437db0 <line:1532:4, col:53>
| | `-ParagraphComment 0x55887c437d80 <col:4, col:53>
| |   `-TextComment 0x55887c437d50 <col:4, col:53> Text=" IA-32 Architecture NMI Error Structure Definition"
| |-FieldDecl 0x55887c254448 <line:1535:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2544a8 <line:1536:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c254558 <line:1537:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c2545b8 <line:1538:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c254618 <line:1539:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c254678 <line:1540:3, col:13> col:13 MaxRawDataLength 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c1602f8 <line:1534:1, line:1541:3> col:3 EFI_ACPI_5_1_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE 'struct EFI_ACPI_5_1_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE':'EFI_ACPI_5_1_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE'
| |-ElaboratedType 0x55887c1602a0 'struct EFI_ACPI_5_1_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE' sugar
| | `-RecordType 0x55887c2543c0 'EFI_ACPI_5_1_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE'
| |   `-Record 0x55887c254340 ''
| `-FullComment 0x55887c437e80 <line:1532:4, col:53>
|   `-ParagraphComment 0x55887c437e50 <col:4, col:53>
|     `-TextComment 0x55887c437e20 <col:4, col:53> Text=" IA-32 Architecture NMI Error Structure Definition"
|-RecordDecl 0x55887c160390 <line:1546:9, line:1564:1> line:1546:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c160430 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c437f50 <line:1544:4, col:50>
| | `-ParagraphComment 0x55887c437f20 <col:4, col:50>
| |   `-TextComment 0x55887c437ef0 <col:4, col:50> Text=" PCI Express Root Port AER Structure Definition"
| |-FieldDecl 0x55887c160498 <line:1547:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1604f8 <line:1548:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1605a8 <line:1549:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c160608 <line:1550:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c160668 <line:1551:3, col:13> col:13 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1606c8 <line:1552:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c160728 <line:1553:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c160788 <line:1554:3, col:13> col:13 Bus 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1607e8 <line:1555:3, col:13> col:13 Device 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c160848 <line:1556:3, col:13> col:13 Function 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1608a8 <line:1557:3, col:13> col:13 DeviceControl 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c160958 <line:1558:3, col:24> col:13 Reserved1 'UINT8[2]'
| |-FieldDecl 0x55887c1609b8 <line:1559:3, col:13> col:13 UncorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c160a18 <line:1560:3, col:13> col:13 UncorrectableErrorSeverity 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c160a78 <line:1561:3, col:13> col:13 CorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c160ad8 <line:1562:3, col:13> col:13 AdvancedErrorCapabilitiesAndControl 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c160b38 <line:1563:3, col:13> col:13 RootErrorCommand 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c160be8 <line:1546:1, line:1564:3> col:3 EFI_ACPI_5_1_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE 'struct EFI_ACPI_5_1_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE':'EFI_ACPI_5_1_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE'
| |-ElaboratedType 0x55887c160b90 'struct EFI_ACPI_5_1_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE' sugar
| | `-RecordType 0x55887c160410 'EFI_ACPI_5_1_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE'
| |   `-Record 0x55887c160390 ''
| `-FullComment 0x55887c438020 <line:1544:4, col:50>
|   `-ParagraphComment 0x55887c437ff0 <col:4, col:50>
|     `-TextComment 0x55887c437fc0 <col:4, col:50> Text=" PCI Express Root Port AER Structure Definition"
|-RecordDecl 0x55887c160c80 <line:1569:9, line:1586:1> line:1569:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c160d20 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4380f0 <line:1567:4, col:47>
| | `-ParagraphComment 0x55887c4380c0 <col:4, col:47>
| |   `-TextComment 0x55887c438090 <col:4, col:47> Text=" PCI Express Device AER Structure Definition"
| |-FieldDecl 0x55887c160d88 <line:1570:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c160de8 <line:1571:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c160e98 <line:1572:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c160ef8 <line:1573:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c160f58 <line:1574:3, col:13> col:13 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c160fb8 <line:1575:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c161018 <line:1576:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c161078 <line:1577:3, col:13> col:13 Bus 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1610d8 <line:1578:3, col:13> col:13 Device 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c161138 <line:1579:3, col:13> col:13 Function 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c161198 <line:1580:3, col:13> col:13 DeviceControl 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c161248 <line:1581:3, col:24> col:13 Reserved1 'UINT8[2]'
| |-FieldDecl 0x55887c1612a8 <line:1582:3, col:13> col:13 UncorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c161308 <line:1583:3, col:13> col:13 UncorrectableErrorSeverity 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c161368 <line:1584:3, col:13> col:13 CorrectableErrorMask 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c1613c8 <line:1585:3, col:13> col:13 AdvancedErrorCapabilitiesAndControl 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c161478 <line:1569:1, line:1586:3> col:3 EFI_ACPI_5_1_PCI_EXPRESS_DEVICE_AER_STRUCTURE 'struct EFI_ACPI_5_1_PCI_EXPRESS_DEVICE_AER_STRUCTURE':'EFI_ACPI_5_1_PCI_EXPRESS_DEVICE_AER_STRUCTURE'
| |-ElaboratedType 0x55887c161420 'struct EFI_ACPI_5_1_PCI_EXPRESS_DEVICE_AER_STRUCTURE' sugar
| | `-RecordType 0x55887c160d00 'EFI_ACPI_5_1_PCI_EXPRESS_DEVICE_AER_STRUCTURE'
| |   `-Record 0x55887c160c80 ''
| `-FullComment 0x55887c4381c0 <line:1567:4, col:47>
|   `-ParagraphComment 0x55887c438190 <col:4, col:47>
|     `-TextComment 0x55887c438160 <col:4, col:47> Text=" PCI Express Device AER Structure Definition"
|-RecordDecl 0x55887c161510 <line:1591:9, line:1611:1> line:1591:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c1615b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c438290 <line:1589:4, col:47>
| | `-ParagraphComment 0x55887c438260 <col:4, col:47>
| |   `-TextComment 0x55887c438230 <col:4, col:47> Text=" PCI Express Bridge AER Structure Definition"
| |-FieldDecl 0x55887c161618 <line:1592:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c161678 <line:1593:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c161728 <line:1594:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c161788 <line:1595:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1617e8 <line:1596:3, col:13> col:13 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c161848 <line:1597:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c1618a8 <line:1598:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c161908 <line:1599:3, col:13> col:13 Bus 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c161968 <line:1600:3, col:13> col:13 Device 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1619c8 <line:1601:3, col:13> col:13 Function 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c161a28 <line:1602:3, col:13> col:13 DeviceControl 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c161ad8 <line:1603:3, col:24> col:13 Reserved1 'UINT8[2]'
| |-FieldDecl 0x55887c161b38 <line:1604:3, col:13> col:13 UncorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c161b98 <line:1605:3, col:13> col:13 UncorrectableErrorSeverity 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c161bf8 <line:1606:3, col:13> col:13 CorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c161c58 <line:1607:3, col:13> col:13 AdvancedErrorCapabilitiesAndControl 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c161cb8 <line:1608:3, col:13> col:13 SecondaryUncorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c161d18 <line:1609:3, col:13> col:13 SecondaryUncorrectableErrorSeverity 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c161d78 <line:1610:3, col:13> col:13 SecondaryAdvancedErrorCapabilitiesAndControl 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c161e28 <line:1591:1, line:1611:3> col:3 EFI_ACPI_5_1_PCI_EXPRESS_BRIDGE_AER_STRUCTURE 'struct EFI_ACPI_5_1_PCI_EXPRESS_BRIDGE_AER_STRUCTURE':'EFI_ACPI_5_1_PCI_EXPRESS_BRIDGE_AER_STRUCTURE'
| |-ElaboratedType 0x55887c161dd0 'struct EFI_ACPI_5_1_PCI_EXPRESS_BRIDGE_AER_STRUCTURE' sugar
| | `-RecordType 0x55887c161590 'EFI_ACPI_5_1_PCI_EXPRESS_BRIDGE_AER_STRUCTURE'
| |   `-Record 0x55887c161510 ''
| `-FullComment 0x55887c438360 <line:1589:4, col:47>
|   `-ParagraphComment 0x55887c438330 <col:4, col:47>
|     `-TextComment 0x55887c438300 <col:4, col:47> Text=" PCI Express Bridge AER Structure Definition"
|-RecordDecl 0x55887c161ec0 <line:1616:9, line:1628:1> line:1616:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c161f60 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c438430 <line:1614:4, col:54>
| | `-ParagraphComment 0x55887c438400 <col:4, col:54>
| |   `-TextComment 0x55887c4383d0 <col:4, col:54> Text=" Generic Hardware Error Source Structure Definition"
| |-FieldDecl 0x55887c161fc8 <line:1617:3, col:57> col:57 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c162028 <line:1618:3, col:57> col:57 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c162088 <line:1619:3, col:57> col:57 RelatedSourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c1620e8 <line:1620:3, col:57> col:57 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c162148 <line:1621:3, col:57> col:57 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c1621a8 <line:1622:3, col:57> col:57 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c162208 <line:1623:3, col:57> col:57 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c25c710 <line:1624:3, col:57> col:57 MaxRawDataLength 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c25c770 <line:1625:3, col:57> col:57 ErrorStatusAddress 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c25c7d0 <line:1626:3, col:57> col:57 NotificationStructure 'EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_STRUCTURE':'EFI_ACPI_5_1_HARDWARE_ERROR_NOTIFICATION_STRUCTURE'
| `-FieldDecl 0x55887c25c830 <line:1627:3, col:57> col:57 ErrorStatusBlockLength 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c25c8d8 <line:1616:1, line:1628:3> col:3 EFI_ACPI_5_1_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE 'struct EFI_ACPI_5_1_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE':'EFI_ACPI_5_1_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE'
| |-ElaboratedType 0x55887c25c880 'struct EFI_ACPI_5_1_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE' sugar
| | `-RecordType 0x55887c161f40 'EFI_ACPI_5_1_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE'
| |   `-Record 0x55887c161ec0 ''
| `-FullComment 0x55887c438500 <line:1614:4, col:54>
|   `-ParagraphComment 0x55887c4384d0 <col:4, col:54>
|     `-TextComment 0x55887c4384a0 <col:4, col:54> Text=" Generic Hardware Error Source Structure Definition"
|-RecordDecl 0x55887c25c970 <line:1633:9, line:1639:1> line:1633:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c25ca10 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4385d0 <line:1631:4, col:35>
| | `-ParagraphComment 0x55887c4385a0 <col:4, col:35>
| |   `-TextComment 0x55887c438570 <col:4, col:35> Text=" Generic Error Status Definition"
| |-FieldDecl 0x55887c25ca78 <line:1634:3, col:38> col:38 BlockStatus 'EFI_ACPI_5_1_ERROR_BLOCK_STATUS':'EFI_ACPI_5_1_ERROR_BLOCK_STATUS'
| |-FieldDecl 0x55887c25cad8 <line:1635:3, col:38> col:38 RawDataOffset 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c25cb38 <line:1636:3, col:38> col:38 RawDataLength 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c25cb98 <line:1637:3, col:38> col:38 DataLength 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c25cbf8 <line:1638:3, col:38> col:38 ErrorSeverity 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c25cca8 <line:1633:1, line:1639:3> col:3 EFI_ACPI_5_1_GENERIC_ERROR_STATUS_STRUCTURE 'struct EFI_ACPI_5_1_GENERIC_ERROR_STATUS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ERROR_STATUS_STRUCTURE'
| |-ElaboratedType 0x55887c25cc50 'struct EFI_ACPI_5_1_GENERIC_ERROR_STATUS_STRUCTURE' sugar
| | `-RecordType 0x55887c25c9f0 'EFI_ACPI_5_1_GENERIC_ERROR_STATUS_STRUCTURE'
| |   `-Record 0x55887c25c970 ''
| `-FullComment 0x55887c4386a0 <line:1631:4, col:35>
|   `-ParagraphComment 0x55887c438670 <col:4, col:35>
|     `-TextComment 0x55887c438640 <col:4, col:35> Text=" Generic Error Status Definition"
|-RecordDecl 0x55887c25cd40 <line:1644:9, line:1649:1> line:1644:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c25cde0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c438770 <line:1642:4, col:43>
| | `-ParagraphComment 0x55887c438740 <col:4, col:43>
| |   `-TextComment 0x55887c438710 <col:4, col:43> Text=" ERST - Error Record Serialization Table"
| |-FieldDecl 0x55887c25ce48 <line:1645:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c25cea8 <line:1646:3, col:34> col:34 SerializationHeaderSize 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c25cf58 <line:1647:3, col:45> col:34 Reserved0 'UINT8[4]'
| `-FieldDecl 0x55887c25cfb8 <line:1648:3, col:34> col:34 InstructionEntryCount 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c25d068 <line:1644:1, line:1649:3> col:3 EFI_ACPI_5_1_ERROR_RECORD_SERIALIZATION_TABLE_HEADER 'struct EFI_ACPI_5_1_ERROR_RECORD_SERIALIZATION_TABLE_HEADER':'EFI_ACPI_5_1_ERROR_RECORD_SERIALIZATION_TABLE_HEADER'
| |-ElaboratedType 0x55887c25d010 'struct EFI_ACPI_5_1_ERROR_RECORD_SERIALIZATION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c25cdc0 'EFI_ACPI_5_1_ERROR_RECORD_SERIALIZATION_TABLE_HEADER'
| |   `-Record 0x55887c25cd40 ''
| `-FullComment 0x55887c438840 <line:1642:4, col:43>
|   `-ParagraphComment 0x55887c438810 <col:4, col:43>
|     `-TextComment 0x55887c4387e0 <col:4, col:43> Text=" ERST - Error Record Serialization Table"
|-RecordDecl 0x55887c25d1f0 <line:1716:9, line:1724:1> line:1716:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c25d290 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c438910 <line:1714:4, col:40>
| | `-ParagraphComment 0x55887c4388e0 <col:4, col:40>
| |   `-TextComment 0x55887c4388b0 <col:4, col:40> Text=" ERST Serialization Instruction Entry"
| |-FieldDecl 0x55887c25d2f8 <line:1717:3, col:45> col:45 SerializationAction 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c25d358 <line:1718:3, col:45> col:45 Instruction 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c25d3b8 <line:1719:3, col:45> col:45 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c25d418 <line:1720:3, col:45> col:45 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c25d478 <line:1721:3, col:45> col:45 RegisterRegion 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c25d4d8 <line:1722:3, col:45> col:45 Value 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c25d538 <line:1723:3, col:45> col:45 Mask 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c25d5e8 <line:1716:1, line:1724:3> col:3 EFI_ACPI_5_1_ERST_SERIALIZATION_INSTRUCTION_ENTRY 'struct EFI_ACPI_5_1_ERST_SERIALIZATION_INSTRUCTION_ENTRY':'EFI_ACPI_5_1_ERST_SERIALIZATION_INSTRUCTION_ENTRY'
| |-ElaboratedType 0x55887c25d590 'struct EFI_ACPI_5_1_ERST_SERIALIZATION_INSTRUCTION_ENTRY' sugar
| | `-RecordType 0x55887c25d270 'EFI_ACPI_5_1_ERST_SERIALIZATION_INSTRUCTION_ENTRY'
| |   `-Record 0x55887c25d1f0 ''
| `-FullComment 0x55887c4389e0 <line:1714:4, col:40>
|   `-ParagraphComment 0x55887c4389b0 <col:4, col:40>
|     `-TextComment 0x55887c438980 <col:4, col:40> Text=" ERST Serialization Instruction Entry"
|-RecordDecl 0x55887c25d680 <line:1729:9, line:1735:1> line:1729:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c25d720 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c438ab0 <line:1727:4, col:32>
| | `-ParagraphComment 0x55887c438a80 <col:4, col:32>
| |   `-TextComment 0x55887c438a50 <col:4, col:32> Text=" EINJ - Error Injection Table"
| |-FieldDecl 0x55887c25d788 <line:1730:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c25d7e8 <line:1731:3, col:34> col:34 InjectionHeaderSize 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c25d848 <line:1732:3, col:34> col:34 InjectionFlags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c25d8f8 <line:1733:3, col:45> col:34 Reserved0 'UINT8[3]'
| `-FieldDecl 0x55887c25d958 <line:1734:3, col:34> col:34 InjectionEntryCount 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c25da08 <line:1729:1, line:1735:3> col:3 EFI_ACPI_5_1_ERROR_INJECTION_TABLE_HEADER 'struct EFI_ACPI_5_1_ERROR_INJECTION_TABLE_HEADER':'EFI_ACPI_5_1_ERROR_INJECTION_TABLE_HEADER'
| |-ElaboratedType 0x55887c25d9b0 'struct EFI_ACPI_5_1_ERROR_INJECTION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c25d700 'EFI_ACPI_5_1_ERROR_INJECTION_TABLE_HEADER'
| |   `-Record 0x55887c25d680 ''
| `-FullComment 0x55887c438b80 <line:1727:4, col:32>
|   `-ParagraphComment 0x55887c438b50 <col:4, col:32>
|     `-TextComment 0x55887c438b20 <col:4, col:32> Text=" EINJ - Error Injection Table"
|-RecordDecl 0x55887c25dbc0 <line:1795:9, line:1803:1> line:1795:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c25dc60 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c438c50 <line:1793:4, col:36>
| | `-ParagraphComment 0x55887c438c20 <col:4, col:36>
| |   `-TextComment 0x55887c438bf0 <col:4, col:36> Text=" EINJ Injection Instruction Entry"
| |-FieldDecl 0x55887c25dcc8 <line:1796:3, col:45> col:45 InjectionAction 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c25dd28 <line:1797:3, col:45> col:45 Instruction 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c25dd88 <line:1798:3, col:45> col:45 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c25dde8 <line:1799:3, col:45> col:45 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c25de48 <line:1800:3, col:45> col:45 RegisterRegion 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c25dea8 <line:1801:3, col:45> col:45 Value 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c25df08 <line:1802:3, col:45> col:45 Mask 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c25dfb8 <line:1795:1, line:1803:3> col:3 EFI_ACPI_5_1_EINJ_INJECTION_INSTRUCTION_ENTRY 'struct EFI_ACPI_5_1_EINJ_INJECTION_INSTRUCTION_ENTRY':'EFI_ACPI_5_1_EINJ_INJECTION_INSTRUCTION_ENTRY'
| |-ElaboratedType 0x55887c25df60 'struct EFI_ACPI_5_1_EINJ_INJECTION_INSTRUCTION_ENTRY' sugar
| | `-RecordType 0x55887c25dc40 'EFI_ACPI_5_1_EINJ_INJECTION_INSTRUCTION_ENTRY'
| |   `-Record 0x55887c25dbc0 ''
| `-FullComment 0x55887c438d20 <line:1793:4, col:36>
|   `-ParagraphComment 0x55887c438cf0 <col:4, col:36>
|     `-TextComment 0x55887c438cc0 <col:4, col:36> Text=" EINJ Injection Instruction Entry"
|-RecordDecl 0x55887c25e050 <line:1808:9, line:1813:1> line:1808:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c25e0f0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c438df0 <line:1806:4, col:29>
| | `-ParagraphComment 0x55887c438dc0 <col:4, col:29>
| |   `-TextComment 0x55887c438d90 <col:4, col:29> Text=" EINJ Trigger Action Table"
| |-FieldDecl 0x55887c25e158 <line:1809:3, col:13> col:13 HeaderSize 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c25e1b8 <line:1810:3, col:13> col:13 Revision 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c25e218 <line:1811:3, col:13> col:13 TableSize 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c25e278 <line:1812:3, col:13> col:13 EntryCount 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c25e328 <line:1808:1, line:1813:3> col:3 EFI_ACPI_5_1_EINJ_TRIGGER_ACTION_TABLE 'struct EFI_ACPI_5_1_EINJ_TRIGGER_ACTION_TABLE':'EFI_ACPI_5_1_EINJ_TRIGGER_ACTION_TABLE'
| |-ElaboratedType 0x55887c25e2d0 'struct EFI_ACPI_5_1_EINJ_TRIGGER_ACTION_TABLE' sugar
| | `-RecordType 0x55887c25e0d0 'EFI_ACPI_5_1_EINJ_TRIGGER_ACTION_TABLE'
| |   `-Record 0x55887c25e050 ''
| `-FullComment 0x55887c438ec0 <line:1806:4, col:29>
|   `-ParagraphComment 0x55887c438e90 <col:4, col:29>
|     `-TextComment 0x55887c438e60 <col:4, col:29> Text=" EINJ Trigger Action Table"
|-RecordDecl 0x55887c25e3c0 <line:1818:9, line:1822:1> line:1818:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c25e460 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c438f90 <line:1816:4, col:48>
| | `-ParagraphComment 0x55887c438f60 <col:4, col:48>
| |   `-TextComment 0x55887c438f30 <col:4, col:48> Text=" Platform Communications Channel Table (PCCT)"
| |-FieldDecl 0x55887c25e4c8 <line:1819:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c25e528 <line:1820:3, col:34> col:34 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c25e588 <line:1821:3, col:34> col:34 Reserved 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c25e638 <line:1818:1, line:1822:3> col:3 EFI_ACPI_5_1_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER 'struct EFI_ACPI_5_1_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER':'EFI_ACPI_5_1_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER'
| |-ElaboratedType 0x55887c25e5e0 'struct EFI_ACPI_5_1_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER' sugar
| | `-RecordType 0x55887c25e440 'EFI_ACPI_5_1_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER'
| |   `-Record 0x55887c25e3c0 ''
| `-FullComment 0x55887c439060 <line:1816:4, col:48>
|   `-ParagraphComment 0x55887c439030 <col:4, col:48>
|     `-TextComment 0x55887c439000 <col:4, col:48> Text=" Platform Communications Channel Table (PCCT)"
|-RecordDecl 0x55887c262790 <line:1842:9, line:1845:1> line:1842:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c262830 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c439130 <line:1840:4, col:33>
| | `-ParagraphComment 0x55887c439100 <col:4, col:33>
| |   `-TextComment 0x55887c4390d0 <col:4, col:33> Text=" PCC Subspace Structure Header"
| |-FieldDecl 0x55887c262898 <line:1843:3, col:12> col:12 Type 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c2628f8 <line:1844:3, col:12> col:12 Length 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c2629a8 <line:1842:1, line:1845:3> col:3 EFI_ACPI_5_1_PCCT_SUBSPACE_HEADER 'struct EFI_ACPI_5_1_PCCT_SUBSPACE_HEADER':'EFI_ACPI_5_1_PCCT_SUBSPACE_HEADER'
| |-ElaboratedType 0x55887c262950 'struct EFI_ACPI_5_1_PCCT_SUBSPACE_HEADER' sugar
| | `-RecordType 0x55887c262810 'EFI_ACPI_5_1_PCCT_SUBSPACE_HEADER'
| |   `-Record 0x55887c262790 ''
| `-FullComment 0x55887c439200 <line:1840:4, col:33>
|   `-ParagraphComment 0x55887c4391d0 <col:4, col:33>
|     `-TextComment 0x55887c4391a0 <col:4, col:33> Text=" PCC Subspace Structure Header"
|-RecordDecl 0x55887c262a40 <line:1850:9, line:1862:1> line:1850:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c262ae0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4392d0 <line:1848:4, col:45>
| | `-ParagraphComment 0x55887c4392a0 <col:4, col:45>
| |   `-TextComment 0x55887c439270 <col:4, col:45> Text=" Generic Communications Subspace Structure"
| |-FieldDecl 0x55887c262b48 <line:1851:3, col:45> col:45 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c262ba8 <line:1852:3, col:45> col:45 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c262c58 <line:1853:3, col:55> col:45 Reserved 'UINT8[6]'
| |-FieldDecl 0x55887c262cb8 <line:1854:3, col:45> col:45 BaseAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c262d18 <line:1855:3, col:45> col:45 AddressLength 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c262d78 <line:1856:3, col:45> col:45 DoorbellRegister 'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_5_1_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c262dd8 <line:1857:3, col:45> col:45 DoorbellPreserve 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c262e38 <line:1858:3, col:45> col:45 DoorbellWrite 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c262e98 <line:1859:3, col:45> col:45 NominalLatency 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c262ef8 <line:1860:3, col:45> col:45 MaximumPeriodicAccessRate 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c262f58 <line:1861:3, col:45> col:45 MinimumRequestTurnaroundTime 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c263008 <line:1850:1, line:1862:3> col:3 EFI_ACPI_5_1_PCCT_SUBSPACE_GENERIC 'struct EFI_ACPI_5_1_PCCT_SUBSPACE_GENERIC':'EFI_ACPI_5_1_PCCT_SUBSPACE_GENERIC'
| |-ElaboratedType 0x55887c262fb0 'struct EFI_ACPI_5_1_PCCT_SUBSPACE_GENERIC' sugar
| | `-RecordType 0x55887c262ac0 'EFI_ACPI_5_1_PCCT_SUBSPACE_GENERIC'
| |   `-Record 0x55887c262a40 ''
| `-FullComment 0x55887c4393a0 <line:1848:4, col:45>
|   `-ParagraphComment 0x55887c439370 <col:4, col:45>
|     `-TextComment 0x55887c439340 <col:4, col:45> Text=" Generic Communications Subspace Structure"
|-RecordDecl 0x55887c2630a0 <line:1868:9, line:1872:1> line:1868:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c263140 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c439470 <line:1865:4, col:55>
| | `-ParagraphComment 0x55887c439440 <col:4, col:55>
| |   `-TextComment 0x55887c439410 <col:4, col:55> Text=" Generic Communications Channel Shared Memory Region"
| |-FieldDecl 0x55887c2631a8 <line:1869:3, col:12> col:12 Command 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c263248 <line:1870:3, col:26> col:12 Reserved 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c263228 <col:26> 'int'
| |   |-value: Int 7
| |   `-IntegerLiteral 0x55887c2631f8 <col:26> 'int' 7
| `-FieldDecl 0x55887c2632e8 <line:1871:3, col:26> col:12 GenerateSci 'UINT8':'unsigned char'
|   `-ConstantExpr 0x55887c2632c8 <col:26> 'int'
|     |-value: Int 1
|     `-IntegerLiteral 0x55887c263298 <col:26> 'int' 1
|-TypedefDecl 0x55887c263398 <line:1868:1, line:1872:3> col:3 referenced EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND 'struct EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND':'EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND'
| |-ElaboratedType 0x55887c263340 'struct EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND' sugar
| | `-RecordType 0x55887c263120 'EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND'
| |   `-Record 0x55887c2630a0 ''
| `-FullComment 0x55887c439540 <line:1865:4, col:55>
|   `-ParagraphComment 0x55887c439510 <col:4, col:55>
|     `-TextComment 0x55887c4394e0 <col:4, col:55> Text=" Generic Communications Channel Shared Memory Region"
|-RecordDecl 0x55887c263408 <line:1874:9, line:1881:1> line:1874:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2634b0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c263558 <line:1875:3, col:35> col:12 CommandComplete 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c263538 <col:35> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c263508 <col:35> 'int' 1
| |-FieldDecl 0x55887c2635f8 <line:1876:3, col:35> col:12 SciDoorbell 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c2635d8 <col:35> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c2635a8 <col:35> 'int' 1
| |-FieldDecl 0x55887c263698 <line:1877:3, col:35> col:12 Error 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c263678 <col:35> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c263648 <col:35> 'int' 1
| |-FieldDecl 0x55887c263738 <line:1878:3, col:35> col:12 PlatformNotification 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c263718 <col:35> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c2636e8 <col:35> 'int' 1
| |-FieldDecl 0x55887c2637d8 <line:1879:3, col:35> col:12 Reserved 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c2637b8 <col:35> 'int'
| |   |-value: Int 4
| |   `-IntegerLiteral 0x55887c263788 <col:35> 'int' 4
| `-FieldDecl 0x55887c263838 <line:1880:3, col:12> col:12 Reserved1 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c2638e8 <line:1874:1, line:1881:3> col:3 referenced EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS 'struct EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS':'EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS'
| `-ElaboratedType 0x55887c263890 'struct EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS' sugar
|   `-RecordType 0x55887c263490 'EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS'
|     `-Record 0x55887c263408 ''
|-RecordDecl 0x55887c263958 <line:1883:9, line:1887:1> line:1883:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c263a00 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c263a68 <line:1884:3, col:61> col:61 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c263af0 <line:1885:3, col:61> col:61 Command 'EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND':'EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND'
| `-FieldDecl 0x55887c263b70 <line:1886:3, col:61> col:61 Status 'EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS':'EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS'
|-TypedefDecl 0x55887c263c18 <line:1883:1, line:1887:3> col:3 EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER 'struct EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER':'EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER'
| `-ElaboratedType 0x55887c263bc0 'struct EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER' sugar
|   `-RecordType 0x55887c2639e0 'EFI_ACPI_5_1_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER'
|     `-Record 0x55887c263958 ''
|-RecordDecl 0x55887c264628 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/IndustryStandard/Acpi60.h:23:9, line:29:1> line:23:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2646d0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c439610 <line:21:4, col:45>
| | `-ParagraphComment 0x55887c4395e0 <col:4, col:45>
| |   `-TextComment 0x55887c4395b0 <col:4, col:45> Text=" ACPI 6.0 Generic Address Space definition"
| |-FieldDecl 0x55887c2687a0 <line:24:3, col:13> col:13 AddressSpaceId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c268800 <line:25:3, col:13> col:13 RegisterBitWidth 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c268860 <line:26:3, col:13> col:13 RegisterBitOffset 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2688c0 <line:27:3, col:13> col:13 AccessSize 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c268920 <line:28:3, col:13> col:13 Address 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c2689c8 <line:23:1, line:29:3> col:3 referenced EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE 'struct EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-ElaboratedType 0x55887c268970 'struct EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE' sugar
| | `-RecordType 0x55887c2646b0 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |   `-Record 0x55887c264628 ''
| `-FullComment 0x55887c4396e0 <line:21:4, col:45>
|   `-ParagraphComment 0x55887c4396b0 <col:4, col:45>
|     `-TextComment 0x55887c439680 <col:4, col:45> Text=" ACPI 6.0 Generic Address Space definition"
|-RecordDecl 0x55887c268a60 <line:58:9, line:68:1> line:58:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c268b00 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4397b0 <line:56:4, col:45>
| | `-ParagraphComment 0x55887c439780 <col:4, col:45>
| |   `-TextComment 0x55887c439750 <col:4, col:45> Text=" Root System Description Pointer Structure"
| |-FieldDecl 0x55887c268b68 <line:59:3, col:13> col:13 Signature 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c268bc8 <line:60:3, col:13> col:13 Checksum 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c268c78 <line:61:3, col:20> col:13 OemId 'UINT8[6]'
| |-FieldDecl 0x55887c268cd8 <line:62:3, col:13> col:13 Revision 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c268d38 <line:63:3, col:13> col:13 RsdtAddress 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c268d98 <line:64:3, col:13> col:13 Length 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c268df8 <line:65:3, col:13> col:13 XsdtAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c268e58 <line:66:3, col:13> col:13 ExtendedChecksum 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c268f08 <line:67:3, col:23> col:13 Reserved 'UINT8[3]'
|-TypedefDecl 0x55887c268fb8 <line:58:1, line:68:3> col:3 EFI_ACPI_6_0_ROOT_SYSTEM_DESCRIPTION_POINTER 'struct EFI_ACPI_6_0_ROOT_SYSTEM_DESCRIPTION_POINTER':'EFI_ACPI_6_0_ROOT_SYSTEM_DESCRIPTION_POINTER'
| |-ElaboratedType 0x55887c268f60 'struct EFI_ACPI_6_0_ROOT_SYSTEM_DESCRIPTION_POINTER' sugar
| | `-RecordType 0x55887c268ae0 'EFI_ACPI_6_0_ROOT_SYSTEM_DESCRIPTION_POINTER'
| |   `-Record 0x55887c268a60 ''
| `-FullComment 0x55887c439880 <line:56:4, col:45>
|   `-ParagraphComment 0x55887c439850 <col:4, col:45>
|     `-TextComment 0x55887c439820 <col:4, col:45> Text=" Root System Description Pointer Structure"
|-RecordDecl 0x55887c2690b0 <line:79:9, line:82:1> line:79:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c269150 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c439970 <line:76:4, line:77:35>
| | `-ParagraphComment 0x55887c439940 <line:76:4, line:77:35>
| |   |-TextComment 0x55887c4398f0 <line:76:4, col:75> Text=" Common table header, this prefaces all ACPI tables, including FACS, but"
| |   `-TextComment 0x55887c439910 <line:77:4, col:35> Text=" excluding the RSD PTR structure"
| |-FieldDecl 0x55887c2691b8 <line:80:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c269218 <line:81:3, col:13> col:13 Length 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c2692c8 <line:79:1, line:82:3> col:3 EFI_ACPI_6_0_COMMON_HEADER 'struct EFI_ACPI_6_0_COMMON_HEADER':'EFI_ACPI_6_0_COMMON_HEADER'
| |-ElaboratedType 0x55887c269270 'struct EFI_ACPI_6_0_COMMON_HEADER' sugar
| | `-RecordType 0x55887c269130 'EFI_ACPI_6_0_COMMON_HEADER'
| |   `-Record 0x55887c2690b0 ''
| `-FullComment 0x55887c439a60 <line:76:4, line:77:35>
|   `-ParagraphComment 0x55887c439a30 <line:76:4, line:77:35>
|     |-TextComment 0x55887c4399e0 <line:76:4, col:75> Text=" Common table header, this prefaces all ACPI tables, including FACS, but"
|     `-TextComment 0x55887c439a00 <line:77:4, col:35> Text=" excluding the RSD PTR structure"
|-RecordDecl 0x55887c2693c0 <line:109:9, line:166:1> line:109:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c269460 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c439b30 <line:107:4, col:49>
| | `-ParagraphComment 0x55887c439b00 <col:4, col:49>
| |   `-TextComment 0x55887c439ad0 <col:4, col:49> Text=" Fixed ACPI Description Table Structure (FADT)"
| |-FieldDecl 0x55887c2694c8 <line:110:3, col:45> col:45 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c269528 <line:111:3, col:45> col:45 FirmwareCtrl 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c269588 <line:112:3, col:45> col:45 Dsdt 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2695e8 <line:113:3, col:45> col:45 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c269648 <line:114:3, col:45> col:45 PreferredPmProfile 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2696a8 <line:115:3, col:45> col:45 SciInt 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c269708 <line:116:3, col:45> col:45 SmiCmd 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c269768 <line:117:3, col:45> col:45 AcpiEnable 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2697c8 <line:118:3, col:45> col:45 AcpiDisable 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c269828 <line:119:3, col:45> col:45 S4BiosReq 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c269888 <line:120:3, col:45> col:45 PstateCnt 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2698e8 <line:121:3, col:45> col:45 Pm1aEvtBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c269948 <line:122:3, col:45> col:45 Pm1bEvtBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2699a8 <line:123:3, col:45> col:45 Pm1aCntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c269a08 <line:124:3, col:45> col:45 Pm1bCntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c269a68 <line:125:3, col:45> col:45 Pm2CntBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c269ac8 <line:126:3, col:45> col:45 PmTmrBlk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c269b28 <line:127:3, col:45> col:45 Gpe0Blk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c269b88 <line:128:3, col:45> col:45 Gpe1Blk 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c269be8 <line:129:3, col:45> col:45 Pm1EvtLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c269c48 <line:130:3, col:45> col:45 Pm1CntLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c269ca8 <line:131:3, col:45> col:45 Pm2CntLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c269d08 <line:132:3, col:45> col:45 PmTmrLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c269d68 <line:133:3, col:45> col:45 Gpe0BlkLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c269dc8 <line:134:3, col:45> col:45 Gpe1BlkLen 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c269e28 <line:135:3, col:45> col:45 Gpe1Base 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c269e88 <line:136:3, col:45> col:45 CstCnt 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c269ee8 <line:137:3, col:45> col:45 PLvl2Lat 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c269f48 <line:138:3, col:45> col:45 PLvl3Lat 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c269fa8 <line:139:3, col:45> col:45 FlushSize 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c26a008 <line:140:3, col:45> col:45 FlushStride 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c26a068 <line:141:3, col:45> col:45 DutyOffset 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26a0c8 <line:142:3, col:45> col:45 DutyWidth 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26a128 <line:143:3, col:45> col:45 DayAlrm 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26a188 <line:144:3, col:45> col:45 MonAlrm 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26a1e8 <line:145:3, col:45> col:45 Century 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26a248 <line:146:3, col:45> col:45 IaPcBootArch 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c26a2a8 <line:147:3, col:45> col:45 Reserved1 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26a308 <line:148:3, col:45> col:45 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c26a390 <line:149:3, col:45> col:45 ResetReg 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c26a3f0 <line:150:3, col:45> col:45 ResetValue 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26a450 <line:151:3, col:45> col:45 ArmBootArch 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c26a4b0 <line:152:3, col:45> col:45 MinorVersion 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26a510 <line:153:3, col:45> col:45 XFirmwareCtrl 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c26a570 <line:154:3, col:45> col:45 XDsdt 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c26a5d0 <line:155:3, col:45> col:45 XPm1aEvtBlk 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c26a630 <line:156:3, col:45> col:45 XPm1bEvtBlk 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c26a690 <line:157:3, col:45> col:45 XPm1aCntBlk 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c26a6f0 <line:158:3, col:45> col:45 XPm1bCntBlk 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c26a750 <line:159:3, col:45> col:45 XPm2CntBlk 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c26a7c0 <line:160:3, col:45> col:45 XPmTmrBlk 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c26a820 <line:161:3, col:45> col:45 XGpe0Blk 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c26a880 <line:162:3, col:45> col:45 XGpe1Blk 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c26a8e0 <line:163:3, col:45> col:45 SleepControlReg 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c26a940 <line:164:3, col:45> col:45 SleepStatusReg 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| `-FieldDecl 0x55887c26a9a0 <line:165:3, col:45> col:45 HypervisorVendorIdentity 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c26aa48 <line:109:1, line:166:3> col:3 EFI_ACPI_6_0_FIXED_ACPI_DESCRIPTION_TABLE 'struct EFI_ACPI_6_0_FIXED_ACPI_DESCRIPTION_TABLE':'EFI_ACPI_6_0_FIXED_ACPI_DESCRIPTION_TABLE'
| |-ElaboratedType 0x55887c26a9f0 'struct EFI_ACPI_6_0_FIXED_ACPI_DESCRIPTION_TABLE' sugar
| | `-RecordType 0x55887c269440 'EFI_ACPI_6_0_FIXED_ACPI_DESCRIPTION_TABLE'
| |   `-Record 0x55887c2693c0 ''
| `-FullComment 0x55887c439c00 <line:107:4, col:49>
|   `-ParagraphComment 0x55887c439bd0 <col:4, col:49>
|     `-TextComment 0x55887c439ba0 <col:4, col:49> Text=" Fixed ACPI Description Table Structure (FADT)"
|-RecordDecl 0x55887c26ab10 <line:235:9, line:247:1> line:235:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c26abb0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c439cd0 <line:233:4, col:35>
| | `-ParagraphComment 0x55887c439ca0 <col:4, col:35>
| |   `-TextComment 0x55887c439c70 <col:4, col:35> Text=" Firmware ACPI Control Structure"
| |-FieldDecl 0x55887c26ac18 <line:236:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c26ac78 <line:237:3, col:13> col:13 Length 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c26acd8 <line:238:3, col:13> col:13 HardwareSignature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c26ad38 <line:239:3, col:13> col:13 FirmwareWakingVector 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c26ad98 <line:240:3, col:13> col:13 GlobalLock 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c26adf8 <line:241:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c26ae58 <line:242:3, col:13> col:13 XFirmwareWakingVector 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c26aeb8 <line:243:3, col:13> col:13 Version 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26af68 <line:244:3, col:24> col:13 Reserved0 'UINT8[3]'
| |-FieldDecl 0x55887c26afc8 <line:245:3, col:13> col:13 OspmFlags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c26b078 <line:246:3, col:25> col:13 Reserved1 'UINT8[24]'
|-TypedefDecl 0x55887c26b128 <line:235:1, line:247:3> col:3 EFI_ACPI_6_0_FIRMWARE_ACPI_CONTROL_STRUCTURE 'struct EFI_ACPI_6_0_FIRMWARE_ACPI_CONTROL_STRUCTURE':'EFI_ACPI_6_0_FIRMWARE_ACPI_CONTROL_STRUCTURE'
| |-ElaboratedType 0x55887c26b0d0 'struct EFI_ACPI_6_0_FIRMWARE_ACPI_CONTROL_STRUCTURE' sugar
| | `-RecordType 0x55887c26ab90 'EFI_ACPI_6_0_FIRMWARE_ACPI_CONTROL_STRUCTURE'
| |   `-Record 0x55887c26ab10 ''
| `-FullComment 0x55887c439da0 <line:233:4, col:35>
|   `-ParagraphComment 0x55887c439d70 <col:4, col:35>
|     `-TextComment 0x55887c439d40 <col:4, col:35> Text=" Firmware ACPI Control Structure"
|-RecordDecl 0x55887c26b250 <line:281:9, line:285:1> line:281:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c26b2f0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c439e90 <line:278:4, line:279:50>
| | `-ParagraphComment 0x55887c439e60 <line:278:4, line:279:50>
| |   |-TextComment 0x55887c439e10 <line:278:4, col:77> Text=" Multiple APIC Description Table header definition.  The rest of the table"
| |   `-TextComment 0x55887c439e30 <line:279:4, col:50> Text=" must be defined in a platform specific manner."
| |-FieldDecl 0x55887c26b358 <line:282:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c26b3b8 <line:283:3, col:34> col:34 LocalApicAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c26b418 <line:284:3, col:34> col:34 Flags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c26b4c8 <line:281:1, line:285:3> col:3 EFI_ACPI_6_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER 'struct EFI_ACPI_6_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER':'EFI_ACPI_6_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER'
| |-ElaboratedType 0x55887c26b470 'struct EFI_ACPI_6_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c26b2d0 'EFI_ACPI_6_0_MULTIPLE_APIC_DESCRIPTION_TABLE_HEADER'
| |   `-Record 0x55887c26b250 ''
| `-FullComment 0x55887c439f80 <line:278:4, line:279:50>
|   `-ParagraphComment 0x55887c439f50 <line:278:4, line:279:50>
|     |-TextComment 0x55887c439f00 <line:278:4, col:77> Text=" Multiple APIC Description Table header definition.  The rest of the table"
|     `-TextComment 0x55887c439f20 <line:279:4, col:50> Text=" must be defined in a platform specific manner."
|-RecordDecl 0x55887c26b5c0 <line:327:9, line:333:1> line:327:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c26b660 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43a050 <line:325:4, col:45>
| | `-ParagraphComment 0x55887c43a020 <col:4, col:45>
| |   `-TextComment 0x55887c439ff0 <col:4, col:45> Text=" Processor Local APIC Structure Definition"
| |-FieldDecl 0x55887c26b6c8 <line:328:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26b728 <line:329:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26b788 <line:330:3, col:13> col:13 AcpiProcessorUid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26b7e8 <line:331:3, col:13> col:13 ApicId 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c26b848 <line:332:3, col:13> col:13 Flags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c26b8f8 <line:327:1, line:333:3> col:3 EFI_ACPI_6_0_PROCESSOR_LOCAL_APIC_STRUCTURE 'struct EFI_ACPI_6_0_PROCESSOR_LOCAL_APIC_STRUCTURE':'EFI_ACPI_6_0_PROCESSOR_LOCAL_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c26b8a0 'struct EFI_ACPI_6_0_PROCESSOR_LOCAL_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c26b640 'EFI_ACPI_6_0_PROCESSOR_LOCAL_APIC_STRUCTURE'
| |   `-Record 0x55887c26b5c0 ''
| `-FullComment 0x55887c43a120 <line:325:4, col:45>
|   `-ParagraphComment 0x55887c43a0f0 <col:4, col:45>
|     `-TextComment 0x55887c43a0c0 <col:4, col:45> Text=" Processor Local APIC Structure Definition"
|-RecordDecl 0x55887c26b9c0 <line:343:9, line:350:1> line:343:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c26ba60 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43a1f0 <line:341:4, col:21>
| | `-ParagraphComment 0x55887c43a1c0 <col:4, col:21>
| |   `-TextComment 0x55887c43a190 <col:4, col:21> Text=" IO APIC Structure"
| |-FieldDecl 0x55887c26bac8 <line:344:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26bb28 <line:345:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26bb88 <line:346:3, col:13> col:13 IoApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26bbe8 <line:347:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26bc48 <line:348:3, col:13> col:13 IoApicAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c26bca8 <line:349:3, col:13> col:13 GlobalSystemInterruptBase 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c26bd58 <line:343:1, line:350:3> col:3 EFI_ACPI_6_0_IO_APIC_STRUCTURE 'struct EFI_ACPI_6_0_IO_APIC_STRUCTURE':'EFI_ACPI_6_0_IO_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c26bd00 'struct EFI_ACPI_6_0_IO_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c26ba40 'EFI_ACPI_6_0_IO_APIC_STRUCTURE'
| |   `-Record 0x55887c26b9c0 ''
| `-FullComment 0x55887c43a2c0 <line:341:4, col:21>
|   `-ParagraphComment 0x55887c43a290 <col:4, col:21>
|     `-TextComment 0x55887c43a260 <col:4, col:21> Text=" IO APIC Structure"
|-RecordDecl 0x55887c26bdf0 <line:355:9, line:362:1> line:355:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c26be90 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43a390 <line:353:4, col:39>
| | `-ParagraphComment 0x55887c43a360 <col:4, col:39>
| |   `-TextComment 0x55887c43a330 <col:4, col:39> Text=" Interrupt Source Override Structure"
| |-FieldDecl 0x55887c26bef8 <line:356:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26bf58 <line:357:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26bfb8 <line:358:3, col:13> col:13 Bus 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26c018 <line:359:3, col:13> col:13 Source 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26c078 <line:360:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c26c0d8 <line:361:3, col:13> col:13 Flags 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c26c188 <line:355:1, line:362:3> col:3 EFI_ACPI_6_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE 'struct EFI_ACPI_6_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE':'EFI_ACPI_6_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE'
| |-ElaboratedType 0x55887c26c130 'struct EFI_ACPI_6_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE' sugar
| | `-RecordType 0x55887c26be70 'EFI_ACPI_6_0_INTERRUPT_SOURCE_OVERRIDE_STRUCTURE'
| |   `-Record 0x55887c26bdf0 ''
| `-FullComment 0x55887c43a460 <line:353:4, col:39>
|   `-ParagraphComment 0x55887c43a430 <col:4, col:39>
|     `-TextComment 0x55887c43a400 <col:4, col:39> Text=" Interrupt Source Override Structure"
|-RecordDecl 0x55887c26c220 <line:367:9, line:379:1> line:367:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c26c2c0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43a530 <line:365:4, col:51>
| | `-ParagraphComment 0x55887c43a500 <col:4, col:51>
| |   `-TextComment 0x55887c43a4d0 <col:4, col:51> Text=" Platform Interrupt Sources Structure Definition"
| |-FieldDecl 0x55887c26c328 <line:368:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26c388 <line:369:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26c3e8 <line:370:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c26c448 <line:371:3, col:13> col:13 InterruptType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26c4a8 <line:372:3, col:13> col:13 ProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26c508 <line:373:3, col:13> col:13 ProcessorEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26c568 <line:374:3, col:13> col:13 IoSapicVector 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c26c5c8 <line:375:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c26c628 <line:376:3, col:13> col:13 PlatformInterruptSourceFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c26c688 <line:377:3, col:13> col:13 CpeiProcessorOverride 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c26c738 <line:378:3, col:24> col:13 Reserved 'UINT8[31]'
|-TypedefDecl 0x55887c270a08 <line:367:1, line:379:3> col:3 EFI_ACPI_6_0_PLATFORM_INTERRUPT_APIC_STRUCTURE 'struct EFI_ACPI_6_0_PLATFORM_INTERRUPT_APIC_STRUCTURE':'EFI_ACPI_6_0_PLATFORM_INTERRUPT_APIC_STRUCTURE'
| |-ElaboratedType 0x55887c2709b0 'struct EFI_ACPI_6_0_PLATFORM_INTERRUPT_APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c26c2a0 'EFI_ACPI_6_0_PLATFORM_INTERRUPT_APIC_STRUCTURE'
| |   `-Record 0x55887c26c220 ''
| `-FullComment 0x55887c43a600 <line:365:4, col:51>
|   `-ParagraphComment 0x55887c43a5d0 <col:4, col:51>
|     `-TextComment 0x55887c43a5a0 <col:4, col:51> Text=" Platform Interrupt Sources Structure Definition"
|-RecordDecl 0x55887c270aa0 <line:391:9, line:396:1> line:391:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c270b40 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43a6d0 <line:389:4, col:43>
| | `-ParagraphComment 0x55887c43a6a0 <col:4, col:43>
| |   `-TextComment 0x55887c43a670 <col:4, col:43> Text=" Non-Maskable Interrupt Source Structure"
| |-FieldDecl 0x55887c270ba8 <line:392:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c270c08 <line:393:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c270c68 <line:394:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c270cc8 <line:395:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c270d78 <line:391:1, line:396:3> col:3 EFI_ACPI_6_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE 'struct EFI_ACPI_6_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE':'EFI_ACPI_6_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE'
| |-ElaboratedType 0x55887c270d20 'struct EFI_ACPI_6_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE' sugar
| | `-RecordType 0x55887c270b20 'EFI_ACPI_6_0_NON_MASKABLE_INTERRUPT_SOURCE_STRUCTURE'
| |   `-Record 0x55887c270aa0 ''
| `-FullComment 0x55887c43a7a0 <line:389:4, col:43>
|   `-ParagraphComment 0x55887c43a770 <col:4, col:43>
|     `-TextComment 0x55887c43a740 <col:4, col:43> Text=" Non-Maskable Interrupt Source Structure"
|-RecordDecl 0x55887c270e10 <line:401:9, line:407:1> line:401:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c270eb0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43a870 <line:399:4, col:28>
| | `-ParagraphComment 0x55887c43a840 <col:4, col:28>
| |   `-TextComment 0x55887c43a810 <col:4, col:28> Text=" Local APIC NMI Structure"
| |-FieldDecl 0x55887c270f18 <line:402:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c270f78 <line:403:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c270fd8 <line:404:3, col:13> col:13 AcpiProcessorUid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c271038 <line:405:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c271098 <line:406:3, col:13> col:13 LocalApicLint 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c271148 <line:401:1, line:407:3> col:3 EFI_ACPI_6_0_LOCAL_APIC_NMI_STRUCTURE 'struct EFI_ACPI_6_0_LOCAL_APIC_NMI_STRUCTURE':'EFI_ACPI_6_0_LOCAL_APIC_NMI_STRUCTURE'
| |-ElaboratedType 0x55887c2710f0 'struct EFI_ACPI_6_0_LOCAL_APIC_NMI_STRUCTURE' sugar
| | `-RecordType 0x55887c270e90 'EFI_ACPI_6_0_LOCAL_APIC_NMI_STRUCTURE'
| |   `-Record 0x55887c270e10 ''
| `-FullComment 0x55887c43a940 <line:399:4, col:28>
|   `-ParagraphComment 0x55887c43a910 <col:4, col:28>
|     `-TextComment 0x55887c43a8e0 <col:4, col:28> Text=" Local APIC NMI Structure"
|-RecordDecl 0x55887c2711e0 <line:412:9, line:417:1> line:412:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c271280 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43aa10 <line:410:4, col:41>
| | `-ParagraphComment 0x55887c43a9e0 <col:4, col:41>
| |   `-TextComment 0x55887c43a9b0 <col:4, col:41> Text=" Local APIC Address Override Structure"
| |-FieldDecl 0x55887c2712e8 <line:413:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c271348 <line:414:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2713a8 <line:415:3, col:13> col:13 Reserved 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c271408 <line:416:3, col:13> col:13 LocalApicAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c2714b8 <line:412:1, line:417:3> col:3 EFI_ACPI_6_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE 'struct EFI_ACPI_6_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE':'EFI_ACPI_6_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE'
| |-ElaboratedType 0x55887c271460 'struct EFI_ACPI_6_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE' sugar
| | `-RecordType 0x55887c271260 'EFI_ACPI_6_0_LOCAL_APIC_ADDRESS_OVERRIDE_STRUCTURE'
| |   `-Record 0x55887c2711e0 ''
| `-FullComment 0x55887c43ab10 <line:410:4, col:41>
|   `-ParagraphComment 0x55887c43aae0 <col:4, col:41>
|     `-TextComment 0x55887c43aab0 <col:4, col:41> Text=" Local APIC Address Override Structure"
|-RecordDecl 0x55887c271550 <line:422:9, line:429:1> line:422:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2715f0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43abe0 <line:420:4, col:22>
| | `-ParagraphComment 0x55887c43abb0 <col:4, col:22>
| |   `-TextComment 0x55887c43ab80 <col:4, col:22> Text=" IO SAPIC Structure"
| |-FieldDecl 0x55887c271658 <line:423:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2716b8 <line:424:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c271718 <line:425:3, col:13> col:13 IoApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c271778 <line:426:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2717d8 <line:427:3, col:13> col:13 GlobalSystemInterruptBase 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c271838 <line:428:3, col:13> col:13 IoSapicAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c2718e8 <line:422:1, line:429:3> col:3 EFI_ACPI_6_0_IO_SAPIC_STRUCTURE 'struct EFI_ACPI_6_0_IO_SAPIC_STRUCTURE':'EFI_ACPI_6_0_IO_SAPIC_STRUCTURE'
| |-ElaboratedType 0x55887c271890 'struct EFI_ACPI_6_0_IO_SAPIC_STRUCTURE' sugar
| | `-RecordType 0x55887c2715d0 'EFI_ACPI_6_0_IO_SAPIC_STRUCTURE'
| |   `-Record 0x55887c271550 ''
| `-FullComment 0x55887c43acb0 <line:420:4, col:22>
|   `-ParagraphComment 0x55887c43ac80 <col:4, col:22>
|     `-TextComment 0x55887c43ac50 <col:4, col:22> Text=" IO SAPIC Structure"
|-RecordDecl 0x55887c271980 <line:435:9, line:444:1> line:435:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c271a20 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43ada0 <line:432:4, line:433:86>
| | `-ParagraphComment 0x55887c43ad70 <line:432:4, line:433:86>
| |   |-TextComment 0x55887c43ad20 <line:432:4, col:25> Text=" Local SAPIC Structure"
| |   `-TextComment 0x55887c43ad40 <line:433:4, col:86> Text=" This struct followed by a null-terminated ASCII string - ACPI Processor UID String"
| |-FieldDecl 0x55887c271a88 <line:436:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c271ae8 <line:437:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c271b48 <line:438:3, col:13> col:13 AcpiProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c271ba8 <line:439:3, col:13> col:13 LocalSapicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c271c08 <line:440:3, col:13> col:13 LocalSapicEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c271cb8 <line:441:3, col:23> col:13 Reserved 'UINT8[3]'
| |-FieldDecl 0x55887c271d18 <line:442:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c271d78 <line:443:3, col:13> col:13 ACPIProcessorUIDValue 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c271e28 <line:435:1, line:444:3> col:3 EFI_ACPI_6_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE 'struct EFI_ACPI_6_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE':'EFI_ACPI_6_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE'
| |-ElaboratedType 0x55887c271dd0 'struct EFI_ACPI_6_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE' sugar
| | `-RecordType 0x55887c271a00 'EFI_ACPI_6_0_PROCESSOR_LOCAL_SAPIC_STRUCTURE'
| |   `-Record 0x55887c271980 ''
| `-FullComment 0x55887c43ae90 <line:432:4, line:433:86>
|   `-ParagraphComment 0x55887c43ae60 <line:432:4, line:433:86>
|     |-TextComment 0x55887c43ae10 <line:432:4, col:25> Text=" Local SAPIC Structure"
|     `-TextComment 0x55887c43ae30 <line:433:4, col:86> Text=" This struct followed by a null-terminated ASCII string - ACPI Processor UID String"
|-RecordDecl 0x55887c271ec0 <line:449:9, line:459:1> line:449:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c271f60 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43af60 <line:447:4, col:40>
| | `-ParagraphComment 0x55887c43af30 <col:4, col:40>
| |   `-TextComment 0x55887c43af00 <col:4, col:40> Text=" Platform Interrupt Sources Structure"
| |-FieldDecl 0x55887c271fc8 <line:450:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c272028 <line:451:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c272088 <line:452:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2720e8 <line:453:3, col:13> col:13 InterruptType 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c272148 <line:454:3, col:13> col:13 ProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2721a8 <line:455:3, col:13> col:13 ProcessorEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c272208 <line:456:3, col:13> col:13 IoSapicVector 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c272268 <line:457:3, col:13> col:13 GlobalSystemInterrupt 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c2722c8 <line:458:3, col:13> col:13 PlatformInterruptSourceFlags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c272378 <line:449:1, line:459:3> col:3 EFI_ACPI_6_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE 'struct EFI_ACPI_6_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE':'EFI_ACPI_6_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE'
| |-ElaboratedType 0x55887c272320 'struct EFI_ACPI_6_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE' sugar
| | `-RecordType 0x55887c271f40 'EFI_ACPI_6_0_PLATFORM_INTERRUPT_SOURCES_STRUCTURE'
| |   `-Record 0x55887c271ec0 ''
| `-FullComment 0x55887c43b030 <line:447:4, col:40>
|   `-ParagraphComment 0x55887c43b000 <col:4, col:40>
|     `-TextComment 0x55887c43afd0 <col:4, col:40> Text=" Platform Interrupt Sources Structure"
|-RecordDecl 0x55887c272440 <line:470:9, line:477:1> line:470:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2724e0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43b100 <line:468:4, col:47>
| | `-ParagraphComment 0x55887c43b0d0 <col:4, col:47>
| |   `-TextComment 0x55887c43b0a0 <col:4, col:47> Text=" Processor Local x2APIC Structure Definition"
| |-FieldDecl 0x55887c272548 <line:471:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2725a8 <line:472:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c272658 <line:473:3, col:23> col:13 Reserved 'UINT8[2]'
| |-FieldDecl 0x55887c2726b8 <line:474:3, col:13> col:13 X2ApicId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c272718 <line:475:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c272778 <line:476:3, col:13> col:13 AcpiProcessorUid 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c272828 <line:470:1, line:477:3> col:3 EFI_ACPI_6_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE 'struct EFI_ACPI_6_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE':'EFI_ACPI_6_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE'
| |-ElaboratedType 0x55887c2727d0 'struct EFI_ACPI_6_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE' sugar
| | `-RecordType 0x55887c2724c0 'EFI_ACPI_6_0_PROCESSOR_LOCAL_X2APIC_STRUCTURE'
| |   `-Record 0x55887c272440 ''
| `-FullComment 0x55887c43b1d0 <line:468:4, col:47>
|   `-ParagraphComment 0x55887c43b1a0 <col:4, col:47>
|     `-TextComment 0x55887c43b170 <col:4, col:47> Text=" Processor Local x2APIC Structure Definition"
|-RecordDecl 0x55887c2728c0 <line:482:9, line:489:1> line:482:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c272960 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43b2a0 <line:480:4, col:30>
| | `-ParagraphComment 0x55887c43b270 <col:4, col:30>
| |   `-TextComment 0x55887c43b240 <col:4, col:30> Text=" Local x2APIC NMI Structure"
| |-FieldDecl 0x55887c272c40 <line:483:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c272ca0 <line:484:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c272d00 <line:485:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c272d60 <line:486:3, col:13> col:13 AcpiProcessorUid 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c272dc0 <line:487:3, col:13> col:13 LocalX2ApicLint 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c272e70 <line:488:3, col:23> col:13 Reserved 'UINT8[3]'
|-TypedefDecl 0x55887c272f18 <line:482:1, line:489:3> col:3 EFI_ACPI_6_0_LOCAL_X2APIC_NMI_STRUCTURE 'struct EFI_ACPI_6_0_LOCAL_X2APIC_NMI_STRUCTURE':'EFI_ACPI_6_0_LOCAL_X2APIC_NMI_STRUCTURE'
| |-ElaboratedType 0x55887c272ec0 'struct EFI_ACPI_6_0_LOCAL_X2APIC_NMI_STRUCTURE' sugar
| | `-RecordType 0x55887c272940 'EFI_ACPI_6_0_LOCAL_X2APIC_NMI_STRUCTURE'
| |   `-Record 0x55887c2728c0 ''
| `-FullComment 0x55887c43b370 <line:480:4, col:30>
|   `-ParagraphComment 0x55887c43b340 <col:4, col:30>
|     `-TextComment 0x55887c43b310 <col:4, col:30> Text=" Local x2APIC NMI Structure"
|-RecordDecl 0x55887c272fb0 <line:494:9, line:512:1> line:494:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c273050 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43b440 <line:492:4, col:17>
| | `-ParagraphComment 0x55887c43b410 <col:4, col:17>
| |   `-TextComment 0x55887c43b3e0 <col:4, col:17> Text=" GIC Structure"
| |-FieldDecl 0x55887c2730b8 <line:495:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c273118 <line:496:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c273178 <line:497:3, col:13> col:13 Reserved 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2731d8 <line:498:3, col:13> col:13 CPUInterfaceNumber 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c273238 <line:499:3, col:13> col:13 AcpiProcessorUid 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c273298 <line:500:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2732f8 <line:501:3, col:13> col:13 ParkingProtocolVersion 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c273358 <line:502:3, col:13> col:13 PerformanceInterruptGsiv 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2733b8 <line:503:3, col:13> col:13 ParkedAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c273418 <line:504:3, col:13> col:13 PhysicalBaseAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c273478 <line:505:3, col:13> col:13 GICV 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2734d8 <line:506:3, col:13> col:13 GICH 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c273538 <line:507:3, col:13> col:13 VGICMaintenanceInterrupt 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c273598 <line:508:3, col:13> col:13 GICRBaseAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2735f8 <line:509:3, col:13> col:13 MPIDR 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c273658 <line:510:3, col:13> col:13 ProcessorPowerEfficiencyClass 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c273708 <line:511:3, col:24> col:13 Reserved2 'UINT8[3]'
|-TypedefDecl 0x55887c2737b8 <line:494:1, line:512:3> col:3 EFI_ACPI_6_0_GIC_STRUCTURE 'struct EFI_ACPI_6_0_GIC_STRUCTURE':'EFI_ACPI_6_0_GIC_STRUCTURE'
| |-ElaboratedType 0x55887c273760 'struct EFI_ACPI_6_0_GIC_STRUCTURE' sugar
| | `-RecordType 0x55887c273030 'EFI_ACPI_6_0_GIC_STRUCTURE'
| |   `-Record 0x55887c272fb0 ''
| `-FullComment 0x55887c43b510 <line:492:4, col:17>
|   `-ParagraphComment 0x55887c43b4e0 <col:4, col:17>
|     `-TextComment 0x55887c43b4b0 <col:4, col:17> Text=" GIC Structure"
|-RecordDecl 0x55887c273880 <line:524:9, line:533:1> line:524:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c273920 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43b5e0 <line:522:4, col:29>
| | `-ParagraphComment 0x55887c43b5b0 <col:4, col:29>
| |   `-TextComment 0x55887c43b580 <col:4, col:29> Text=" GIC Distributor Structure"
| |-FieldDecl 0x55887c273988 <line:525:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2739e8 <line:526:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c273a48 <line:527:3, col:13> col:13 Reserved1 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c273aa8 <line:528:3, col:13> col:13 GicId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c273b08 <line:529:3, col:13> col:13 PhysicalBaseAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c273b68 <line:530:3, col:13> col:13 SystemVectorBase 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c273bc8 <line:531:3, col:13> col:13 GicVersion 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c273c78 <line:532:3, col:24> col:13 Reserved2 'UINT8[3]'
|-TypedefDecl 0x55887c273d28 <line:524:1, line:533:3> col:3 EFI_ACPI_6_0_GIC_DISTRIBUTOR_STRUCTURE 'struct EFI_ACPI_6_0_GIC_DISTRIBUTOR_STRUCTURE':'EFI_ACPI_6_0_GIC_DISTRIBUTOR_STRUCTURE'
| |-ElaboratedType 0x55887c273cd0 'struct EFI_ACPI_6_0_GIC_DISTRIBUTOR_STRUCTURE' sugar
| | `-RecordType 0x55887c273900 'EFI_ACPI_6_0_GIC_DISTRIBUTOR_STRUCTURE'
| |   `-Record 0x55887c273880 ''
| `-FullComment 0x55887c43b6b0 <line:522:4, col:29>
|   `-ParagraphComment 0x55887c43b680 <col:4, col:29>
|     `-TextComment 0x55887c43b650 <col:4, col:29> Text=" GIC Distributor Structure"
|-RecordDecl 0x55887c273df0 <line:546:9, line:555:1> line:546:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c273e90 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43b780 <line:544:4, col:27>
| | `-ParagraphComment 0x55887c43b750 <col:4, col:27>
| |   `-TextComment 0x55887c43b720 <col:4, col:27> Text=" GIC MSI Frame Structure"
| |-FieldDecl 0x55887c273ef8 <line:547:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c273f58 <line:548:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c273fb8 <line:549:3, col:13> col:13 Reserved1 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c274018 <line:550:3, col:13> col:13 GicMsiFrameId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c274078 <line:551:3, col:13> col:13 PhysicalBaseAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2740d8 <line:552:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c274138 <line:553:3, col:13> col:13 SPICount 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c274198 <line:554:3, col:13> col:13 SPIBase 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c274248 <line:546:1, line:555:3> col:3 EFI_ACPI_6_0_GIC_MSI_FRAME_STRUCTURE 'struct EFI_ACPI_6_0_GIC_MSI_FRAME_STRUCTURE':'EFI_ACPI_6_0_GIC_MSI_FRAME_STRUCTURE'
| |-ElaboratedType 0x55887c2741f0 'struct EFI_ACPI_6_0_GIC_MSI_FRAME_STRUCTURE' sugar
| | `-RecordType 0x55887c273e70 'EFI_ACPI_6_0_GIC_MSI_FRAME_STRUCTURE'
| |   `-Record 0x55887c273df0 ''
| `-FullComment 0x55887c43b850 <line:544:4, col:27>
|   `-ParagraphComment 0x55887c43b820 <col:4, col:27>
|     `-TextComment 0x55887c43b7f0 <col:4, col:27> Text=" GIC MSI Frame Structure"
|-RecordDecl 0x55887c274310 <line:565:9, line:571:1> line:565:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2743b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43b920 <line:563:4, col:18>
| | `-ParagraphComment 0x55887c43b8f0 <col:4, col:18>
| |   `-TextComment 0x55887c43b8c0 <col:4, col:18> Text=" GICR Structure"
| |-FieldDecl 0x55887c274418 <line:566:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c274478 <line:567:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2744d8 <line:568:3, col:13> col:13 Reserved 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c274538 <line:569:3, col:13> col:13 DiscoveryRangeBaseAddress 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c274598 <line:570:3, col:13> col:13 DiscoveryRangeLength 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c274648 <line:565:1, line:571:3> col:3 EFI_ACPI_6_0_GICR_STRUCTURE 'struct EFI_ACPI_6_0_GICR_STRUCTURE':'EFI_ACPI_6_0_GICR_STRUCTURE'
| |-ElaboratedType 0x55887c2745f0 'struct EFI_ACPI_6_0_GICR_STRUCTURE' sugar
| | `-RecordType 0x55887c274390 'EFI_ACPI_6_0_GICR_STRUCTURE'
| |   `-Record 0x55887c274310 ''
| `-FullComment 0x55887c43b9f0 <line:563:4, col:18>
|   `-ParagraphComment 0x55887c43b9c0 <col:4, col:18>
|     `-TextComment 0x55887c43b990 <col:4, col:18> Text=" GICR Structure"
|-RecordDecl 0x55887c2746e0 <line:576:9, line:583:1> line:576:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c274780 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43bac0 <line:574:4, col:47>
| | `-ParagraphComment 0x55887c43ba90 <col:4, col:47>
| |   `-TextComment 0x55887c43ba60 <col:4, col:47> Text=" GIC Interrupt Translation Service Structure"
| |-FieldDecl 0x55887c2747e8 <line:577:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c274848 <line:578:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2748a8 <line:579:3, col:13> col:13 Reserved 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c274908 <line:580:3, col:13> col:13 GicItsId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c274968 <line:581:3, col:13> col:13 PhysicalBaseAddress 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c2749c8 <line:582:3, col:13> col:13 Reserved2 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c274a78 <line:576:1, line:583:3> col:3 EFI_ACPI_6_0_GIC_ITS_STRUCTURE 'struct EFI_ACPI_6_0_GIC_ITS_STRUCTURE':'EFI_ACPI_6_0_GIC_ITS_STRUCTURE'
| |-ElaboratedType 0x55887c274a20 'struct EFI_ACPI_6_0_GIC_ITS_STRUCTURE' sugar
| | `-RecordType 0x55887c274760 'EFI_ACPI_6_0_GIC_ITS_STRUCTURE'
| |   `-Record 0x55887c2746e0 ''
| `-FullComment 0x55887c43bb90 <line:574:4, col:47>
|   `-ParagraphComment 0x55887c43bb60 <col:4, col:47>
|     `-TextComment 0x55887c43bb30 <col:4, col:47> Text=" GIC Interrupt Translation Service Structure"
|-RecordDecl 0x55887c274b10 <line:588:9, line:593:1> line:588:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c274bb0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43bc60 <line:586:4, col:42>
| | `-ParagraphComment 0x55887c43bc30 <col:4, col:42>
| |   `-TextComment 0x55887c43bc00 <col:4, col:42> Text=" Smart Battery Description Table (SBST)"
| |-FieldDecl 0x55887c274e90 <line:589:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c274ef0 <line:590:3, col:34> col:34 WarningEnergyLevel 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c274f50 <line:591:3, col:34> col:34 LowEnergyLevel 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c274fb0 <line:592:3, col:34> col:34 CriticalEnergyLevel 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c275058 <line:588:1, line:593:3> col:3 EFI_ACPI_6_0_SMART_BATTERY_DESCRIPTION_TABLE 'struct EFI_ACPI_6_0_SMART_BATTERY_DESCRIPTION_TABLE':'EFI_ACPI_6_0_SMART_BATTERY_DESCRIPTION_TABLE'
| |-ElaboratedType 0x55887c275000 'struct EFI_ACPI_6_0_SMART_BATTERY_DESCRIPTION_TABLE' sugar
| | `-RecordType 0x55887c274b90 'EFI_ACPI_6_0_SMART_BATTERY_DESCRIPTION_TABLE'
| |   `-Record 0x55887c274b10 ''
| `-FullComment 0x55887c43bd30 <line:586:4, col:42>
|   `-ParagraphComment 0x55887c43bd00 <col:4, col:42>
|     `-TextComment 0x55887c43bcd0 <col:4, col:42> Text=" Smart Battery Description Table (SBST)"
|-RecordDecl 0x55887c275120 <line:605:9, line:611:1> line:605:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2751c0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43be50 <line:601:4, line:603:57>
| | `-ParagraphComment 0x55887c43be20 <line:601:4, line:603:57>
| |   |-TextComment 0x55887c43bda0 <line:601:4, col:51> Text=" Embedded Controller Boot Resources Table (ECDT)"
| |   |-TextComment 0x55887c43bdc0 <line:602:4, col:73> Text=" The table is followed by a null terminated ASCII string that contains"
| |   `-TextComment 0x55887c43bde0 <line:603:4, col:57> Text=" a fully qualified reference to the name space object."
| |-FieldDecl 0x55887c275228 <line:606:3, col:45> col:45 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c275288 <line:607:3, col:45> col:45 EcControl 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c2752e8 <line:608:3, col:45> col:45 EcData 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c275348 <line:609:3, col:45> col:45 Uid 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c2753a8 <line:610:3, col:45> col:45 GpeBit 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c275458 <line:605:1, line:611:3> col:3 EFI_ACPI_6_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE 'struct EFI_ACPI_6_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE':'EFI_ACPI_6_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE'
| |-ElaboratedType 0x55887c275400 'struct EFI_ACPI_6_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE' sugar
| | `-RecordType 0x55887c2751a0 'EFI_ACPI_6_0_EMBEDDED_CONTROLLER_BOOT_RESOURCES_TABLE'
| |   `-Record 0x55887c275120 ''
| `-FullComment 0x55887c43bf70 <line:601:4, line:603:57>
|   `-ParagraphComment 0x55887c43bf40 <line:601:4, line:603:57>
|     |-TextComment 0x55887c43bec0 <line:601:4, col:51> Text=" Embedded Controller Boot Resources Table (ECDT)"
|     |-TextComment 0x55887c43bee0 <line:602:4, col:73> Text=" The table is followed by a null terminated ASCII string that contains"
|     `-TextComment 0x55887c43bf00 <line:603:4, col:57> Text=" a fully qualified reference to the name space object."
|-RecordDecl 0x55887c275520 <line:622:9, line:626:1> line:622:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2755c0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43c060 <line:619:4, line:620:50>
| | `-ParagraphComment 0x55887c43c030 <line:619:4, line:620:50>
| |   |-TextComment 0x55887c43bfe0 <line:619:4, col:65> Text=" System Resource Affinity Table (SRAT).  The rest of the table"
| |   `-TextComment 0x55887c43c000 <line:620:4, col:50> Text=" must be defined in a platform specific manner."
| |-FieldDecl 0x55887c275628 <line:623:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c275688 <line:624:3, col:34> col:34 Reserved1 'UINT32':'unsigned int'
| | `-FullComment 0x55887c43c130 <col:49, col:65>
| |   `-ParagraphComment 0x55887c43c100 <col:49, col:65>
| |     `-TextComment 0x55887c43c0d0 <col:49, col:65> Text=" Must be set to 1"
| `-FieldDecl 0x55887c275718 <line:625:3, col:34> col:34 Reserved2 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c2757c8 <line:622:1, line:626:3> col:3 EFI_ACPI_6_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER 'struct EFI_ACPI_6_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER':'EFI_ACPI_6_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER'
| |-ElaboratedType 0x55887c275770 'struct EFI_ACPI_6_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER' sugar
| | `-RecordType 0x55887c2755a0 'EFI_ACPI_6_0_SYSTEM_RESOURCE_AFFINITY_TABLE_HEADER'
| |   `-Record 0x55887c275520 ''
| `-FullComment 0x55887c43c220 <line:619:4, line:620:50>
|   `-ParagraphComment 0x55887c43c1f0 <line:619:4, line:620:50>
|     |-TextComment 0x55887c43c1a0 <line:619:4, col:65> Text=" System Resource Affinity Table (SRAT).  The rest of the table"
|     `-TextComment 0x55887c43c1c0 <line:620:4, col:50> Text=" must be defined in a platform specific manner."
|-RecordDecl 0x55887c275890 <line:646:9, line:655:1> line:646:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c275930 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43c2f0 <line:644:4, col:60>
| | `-ParagraphComment 0x55887c43c2c0 <col:4, col:60>
| |   `-TextComment 0x55887c43c290 <col:4, col:60> Text=" Processor Local APIC/SAPIC Affinity Structure Definition"
| |-FieldDecl 0x55887c275998 <line:647:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2759f8 <line:648:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c275a58 <line:649:3, col:13> col:13 ProximityDomain7To0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c275ab8 <line:650:3, col:13> col:13 ApicId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c275b18 <line:651:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c275b78 <line:652:3, col:13> col:13 LocalSapicEid 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c275c28 <line:653:3, col:35> col:13 ProximityDomain31To8 'UINT8[3]'
| `-FieldDecl 0x55887c275c88 <line:654:3, col:13> col:13 ClockDomain 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c275d38 <line:646:1, line:655:3> col:3 EFI_ACPI_6_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE 'struct EFI_ACPI_6_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE':'EFI_ACPI_6_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE'
| |-ElaboratedType 0x55887c275ce0 'struct EFI_ACPI_6_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE' sugar
| | `-RecordType 0x55887c275910 'EFI_ACPI_6_0_PROCESSOR_LOCAL_APIC_SAPIC_AFFINITY_STRUCTURE'
| |   `-Record 0x55887c275890 ''
| `-FullComment 0x55887c43c3c0 <line:644:4, col:60>
|   `-ParagraphComment 0x55887c43c390 <col:4, col:60>
|     `-TextComment 0x55887c43c360 <col:4, col:60> Text=" Processor Local APIC/SAPIC Affinity Structure Definition"
|-RecordDecl 0x55887c275e00 <line:665:9, line:677:1> line:665:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c275ea0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43c490 <line:663:4, col:40>
| | `-ParagraphComment 0x55887c43c460 <col:4, col:40>
| |   `-TextComment 0x55887c43c430 <col:4, col:40> Text=" Memory Affinity Structure Definition"
| |-FieldDecl 0x55887c275f08 <line:666:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c275f68 <line:667:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c275fc8 <line:668:3, col:13> col:13 ProximityDomain 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c276028 <line:669:3, col:13> col:13 Reserved1 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c276088 <line:670:3, col:13> col:13 AddressBaseLow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2760e8 <line:671:3, col:13> col:13 AddressBaseHigh 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c276148 <line:672:3, col:13> col:13 LengthLow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2761a8 <line:673:3, col:13> col:13 LengthHigh 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c276208 <line:674:3, col:13> col:13 Reserved2 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c276268 <line:675:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c2762c8 <line:676:3, col:13> col:13 Reserved3 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c276378 <line:665:1, line:677:3> col:3 EFI_ACPI_6_0_MEMORY_AFFINITY_STRUCTURE 'struct EFI_ACPI_6_0_MEMORY_AFFINITY_STRUCTURE':'EFI_ACPI_6_0_MEMORY_AFFINITY_STRUCTURE'
| |-ElaboratedType 0x55887c276320 'struct EFI_ACPI_6_0_MEMORY_AFFINITY_STRUCTURE' sugar
| | `-RecordType 0x55887c275e80 'EFI_ACPI_6_0_MEMORY_AFFINITY_STRUCTURE'
| |   `-Record 0x55887c275e00 ''
| `-FullComment 0x55887c43c560 <line:663:4, col:40>
|   `-ParagraphComment 0x55887c43c530 <col:4, col:40>
|     `-TextComment 0x55887c43c500 <col:4, col:40> Text=" Memory Affinity Structure Definition"
|-RecordDecl 0x55887c276410 <line:689:9, line:698:1> line:689:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2764b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43c630 <line:687:4, col:56>
| | `-ParagraphComment 0x55887c43c600 <col:4, col:56>
| |   `-TextComment 0x55887c43c5d0 <col:4, col:56> Text=" Processor Local x2APIC Affinity Structure Definition"
| |-FieldDecl 0x55887c276518 <line:690:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c276578 <line:691:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c276628 <line:692:3, col:24> col:13 Reserved1 'UINT8[2]'
| |-FieldDecl 0x55887c276688 <line:693:3, col:13> col:13 ProximityDomain 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2766e8 <line:694:3, col:13> col:13 X2ApicId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c276748 <line:695:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2767a8 <line:696:3, col:13> col:13 ClockDomain 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c276858 <line:697:3, col:24> col:13 Reserved2 'UINT8[4]'
|-TypedefDecl 0x55887c276908 <line:689:1, line:698:3> col:3 EFI_ACPI_6_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE 'struct EFI_ACPI_6_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE':'EFI_ACPI_6_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE'
| |-ElaboratedType 0x55887c2768b0 'struct EFI_ACPI_6_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE' sugar
| | `-RecordType 0x55887c276490 'EFI_ACPI_6_0_PROCESSOR_LOCAL_X2APIC_AFFINITY_STRUCTURE'
| |   `-Record 0x55887c276410 ''
| `-FullComment 0x55887c43c700 <line:687:4, col:56>
|   `-ParagraphComment 0x55887c43c6d0 <col:4, col:56>
|     `-TextComment 0x55887c43c6a0 <col:4, col:56> Text=" Processor Local x2APIC Affinity Structure Definition"
|-RecordDecl 0x55887c2769a0 <line:703:9, line:710:1> line:703:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c276a40 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43c7d0 <line:701:4, col:38>
| | `-ParagraphComment 0x55887c43c7a0 <col:4, col:38>
| |   `-TextComment 0x55887c43c770 <col:4, col:38> Text=" GICC Affinity Structure Definition"
| |-FieldDecl 0x55887c276aa8 <line:704:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c276b08 <line:705:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c276b68 <line:706:3, col:13> col:13 ProximityDomain 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c276bc8 <line:707:3, col:13> col:13 AcpiProcessorUid 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c276c28 <line:708:3, col:13> col:13 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c276c88 <line:709:3, col:13> col:13 ClockDomain 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c276d38 <line:703:1, line:710:3> col:3 EFI_ACPI_6_0_GICC_AFFINITY_STRUCTURE 'struct EFI_ACPI_6_0_GICC_AFFINITY_STRUCTURE':'EFI_ACPI_6_0_GICC_AFFINITY_STRUCTURE'
| |-ElaboratedType 0x55887c276ce0 'struct EFI_ACPI_6_0_GICC_AFFINITY_STRUCTURE' sugar
| | `-RecordType 0x55887c276a20 'EFI_ACPI_6_0_GICC_AFFINITY_STRUCTURE'
| |   `-Record 0x55887c2769a0 ''
| `-FullComment 0x55887c43c8a0 <line:701:4, col:38>
|   `-ParagraphComment 0x55887c43c870 <col:4, col:38>
|     `-TextComment 0x55887c43c840 <col:4, col:38> Text=" GICC Affinity Structure Definition"
|-RecordDecl 0x55887c27b1c0 <line:721:9, line:724:1> line:721:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27b260 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43c990 <line:718:4, line:719:38>
| | `-ParagraphComment 0x55887c43c960 <line:718:4, line:719:38>
| |   |-TextComment 0x55887c43c910 <line:718:4, col:54> Text=" System Locality Distance Information Table (SLIT)."
| |   `-TextComment 0x55887c43c930 <line:719:4, col:38> Text=" The rest of the table is a matrix."
| |-FieldDecl 0x55887c27b2c8 <line:722:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c27b328 <line:723:3, col:34> col:34 NumberOfSystemLocalities 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c27b3d8 <line:721:1, line:724:3> col:3 EFI_ACPI_6_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER 'struct EFI_ACPI_6_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER':'EFI_ACPI_6_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER'
| |-ElaboratedType 0x55887c27b380 'struct EFI_ACPI_6_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c27b240 'EFI_ACPI_6_0_SYSTEM_LOCALITY_DISTANCE_INFORMATION_TABLE_HEADER'
| |   `-Record 0x55887c27b1c0 ''
| `-FullComment 0x55887c43ca80 <line:718:4, line:719:38>
|   `-ParagraphComment 0x55887c43ca50 <line:718:4, line:719:38>
|     |-TextComment 0x55887c43ca00 <line:718:4, col:54> Text=" System Locality Distance Information Table (SLIT)."
|     `-TextComment 0x55887c43ca20 <line:719:4, col:38> Text=" The rest of the table is a matrix."
|-RecordDecl 0x55887c27b4a0 <line:734:9, line:737:1> line:734:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27b540 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43cb50 <line:732:4, col:49>
| | `-ParagraphComment 0x55887c43cb20 <col:4, col:49>
| |   `-TextComment 0x55887c43caf0 <col:4, col:49> Text=" Corrected Platform Error Polling Table (CPEP)"
| |-FieldDecl 0x55887c27b5a8 <line:735:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c27b658 <line:736:3, col:44> col:34 Reserved 'UINT8[8]'
|-TypedefDecl 0x55887c27b708 <line:734:1, line:737:3> col:3 EFI_ACPI_6_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER 'struct EFI_ACPI_6_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER':'EFI_ACPI_6_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER'
| |-ElaboratedType 0x55887c27b6b0 'struct EFI_ACPI_6_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER' sugar
| | `-RecordType 0x55887c27b520 'EFI_ACPI_6_0_CORRECTED_PLATFORM_ERROR_POLLING_TABLE_HEADER'
| |   `-Record 0x55887c27b4a0 ''
| `-FullComment 0x55887c43cc20 <line:732:4, col:49>
|   `-ParagraphComment 0x55887c43cbf0 <col:4, col:49>
|     `-TextComment 0x55887c43cbc0 <col:4, col:49> Text=" Corrected Platform Error Polling Table (CPEP)"
|-RecordDecl 0x55887c27b7d0 <line:752:9, line:758:1> line:752:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27b870 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43ccf0 <line:750:4, col:67>
| | `-ParagraphComment 0x55887c43ccc0 <col:4, col:67>
| |   `-TextComment 0x55887c43cc90 <col:4, col:67> Text=" Corrected Platform Error Polling Processor Structure Definition"
| |-FieldDecl 0x55887c27b8d8 <line:753:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c27b938 <line:754:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c27b998 <line:755:3, col:13> col:13 ProcessorId 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c27b9f8 <line:756:3, col:13> col:13 ProcessorEid 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c27ba58 <line:757:3, col:13> col:13 PollingInterval 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c27bb08 <line:752:1, line:758:3> col:3 EFI_ACPI_6_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE 'struct EFI_ACPI_6_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE':'EFI_ACPI_6_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE'
| |-ElaboratedType 0x55887c27bab0 'struct EFI_ACPI_6_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE' sugar
| | `-RecordType 0x55887c27b850 'EFI_ACPI_6_0_CPEP_PROCESSOR_APIC_SAPIC_STRUCTURE'
| |   `-Record 0x55887c27b7d0 ''
| `-FullComment 0x55887c43cdc0 <line:750:4, col:67>
|   `-ParagraphComment 0x55887c43cd90 <col:4, col:67>
|     `-TextComment 0x55887c43cd60 <col:4, col:67> Text=" Corrected Platform Error Polling Processor Structure Definition"
|-RecordDecl 0x55887c27bba0 <line:763:9, line:769:1> line:763:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27bc40 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43ce90 <line:761:4, col:47>
| | `-ParagraphComment 0x55887c43ce60 <col:4, col:47>
| |   `-TextComment 0x55887c43ce30 <col:4, col:47> Text=" Maximum System Characteristics Table (MSCT)"
| |-FieldDecl 0x55887c27bca8 <line:764:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c27bd08 <line:765:3, col:34> col:34 OffsetProxDomInfo 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c27bd68 <line:766:3, col:34> col:34 MaximumNumberOfProximityDomains 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c27bdc8 <line:767:3, col:34> col:34 MaximumNumberOfClockDomains 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c27be28 <line:768:3, col:34> col:34 MaximumPhysicalAddress 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c27bed8 <line:763:1, line:769:3> col:3 EFI_ACPI_6_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER 'struct EFI_ACPI_6_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER':'EFI_ACPI_6_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER'
| |-ElaboratedType 0x55887c27be80 'struct EFI_ACPI_6_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER' sugar
| | `-RecordType 0x55887c27bc20 'EFI_ACPI_6_0_MAXIMUM_SYSTEM_CHARACTERISTICS_TABLE_HEADER'
| |   `-Record 0x55887c27bba0 ''
| `-FullComment 0x55887c43cf60 <line:761:4, col:47>
|   `-ParagraphComment 0x55887c43cf30 <col:4, col:47>
|     `-TextComment 0x55887c43cf00 <col:4, col:47> Text=" Maximum System Characteristics Table (MSCT)"
|-RecordDecl 0x55887c27bfa0 <line:779:9, line:786:1> line:779:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27c040 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43d030 <line:777:4, col:61>
| | `-ParagraphComment 0x55887c43d000 <col:4, col:61>
| |   `-TextComment 0x55887c43cfd0 <col:4, col:61> Text=" Maximum Proximity Domain Information Structure Definition"
| |-FieldDecl 0x55887c27c0a8 <line:780:3, col:13> col:13 Revision 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c27c108 <line:781:3, col:13> col:13 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c27c168 <line:782:3, col:13> col:13 ProximityDomainRangeLow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c27c1c8 <line:783:3, col:13> col:13 ProximityDomainRangeHigh 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c27c228 <line:784:3, col:13> col:13 MaximumProcessorCapacity 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c27c288 <line:785:3, col:13> col:13 MaximumMemoryCapacity 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c27c338 <line:779:1, line:786:3> col:3 EFI_ACPI_6_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE 'struct EFI_ACPI_6_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE':'EFI_ACPI_6_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE'
| |-ElaboratedType 0x55887c27c2e0 'struct EFI_ACPI_6_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE' sugar
| | `-RecordType 0x55887c27c020 'EFI_ACPI_6_0_MAXIMUM_PROXIMITY_DOMAIN_INFORMATION_STRUCTURE'
| |   `-Record 0x55887c27bfa0 ''
| `-FullComment 0x55887c43d100 <line:777:4, col:61>
|   `-ParagraphComment 0x55887c43d0d0 <col:4, col:61>
|     `-TextComment 0x55887c43d0a0 <col:4, col:61> Text=" Maximum Proximity Domain Information Structure Definition"
|-RecordDecl 0x55887c27c3d0 <line:791:9, line:794:1> line:791:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27c470 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43d1d0 <line:789:4, col:38>
| | `-ParagraphComment 0x55887c43d1a0 <col:4, col:38>
| |   `-TextComment 0x55887c43d170 <col:4, col:38> Text=" ACPI RAS Feature Table definition."
| |-FieldDecl 0x55887c27c4d8 <line:792:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c27c588 <line:793:3, col:75> col:34 PlatformCommunicationChannelIdentifier 'UINT8[12]'
|-TypedefDecl 0x55887c27c638 <line:791:1, line:794:3> col:3 EFI_ACPI_6_0_RAS_FEATURE_TABLE 'struct EFI_ACPI_6_0_RAS_FEATURE_TABLE':'EFI_ACPI_6_0_RAS_FEATURE_TABLE'
| |-ElaboratedType 0x55887c27c5e0 'struct EFI_ACPI_6_0_RAS_FEATURE_TABLE' sugar
| | `-RecordType 0x55887c27c450 'EFI_ACPI_6_0_RAS_FEATURE_TABLE'
| |   `-Record 0x55887c27c3d0 ''
| `-FullComment 0x55887c43d2a0 <line:789:4, col:38>
|   `-ParagraphComment 0x55887c43d270 <col:4, col:38>
|     `-TextComment 0x55887c43d240 <col:4, col:38> Text=" ACPI RAS Feature Table definition."
|-RecordDecl 0x55887c27c700 <line:804:9, line:813:1> line:804:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27c7a0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43d370 <line:802:4, col:77>
| | `-ParagraphComment 0x55887c43d340 <col:4, col:77>
| |   `-TextComment 0x55887c43d310 <col:4, col:77> Text=" ACPI RASF Platform Communication Channel Shared Memory Region definition."
| |-FieldDecl 0x55887c27c808 <line:805:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c27c868 <line:806:3, col:13> col:13 Command 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c27c8c8 <line:807:3, col:13> col:13 Status 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c27c928 <line:808:3, col:13> col:13 Version 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c27c9d8 <line:809:3, col:31> col:13 RASCapabilities 'UINT8[16]'
| |-FieldDecl 0x55887c27ca88 <line:810:3, col:34> col:13 SetRASCapabilities 'UINT8[16]'
| |-FieldDecl 0x55887c27cae8 <line:811:3, col:13> col:13 NumberOfRASFParameterBlocks 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c27cb48 <line:812:3, col:13> col:13 SetRASCapabilitiesStatus 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c27cbf8 <line:804:1, line:813:3> col:3 EFI_ACPI_6_0_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION 'struct EFI_ACPI_6_0_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION':'EFI_ACPI_6_0_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION'
| |-ElaboratedType 0x55887c27cba0 'struct EFI_ACPI_6_0_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION' sugar
| | `-RecordType 0x55887c27c780 'EFI_ACPI_6_0_RASF_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION'
| |   `-Record 0x55887c27c700 ''
| `-FullComment 0x55887c43d440 <line:802:4, col:77>
|   `-ParagraphComment 0x55887c43d410 <col:4, col:77>
|     `-TextComment 0x55887c43d3e0 <col:4, col:77> Text=" ACPI RASF Platform Communication Channel Shared Memory Region definition."
|-RecordDecl 0x55887c27ccf0 <line:829:9, line:838:1> line:829:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27cd90 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43d510 <line:827:4, col:56>
| | `-ParagraphComment 0x55887c43d4e0 <col:4, col:56>
| |   `-TextComment 0x55887c43d4b0 <col:4, col:56> Text=" ACPI RASF Parameter Block structure for PATROL_SCRUB"
| |-FieldDecl 0x55887c27cdf8 <line:830:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c27ce58 <line:831:3, col:13> col:13 Version 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c27ceb8 <line:832:3, col:13> col:13 Length 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c27cf18 <line:833:3, col:13> col:13 PatrolScrubCommand 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c27cfc8 <line:834:3, col:36> col:13 RequestedAddressRange 'UINT64[2]'
| |-FieldDecl 0x55887c27d078 <line:835:3, col:33> col:13 ActualAddressRange 'UINT64[2]'
| |-FieldDecl 0x55887c27d0d8 <line:836:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c27d138 <line:837:3, col:13> col:13 RequestedSpeed 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c27d568 <line:829:1, line:838:3> col:3 EFI_ACPI_6_0_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE 'struct EFI_ACPI_6_0_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE':'EFI_ACPI_6_0_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE'
| |-ElaboratedType 0x55887c27d510 'struct EFI_ACPI_6_0_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE' sugar
| | `-RecordType 0x55887c27cd70 'EFI_ACPI_6_0_RASF_PATROL_SCRUB_PLATFORM_BLOCK_STRUCTURE'
| |   `-Record 0x55887c27ccf0 ''
| `-FullComment 0x55887c43d5e0 <line:827:4, col:56>
|   `-ParagraphComment 0x55887c43d5b0 <col:4, col:56>
|     `-TextComment 0x55887c43d580 <col:4, col:56> Text=" ACPI RASF Parameter Block structure for PATROL_SCRUB"
|-RecordDecl 0x55887c27d630 <line:850:9, line:856:1> line:850:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27d6d0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43d6b0 <line:848:4, col:40>
| | `-ParagraphComment 0x55887c43d680 <col:4, col:40>
| |   `-TextComment 0x55887c43d650 <col:4, col:40> Text=" Memory Power State Table definition."
| |-FieldDecl 0x55887c27d738 <line:851:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c27d798 <line:852:3, col:34> col:34 PlatformCommunicationChannelIdentifier 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c27d848 <line:853:3, col:44> col:34 Reserved 'UINT8[3]'
|-TypedefDecl 0x55887c27d8f8 <line:850:1, line:856:3> col:3 EFI_ACPI_6_0_MEMORY_POWER_STATUS_TABLE 'struct EFI_ACPI_6_0_MEMORY_POWER_STATUS_TABLE':'EFI_ACPI_6_0_MEMORY_POWER_STATUS_TABLE'
| |-ElaboratedType 0x55887c27d8a0 'struct EFI_ACPI_6_0_MEMORY_POWER_STATUS_TABLE' sugar
| | `-RecordType 0x55887c27d6b0 'EFI_ACPI_6_0_MEMORY_POWER_STATUS_TABLE'
| |   `-Record 0x55887c27d630 ''
| `-FullComment 0x55887c43d780 <line:848:4, col:40>
|   `-ParagraphComment 0x55887c43d750 <col:4, col:40>
|     `-TextComment 0x55887c43d720 <col:4, col:40> Text=" Memory Power State Table definition."
|-RecordDecl 0x55887c27d9c0 <line:866:9, line:876:1> line:866:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27da60 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43d850 <line:864:4, col:72>
| | `-ParagraphComment 0x55887c43d820 <col:4, col:72>
| |   `-TextComment 0x55887c43d7f0 <col:4, col:72> Text=" MPST Platform Communication Channel Shared Memory Region definition."
| |-FieldDecl 0x55887c27dac8 <line:867:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c27db28 <line:868:3, col:13> col:13 Command 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c27db88 <line:869:3, col:13> col:13 Status 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c27dbe8 <line:870:3, col:13> col:13 MemoryPowerCommandRegister 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c27dc48 <line:871:3, col:13> col:13 MemoryPowerStatusRegister 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c27dca8 <line:872:3, col:13> col:13 PowerStateId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c27dd08 <line:873:3, col:13> col:13 MemoryPowerNodeId 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c27dd68 <line:874:3, col:13> col:13 MemoryEnergyConsumed 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c27ddc8 <line:875:3, col:13> col:13 ExpectedAveragePowerComsuned 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c27de78 <line:866:1, line:876:3> col:3 EFI_ACPI_6_0_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION 'struct EFI_ACPI_6_0_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION':'EFI_ACPI_6_0_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION'
| |-ElaboratedType 0x55887c27de20 'struct EFI_ACPI_6_0_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION' sugar
| | `-RecordType 0x55887c27da40 'EFI_ACPI_6_0_MPST_PLATFORM_COMMUNICATION_CHANNEL_SHARED_MEMORY_REGION'
| |   `-Record 0x55887c27d9c0 ''
| `-FullComment 0x55887c43d920 <line:864:4, col:72>
|   `-ParagraphComment 0x55887c43d8f0 <col:4, col:72>
|     `-TextComment 0x55887c43d8c0 <col:4, col:72> Text=" MPST Platform Communication Channel Shared Memory Region definition."
|-RecordDecl 0x55887c27df70 <line:894:9, line:897:1> line:894:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27e010 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43d9f0 <line:892:4, col:32>
| | `-ParagraphComment 0x55887c43d9c0 <col:4, col:32>
| |   `-TextComment 0x55887c43d990 <col:4, col:32> Text=" MPST Memory Power Node Table"
| |-FieldDecl 0x55887c27e078 <line:895:3, col:12> col:12 PowerStateValue 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c27e0d8 <line:896:3, col:12> col:12 PowerStateInformationIndex 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c27e188 <line:894:1, line:897:3> col:3 EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE 'struct EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE':'EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE'
| |-ElaboratedType 0x55887c27e130 'struct EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE' sugar
| | `-RecordType 0x55887c27dff0 'EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE'
| |   `-Record 0x55887c27df70 ''
| `-FullComment 0x55887c43dac0 <line:892:4, col:32>
|   `-ParagraphComment 0x55887c43da90 <col:4, col:32>
|     `-TextComment 0x55887c43da60 <col:4, col:32> Text=" MPST Memory Power Node Table"
|-RecordDecl 0x55887c27e1f8 <line:899:9, line:910:1> line:899:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27e2a0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c27e308 <line:900:3, col:13> col:13 Flag 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c27e368 <line:901:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c27e3c8 <line:902:3, col:13> col:13 MemoryPowerNodeId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c27e428 <line:903:3, col:13> col:13 Length 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c27e488 <line:904:3, col:13> col:13 AddressBase 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c27e4e8 <line:905:3, col:13> col:13 AddressLength 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c27e548 <line:906:3, col:13> col:13 NumberOfPowerStates 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c27e5a8 <line:907:3, col:13> col:13 NumberOfPhysicalComponents 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c27e658 <line:899:1, line:910:3> col:3 EFI_ACPI_6_0_MPST_MEMORY_POWER_STRUCTURE 'struct EFI_ACPI_6_0_MPST_MEMORY_POWER_STRUCTURE':'EFI_ACPI_6_0_MPST_MEMORY_POWER_STRUCTURE'
| `-ElaboratedType 0x55887c27e600 'struct EFI_ACPI_6_0_MPST_MEMORY_POWER_STRUCTURE' sugar
|   `-RecordType 0x55887c27e280 'EFI_ACPI_6_0_MPST_MEMORY_POWER_STRUCTURE'
|     `-Record 0x55887c27e1f8 ''
|-RecordDecl 0x55887c27e6c8 <line:916:9, line:919:1> line:916:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27e770 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c27e7d8 <line:917:3, col:13> col:13 MemoryPowerNodeCount 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c27e888 <line:918:3, col:23> col:13 Reserved 'UINT8[2]'
|-TypedefDecl 0x55887c27e938 <line:916:1, line:919:3> col:3 EFI_ACPI_6_0_MPST_MEMORY_POWER_NODE_TABLE 'struct EFI_ACPI_6_0_MPST_MEMORY_POWER_NODE_TABLE':'EFI_ACPI_6_0_MPST_MEMORY_POWER_NODE_TABLE'
| `-ElaboratedType 0x55887c27e8e0 'struct EFI_ACPI_6_0_MPST_MEMORY_POWER_NODE_TABLE' sugar
|   `-RecordType 0x55887c27e750 'EFI_ACPI_6_0_MPST_MEMORY_POWER_NODE_TABLE'
|     `-Record 0x55887c27e6c8 ''
|-RecordDecl 0x55887c27e9d0 <line:924:9, line:931:1> line:924:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27ea70 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43db90 <line:922:4, col:49>
| | `-ParagraphComment 0x55887c43db60 <col:4, col:49>
| |   `-TextComment 0x55887c43db30 <col:4, col:49> Text=" MPST Memory Power State Characteristics Table"
| |-FieldDecl 0x55887c27ead8 <line:925:3, col:13> col:13 PowerStateStructureID 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c27eb38 <line:926:3, col:13> col:13 Flag 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c27eb98 <line:927:3, col:13> col:13 Reserved 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c27ebf8 <line:928:3, col:13> col:13 AveragePowerConsumedInMPS0 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c27ec58 <line:929:3, col:13> col:13 RelativePowerSavingToMPS0 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c27ecb8 <line:930:3, col:13> col:13 ExitLatencyToMPS0 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c27ed68 <line:924:1, line:931:3> col:3 EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE 'struct EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE':'EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE'
| |-ElaboratedType 0x55887c27ed10 'struct EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE' sugar
| | `-RecordType 0x55887c27ea50 'EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_STRUCTURE'
| |   `-Record 0x55887c27e9d0 ''
| `-FullComment 0x55887c43dc60 <line:922:4, col:49>
|   `-ParagraphComment 0x55887c43dc30 <col:4, col:49>
|     `-TextComment 0x55887c43dc00 <col:4, col:49> Text=" MPST Memory Power State Characteristics Table"
|-RecordDecl 0x55887c27edd8 <line:937:9, line:940:1> line:937:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27ee80 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c27eee8 <line:938:3, col:13> col:13 MemoryPowerStateCharacteristicsCount 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c27ef98 <line:939:3, col:23> col:13 Reserved 'UINT8[2]'
|-TypedefDecl 0x55887c27f048 <line:937:1, line:940:3> col:3 EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE 'struct EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE':'EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE'
| `-ElaboratedType 0x55887c27eff0 'struct EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE' sugar
|   `-RecordType 0x55887c27ee60 'EFI_ACPI_6_0_MPST_MEMORY_POWER_STATE_CHARACTERISTICS_TABLE'
|     `-Record 0x55887c27edd8 ''
|-RecordDecl 0x55887c27f0e0 <line:945:9, line:948:1> line:945:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27f180 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43dd30 <line:943:4, col:37>
| | `-ParagraphComment 0x55887c43dd00 <col:4, col:37>
| |   `-TextComment 0x55887c43dcd0 <col:4, col:37> Text=" Memory Topology Table definition."
| |-FieldDecl 0x55887c27f1e8 <line:946:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c27f248 <line:947:3, col:34> col:34 Reserved 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c27f2f8 <line:945:1, line:948:3> col:3 EFI_ACPI_6_0_MEMORY_TOPOLOGY_TABLE 'struct EFI_ACPI_6_0_MEMORY_TOPOLOGY_TABLE':'EFI_ACPI_6_0_MEMORY_TOPOLOGY_TABLE'
| |-ElaboratedType 0x55887c27f2a0 'struct EFI_ACPI_6_0_MEMORY_TOPOLOGY_TABLE' sugar
| | `-RecordType 0x55887c27f160 'EFI_ACPI_6_0_MEMORY_TOPOLOGY_TABLE'
| |   `-Record 0x55887c27f0e0 ''
| `-FullComment 0x55887c43de00 <line:943:4, col:37>
|   `-ParagraphComment 0x55887c43ddd0 <col:4, col:37>
|     `-TextComment 0x55887c43dda0 <col:4, col:37> Text=" Memory Topology Table definition."
|-RecordDecl 0x55887c27f3c0 <line:958:9, line:964:1> line:958:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27f460 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43ded0 <line:956:4, col:46>
| | `-ParagraphComment 0x55887c43dea0 <col:4, col:46>
| |   `-TextComment 0x55887c43de70 <col:4, col:46> Text=" Common Memory Aggregator Device Structure."
| |-FieldDecl 0x55887c27f7e0 <line:959:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c27f840 <line:960:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c27f8a0 <line:961:3, col:13> col:13 Length 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c27f900 <line:962:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c27f960 <line:963:3, col:13> col:13 Reserved1 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c27fa08 <line:958:1, line:964:3> col:3 referenced EFI_ACPI_6_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE 'struct EFI_ACPI_6_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_6_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-ElaboratedType 0x55887c27f9b0 'struct EFI_ACPI_6_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE' sugar
| | `-RecordType 0x55887c27f440 'EFI_ACPI_6_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |   `-Record 0x55887c27f3c0 ''
| `-FullComment 0x55887c43dfa0 <line:956:4, col:46>
|   `-ParagraphComment 0x55887c43df70 <col:4, col:46>
|     `-TextComment 0x55887c43df40 <col:4, col:46> Text=" Common Memory Aggregator Device Structure."
|-RecordDecl 0x55887c27fad0 <line:976:9, line:981:1> line:976:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27fb70 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43e070 <line:974:4, col:46>
| | `-ParagraphComment 0x55887c43e040 <col:4, col:46>
| |   `-TextComment 0x55887c43e010 <col:4, col:46> Text=" Socket Memory Aggregator Device Structure."
| |-FieldDecl 0x55887c27fc00 <line:977:3, col:66> col:66 Header 'EFI_ACPI_6_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_6_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-FieldDecl 0x55887c27fc60 <line:978:3, col:66> col:66 SocketIdentifier 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c27fcc0 <line:979:3, col:66> col:66 Reserved 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c27fde8 <line:976:1, line:981:3> col:3 EFI_ACPI_6_0_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE 'struct EFI_ACPI_6_0_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_6_0_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-ElaboratedType 0x55887c27fd90 'struct EFI_ACPI_6_0_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE' sugar
| | `-RecordType 0x55887c27fb50 'EFI_ACPI_6_0_PMMT_SOCKET_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |   `-Record 0x55887c27fad0 ''
| `-FullComment 0x55887c43e140 <line:974:4, col:46>
|   `-ParagraphComment 0x55887c43e110 <col:4, col:46>
|     `-TextComment 0x55887c43e0e0 <col:4, col:46> Text=" Socket Memory Aggregator Device Structure."
|-RecordDecl 0x55887c27fe80 <line:986:9, line:998:1> line:986:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c27ff20 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43e210 <line:984:4, col:56>
| | `-ParagraphComment 0x55887c43e1e0 <col:4, col:56>
| |   `-TextComment 0x55887c43e1b0 <col:4, col:56> Text=" MemoryController Memory Aggregator Device Structure."
| |-FieldDecl 0x55887c27ff88 <line:987:3, col:66> col:66 Header 'EFI_ACPI_6_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_6_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-FieldDecl 0x55887c27ffe8 <line:988:3, col:66> col:66 ReadLatency 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c280048 <line:989:3, col:66> col:66 WriteLatency 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2800a8 <line:990:3, col:66> col:66 ReadBandwidth 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c280108 <line:991:3, col:66> col:66 WriteBandwidth 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c280168 <line:992:3, col:66> col:66 OptimalAccessUnit 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2801c8 <line:993:3, col:66> col:66 OptimalAccessAlignment 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c280228 <line:994:3, col:66> col:66 Reserved 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c280288 <line:995:3, col:66> col:66 NumberOfProximityDomains 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c280338 <line:986:1, line:998:3> col:3 EFI_ACPI_6_0_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE 'struct EFI_ACPI_6_0_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_6_0_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-ElaboratedType 0x55887c2802e0 'struct EFI_ACPI_6_0_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE' sugar
| | `-RecordType 0x55887c27ff00 'EFI_ACPI_6_0_PMMT_MEMORY_CONTROLLER_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |   `-Record 0x55887c27fe80 ''
| `-FullComment 0x55887c43e2e0 <line:984:4, col:56>
|   `-ParagraphComment 0x55887c43e2b0 <col:4, col:56>
|     `-TextComment 0x55887c43e280 <col:4, col:56> Text=" MemoryController Memory Aggregator Device Structure."
|-RecordDecl 0x55887c2803d0 <line:1003:9, line:1009:1> line:1003:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c280470 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43e3b0 <line:1001:4, col:44>
| | `-ParagraphComment 0x55887c43e380 <col:4, col:44>
| |   `-TextComment 0x55887c43e350 <col:4, col:44> Text=" DIMM Memory Aggregator Device Structure."
| |-FieldDecl 0x55887c2804d8 <line:1004:3, col:66> col:66 Header 'EFI_ACPI_6_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_6_0_PMMT_COMMON_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-FieldDecl 0x55887c280538 <line:1005:3, col:66> col:66 PhysicalComponentIdentifier 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c280598 <line:1006:3, col:66> col:66 Reserved 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2805f8 <line:1007:3, col:66> col:66 SizeOfDimm 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c280658 <line:1008:3, col:66> col:66 SmbiosHandle 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c280708 <line:1003:1, line:1009:3> col:3 EFI_ACPI_6_0_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE 'struct EFI_ACPI_6_0_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE':'EFI_ACPI_6_0_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |-ElaboratedType 0x55887c2806b0 'struct EFI_ACPI_6_0_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE' sugar
| | `-RecordType 0x55887c280450 'EFI_ACPI_6_0_PMMT_DIMM_MEMORY_AGGREGATOR_DEVICE_STRUCTURE'
| |   `-Record 0x55887c2803d0 ''
| `-FullComment 0x55887c43e480 <line:1001:4, col:44>
|   `-ParagraphComment 0x55887c43e450 <col:4, col:44>
|     `-TextComment 0x55887c43e420 <col:4, col:44> Text=" DIMM Memory Aggregator Device Structure."
|-RecordDecl 0x55887c2807a0 <line:1014:9, line:1049:1> line:1014:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c280840 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c43e550 <line:1012:4, col:44>
| | `-ParagraphComment 0x55887c43e520 <col:4, col:44>
| |   `-TextComment 0x55887c43e4f0 <col:4, col:44> Text=" Boot Graphics Resource Table definition."
| |-FieldDecl 0x55887c2808a8 <line:1015:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c280938 <line:1019:3, col:34> col:34 Version 'UINT16':'unsigned short'
| | `-FullComment 0x55887c43e620 <line:1017:6, col:56>
| |   `-ParagraphComment 0x55887c43e5f0 <col:6, col:56>
| |     `-TextComment 0x55887c43e5c0 <col:6, col:56> Text=" 2-bytes (16 bit) version ID. This value must be 1."
| |-FieldDecl 0x55887c2809c8 <line:1025:3, col:34> col:34 Status 'UINT8':'unsigned char'
| | `-FullComment 0x55887c43e740 <line:1021:6, line:1023:75>
| |   `-ParagraphComment 0x55887c43e710 <line:1021:6, line:1023:75>
| |     |-TextComment 0x55887c43e690 <line:1021:6, col:68> Text=" 1-byte status field indicating current status about the table."
| |     |-TextComment 0x55887c43e6b0 <line:1022:6, col:45> Text="     Bits[7:1] = Reserved (must be zero)"
| |     `-TextComment 0x55887c43e6d0 <line:1023:6, col:75> Text="     Bit [0] = Valid. A one indicates the boot image graphic is valid."
| |-FieldDecl 0x55887c280a58 <line:1031:3, col:34> col:34 ImageType 'UINT8':'unsigned char'
| | `-FullComment 0x55887c43e860 <line:1027:6, line:1029:44>
| |   `-ParagraphComment 0x55887c43e830 <line:1027:6, line:1029:44>
| |     |-TextComment 0x55887c43e7b0 <line:1027:6, col:66> Text=" 1-byte enumerated type field indicating format of the image."
| |     |-TextComment 0x55887c43e7d0 <line:1028:6, col:20> Text="     0 = Bitmap"
| |     `-TextComment 0x55887c43e7f0 <line:1029:6, col:44> Text="     1 - 255  Reserved (for future use)"
| |-FieldDecl 0x55887c280ae8 <line:1036:3, col:34> col:34 ImageAddress 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c43e950 <line:1033:6, line:1034:26>
| |   `-ParagraphComment 0x55887c43e920 <line:1033:6, line:1034:26>
| |     |-TextComment 0x55887c43e8d0 <line:1033:6, col:80> Text=" 8-byte (64 bit) physical address pointing to the firmware's in-memory copy"
| |     `-TextComment 0x55887c43e8f0 <line:1034:6, col:26> Text=" of the image bitmap."
| |-FieldDecl 0x55887c280b78 <line:1042:3, col:34> col:34 ImageOffsetX 'UINT32':'unsigned int'
| | `-FullComment 0x55887c441050 <line:1038:6, line:1040:61>
| |   `-ParagraphComment 0x55887c43ea40 <line:1038:6, line:1040:61>
| |     |-TextComment 0x55887c43e9c0 <line:1038:6, col:88> Text=" A 4-byte (32-bit) unsigned long describing the display X-offset of the boot image."
| |     |-TextComment 0x55887c43e9e0 <line:1039:6, col:69> Text=" (X, Y) display offset of the top left corner of the boot image."
| |     `-TextComment 0x55887c43ea00 <line:1040:6, col:61> Text=" The top left corner of the display is at offset (0, 0)."
| `-FieldDecl 0x55887c280c08 <line:1048:3, col:34> col:34 ImageOffsetY 'UINT32':'unsigned int'
|   `-FullComment 0x55887c441170 <line:1044:6, line:1046:61>
|     `-ParagraphComment 0x55887c441140 <line:1044:6, line:1046:61>
|       |-TextComment 0x55887c4410c0 <line:1044:6, col:88> Text=" A 4-byte (32-bit) unsigned long describing the display Y-offset of the boot image."
|       |-TextComment 0x55887c4410e0 <line:1045:6, col:69> Text=" (X, Y) display offset of the top left corner of the boot image."
|       `-TextComment 0x55887c441100 <line:1046:6, col:61> Text=" The top left corner of the display is at offset (0, 0)."
|-TypedefDecl 0x55887c280cb8 <line:1014:1, line:1049:3> col:3 EFI_ACPI_6_0_BOOT_GRAPHICS_RESOURCE_TABLE 'struct EFI_ACPI_6_0_BOOT_GRAPHICS_RESOURCE_TABLE':'EFI_ACPI_6_0_BOOT_GRAPHICS_RESOURCE_TABLE'
| |-ElaboratedType 0x55887c280c60 'struct EFI_ACPI_6_0_BOOT_GRAPHICS_RESOURCE_TABLE' sugar
| | `-RecordType 0x55887c280820 'EFI_ACPI_6_0_BOOT_GRAPHICS_RESOURCE_TABLE'
| |   `-Record 0x55887c2807a0 ''
| `-FullComment 0x55887c441240 <line:1012:4, col:44>
|   `-ParagraphComment 0x55887c441210 <col:4, col:44>
|     `-TextComment 0x55887c4411e0 <col:4, col:44> Text=" Boot Graphics Resource Table definition."
|-RecordDecl 0x55887c280f00 <line:1106:9, line:1110:1> line:1106:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c280fa0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c441310 <line:1104:4, col:34>
| | `-ParagraphComment 0x55887c4412e0 <col:4, col:34>
| |   `-TextComment 0x55887c4412b0 <col:4, col:34> Text=" FPDT Performance Record header"
| |-FieldDecl 0x55887c281008 <line:1107:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c281068 <line:1108:3, col:13> col:13 Length 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c2810c8 <line:1109:3, col:13> col:13 Revision 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c281178 <line:1106:1, line:1110:3> col:3 referenced EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER 'struct EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER'
| |-ElaboratedType 0x55887c281120 'struct EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER' sugar
| | `-RecordType 0x55887c280f80 'EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER'
| |   `-Record 0x55887c280f00 ''
| `-FullComment 0x55887c4413e0 <line:1104:4, col:34>
|   `-ParagraphComment 0x55887c4413b0 <col:4, col:34>
|     `-TextComment 0x55887c441380 <col:4, col:34> Text=" FPDT Performance Record header"
|-RecordDecl 0x55887c281210 <line:1115:9, line:1118:1> line:1115:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2812b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4414b0 <line:1113:4, col:33>
| | `-ParagraphComment 0x55887c441480 <col:4, col:33>
| |   `-TextComment 0x55887c441450 <col:4, col:33> Text=" FPDT Performance Table header"
| |-FieldDecl 0x55887c281318 <line:1116:3, col:13> col:13 Signature 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c281378 <line:1117:3, col:13> col:13 Length 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c281428 <line:1115:1, line:1118:3> col:3 referenced EFI_ACPI_6_0_FPDT_PERFORMANCE_TABLE_HEADER 'struct EFI_ACPI_6_0_FPDT_PERFORMANCE_TABLE_HEADER':'EFI_ACPI_6_0_FPDT_PERFORMANCE_TABLE_HEADER'
| |-ElaboratedType 0x55887c2813d0 'struct EFI_ACPI_6_0_FPDT_PERFORMANCE_TABLE_HEADER' sugar
| | `-RecordType 0x55887c281290 'EFI_ACPI_6_0_FPDT_PERFORMANCE_TABLE_HEADER'
| |   `-Record 0x55887c281210 ''
| `-FullComment 0x55887c441580 <line:1113:4, col:33>
|   `-ParagraphComment 0x55887c441550 <col:4, col:33>
|     `-TextComment 0x55887c441520 <col:4, col:33> Text=" FPDT Performance Table header"
|-RecordDecl 0x55887c2814c0 <line:1123:9, line:1130:1> line:1123:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c281560 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c441650 <line:1121:4, col:65>
| | `-ParagraphComment 0x55887c441620 <col:4, col:65>
| |   `-TextComment 0x55887c4415f0 <col:4, col:65> Text=" FPDT Firmware Basic Boot Performance Pointer Record Structure"
| |-FieldDecl 0x55887c2815f0 <line:1124:3, col:50> col:50 Header 'EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER'
| |-FieldDecl 0x55887c281650 <line:1125:3, col:50> col:50 Reserved 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c2816d8 <line:1129:3, col:50> col:50 BootPerformanceTablePointer 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c441720 <line:1127:6, col:85>
|     `-ParagraphComment 0x55887c4416f0 <col:6, col:85>
|       `-TextComment 0x55887c4416c0 <col:6, col:85> Text=" 64-bit processor-relative physical address of the Basic Boot Performance Table."
|-TypedefDecl 0x55887c2848a0 <line:1123:1, line:1130:3> col:3 EFI_ACPI_6_0_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD 'struct EFI_ACPI_6_0_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD':'EFI_ACPI_6_0_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD'
| |-ElaboratedType 0x55887c281790 'struct EFI_ACPI_6_0_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD' sugar
| | `-RecordType 0x55887c281540 'EFI_ACPI_6_0_FPDT_BOOT_PERFORMANCE_TABLE_POINTER_RECORD'
| |   `-Record 0x55887c2814c0 ''
| `-FullComment 0x55887c4417f0 <line:1121:4, col:65>
|   `-ParagraphComment 0x55887c4417c0 <col:4, col:65>
|     `-TextComment 0x55887c441790 <col:4, col:65> Text=" FPDT Firmware Basic Boot Performance Pointer Record Structure"
|-RecordDecl 0x55887c284940 <line:1135:9, line:1142:1> line:1135:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2849e0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4418c0 <line:1133:4, col:54>
| | `-ParagraphComment 0x55887c441890 <col:4, col:54>
| |   `-TextComment 0x55887c441860 <col:4, col:54> Text=" FPDT S3 Performance Table Pointer Record Structure"
| |-FieldDecl 0x55887c284a48 <line:1136:3, col:50> col:50 Header 'EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER'
| |-FieldDecl 0x55887c284aa8 <line:1137:3, col:50> col:50 Reserved 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c284b38 <line:1141:3, col:50> col:50 S3PerformanceTablePointer 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c441990 <line:1139:6, col:77>
|     `-ParagraphComment 0x55887c441960 <col:6, col:77>
|       `-TextComment 0x55887c441930 <col:6, col:77> Text=" 64-bit processor-relative physical address of the S3 Performance Table."
|-TypedefDecl 0x55887c284be8 <line:1135:1, line:1142:3> col:3 EFI_ACPI_6_0_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD 'struct EFI_ACPI_6_0_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD':'EFI_ACPI_6_0_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD'
| |-ElaboratedType 0x55887c284b90 'struct EFI_ACPI_6_0_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD' sugar
| | `-RecordType 0x55887c2849c0 'EFI_ACPI_6_0_FPDT_S3_PERFORMANCE_TABLE_POINTER_RECORD'
| |   `-Record 0x55887c284940 ''
| `-FullComment 0x55887c441a60 <line:1133:4, col:54>
|   `-ParagraphComment 0x55887c441a30 <col:4, col:54>
|     `-TextComment 0x55887c441a00 <col:4, col:54> Text=" FPDT S3 Performance Table Pointer Record Structure"
|-RecordDecl 0x55887c284c80 <line:1147:9, line:1178:1> line:1147:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c284d20 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c441b30 <line:1145:4, col:57>
| | `-ParagraphComment 0x55887c441b00 <col:4, col:57>
| |   `-TextComment 0x55887c441ad0 <col:4, col:57> Text=" FPDT Firmware Basic Boot Performance Record Structure"
| |-FieldDecl 0x55887c284d88 <line:1148:3, col:50> col:50 Header 'EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER'
| |-FieldDecl 0x55887c284de8 <line:1149:3, col:50> col:50 Reserved 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c284e78 <line:1154:3, col:50> col:50 ResetEnd 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c441c20 <line:1151:6, line:1152:47>
| |   `-ParagraphComment 0x55887c441bf0 <line:1151:6, line:1152:47>
| |     |-TextComment 0x55887c441ba0 <line:1151:6, col:70> Text=" Timer value logged at the beginning of firmware image execution."
| |     `-TextComment 0x55887c441bc0 <line:1152:6, col:47> Text=" This may not always be zero or near zero."
| |-FieldDecl 0x55887c284f08 <line:1159:3, col:50> col:50 OsLoaderLoadImageStart 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c441d10 <line:1156:6, line:1157:61>
| |   `-ParagraphComment 0x55887c441ce0 <line:1156:6, line:1157:61>
| |     |-TextComment 0x55887c441c90 <line:1156:6, col:78> Text=" Timer value logged just prior to loading the OS boot loader into memory."
| |     `-TextComment 0x55887c441cb0 <line:1157:6, col:61> Text=" For non-UEFI compatible boots, this field must be zero."
| |-FieldDecl 0x55887c284f98 <line:1165:3, col:50> col:50 OsLoaderStartImageStart 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c441e30 <line:1161:6, line:1163:40>
| |   `-ParagraphComment 0x55887c441e00 <line:1161:6, line:1163:40>
| |     |-TextComment 0x55887c441d80 <line:1161:6, col:92> Text=" Timer value logged just prior to launching the previously loaded OS boot loader image."
| |     |-TextComment 0x55887c441da0 <line:1162:6, col:78> Text=" For non-UEFI compatible boots, the timer value logged will be just prior"
| |     `-TextComment 0x55887c441dc0 <line:1163:6, col:40> Text=" to the INT 19h handler invocation."
| |-FieldDecl 0x55887c285028 <line:1171:3, col:50> col:50 ExitBootServicesEntry 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c441f50 <line:1167:6, line:1169:61>
| |   `-ParagraphComment 0x55887c441f20 <line:1167:6, line:1169:61>
| |     |-TextComment 0x55887c441ea0 <line:1167:6, col:66> Text=" Timer value logged at the point when the OS loader calls the"
| |     |-TextComment 0x55887c441ec0 <line:1168:6, col:61> Text=" ExitBootServices function for UEFI compatible firmware."
| |     `-TextComment 0x55887c441ee0 <line:1169:6, col:61> Text=" For non-UEFI compatible boots, this field must be zero."
| `-FieldDecl 0x55887c2850b8 <line:1177:3, col:50> col:50 ExitBootServicesExit 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c442070 <line:1173:6, line:1175:61>
|     `-ParagraphComment 0x55887c442040 <line:1173:6, line:1175:61>
|       |-TextComment 0x55887c441fc0 <line:1173:6, col:78> Text=" Timer value logged at the point just prior to when the OS loader gaining"
|       |-TextComment 0x55887c441fe0 <line:1174:6, col:89> Text=" control back from calls the ExitBootServices function for UEFI compatible firmware."
|       `-TextComment 0x55887c442000 <line:1175:6, col:61> Text=" For non-UEFI compatible boots, this field must be zero."
|-TypedefDecl 0x55887c285168 <line:1147:1, line:1178:3> col:3 EFI_ACPI_6_0_FPDT_FIRMWARE_BASIC_BOOT_RECORD 'struct EFI_ACPI_6_0_FPDT_FIRMWARE_BASIC_BOOT_RECORD':'EFI_ACPI_6_0_FPDT_FIRMWARE_BASIC_BOOT_RECORD'
| |-ElaboratedType 0x55887c285110 'struct EFI_ACPI_6_0_FPDT_FIRMWARE_BASIC_BOOT_RECORD' sugar
| | `-RecordType 0x55887c284d00 'EFI_ACPI_6_0_FPDT_FIRMWARE_BASIC_BOOT_RECORD'
| |   `-Record 0x55887c284c80 ''
| `-FullComment 0x55887c442140 <line:1145:4, col:57>
|   `-ParagraphComment 0x55887c442110 <col:4, col:57>
|     `-TextComment 0x55887c4420e0 <col:4, col:57> Text=" FPDT Firmware Basic Boot Performance Record Structure"
|-RecordDecl 0x55887c285200 <line:1188:9, line:1193:1> line:1188:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2852a0 <<invalid sloc>> Implicit 8
| `-FieldDecl 0x55887c285330 <line:1189:3, col:49> col:49 Header 'EFI_ACPI_6_0_FPDT_PERFORMANCE_TABLE_HEADER':'EFI_ACPI_6_0_FPDT_PERFORMANCE_TABLE_HEADER'
|-TypedefDecl 0x55887c285438 <line:1188:1, line:1193:3> col:3 EFI_ACPI_6_0_FPDT_FIRMWARE_BASIC_BOOT_TABLE 'struct EFI_ACPI_6_0_FPDT_FIRMWARE_BASIC_BOOT_TABLE':'EFI_ACPI_6_0_FPDT_FIRMWARE_BASIC_BOOT_TABLE'
| `-ElaboratedType 0x55887c2853e0 'struct EFI_ACPI_6_0_FPDT_FIRMWARE_BASIC_BOOT_TABLE' sugar
|   `-RecordType 0x55887c285280 'EFI_ACPI_6_0_FPDT_FIRMWARE_BASIC_BOOT_TABLE'
|     `-Record 0x55887c285200 ''
|-RecordDecl 0x55887c2854d0 <line:1203:9, line:1208:1> line:1203:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c285570 <<invalid sloc>> Implicit 8
| `-FieldDecl 0x55887c2855d8 <line:1204:3, col:49> col:49 Header 'EFI_ACPI_6_0_FPDT_PERFORMANCE_TABLE_HEADER':'EFI_ACPI_6_0_FPDT_PERFORMANCE_TABLE_HEADER'
|-TypedefDecl 0x55887c285688 <line:1203:1, line:1208:3> col:3 EFI_ACPI_6_0_FPDT_FIRMWARE_S3_BOOT_TABLE 'struct EFI_ACPI_6_0_FPDT_FIRMWARE_S3_BOOT_TABLE':'EFI_ACPI_6_0_FPDT_FIRMWARE_S3_BOOT_TABLE'
| `-ElaboratedType 0x55887c285630 'struct EFI_ACPI_6_0_FPDT_FIRMWARE_S3_BOOT_TABLE' sugar
|   `-RecordType 0x55887c285550 'EFI_ACPI_6_0_FPDT_FIRMWARE_S3_BOOT_TABLE'
|     `-Record 0x55887c2854d0 ''
|-RecordDecl 0x55887c285720 <line:1213:9, line:1230:1> line:1213:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2857c0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c442210 <line:1211:4, col:43>
| | `-ParagraphComment 0x55887c4421e0 <col:4, col:43>
| |   `-TextComment 0x55887c4421b0 <col:4, col:43> Text=" FPDT Basic S3 Resume Performance Record"
| |-FieldDecl 0x55887c285828 <line:1214:3, col:50> col:50 Header 'EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER'
| |-FieldDecl 0x55887c2858b8 <line:1218:3, col:50> col:50 ResumeCount 'UINT32':'unsigned int'
| | `-FullComment 0x55887c4422e0 <line:1216:6, col:82>
| |   `-ParagraphComment 0x55887c4422b0 <col:6, col:82>
| |     `-TextComment 0x55887c442280 <col:6, col:82> Text=" A count of the number of S3 resume cycles since the last full boot sequence."
| |-FieldDecl 0x55887c285948 <line:1223:3, col:50> col:50 FullResume 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c4423d0 <line:1220:6, line:1221:77>
| |   `-ParagraphComment 0x55887c4423a0 <line:1220:6, line:1221:77>
| |     |-TextComment 0x55887c442350 <line:1220:6, col:79> Text=" Timer recorded at the end of BIOS S3 resume, just prior to handoff to the"
| |     `-TextComment 0x55887c442370 <line:1221:6, col:77> Text=" OS waking vector. Only the most recent resume cycle's time is retained."
| `-FieldDecl 0x55887c2859d8 <line:1229:3, col:50> col:50 AverageResume 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c4424f0 <line:1225:6, line:1227:83>
|     `-ParagraphComment 0x55887c4424c0 <line:1225:6, line:1227:83>
|       |-TextComment 0x55887c442440 <line:1225:6, col:78> Text=" Average timer value of all resume cycles logged since the last full boot"
|       |-TextComment 0x55887c442460 <line:1226:6, col:78> Text=" sequence, including the most recent resume.  Note that the entire log of"
|       `-TextComment 0x55887c442480 <line:1227:6, col:83> Text=" timer values does not need to be retained in order to calculate this average."
|-TypedefDecl 0x55887c285a88 <line:1213:1, line:1230:3> col:3 EFI_ACPI_6_0_FPDT_S3_RESUME_RECORD 'struct EFI_ACPI_6_0_FPDT_S3_RESUME_RECORD':'EFI_ACPI_6_0_FPDT_S3_RESUME_RECORD'
| |-ElaboratedType 0x55887c285a30 'struct EFI_ACPI_6_0_FPDT_S3_RESUME_RECORD' sugar
| | `-RecordType 0x55887c2857a0 'EFI_ACPI_6_0_FPDT_S3_RESUME_RECORD'
| |   `-Record 0x55887c285720 ''
| `-FullComment 0x55887c4425c0 <line:1211:4, col:43>
|   `-ParagraphComment 0x55887c442590 <col:4, col:43>
|     `-TextComment 0x55887c442560 <col:4, col:43> Text=" FPDT Basic S3 Resume Performance Record"
|-RecordDecl 0x55887c285b20 <line:1235:9, line:1248:1> line:1235:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c285bc0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c442690 <line:1233:4, col:44>
| | `-ParagraphComment 0x55887c442660 <col:4, col:44>
| |   `-TextComment 0x55887c442630 <col:4, col:44> Text=" FPDT Basic S3 Suspend Performance Record"
| |-FieldDecl 0x55887c285c28 <line:1236:3, col:50> col:50 Header 'EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER':'EFI_ACPI_6_0_FPDT_PERFORMANCE_RECORD_HEADER'
| |-FieldDecl 0x55887c285cb8 <line:1241:3, col:50> col:50 SuspendStart 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c442780 <line:1238:6, line:1239:67>
| |   `-ParagraphComment 0x55887c442750 <line:1238:6, line:1239:67>
| |     |-TextComment 0x55887c442700 <line:1238:6, col:71> Text=" Timer value recorded at the OS write to SLP_TYP upon entry to S3."
| |     `-TextComment 0x55887c442720 <line:1239:6, col:67> Text=" Only the most recent suspend cycle's timer value is retained."
| `-FieldDecl 0x55887c285d48 <line:1247:3, col:50> col:50 SuspendEnd 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c4428a0 <line:1243:6, line:1245:67>
|     `-ParagraphComment 0x55887c442870 <line:1243:6, line:1245:67>
|       |-TextComment 0x55887c4427f0 <line:1243:6, col:75> Text=" Timer value recorded at the final firmware write to SLP_TYP (or other"
|       |-TextComment 0x55887c442810 <line:1244:6, col:54> Text=" mechanism) used to trigger hardware entry to S3."
|       `-TextComment 0x55887c442830 <line:1245:6, col:67> Text=" Only the most recent suspend cycle's timer value is retained."
|-TypedefDecl 0x55887c285df8 <line:1235:1, line:1248:3> col:3 EFI_ACPI_6_0_FPDT_S3_SUSPEND_RECORD 'struct EFI_ACPI_6_0_FPDT_S3_SUSPEND_RECORD':'EFI_ACPI_6_0_FPDT_S3_SUSPEND_RECORD'
| |-ElaboratedType 0x55887c285da0 'struct EFI_ACPI_6_0_FPDT_S3_SUSPEND_RECORD' sugar
| | `-RecordType 0x55887c285ba0 'EFI_ACPI_6_0_FPDT_S3_SUSPEND_RECORD'
| |   `-Record 0x55887c285b20 ''
| `-FullComment 0x55887c442970 <line:1233:4, col:44>
|   `-ParagraphComment 0x55887c442940 <col:4, col:44>
|     `-TextComment 0x55887c442910 <col:4, col:44> Text=" FPDT Basic S3 Suspend Performance Record"
|-RecordDecl 0x55887c285e90 <line:1253:9, line:1255:1> line:1253:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c285f30 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c442a40 <line:1251:4, col:49>
| | `-ParagraphComment 0x55887c442a10 <col:4, col:49>
| |   `-TextComment 0x55887c4429e0 <col:4, col:49> Text=" Firmware Performance Record Table definition."
| `-FieldDecl 0x55887c285f98 <line:1254:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
|-TypedefDecl 0x55887c286048 <line:1253:1, line:1255:3> col:3 EFI_ACPI_6_0_FIRMWARE_PERFORMANCE_RECORD_TABLE 'struct EFI_ACPI_6_0_FIRMWARE_PERFORMANCE_RECORD_TABLE':'EFI_ACPI_6_0_FIRMWARE_PERFORMANCE_RECORD_TABLE'
| |-ElaboratedType 0x55887c285ff0 'struct EFI_ACPI_6_0_FIRMWARE_PERFORMANCE_RECORD_TABLE' sugar
| | `-RecordType 0x55887c285f10 'EFI_ACPI_6_0_FIRMWARE_PERFORMANCE_RECORD_TABLE'
| |   `-Record 0x55887c285e90 ''
| `-FullComment 0x55887c442b10 <line:1251:4, col:49>
|   `-ParagraphComment 0x55887c442ae0 <col:4, col:49>
|     `-TextComment 0x55887c442ab0 <col:4, col:49> Text=" Firmware Performance Record Table definition."
|-RecordDecl 0x55887c2860e0 <line:1260:9, line:1275:1> line:1260:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c286180 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c442be0 <line:1258:4, col:47>
| | `-ParagraphComment 0x55887c442bb0 <col:4, col:47>
| |   `-TextComment 0x55887c442b80 <col:4, col:47> Text=" Generic Timer Description Table definition."
| |-FieldDecl 0x55887c2861e8 <line:1261:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c286248 <line:1262:3, col:34> col:34 CntControlBasePhysicalAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2862a8 <line:1263:3, col:34> col:34 Reserved 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c286308 <line:1264:3, col:34> col:34 SecurePL1TimerGSIV 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c286368 <line:1265:3, col:34> col:34 SecurePL1TimerFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2863c8 <line:1266:3, col:34> col:34 NonSecurePL1TimerGSIV 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c286428 <line:1267:3, col:34> col:34 NonSecurePL1TimerFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c286488 <line:1268:3, col:34> col:34 VirtualTimerGSIV 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2864e8 <line:1269:3, col:34> col:34 VirtualTimerFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c286548 <line:1270:3, col:34> col:34 NonSecurePL2TimerGSIV 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2865a8 <line:1271:3, col:34> col:34 NonSecurePL2TimerFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c286608 <line:1272:3, col:34> col:34 CntReadBasePhysicalAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c286668 <line:1273:3, col:34> col:34 PlatformTimerCount 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c2866c8 <line:1274:3, col:34> col:34 PlatformTimerOffset 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c286778 <line:1260:1, line:1275:3> col:3 EFI_ACPI_6_0_GENERIC_TIMER_DESCRIPTION_TABLE 'struct EFI_ACPI_6_0_GENERIC_TIMER_DESCRIPTION_TABLE':'EFI_ACPI_6_0_GENERIC_TIMER_DESCRIPTION_TABLE'
| |-ElaboratedType 0x55887c286720 'struct EFI_ACPI_6_0_GENERIC_TIMER_DESCRIPTION_TABLE' sugar
| | `-RecordType 0x55887c286160 'EFI_ACPI_6_0_GENERIC_TIMER_DESCRIPTION_TABLE'
| |   `-Record 0x55887c2860e0 ''
| `-FullComment 0x55887c442cb0 <line:1258:4, col:47>
|   `-ParagraphComment 0x55887c442c80 <col:4, col:47>
|     `-TextComment 0x55887c442c50 <col:4, col:47> Text=" Generic Timer Description Table definition."
|-RecordDecl 0x55887c28a8e0 <line:1298:9, line:1305:1> line:1298:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c28a980 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c442d80 <line:1296:4, col:22>
| | `-ParagraphComment 0x55887c442d50 <col:4, col:22>
| |   `-TextComment 0x55887c442d20 <col:4, col:22> Text=" GT Block Structure"
| |-FieldDecl 0x55887c28a9e8 <line:1299:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c28aa48 <line:1300:3, col:13> col:13 Length 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28aaa8 <line:1301:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c28ab08 <line:1302:3, col:13> col:13 CntCtlBase 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c28ab68 <line:1303:3, col:13> col:13 GTBlockTimerCount 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c28abc8 <line:1304:3, col:13> col:13 GTBlockTimerOffset 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c28ac78 <line:1298:1, line:1305:3> col:3 EFI_ACPI_6_0_GTDT_GT_BLOCK_STRUCTURE 'struct EFI_ACPI_6_0_GTDT_GT_BLOCK_STRUCTURE':'EFI_ACPI_6_0_GTDT_GT_BLOCK_STRUCTURE'
| |-ElaboratedType 0x55887c28ac20 'struct EFI_ACPI_6_0_GTDT_GT_BLOCK_STRUCTURE' sugar
| | `-RecordType 0x55887c28a960 'EFI_ACPI_6_0_GTDT_GT_BLOCK_STRUCTURE'
| |   `-Record 0x55887c28a8e0 ''
| `-FullComment 0x55887c442e50 <line:1296:4, col:22>
|   `-ParagraphComment 0x55887c442e20 <col:4, col:22>
|     `-TextComment 0x55887c442df0 <col:4, col:22> Text=" GT Block Structure"
|-RecordDecl 0x55887c28ad10 <line:1310:9, line:1320:1> line:1310:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c28adb0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c442f20 <line:1308:4, col:28>
| | `-ParagraphComment 0x55887c442ef0 <col:4, col:28>
| |   `-TextComment 0x55887c442ec0 <col:4, col:28> Text=" GT Block Timer Structure"
| |-FieldDecl 0x55887c28ae18 <line:1311:3, col:13> col:13 GTFrameNumber 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c28aec8 <line:1312:3, col:23> col:13 Reserved 'UINT8[3]'
| |-FieldDecl 0x55887c28af28 <line:1313:3, col:13> col:13 CntBaseX 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c28af88 <line:1314:3, col:13> col:13 CntEL0BaseX 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c28afe8 <line:1315:3, col:13> col:13 GTxPhysicalTimerGSIV 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c28b048 <line:1316:3, col:13> col:13 GTxPhysicalTimerFlags 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c28b0a8 <line:1317:3, col:13> col:13 GTxVirtualTimerGSIV 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c28b108 <line:1318:3, col:13> col:13 GTxVirtualTimerFlags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c28b168 <line:1319:3, col:13> col:13 GTxCommonFlags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c28b218 <line:1310:1, line:1320:3> col:3 EFI_ACPI_6_0_GTDT_GT_BLOCK_TIMER_STRUCTURE 'struct EFI_ACPI_6_0_GTDT_GT_BLOCK_TIMER_STRUCTURE':'EFI_ACPI_6_0_GTDT_GT_BLOCK_TIMER_STRUCTURE'
| |-ElaboratedType 0x55887c28b1c0 'struct EFI_ACPI_6_0_GTDT_GT_BLOCK_TIMER_STRUCTURE' sugar
| | `-RecordType 0x55887c28ad90 'EFI_ACPI_6_0_GTDT_GT_BLOCK_TIMER_STRUCTURE'
| |   `-Record 0x55887c28ad10 ''
| `-FullComment 0x55887c442ff0 <line:1308:4, col:28>
|   `-ParagraphComment 0x55887c442fc0 <col:4, col:28>
|     `-TextComment 0x55887c442f90 <col:4, col:28> Text=" GT Block Timer Structure"
|-RecordDecl 0x55887c28b310 <line:1337:9, line:1345:1> line:1337:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c28b3b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4430c0 <line:1335:4, col:35>
| | `-ParagraphComment 0x55887c443090 <col:4, col:35>
| |   `-TextComment 0x55887c443060 <col:4, col:35> Text=" SBSA Generic Watchdog Structure"
| |-FieldDecl 0x55887c28b418 <line:1338:3, col:13> col:13 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c28b478 <line:1339:3, col:13> col:13 Length 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28b4d8 <line:1340:3, col:13> col:13 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c28b538 <line:1341:3, col:13> col:13 RefreshFramePhysicalAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c28b598 <line:1342:3, col:13> col:13 WatchdogControlFramePhysicalAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c28b5f8 <line:1343:3, col:13> col:13 WatchdogTimerGSIV 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c28b658 <line:1344:3, col:13> col:13 WatchdogTimerFlags 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c28b708 <line:1337:1, line:1345:3> col:3 EFI_ACPI_6_0_GTDT_SBSA_GENERIC_WATCHDOG_STRUCTURE 'struct EFI_ACPI_6_0_GTDT_SBSA_GENERIC_WATCHDOG_STRUCTURE':'EFI_ACPI_6_0_GTDT_SBSA_GENERIC_WATCHDOG_STRUCTURE'
| |-ElaboratedType 0x55887c28b6b0 'struct EFI_ACPI_6_0_GTDT_SBSA_GENERIC_WATCHDOG_STRUCTURE' sugar
| | `-RecordType 0x55887c28b390 'EFI_ACPI_6_0_GTDT_SBSA_GENERIC_WATCHDOG_STRUCTURE'
| |   `-Record 0x55887c28b310 ''
| `-FullComment 0x55887c443190 <line:1335:4, col:35>
|   `-ParagraphComment 0x55887c443160 <col:4, col:35>
|     `-TextComment 0x55887c443130 <col:4, col:35> Text=" SBSA Generic Watchdog Structure"
|-RecordDecl 0x55887c28b7a0 <line:1357:9, line:1360:1> line:1357:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c28b840 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c28b8a8 <line:1358:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c28b908 <line:1359:3, col:34> col:34 Reserved 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c28b9b8 <line:1357:1, line:1360:3> col:3 EFI_ACPI_6_0_NVDIMM_FIRMWARE_INTERFACE_TABLE 'struct EFI_ACPI_6_0_NVDIMM_FIRMWARE_INTERFACE_TABLE':'EFI_ACPI_6_0_NVDIMM_FIRMWARE_INTERFACE_TABLE'
| `-ElaboratedType 0x55887c28b960 'struct EFI_ACPI_6_0_NVDIMM_FIRMWARE_INTERFACE_TABLE' sugar
|   `-RecordType 0x55887c28b820 'EFI_ACPI_6_0_NVDIMM_FIRMWARE_INTERFACE_TABLE'
|     `-Record 0x55887c28b7a0 ''
|-RecordDecl 0x55887c28ba28 <line:1381:9, line:1384:1> line:1381:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c28bad0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c28bb38 <line:1382:3, col:13> col:13 Type 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c28bb98 <line:1383:3, col:13> col:13 Length 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c28bc48 <line:1381:1, line:1384:3> col:3 EFI_ACPI_6_0_NFIT_STRUCTURE_HEADER 'struct EFI_ACPI_6_0_NFIT_STRUCTURE_HEADER':'EFI_ACPI_6_0_NFIT_STRUCTURE_HEADER'
| `-ElaboratedType 0x55887c28bbf0 'struct EFI_ACPI_6_0_NFIT_STRUCTURE_HEADER' sugar
|   `-RecordType 0x55887c28bab0 'EFI_ACPI_6_0_NFIT_STRUCTURE_HEADER'
|     `-Record 0x55887c28ba28 ''
|-RecordDecl 0x55887c28bcb8 <line:1399:9, line:1410:1> line:1399:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c28bd60 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c28bdc8 <line:1400:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28be28 <line:1401:3, col:13> col:13 Length 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28be88 <line:1402:3, col:13> col:13 SPARangeStructureIndex 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28bee8 <line:1403:3, col:13> col:13 Flags 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28bf48 <line:1404:3, col:13> col:13 Reserved_8 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c28bfa8 <line:1405:3, col:13> col:13 ProximityDomain 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c28c008 <line:1406:3, col:13> col:13 AddressRangeTypeGUID 'GUID':'GUID'
| |-FieldDecl 0x55887c28c068 <line:1407:3, col:13> col:13 SystemPhysicalAddressRangeBase 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c28c0c8 <line:1408:3, col:13> col:13 SystemPhysicalAddressRangeLength 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c28c128 <line:1409:3, col:13> col:13 AddressRangeMemoryMappingAttribute 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c28c1d8 <line:1399:1, line:1410:3> col:3 EFI_ACPI_6_0_NFIT_SYSTEM_PHYSICAL_ADDRESS_RANGE_STRUCTURE 'struct EFI_ACPI_6_0_NFIT_SYSTEM_PHYSICAL_ADDRESS_RANGE_STRUCTURE':'EFI_ACPI_6_0_NFIT_SYSTEM_PHYSICAL_ADDRESS_RANGE_STRUCTURE'
| `-ElaboratedType 0x55887c28c180 'struct EFI_ACPI_6_0_NFIT_SYSTEM_PHYSICAL_ADDRESS_RANGE_STRUCTURE' sugar
|   `-RecordType 0x55887c28bd40 'EFI_ACPI_6_0_NFIT_SYSTEM_PHYSICAL_ADDRESS_RANGE_STRUCTURE'
|     `-Record 0x55887c28bcb8 ''
|-RecordDecl 0x55887c28c248 <line:1415:9, line:1422:1> line:1415:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c28c2f0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c28c398 <line:1416:3, col:35> col:13 DIMMNumber 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c28c378 <col:35> 'int'
| |   |-value: Int 4
| |   `-IntegerLiteral 0x55887c28c348 <col:35> 'int' 4
| |-FieldDecl 0x55887c28c438 <line:1417:3, col:35> col:13 MemoryChannelNumber 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c28c418 <col:35> 'int'
| |   |-value: Int 4
| |   `-IntegerLiteral 0x55887c28c3e8 <col:35> 'int' 4
| |-FieldDecl 0x55887c28c4d8 <line:1418:3, col:35> col:13 MemoryControllerID 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c28c4b8 <col:35> 'int'
| |   |-value: Int 4
| |   `-IntegerLiteral 0x55887c28c488 <col:35> 'int' 4
| |-FieldDecl 0x55887c28c578 <line:1419:3, col:35> col:13 SocketID 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c28c558 <col:35> 'int'
| |   |-value: Int 4
| |   `-IntegerLiteral 0x55887c28c528 <col:35> 'int' 4
| |-FieldDecl 0x55887c28c618 <line:1420:3, col:35> col:13 NodeControllerID 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c28c5f8 <col:35> 'int'
| |   |-value: Int 12
| |   `-IntegerLiteral 0x55887c28c5c8 <col:35> 'int' 12
| `-FieldDecl 0x55887c28c6b8 <line:1421:3, col:35> col:13 Reserved_28 'UINT32':'unsigned int'
|   `-ConstantExpr 0x55887c28c698 <col:35> 'int'
|     |-value: Int 4
|     `-IntegerLiteral 0x55887c28c668 <col:35> 'int' 4
|-TypedefDecl 0x55887c28c768 <line:1415:1, line:1422:3> col:3 referenced EFI_ACPI_6_0_NFIT_DEVICE_HANDLE 'struct EFI_ACPI_6_0_NFIT_DEVICE_HANDLE':'EFI_ACPI_6_0_NFIT_DEVICE_HANDLE'
| `-ElaboratedType 0x55887c28c710 'struct EFI_ACPI_6_0_NFIT_DEVICE_HANDLE' sugar
|   `-RecordType 0x55887c28c2d0 'EFI_ACPI_6_0_NFIT_DEVICE_HANDLE'
|     `-Record 0x55887c28c248 ''
|-RecordDecl 0x55887c28c7d8 <line:1430:9, line:1445:1> line:1430:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c28e8c0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c28e928 <line:1431:3, col:38> col:38 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28e988 <line:1432:3, col:38> col:38 Length 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28ea10 <line:1433:3, col:38> col:38 NFITDeviceHandle 'EFI_ACPI_6_0_NFIT_DEVICE_HANDLE':'EFI_ACPI_6_0_NFIT_DEVICE_HANDLE'
| |-FieldDecl 0x55887c28ea70 <line:1434:3, col:38> col:38 MemoryDevicePhysicalID 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28ead0 <line:1435:3, col:38> col:38 MemoryDeviceRegionID 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28eb30 <line:1436:3, col:38> col:38 SPARangeStructureIndex 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28eb90 <line:1437:3, col:38> col:38 NVDIMMControlRegionStructureIndex 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28ebf0 <line:1438:3, col:38> col:38 MemoryDeviceRegionSize 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c28ec50 <line:1439:3, col:38> col:38 RegionOffset 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c28ecb0 <line:1440:3, col:38> col:38 MemoryDevicePhysicalAddressRegionBase 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c28ed10 <line:1441:3, col:38> col:38 InterleaveStructureIndex 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28ed70 <line:1442:3, col:38> col:38 InterleaveWays 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28edd0 <line:1443:3, col:38> col:38 MemoryDeviceStateFlags 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c28ee30 <line:1444:3, col:38> col:38 Reserved_46 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c28eed8 <line:1430:1, line:1445:3> col:3 EFI_ACPI_6_0_NFIT_MEMORY_DEVICE_TO_SYSTEM_ADDRESS_RANGE_MAP_STRUCTURE 'struct EFI_ACPI_6_0_NFIT_MEMORY_DEVICE_TO_SYSTEM_ADDRESS_RANGE_MAP_STRUCTURE':'EFI_ACPI_6_0_NFIT_MEMORY_DEVICE_TO_SYSTEM_ADDRESS_RANGE_MAP_STRUCTURE'
| `-ElaboratedType 0x55887c28ee80 'struct EFI_ACPI_6_0_NFIT_MEMORY_DEVICE_TO_SYSTEM_ADDRESS_RANGE_MAP_STRUCTURE' sugar
|   `-RecordType 0x55887c28c860 'EFI_ACPI_6_0_NFIT_MEMORY_DEVICE_TO_SYSTEM_ADDRESS_RANGE_MAP_STRUCTURE'
|     `-Record 0x55887c28c7d8 ''
|-RecordDecl 0x55887c28ef48 <line:1450:9, line:1458:1> line:1450:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c28eff0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c28f058 <line:1451:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28f0b8 <line:1452:3, col:13> col:13 Length 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28f118 <line:1453:3, col:13> col:13 InterleaveStructureIndex 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28f178 <line:1454:3, col:13> col:13 Reserved_6 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28f1d8 <line:1455:3, col:13> col:13 NumberOfLines 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c28f238 <line:1456:3, col:13> col:13 LineSize 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c28f2e8 <line:1450:1, line:1458:3> col:3 EFI_ACPI_6_0_NFIT_INTERLEAVE_STRUCTURE 'struct EFI_ACPI_6_0_NFIT_INTERLEAVE_STRUCTURE':'EFI_ACPI_6_0_NFIT_INTERLEAVE_STRUCTURE'
| `-ElaboratedType 0x55887c28f290 'struct EFI_ACPI_6_0_NFIT_INTERLEAVE_STRUCTURE' sugar
|   `-RecordType 0x55887c28efd0 'EFI_ACPI_6_0_NFIT_INTERLEAVE_STRUCTURE'
|     `-Record 0x55887c28ef48 ''
|-RecordDecl 0x55887c28f358 <line:1463:9, line:1468:1> line:1463:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c28f400 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c28f468 <line:1464:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28f4c8 <line:1465:3, col:13> col:13 Length 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c28f528 <line:1466:3, col:13> col:13 Reserved_4 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c28f5d8 <line:1463:1, line:1468:3> col:3 EFI_ACPI_6_0_NFIT_SMBIOS_MANAGEMENT_INFORMATION_STRUCTURE 'struct EFI_ACPI_6_0_NFIT_SMBIOS_MANAGEMENT_INFORMATION_STRUCTURE':'EFI_ACPI_6_0_NFIT_SMBIOS_MANAGEMENT_INFORMATION_STRUCTURE'
| `-ElaboratedType 0x55887c28f580 'struct EFI_ACPI_6_0_NFIT_SMBIOS_MANAGEMENT_INFORMATION_STRUCTURE' sugar
|   `-RecordType 0x55887c28f3e0 'EFI_ACPI_6_0_NFIT_SMBIOS_MANAGEMENT_INFORMATION_STRUCTURE'
|     `-Record 0x55887c28f358 ''
|-RecordDecl 0x55887c28f648 <line:1474:9, line:1495:1> line:1474:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c28f6f0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c28f758 <line:1475:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28f7b8 <line:1476:3, col:13> col:13 Length 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28f818 <line:1477:3, col:13> col:13 NVDIMMControlRegionStructureIndex 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28f878 <line:1478:3, col:13> col:13 VendorID 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28f8d8 <line:1479:3, col:13> col:13 DeviceID 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28f938 <line:1480:3, col:13> col:13 RevisionID 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28f998 <line:1481:3, col:13> col:13 SubsystemVendorID 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28f9f8 <line:1482:3, col:13> col:13 SubsystemDeviceID 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28fa58 <line:1483:3, col:13> col:13 SubsystemRevisionID 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28fb08 <line:1484:3, col:26> col:13 Reserved_18 'UINT8[6]'
| |-FieldDecl 0x55887c28fb68 <line:1485:3, col:13> col:13 SerialNumber 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c28fbc8 <line:1486:3, col:13> col:13 RegionFormatInterfaceCode 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28fc28 <line:1487:3, col:13> col:13 NumberOfBlockControlWindows 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c28fc88 <line:1488:3, col:13> col:13 SizeOfBlockControlWindow 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c28fce8 <line:1489:3, col:13> col:13 CommandRegisterOffsetInBlockControlWindow 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c28fd48 <line:1490:3, col:13> col:13 SizeOfCommandRegisterInBlockControlWindows 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c28fda8 <line:1491:3, col:13> col:13 StatusRegisterOffsetInBlockControlWindow 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c28fe08 <line:1492:3, col:13> col:13 SizeOfStatusRegisterInBlockControlWindows 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c28fe68 <line:1493:3, col:13> col:13 NVDIMMControlRegionFlag 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c28ff18 <line:1494:3, col:26> col:13 Reserved_74 'UINT8[6]'
|-TypedefDecl 0x55887c28ffc8 <line:1474:1, line:1495:3> col:3 EFI_ACPI_6_0_NFIT_NVDIMM_CONTROL_REGION_STRUCTURE 'struct EFI_ACPI_6_0_NFIT_NVDIMM_CONTROL_REGION_STRUCTURE':'EFI_ACPI_6_0_NFIT_NVDIMM_CONTROL_REGION_STRUCTURE'
| `-ElaboratedType 0x55887c28ff70 'struct EFI_ACPI_6_0_NFIT_NVDIMM_CONTROL_REGION_STRUCTURE' sugar
|   `-RecordType 0x55887c28f6d0 'EFI_ACPI_6_0_NFIT_NVDIMM_CONTROL_REGION_STRUCTURE'
|     `-Record 0x55887c28f648 ''
|-RecordDecl 0x55887c290038 <line:1500:9, line:1509:1> line:1500:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2900e0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c290148 <line:1501:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2901a8 <line:1502:3, col:13> col:13 Length 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c290208 <line:1503:3, col:13> col:13 NVDIMMControlRegionStructureIndex 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c290268 <line:1504:3, col:13> col:13 NumberOfBlockDataWindows 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2902c8 <line:1505:3, col:13> col:13 BlockDataWindowStartOffset 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c290328 <line:1506:3, col:13> col:13 SizeOfBlockDataWindow 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c290388 <line:1507:3, col:13> col:13 BlockAccessibleMemoryCapacity 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c2903e8 <line:1508:3, col:13> col:13 BeginningAddressOfFirstBlockInBlockAccessibleMemory 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c290498 <line:1500:1, line:1509:3> col:3 EFI_ACPI_6_0_NFIT_NVDIMM_BLOCK_DATA_WINDOW_REGION_STRUCTURE 'struct EFI_ACPI_6_0_NFIT_NVDIMM_BLOCK_DATA_WINDOW_REGION_STRUCTURE':'EFI_ACPI_6_0_NFIT_NVDIMM_BLOCK_DATA_WINDOW_REGION_STRUCTURE'
| `-ElaboratedType 0x55887c290440 'struct EFI_ACPI_6_0_NFIT_NVDIMM_BLOCK_DATA_WINDOW_REGION_STRUCTURE' sugar
|   `-RecordType 0x55887c2900c0 'EFI_ACPI_6_0_NFIT_NVDIMM_BLOCK_DATA_WINDOW_REGION_STRUCTURE'
|     `-Record 0x55887c290038 ''
|-RecordDecl 0x55887c290508 <line:1514:9, line:1521:1> line:1514:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2905b0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c290618 <line:1515:3, col:38> col:38 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c290678 <line:1516:3, col:38> col:38 Length 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2906d8 <line:1517:3, col:38> col:38 NFITDeviceHandle 'EFI_ACPI_6_0_NFIT_DEVICE_HANDLE':'EFI_ACPI_6_0_NFIT_DEVICE_HANDLE'
| |-FieldDecl 0x55887c290738 <line:1518:3, col:38> col:38 NumberOfFlushHintAddresses 'UINT16':'unsigned short'
| `-FieldDecl 0x55887c2907e8 <line:1519:3, col:51> col:38 Reserved_10 'UINT8[6]'
|-TypedefDecl 0x55887c2928e0 <line:1514:1, line:1521:3> col:3 EFI_ACPI_6_0_NFIT_FLUSH_HINT_ADDRESS_STRUCTURE 'struct EFI_ACPI_6_0_NFIT_FLUSH_HINT_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_NFIT_FLUSH_HINT_ADDRESS_STRUCTURE'
| `-ElaboratedType 0x55887c290840 'struct EFI_ACPI_6_0_NFIT_FLUSH_HINT_ADDRESS_STRUCTURE' sugar
|   `-RecordType 0x55887c290590 'EFI_ACPI_6_0_NFIT_FLUSH_HINT_ADDRESS_STRUCTURE'
|     `-Record 0x55887c290508 ''
|-RecordDecl 0x55887c292980 <line:1526:9, line:1530:1> line:1526:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c292a20 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c443260 <line:1524:4, col:34>
| | `-ParagraphComment 0x55887c443230 <col:4, col:34>
| |   `-TextComment 0x55887c443200 <col:4, col:34> Text=" Boot Error Record Table (BERT)"
| |-FieldDecl 0x55887c292a88 <line:1527:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c292ae8 <line:1528:3, col:34> col:34 BootErrorRegionLength 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c292b48 <line:1529:3, col:34> col:34 BootErrorRegion 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c292bf8 <line:1526:1, line:1530:3> col:3 EFI_ACPI_6_0_BOOT_ERROR_RECORD_TABLE_HEADER 'struct EFI_ACPI_6_0_BOOT_ERROR_RECORD_TABLE_HEADER':'EFI_ACPI_6_0_BOOT_ERROR_RECORD_TABLE_HEADER'
| |-ElaboratedType 0x55887c292ba0 'struct EFI_ACPI_6_0_BOOT_ERROR_RECORD_TABLE_HEADER' sugar
| | `-RecordType 0x55887c292a00 'EFI_ACPI_6_0_BOOT_ERROR_RECORD_TABLE_HEADER'
| |   `-Record 0x55887c292980 ''
| `-FullComment 0x55887c443330 <line:1524:4, col:34>
|   `-ParagraphComment 0x55887c443300 <col:4, col:34>
|     `-TextComment 0x55887c4432d0 <col:4, col:34> Text=" Boot Error Record Table (BERT)"
|-RecordDecl 0x55887c292cc0 <line:1540:9, line:1547:1> line:1540:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c292d60 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c443400 <line:1538:4, col:45>
| | `-ParagraphComment 0x55887c4433d0 <col:4, col:45>
| |   `-TextComment 0x55887c4433a0 <col:4, col:45> Text=" Boot Error Region Block Status Definition"
| |-FieldDecl 0x55887c292e08 <line:1541:3, col:43> col:13 UncorrectableErrorValid 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c292de8 <col:43> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c292db8 <col:43> 'int' 1
| |-FieldDecl 0x55887c292ea8 <line:1542:3, col:43> col:13 CorrectableErrorValid 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c292e88 <col:43> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c292e58 <col:43> 'int' 1
| |-FieldDecl 0x55887c292f48 <line:1543:3, col:43> col:13 MultipleUncorrectableErrors 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c292f28 <col:43> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c292ef8 <col:43> 'int' 1
| |-FieldDecl 0x55887c292fe8 <line:1544:3, col:43> col:13 MultipleCorrectableErrors 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c292fc8 <col:43> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c292f98 <col:43> 'int' 1
| |-FieldDecl 0x55887c293088 <line:1545:3, col:43> col:13 ErrorDataEntryCount 'UINT32':'unsigned int'
| | `-ConstantExpr 0x55887c293068 <col:43> 'int'
| |   |-value: Int 10
| |   `-IntegerLiteral 0x55887c293038 <col:43> 'int' 10
| `-FieldDecl 0x55887c293128 <line:1546:3, col:43> col:13 Reserved 'UINT32':'unsigned int'
|   `-ConstantExpr 0x55887c293108 <col:43> 'int'
|     |-value: Int 18
|     `-IntegerLiteral 0x55887c2930d8 <col:43> 'int' 18
|-TypedefDecl 0x55887c2931d8 <line:1540:1, line:1547:3> col:3 referenced EFI_ACPI_6_0_ERROR_BLOCK_STATUS 'struct EFI_ACPI_6_0_ERROR_BLOCK_STATUS':'EFI_ACPI_6_0_ERROR_BLOCK_STATUS'
| |-ElaboratedType 0x55887c293180 'struct EFI_ACPI_6_0_ERROR_BLOCK_STATUS' sugar
| | `-RecordType 0x55887c292d40 'EFI_ACPI_6_0_ERROR_BLOCK_STATUS'
| |   `-Record 0x55887c292cc0 ''
| `-FullComment 0x55887c4434d0 <line:1538:4, col:45>
|   `-ParagraphComment 0x55887c4434a0 <col:4, col:45>
|     `-TextComment 0x55887c443470 <col:4, col:45> Text=" Boot Error Region Block Status Definition"
|-RecordDecl 0x55887c293270 <line:1552:9, line:1558:1> line:1552:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c293310 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4435a0 <line:1550:4, col:32>
| | `-ParagraphComment 0x55887c443570 <col:4, col:32>
| |   `-TextComment 0x55887c443540 <col:4, col:32> Text=" Boot Error Region Definition"
| |-FieldDecl 0x55887c2933a0 <line:1553:3, col:38> col:38 BlockStatus 'EFI_ACPI_6_0_ERROR_BLOCK_STATUS':'EFI_ACPI_6_0_ERROR_BLOCK_STATUS'
| |-FieldDecl 0x55887c293400 <line:1554:3, col:38> col:38 RawDataOffset 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c293460 <line:1555:3, col:38> col:38 RawDataLength 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2934c0 <line:1556:3, col:38> col:38 DataLength 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c293520 <line:1557:3, col:38> col:38 ErrorSeverity 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c293648 <line:1552:1, line:1558:3> col:3 EFI_ACPI_6_0_BOOT_ERROR_REGION_STRUCTURE 'struct EFI_ACPI_6_0_BOOT_ERROR_REGION_STRUCTURE':'EFI_ACPI_6_0_BOOT_ERROR_REGION_STRUCTURE'
| |-ElaboratedType 0x55887c2935f0 'struct EFI_ACPI_6_0_BOOT_ERROR_REGION_STRUCTURE' sugar
| | `-RecordType 0x55887c2932f0 'EFI_ACPI_6_0_BOOT_ERROR_REGION_STRUCTURE'
| |   `-Record 0x55887c293270 ''
| `-FullComment 0x55887c443670 <line:1550:4, col:32>
|   `-ParagraphComment 0x55887c443640 <col:4, col:32>
|     `-TextComment 0x55887c443610 <col:4, col:32> Text=" Boot Error Region Definition"
|-RecordDecl 0x55887c2936e0 <line:1577:9, line:1586:1> line:1577:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c293780 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c443740 <line:1575:4, col:39>
| | `-ParagraphComment 0x55887c443710 <col:4, col:39>
| |   `-TextComment 0x55887c4436e0 <col:4, col:39> Text=" Generic Error Data Entry Definition"
| |-FieldDecl 0x55887c293838 <line:1578:3, col:27> col:13 SectionType 'UINT8[16]'
| |-FieldDecl 0x55887c293898 <line:1579:3, col:13> col:13 ErrorSeverity 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2938f8 <line:1580:3, col:13> col:13 Revision 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c293958 <line:1581:3, col:13> col:13 ValidationBits 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2939b8 <line:1582:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c293a18 <line:1583:3, col:13> col:13 ErrorDataLength 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c293ac8 <line:1584:3, col:21> col:13 FruId 'UINT8[16]'
| `-FieldDecl 0x55887c293b78 <line:1585:3, col:23> col:13 FruText 'UINT8[20]'
|-TypedefDecl 0x55887c293c28 <line:1577:1, line:1586:3> col:3 EFI_ACPI_6_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE 'struct EFI_ACPI_6_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE'
| |-ElaboratedType 0x55887c293bd0 'struct EFI_ACPI_6_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE' sugar
| | `-RecordType 0x55887c293760 'EFI_ACPI_6_0_GENERIC_ERROR_DATA_ENTRY_STRUCTURE'
| |   `-Record 0x55887c2936e0 ''
| `-FullComment 0x55887c443810 <line:1575:4, col:39>
|   `-ParagraphComment 0x55887c4437e0 <col:4, col:39>
|     `-TextComment 0x55887c4437b0 <col:4, col:39> Text=" Generic Error Data Entry Definition"
|-RecordDecl 0x55887c293cf0 <line:1596:9, line:1599:1> line:1596:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c293d90 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4438e0 <line:1594:4, col:38>
| | `-ParagraphComment 0x55887c4438b0 <col:4, col:38>
| |   `-TextComment 0x55887c443880 <col:4, col:38> Text=" HEST - Hardware Error Source Table"
| |-FieldDecl 0x55887c293df8 <line:1597:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| `-FieldDecl 0x55887c293e58 <line:1598:3, col:34> col:34 ErrorSourceCount 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c293f08 <line:1596:1, line:1599:3> col:3 EFI_ACPI_6_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER 'struct EFI_ACPI_6_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER':'EFI_ACPI_6_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER'
| |-ElaboratedType 0x55887c293eb0 'struct EFI_ACPI_6_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER' sugar
| | `-RecordType 0x55887c293d70 'EFI_ACPI_6_0_HARDWARE_ERROR_SOURCE_TABLE_HEADER'
| |   `-Record 0x55887c293cf0 ''
| `-FullComment 0x55887c4439b0 <line:1594:4, col:38>
|   `-ParagraphComment 0x55887c443980 <col:4, col:38>
|     `-TextComment 0x55887c443950 <col:4, col:38> Text=" HEST - Hardware Error Source Table"
|-RecordDecl 0x55887c293fd0 <line:1626:9, line:1638:1> line:1626:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c294070 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c443a80 <line:1624:4, col:67>
| | `-ParagraphComment 0x55887c443a50 <col:4, col:67>
| |   `-TextComment 0x55887c443a20 <col:4, col:67> Text=" IA-32 Architecture Machine Check Exception Structure Definition"
| |-FieldDecl 0x55887c2940d8 <line:1627:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c294138 <line:1628:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2941e8 <line:1629:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c294248 <line:1630:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2942a8 <line:1631:3, col:13> col:13 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c294308 <line:1632:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c294368 <line:1633:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2943c8 <line:1634:3, col:13> col:13 GlobalCapabilityInitData 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c294428 <line:1635:3, col:13> col:13 GlobalControlInitData 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c294488 <line:1636:3, col:13> col:13 NumberOfHardwareBanks 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c294538 <line:1637:3, col:24> col:13 Reserved1 'UINT8[7]'
|-TypedefDecl 0x55887c2945e8 <line:1626:1, line:1638:3> col:3 EFI_ACPI_6_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE 'struct EFI_ACPI_6_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE':'EFI_ACPI_6_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE'
| |-ElaboratedType 0x55887c294590 'struct EFI_ACPI_6_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE' sugar
| | `-RecordType 0x55887c294050 'EFI_ACPI_6_0_IA32_ARCHITECTURE_MACHINE_CHECK_EXCEPTION_STRUCTURE'
| |   `-Record 0x55887c293fd0 ''
| `-FullComment 0x55887c443b50 <line:1624:4, col:67>
|   `-ParagraphComment 0x55887c443b20 <col:4, col:67>
|     `-TextComment 0x55887c443af0 <col:4, col:67> Text=" IA-32 Architecture Machine Check Exception Structure Definition"
|-RecordDecl 0x55887c294680 <line:1643:9, line:1653:1> line:1643:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c294720 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c443c20 <line:1641:4, col:62>
| | `-ParagraphComment 0x55887c443bf0 <col:4, col:62>
| |   `-TextComment 0x55887c443bc0 <col:4, col:62> Text=" IA-32 Architecture Machine Check Bank Structure Definition"
| |-FieldDecl 0x55887c294788 <line:1644:3, col:13> col:13 BankNumber 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2947e8 <line:1645:3, col:13> col:13 ClearStatusOnInitialization 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c294848 <line:1646:3, col:13> col:13 StatusDataFormat 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c296900 <line:1647:3, col:13> col:13 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c296960 <line:1648:3, col:13> col:13 ControlRegisterMsrAddress 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2969c0 <line:1649:3, col:13> col:13 ControlInitData 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c296a20 <line:1650:3, col:13> col:13 StatusRegisterMsrAddress 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c296a80 <line:1651:3, col:13> col:13 AddressRegisterMsrAddress 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c296ae0 <line:1652:3, col:13> col:13 MiscRegisterMsrAddress 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c296b88 <line:1643:1, line:1653:3> col:3 EFI_ACPI_6_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE 'struct EFI_ACPI_6_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE':'EFI_ACPI_6_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE'
| |-ElaboratedType 0x55887c296b30 'struct EFI_ACPI_6_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE' sugar
| | `-RecordType 0x55887c294700 'EFI_ACPI_6_0_IA32_ARCHITECTURE_MACHINE_CHECK_ERROR_BANK_STRUCTURE'
| |   `-Record 0x55887c294680 ''
| `-FullComment 0x55887c443cf0 <line:1641:4, col:62>
|   `-ParagraphComment 0x55887c443cc0 <col:4, col:62>
|     `-TextComment 0x55887c443c90 <col:4, col:62> Text=" IA-32 Architecture Machine Check Bank Structure Definition"
|-RecordDecl 0x55887c296c50 <line:1677:9, line:1685:1> line:1677:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c296cf0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c443dc0 <line:1675:4, col:79>
| | `-ParagraphComment 0x55887c443d90 <col:4, col:79>
| |   `-TextComment 0x55887c443d60 <col:4, col:79> Text=" Hardware Error Notification Configuration Write Enable Structure Definition"
| |-FieldDecl 0x55887c296d98 <line:1678:3, col:46> col:13 Type 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c296d78 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c296d48 <col:46> 'int' 1
| |-FieldDecl 0x55887c296e38 <line:1679:3, col:46> col:13 PollInterval 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c296e18 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c296de8 <col:46> 'int' 1
| |-FieldDecl 0x55887c296ed8 <line:1680:3, col:46> col:13 SwitchToPollingThresholdValue 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c296eb8 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c296e88 <col:46> 'int' 1
| |-FieldDecl 0x55887c296f78 <line:1681:3, col:46> col:13 SwitchToPollingThresholdWindow 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c296f58 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c296f28 <col:46> 'int' 1
| |-FieldDecl 0x55887c297018 <line:1682:3, col:46> col:13 ErrorThresholdValue 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c296ff8 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c296fc8 <col:46> 'int' 1
| |-FieldDecl 0x55887c2970b8 <line:1683:3, col:46> col:13 ErrorThresholdWindow 'UINT16':'unsigned short'
| | `-ConstantExpr 0x55887c297098 <col:46> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c297068 <col:46> 'int' 1
| `-FieldDecl 0x55887c297158 <line:1684:3, col:46> col:13 Reserved 'UINT16':'unsigned short'
|   `-ConstantExpr 0x55887c297138 <col:46> 'int'
|     |-value: Int 10
|     `-IntegerLiteral 0x55887c297108 <col:46> 'int' 10
|-TypedefDecl 0x55887c297208 <line:1677:1, line:1685:3> col:3 referenced EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE 'struct EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE':'EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE'
| |-ElaboratedType 0x55887c2971b0 'struct EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE' sugar
| | `-RecordType 0x55887c296cd0 'EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE'
| |   `-Record 0x55887c296c50 ''
| `-FullComment 0x55887c443e90 <line:1675:4, col:79>
|   `-ParagraphComment 0x55887c443e60 <col:4, col:79>
|     `-TextComment 0x55887c443e30 <col:4, col:79> Text=" Hardware Error Notification Configuration Write Enable Structure Definition"
|-RecordDecl 0x55887c2972a0 <line:1690:9, line:1700:1> line:1690:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c297340 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c443f60 <line:1688:4, col:52>
| | `-ParagraphComment 0x55887c443f30 <col:4, col:52>
| |   `-TextComment 0x55887c443f00 <col:4, col:52> Text=" Hardware Error Notification Structure Definition"
| |-FieldDecl 0x55887c2973a8 <line:1691:3, col:84> col:84 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c297408 <line:1692:3, col:84> col:84 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c297490 <line:1693:3, col:84> col:84 ConfigurationWriteEnable 'EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE':'EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_CONFIGURATION_WRITE_ENABLE_STRUCTURE'
| |-FieldDecl 0x55887c2974f0 <line:1694:3, col:84> col:84 PollInterval 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c297550 <line:1695:3, col:84> col:84 Vector 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2975b0 <line:1696:3, col:84> col:84 SwitchToPollingThresholdValue 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c297610 <line:1697:3, col:84> col:84 SwitchToPollingThresholdWindow 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c297670 <line:1698:3, col:84> col:84 ErrorThresholdValue 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c2976d0 <line:1699:3, col:84> col:84 ErrorThresholdWindow 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c297778 <line:1690:1, line:1700:3> col:3 referenced EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE 'struct EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE':'EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE'
| |-ElaboratedType 0x55887c297720 'struct EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE' sugar
| | `-RecordType 0x55887c297320 'EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE'
| |   `-Record 0x55887c2972a0 ''
| `-FullComment 0x55887c444030 <line:1688:4, col:52>
|   `-ParagraphComment 0x55887c444000 <col:4, col:52>
|     `-TextComment 0x55887c443fd0 <col:4, col:52> Text=" Hardware Error Notification Structure Definition"
|-RecordDecl 0x55887c297810 <line:1705:9, line:1716:1> line:1705:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2978b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c444100 <line:1703:4, col:67>
| | `-ParagraphComment 0x55887c4440d0 <col:4, col:67>
| |   `-TextComment 0x55887c4440a0 <col:4, col:67> Text=" IA-32 Architecture Corrected Machine Check Structure Definition"
| |-FieldDecl 0x55887c297918 <line:1706:3, col:57> col:57 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c297978 <line:1707:3, col:57> col:57 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c297a28 <line:1708:3, col:68> col:57 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c297a88 <line:1709:3, col:57> col:57 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c297ae8 <line:1710:3, col:57> col:57 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c297b48 <line:1711:3, col:57> col:57 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c297ba8 <line:1712:3, col:57> col:57 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c297c30 <line:1713:3, col:57> col:57 NotificationStructure 'EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE':'EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE'
| |-FieldDecl 0x55887c297c90 <line:1714:3, col:57> col:57 NumberOfHardwareBanks 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c297d40 <line:1715:3, col:68> col:57 Reserved1 'UINT8[3]'
|-TypedefDecl 0x55887c297de8 <line:1705:1, line:1716:3> col:3 EFI_ACPI_6_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE 'struct EFI_ACPI_6_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE':'EFI_ACPI_6_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE'
| |-ElaboratedType 0x55887c297d90 'struct EFI_ACPI_6_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE' sugar
| | `-RecordType 0x55887c297890 'EFI_ACPI_6_0_IA32_ARCHITECTURE_CORRECTED_MACHINE_CHECK_STRUCTURE'
| |   `-Record 0x55887c297810 ''
| `-FullComment 0x55887c4441d0 <line:1703:4, col:67>
|   `-ParagraphComment 0x55887c4441a0 <col:4, col:67>
|     `-TextComment 0x55887c444170 <col:4, col:67> Text=" IA-32 Architecture Corrected Machine Check Structure Definition"
|-RecordDecl 0x55887c297e80 <line:1721:9, line:1728:1> line:1721:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c297f20 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4442a0 <line:1719:4, col:53>
| | `-ParagraphComment 0x55887c444270 <col:4, col:53>
| |   `-TextComment 0x55887c444240 <col:4, col:53> Text=" IA-32 Architecture NMI Error Structure Definition"
| |-FieldDecl 0x55887c297f88 <line:1722:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c297fe8 <line:1723:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c298098 <line:1724:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c2980f8 <line:1725:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c298158 <line:1726:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c2981b8 <line:1727:3, col:13> col:13 MaxRawDataLength 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c298268 <line:1721:1, line:1728:3> col:3 EFI_ACPI_6_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE 'struct EFI_ACPI_6_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE':'EFI_ACPI_6_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE'
| |-ElaboratedType 0x55887c298210 'struct EFI_ACPI_6_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE' sugar
| | `-RecordType 0x55887c297f00 'EFI_ACPI_6_0_IA32_ARCHITECTURE_NMI_ERROR_STRUCTURE'
| |   `-Record 0x55887c297e80 ''
| `-FullComment 0x55887c444370 <line:1719:4, col:53>
|   `-ParagraphComment 0x55887c444340 <col:4, col:53>
|     `-TextComment 0x55887c444310 <col:4, col:53> Text=" IA-32 Architecture NMI Error Structure Definition"
|-RecordDecl 0x55887c298300 <line:1733:9, line:1751:1> line:1733:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2983a0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c444440 <line:1731:4, col:50>
| | `-ParagraphComment 0x55887c444410 <col:4, col:50>
| |   `-TextComment 0x55887c4443e0 <col:4, col:50> Text=" PCI Express Root Port AER Structure Definition"
| |-FieldDecl 0x55887c298408 <line:1734:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c298468 <line:1735:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c298518 <line:1736:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c298578 <line:1737:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2985d8 <line:1738:3, col:13> col:13 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c298638 <line:1739:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c298698 <line:1740:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2986f8 <line:1741:3, col:13> col:13 Bus 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c298758 <line:1742:3, col:13> col:13 Device 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2987b8 <line:1743:3, col:13> col:13 Function 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c298818 <line:1744:3, col:13> col:13 DeviceControl 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c298990 <line:1745:3, col:24> col:13 Reserved1 'UINT8[2]'
| |-FieldDecl 0x55887c2989f0 <line:1746:3, col:13> col:13 UncorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c298a50 <line:1747:3, col:13> col:13 UncorrectableErrorSeverity 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c298ab0 <line:1748:3, col:13> col:13 CorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c298b10 <line:1749:3, col:13> col:13 AdvancedErrorCapabilitiesAndControl 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c298b70 <line:1750:3, col:13> col:13 RootErrorCommand 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c298c18 <line:1733:1, line:1751:3> col:3 EFI_ACPI_6_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE 'struct EFI_ACPI_6_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE':'EFI_ACPI_6_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE'
| |-ElaboratedType 0x55887c298bc0 'struct EFI_ACPI_6_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE' sugar
| | `-RecordType 0x55887c298380 'EFI_ACPI_6_0_PCI_EXPRESS_ROOT_PORT_AER_STRUCTURE'
| |   `-Record 0x55887c298300 ''
| `-FullComment 0x55887c444510 <line:1731:4, col:50>
|   `-ParagraphComment 0x55887c4444e0 <col:4, col:50>
|     `-TextComment 0x55887c4444b0 <col:4, col:50> Text=" PCI Express Root Port AER Structure Definition"
|-RecordDecl 0x55887c298cb0 <line:1756:9, line:1773:1> line:1756:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c298d50 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4445e0 <line:1754:4, col:47>
| | `-ParagraphComment 0x55887c4445b0 <col:4, col:47>
| |   `-TextComment 0x55887c444580 <col:4, col:47> Text=" PCI Express Device AER Structure Definition"
| |-FieldDecl 0x55887c298db8 <line:1757:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c298e18 <line:1758:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c298ec8 <line:1759:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c298f28 <line:1760:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c298f88 <line:1761:3, col:13> col:13 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c298fe8 <line:1762:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c299048 <line:1763:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2990a8 <line:1764:3, col:13> col:13 Bus 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c299108 <line:1765:3, col:13> col:13 Device 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c299168 <line:1766:3, col:13> col:13 Function 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2991c8 <line:1767:3, col:13> col:13 DeviceControl 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c299278 <line:1768:3, col:24> col:13 Reserved1 'UINT8[2]'
| |-FieldDecl 0x55887c2992d8 <line:1769:3, col:13> col:13 UncorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c299338 <line:1770:3, col:13> col:13 UncorrectableErrorSeverity 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c299398 <line:1771:3, col:13> col:13 CorrectableErrorMask 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c2993f8 <line:1772:3, col:13> col:13 AdvancedErrorCapabilitiesAndControl 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c2994a8 <line:1756:1, line:1773:3> col:3 EFI_ACPI_6_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE 'struct EFI_ACPI_6_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE':'EFI_ACPI_6_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE'
| |-ElaboratedType 0x55887c299450 'struct EFI_ACPI_6_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE' sugar
| | `-RecordType 0x55887c298d30 'EFI_ACPI_6_0_PCI_EXPRESS_DEVICE_AER_STRUCTURE'
| |   `-Record 0x55887c298cb0 ''
| `-FullComment 0x55887c4446b0 <line:1754:4, col:47>
|   `-ParagraphComment 0x55887c444680 <col:4, col:47>
|     `-TextComment 0x55887c444650 <col:4, col:47> Text=" PCI Express Device AER Structure Definition"
|-RecordDecl 0x55887c299540 <line:1778:9, line:1798:1> line:1778:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2995e0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c444780 <line:1776:4, col:47>
| | `-ParagraphComment 0x55887c444750 <col:4, col:47>
| |   `-TextComment 0x55887c444720 <col:4, col:47> Text=" PCI Express Bridge AER Structure Definition"
| |-FieldDecl 0x55887c299648 <line:1779:3, col:13> col:13 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2996a8 <line:1780:3, col:13> col:13 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c299758 <line:1781:3, col:24> col:13 Reserved0 'UINT8[2]'
| |-FieldDecl 0x55887c2997b8 <line:1782:3, col:13> col:13 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c299818 <line:1783:3, col:13> col:13 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c299878 <line:1784:3, col:13> col:13 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2998d8 <line:1785:3, col:13> col:13 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c299938 <line:1786:3, col:13> col:13 Bus 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c299998 <line:1787:3, col:13> col:13 Device 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2999f8 <line:1788:3, col:13> col:13 Function 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c299a58 <line:1789:3, col:13> col:13 DeviceControl 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c299b08 <line:1790:3, col:24> col:13 Reserved1 'UINT8[2]'
| |-FieldDecl 0x55887c299b68 <line:1791:3, col:13> col:13 UncorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c299bc8 <line:1792:3, col:13> col:13 UncorrectableErrorSeverity 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c299c28 <line:1793:3, col:13> col:13 CorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c299c88 <line:1794:3, col:13> col:13 AdvancedErrorCapabilitiesAndControl 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c299ce8 <line:1795:3, col:13> col:13 SecondaryUncorrectableErrorMask 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c299d48 <line:1796:3, col:13> col:13 SecondaryUncorrectableErrorSeverity 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c299da8 <line:1797:3, col:13> col:13 SecondaryAdvancedErrorCapabilitiesAndControl 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c299e58 <line:1778:1, line:1798:3> col:3 EFI_ACPI_6_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE 'struct EFI_ACPI_6_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE':'EFI_ACPI_6_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE'
| |-ElaboratedType 0x55887c299e00 'struct EFI_ACPI_6_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE' sugar
| | `-RecordType 0x55887c2995c0 'EFI_ACPI_6_0_PCI_EXPRESS_BRIDGE_AER_STRUCTURE'
| |   `-Record 0x55887c299540 ''
| `-FullComment 0x55887c444850 <line:1776:4, col:47>
|   `-ParagraphComment 0x55887c444820 <col:4, col:47>
|     `-TextComment 0x55887c4447f0 <col:4, col:47> Text=" PCI Express Bridge AER Structure Definition"
|-RecordDecl 0x55887c299ef0 <line:1803:9, line:1815:1> line:1803:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c299f90 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c444920 <line:1801:4, col:54>
| | `-ParagraphComment 0x55887c4448f0 <col:4, col:54>
| |   `-TextComment 0x55887c4448c0 <col:4, col:54> Text=" Generic Hardware Error Source Structure Definition"
| |-FieldDecl 0x55887c299ff8 <line:1804:3, col:57> col:57 Type 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c29a058 <line:1805:3, col:57> col:57 SourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c29a0b8 <line:1806:3, col:57> col:57 RelatedSourceId 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c29a118 <line:1807:3, col:57> col:57 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c29a178 <line:1808:3, col:57> col:57 Enabled 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c29a1d8 <line:1809:3, col:57> col:57 NumberOfRecordsToPreAllocate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c29a238 <line:1810:3, col:57> col:57 MaxSectionsPerRecord 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c29a298 <line:1811:3, col:57> col:57 MaxRawDataLength 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c29a2f8 <line:1812:3, col:57> col:57 ErrorStatusAddress 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c29a358 <line:1813:3, col:57> col:57 NotificationStructure 'EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE':'EFI_ACPI_6_0_HARDWARE_ERROR_NOTIFICATION_STRUCTURE'
| `-FieldDecl 0x55887c29a3b8 <line:1814:3, col:57> col:57 ErrorStatusBlockLength 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c29a468 <line:1803:1, line:1815:3> col:3 EFI_ACPI_6_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE 'struct EFI_ACPI_6_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE':'EFI_ACPI_6_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE'
| |-ElaboratedType 0x55887c29a410 'struct EFI_ACPI_6_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE' sugar
| | `-RecordType 0x55887c299f70 'EFI_ACPI_6_0_GENERIC_HARDWARE_ERROR_SOURCE_STRUCTURE'
| |   `-Record 0x55887c299ef0 ''
| `-FullComment 0x55887c4449f0 <line:1801:4, col:54>
|   `-ParagraphComment 0x55887c4449c0 <col:4, col:54>
|     `-TextComment 0x55887c444990 <col:4, col:54> Text=" Generic Hardware Error Source Structure Definition"
|-RecordDecl 0x55887c29a500 <line:1820:9, line:1826:1> line:1820:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c29a5a0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c444ac0 <line:1818:4, col:35>
| | `-ParagraphComment 0x55887c444a90 <col:4, col:35>
| |   `-TextComment 0x55887c444a60 <col:4, col:35> Text=" Generic Error Status Definition"
| |-FieldDecl 0x55887c29a608 <line:1821:3, col:38> col:38 BlockStatus 'EFI_ACPI_6_0_ERROR_BLOCK_STATUS':'EFI_ACPI_6_0_ERROR_BLOCK_STATUS'
| |-FieldDecl 0x55887c29a668 <line:1822:3, col:38> col:38 RawDataOffset 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c29a6c8 <line:1823:3, col:38> col:38 RawDataLength 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c29a728 <line:1824:3, col:38> col:38 DataLength 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c29a788 <line:1825:3, col:38> col:38 ErrorSeverity 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c29a838 <line:1820:1, line:1826:3> col:3 EFI_ACPI_6_0_GENERIC_ERROR_STATUS_STRUCTURE 'struct EFI_ACPI_6_0_GENERIC_ERROR_STATUS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ERROR_STATUS_STRUCTURE'
| |-ElaboratedType 0x55887c29a7e0 'struct EFI_ACPI_6_0_GENERIC_ERROR_STATUS_STRUCTURE' sugar
| | `-RecordType 0x55887c29a580 'EFI_ACPI_6_0_GENERIC_ERROR_STATUS_STRUCTURE'
| |   `-Record 0x55887c29a500 ''
| `-FullComment 0x55887c444b90 <line:1818:4, col:35>
|   `-ParagraphComment 0x55887c444b60 <col:4, col:35>
|     `-TextComment 0x55887c444b30 <col:4, col:35> Text=" Generic Error Status Definition"
|-RecordDecl 0x55887c29a8d0 <line:1831:9, line:1836:1> line:1831:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c29aae0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c444c60 <line:1829:4, col:43>
| | `-ParagraphComment 0x55887c444c30 <col:4, col:43>
| |   `-TextComment 0x55887c444c00 <col:4, col:43> Text=" ERST - Error Record Serialization Table"
| |-FieldDecl 0x55887c29ab48 <line:1832:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c29aba8 <line:1833:3, col:34> col:34 SerializationHeaderSize 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c29ac58 <line:1834:3, col:45> col:34 Reserved0 'UINT8[4]'
| `-FieldDecl 0x55887c29acb8 <line:1835:3, col:34> col:34 InstructionEntryCount 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c29ad68 <line:1831:1, line:1836:3> col:3 EFI_ACPI_6_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER 'struct EFI_ACPI_6_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER':'EFI_ACPI_6_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER'
| |-ElaboratedType 0x55887c29ad10 'struct EFI_ACPI_6_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c29a950 'EFI_ACPI_6_0_ERROR_RECORD_SERIALIZATION_TABLE_HEADER'
| |   `-Record 0x55887c29a8d0 ''
| `-FullComment 0x55887c444d30 <line:1829:4, col:43>
|   `-ParagraphComment 0x55887c444d00 <col:4, col:43>
|     `-TextComment 0x55887c444cd0 <col:4, col:43> Text=" ERST - Error Record Serialization Table"
|-RecordDecl 0x55887c29aef0 <line:1903:9, line:1911:1> line:1903:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c29af90 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c444e00 <line:1901:4, col:40>
| | `-ParagraphComment 0x55887c444dd0 <col:4, col:40>
| |   `-TextComment 0x55887c444da0 <col:4, col:40> Text=" ERST Serialization Instruction Entry"
| |-FieldDecl 0x55887c29aff8 <line:1904:3, col:45> col:45 SerializationAction 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c29b058 <line:1905:3, col:45> col:45 Instruction 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c29b0b8 <line:1906:3, col:45> col:45 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c29b118 <line:1907:3, col:45> col:45 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c29b178 <line:1908:3, col:45> col:45 RegisterRegion 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c29b1d8 <line:1909:3, col:45> col:45 Value 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c29b238 <line:1910:3, col:45> col:45 Mask 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c29b2e8 <line:1903:1, line:1911:3> col:3 EFI_ACPI_6_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY 'struct EFI_ACPI_6_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY':'EFI_ACPI_6_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY'
| |-ElaboratedType 0x55887c29b290 'struct EFI_ACPI_6_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY' sugar
| | `-RecordType 0x55887c29af70 'EFI_ACPI_6_0_ERST_SERIALIZATION_INSTRUCTION_ENTRY'
| |   `-Record 0x55887c29aef0 ''
| `-FullComment 0x55887c444ed0 <line:1901:4, col:40>
|   `-ParagraphComment 0x55887c444ea0 <col:4, col:40>
|     `-TextComment 0x55887c444e70 <col:4, col:40> Text=" ERST Serialization Instruction Entry"
|-RecordDecl 0x55887c29b380 <line:1916:9, line:1922:1> line:1916:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c29b420 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c444fa0 <line:1914:4, col:32>
| | `-ParagraphComment 0x55887c444f70 <col:4, col:32>
| |   `-TextComment 0x55887c444f40 <col:4, col:32> Text=" EINJ - Error Injection Table"
| |-FieldDecl 0x55887c29b488 <line:1917:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c29b4e8 <line:1918:3, col:34> col:34 InjectionHeaderSize 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c29b548 <line:1919:3, col:34> col:34 InjectionFlags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c29b5f8 <line:1920:3, col:45> col:34 Reserved0 'UINT8[3]'
| `-FieldDecl 0x55887c29b658 <line:1921:3, col:34> col:34 InjectionEntryCount 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c29b708 <line:1916:1, line:1922:3> col:3 EFI_ACPI_6_0_ERROR_INJECTION_TABLE_HEADER 'struct EFI_ACPI_6_0_ERROR_INJECTION_TABLE_HEADER':'EFI_ACPI_6_0_ERROR_INJECTION_TABLE_HEADER'
| |-ElaboratedType 0x55887c29b6b0 'struct EFI_ACPI_6_0_ERROR_INJECTION_TABLE_HEADER' sugar
| | `-RecordType 0x55887c29b400 'EFI_ACPI_6_0_ERROR_INJECTION_TABLE_HEADER'
| |   `-Record 0x55887c29b380 ''
| `-FullComment 0x55887c445090 <line:1914:4, col:32>
|   `-ParagraphComment 0x55887c445060 <col:4, col:32>
|     `-TextComment 0x55887c445010 <col:4, col:32> Text=" EINJ - Error Injection Table"
|-RecordDecl 0x55887c29b8c0 <line:1982:9, line:1990:1> line:1982:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c29b960 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c445160 <line:1980:4, col:36>
| | `-ParagraphComment 0x55887c445130 <col:4, col:36>
| |   `-TextComment 0x55887c445100 <col:4, col:36> Text=" EINJ Injection Instruction Entry"
| |-FieldDecl 0x55887c29b9c8 <line:1983:3, col:45> col:45 InjectionAction 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c29ba28 <line:1984:3, col:45> col:45 Instruction 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c29ba88 <line:1985:3, col:45> col:45 Flags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c29bae8 <line:1986:3, col:45> col:45 Reserved0 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c29bb48 <line:1987:3, col:45> col:45 RegisterRegion 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c29bba8 <line:1988:3, col:45> col:45 Value 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c29bc08 <line:1989:3, col:45> col:45 Mask 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c29bcb8 <line:1982:1, line:1990:3> col:3 EFI_ACPI_6_0_EINJ_INJECTION_INSTRUCTION_ENTRY 'struct EFI_ACPI_6_0_EINJ_INJECTION_INSTRUCTION_ENTRY':'EFI_ACPI_6_0_EINJ_INJECTION_INSTRUCTION_ENTRY'
| |-ElaboratedType 0x55887c29bc60 'struct EFI_ACPI_6_0_EINJ_INJECTION_INSTRUCTION_ENTRY' sugar
| | `-RecordType 0x55887c29b940 'EFI_ACPI_6_0_EINJ_INJECTION_INSTRUCTION_ENTRY'
| |   `-Record 0x55887c29b8c0 ''
| `-FullComment 0x55887c445230 <line:1980:4, col:36>
|   `-ParagraphComment 0x55887c445200 <col:4, col:36>
|     `-TextComment 0x55887c4451d0 <col:4, col:36> Text=" EINJ Injection Instruction Entry"
|-RecordDecl 0x55887c29bd50 <line:1995:9, line:2000:1> line:1995:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c29bdf0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c445300 <line:1993:4, col:29>
| | `-ParagraphComment 0x55887c4452d0 <col:4, col:29>
| |   `-TextComment 0x55887c4452a0 <col:4, col:29> Text=" EINJ Trigger Action Table"
| |-FieldDecl 0x55887c29be58 <line:1996:3, col:13> col:13 HeaderSize 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c29beb8 <line:1997:3, col:13> col:13 Revision 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c29bf18 <line:1998:3, col:13> col:13 TableSize 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c29bf78 <line:1999:3, col:13> col:13 EntryCount 'UINT32':'unsigned int'
|-TypedefDecl 0x55887c29c028 <line:1995:1, line:2000:3> col:3 EFI_ACPI_6_0_EINJ_TRIGGER_ACTION_TABLE 'struct EFI_ACPI_6_0_EINJ_TRIGGER_ACTION_TABLE':'EFI_ACPI_6_0_EINJ_TRIGGER_ACTION_TABLE'
| |-ElaboratedType 0x55887c29bfd0 'struct EFI_ACPI_6_0_EINJ_TRIGGER_ACTION_TABLE' sugar
| | `-RecordType 0x55887c29bdd0 'EFI_ACPI_6_0_EINJ_TRIGGER_ACTION_TABLE'
| |   `-Record 0x55887c29bd50 ''
| `-FullComment 0x55887c4453d0 <line:1993:4, col:29>
|   `-ParagraphComment 0x55887c4453a0 <col:4, col:29>
|     `-TextComment 0x55887c445370 <col:4, col:29> Text=" EINJ Trigger Action Table"
|-RecordDecl 0x55887c29c0c0 <line:2005:9, line:2009:1> line:2005:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c29c160 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4454a0 <line:2003:4, col:48>
| | `-ParagraphComment 0x55887c445470 <col:4, col:48>
| |   `-TextComment 0x55887c445440 <col:4, col:48> Text=" Platform Communications Channel Table (PCCT)"
| |-FieldDecl 0x55887c29c1c8 <line:2006:3, col:34> col:34 Header 'EFI_ACPI_DESCRIPTION_HEADER':'EFI_ACPI_DESCRIPTION_HEADER'
| |-FieldDecl 0x55887c29c228 <line:2007:3, col:34> col:34 Flags 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c29c288 <line:2008:3, col:34> col:34 Reserved 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c29c338 <line:2005:1, line:2009:3> col:3 EFI_ACPI_6_0_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER 'struct EFI_ACPI_6_0_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER':'EFI_ACPI_6_0_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER'
| |-ElaboratedType 0x55887c29c2e0 'struct EFI_ACPI_6_0_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER' sugar
| | `-RecordType 0x55887c29c140 'EFI_ACPI_6_0_PLATFORM_COMMUNICATION_CHANNEL_TABLE_HEADER'
| |   `-Record 0x55887c29c0c0 ''
| `-FullComment 0x55887c445570 <line:2003:4, col:48>
|   `-ParagraphComment 0x55887c445540 <col:4, col:48>
|     `-TextComment 0x55887c445510 <col:4, col:48> Text=" Platform Communications Channel Table (PCCT)"
|-RecordDecl 0x55887c29c430 <line:2031:9, line:2034:1> line:2031:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c29c4d0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c445640 <line:2029:4, col:33>
| | `-ParagraphComment 0x55887c445610 <col:4, col:33>
| |   `-TextComment 0x55887c4455e0 <col:4, col:33> Text=" PCC Subspace Structure Header"
| |-FieldDecl 0x55887c29c538 <line:2032:3, col:12> col:12 Type 'UINT8':'unsigned char'
| `-FieldDecl 0x55887c29c598 <line:2033:3, col:12> col:12 Length 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c29c648 <line:2031:1, line:2034:3> col:3 EFI_ACPI_6_0_PCCT_SUBSPACE_HEADER 'struct EFI_ACPI_6_0_PCCT_SUBSPACE_HEADER':'EFI_ACPI_6_0_PCCT_SUBSPACE_HEADER'
| |-ElaboratedType 0x55887c29c5f0 'struct EFI_ACPI_6_0_PCCT_SUBSPACE_HEADER' sugar
| | `-RecordType 0x55887c29c4b0 'EFI_ACPI_6_0_PCCT_SUBSPACE_HEADER'
| |   `-Record 0x55887c29c430 ''
| `-FullComment 0x55887c445710 <line:2029:4, col:33>
|   `-ParagraphComment 0x55887c4456e0 <col:4, col:33>
|     `-TextComment 0x55887c4456b0 <col:4, col:33> Text=" PCC Subspace Structure Header"
|-RecordDecl 0x55887c29c6e0 <line:2039:9, line:2051:1> line:2039:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c29c780 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4457e0 <line:2037:4, col:45>
| | `-ParagraphComment 0x55887c4457b0 <col:4, col:45>
| |   `-TextComment 0x55887c445780 <col:4, col:45> Text=" Generic Communications Subspace Structure"
| |-FieldDecl 0x55887c29c7e8 <line:2040:3, col:45> col:45 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c29c848 <line:2041:3, col:45> col:45 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c29c8f8 <line:2042:3, col:55> col:45 Reserved 'UINT8[6]'
| |-FieldDecl 0x55887c29c958 <line:2043:3, col:45> col:45 BaseAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c29c9b8 <line:2044:3, col:45> col:45 AddressLength 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c29ca18 <line:2045:3, col:45> col:45 DoorbellRegister 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c29ca78 <line:2046:3, col:45> col:45 DoorbellPreserve 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2a1010 <line:2047:3, col:45> col:45 DoorbellWrite 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2a1070 <line:2048:3, col:45> col:45 NominalLatency 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2a10d0 <line:2049:3, col:45> col:45 MaximumPeriodicAccessRate 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c2a1130 <line:2050:3, col:45> col:45 MinimumRequestTurnaroundTime 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c2a11d8 <line:2039:1, line:2051:3> col:3 EFI_ACPI_6_0_PCCT_SUBSPACE_GENERIC 'struct EFI_ACPI_6_0_PCCT_SUBSPACE_GENERIC':'EFI_ACPI_6_0_PCCT_SUBSPACE_GENERIC'
| |-ElaboratedType 0x55887c2a1180 'struct EFI_ACPI_6_0_PCCT_SUBSPACE_GENERIC' sugar
| | `-RecordType 0x55887c29c760 'EFI_ACPI_6_0_PCCT_SUBSPACE_GENERIC'
| |   `-Record 0x55887c29c6e0 ''
| `-FullComment 0x55887c4458b0 <line:2037:4, col:45>
|   `-ParagraphComment 0x55887c445880 <col:4, col:45>
|     `-TextComment 0x55887c445850 <col:4, col:45> Text=" Generic Communications Subspace Structure"
|-RecordDecl 0x55887c2a1270 <line:2057:9, line:2061:1> line:2057:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2a1310 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c445980 <line:2054:4, col:55>
| | `-ParagraphComment 0x55887c445950 <col:4, col:55>
| |   `-TextComment 0x55887c445920 <col:4, col:55> Text=" Generic Communications Channel Shared Memory Region"
| |-FieldDecl 0x55887c2a1378 <line:2058:3, col:12> col:12 Command 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2a1418 <line:2059:3, col:26> col:12 Reserved 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c2a13f8 <col:26> 'int'
| |   |-value: Int 7
| |   `-IntegerLiteral 0x55887c2a13c8 <col:26> 'int' 7
| `-FieldDecl 0x55887c2a14b8 <line:2060:3, col:26> col:12 GenerateSci 'UINT8':'unsigned char'
|   `-ConstantExpr 0x55887c2a1498 <col:26> 'int'
|     |-value: Int 1
|     `-IntegerLiteral 0x55887c2a1468 <col:26> 'int' 1
|-TypedefDecl 0x55887c2a1568 <line:2057:1, line:2061:3> col:3 referenced EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND 'struct EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND':'EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND'
| |-ElaboratedType 0x55887c2a1510 'struct EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND' sugar
| | `-RecordType 0x55887c2a12f0 'EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND'
| |   `-Record 0x55887c2a1270 ''
| `-FullComment 0x55887c445a50 <line:2054:4, col:55>
|   `-ParagraphComment 0x55887c445a20 <col:4, col:55>
|     `-TextComment 0x55887c4459f0 <col:4, col:55> Text=" Generic Communications Channel Shared Memory Region"
|-RecordDecl 0x55887c2a15d8 <line:2063:9, line:2070:1> line:2063:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2a1680 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2a1728 <line:2064:3, col:35> col:12 CommandComplete 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c2a1708 <col:35> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c2a16d8 <col:35> 'int' 1
| |-FieldDecl 0x55887c2a17c8 <line:2065:3, col:35> col:12 SciDoorbell 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c2a17a8 <col:35> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c2a1778 <col:35> 'int' 1
| |-FieldDecl 0x55887c2a1868 <line:2066:3, col:35> col:12 Error 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c2a1848 <col:35> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c2a1818 <col:35> 'int' 1
| |-FieldDecl 0x55887c2a1908 <line:2067:3, col:35> col:12 PlatformNotification 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c2a18e8 <col:35> 'int'
| |   |-value: Int 1
| |   `-IntegerLiteral 0x55887c2a18b8 <col:35> 'int' 1
| |-FieldDecl 0x55887c2a19a8 <line:2068:3, col:35> col:12 Reserved 'UINT8':'unsigned char'
| | `-ConstantExpr 0x55887c2a1988 <col:35> 'int'
| |   |-value: Int 4
| |   `-IntegerLiteral 0x55887c2a1958 <col:35> 'int' 4
| `-FieldDecl 0x55887c2a1a08 <line:2069:3, col:12> col:12 Reserved1 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c2a1ab8 <line:2063:1, line:2070:3> col:3 referenced EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS 'struct EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS':'EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS'
| `-ElaboratedType 0x55887c2a1a60 'struct EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS' sugar
|   `-RecordType 0x55887c2a1660 'EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS'
|     `-Record 0x55887c2a15d8 ''
|-RecordDecl 0x55887c2a1b28 <line:2072:9, line:2076:1> line:2072:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2a1bd0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2a1c38 <line:2073:3, col:61> col:61 Signature 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2a1cc0 <line:2074:3, col:61> col:61 Command 'EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND':'EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_COMMAND'
| `-FieldDecl 0x55887c2a1d40 <line:2075:3, col:61> col:61 Status 'EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS':'EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_STATUS'
|-TypedefDecl 0x55887c2a1de8 <line:2072:1, line:2076:3> col:3 EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER 'struct EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER':'EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER'
| `-ElaboratedType 0x55887c2a1d90 'struct EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER' sugar
|   `-RecordType 0x55887c2a1bb0 'EFI_ACPI_6_0_PCCT_GENERIC_SHARED_MEMORY_REGION_HEADER'
|     `-Record 0x55887c2a1b28 ''
|-RecordDecl 0x55887c2a1e80 <line:2084:9, line:2098:1> line:2084:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2a1f20 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c445b20 <line:2082:4, col:55>
| | `-ParagraphComment 0x55887c445af0 <col:4, col:55>
| |   `-TextComment 0x55887c445ac0 <col:4, col:55> Text=" Type 1 HW-Reduced Communications Subspace Structure"
| |-FieldDecl 0x55887c2a1f88 <line:2085:3, col:45> col:45 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2a1fe8 <line:2086:3, col:45> col:45 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2a2048 <line:2087:3, col:45> col:45 DoorbellInterrupt 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2a20a8 <line:2088:3, col:45> col:45 DoorbellInterruptFlags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2a2108 <line:2089:3, col:45> col:45 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2a2168 <line:2090:3, col:45> col:45 BaseAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2a21c8 <line:2091:3, col:45> col:45 AddressLength 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2a2228 <line:2092:3, col:45> col:45 DoorbellRegister 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c2a2288 <line:2093:3, col:45> col:45 DoorbellPreserve 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2a22e8 <line:2094:3, col:45> col:45 DoorbellWrite 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2a2348 <line:2095:3, col:45> col:45 NominalLatency 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2a23a8 <line:2096:3, col:45> col:45 MaximumPeriodicAccessRate 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c2a2408 <line:2097:3, col:45> col:45 MinimumRequestTurnaroundTime 'UINT16':'unsigned short'
|-TypedefDecl 0x55887c2a24b8 <line:2084:1, line:2098:3> col:3 EFI_ACPI_6_0_PCCT_SUBSPACE_1_HW_REDUCED_COMMUNICATIONS 'struct EFI_ACPI_6_0_PCCT_SUBSPACE_1_HW_REDUCED_COMMUNICATIONS':'EFI_ACPI_6_0_PCCT_SUBSPACE_1_HW_REDUCED_COMMUNICATIONS'
| |-ElaboratedType 0x55887c2a2460 'struct EFI_ACPI_6_0_PCCT_SUBSPACE_1_HW_REDUCED_COMMUNICATIONS' sugar
| | `-RecordType 0x55887c2a1f00 'EFI_ACPI_6_0_PCCT_SUBSPACE_1_HW_REDUCED_COMMUNICATIONS'
| |   `-Record 0x55887c2a1e80 ''
| `-FullComment 0x55887c445bf0 <line:2082:4, col:55>
|   `-ParagraphComment 0x55887c445bc0 <col:4, col:55>
|     `-TextComment 0x55887c445b90 <col:4, col:55> Text=" Type 1 HW-Reduced Communications Subspace Structure"
|-RecordDecl 0x55887c2a2550 <line:2103:9, line:2120:1> line:2103:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2a25f0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c445cc0 <line:2101:4, col:55>
| | `-ParagraphComment 0x55887c445c90 <col:4, col:55>
| |   `-TextComment 0x55887c445c60 <col:4, col:55> Text=" Type 2 HW-Reduced Communications Subspace Structure"
| |-FieldDecl 0x55887c2a2658 <line:2104:3, col:45> col:45 Type 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2a26b8 <line:2105:3, col:45> col:45 Length 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2a2718 <line:2106:3, col:45> col:45 DoorbellInterrupt 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2a2778 <line:2107:3, col:45> col:45 DoorbellInterruptFlags 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2a27d8 <line:2108:3, col:45> col:45 Reserved 'UINT8':'unsigned char'
| |-FieldDecl 0x55887c2a2838 <line:2109:3, col:45> col:45 BaseAddress 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2a2898 <line:2110:3, col:45> col:45 AddressLength 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2a28f8 <line:2111:3, col:45> col:45 DoorbellRegister 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c2a2958 <line:2112:3, col:45> col:45 DoorbellPreserve 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2a29b8 <line:2113:3, col:45> col:45 DoorbellWrite 'UINT64':'unsigned long long'
| |-FieldDecl 0x55887c2a2a18 <line:2114:3, col:45> col:45 NominalLatency 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2a2a78 <line:2115:3, col:45> col:45 MaximumPeriodicAccessRate 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2a2ad8 <line:2116:3, col:45> col:45 MinimumRequestTurnaroundTime 'UINT16':'unsigned short'
| |-FieldDecl 0x55887c2a2b38 <line:2117:3, col:45> col:45 DoorbellAckRegister 'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE':'EFI_ACPI_6_0_GENERIC_ADDRESS_STRUCTURE'
| |-FieldDecl 0x55887c2a2b98 <line:2118:3, col:45> col:45 DoorbellAckPreserve 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c2a2bf8 <line:2119:3, col:45> col:45 DoorbellAckWrite 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c2a2ca8 <line:2103:1, line:2120:3> col:3 EFI_ACPI_6_0_PCCT_SUBSPACE_2_HW_REDUCED_COMMUNICATIONS 'struct EFI_ACPI_6_0_PCCT_SUBSPACE_2_HW_REDUCED_COMMUNICATIONS':'EFI_ACPI_6_0_PCCT_SUBSPACE_2_HW_REDUCED_COMMUNICATIONS'
| |-ElaboratedType 0x55887c2a2c50 'struct EFI_ACPI_6_0_PCCT_SUBSPACE_2_HW_REDUCED_COMMUNICATIONS' sugar
| | `-RecordType 0x55887c2a25d0 'EFI_ACPI_6_0_PCCT_SUBSPACE_2_HW_REDUCED_COMMUNICATIONS'
| |   `-Record 0x55887c2a2550 ''
| `-FullComment 0x55887c445d90 <line:2101:4, col:55>
|   `-ParagraphComment 0x55887c445d60 <col:4, col:55>
|     `-TextComment 0x55887c445d30 <col:4, col:55> Text=" Type 2 HW-Reduced Communications Subspace Structure"
|-RecordDecl 0x55887c2a5cc8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Protocol/DevicePath.h:43:9, line:58:1> line:43:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2a5d70 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c445f20 <line:36:1, line:41:31>
| | `-ParagraphComment 0x55887c445ef0 <line:36:1, line:41:31>
| |   |-TextComment 0x55887c445e00 <line:36:1, col:80> Text="  This protocol can be used on any device handle to obtain generic path/location"
| |   |-TextComment 0x55887c445e20 <line:37:1, col:82> Text="  information concerning the physical device or logical device. If the handle does"
| |   |-TextComment 0x55887c445e40 <line:38:1, col:80> Text="  not logically map to a physical device, the handle may not necessarily support"
| |   |-TextComment 0x55887c445e60 <line:39:1, col:80> Text="  the device path protocol. The device path describes the location of the device"
| |   |-TextComment 0x55887c445e80 <line:40:1, col:86> Text="  the handle is for. The size of the Device Path can be determined from the structures"
| |   `-TextComment 0x55887c445ea0 <line:41:1, col:31> Text="  that make up the Device Path."
| |-FieldDecl 0x55887c2a5dd8 <line:44:3, col:12> col:12 Type 'UINT8':'unsigned char'
| | `-FullComment 0x55887c4460b0 <col:25, line:49:58>
| |   `-ParagraphComment 0x55887c446080 <line:44:25, line:49:58>
| |     |-TextComment 0x55887c445f90 <line:44:25, col:51> Text=" 0x01 Hardware Device Path."
| |     |-TextComment 0x55887c445fb0 <line:45:25, col:47> Text=" 0x02 ACPI Device Path."
| |     |-TextComment 0x55887c445fd0 <line:46:25, col:52> Text=" 0x03 Messaging Device Path."
| |     |-TextComment 0x55887c445ff0 <line:47:25, col:48> Text=" 0x04 Media Device Path."
| |     |-TextComment 0x55887c446010 <line:48:25, col:66> Text=" 0x05 BIOS Boot Specification Device Path."
| |     `-TextComment 0x55887c446030 <line:49:25, col:58> Text=" 0x7F End of Hardware Device Path."
| |-FieldDecl 0x55887c2a5e68 <line:51:3, col:12> col:12 SubType 'UINT8':'unsigned char'
| | `-FullComment 0x55887c4461f0 <col:25, line:54:37>
| |   `-ParagraphComment 0x55887c4461c0 <line:51:25, line:54:37>
| |     |-TextComment 0x55887c446120 <line:51:25, col:39> Text=" Varies by Type"
| |     |-TextComment 0x55887c446140 <line:52:25, col:56> Text=" 0xFF End Entire Device Path, or"
| |     |-TextComment 0x55887c446160 <line:53:25, col:80> Text=" 0x01 End This Instance of a Device Path and start a new"
| |     `-TextComment 0x55887c446180 <line:54:25, col:37> Text=" Device Path."
| `-FieldDecl 0x55887c2a5f48 <line:56:3, col:20> col:12 Length 'UINT8[2]'
|   `-FullComment 0x55887c4462e0 <col:27, line:57:76>
|     `-ParagraphComment 0x55887c4462b0 <line:56:27, line:57:76>
|       |-TextComment 0x55887c446260 <line:56:27, col:78> Text=" Specific Device Path data. Type and Sub-Type define"
|       `-TextComment 0x55887c446280 <line:57:27, col:76> Text=" type of data. Size of data is included in Length."
|-TypedefDecl 0x55887c2a6028 <line:43:1, line:58:3> col:3 referenced EFI_DEVICE_PATH_PROTOCOL 'struct EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-ElaboratedType 0x55887c2a5fd0 'struct EFI_DEVICE_PATH_PROTOCOL' sugar
| | `-RecordType 0x55887c2a5d50 'EFI_DEVICE_PATH_PROTOCOL'
| |   `-Record 0x55887c2a5cc8 ''
| `-FullComment 0x55887c446470 <line:36:1, line:41:31>
|   `-ParagraphComment 0x55887c446440 <line:36:1, line:41:31>
|     |-TextComment 0x55887c446350 <line:36:1, col:80> Text="  This protocol can be used on any device handle to obtain generic path/location"
|     |-TextComment 0x55887c446370 <line:37:1, col:82> Text="  information concerning the physical device or logical device. If the handle does"
|     |-TextComment 0x55887c446390 <line:38:1, col:80> Text="  not logically map to a physical device, the handle may not necessarily support"
|     |-TextComment 0x55887c4463b0 <line:39:1, col:80> Text="  the device path protocol. The device path describes the location of the device"
|     |-TextComment 0x55887c4463d0 <line:40:1, col:86> Text="  the handle is for. The size of the Device Path can be determined from the structures"
|     `-TextComment 0x55887c4463f0 <line:41:1, col:31> Text="  that make up the Device Path."
|-TypedefDecl 0x55887c2a60f0 <line:63:1, col:34> col:34 EFI_DEVICE_PATH 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-TypedefType 0x55887c2a60c0 'EFI_DEVICE_PATH_PROTOCOL' sugar
| | |-Typedef 0x55887c2a6028 'EFI_DEVICE_PATH_PROTOCOL'
| | `-ElaboratedType 0x55887c2a5fd0 'struct EFI_DEVICE_PATH_PROTOCOL' sugar
| |   `-RecordType 0x55887c2a5d50 'EFI_DEVICE_PATH_PROTOCOL'
| |     `-Record 0x55887c2a5cc8 ''
| `-FullComment 0x55887c446540 <line:61:4, col:72>
|   `-ParagraphComment 0x55887c446510 <col:4, col:72>
|     `-TextComment 0x55887c4464e0 <col:4, col:72> Text=" Device Path protocol definition for backward-compatible with EFI1.1."
|-RecordDecl 0x55887c2a61d8 <line:78:9, line:88:1> line:78:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2a6280 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c446610 <line:76:4, col:20>
| | `-ParagraphComment 0x55887c4465e0 <col:4, col:20>
| |   `-TextComment 0x55887c4465b0 <col:4, col:20> Text=" PCI Device Path."
| |-FieldDecl 0x55887c2a62e8 <line:79:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2a6378 <line:83:3, col:31> col:31 Function 'UINT8':'unsigned char'
| | `-FullComment 0x55887c4466e0 <line:81:6, col:26>
| |   `-ParagraphComment 0x55887c4466b0 <col:6, col:26>
| |     `-TextComment 0x55887c446680 <col:6, col:26> Text=" PCI Function Number."
| `-FieldDecl 0x55887c2a6408 <line:87:3, col:31> col:31 Device 'UINT8':'unsigned char'
|   `-FullComment 0x55887c4467b0 <line:85:6, col:24>
|     `-ParagraphComment 0x55887c446780 <col:6, col:24>
|       `-TextComment 0x55887c446750 <col:6, col:24> Text=" PCI Device Number."
|-TypedefDecl 0x55887c2a6518 <line:78:1, line:88:3> col:3 referenced PCI_DEVICE_PATH 'struct PCI_DEVICE_PATH':'PCI_DEVICE_PATH'
| |-ElaboratedType 0x55887c2a64c0 'struct PCI_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2a6260 'PCI_DEVICE_PATH'
| |   `-Record 0x55887c2a61d8 ''
| `-FullComment 0x55887c446880 <line:76:4, col:20>
|   `-ParagraphComment 0x55887c446850 <col:4, col:20>
|     `-TextComment 0x55887c446820 <col:4, col:20> Text=" PCI Device Path."
|-RecordDecl 0x55887c2a65e0 <line:98:9, line:104:1> line:98:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2a6680 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c446950 <line:96:4, col:23>
| | `-ParagraphComment 0x55887c446920 <col:4, col:23>
| |   `-TextComment 0x55887c4468f0 <col:4, col:23> Text=" PCCARD Device Path."
| |-FieldDecl 0x55887c2a66e8 <line:99:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2a6778 <line:103:3, col:31> col:31 FunctionNumber 'UINT8':'unsigned char'
|   `-FullComment 0x55887c446a20 <line:101:6, col:43>
|     `-ParagraphComment 0x55887c4469f0 <col:6, col:43>
|       `-TextComment 0x55887c4469c0 <col:6, col:43> Text=" Function Number (0 = First Function)."
|-TypedefDecl 0x55887c2a6828 <line:98:1, line:104:3> col:3 referenced PCCARD_DEVICE_PATH 'struct PCCARD_DEVICE_PATH':'PCCARD_DEVICE_PATH'
| |-ElaboratedType 0x55887c2a67d0 'struct PCCARD_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2a6660 'PCCARD_DEVICE_PATH'
| |   `-Record 0x55887c2a65e0 ''
| `-FullComment 0x55887c446af0 <line:96:4, col:23>
|   `-ParagraphComment 0x55887c446ac0 <col:4, col:23>
|     `-TextComment 0x55887c446a90 <col:4, col:23> Text=" PCCARD Device Path."
|-RecordDecl 0x55887c2a68f0 <line:114:9, line:128:1> line:114:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2a6990 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c446bc0 <line:112:4, col:30>
| | `-ParagraphComment 0x55887c446b90 <col:4, col:30>
| |   `-TextComment 0x55887c446b60 <col:4, col:30> Text=" Memory Mapped Device Path."
| |-FieldDecl 0x55887c2a69f8 <line:115:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2a6a88 <line:119:3, col:31> col:31 MemoryType 'UINT32':'unsigned int'
| | `-FullComment 0x55887c446c90 <line:117:6, col:21>
| |   `-ParagraphComment 0x55887c446c60 <col:6, col:21>
| |     `-TextComment 0x55887c446c30 <col:6, col:21> Text=" EFI_MEMORY_TYPE"
| |-FieldDecl 0x55887c2a6b18 <line:123:3, col:31> col:31 StartingAddress 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | `-FullComment 0x55887c446d60 <line:121:6, col:30>
| |   `-ParagraphComment 0x55887c446d30 <col:6, col:30>
| |     `-TextComment 0x55887c446d00 <col:6, col:30> Text=" Starting Memory Address."
| `-FieldDecl 0x55887c2a6ba8 <line:127:3, col:31> col:31 EndingAddress 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
|   `-FullComment 0x55887c446e30 <line:125:6, col:28>
|     `-ParagraphComment 0x55887c446e00 <col:6, col:28>
|       `-TextComment 0x55887c446dd0 <col:6, col:28> Text=" Ending Memory Address."
|-TypedefDecl 0x55887c2a6c58 <line:114:1, line:128:3> col:3 referenced MEMMAP_DEVICE_PATH 'struct MEMMAP_DEVICE_PATH':'MEMMAP_DEVICE_PATH'
| |-ElaboratedType 0x55887c2a6c00 'struct MEMMAP_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2a6970 'MEMMAP_DEVICE_PATH'
| |   `-Record 0x55887c2a68f0 ''
| `-FullComment 0x55887c446f00 <line:112:4, col:30>
|   `-ParagraphComment 0x55887c446ed0 <col:4, col:30>
|     `-TextComment 0x55887c446ea0 <col:4, col:30> Text=" Memory Mapped Device Path."
|-RecordDecl 0x55887c2a6d20 <line:140:9, line:149:1> line:140:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2a6dc0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c447020 <line:136:4, line:138:71>
| | `-ParagraphComment 0x55887c446ff0 <line:136:4, line:138:71>
| |   |-TextComment 0x55887c446f70 <line:136:4, col:92> Text=" The Vendor Device Path allows the creation of vendor-defined Device Paths. A vendor must"
| |   |-TextComment 0x55887c446f90 <line:137:4, col:92> Text=" allocate a Vendor GUID for a Device Path. The Vendor GUID can then be used to define the"
| |   `-TextComment 0x55887c446fb0 <line:138:4, col:71> Text=" contents on the n bytes that follow in the Vendor Device Path node."
| |-FieldDecl 0x55887c2a6e28 <line:141:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2a6eb8 <line:145:3, col:31> col:31 Guid 'EFI_GUID':'GUID'
|   `-FullComment 0x55887c4470f0 <line:143:6, col:62>
|     `-ParagraphComment 0x55887c4470c0 <col:6, col:62>
|       `-TextComment 0x55887c447090 <col:6, col:62> Text=" Vendor-assigned GUID that defines the data that follows."
|-TypedefDecl 0x55887c2a6f98 <line:140:1, line:149:3> col:3 referenced VENDOR_DEVICE_PATH 'struct VENDOR_DEVICE_PATH':'VENDOR_DEVICE_PATH'
| |-ElaboratedType 0x55887c2a6f40 'struct VENDOR_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2a6da0 'VENDOR_DEVICE_PATH'
| |   `-Record 0x55887c2a6d20 ''
| `-FullComment 0x55887c447210 <line:136:4, line:138:71>
|   `-ParagraphComment 0x55887c4471e0 <line:136:4, line:138:71>
|     |-TextComment 0x55887c447160 <line:136:4, col:92> Text=" The Vendor Device Path allows the creation of vendor-defined Device Paths. A vendor must"
|     |-TextComment 0x55887c447180 <line:137:4, col:92> Text=" allocate a Vendor GUID for a Device Path. The Vendor GUID can then be used to define the"
|     `-TextComment 0x55887c4471a0 <line:138:4, col:71> Text=" contents on the n bytes that follow in the Vendor Device Path node."
|-RecordDecl 0x55887c2a7060 <line:159:9, line:165:1> line:159:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2a7100 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4472e0 <line:157:4, col:27>
| | `-ParagraphComment 0x55887c4472b0 <col:4, col:27>
| |   `-TextComment 0x55887c447280 <col:4, col:27> Text=" Controller Device Path."
| |-FieldDecl 0x55887c2a7168 <line:160:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2a71f8 <line:164:3, col:31> col:31 ControllerNumber 'UINT32':'unsigned int'
|   `-FullComment 0x55887c4473b0 <line:162:6, col:24>
|     `-ParagraphComment 0x55887c447380 <col:6, col:24>
|       `-TextComment 0x55887c447350 <col:6, col:24> Text=" Controller number."
|-TypedefDecl 0x55887c2a72a8 <line:159:1, line:165:3> col:3 referenced CONTROLLER_DEVICE_PATH 'struct CONTROLLER_DEVICE_PATH':'CONTROLLER_DEVICE_PATH'
| |-ElaboratedType 0x55887c2a7250 'struct CONTROLLER_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2a70e0 'CONTROLLER_DEVICE_PATH'
| |   `-Record 0x55887c2a7060 ''
| `-FullComment 0x55887c447480 <line:157:4, col:27>
|   `-ParagraphComment 0x55887c447450 <col:4, col:27>
|     `-TextComment 0x55887c447420 <col:4, col:27> Text=" Controller Device Path."
|-RecordDecl 0x55887c2a7370 <line:175:9, line:185:1> line:175:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2a7410 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c447550 <line:173:4, col:20>
| | `-ParagraphComment 0x55887c447520 <col:4, col:20>
| |   `-TextComment 0x55887c4474f0 <col:4, col:20> Text=" BMC Device Path."
| |-FieldDecl 0x55887c2a7478 <line:176:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2ac558 <line:180:3, col:31> col:31 InterfaceType 'UINT8':'unsigned char'
| | `-FullComment 0x55887c447620 <line:178:6, col:21>
| |   `-ParagraphComment 0x55887c4475f0 <col:6, col:21>
| |     `-TextComment 0x55887c4475c0 <col:6, col:21> Text=" Interface Type."
| `-FieldDecl 0x55887c2ac638 <line:184:3, col:44> col:31 BaseAddress 'UINT8[8]'
|   `-FullComment 0x55887c4476f0 <line:182:6, col:19>
|     `-ParagraphComment 0x55887c4476c0 <col:6, col:19>
|       `-TextComment 0x55887c447690 <col:6, col:19> Text=" Base Address."
|-TypedefDecl 0x55887c2ac6e8 <line:175:1, line:185:3> col:3 referenced BMC_DEVICE_PATH 'struct BMC_DEVICE_PATH':'BMC_DEVICE_PATH'
| |-ElaboratedType 0x55887c2ac690 'struct BMC_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2a73f0 'BMC_DEVICE_PATH'
| |   `-Record 0x55887c2a7370 ''
| `-FullComment 0x55887c4477c0 <line:173:4, col:20>
|   `-ParagraphComment 0x55887c447790 <col:4, col:20>
|     `-TextComment 0x55887c447760 <col:4, col:20> Text=" BMC Device Path."
|-RecordDecl 0x55887c2ac7b0 <line:196:9, line:212:1> line:196:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2ac850 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2ac8b8 <line:197:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2ac948 <line:203:3, col:31> col:31 HID 'UINT32':'unsigned int'
| | `-FullComment 0x55887c4478e0 <line:199:6, line:201:48>
| |   `-ParagraphComment 0x55887c4478b0 <line:199:6, line:201:48>
| |     |-TextComment 0x55887c447830 <line:199:6, col:57> Text=" Device's PnP hardware ID stored in a numeric 32-bit"
| |     |-TextComment 0x55887c447850 <line:200:6, col:56> Text=" compressed EISA-type ID. This value must match the"
| |     `-TextComment 0x55887c447870 <line:201:6, col:48> Text=" corresponding _HID in the ACPI name space."
| `-FieldDecl 0x55887c2ac9d8 <line:211:3, col:31> col:31 UID 'UINT32':'unsigned int'
|   `-FullComment 0x55887c447a50 <line:205:6, line:209:54>
|     `-ParagraphComment 0x55887c447a20 <line:205:6, line:209:54>
|       |-TextComment 0x55887c447950 <line:205:6, col:64> Text=" Unique ID that is required by ACPI if two devices have the"
|       |-TextComment 0x55887c447970 <line:206:6, col:61> Text=" same _HID. This value must also match the corresponding"
|       |-TextComment 0x55887c447990 <line:207:6, col:60> Text=" _UID/_HID pair in the ACPI name space. Only the 32-bit"
|       |-TextComment 0x55887c4479b0 <line:208:6, col:65> Text=" numeric value type of _UID is supported. Thus, strings must"
|       `-TextComment 0x55887c4479d0 <line:209:6, col:54> Text=" not be used for the _UID in the ACPI name space."
|-TypedefDecl 0x55887c2aca88 <line:196:1, line:212:3> col:3 referenced ACPI_HID_DEVICE_PATH 'struct ACPI_HID_DEVICE_PATH':'ACPI_HID_DEVICE_PATH'
| `-ElaboratedType 0x55887c2aca30 'struct ACPI_HID_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2ac830 'ACPI_HID_DEVICE_PATH'
|     `-Record 0x55887c2ac7b0 ''
|-RecordDecl 0x55887c2acb20 <line:218:9, line:244:1> line:218:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2acbc0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2acc28 <line:219:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2accb8 <line:225:3, col:31> col:31 HID 'UINT32':'unsigned int'
| | `-FullComment 0x55887c447b70 <line:221:6, line:223:48>
| |   `-ParagraphComment 0x55887c447b40 <line:221:6, line:223:48>
| |     |-TextComment 0x55887c447ac0 <line:221:6, col:57> Text=" Device's PnP hardware ID stored in a numeric 32-bit"
| |     |-TextComment 0x55887c447ae0 <line:222:6, col:56> Text=" compressed EISA-type ID. This value must match the"
| |     `-TextComment 0x55887c447b00 <line:223:6, col:48> Text=" corresponding _HID in the ACPI name space."
| |-FieldDecl 0x55887c2acd48 <line:231:3, col:31> col:31 UID 'UINT32':'unsigned int'
| | `-FullComment 0x55887c447c90 <line:227:6, line:229:44>
| |   `-ParagraphComment 0x55887c447c60 <line:227:6, line:229:44>
| |     |-TextComment 0x55887c447be0 <line:227:6, col:64> Text=" Unique ID that is required by ACPI if two devices have the"
| |     |-TextComment 0x55887c447c00 <line:228:6, col:61> Text=" same _HID. This value must also match the corresponding"
| |     `-TextComment 0x55887c447c20 <line:229:6, col:44> Text=" _UID/_HID pair in the ACPI name space."
| `-FieldDecl 0x55887c2acdd8 <line:238:3, col:31> col:31 CID 'UINT32':'unsigned int'
|   `-FullComment 0x55887c447dd0 <line:233:6, line:236:48>
|     `-ParagraphComment 0x55887c447da0 <line:233:6, line:236:48>
|       |-TextComment 0x55887c447d00 <line:233:6, col:61> Text=" Device's compatible PnP hardware ID stored in a numeric"
|       |-TextComment 0x55887c447d20 <line:234:6, col:62> Text=" 32-bit compressed EISA-type ID. This value must match at"
|       |-TextComment 0x55887c447d40 <line:235:6, col:60> Text=" least one of the compatible device IDs returned by the"
|       `-TextComment 0x55887c447d60 <line:236:6, col:48> Text=" corresponding _CID in the ACPI name space."
|-TypedefDecl 0x55887c2aceb8 <line:218:1, line:244:3> col:3 referenced ACPI_EXTENDED_HID_DEVICE_PATH 'struct ACPI_EXTENDED_HID_DEVICE_PATH':'ACPI_EXTENDED_HID_DEVICE_PATH'
| `-ElaboratedType 0x55887c2ace60 'struct ACPI_EXTENDED_HID_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2acba0 'ACPI_EXTENDED_HID_DEVICE_PATH'
|     `-Record 0x55887c2acb20 ''
|-RecordDecl 0x55887c2acf80 <line:271:9, line:282:1> line:271:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2ad020 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c447ef0 <line:267:4, line:269:43>
| | `-ParagraphComment 0x55887c447ec0 <line:267:4, line:269:43>
| |   |-TextComment 0x55887c447e40 <line:267:4, col:98> Text=" The _ADR device path is used to contain video output device attributes to support the Graphics"
| |   |-TextComment 0x55887c447e60 <line:268:4, col:95> Text=" Output Protocol. The device path can contain multiple _ADR entries if multiple video output"
| |   `-TextComment 0x55887c447e80 <line:269:4, col:43> Text=" devices are displaying the same output."
| |-FieldDecl 0x55887c2ad088 <line:272:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2ad118 <line:278:3, col:31> col:31 ADR 'UINT32':'unsigned int'
|   `-FullComment 0x55887c448010 <line:274:6, line:276:39>
|     `-ParagraphComment 0x55887c447fe0 <line:274:6, line:276:39>
|       |-TextComment 0x55887c447f60 <line:274:6, col:60> Text=" _ADR value. For video output devices the value of this"
|       |-TextComment 0x55887c447f80 <line:275:6, col:66> Text=" field comes from Table B-2 of the ACPI 3.0 specification. At"
|       `-TextComment 0x55887c447fa0 <line:276:6, col:39> Text=" least one _ADR value is required."
|-TypedefDecl 0x55887c2ad1c8 <line:271:1, line:282:3> col:3 referenced ACPI_ADR_DEVICE_PATH 'struct ACPI_ADR_DEVICE_PATH':'ACPI_ADR_DEVICE_PATH'
| |-ElaboratedType 0x55887c2ad170 'struct ACPI_ADR_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2ad000 'ACPI_ADR_DEVICE_PATH'
| |   `-Record 0x55887c2acf80 ''
| `-FullComment 0x55887c448130 <line:267:4, line:269:43>
|   `-ParagraphComment 0x55887c448100 <line:267:4, line:269:43>
|     |-TextComment 0x55887c448080 <line:267:4, col:98> Text=" The _ADR device path is used to contain video output device attributes to support the Graphics"
|     |-TextComment 0x55887c4480a0 <line:268:4, col:95> Text=" Output Protocol. The device path can contain multiple _ADR entries if multiple video output"
|     `-TextComment 0x55887c4480c0 <line:269:4, col:43> Text=" devices are displaying the same output."
|-RecordDecl 0x55887c2ad290 <line:290:9, line:297:1> line:290:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2ad330 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c4481a0 <<invalid sloc>>
| |-FieldDecl 0x55887c2ad398 <line:291:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2ad428 <line:296:3, col:31> col:31 NFITDeviceHandle 'UINT32':'unsigned int'
|   `-FullComment 0x55887c448290 <line:293:6, line:294:87>
|     `-ParagraphComment 0x55887c448260 <line:293:6, line:294:87>
|       |-TextComment 0x55887c448210 <line:293:6, col:56> Text=" NFIT Device Handle, the _ADR of the NVDIMM device."
|       `-TextComment 0x55887c448230 <line:294:6, col:87> Text=" The value of this field comes from Section 9.20.3 of the ACPI 6.2A specification."
|-TypedefDecl 0x55887c2ad4d8 <line:290:1, line:297:3> col:3 ACPI_NVDIMM_DEVICE_PATH 'struct ACPI_NVDIMM_DEVICE_PATH':'ACPI_NVDIMM_DEVICE_PATH'
| |-ElaboratedType 0x55887c2ad480 'struct ACPI_NVDIMM_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2ad310 'ACPI_NVDIMM_DEVICE_PATH'
| |   `-Record 0x55887c2ad290 ''
| `-FullComment 0x55887c448300 <<invalid sloc>>
|-RecordDecl 0x55887c2ad5a0 <line:327:9, line:341:1> line:327:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2ad640 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2ad6a8 <line:328:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2ad738 <line:332:3, col:31> col:31 PrimarySecondary 'UINT8':'unsigned char'
| | `-FullComment 0x55887c4483d0 <line:330:6, col:52>
| |   `-ParagraphComment 0x55887c4483a0 <col:6, col:52>
| |     `-TextComment 0x55887c448370 <col:6, col:52> Text=" Set to zero for primary, or one for secondary."
| |-FieldDecl 0x55887c2ad7c8 <line:336:3, col:31> col:31 SlaveMaster 'UINT8':'unsigned char'
| | `-FullComment 0x55887c4484a0 <line:334:6, col:52>
| |   `-ParagraphComment 0x55887c448470 <col:6, col:52>
| |     `-TextComment 0x55887c448440 <col:6, col:52> Text=" Set to zero for master, or one for slave mode."
| `-FieldDecl 0x55887c2ad858 <line:340:3, col:31> col:31 Lun 'UINT16':'unsigned short'
|   `-FullComment 0x55887c448570 <line:338:6, col:26>
|     `-ParagraphComment 0x55887c448540 <col:6, col:26>
|       `-TextComment 0x55887c448510 <col:6, col:26> Text=" Logical Unit Number."
|-TypedefDecl 0x55887c2ad908 <line:327:1, line:341:3> col:3 referenced ATAPI_DEVICE_PATH 'struct ATAPI_DEVICE_PATH':'ATAPI_DEVICE_PATH'
| `-ElaboratedType 0x55887c2ad8b0 'struct ATAPI_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2ad620 'ATAPI_DEVICE_PATH'
|     `-Record 0x55887c2ad5a0 ''
|-RecordDecl 0x55887c2ad9a0 <line:347:9, line:357:1> line:347:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2ada40 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2adaa8 <line:348:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2adb38 <line:352:3, col:31> col:31 Pun 'UINT16':'unsigned short'
| | `-FullComment 0x55887c448640 <line:350:6, col:38>
| |   `-ParagraphComment 0x55887c448610 <col:6, col:38>
| |     `-TextComment 0x55887c4485e0 <col:6, col:38> Text=" Target ID on the SCSI bus (PUN)."
| `-FieldDecl 0x55887c2adbc8 <line:356:3, col:31> col:31 Lun 'UINT16':'unsigned short'
|   `-FullComment 0x55887c448710 <line:354:6, col:32>
|     `-ParagraphComment 0x55887c4486e0 <col:6, col:32>
|       `-TextComment 0x55887c4486b0 <col:6, col:32> Text=" Logical Unit Number (LUN)."
|-TypedefDecl 0x55887c2adc78 <line:347:1, line:357:3> col:3 referenced SCSI_DEVICE_PATH 'struct SCSI_DEVICE_PATH':'SCSI_DEVICE_PATH'
| `-ElaboratedType 0x55887c2adc20 'struct SCSI_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2ada20 'SCSI_DEVICE_PATH'
|     `-Record 0x55887c2ad9a0 ''
|-RecordDecl 0x55887c2add10 <line:363:9, line:377:1> line:363:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2addb0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2ade18 <line:364:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2adea8 <line:368:3, col:31> col:31 Reserved 'UINT32':'unsigned int'
| | `-FullComment 0x55887c4487e0 <line:366:6, col:30>
| |   `-ParagraphComment 0x55887c4487b0 <col:6, col:30>
| |     `-TextComment 0x55887c448780 <col:6, col:30> Text=" Reserved for the future."
| |-FieldDecl 0x55887c2adf38 <line:372:3, col:31> col:31 WWN 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c4488b0 <line:370:6, col:38>
| |   `-ParagraphComment 0x55887c448880 <col:6, col:38>
| |     `-TextComment 0x55887c448850 <col:6, col:38> Text=" Fibre Channel World Wide Number."
| `-FieldDecl 0x55887c2adfc8 <line:376:3, col:31> col:31 Lun 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c448980 <line:374:6, col:40>
|     `-ParagraphComment 0x55887c448950 <col:6, col:40>
|       `-TextComment 0x55887c448920 <col:6, col:40> Text=" Fibre Channel Logical Unit Number."
|-TypedefDecl 0x55887c2ae078 <line:363:1, line:377:3> col:3 referenced FIBRECHANNEL_DEVICE_PATH 'struct FIBRECHANNEL_DEVICE_PATH':'FIBRECHANNEL_DEVICE_PATH'
| `-ElaboratedType 0x55887c2ae020 'struct FIBRECHANNEL_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2add90 'FIBRECHANNEL_DEVICE_PATH'
|     `-Record 0x55887c2add10 ''
|-RecordDecl 0x55887c2ae110 <line:383:9, line:397:1> line:383:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2ae1b0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2ae218 <line:384:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2ae2a8 <line:388:3, col:31> col:31 Reserved 'UINT32':'unsigned int'
| | `-FullComment 0x55887c448a50 <line:386:6, col:30>
| |   `-ParagraphComment 0x55887c448a20 <col:6, col:30>
| |     `-TextComment 0x55887c4489f0 <col:6, col:30> Text=" Reserved for the future."
| |-FieldDecl 0x55887c2ae388 <line:392:3, col:36> col:31 WWN 'UINT8[8]'
| | `-FullComment 0x55887c448b20 <line:390:6, col:65>
| |   `-ParagraphComment 0x55887c448af0 <col:6, col:65>
| |     `-TextComment 0x55887c448ac0 <col:6, col:65> Text=" 8 byte array containing Fibre Channel End Device Port Name."
| `-FieldDecl 0x55887c2ae468 <line:396:3, col:36> col:31 Lun 'UINT8[8]'
|   `-FullComment 0x55887c448bf0 <line:394:6, col:64>
|     `-ParagraphComment 0x55887c448bc0 <col:6, col:64>
|       `-TextComment 0x55887c448b90 <col:6, col:64> Text=" 8 byte array containing Fibre Channel Logical Unit Number."
|-TypedefDecl 0x55887c2b0d80 <line:383:1, line:397:3> col:3 referenced FIBRECHANNELEX_DEVICE_PATH 'struct FIBRECHANNELEX_DEVICE_PATH':'FIBRECHANNELEX_DEVICE_PATH'
| `-ElaboratedType 0x55887c2ae4c0 'struct FIBRECHANNELEX_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2ae190 'FIBRECHANNELEX_DEVICE_PATH'
|     `-Record 0x55887c2ae110 ''
|-RecordDecl 0x55887c2b0e20 <line:403:9, line:413:1> line:403:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2b0ec0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2b0f28 <line:404:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2b0fb8 <line:408:3, col:31> col:31 Reserved 'UINT32':'unsigned int'
| | `-FullComment 0x55887c448cc0 <line:406:6, col:30>
| |   `-ParagraphComment 0x55887c448c90 <col:6, col:30>
| |     `-TextComment 0x55887c448c60 <col:6, col:30> Text=" Reserved for the future."
| `-FieldDecl 0x55887c2b1048 <line:412:3, col:31> col:31 Guid 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c448d90 <line:410:6, col:35>
|     `-ParagraphComment 0x55887c448d60 <col:6, col:35>
|       `-TextComment 0x55887c448d30 <col:6, col:35> Text=" 1394 Global Unique ID (GUID)."
|-TypedefDecl 0x55887c2b10f8 <line:403:1, line:413:3> col:3 referenced F1394_DEVICE_PATH 'struct F1394_DEVICE_PATH':'F1394_DEVICE_PATH'
| `-ElaboratedType 0x55887c2b10a0 'struct F1394_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2b0ea0 'F1394_DEVICE_PATH'
|     `-Record 0x55887c2b0e20 ''
|-RecordDecl 0x55887c2b1190 <line:419:9, line:429:1> line:419:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2b1230 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2b1298 <line:420:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2b1328 <line:424:3, col:31> col:31 ParentPortNumber 'UINT8':'unsigned char'
| | `-FullComment 0x55887c448e60 <line:422:6, col:29>
| |   `-ParagraphComment 0x55887c448e30 <col:6, col:29>
| |     `-TextComment 0x55887c448e00 <col:6, col:29> Text=" USB Parent Port Number."
| `-FieldDecl 0x55887c2b13b8 <line:428:3, col:31> col:31 InterfaceNumber 'UINT8':'unsigned char'
|   `-FullComment 0x55887c448f30 <line:426:6, col:27>
|     `-ParagraphComment 0x55887c448f00 <col:6, col:27>
|       `-TextComment 0x55887c448ed0 <col:6, col:27> Text=" USB Interface Number."
|-TypedefDecl 0x55887c2b1468 <line:419:1, line:429:3> col:3 referenced USB_DEVICE_PATH 'struct USB_DEVICE_PATH':'USB_DEVICE_PATH'
| `-ElaboratedType 0x55887c2b1410 'struct USB_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2b1210 'USB_DEVICE_PATH'
|     `-Record 0x55887c2b1190 ''
|-RecordDecl 0x55887c2b1500 <line:435:9, line:462:1> line:435:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2b15a0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2b1608 <line:436:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2b1698 <line:441:3, col:31> col:31 VendorId 'UINT16':'unsigned short'
| | `-FullComment 0x55887c449020 <line:438:6, line:439:26>
| |   `-ParagraphComment 0x55887c448ff0 <line:438:6, line:439:26>
| |     |-TextComment 0x55887c448fa0 <line:438:6, col:58> Text=" Vendor ID assigned by USB-IF. A value of 0xFFFF will"
| |     `-TextComment 0x55887c448fc0 <line:439:6, col:26> Text=" match any Vendor ID."
| |-FieldDecl 0x55887c2b1728 <line:446:3, col:31> col:31 ProductId 'UINT16':'unsigned short'
| | `-FullComment 0x55887c44a6c0 <line:443:6, line:444:27>
| |   `-ParagraphComment 0x55887c44a690 <line:443:6, line:444:27>
| |     |-TextComment 0x55887c44a640 <line:443:6, col:59> Text=" Product ID assigned by USB-IF. A value of 0xFFFF will"
| |     `-TextComment 0x55887c44a660 <line:444:6, col:27> Text=" match any Product ID."
| |-FieldDecl 0x55887c2b17b8 <line:451:3, col:31> col:31 DeviceClass 'UINT8':'unsigned char'
| | `-FullComment 0x55887c44a7b0 <line:448:6, line:449:32>
| |   `-ParagraphComment 0x55887c44a780 <line:448:6, line:449:32>
| |     |-TextComment 0x55887c44a730 <line:448:6, col:60> Text=" The class code assigned by the USB-IF. A value of 0xFF"
| |     `-TextComment 0x55887c44a750 <line:449:6, col:32> Text=" will match any class code."
| |-FieldDecl 0x55887c2b1848 <line:456:3, col:31> col:31 DeviceSubClass 'UINT8':'unsigned char'
| | `-FullComment 0x55887c44a8a0 <line:453:6, line:454:40>
| |   `-ParagraphComment 0x55887c44a870 <line:453:6, line:454:40>
| |     |-TextComment 0x55887c44a820 <line:453:6, col:58> Text=" The subclass code assigned by the USB-IF. A value of"
| |     `-TextComment 0x55887c44a840 <line:454:6, col:40> Text=" 0xFF will match any subclass code."
| `-FieldDecl 0x55887c2b18d8 <line:461:3, col:31> col:31 DeviceProtocol 'UINT8':'unsigned char'
|   `-FullComment 0x55887c44a990 <line:458:6, line:459:40>
|     `-ParagraphComment 0x55887c44a960 <line:458:6, line:459:40>
|       |-TextComment 0x55887c44a910 <line:458:6, col:58> Text=" The protocol code assigned by the USB-IF. A value of"
|       `-TextComment 0x55887c44a930 <line:459:6, col:40> Text=" 0xFF will match any protocol code."
|-TypedefDecl 0x55887c2b1988 <line:435:1, line:462:3> col:3 referenced USB_CLASS_DEVICE_PATH 'struct USB_CLASS_DEVICE_PATH':'USB_CLASS_DEVICE_PATH'
| `-ElaboratedType 0x55887c2b1930 'struct USB_CLASS_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2b1580 'USB_CLASS_DEVICE_PATH'
|     `-Record 0x55887c2b1500 ''
|-RecordDecl 0x55887c2b1a50 <line:472:9, line:493:1> line:472:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2b1af0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c44aa60 <line:470:4, col:68>
| | `-ParagraphComment 0x55887c44aa30 <col:4, col:68>
| |   `-TextComment 0x55887c44aa00 <col:4, col:68> Text=" This device path describes a USB device using its serial number."
| |-FieldDecl 0x55887c2b1b58 <line:473:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2b1be8 <line:477:3, col:31> col:31 InterfaceNumber 'UINT16':'unsigned short'
| | `-FullComment 0x55887c44ab30 <line:475:6, col:27>
| |   `-ParagraphComment 0x55887c44ab00 <col:6, col:27>
| |     `-TextComment 0x55887c44aad0 <col:6, col:27> Text=" USB interface number."
| |-FieldDecl 0x55887c2b1c78 <line:481:3, col:31> col:31 VendorId 'UINT16':'unsigned short'
| | `-FullComment 0x55887c44ac00 <line:479:6, col:34>
| |   `-ParagraphComment 0x55887c44abd0 <col:6, col:34>
| |     `-TextComment 0x55887c44aba0 <col:6, col:34> Text=" USB vendor id of the device."
| `-FieldDecl 0x55887c2b1d08 <line:485:3, col:31> col:31 ProductId 'UINT16':'unsigned short'
|   `-FullComment 0x55887c44acd0 <line:483:6, col:35>
|     `-ParagraphComment 0x55887c44aca0 <col:6, col:35>
|       `-TextComment 0x55887c44ac70 <col:6, col:35> Text=" USB product id of the device."
|-TypedefDecl 0x55887c2b1de8 <line:472:1, line:493:3> col:3 referenced USB_WWID_DEVICE_PATH 'struct USB_WWID_DEVICE_PATH':'USB_WWID_DEVICE_PATH'
| |-ElaboratedType 0x55887c2b1d90 'struct USB_WWID_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2b1ad0 'USB_WWID_DEVICE_PATH'
| |   `-Record 0x55887c2b1a50 ''
| `-FullComment 0x55887c44ada0 <line:470:4, col:68>
|   `-ParagraphComment 0x55887c44ad70 <col:4, col:68>
|     `-TextComment 0x55887c44ad40 <col:4, col:68> Text=" This device path describes a USB device using its serial number."
|-RecordDecl 0x55887c2b1e80 <line:499:9, line:505:1> line:499:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2b1f20 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2b1f88 <line:500:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2b2018 <line:504:3, col:31> col:31 Lun 'UINT8':'unsigned char'
|   `-FullComment 0x55887c44ae70 <line:502:6, col:44>
|     `-ParagraphComment 0x55887c44ae40 <col:6, col:44>
|       `-TextComment 0x55887c44ae10 <col:6, col:44> Text=" Logical Unit Number for the interface."
|-TypedefDecl 0x55887c2b20c8 <line:499:1, line:505:3> col:3 referenced DEVICE_LOGICAL_UNIT_DEVICE_PATH 'struct DEVICE_LOGICAL_UNIT_DEVICE_PATH':'DEVICE_LOGICAL_UNIT_DEVICE_PATH'
| `-ElaboratedType 0x55887c2b2070 'struct DEVICE_LOGICAL_UNIT_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2b1f00 'DEVICE_LOGICAL_UNIT_DEVICE_PATH'
|     `-Record 0x55887c2b1e80 ''
|-RecordDecl 0x55887c2b2160 <line:511:9, line:528:1> line:511:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2b2200 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2b2268 <line:512:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2b22f8 <line:517:3, col:31> col:31 HBAPortNumber 'UINT16':'unsigned short'
| | `-FullComment 0x55887c44af60 <line:514:6, line:515:64>
| |   `-ParagraphComment 0x55887c44af30 <line:514:6, line:515:64>
| |     |-TextComment 0x55887c44aee0 <line:514:6, col:64> Text=" The HBA port number that facilitates the connection to the"
| |     `-TextComment 0x55887c44af00 <line:515:6, col:64> Text=" device or a port multiplier. The value 0xFFFF is reserved."
| |-FieldDecl 0x55887c2b2388 <line:523:3, col:31> col:31 PortMultiplierPortNumber 'UINT16':'unsigned short'
| | `-FullComment 0x55887c44b080 <line:519:6, line:521:27>
| |   `-ParagraphComment 0x55887c44b050 <line:519:6, line:521:27>
| |     |-TextComment 0x55887c44afd0 <line:519:6, col:69> Text=" The Port multiplier port number that facilitates the connection"
| |     |-TextComment 0x55887c44aff0 <line:520:6, col:68> Text=" to the device. Must be set to 0xFFFF if the device is directly"
| |     `-TextComment 0x55887c44b010 <line:521:6, col:27> Text=" connected to the HBA."
| `-FieldDecl 0x55887c2b2418 <line:527:3, col:31> col:31 Lun 'UINT16':'unsigned short'
|   `-FullComment 0x55887c44b150 <line:525:6, col:26>
|     `-ParagraphComment 0x55887c44b120 <col:6, col:26>
|       `-TextComment 0x55887c44b0f0 <col:6, col:26> Text=" Logical Unit Number."
|-TypedefDecl 0x55887c2b24c8 <line:511:1, line:528:3> col:3 referenced SATA_DEVICE_PATH 'struct SATA_DEVICE_PATH':'SATA_DEVICE_PATH'
| `-ElaboratedType 0x55887c2b2470 'struct SATA_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2b21e0 'SATA_DEVICE_PATH'
|     `-Record 0x55887c2b2160 ''
|-RecordDecl 0x55887c2b2590 <line:539:9, line:545:1> line:539:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2b2630 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2b2698 <line:540:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2b2728 <line:544:3, col:31> col:31 Tid 'UINT32':'unsigned int'
|   `-FullComment 0x55887c44b220 <line:542:6, col:35>
|     `-ParagraphComment 0x55887c44b1f0 <col:6, col:35>
|       `-TextComment 0x55887c44b1c0 <col:6, col:35> Text=" Target ID (TID) for a device."
|-TypedefDecl 0x55887c2b27d8 <line:539:1, line:545:3> col:3 referenced I2O_DEVICE_PATH 'struct I2O_DEVICE_PATH':'I2O_DEVICE_PATH'
| `-ElaboratedType 0x55887c2b2780 'struct I2O_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2b2610 'I2O_DEVICE_PATH'
|     `-Record 0x55887c2b2590 ''
|-RecordDecl 0x55887c2b2870 <line:551:9, line:561:1> line:551:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2b2910 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2b2978 <line:552:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2b2a30 <line:556:3, col:31> col:31 MacAddress 'EFI_MAC_ADDRESS':'EFI_MAC_ADDRESS'
| | `-FullComment 0x55887c44b2f0 <line:554:6, col:61>
| |   `-ParagraphComment 0x55887c44b2c0 <col:6, col:61>
| |     `-TextComment 0x55887c44b290 <col:6, col:61> Text=" The MAC address for a network interface padded with 0s."
| `-FieldDecl 0x55887c2b2ab8 <line:560:3, col:31> col:31 IfType 'UINT8':'unsigned char'
|   `-FullComment 0x55887c44b3c0 <line:558:6, col:47>
|     `-ParagraphComment 0x55887c44b390 <col:6, col:47>
|       `-TextComment 0x55887c44b360 <col:6, col:47> Text=" Network interface type(i.e. 802.3, FDDI)."
|-TypedefDecl 0x55887c2b2b68 <line:551:1, line:561:3> col:3 referenced MAC_ADDR_DEVICE_PATH 'struct MAC_ADDR_DEVICE_PATH':'MAC_ADDR_DEVICE_PATH'
| `-ElaboratedType 0x55887c2b2b10 'struct MAC_ADDR_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2b28f0 'MAC_ADDR_DEVICE_PATH'
|     `-Record 0x55887c2b2870 ''
|-RecordDecl 0x55887c2b2c00 <line:567:9, line:602:1> line:567:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2b2ca0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2b2d08 <line:568:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2b3588 <line:572:3, col:31> col:31 LocalIpAddress 'EFI_IPv4_ADDRESS':'IPv4_ADDRESS'
| | `-FullComment 0x55887c44b490 <line:570:6, col:29>
| |   `-ParagraphComment 0x55887c44b460 <col:6, col:29>
| |     `-TextComment 0x55887c44b430 <col:6, col:29> Text=" The local IPv4 address."
| |-FieldDecl 0x55887c2b3618 <line:576:3, col:31> col:31 RemoteIpAddress 'EFI_IPv4_ADDRESS':'IPv4_ADDRESS'
| | `-FullComment 0x55887c44b560 <line:574:6, col:30>
| |   `-ParagraphComment 0x55887c44b530 <col:6, col:30>
| |     `-TextComment 0x55887c44b500 <col:6, col:30> Text=" The remote IPv4 address."
| |-FieldDecl 0x55887c2b36a8 <line:580:3, col:31> col:31 LocalPort 'UINT16':'unsigned short'
| | `-FullComment 0x55887c44b630 <line:578:6, col:28>
| |   `-ParagraphComment 0x55887c44b600 <col:6, col:28>
| |     `-TextComment 0x55887c44b5d0 <col:6, col:28> Text=" The local port number."
| |-FieldDecl 0x55887c2b3738 <line:584:3, col:31> col:31 RemotePort 'UINT16':'unsigned short'
| | `-FullComment 0x55887c44b700 <line:582:6, col:29>
| |   `-ParagraphComment 0x55887c44b6d0 <col:6, col:29>
| |     `-TextComment 0x55887c44b6a0 <col:6, col:29> Text=" The remote port number."
| |-FieldDecl 0x55887c2b37c8 <line:588:3, col:31> col:31 Protocol 'UINT16':'unsigned short'
| | `-FullComment 0x55887c44b7d0 <line:586:6, col:42>
| |   `-ParagraphComment 0x55887c44b7a0 <col:6, col:42>
| |     `-TextComment 0x55887c44b770 <col:6, col:42> Text=" The network protocol(i.e. UDP, TCP)."
| |-FieldDecl 0x55887c2b3858 <line:593:3, col:31> col:31 StaticIpAddress 'BOOLEAN':'unsigned char'
| | `-FullComment 0x55887c44b8c0 <line:590:6, line:591:55>
| |   `-ParagraphComment 0x55887c44b890 <line:590:6, line:591:55>
| |     |-TextComment 0x55887c44b840 <line:590:6, col:60> Text=" 0x00 - The Source IP Address was assigned though DHCP."
| |     `-TextComment 0x55887c44b860 <line:591:6, col:55> Text=" 0x01 - The Source IP Address is statically bound."
| |-FieldDecl 0x55887c2b38e8 <line:597:3, col:31> col:31 GatewayIpAddress 'EFI_IPv4_ADDRESS':'IPv4_ADDRESS'
| | `-FullComment 0x55887c44b990 <line:595:6, col:28>
| |   `-ParagraphComment 0x55887c44b960 <col:6, col:28>
| |     `-TextComment 0x55887c44b930 <col:6, col:28> Text=" The gateway IP address"
| `-FieldDecl 0x55887c2b3978 <line:601:3, col:31> col:31 SubnetMask 'EFI_IPv4_ADDRESS':'IPv4_ADDRESS'
|   `-FullComment 0x55887c44ba60 <line:599:6, col:21>
|     `-ParagraphComment 0x55887c44ba30 <col:6, col:21>
|       `-TextComment 0x55887c44ba00 <col:6, col:21> Text=" The subnet mask"
|-TypedefDecl 0x55887c2b3a28 <line:567:1, line:602:3> col:3 referenced IPv4_DEVICE_PATH 'struct IPv4_DEVICE_PATH':'IPv4_DEVICE_PATH'
| `-ElaboratedType 0x55887c2b39d0 'struct IPv4_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2b2c80 'IPv4_DEVICE_PATH'
|     `-Record 0x55887c2b2c00 ''
|-RecordDecl 0x55887c2b3ac0 <line:608:9, line:646:1> line:608:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2b3b60 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2b3bc8 <line:609:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2b3c58 <line:613:3, col:31> col:31 LocalIpAddress 'EFI_IPv6_ADDRESS':'IPv6_ADDRESS'
| | `-FullComment 0x55887c44bb30 <line:611:6, col:29>
| |   `-ParagraphComment 0x55887c44bb00 <col:6, col:29>
| |     `-TextComment 0x55887c44bad0 <col:6, col:29> Text=" The local IPv6 address."
| |-FieldDecl 0x55887c2b3ce8 <line:617:3, col:31> col:31 RemoteIpAddress 'EFI_IPv6_ADDRESS':'IPv6_ADDRESS'
| | `-FullComment 0x55887c44bc00 <line:615:6, col:30>
| |   `-ParagraphComment 0x55887c44bbd0 <col:6, col:30>
| |     `-TextComment 0x55887c44bba0 <col:6, col:30> Text=" The remote IPv6 address."
| |-FieldDecl 0x55887c2b3d78 <line:621:3, col:31> col:31 LocalPort 'UINT16':'unsigned short'
| | `-FullComment 0x55887c44bcd0 <line:619:6, col:28>
| |   `-ParagraphComment 0x55887c44bca0 <col:6, col:28>
| |     `-TextComment 0x55887c44bc70 <col:6, col:28> Text=" The local port number."
| |-FieldDecl 0x55887c2b3e08 <line:625:3, col:31> col:31 RemotePort 'UINT16':'unsigned short'
| | `-FullComment 0x55887c44bda0 <line:623:6, col:29>
| |   `-ParagraphComment 0x55887c44bd70 <col:6, col:29>
| |     `-TextComment 0x55887c44bd40 <col:6, col:29> Text=" The remote port number."
| |-FieldDecl 0x55887c2b3e98 <line:629:3, col:31> col:31 Protocol 'UINT16':'unsigned short'
| | `-FullComment 0x55887c44be70 <line:627:6, col:42>
| |   `-ParagraphComment 0x55887c44be40 <col:6, col:42>
| |     `-TextComment 0x55887c44be10 <col:6, col:42> Text=" The network protocol(i.e. UDP, TCP)."
| |-FieldDecl 0x55887c2b3f28 <line:637:3, col:31> col:31 IpAddressOrigin 'UINT8':'unsigned char'
| | `-FullComment 0x55887c44bfe0 <line:631:6, line:635:29>
| |   `-ParagraphComment 0x55887c44bfb0 <line:631:6, line:635:29>
| |     |-TextComment 0x55887c44bee0 <line:631:6, col:58> Text=" 0x00 - The Local IP Address was manually configured."
| |     |-TextComment 0x55887c44bf00 <line:632:6, col:58> Text=" 0x01 - The Local IP Address is assigned through IPv6"
| |     |-TextComment 0x55887c44bf20 <line:633:6, col:35> Text=" stateless auto-configuration."
| |     |-TextComment 0x55887c44bf40 <line:634:6, col:58> Text=" 0x02 - The Local IP Address is assigned through IPv6"
| |     `-TextComment 0x55887c44bf60 <line:635:6, col:29> Text=" stateful configuration."
| |-FieldDecl 0x55887c2b3fb8 <line:641:3, col:31> col:31 PrefixLength 'UINT8':'unsigned char'
| | `-FullComment 0x55887c44c0b0 <line:639:6, col:23>
| |   `-ParagraphComment 0x55887c44c080 <col:6, col:23>
| |     `-TextComment 0x55887c44c050 <col:6, col:23> Text=" The prefix length"
| `-FieldDecl 0x55887c2b4048 <line:645:3, col:31> col:31 GatewayIpAddress 'EFI_IPv6_ADDRESS':'IPv6_ADDRESS'
|   `-FullComment 0x55887c44c180 <line:643:6, col:28>
|     `-ParagraphComment 0x55887c44c150 <col:6, col:28>
|       `-TextComment 0x55887c44c120 <col:6, col:28> Text=" The gateway IP address"
|-TypedefDecl 0x55887c2b40f8 <line:608:1, line:646:3> col:3 referenced IPv6_DEVICE_PATH 'struct IPv6_DEVICE_PATH':'IPv6_DEVICE_PATH'
| `-ElaboratedType 0x55887c2b40a0 'struct IPv6_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2b3b40 'IPv6_DEVICE_PATH'
|     `-Record 0x55887c2b3ac0 ''
|-RecordDecl 0x55887c2b4190 <line:652:9, line:681:1> line:652:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2b4230 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2b4298 <line:653:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2b4328 <line:663:3, col:13> col:13 ResourceFlags 'UINT32':'unsigned int'
| | `-FullComment 0x55887c44c340 <line:655:6, line:661:34>
| |   `-ParagraphComment 0x55887c44c310 <line:655:6, line:661:34>
| |     |-TextComment 0x55887c44c1f0 <line:655:6, col:68> Text=" Flags to help identify/manage InfiniBand device path elements:"
| |     |-TextComment 0x55887c44c210 <line:656:6, col:51> Text=" Bit 0 - IOC/Service (0b = IOC, 1b = Service)."
| |     |-TextComment 0x55887c44c230 <line:657:6, col:38> Text=" Bit 1 - Extend Boot Environment."
| |     |-TextComment 0x55887c44c250 <line:658:6, col:31> Text=" Bit 2 - Console Protocol."
| |     |-TextComment 0x55887c44c270 <line:659:6, col:31> Text=" Bit 3 - Storage Protocol."
| |     |-TextComment 0x55887c44c290 <line:660:6, col:31> Text=" Bit 4 - Network Protocol."
| |     `-TextComment 0x55887c44c2b0 <line:661:6, col:34> Text=" All other bits are reserved."
| |-FieldDecl 0x55887c2b4408 <line:667:3, col:23> col:13 PortGid 'UINT8[16]'
| | `-FullComment 0x55887c44c410 <line:665:6, col:55>
| |   `-ParagraphComment 0x55887c44c3e0 <col:6, col:55>
| |     `-TextComment 0x55887c44c3b0 <col:6, col:55> Text=" 128-bit Global Identifier for remote fabric port."
| |-FieldDecl 0x55887c2b4498 <line:672:3, col:13> col:13 ServiceId 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c44c500 <line:669:6, line:670:66>
| |   `-ParagraphComment 0x55887c44c4d0 <line:669:6, line:670:66>
| |     |-TextComment 0x55887c44c480 <line:669:6, col:63> Text=" 64-bit unique identifier to remote IOC or server process."
| |     `-TextComment 0x55887c44c4a0 <line:670:6, col:66> Text=" Interpretation of field specified by Resource Flags (bit 0)."
| |-FieldDecl 0x55887c2b4528 <line:676:3, col:13> col:13 TargetPortId 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c44c5d0 <line:674:6, col:46>
| |   `-ParagraphComment 0x55887c44c5a0 <col:6, col:46>
| |     `-TextComment 0x55887c44c570 <col:6, col:46> Text=" 64-bit persistent ID of remote IOC port."
| `-FieldDecl 0x55887c2b45b8 <line:680:3, col:13> col:13 DeviceId 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c44c6a0 <line:678:6, col:44>
|     `-ParagraphComment 0x55887c44c670 <col:6, col:44>
|       `-TextComment 0x55887c44c640 <col:6, col:44> Text=" 64-bit persistent ID of remote device."
|-TypedefDecl 0x55887c2b4668 <line:652:1, line:681:3> col:3 referenced INFINIBAND_DEVICE_PATH 'struct INFINIBAND_DEVICE_PATH':'INFINIBAND_DEVICE_PATH'
| `-ElaboratedType 0x55887c2b4610 'struct INFINIBAND_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2b4210 'INFINIBAND_DEVICE_PATH'
|     `-Record 0x55887c2b4190 ''
|-RecordDecl 0x55887c2b4700 <line:693:9, line:727:1> line:693:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2b47a0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2b4808 <line:694:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2b4898 <line:698:3, col:31> col:31 Reserved 'UINT32':'unsigned int'
| | `-FullComment 0x55887c44c770 <line:696:6, col:15>
| |   `-ParagraphComment 0x55887c44c740 <col:6, col:15>
| |     `-TextComment 0x55887c44c710 <col:6, col:15> Text=" Reserved."
| |-FieldDecl 0x55887c2b4928 <line:703:3, col:31> col:31 BaudRate 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c44c860 <line:700:6, line:701:61>
| |   `-ParagraphComment 0x55887c44c830 <line:700:6, line:701:61>
| |     |-TextComment 0x55887c44c7e0 <line:700:6, col:67> Text=" The baud rate setting for the UART style device. A value of 0"
| |     `-TextComment 0x55887c44c800 <line:701:6, col:61> Text=" means that the device's default baud rate will be used."
| |-FieldDecl 0x55887c2b49b8 <line:708:3, col:31> col:31 DataBits 'UINT8':'unsigned char'
| | `-FullComment 0x55887c44c950 <line:705:6, line:706:76>
| |   `-ParagraphComment 0x55887c44c920 <line:705:6, line:706:76>
| |     |-TextComment 0x55887c44c8d0 <line:705:6, col:64> Text=" The number of data bits for the UART style device. A value"
| |     `-TextComment 0x55887c44c8f0 <line:706:6, col:76> Text=" of 0 means that the device's default number of data bits will be used."
| |-FieldDecl 0x55887c2b4a48 <line:718:3, col:12> col:12 Parity 'UINT8':'unsigned char'
| | `-FullComment 0x55887c44cb10 <line:710:6, line:716:33>
| |   `-ParagraphComment 0x55887c44cae0 <line:710:6, line:716:33>
| |     |-TextComment 0x55887c44c9c0 <line:710:6, col:51> Text=" The parity setting for the UART style device."
| |     |-TextComment 0x55887c44c9e0 <line:711:6, col:35> Text=" Parity 0x00 - Default Parity."
| |     |-TextComment 0x55887c44ca00 <line:712:6, col:30> Text=" Parity 0x01 - No Parity."
| |     |-TextComment 0x55887c44ca20 <line:713:6, col:32> Text=" Parity 0x02 - Even Parity."
| |     |-TextComment 0x55887c44ca40 <line:714:6, col:31> Text=" Parity 0x03 - Odd Parity."
| |     |-TextComment 0x55887c44ca60 <line:715:6, col:32> Text=" Parity 0x04 - Mark Parity."
| |     `-TextComment 0x55887c44ca80 <line:716:6, col:33> Text=" Parity 0x05 - Space Parity."
| `-FieldDecl 0x55887c2b4ad8 <line:726:3, col:12> col:12 StopBits 'UINT8':'unsigned char'
|   `-FullComment 0x55887c44cc80 <line:720:6, line:724:35>
|     `-ParagraphComment 0x55887c44cc50 <line:720:6, line:724:35>
|       |-TextComment 0x55887c44cb80 <line:720:6, col:56> Text=" The number of stop bits for the UART style device."
|       |-TextComment 0x55887c44cba0 <line:721:6, col:41> Text=" Stop Bits 0x00 - Default Stop Bits."
|       |-TextComment 0x55887c44cbc0 <line:722:6, col:34> Text=" Stop Bits 0x01 - 1 Stop Bit."
|       |-TextComment 0x55887c44cbe0 <line:723:6, col:37> Text=" Stop Bits 0x02 - 1.5 Stop Bits."
|       `-TextComment 0x55887c44cc00 <line:724:6, col:35> Text=" Stop Bits 0x03 - 2 Stop Bits."
|-TypedefDecl 0x55887c2b4b88 <line:693:1, line:727:3> col:3 referenced UART_DEVICE_PATH 'struct UART_DEVICE_PATH':'UART_DEVICE_PATH'
| `-ElaboratedType 0x55887c2b4b30 'struct UART_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2b4780 'UART_DEVICE_PATH'
|     `-Record 0x55887c2b4700 ''
|-RecordDecl 0x55887c2b4c20 <line:733:9, line:739:1> line:733:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2b4cc0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2b4d28 <line:734:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2b4db8 <line:738:3, col:31> col:31 Uuid 'EFI_GUID':'GUID'
|   `-FullComment 0x55887c44cd50 <line:736:6, col:45>
|     `-ParagraphComment 0x55887c44cd20 <col:6, col:45>
|       `-TextComment 0x55887c44ccf0 <col:6, col:45> Text=" Namespace unique label identifier UUID."
|-TypedefDecl 0x55887c2b4e68 <line:733:1, line:739:3> col:3 NVDIMM_NAMESPACE_DEVICE_PATH 'struct NVDIMM_NAMESPACE_DEVICE_PATH':'NVDIMM_NAMESPACE_DEVICE_PATH'
| `-ElaboratedType 0x55887c2b4e10 'struct NVDIMM_NAMESPACE_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2b4ca0 'NVDIMM_NAMESPACE_DEVICE_PATH'
|     `-Record 0x55887c2b4c20 ''
|-TypedefDecl 0x55887c2b4f10 <line:745:1, col:28> col:28 VENDOR_DEFINED_DEVICE_PATH 'VENDOR_DEVICE_PATH':'VENDOR_DEVICE_PATH'
| `-TypedefType 0x55887c2b4ee0 'VENDOR_DEVICE_PATH' sugar
|   |-Typedef 0x55887c2a6f98 'VENDOR_DEVICE_PATH'
|   `-ElaboratedType 0x55887c2a6f40 'struct VENDOR_DEVICE_PATH' sugar
|     `-RecordType 0x55887c2a6da0 'VENDOR_DEVICE_PATH'
|       `-Record 0x55887c2a6d20 ''
|-RecordDecl 0x55887c2b4f98 <line:756:9, line:769:1> line:756:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2b5040 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c44ce40 <line:753:4, line:754:43>
| | `-ParagraphComment 0x55887c44ce10 <line:753:4, line:754:43>
| |   |-TextComment 0x55887c44cdc0 <line:753:4, col:78> Text=" A new device path node is defined to declare flow control characteristics."
| |   `-TextComment 0x55887c44cde0 <line:754:4, col:43> Text=" UART Flow Control Messaging Device Path"
| |-FieldDecl 0x55887c2b50a8 <line:757:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2b5138 <line:761:3, col:31> col:31 Guid 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c44cf10 <line:759:6, col:51>
| |   `-ParagraphComment 0x55887c44cee0 <col:6, col:51>
| |     `-TextComment 0x55887c44ceb0 <col:6, col:51> Text=" DEVICE_PATH_MESSAGING_UART_FLOW_CONTROL GUID."
| `-FieldDecl 0x55887c2b51c8 <line:768:3, col:31> col:31 FlowControlMap 'UINT32':'unsigned int'
|   `-FullComment 0x55887c44d050 <line:763:6, line:766:48>
|     `-ParagraphComment 0x55887c44d020 <line:763:6, line:766:48>
|       |-TextComment 0x55887c44cf80 <line:763:6, col:45> Text=" Bitmap of supported flow control types."
|       |-TextComment 0x55887c44cfa0 <line:764:6, col:48> Text=" Bit 0 set indicates hardware flow control."
|       |-TextComment 0x55887c44cfc0 <line:765:6, col:48> Text=" Bit 1 set indicates Xon/Xoff flow control."
|       `-TextComment 0x55887c44cfe0 <line:766:6, col:48> Text=" All other bits are reserved and are clear."
|-TypedefDecl 0x55887c2b5278 <line:756:1, line:769:3> col:3 referenced UART_FLOW_CONTROL_DEVICE_PATH 'struct UART_FLOW_CONTROL_DEVICE_PATH':'UART_FLOW_CONTROL_DEVICE_PATH'
| |-ElaboratedType 0x55887c2b5220 'struct UART_FLOW_CONTROL_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2b5020 'UART_FLOW_CONTROL_DEVICE_PATH'
| |   `-Record 0x55887c2b4f98 ''
| `-FullComment 0x55887c44d140 <line:753:4, line:754:43>
|   `-ParagraphComment 0x55887c44d110 <line:753:4, line:754:43>
|     |-TextComment 0x55887c44d0c0 <line:753:4, col:78> Text=" A new device path node is defined to declare flow control characteristics."
|     `-TextComment 0x55887c44d0e0 <line:754:4, col:43> Text=" UART Flow Control Messaging Device Path"
|-RecordDecl 0x55887c2b5310 <line:778:9, line:804:1> line:778:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2b53b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c44d210 <line:776:4, col:43>
| | `-ParagraphComment 0x55887c44d1e0 <col:4, col:43>
| |   `-TextComment 0x55887c44d1b0 <col:4, col:43> Text=" Serial Attached SCSI (SAS) Device Path."
| |-FieldDecl 0x55887c2b5418 <line:779:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2b54a8 <line:783:3, col:31> col:31 Guid 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c44d2e0 <line:781:6, col:37>
| |   `-ParagraphComment 0x55887c44d2b0 <col:6, col:37>
| |     `-TextComment 0x55887c44d280 <col:6, col:37> Text=" DEVICE_PATH_MESSAGING_SAS GUID."
| |-FieldDecl 0x55887c2b9ec0 <line:787:3, col:31> col:31 Reserved 'UINT32':'unsigned int'
| | `-FullComment 0x55887c44d3b0 <line:785:6, col:30>
| |   `-ParagraphComment 0x55887c44d380 <col:6, col:30>
| |     `-TextComment 0x55887c44d350 <col:6, col:30> Text=" Reserved for future use."
| |-FieldDecl 0x55887c2b9f48 <line:791:3, col:31> col:31 SasAddress 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c44d480 <line:789:6, col:50>
| |   `-ParagraphComment 0x55887c44d450 <col:6, col:50>
| |     `-TextComment 0x55887c44d420 <col:6, col:50> Text=" SAS Address for Serial Attached SCSI Target."
| |-FieldDecl 0x55887c2b9fd8 <line:795:3, col:31> col:31 Lun 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c44d550 <line:793:6, col:30>
| |   `-ParagraphComment 0x55887c44d520 <col:6, col:30>
| |     `-TextComment 0x55887c44d4f0 <col:6, col:30> Text=" SAS Logical Unit Number."
| |-FieldDecl 0x55887c2ba068 <line:799:3, col:31> col:31 DeviceTopology 'UINT16':'unsigned short'
| | `-FullComment 0x55887c44d620 <line:797:6, col:61>
| |   `-ParagraphComment 0x55887c44d5f0 <col:6, col:61>
| |     `-TextComment 0x55887c44d5c0 <col:6, col:61> Text=" More Information about the device and its interconnect."
| `-FieldDecl 0x55887c2ba0f8 <line:803:3, col:31> col:31 RelativeTargetPort 'UINT16':'unsigned short'
|   `-FullComment 0x55887c44d6f0 <line:801:6, col:33>
|     `-ParagraphComment 0x55887c44d6c0 <col:6, col:33>
|       `-TextComment 0x55887c44d690 <col:6, col:33> Text=" Relative Target Port (RTP)."
|-TypedefDecl 0x55887c2ba1a8 <line:778:1, line:804:3> col:3 referenced SAS_DEVICE_PATH 'struct SAS_DEVICE_PATH':'SAS_DEVICE_PATH'
| |-ElaboratedType 0x55887c2ba150 'struct SAS_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2b5390 'SAS_DEVICE_PATH'
| |   `-Record 0x55887c2b5310 ''
| `-FullComment 0x55887c44d7c0 <line:776:4, col:43>
|   `-ParagraphComment 0x55887c44d790 <col:4, col:43>
|     `-TextComment 0x55887c44d760 <col:4, col:43> Text=" Serial Attached SCSI (SAS) Device Path."
|-RecordDecl 0x55887c2ba240 <line:810:9, line:828:1> line:810:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2ba2e0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2ba348 <line:811:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2ba428 <line:815:3, col:43> col:31 SasAddress 'UINT8[8]'
| | `-FullComment 0x55887c44d890 <line:813:6, col:75>
| |   `-ParagraphComment 0x55887c44d860 <col:6, col:75>
| |     `-TextComment 0x55887c44d830 <col:6, col:75> Text=" 8-byte array of the SAS Address for Serial Attached SCSI Target Port."
| |-FieldDecl 0x55887c2ba508 <line:819:3, col:36> col:31 Lun 'UINT8[8]'
| | `-FullComment 0x55887c44d960 <line:817:6, col:50>
| |   `-ParagraphComment 0x55887c44d930 <col:6, col:50>
| |     `-TextComment 0x55887c44d900 <col:6, col:50> Text=" 8-byte array of the SAS Logical Unit Number."
| |-FieldDecl 0x55887c2ba598 <line:823:3, col:31> col:31 DeviceTopology 'UINT16':'unsigned short'
| | `-FullComment 0x55887c44da30 <line:821:6, col:61>
| |   `-ParagraphComment 0x55887c44da00 <col:6, col:61>
| |     `-TextComment 0x55887c44d9d0 <col:6, col:61> Text=" More Information about the device and its interconnect."
| `-FieldDecl 0x55887c2ba628 <line:827:3, col:31> col:31 RelativeTargetPort 'UINT16':'unsigned short'
|   `-FullComment 0x55887c44db00 <line:825:6, col:33>
|     `-ParagraphComment 0x55887c44dad0 <col:6, col:33>
|       `-TextComment 0x55887c44daa0 <col:6, col:33> Text=" Relative Target Port (RTP)."
|-TypedefDecl 0x55887c2ba6d8 <line:810:1, line:828:3> col:3 referenced SASEX_DEVICE_PATH 'struct SASEX_DEVICE_PATH':'SASEX_DEVICE_PATH'
| `-ElaboratedType 0x55887c2ba680 'struct SASEX_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2ba2c0 'SASEX_DEVICE_PATH'
|     `-Record 0x55887c2ba240 ''
|-RecordDecl 0x55887c2ba770 <line:834:9, line:838:1> line:834:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2ba810 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2ba878 <line:835:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2ba8d8 <line:836:3, col:31> col:31 NamespaceId 'UINT32':'unsigned int'
| `-FieldDecl 0x55887c2ba938 <line:837:3, col:31> col:31 NamespaceUuid 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c2ba9e8 <line:834:1, line:838:3> col:3 referenced NVME_NAMESPACE_DEVICE_PATH 'struct NVME_NAMESPACE_DEVICE_PATH':'NVME_NAMESPACE_DEVICE_PATH'
| `-ElaboratedType 0x55887c2ba990 'struct NVME_NAMESPACE_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2ba7f0 'NVME_NAMESPACE_DEVICE_PATH'
|     `-Record 0x55887c2ba770 ''
|-RecordDecl 0x55887c2baa80 <line:844:9, line:854:1> line:844:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2bab20 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2bab88 <line:845:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2bac18 <line:849:3, col:31> col:31 IsIPv6 'UINT8':'unsigned char'
| | `-FullComment 0x55887c44dbd0 <line:847:6, col:63>
| |   `-ParagraphComment 0x55887c44dba0 <col:6, col:63>
| |     `-TextComment 0x55887c44db70 <col:6, col:63> Text=" Indicates the DNS server address is IPv4 or IPv6 address."
| `-FieldDecl 0x55887c2bad38 <line:853:3, col:43> col:31 DnsServerIp 'EFI_IP_ADDRESS[]'
|   `-FullComment 0x55887c44dca0 <line:851:6, col:41>
|     `-ParagraphComment 0x55887c44dc70 <col:6, col:41>
|       `-TextComment 0x55887c44dc40 <col:6, col:41> Text=" Instance of the DNS server address."
|-TypedefDecl 0x55887c2bade8 <line:844:1, line:854:3> col:3 referenced DNS_DEVICE_PATH 'struct DNS_DEVICE_PATH':'DNS_DEVICE_PATH'
| `-ElaboratedType 0x55887c2bad90 'struct DNS_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2bab00 'DNS_DEVICE_PATH'
|     `-Record 0x55887c2baa80 ''
|-RecordDecl 0x55887c2bae80 <line:860:9, line:866:1> line:860:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2baf20 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2baf88 <line:861:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2bb088 <line:865:3, col:35> col:31 Uri 'CHAR8[]'
|   `-FullComment 0x55887c44dd70 <line:863:6, col:47>
|     `-ParagraphComment 0x55887c44dd40 <col:6, col:47>
|       `-TextComment 0x55887c44dd10 <col:6, col:47> Text=" Instance of the URI pursuant to RFC 3986."
|-TypedefDecl 0x55887c2bb138 <line:860:1, line:866:3> col:3 referenced URI_DEVICE_PATH 'struct URI_DEVICE_PATH':'URI_DEVICE_PATH'
| `-ElaboratedType 0x55887c2bb0e0 'struct URI_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2baf00 'URI_DEVICE_PATH'
|     `-Record 0x55887c2bae80 ''
|-RecordDecl 0x55887c2bb1d0 <line:872:9, line:882:1> line:872:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2bb270 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2bb2d8 <line:873:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2bb368 <line:877:3, col:31> col:31 Pun 'UINT8':'unsigned char'
| | `-FullComment 0x55887c44de40 <line:875:6, col:37>
| |   `-ParagraphComment 0x55887c44de10 <col:6, col:37>
| |     `-TextComment 0x55887c44dde0 <col:6, col:37> Text=" Target ID on the UFS bus (PUN)."
| `-FieldDecl 0x55887c2bb3f8 <line:881:3, col:31> col:31 Lun 'UINT8':'unsigned char'
|   `-FullComment 0x55887c44df10 <line:879:6, col:32>
|     `-ParagraphComment 0x55887c44dee0 <col:6, col:32>
|       `-TextComment 0x55887c44deb0 <col:6, col:32> Text=" Logical Unit Number (LUN)."
|-TypedefDecl 0x55887c2bb4a8 <line:872:1, line:882:3> col:3 referenced UFS_DEVICE_PATH 'struct UFS_DEVICE_PATH':'UFS_DEVICE_PATH'
| `-ElaboratedType 0x55887c2bb450 'struct UFS_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2bb250 'UFS_DEVICE_PATH'
|     `-Record 0x55887c2bb1d0 ''
|-RecordDecl 0x55887c2bb540 <line:888:9, line:891:1> line:888:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2bb5e0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2bb648 <line:889:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2bb6a8 <line:890:3, col:31> col:31 SlotNumber 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c2bb758 <line:888:1, line:891:3> col:3 referenced SD_DEVICE_PATH 'struct SD_DEVICE_PATH':'SD_DEVICE_PATH'
| `-ElaboratedType 0x55887c2bb700 'struct SD_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2bb5c0 'SD_DEVICE_PATH'
|     `-Record 0x55887c2bb540 ''
|-RecordDecl 0x55887c2bb7f0 <line:897:9, line:900:1> line:897:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2bb890 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2bb8f8 <line:898:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2bb958 <line:899:3, col:31> col:31 SlotNumber 'UINT8':'unsigned char'
|-TypedefDecl 0x55887c2bba08 <line:897:1, line:900:3> col:3 referenced EMMC_DEVICE_PATH 'struct EMMC_DEVICE_PATH':'EMMC_DEVICE_PATH'
| `-ElaboratedType 0x55887c2bb9b0 'struct EMMC_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2bb870 'EMMC_DEVICE_PATH'
|     `-Record 0x55887c2bb7f0 ''
|-RecordDecl 0x55887c2bbaa0 <line:906:9, line:930:1> line:906:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2bbb40 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2bbba8 <line:907:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2bbc38 <line:911:3, col:31> col:31 NetworkProtocol 'UINT16':'unsigned short'
| | `-FullComment 0x55887c44dfe0 <line:909:6, col:48>
| |   `-ParagraphComment 0x55887c44dfb0 <col:6, col:48>
| |     `-TextComment 0x55887c44df80 <col:6, col:48> Text=" Network Protocol (0 = TCP, 1+ = reserved)."
| |-FieldDecl 0x55887c2bbcc8 <line:915:3, col:31> col:31 LoginOption 'UINT16':'unsigned short'
| | `-FullComment 0x55887c44e0b0 <line:913:6, col:26>
| |   `-ParagraphComment 0x55887c44e080 <col:6, col:26>
| |     `-TextComment 0x55887c44e050 <col:6, col:26> Text=" iSCSI Login Options."
| |-FieldDecl 0x55887c2bbd58 <line:919:3, col:31> col:31 Lun 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c44e180 <line:917:6, col:32>
| |   `-ParagraphComment 0x55887c44e150 <col:6, col:32>
| |     `-TextComment 0x55887c44e120 <col:6, col:32> Text=" iSCSI Logical Unit Number."
| `-FieldDecl 0x55887c2bbde8 <line:924:3, col:31> col:31 TargetPortalGroupTag 'UINT16':'unsigned short'
|   `-FullComment 0x55887c44e270 <line:921:6, line:922:34>
|     `-ParagraphComment 0x55887c44e240 <line:921:6, line:922:34>
|       |-TextComment 0x55887c44e1f0 <line:921:6, col:57> Text=" iSCSI Target Portal group tag the initiator intends"
|       `-TextComment 0x55887c44e210 <line:922:6, col:34> Text=" to establish a session with."
|-TypedefDecl 0x55887c2bc570 <line:906:1, line:930:3> col:3 referenced ISCSI_DEVICE_PATH 'struct ISCSI_DEVICE_PATH':'ISCSI_DEVICE_PATH'
| `-ElaboratedType 0x55887c2bbe70 'struct ISCSI_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2bbb20 'ISCSI_DEVICE_PATH'
|     `-Record 0x55887c2bbaa0 ''
|-RecordDecl 0x55887c2bc610 <line:945:9, line:951:1> line:945:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2bc6b0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2bc718 <line:946:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2bc7a8 <line:950:3, col:31> col:31 VlanId 'UINT16':'unsigned short'
|   `-FullComment 0x55887c44e340 <line:948:6, col:31>
|     `-ParagraphComment 0x55887c44e310 <col:6, col:31>
|       `-TextComment 0x55887c44e2e0 <col:6, col:31> Text=" VLAN identifier (0-4094)."
|-TypedefDecl 0x55887c2bc858 <line:945:1, line:951:3> col:3 referenced VLAN_DEVICE_PATH 'struct VLAN_DEVICE_PATH':'VLAN_DEVICE_PATH'
| `-ElaboratedType 0x55887c2bc800 'struct VLAN_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2bc690 'VLAN_DEVICE_PATH'
|     `-Record 0x55887c2bc610 ''
|-RecordDecl 0x55887c2bc8f0 <line:957:9, line:963:1> line:957:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2bc990 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2bc9f8 <line:958:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2bcab0 <line:962:3, col:31> col:31 BD_ADDR 'BLUETOOTH_ADDRESS':'BLUETOOTH_ADDRESS'
|   `-FullComment 0x55887c44e410 <line:960:6, col:37>
|     `-ParagraphComment 0x55887c44e3e0 <col:6, col:37>
|       `-TextComment 0x55887c44e3b0 <col:6, col:37> Text=" 48bit Bluetooth device address."
|-TypedefDecl 0x55887c2bcb58 <line:957:1, line:963:3> col:3 referenced BLUETOOTH_DEVICE_PATH 'struct BLUETOOTH_DEVICE_PATH':'BLUETOOTH_DEVICE_PATH'
| `-ElaboratedType 0x55887c2bcb00 'struct BLUETOOTH_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2bc970 'BLUETOOTH_DEVICE_PATH'
|     `-Record 0x55887c2bc8f0 ''
|-RecordDecl 0x55887c2bcbf0 <line:969:9, line:975:1> line:969:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2bcc90 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2bccf8 <line:970:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2bcdd8 <line:974:3, col:38> col:31 SSId 'UINT8[32]'
|   `-FullComment 0x55887c44e4e0 <line:972:6, col:54>
|     `-ParagraphComment 0x55887c44e4b0 <col:6, col:54>
|       `-TextComment 0x55887c44e480 <col:6, col:54> Text=" Service set identifier. A 32-byte octets string."
|-TypedefDecl 0x55887c2bce88 <line:969:1, line:975:3> col:3 referenced WIFI_DEVICE_PATH 'struct WIFI_DEVICE_PATH':'WIFI_DEVICE_PATH'
| `-ElaboratedType 0x55887c2bce30 'struct WIFI_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2bcc70 'WIFI_DEVICE_PATH'
|     `-Record 0x55887c2bcbf0 ''
|-RecordDecl 0x55887c2bcf20 <line:981:9, line:984:1> line:981:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2bcfc0 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2bd028 <line:982:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2bd0b0 <line:983:3, col:31> col:31 Address 'BLUETOOTH_LE_ADDRESS':'BLUETOOTH_LE_ADDRESS'
|-TypedefDecl 0x55887c2bd158 <line:981:1, line:984:3> col:3 BLUETOOTH_LE_DEVICE_PATH 'struct BLUETOOTH_LE_DEVICE_PATH':'BLUETOOTH_LE_DEVICE_PATH'
| `-ElaboratedType 0x55887c2bd100 'struct BLUETOOTH_LE_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2bcfa0 'BLUETOOTH_LE_DEVICE_PATH'
|     `-Record 0x55887c2bcf20 ''
|-RecordDecl 0x55887c2bd220 <line:999:9, line:1037:1> line:999:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2bd2c0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c44e5b0 <line:997:4, col:86>
| | `-ParagraphComment 0x55887c44e580 <col:4, col:86>
| |   `-TextComment 0x55887c44e550 <col:4, col:86> Text=" The Hard Drive Media Device Path is used to represent a partition on a hard drive."
| |-FieldDecl 0x55887c2bd328 <line:1000:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2bd3b8 <line:1007:3, col:31> col:31 PartitionNumber 'UINT32':'unsigned int'
| | `-FullComment 0x55887c44e720 <line:1002:6, line:1005:78>
| |   `-ParagraphComment 0x55887c44e6f0 <line:1002:6, line:1005:78>
| |     |-TextComment 0x55887c44e650 <line:1002:6, col:70> Text=" Describes the entry in a partition table, starting with entry 1."
| |     |-TextComment 0x55887c44e670 <line:1003:6, col:63> Text=" Partition number zero represents the entire device. Valid"
| |     |-TextComment 0x55887c44e690 <line:1004:6, col:61> Text=" partition numbers for a MBR partition are [1, 4]. Valid"
| |     `-TextComment 0x55887c44e6b0 <line:1005:6, col:78> Text=" partition numbers for a GPT partition are [1, NumberOfPartitionEntries]."
| |-FieldDecl 0x55887c2bd448 <line:1011:3, col:31> col:31 PartitionStart 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c44e7f0 <line:1009:6, col:54>
| |   `-ParagraphComment 0x55887c44e7c0 <col:6, col:54>
| |     `-TextComment 0x55887c44e790 <col:6, col:54> Text=" Starting LBA of the partition on the hard drive."
| |-FieldDecl 0x55887c2bd4d8 <line:1015:3, col:31> col:31 PartitionSize 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c44e8c0 <line:1013:6, col:55>
| |   `-ParagraphComment 0x55887c44e890 <col:6, col:55>
| |     `-TextComment 0x55887c44e860 <col:6, col:55> Text=" Size of the partition in units of Logical Blocks."
| |-FieldDecl 0x55887c2bd5b8 <line:1023:3, col:43> col:31 Signature 'UINT8[16]'
| | `-FullComment 0x55887c44ea30 <line:1017:6, line:1021:69>
| |   `-ParagraphComment 0x55887c44ea00 <line:1017:6, line:1021:69>
| |     |-TextComment 0x55887c44e930 <line:1017:6, col:41> Text=" Signature unique to this partition:"
| |     |-TextComment 0x55887c44e950 <line:1018:6, col:76> Text=" If SignatureType is 0, this field has to be initialized with 16 zeros."
| |     |-TextComment 0x55887c44e970 <line:1019:6, col:92> Text=" If SignatureType is 1, the MBR signature is stored in the first 4 bytes of this field."
| |     |-TextComment 0x55887c44e990 <line:1020:6, col:52> Text=" The other 12 bytes are initialized with zeros."
| |     `-TextComment 0x55887c44e9b0 <line:1021:6, col:69> Text=" If SignatureType is 2, this field contains a 16 byte signature."
| |-FieldDecl 0x55887c2bd648 <line:1029:3, col:31> col:31 MBRType 'UINT8':'unsigned char'
| | `-FullComment 0x55887c44eb50 <line:1025:6, line:1027:34>
| |   `-ParagraphComment 0x55887c44eb20 <line:1025:6, line:1027:34>
| |     |-TextComment 0x55887c44eaa0 <line:1025:6, col:49> Text=" Partition Format: (Unused values reserved)."
| |     |-TextComment 0x55887c44eac0 <line:1026:6, col:41> Text=" 0x01 - PC-AT compatible legacy MBR."
| |     `-TextComment 0x55887c44eae0 <line:1027:6, col:34> Text=" 0x02 - GUID Partition Table."
| `-FieldDecl 0x55887c2bd6d8 <line:1036:3, col:31> col:31 SignatureType 'UINT8':'unsigned char'
|   `-FullComment 0x55887c44ec90 <line:1031:6, line:1034:28>
|     `-ParagraphComment 0x55887c44ec60 <line:1031:6, line:1034:28>
|       |-TextComment 0x55887c44ebc0 <line:1031:6, col:55> Text=" Type of Disk Signature: (Unused values reserved)."
|       |-TextComment 0x55887c44ebe0 <line:1032:6, col:31> Text=" 0x00 - No Disk Signature."
|       |-TextComment 0x55887c44ec00 <line:1033:6, col:70> Text=" 0x01 - 32-bit signature from address 0x1b8 of the type 0x01 MBR."
|       `-TextComment 0x55887c44ec20 <line:1034:6, col:28> Text=" 0x02 - GUID signature."
|-TypedefDecl 0x55887c2bd788 <line:999:1, line:1037:3> col:3 referenced HARDDRIVE_DEVICE_PATH 'struct HARDDRIVE_DEVICE_PATH':'HARDDRIVE_DEVICE_PATH'
| |-ElaboratedType 0x55887c2bd730 'struct HARDDRIVE_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2bd2a0 'HARDDRIVE_DEVICE_PATH'
| |   `-Record 0x55887c2bd220 ''
| `-FullComment 0x55887c44ed60 <line:997:4, col:86>
|   `-ParagraphComment 0x55887c44ed30 <col:4, col:86>
|     `-TextComment 0x55887c44ed00 <col:4, col:86> Text=" The Hard Drive Media Device Path is used to represent a partition on a hard drive."
|-RecordDecl 0x55887c2bd850 <line:1054:9, line:1068:1> line:1054:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2bd8f0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c44ee30 <line:1052:4, col:94>
| | `-ParagraphComment 0x55887c44ee00 <col:4, col:94>
| |   `-TextComment 0x55887c44edd0 <col:4, col:94> Text=" The CD-ROM Media Device Path is used to define a system partition that exists on a CD-ROM."
| |-FieldDecl 0x55887c2bd958 <line:1055:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2bd9e8 <line:1059:3, col:31> col:31 BootEntry 'UINT32':'unsigned int'
| | `-FullComment 0x55887c44ef00 <line:1057:6, col:92>
| |   `-ParagraphComment 0x55887c44eed0 <col:6, col:92>
| |     `-TextComment 0x55887c44eea0 <col:6, col:92> Text=" Boot Entry number from the Boot Catalog. The Initial/Default entry is defined as zero."
| |-FieldDecl 0x55887c2bda78 <line:1063:3, col:31> col:31 PartitionStart 'UINT64':'unsigned long long'
| | `-FullComment 0x55887c44efd0 <line:1061:6, col:97>
| |   `-ParagraphComment 0x55887c44efa0 <col:6, col:97>
| |     `-TextComment 0x55887c44ef70 <col:6, col:97> Text=" Starting RBA of the partition on the medium. CD-ROMs use Relative logical Block Addressing."
| `-FieldDecl 0x55887c2bdb08 <line:1067:3, col:31> col:31 PartitionSize 'UINT64':'unsigned long long'
|   `-FullComment 0x55887c44f0a0 <line:1065:6, col:68>
|     `-ParagraphComment 0x55887c44f070 <col:6, col:68>
|       `-TextComment 0x55887c44f040 <col:6, col:68> Text=" Size of the partition in units of Blocks, also called Sectors."
|-TypedefDecl 0x55887c2bdbb8 <line:1054:1, line:1068:3> col:3 referenced CDROM_DEVICE_PATH 'struct CDROM_DEVICE_PATH':'CDROM_DEVICE_PATH'
| |-ElaboratedType 0x55887c2bdb60 'struct CDROM_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2bd8d0 'CDROM_DEVICE_PATH'
| |   `-Record 0x55887c2bd850 ''
| `-FullComment 0x55887c44f170 <line:1052:4, col:94>
|   `-ParagraphComment 0x55887c44f140 <col:4, col:94>
|     `-TextComment 0x55887c44f110 <col:4, col:94> Text=" The CD-ROM Media Device Path is used to define a system partition that exists on a CD-ROM."
|-RecordDecl 0x55887c2bdc80 <line:1079:9, line:1085:1> line:1079:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2bdd20 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2bdd88 <line:1080:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2bde68 <line:1084:3, col:41> col:31 PathName 'CHAR16[1]'
|   `-FullComment 0x55887c44f240 <line:1082:6, col:71>
|     `-ParagraphComment 0x55887c44f210 <col:6, col:71>
|       `-TextComment 0x55887c44f1e0 <col:6, col:71> Text=" A NULL-terminated Path string including directory and file names."
|-TypedefDecl 0x55887c2bdf18 <line:1079:1, line:1085:3> col:3 referenced FILEPATH_DEVICE_PATH 'struct FILEPATH_DEVICE_PATH':'FILEPATH_DEVICE_PATH'
| `-ElaboratedType 0x55887c2bdec0 'struct FILEPATH_DEVICE_PATH' sugar
|   `-RecordType 0x55887c2bdd00 'FILEPATH_DEVICE_PATH'
|     `-Record 0x55887c2bdc80 ''
|-RecordDecl 0x55887c2bdfe0 <line:1099:9, line:1105:1> line:1099:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2be080 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c44f360 <line:1095:4, line:1097:60>
| | `-ParagraphComment 0x55887c44f330 <line:1095:4, line:1097:60>
| |   |-TextComment 0x55887c44f2b0 <line:1095:4, col:79> Text=" The Media Protocol Device Path is used to denote the protocol that is being"
| |   |-TextComment 0x55887c44f2d0 <line:1096:4, col:64> Text=" used in a device path at the location of the path specified."
| |   `-TextComment 0x55887c44f2f0 <line:1097:4, col:60> Text=" Many protocols are inherent to the style of device path."
| |-FieldDecl 0x55887c2be0e8 <line:1100:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2be178 <line:1104:3, col:31> col:31 Protocol 'EFI_GUID':'GUID'
|   `-FullComment 0x55887c44f430 <line:1102:6, col:29>
|     `-ParagraphComment 0x55887c44f400 <col:6, col:29>
|       `-TextComment 0x55887c44f3d0 <col:6, col:29> Text=" The ID of the protocol."
|-TypedefDecl 0x55887c2be228 <line:1099:1, line:1105:3> col:3 referenced MEDIA_PROTOCOL_DEVICE_PATH 'struct MEDIA_PROTOCOL_DEVICE_PATH':'MEDIA_PROTOCOL_DEVICE_PATH'
| |-ElaboratedType 0x55887c2be1d0 'struct MEDIA_PROTOCOL_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2be060 'MEDIA_PROTOCOL_DEVICE_PATH'
| |   `-Record 0x55887c2bdfe0 ''
| `-FullComment 0x55887c44f550 <line:1095:4, line:1097:60>
|   `-ParagraphComment 0x55887c44f520 <line:1095:4, line:1097:60>
|     |-TextComment 0x55887c44f4a0 <line:1095:4, col:79> Text=" The Media Protocol Device Path is used to denote the protocol that is being"
|     |-TextComment 0x55887c44f4c0 <line:1096:4, col:64> Text=" used in a device path at the location of the path specified."
|     `-TextComment 0x55887c44f4e0 <line:1097:4, col:60> Text=" Many protocols are inherent to the style of device path."
|-RecordDecl 0x55887c2be2f0 <line:1115:9, line:1121:1> line:1115:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2be390 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c44f620 <line:1113:4, col:111>
| | `-ParagraphComment 0x55887c44f5f0 <col:4, col:111>
| |   `-TextComment 0x55887c44f5c0 <col:4, col:111> Text=" This device path is used by systems implementing the UEFI PI Specification 1.0 to describe a firmware file."
| |-FieldDecl 0x55887c2be3f8 <line:1116:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2be488 <line:1120:3, col:31> col:31 FvFileName 'EFI_GUID':'GUID'
|   `-FullComment 0x55887c44f6f0 <line:1118:6, col:24>
|     `-ParagraphComment 0x55887c44f6c0 <col:6, col:24>
|       `-TextComment 0x55887c44f690 <col:6, col:24> Text=" Firmware file name"
|-TypedefDecl 0x55887c2beca0 <line:1115:1, line:1121:3> col:3 referenced MEDIA_FW_VOL_FILEPATH_DEVICE_PATH 'struct MEDIA_FW_VOL_FILEPATH_DEVICE_PATH':'MEDIA_FW_VOL_FILEPATH_DEVICE_PATH'
| |-ElaboratedType 0x55887c2be4e0 'struct MEDIA_FW_VOL_FILEPATH_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2be370 'MEDIA_FW_VOL_FILEPATH_DEVICE_PATH'
| |   `-Record 0x55887c2be2f0 ''
| `-FullComment 0x55887c44f7c0 <line:1113:4, col:111>
|   `-ParagraphComment 0x55887c44f790 <col:4, col:111>
|     `-TextComment 0x55887c44f760 <col:4, col:111> Text=" This device path is used by systems implementing the UEFI PI Specification 1.0 to describe a firmware file."
|-RecordDecl 0x55887c2bed70 <line:1131:9, line:1137:1> line:1131:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2bee10 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c44f890 <line:1129:4, col:113>
| | `-ParagraphComment 0x55887c44f860 <col:4, col:113>
| |   `-TextComment 0x55887c44f830 <col:4, col:113> Text=" This device path is used by systems implementing the UEFI PI Specification 1.0 to describe a firmware volume."
| |-FieldDecl 0x55887c2bee78 <line:1132:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| `-FieldDecl 0x55887c2bef08 <line:1136:3, col:31> col:31 FvName 'EFI_GUID':'GUID'
|   `-FullComment 0x55887c44f960 <line:1134:6, col:27>
|     `-ParagraphComment 0x55887c44f930 <col:6, col:27>
|       `-TextComment 0x55887c44f900 <col:6, col:27> Text=" Firmware volume name."
|-TypedefDecl 0x55887c2befb8 <line:1131:1, line:1137:3> col:3 referenced MEDIA_FW_VOL_DEVICE_PATH 'struct MEDIA_FW_VOL_DEVICE_PATH':'MEDIA_FW_VOL_DEVICE_PATH'
| |-ElaboratedType 0x55887c2bef60 'struct MEDIA_FW_VOL_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2bedf0 'MEDIA_FW_VOL_DEVICE_PATH'
| |   `-Record 0x55887c2bed70 ''
| `-FullComment 0x55887c44fa30 <line:1129:4, col:113>
|   `-ParagraphComment 0x55887c44fa00 <col:4, col:113>
|     `-TextComment 0x55887c44f9d0 <col:4, col:113> Text=" This device path is used by systems implementing the UEFI PI Specification 1.0 to describe a firmware volume."
|-RecordDecl 0x55887c2bf080 <line:1147:9, line:1152:1> line:1147:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2bf120 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c44fb00 <line:1145:4, col:56>
| | `-ParagraphComment 0x55887c44fad0 <col:4, col:56>
| |   `-TextComment 0x55887c44faa0 <col:4, col:56> Text=" Used to describe the offset range of media relative."
| |-FieldDecl 0x55887c2bf188 <line:1148:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2bf1e8 <line:1149:3, col:31> col:31 Reserved 'UINT32':'unsigned int'
| |-FieldDecl 0x55887c2bf248 <line:1150:3, col:31> col:31 StartingOffset 'UINT64':'unsigned long long'
| `-FieldDecl 0x55887c2bf2a8 <line:1151:3, col:31> col:31 EndingOffset 'UINT64':'unsigned long long'
|-TypedefDecl 0x55887c2bf358 <line:1147:1, line:1152:3> col:3 referenced MEDIA_RELATIVE_OFFSET_RANGE_DEVICE_PATH 'struct MEDIA_RELATIVE_OFFSET_RANGE_DEVICE_PATH':'MEDIA_RELATIVE_OFFSET_RANGE_DEVICE_PATH'
| |-ElaboratedType 0x55887c2bf300 'struct MEDIA_RELATIVE_OFFSET_RANGE_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2bf100 'MEDIA_RELATIVE_OFFSET_RANGE_DEVICE_PATH'
| |   `-Record 0x55887c2bf080 ''
| `-FullComment 0x55887c44fbd0 <line:1145:4, col:56>
|   `-ParagraphComment 0x55887c44fba0 <col:4, col:56>
|     `-TextComment 0x55887c44fb70 <col:4, col:56> Text=" Used to describe the offset range of media relative."
|-VarDecl 0x55887c2bf400 <line:1159:1, col:19> col:19 gEfiVirtualDiskGuid 'EFI_GUID':'GUID' extern
|-VarDecl 0x55887c2bf4a8 <line:1166:1, col:19> col:19 gEfiVirtualCdGuid 'EFI_GUID':'GUID' extern
|-VarDecl 0x55887c2bf548 <line:1173:1, col:19> col:19 gEfiPersistentVirtualDiskGuid 'EFI_GUID':'GUID' extern
|-VarDecl 0x55887c2bf5e8 <line:1180:1, col:19> col:19 gEfiPersistentVirtualCdGuid 'EFI_GUID':'GUID' extern
|-RecordDecl 0x55887c2bf6a8 <line:1190:9, line:1208:1> line:1190:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2bf750 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c44fca0 <line:1188:4, col:46>
| | `-ParagraphComment 0x55887c44fc70 <col:4, col:46>
| |   `-TextComment 0x55887c44fc40 <col:4, col:46> Text=" Used to describe the ram disk device path."
| |-FieldDecl 0x55887c2bf7b8 <line:1191:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2bf898 <line:1195:3, col:45> col:31 StartingAddr 'UINT32[2]'
| | `-FullComment 0x55887c44fd70 <line:1193:6, col:30>
| |   `-ParagraphComment 0x55887c44fd40 <col:6, col:30>
| |     `-TextComment 0x55887c44fd10 <col:6, col:30> Text=" Starting Memory Address."
| |-FieldDecl 0x55887c2bf978 <line:1199:3, col:43> col:31 EndingAddr 'UINT32[2]'
| | `-FullComment 0x55887c44fe40 <line:1197:6, col:28>
| |   `-ParagraphComment 0x55887c44fe10 <col:6, col:28>
| |     `-TextComment 0x55887c44fde0 <col:6, col:28> Text=" Ending Memory Address."
| |-FieldDecl 0x55887c2bfa08 <line:1203:3, col:31> col:31 TypeGuid 'EFI_GUID':'GUID'
| | `-FullComment 0x55887c44ff10 <line:1201:6, col:49>
| |   `-ParagraphComment 0x55887c44fee0 <col:6, col:49>
| |     `-TextComment 0x55887c44feb0 <col:6, col:49> Text=" GUID that defines the type of the RAM Disk."
| `-FieldDecl 0x55887c2bfa98 <line:1207:3, col:31> col:31 Instance 'UINT16':'unsigned short'
|   `-FullComment 0x55887c44ffe0 <line:1205:6, col:71>
|     `-ParagraphComment 0x55887c44ffb0 <col:6, col:71>
|       `-TextComment 0x55887c44ff80 <col:6, col:71> Text=" RAM Diskinstance number, if supported. The default value is zero."
|-TypedefDecl 0x55887c2bfb48 <line:1190:1, line:1208:3> col:3 referenced MEDIA_RAM_DISK_DEVICE_PATH 'struct MEDIA_RAM_DISK_DEVICE_PATH':'MEDIA_RAM_DISK_DEVICE_PATH'
| |-ElaboratedType 0x55887c2bfaf0 'struct MEDIA_RAM_DISK_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2bf730 'MEDIA_RAM_DISK_DEVICE_PATH'
| |   `-Record 0x55887c2bf6a8 ''
| `-FullComment 0x55887c4500b0 <line:1188:4, col:46>
|   `-ParagraphComment 0x55887c450080 <col:4, col:46>
|     `-TextComment 0x55887c450050 <col:4, col:46> Text=" Used to describe the ram disk device path."
|-RecordDecl 0x55887c2bfc40 <line:1223:9, line:1237:1> line:1223:9 struct definition
| |-MaxFieldAlignmentAttr 0x55887c2bfce0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c450180 <line:1221:4, col:88>
| | `-ParagraphComment 0x55887c450150 <col:4, col:88>
| |   `-TextComment 0x55887c450120 <col:4, col:88> Text=" This Device Path is used to describe the booting of non-EFI-aware operating systems."
| |-FieldDecl 0x55887c2bfd48 <line:1224:3, col:31> col:31 Header 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2bfdd8 <line:1228:3, col:31> col:31 DeviceType 'UINT16':'unsigned short'
| | `-FullComment 0x55887c450250 <line:1226:6, col:60>
| |   `-ParagraphComment 0x55887c450220 <col:6, col:60>
| |     `-TextComment 0x55887c4501f0 <col:6, col:60> Text=" Device Type as defined by the BIOS Boot Specification."
| |-FieldDecl 0x55887c2bfe68 <line:1232:3, col:31> col:31 StatusFlag 'UINT16':'unsigned short'
| | `-FullComment 0x55887c450320 <line:1230:6, col:61>
| |   `-ParagraphComment 0x55887c4502f0 <col:6, col:61>
| |     `-TextComment 0x55887c4502c0 <col:6, col:61> Text=" Status Flags as defined by the BIOS Boot Specification."
| `-FieldDecl 0x55887c2bffc8 <line:1236:3, col:39> col:31 String 'CHAR8[1]'
|   `-FullComment 0x55887c4503f0 <line:1234:6, col:76>
|     `-ParagraphComment 0x55887c4503c0 <col:6, col:76>
|       `-TextComment 0x55887c450390 <col:6, col:76> Text=" Null-terminated ASCII string that describes the boot device to a user."
|-TypedefDecl 0x55887c2c0078 <line:1223:1, line:1237:3> col:3 referenced BBS_BBS_DEVICE_PATH 'struct BBS_BBS_DEVICE_PATH':'BBS_BBS_DEVICE_PATH'
| |-ElaboratedType 0x55887c2c0020 'struct BBS_BBS_DEVICE_PATH' sugar
| | `-RecordType 0x55887c2bfcc0 'BBS_BBS_DEVICE_PATH'
| |   `-Record 0x55887c2bfc40 ''
| `-FullComment 0x55887c4504c0 <line:1221:4, col:88>
|   `-ParagraphComment 0x55887c450490 <col:4, col:88>
|     `-TextComment 0x55887c450460 <col:4, col:88> Text=" This Device Path is used to describe the booting of non-EFI-aware operating systems."
|-RecordDecl 0x55887c2c0110 <line:1254:9, line:1308:1> line:1254:9 union definition
| |-MaxFieldAlignmentAttr 0x55887c2c01b0 <<invalid sloc>> Implicit 8
| |-FullComment 0x55887c450590 <line:1252:4, col:68>
| | `-ParagraphComment 0x55887c450560 <col:4, col:68>
| |   `-TextComment 0x55887c450530 <col:4, col:68> Text=" Union of all possible Device Paths and pointers to Device Paths."
| |-FieldDecl 0x55887c2c0218 <line:1255:3, col:46> col:46 DevPath 'EFI_DEVICE_PATH_PROTOCOL':'EFI_DEVICE_PATH_PROTOCOL'
| |-FieldDecl 0x55887c2c02a0 <line:1256:3, col:46> col:46 Pci 'PCI_DEVICE_PATH':'PCI_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0320 <line:1257:3, col:46> col:46 PcCard 'PCCARD_DEVICE_PATH':'PCCARD_DEVICE_PATH'
| |-FieldDecl 0x55887c2c03a0 <line:1258:3, col:46> col:46 MemMap 'MEMMAP_DEVICE_PATH':'MEMMAP_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0400 <line:1259:3, col:46> col:46 Vendor 'VENDOR_DEVICE_PATH':'VENDOR_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0480 <line:1261:3, col:46> col:46 Controller 'CONTROLLER_DEVICE_PATH':'CONTROLLER_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0500 <line:1262:3, col:46> col:46 Bmc 'BMC_DEVICE_PATH':'BMC_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0580 <line:1263:3, col:46> col:46 Acpi 'ACPI_HID_DEVICE_PATH':'ACPI_HID_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0600 <line:1264:3, col:46> col:46 ExtendedAcpi 'ACPI_EXTENDED_HID_DEVICE_PATH':'ACPI_EXTENDED_HID_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0680 <line:1265:3, col:46> col:46 AcpiAdr 'ACPI_ADR_DEVICE_PATH':'ACPI_ADR_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0700 <line:1267:3, col:46> col:46 Atapi 'ATAPI_DEVICE_PATH':'ATAPI_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0780 <line:1268:3, col:46> col:46 Scsi 'SCSI_DEVICE_PATH':'SCSI_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0800 <line:1269:3, col:46> col:46 Iscsi 'ISCSI_DEVICE_PATH':'ISCSI_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0880 <line:1270:3, col:46> col:46 FibreChannel 'FIBRECHANNEL_DEVICE_PATH':'FIBRECHANNEL_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0900 <line:1271:3, col:46> col:46 FibreChannelEx 'FIBRECHANNELEX_DEVICE_PATH':'FIBRECHANNELEX_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0980 <line:1273:3, col:46> col:46 F1394 'F1394_DEVICE_PATH':'F1394_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0a00 <line:1274:3, col:46> col:46 Usb 'USB_DEVICE_PATH':'USB_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0a80 <line:1275:3, col:46> col:46 Sata 'SATA_DEVICE_PATH':'SATA_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0b00 <line:1276:3, col:46> col:46 UsbClass 'USB_CLASS_DEVICE_PATH':'USB_CLASS_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0b80 <line:1277:3, col:46> col:46 UsbWwid 'USB_WWID_DEVICE_PATH':'USB_WWID_DEVICE_PATH'
| |-FieldDecl 0x55887c2c0c00 <line:1278:3, col:46> col:46 LogicUnit 'DEVICE_LOGICAL_UNIT_DEVICE_PATH':'DEVICE_LOGICAL_UNIT_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3240 <line:1279:3, col:46> col:46 I2O 'I2O_DEVICE_PATH':'I2O_DEVICE_PATH'
| |-FieldDecl 0x55887c2c32c0 <line:1280:3, col:46> col:46 MacAddr 'MAC_ADDR_DEVICE_PATH':'MAC_ADDR_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3340 <line:1281:3, col:46> col:46 Ipv4 'IPv4_DEVICE_PATH':'IPv4_DEVICE_PATH'
| |-FieldDecl 0x55887c2c33c0 <line:1282:3, col:46> col:46 Ipv6 'IPv6_DEVICE_PATH':'IPv6_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3440 <line:1283:3, col:46> col:46 Vlan 'VLAN_DEVICE_PATH':'VLAN_DEVICE_PATH'
| |-FieldDecl 0x55887c2c34c0 <line:1284:3, col:46> col:46 InfiniBand 'INFINIBAND_DEVICE_PATH':'INFINIBAND_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3540 <line:1285:3, col:46> col:46 Uart 'UART_DEVICE_PATH':'UART_DEVICE_PATH'
| |-FieldDecl 0x55887c2c35c0 <line:1286:3, col:46> col:46 UartFlowControl 'UART_FLOW_CONTROL_DEVICE_PATH':'UART_FLOW_CONTROL_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3640 <line:1287:3, col:46> col:46 Sas 'SAS_DEVICE_PATH':'SAS_DEVICE_PATH'
| |-FieldDecl 0x55887c2c36c0 <line:1288:3, col:46> col:46 SasEx 'SASEX_DEVICE_PATH':'SASEX_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3740 <line:1289:3, col:46> col:46 NvmeNamespace 'NVME_NAMESPACE_DEVICE_PATH':'NVME_NAMESPACE_DEVICE_PATH'
| |-FieldDecl 0x55887c2c37c0 <line:1290:3, col:46> col:46 Dns 'DNS_DEVICE_PATH':'DNS_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3840 <line:1291:3, col:46> col:46 Uri 'URI_DEVICE_PATH':'URI_DEVICE_PATH'
| |-FieldDecl 0x55887c2c38c0 <line:1292:3, col:46> col:46 Bluetooth 'BLUETOOTH_DEVICE_PATH':'BLUETOOTH_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3940 <line:1293:3, col:46> col:46 WiFi 'WIFI_DEVICE_PATH':'WIFI_DEVICE_PATH'
| |-FieldDecl 0x55887c2c39c0 <line:1294:3, col:46> col:46 Ufs 'UFS_DEVICE_PATH':'UFS_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3a40 <line:1295:3, col:46> col:46 Sd 'SD_DEVICE_PATH':'SD_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3ac0 <line:1296:3, col:46> col:46 Emmc 'EMMC_DEVICE_PATH':'EMMC_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3b40 <line:1297:3, col:46> col:46 HardDrive 'HARDDRIVE_DEVICE_PATH':'HARDDRIVE_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3bc0 <line:1298:3, col:46> col:46 CD 'CDROM_DEVICE_PATH':'CDROM_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3c40 <line:1300:3, col:46> col:46 FilePath 'FILEPATH_DEVICE_PATH':'FILEPATH_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3cc0 <line:1301:3, col:46> col:46 MediaProtocol 'MEDIA_PROTOCOL_DEVICE_PATH':'MEDIA_PROTOCOL_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3d40 <line:1303:3, col:46> col:46 FirmwareVolume 'MEDIA_FW_VOL_DEVICE_PATH':'MEDIA_FW_VOL_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3dc0 <line:1304:3, col:46> col:46 FirmwareFile 'MEDIA_FW_VOL_FILEPATH_DEVICE_PATH':'MEDIA_FW_VOL_FILEPATH_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3e40 <line:1305:3, col:46> col:46 Offset 'MEDIA_RELATIVE_OFFSET_RANGE_DEVICE_PATH':'MEDIA_RELATIVE_OFFSET_RANGE_DEVICE_PATH'
| |-FieldDecl 0x55887c2c3ec0 <line:1306:3, col:46> col:46 RamDisk 'MEDIA_RAM_DISK_DEVICE_PATH':'MEDIA_RAM_DISK_DEVICE_PATH'
| `-FieldDecl 0x55887c2c3f40 <line:1307:3, col:46> col:46 Bbs 'BBS_BBS_DEVICE_PATH':'BBS_BBS_DEVICE_PATH'
|-TypedefDecl 0x55887c2c3fe8 <line:1254:1, line:1308:3> col:3 EFI_DEV_PATH 'union EFI_DEV_PATH':'EFI_DEV_PATH'
| |-ElaboratedType 0x55887c2c3f90 'union EFI_DEV_PATH' sugar
| | `-RecordType 0x55887c2c0190 'EFI_DEV_PATH'
| |   `-Record 0x55887c2c0110 ''
| `-FullComment 0x55887c450660 <line:1252:4, col:68>
|   `-ParagraphComment 0x55887c450630 <col:4, col:68>
|     `-TextComment 0x55887c450600 <col:4, col:68> Text=" Union of all possible Device Paths and pointers to Device Paths."
|-RecordDecl 0x55887c2c4058 <line:1310:9, line:1365:1> line:1310:9 union definition
| |-MaxFieldAlignmentAttr 0x55887c2c4100 <<invalid sloc>> Implicit 8
| |-FieldDecl 0x55887c2c41c8 <line:1311:3, col:47> col:47 DevPath 'EFI_DEVICE_PATH_PROTOCOL *'
| |-FieldDecl 0x55887c2c4288 <line:1312:3, col:47> col:47 Pci 'PCI_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c4348 <line:1313:3, col:47> col:47 PcCard 'PCCARD_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c4408 <line:1314:3, col:47> col:47 MemMap 'MEMMAP_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c44c8 <line:1315:3, col:47> col:47 Vendor 'VENDOR_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c4588 <line:1317:3, col:47> col:47 Controller 'CONTROLLER_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c4648 <line:1318:3, col:47> col:47 Bmc 'BMC_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c4708 <line:1319:3, col:47> col:47 Acpi 'ACPI_HID_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c47c8 <line:1320:3, col:47> col:47 ExtendedAcpi 'ACPI_EXTENDED_HID_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c4888 <line:1321:3, col:47> col:47 AcpiAdr 'ACPI_ADR_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c4948 <line:1323:3, col:47> col:47 Atapi 'ATAPI_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c4a08 <line:1324:3, col:47> col:47 Scsi 'SCSI_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c4ac8 <line:1325:3, col:47> col:47 Iscsi 'ISCSI_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c4b88 <line:1326:3, col:47> col:47 FibreChannel 'FIBRECHANNEL_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c4c48 <line:1327:3, col:47> col:47 FibreChannelEx 'FIBRECHANNELEX_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c4d08 <line:1329:3, col:47> col:47 F1394 'F1394_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c4dc8 <line:1330:3, col:47> col:47 Usb 'USB_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c4e88 <line:1331:3, col:47> col:47 Sata 'SATA_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c4f48 <line:1332:3, col:47> col:47 UsbClass 'USB_CLASS_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5008 <line:1333:3, col:47> col:47 UsbWwid 'USB_WWID_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c50c8 <line:1334:3, col:47> col:47 LogicUnit 'DEVICE_LOGICAL_UNIT_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5188 <line:1335:3, col:47> col:47 I2O 'I2O_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5260 <line:1336:3, col:47> col:47 MacAddr 'MAC_ADDR_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5318 <line:1337:3, col:47> col:47 Ipv4 'IPv4_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c53d8 <line:1338:3, col:47> col:47 Ipv6 'IPv6_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5498 <line:1339:3, col:47> col:47 Vlan 'VLAN_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5558 <line:1340:3, col:47> col:47 InfiniBand 'INFINIBAND_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5618 <line:1341:3, col:47> col:47 Uart 'UART_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c56d8 <line:1342:3, col:47> col:47 UartFlowControl 'UART_FLOW_CONTROL_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5798 <line:1343:3, col:47> col:47 Sas 'SAS_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5858 <line:1344:3, col:47> col:47 SasEx 'SASEX_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5918 <line:1345:3, col:47> col:47 NvmeNamespace 'NVME_NAMESPACE_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c59d8 <line:1346:3, col:47> col:47 Dns 'DNS_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5a98 <line:1347:3, col:47> col:47 Uri 'URI_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5b58 <line:1348:3, col:47> col:47 Bluetooth 'BLUETOOTH_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5c18 <line:1349:3, col:47> col:47 WiFi 'WIFI_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5cd8 <line:1350:3, col:47> col:47 Ufs 'UFS_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5d98 <line:1351:3, col:47> col:47 Sd 'SD_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5e58 <line:1352:3, col:47> col:47 Emmc 'EMMC_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5f18 <line:1353:3, col:47> col:47 HardDrive 'HARDDRIVE_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c5fd8 <line:1354:3, col:47> col:47 CD 'CDROM_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c6098 <line:1356:3, col:47> col:47 FilePath 'FILEPATH_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c6158 <line:1357:3, col:47> col:47 MediaProtocol 'MEDIA_PROTOCOL_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c6218 <line:1359:3, col:47> col:47 FirmwareVolume 'MEDIA_FW_VOL_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c62d8 <line:1360:3, col:47> col:47 FirmwareFile 'MEDIA_FW_VOL_FILEPATH_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c6398 <line:1361:3, col:47> col:47 Offset 'MEDIA_RELATIVE_OFFSET_RANGE_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c6458 <line:1362:3, col:47> col:47 RamDisk 'MEDIA_RAM_DISK_DEVICE_PATH *'
| |-FieldDecl 0x55887c2c6518 <line:1363:3, col:47> col:47 Bbs 'BBS_BBS_DEVICE_PATH *'
| `-FieldDecl 0x55887c2c6578 <line:1364:3, col:47> col:47 Raw 'UINT8 *'
|-TypedefDecl 0x55887c2c6628 <line:1310:1, line:1365:3> col:3 EFI_DEV_PATH_PTR 'union EFI_DEV_PATH_PTR':'EFI_DEV_PATH_PTR'
| `-ElaboratedType 0x55887c2c65d0 'union EFI_DEV_PATH_PTR' sugar
|   `-RecordType 0x55887c2c40e0 'EFI_DEV_PATH_PTR'
|     `-Record 0x55887c2c4058 ''
|-VarDecl 0x55887c2c66a8 <line:1373:1, col:18> col:18 gEfiDevicePathProtocolGuid 'EFI_GUID':'GUID' extern
|-FunctionDecl 0x55887c2c6958 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:44:1, line:50:3> line:46:1 CodeTypeToPostCode 'BOOLEAN (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE, UINT8 *)'
| |-ParmVarDecl 0x55887c2c6748 <line:47:7, col:30> col:30 CodeType 'EFI_STATUS_CODE_TYPE':'unsigned int'
| |-ParmVarDecl 0x55887c2c67c0 <line:48:7, col:30> col:30 Value 'EFI_STATUS_CODE_VALUE':'unsigned int'
| |-ParmVarDecl 0x55887c2c6838 <line:49:7, col:31> col:31 PostCode 'UINT8 *'
| `-FullComment 0x55887c450d50 <line:24:1, line:41:56>
|   |-ParagraphComment 0x55887c450700 <line:24:1, col:53>
|   | `-TextComment 0x55887c4506d0 <col:1, col:53> Text="  Converts a status code to an 8-bit POST code value."
|   |-ParagraphComment 0x55887c4507f0 <line:26:1, line:30:72>
|   | |-TextComment 0x55887c450720 <line:26:1, col:80> Text="  Converts the status code specified by CodeType and Value to an 8-bit POST code"
|   | |-TextComment 0x55887c450740 <line:27:1, col:65> Text="  and returns the 8-bit POST code in PostCode.  If CodeType is an"
|   | |-TextComment 0x55887c450760 <line:28:1, col:80> Text="  EFI_PROGRESS_CODE or CodeType is an EFI_ERROR_CODE, then bits 0..4 of PostCode"
|   | |-TextComment 0x55887c450780 <line:29:1, col:76> Text="  are set to bits 16..20 of Value, and bits 5..7 of PostCode are set to bits"
|   | `-TextComment 0x55887c4507a0 <line:30:1, col:72> Text="  24..26 of Value., and TRUE is returned.  Otherwise, FALSE is returned."
|   |-ParagraphComment 0x55887c450840 <line:32:1, col:37>
|   | `-TextComment 0x55887c450810 <col:1, col:37> Text="  If PostCode is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c450890 <line:34:1, col:2>
|   | `-TextComment 0x55887c450860 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4508b0 <col:3, line:35:2> [in] implicitly Param="CodeType" ParamIndex=0
|   | `-ParagraphComment 0x55887c450960 <line:34:19, line:35:2>
|   |   |-TextComment 0x55887c450910 <line:34:19, col:60> Text="  The type of status code being converted."
|   |   `-TextComment 0x55887c450930 <line:35:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c450980 <col:3, line:36:2> [in] implicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c450a30 <line:35:16, line:36:2>
|   |   |-TextComment 0x55887c4509e0 <line:35:16, col:58> Text="     The status code value being converted."
|   |   `-TextComment 0x55887c450a00 <line:36:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c450a50 <col:3, col:69> [in] implicitly Param="PostCode" ParamIndex=2
|   | `-ParagraphComment 0x55887c450ae0 <col:19, col:69>
|   |   `-TextComment 0x55887c450ab0 <col:19, col:69> Text="  A pointer to the 8-bit POST code value to return."
|   |-ParagraphComment 0x55887c450b30 <line:38:1, col:2>
|   | `-TextComment 0x55887c450b00 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c450b50 <col:3, line:40:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c450c20 <line:38:16, line:40:2>
|   |   |-TextComment 0x55887c450ba0 <line:38:16, col:79> Text="   The status code specified by CodeType and Value was converted"
|   |   |-TextComment 0x55887c450bc0 <line:39:1, col:65> Text="                  to an 8-bit POST code and returned in PostCode."
|   |   `-TextComment 0x55887c450be0 <line:40:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c450c40 <col:3, line:41:56> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c450ce0 <line:40:17, line:41:56>
|       |-TextComment 0x55887c450c90 <line:40:17, col:78> Text="  The status code specified by CodeType and Value could not be"
|       `-TextComment 0x55887c450cb0 <line:41:1, col:56> Text="                  converted to an 8-bit POST code value."
|-FunctionDecl 0x55887c2c6e28 <line:85:1, line:94:3> line:87:1 ReportStatusCodeExtractAssertInfo 'BOOLEAN (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE, const EFI_STATUS_CODE_DATA *, CHAR8 **, CHAR8 **, UINT32 *)'
| |-ParmVarDecl 0x55887c2c6a48 <line:88:6, col:34> col:34 CodeType 'EFI_STATUS_CODE_TYPE':'unsigned int'
| |-ParmVarDecl 0x55887c2c6ac0 <line:89:6, col:34> col:34 Value 'EFI_STATUS_CODE_VALUE':'unsigned int'
| |-ParmVarDecl 0x55887c2c6b38 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:90:35> col:35 Data 'const EFI_STATUS_CODE_DATA *'
| |-ParmVarDecl 0x55887c2c6bb8 <line:91:7, col:36> col:36 Filename 'CHAR8 **'
| |-ParmVarDecl 0x55887c2c6c38 <line:92:7, col:36> col:36 Description 'CHAR8 **'
| |-ParmVarDecl 0x55887c2c6cb0 <line:93:7, col:35> col:35 LineNumber 'UINT32 *'
| `-FullComment 0x55887c451820 <line:53:1, line:82:57>
|   |-ParagraphComment 0x55887c450df0 <line:53:1, col:61>
|   | `-TextComment 0x55887c450dc0 <col:1, col:61> Text="  Extracts ASSERT() information from a status code structure."
|   |-ParagraphComment 0x55887c450fa0 <line:55:1, line:64:31>
|   | |-TextComment 0x55887c450e10 <line:55:1, col:81> Text="  Converts the status code specified by CodeType, Value, and Data to the ASSERT()"
|   | |-TextComment 0x55887c450e30 <line:56:1, col:79> Text="  arguments specified by Filename, Description, and LineNumber.  If CodeType is"
|   | |-TextComment 0x55887c450e50 <line:57:1, col:78> Text="  an EFI_ERROR_CODE, and CodeType has a severity of EFI_ERROR_UNRECOVERED, and"
|   | |-TextComment 0x55887c450e70 <line:58:1, col:74> Text="  Value has an operation mask of EFI_SW_EC_ILLEGAL_SOFTWARE_STATE, extract"
|   | |-TextComment 0x55887c450e90 <line:59:1, col:74> Text="  Filename, Description, and LineNumber from the optional data area of the"
|   | |-TextComment 0x55887c450eb0 <line:60:1, col:80> Text="  status code buffer specified by Data.  The optional data area of Data contains"
|   | |-TextComment 0x55887c450ed0 <line:61:1, col:80> Text="  a Null-terminated ASCII string for the FileName, followed by a Null-terminated"
|   | |-TextComment 0x55887c450ef0 <line:62:1, col:76> Text="  ASCII string for the Description, followed by a 32-bit LineNumber.  If the"
|   | |-TextComment 0x55887c450f10 <line:63:1, col:70> Text="  ASSERT() information could be extracted from Data, then return TRUE."
|   | `-TextComment 0x55887c450f30 <line:64:1, col:31> Text="  Otherwise, FALSE is returned."
|   |-ParagraphComment 0x55887c451060 <line:66:1, line:69:39>
|   | |-TextComment 0x55887c450fc0 <line:66:1, col:33> Text="  If Data is NULL, then ASSERT()."
|   | |-TextComment 0x55887c450fe0 <line:67:1, col:37> Text="  If Filename is NULL, then ASSERT()."
|   | |-TextComment 0x55887c451000 <line:68:1, col:40> Text="  If Description is NULL, then ASSERT()."
|   | `-TextComment 0x55887c451020 <line:69:1, col:39> Text="  If LineNumber is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c4510b0 <line:71:1, col:2>
|   | `-TextComment 0x55887c451080 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4510d0 <col:3, line:72:2> [in] implicitly Param="CodeType" ParamIndex=0
|   | `-ParagraphComment 0x55887c451180 <line:71:19, line:72:2>
|   |   |-TextComment 0x55887c451130 <line:71:19, col:63> Text="     The type of status code being converted."
|   |   `-TextComment 0x55887c451150 <line:72:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4511a0 <col:3, line:73:2> [in] implicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c451250 <line:72:16, line:73:2>
|   |   |-TextComment 0x55887c451200 <line:72:16, col:61> Text="        The status code value being converted."
|   |   `-TextComment 0x55887c451220 <line:73:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c451270 <col:3, line:74:2> [in] implicitly Param="Data" ParamIndex=2
|   | `-ParagraphComment 0x55887c451320 <line:73:15, line:74:2>
|   |   |-TextComment 0x55887c4512d0 <line:73:15, col:62> Text="         The pointer to status code data buffer."
|   |   `-TextComment 0x55887c4512f0 <line:74:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c451340 <col:3, line:75:2> [in] implicitly Param="Filename" ParamIndex=3
|   | `-ParagraphComment 0x55887c4513f0 <line:74:19, line:75:2>
|   |   |-TextComment 0x55887c4513a0 <line:74:19, col:87> Text="     The pointer to the source file name that generated the ASSERT()."
|   |   `-TextComment 0x55887c4513c0 <line:75:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c451410 <col:3, line:76:2> [in] implicitly Param="Description" ParamIndex=4
|   | `-ParagraphComment 0x55887c4514c0 <line:75:22, line:76:2>
|   |   |-TextComment 0x55887c451470 <line:75:22, col:70> Text="  The pointer to the description of the ASSERT()."
|   |   `-TextComment 0x55887c451490 <line:76:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4514e0 <col:3, col:85> [in] implicitly Param="LineNumber" ParamIndex=5
|   | `-ParagraphComment 0x55887c451570 <col:21, col:85>
|   |   `-TextComment 0x55887c451540 <col:21, col:85> Text="   The pointer to source line number that generated the ASSERT()."
|   |-ParagraphComment 0x55887c4515c0 <line:78:1, col:2>
|   | `-TextComment 0x55887c451590 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c4515e0 <col:3, line:81:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c4516d0 <line:78:16, line:81:2>
|   |   |-TextComment 0x55887c451630 <line:78:16, col:76> Text="   The status code specified by CodeType, Value, and Data was"
|   |   |-TextComment 0x55887c451650 <line:79:1, col:82> Text="                  converted ASSERT() arguments specified by Filename, Description,"
|   |   |-TextComment 0x55887c451670 <line:80:1, col:33> Text="                  and LineNumber."
|   |   `-TextComment 0x55887c451690 <line:81:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c4516f0 <col:3, line:82:57> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c451790 <line:81:17, line:82:57>
|       |-TextComment 0x55887c451740 <line:81:17, col:78> Text="  The status code specified by CodeType, Value, and Data could"
|       `-TextComment 0x55887c451760 <line:82:1, col:57> Text="                  not be converted to ASSERT() arguments."
|-FunctionDecl 0x55887c2c7260 <line:125:1, line:132:3> line:127:1 ReportStatusCodeExtractDebugInfo 'BOOLEAN (const EFI_STATUS_CODE_DATA *, UINT32 *, BASE_LIST *, CHAR8 **)'
| |-ParmVarDecl 0x55887c2c6f38 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:128:35> col:35 Data 'const EFI_STATUS_CODE_DATA *'
| |-ParmVarDecl 0x55887c2c6fb0 <line:129:7, col:35> col:35 ErrorLevel 'UINT32 *'
| |-ParmVarDecl 0x55887c2c7088 <line:130:7, col:35> col:35 Marker 'BASE_LIST *'
| |-ParmVarDecl 0x55887c2c7108 <line:131:7, col:36> col:36 Format 'CHAR8 **'
| `-FullComment 0x55887c4520f0 <line:97:1, line:122:36>
|   |-ParagraphComment 0x55887c4518c0 <line:97:1, col:60>
|   | `-TextComment 0x55887c451890 <col:1, col:60> Text="  Extracts DEBUG() information from a status code structure."
|   |-ParagraphComment 0x55887c451a20 <line:99:1, line:106:45>
|   | |-TextComment 0x55887c4518e0 <line:99:1, col:79> Text="  Converts the status code specified by Data to the DEBUG() arguments specified"
|   | |-TextComment 0x55887c451900 <line:100:1, col:61> Text="  by ErrorLevel, Marker, and Format.  If type GUID in Data is"
|   | |-TextComment 0x55887c451920 <line:101:1, col:76> Text="  EFI_STATUS_CODE_DATA_TYPE_DEBUG_GUID, then extract ErrorLevel, Marker, and"
|   | |-TextComment 0x55887c451940 <line:102:1, col:81> Text="  Format from the optional data area of the status code buffer specified by Data."
|   | |-TextComment 0x55887c451960 <line:103:1, col:80> Text="  The optional data area of Data contains a 32-bit ErrorLevel followed by Marker"
|   | |-TextComment 0x55887c451980 <line:104:1, col:78> Text="  which is 12 UINTN parameters, followed by a Null-terminated ASCII string for"
|   | |-TextComment 0x55887c4519a0 <line:105:1, col:76> Text="  the Format.  If the DEBUG() information could be extracted from Data, then"
|   | `-TextComment 0x55887c4519c0 <line:106:1, col:45> Text="  return TRUE.  Otherwise, FALSE is returned."
|   |-ParagraphComment 0x55887c451ae0 <line:108:1, line:111:35>
|   | |-TextComment 0x55887c451a40 <line:108:1, col:33> Text="  If Data is NULL, then ASSERT()."
|   | |-TextComment 0x55887c451a60 <line:109:1, col:39> Text="  If ErrorLevel is NULL, then ASSERT()."
|   | |-TextComment 0x55887c451a80 <line:110:1, col:35> Text="  If Marker is NULL, then ASSERT()."
|   | `-TextComment 0x55887c451aa0 <line:111:1, col:35> Text="  If Format is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c451b30 <line:113:1, col:2>
|   | `-TextComment 0x55887c451b00 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c451b50 <col:3, line:114:2> [in] implicitly Param="Data" ParamIndex=0
|   | `-ParagraphComment 0x55887c451c00 <line:113:15, line:114:2>
|   |   |-TextComment 0x55887c451bb0 <line:113:15, col:61> Text="        The pointer to status code data buffer."
|   |   `-TextComment 0x55887c451bd0 <line:114:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c451c20 <col:3, line:115:2> [in] implicitly Param="ErrorLevel" ParamIndex=1
|   | `-ParagraphComment 0x55887c451cd0 <line:114:21, line:115:2>
|   |   |-TextComment 0x55887c451c80 <line:114:21, col:74> Text="  The pointer to error level mask for a debug message."
|   |   `-TextComment 0x55887c451ca0 <line:115:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c451cf0 <col:3, line:116:2> [in] implicitly Param="Marker" ParamIndex=2
|   | `-ParagraphComment 0x55887c451da0 <line:115:17, line:116:2>
|   |   |-TextComment 0x55887c451d50 <line:115:17, col:87> Text="      The pointer to the variable argument list associated with Format."
|   |   `-TextComment 0x55887c451d70 <line:116:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c451dc0 <col:3, line:117:36> [in] implicitly Param="Format" ParamIndex=3
|   | `-ParagraphComment 0x55887c451e70 <line:116:17, line:117:36>
|   |   |-TextComment 0x55887c451e20 <line:116:17, col:79> Text="      The pointer to a Null-terminated ASCII format string of a"
|   |   `-TextComment 0x55887c451e40 <line:117:1, col:36> Text="                      debug message."
|   |-ParagraphComment 0x55887c451ec0 <line:119:1, col:2>
|   | `-TextComment 0x55887c451e90 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c451ee0 <col:3, line:121:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c451fb0 <line:119:16, line:121:2>
|   |   |-TextComment 0x55887c451f30 <line:119:16, col:83> Text="   The status code specified by Data was converted DEBUG() arguments"
|   |   |-TextComment 0x55887c451f50 <line:120:1, col:62> Text="                  specified by ErrorLevel, Marker, and Format."
|   |   `-TextComment 0x55887c451f70 <line:121:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c451fd0 <col:3, line:122:36> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c452070 <line:121:17, line:122:36>
|       |-TextComment 0x55887c452020 <line:121:17, col:77> Text="  The status code specified by Data could not be converted to"
|       `-TextComment 0x55887c452040 <line:122:1, col:36> Text="                  DEBUG() arguments."
|-FunctionDecl 0x55887c2c74e8 <line:155:1, line:160:3> line:157:1 used ReportStatusCode 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| |-ParmVarDecl 0x55887c2c7358 <line:158:6, col:29> col:29 Type 'EFI_STATUS_CODE_TYPE':'unsigned int'
| |-ParmVarDecl 0x55887c2c73d0 <line:159:6, col:29> col:29 Value 'EFI_STATUS_CODE_VALUE':'unsigned int'
| `-FullComment 0x55887c452810 <line:135:1, line:152:69>
|   |-ParagraphComment 0x55887c452190 <line:135:1, col:24>
|   | `-TextComment 0x55887c452160 <col:1, col:24> Text="  Reports a status code."
|   |-ParagraphComment 0x55887c452250 <line:137:1, line:140:53>
|   | |-TextComment 0x55887c4521b0 <line:137:1, col:77> Text="  Reports the status code specified by the parameters Type and Value.  Status"
|   | |-TextComment 0x55887c4521d0 <line:138:1, col:77> Text="  code also require an instance, caller ID, and extended data.  This function"
|   | |-TextComment 0x55887c4521f0 <line:139:1, col:67> Text="  passed in a zero instance, NULL extended data, and a caller ID of"
|   | `-TextComment 0x55887c452210 <line:140:1, col:53> Text="  gEfiCallerIdGuid, which is the GUID for the module."
|   |-ParagraphComment 0x55887c4522f0 <line:142:1, line:144:50>
|   | |-TextComment 0x55887c452270 <line:142:1, col:75> Text="  ReportStatusCode()must actively prevent recursion.  If ReportStatusCode()"
|   | |-TextComment 0x55887c452290 <line:143:1, col:83> Text="  is called while processing another any other Report Status Code Library function,"
|   | `-TextComment 0x55887c4522b0 <line:144:1, col:50> Text="  then ReportStatusCode() must return immediately."
|   |-ParagraphComment 0x55887c452340 <line:146:1, col:2>
|   | `-TextComment 0x55887c452310 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c452360 <col:3, line:147:2> [in] implicitly Param="Type" ParamIndex=0
|   | `-ParagraphComment 0x55887c452410 <line:146:15, line:147:2>
|   |   |-TextComment 0x55887c4523c0 <line:146:15, col:34> Text="   Status code type."
|   |   `-TextComment 0x55887c4523e0 <line:147:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c452430 <col:3, col:35> [in] implicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c4524c0 <col:16, col:35>
|   |   `-TextComment 0x55887c452490 <col:16, col:35> Text="  Status code value."
|   |-ParagraphComment 0x55887c452510 <line:149:1, col:2>
|   | `-TextComment 0x55887c4524e0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c452530 <col:3, line:150:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c4525d0 <line:149:23, line:150:2>
|   |   |-TextComment 0x55887c452580 <line:149:23, col:58> Text="       The status code was reported."
|   |   `-TextComment 0x55887c4525a0 <line:150:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c452620 <col:3, line:152:2> Name="retval" Arg[0]="EFI_DEVICE_ERROR"
|   | `-ParagraphComment 0x55887c452700 <line:150:28, line:152:2>
|   |   |-TextComment 0x55887c452680 <line:150:28, col:77> Text="  There status code could not be reported due to a"
|   |   |-TextComment 0x55887c4526a0 <line:151:1, col:42> Text="                             device error."
|   |   `-TextComment 0x55887c4526c0 <line:152:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c452720 <col:3, col:69> Name="retval" Arg[0]="EFI_UNSUPPORTED"
|     `-ParagraphComment 0x55887c4527a0 <col:27, col:69>
|       `-TextComment 0x55887c452770 <col:27, col:69> Text="   The report status code is not supported."
|-FunctionDecl 0x55887c2c7848 <line:191:1, line:197:3> line:193:1 ReportStatusCodeWithDevicePath 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE, const EFI_DEVICE_PATH_PROTOCOL *)'
| |-ParmVarDecl 0x55887c2c75d8 <line:194:6, col:38> col:38 Type 'EFI_STATUS_CODE_TYPE':'unsigned int'
| |-ParmVarDecl 0x55887c2c7650 <line:195:6, col:38> col:38 Value 'EFI_STATUS_CODE_VALUE':'unsigned int'
| |-ParmVarDecl 0x55887c2c7728 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:196:39> col:39 DevicePath 'const EFI_DEVICE_PATH_PROTOCOL *'
| `-FullComment 0x55887c4531b0 <line:163:1, line:188:56>
|   |-ParagraphComment 0x55887c4528b0 <line:163:1, col:73>
|   | `-TextComment 0x55887c452880 <col:1, col:73> Text="  Reports a status code with a Device Path Protocol as the extended data."
|   |-ParagraphComment 0x55887c4529a0 <line:165:1, line:169:87>
|   | |-TextComment 0x55887c4528d0 <line:165:1, col:76> Text="  Allocates and fills in the extended data section of a status code with the"
|   | |-TextComment 0x55887c4528f0 <line:166:1, col:77> Text="  Device Path Protocol specified by DevicePath.  This function is responsible"
|   | |-TextComment 0x55887c452910 <line:167:1, col:77> Text="  for allocating a buffer large enough for the standard header and the device"
|   | |-TextComment 0x55887c452930 <line:168:1, col:80> Text="  path.  The standard header is filled in with an implementation dependent GUID."
|   | `-TextComment 0x55887c452950 <line:169:1, col:87> Text="  The status code is reported with a zero instance and a caller ID of gEfiCallerIdGuid."
|   |-ParagraphComment 0x55887c452a60 <line:171:1, line:174:43>
|   | |-TextComment 0x55887c4529c0 <line:171:1, col:70> Text="  ReportStatusCodeWithDevicePath()must actively prevent recursion.  If"
|   | |-TextComment 0x55887c4529e0 <line:172:1, col:79> Text="  ReportStatusCodeWithDevicePath() is called while processing another any other"
|   | |-TextComment 0x55887c452a00 <line:173:1, col:76> Text="  Report Status Code Library function, then ReportStatusCodeWithDevicePath()"
|   | `-TextComment 0x55887c452a20 <line:174:1, col:43> Text="  must return EFI_DEVICE_ERROR immediately."
|   |-ParagraphComment 0x55887c452ab0 <line:176:1, col:39>
|   | `-TextComment 0x55887c452a80 <col:1, col:39> Text="  If DevicePath is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c452b00 <line:178:1, col:2>
|   | `-TextComment 0x55887c452ad0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c452b20 <col:3, line:179:2> [in] implicitly Param="Type" ParamIndex=0
|   | `-ParagraphComment 0x55887c452bd0 <line:178:15, line:179:2>
|   |   |-TextComment 0x55887c452b80 <line:178:15, col:43> Text="        The status code type."
|   |   `-TextComment 0x55887c452ba0 <line:179:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c452bf0 <col:3, line:180:2> [in] implicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c452ca0 <line:179:16, line:180:2>
|   |   |-TextComment 0x55887c452c50 <line:179:16, col:44> Text="       The status code value."
|   |   `-TextComment 0x55887c452c70 <line:180:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c452cc0 <col:3, col:77> [in] implicitly Param="DevicePath" ParamIndex=2
|   | `-ParagraphComment 0x55887c452d50 <col:21, col:77>
|   |   `-TextComment 0x55887c452d20 <col:21, col:77> Text="  The pointer to the Device Path Protocol to be reported."
|   |-ParagraphComment 0x55887c452da0 <line:182:1, col:2>
|   | `-TextComment 0x55887c452d70 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c452dc0 <col:3, line:184:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c452e90 <line:182:23, line:184:2>
|   |   |-TextComment 0x55887c452e10 <line:182:23, col:79> Text="           The status code was reported with the extended"
|   |   |-TextComment 0x55887c452e30 <line:183:1, col:62> Text="                                 data specified by DevicePath."
|   |   `-TextComment 0x55887c452e50 <line:184:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c452eb0 <col:3, line:186:2> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|   | `-ParagraphComment 0x55887c452f90 <line:184:32, line:186:2>
|   |   |-TextComment 0x55887c452f10 <line:184:32, col:80> Text="  There were not enough resources to allocate the"
|   |   |-TextComment 0x55887c452f30 <line:185:1, col:55> Text="                                 extended data section."
|   |   `-TextComment 0x55887c452f50 <line:186:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c452fb0 <col:3, line:187:2> Name="retval" Arg[0]="EFI_UNSUPPORTED"
|   | `-ParagraphComment 0x55887c453050 <line:186:27, line:187:2>
|   |   |-TextComment 0x55887c453000 <line:186:27, col:73> Text="       The report status code is not supported."
|   |   `-TextComment 0x55887c453020 <line:187:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c453070 <col:3, line:188:56> Name="retval" Arg[0]="EFI_DEVICE_ERROR"
|     `-ParagraphComment 0x55887c453120 <line:187:28, line:188:56>
|       |-TextComment 0x55887c4530d0 <line:187:28, col:80> Text="      A call to a Report Status Code Library function"
|       `-TextComment 0x55887c4530f0 <line:188:1, col:56> Text="                                 is already in progress."
|-FunctionDecl 0x55887c2c7be8 <line:234:1, line:241:3> line:236:1 ReportStatusCodeWithExtendedData 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE, const void *, UINTN)'
| |-ParmVarDecl 0x55887c2c7938 <line:237:6, col:29> col:29 Type 'EFI_STATUS_CODE_TYPE':'unsigned int'
| |-ParmVarDecl 0x55887c2c79b0 <line:238:6, col:29> col:29 Value 'EFI_STATUS_CODE_VALUE':'unsigned int'
| |-ParmVarDecl 0x55887c2c7a30 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:239:30> col:30 ExtendedData 'const void *'
| |-ParmVarDecl 0x55887c2c7aa8 <line:240:6, col:29> col:29 ExtendedDataSize 'UINTN':'unsigned long long'
| `-FullComment 0x55887c453ce0 <line:200:1, line:231:56>
|   |-ParagraphComment 0x55887c453250 <line:200:1, col:53>
|   | `-TextComment 0x55887c453220 <col:1, col:53> Text="  Reports a status code with an extended data buffer."
|   |-ParagraphComment 0x55887c4533b0 <line:202:1, line:209:59>
|   | |-TextComment 0x55887c453270 <line:202:1, col:76> Text="  Allocates and fills in the extended data section of a status code with the"
|   | |-TextComment 0x55887c453290 <line:203:1, col:77> Text="  extended data specified by ExtendedData and ExtendedDataSize.  ExtendedData"
|   | |-TextComment 0x55887c4532b0 <line:204:1, col:79> Text="  is assumed to be one of the data structures specified in Related Definitions."
|   | |-TextComment 0x55887c4532d0 <line:205:1, col:75> Text="  These data structure do not have the standard header, so this function is"
|   | |-TextComment 0x55887c4532f0 <line:206:1, col:78> Text="  responsible for allocating a buffer large enough for the standard header and"
|   | |-TextComment 0x55887c453310 <line:207:1, col:77> Text="  the extended data passed into this function.  The standard header is filled"
|   | |-TextComment 0x55887c453330 <line:208:1, col:72> Text="  in with an implementation dependent GUID.  The status code is reported"
|   | `-TextComment 0x55887c453350 <line:209:1, col:59> Text="  with a zero instance and a caller ID of gEfiCallerIdGuid."
|   |-ParagraphComment 0x55887c453470 <line:211:1, line:214:43>
|   | |-TextComment 0x55887c4533d0 <line:211:1, col:72> Text="  ReportStatusCodeWithExtendedData()must actively prevent recursion.  If"
|   | |-TextComment 0x55887c4533f0 <line:212:1, col:81> Text="  ReportStatusCodeWithExtendedData() is called while processing another any other"
|   | |-TextComment 0x55887c453410 <line:213:1, col:78> Text="  Report Status Code Library function, then ReportStatusCodeWithExtendedData()"
|   | `-TextComment 0x55887c453430 <line:214:1, col:43> Text="  must return EFI_DEVICE_ERROR immediately."
|   |-ParagraphComment 0x55887c4534e0 <line:216:1, line:217:42>
|   | |-TextComment 0x55887c453490 <line:216:1, col:41> Text="  If ExtendedData is NULL, then ASSERT()."
|   | `-TextComment 0x55887c4534b0 <line:217:1, col:42> Text="  If ExtendedDataSize is 0, then ASSERT()."
|   |-ParagraphComment 0x55887c453530 <line:219:1, col:2>
|   | `-TextComment 0x55887c453500 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c453550 <col:3, line:220:2> [in] implicitly Param="Type" ParamIndex=0
|   | `-ParagraphComment 0x55887c453600 <line:219:15, line:220:2>
|   |   |-TextComment 0x55887c4535b0 <line:219:15, col:49> Text="              The status code type."
|   |   `-TextComment 0x55887c4535d0 <line:220:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c453620 <col:3, line:221:2> [in] implicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c4536d0 <line:220:16, line:221:2>
|   |   |-TextComment 0x55887c453680 <line:220:16, col:50> Text="             The status code value."
|   |   `-TextComment 0x55887c4536a0 <line:221:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4536f0 <col:3, line:222:2> [in] implicitly Param="ExtendedData" ParamIndex=2
|   | `-ParagraphComment 0x55887c4537a0 <line:221:23, line:222:2>
|   |   |-TextComment 0x55887c453750 <line:221:23, col:83> Text="      The pointer to the extended data buffer to be reported."
|   |   `-TextComment 0x55887c453770 <line:222:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4537c0 <col:3, line:223:40> [in] implicitly Param="ExtendedDataSize" ParamIndex=3
|   | `-ParagraphComment 0x55887c453880 <line:222:27, line:223:40>
|   |   |-TextComment 0x55887c453830 <line:222:27, col:78> Text="  The size, in bytes, of the extended data buffer to"
|   |   `-TextComment 0x55887c453850 <line:223:1, col:40> Text="                            be reported."
|   |-ParagraphComment 0x55887c4538d0 <line:225:1, col:2>
|   | `-TextComment 0x55887c4538a0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c4538f0 <col:3, line:227:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c4539c0 <line:225:23, line:227:2>
|   |   |-TextComment 0x55887c453940 <line:225:23, col:79> Text="           The status code was reported with the extended"
|   |   |-TextComment 0x55887c453960 <line:226:1, col:85> Text="                                 data specified by ExtendedData and ExtendedDataSize."
|   |   `-TextComment 0x55887c453980 <line:227:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c4539e0 <col:3, line:229:2> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|   | `-ParagraphComment 0x55887c453ac0 <line:227:32, line:229:2>
|   |   |-TextComment 0x55887c453a40 <line:227:32, col:80> Text="  There were not enough resources to allocate the"
|   |   |-TextComment 0x55887c453a60 <line:228:1, col:55> Text="                                 extended data section."
|   |   `-TextComment 0x55887c453a80 <line:229:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c453ae0 <col:3, line:230:2> Name="retval" Arg[0]="EFI_UNSUPPORTED"
|   | `-ParagraphComment 0x55887c453b80 <line:229:27, line:230:2>
|   |   |-TextComment 0x55887c453b30 <line:229:27, col:73> Text="       The report status code is not supported."
|   |   `-TextComment 0x55887c453b50 <line:230:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c453ba0 <col:3, line:231:56> Name="retval" Arg[0]="EFI_DEVICE_ERROR"
|     `-ParagraphComment 0x55887c453c50 <line:230:28, line:231:56>
|       |-TextComment 0x55887c453c00 <line:230:28, col:80> Text="      A call to a Report Status Code Library function"
|       `-TextComment 0x55887c453c20 <line:231:1, col:56> Text="                                 is already in progress."
|-FunctionDecl 0x55887c2c8148 <line:285:1, line:295:3> line:287:1 ReportStatusCodeEx 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE, UINT32, const EFI_GUID *, const EFI_GUID *, const void *, UINTN)'
| |-ParmVarDecl 0x55887c2c7ce8 <line:288:6, col:29> col:29 Type 'EFI_STATUS_CODE_TYPE':'unsigned int'
| |-ParmVarDecl 0x55887c2c7d60 <line:289:6, col:29> col:29 Value 'EFI_STATUS_CODE_VALUE':'unsigned int'
| |-ParmVarDecl 0x55887c2c7dd8 <line:290:6, col:29> col:29 Instance 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c2c7e50 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:291:30> col:30 CallerId 'const EFI_GUID *'
| |-ParmVarDecl 0x55887c2c7ec8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:292:30> col:30 ExtendedDataGuid 'const EFI_GUID *'
| |-ParmVarDecl 0x55887c2c7f48 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:293:30> col:30 ExtendedData 'const void *'
| |-ParmVarDecl 0x55887c2c7fc0 <line:294:6, col:29> col:29 ExtendedDataSize 'UINTN':'unsigned long long'
| `-FullComment 0x55887c454b60 <line:244:1, line:282:56>
|   |-ParagraphComment 0x55887c453d80 <line:244:1, col:45>
|   | `-TextComment 0x55887c453d50 <col:1, col:45> Text="  Reports a status code with full parameters."
|   |-ParagraphComment 0x55887c453f30 <line:246:1, line:255:65>
|   | |-TextComment 0x55887c453da0 <line:246:1, col:83> Text="  The function reports a status code.  If ExtendedData is NULL and ExtendedDataSize"
|   | |-TextComment 0x55887c453dc0 <line:247:1, col:77> Text="  is 0, then an extended data buffer is not reported.  If ExtendedData is not"
|   | |-TextComment 0x55887c453de0 <line:248:1, col:80> Text="  NULL and ExtendedDataSize is not 0, then an extended data buffer is allocated."
|   | |-TextComment 0x55887c453e00 <line:249:1, col:84> Text="  ExtendedData is assumed not have the standard status code header, so this function"
|   | |-TextComment 0x55887c453e20 <line:250:1, col:81> Text="  is responsible for allocating a buffer large enough for the standard header and"
|   | |-TextComment 0x55887c453e40 <line:251:1, col:80> Text="  the extended data passed into this function.  The standard header is filled in"
|   | |-TextComment 0x55887c453e60 <line:252:1, col:81> Text="  with a GUID specified by ExtendedDataGuid.  If ExtendedDataGuid is NULL, then a"
|   | |-TextComment 0x55887c453e80 <line:253:1, col:83> Text="  GUID of gEfiStatusCodeSpecificDataGuid is used.  The status code is reported with"
|   | |-TextComment 0x55887c453ea0 <line:254:1, col:78> Text="  an instance specified by Instance and a caller ID specified by CallerId.  If"
|   | `-TextComment 0x55887c453ec0 <line:255:1, col:65> Text="  CallerId is NULL, then a caller ID of gEfiCallerIdGuid is used."
|   |-ParagraphComment 0x55887c453fd0 <line:257:1, line:259:69>
|   | |-TextComment 0x55887c453f50 <line:257:1, col:79> Text="  ReportStatusCodeEx()must actively prevent recursion.  If ReportStatusCodeEx()"
|   | |-TextComment 0x55887c453f70 <line:258:1, col:83> Text="  is called while processing another any other Report Status Code Library function,"
|   | `-TextComment 0x55887c453f90 <line:259:1, col:69> Text="  then ReportStatusCodeEx() must return EFI_DEVICE_ERROR immediately."
|   |-ParagraphComment 0x55887c454040 <line:261:1, line:262:74>
|   | |-TextComment 0x55887c453ff0 <line:261:1, col:74> Text="  If ExtendedData is NULL and ExtendedDataSize is not zero, then ASSERT()."
|   | `-TextComment 0x55887c454010 <line:262:1, col:74> Text="  If ExtendedData is not NULL and ExtendedDataSize is zero, then ASSERT()."
|   |-ParagraphComment 0x55887c454090 <line:264:1, col:2>
|   | `-TextComment 0x55887c454060 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4540b0 <col:3, line:265:2> [in] implicitly Param="Type" ParamIndex=0
|   | `-ParagraphComment 0x55887c454160 <line:264:15, line:265:2>
|   |   |-TextComment 0x55887c454110 <line:264:15, col:49> Text="              The status code type."
|   |   `-TextComment 0x55887c454130 <line:265:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c454180 <col:3, line:266:2> [in] implicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c454230 <line:265:16, line:266:2>
|   |   |-TextComment 0x55887c4541e0 <line:265:16, col:50> Text="             The status code value."
|   |   `-TextComment 0x55887c454200 <line:266:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c454250 <col:3, line:267:2> [in] implicitly Param="Instance" ParamIndex=2
|   | `-ParagraphComment 0x55887c454300 <line:266:19, line:267:2>
|   |   |-TextComment 0x55887c4542b0 <line:266:19, col:60> Text="          The status code instance number."
|   |   `-TextComment 0x55887c4542d0 <line:267:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c454320 <col:3, line:270:2> [in] implicitly Param="CallerId" ParamIndex=3
|   | `-ParagraphComment 0x55887c454420 <line:267:19, line:270:2>
|   |   |-TextComment 0x55887c454380 <line:267:19, col:84> Text="          The pointer to a GUID that identifies the caller of this"
|   |   |-TextComment 0x55887c4543a0 <line:268:1, col:79> Text="                            function.  If this parameter is NULL, then a caller"
|   |   |-TextComment 0x55887c4543c0 <line:269:1, col:59> Text="                            ID of gEfiCallerIdGuid is used."
|   |   `-TextComment 0x55887c4543e0 <line:270:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c454440 <col:3, line:273:2> [in] implicitly Param="ExtendedDataGuid" ParamIndex=4
|   | `-ParagraphComment 0x55887c454550 <line:270:27, line:273:2>
|   |   |-TextComment 0x55887c4544b0 <line:270:27, col:81> Text="  The pointer to the GUID for the extended data buffer."
|   |   |-TextComment 0x55887c4544d0 <line:271:1, col:77> Text="                            If this parameter is NULL, then a the status code"
|   |   |-TextComment 0x55887c4544f0 <line:272:1, col:95> Text="                            standard header is filled in with an implementation dependent GUID."
|   |   `-TextComment 0x55887c454510 <line:273:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c454570 <col:3, line:275:2> [in] implicitly Param="ExtendedData" ParamIndex=5
|   | `-ParagraphComment 0x55887c454650 <line:273:23, line:275:2>
|   |   |-TextComment 0x55887c4545d0 <line:273:23, col:80> Text="      The pointer to the extended data buffer.  This is an"
|   |   |-TextComment 0x55887c4545f0 <line:274:1, col:64> Text="                            optional parameter that may be NULL."
|   |   `-TextComment 0x55887c454610 <line:275:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c454670 <col:3, col:76> [in] implicitly Param="ExtendedDataSize" ParamIndex=6
|   | `-ParagraphComment 0x55887c454710 <col:27, col:76>
|   |   `-TextComment 0x55887c4546e0 <col:27, col:76> Text="  The size, in bytes, of the extended data buffer."
|   |-ParagraphComment 0x55887c454760 <line:277:1, col:2>
|   | `-TextComment 0x55887c454730 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c454780 <col:3, line:278:2> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c454820 <line:277:23, line:278:2>
|   |   |-TextComment 0x55887c4547d0 <line:277:23, col:62> Text="           The status code was reported."
|   |   `-TextComment 0x55887c4547f0 <line:278:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c454840 <col:3, line:280:2> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|   | `-ParagraphComment 0x55887c454920 <line:278:32, line:280:2>
|   |   |-TextComment 0x55887c4548a0 <line:278:32, col:76> Text="  There were not enough resources to allocate"
|   |   |-TextComment 0x55887c4548c0 <line:279:1, col:79> Text="                                 the extended data section if it was specified."
|   |   `-TextComment 0x55887c4548e0 <line:280:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c454940 <col:3, line:281:2> Name="retval" Arg[0]="EFI_UNSUPPORTED"
|   | `-ParagraphComment 0x55887c4549e0 <line:280:27, line:281:2>
|   |   |-TextComment 0x55887c454990 <line:280:27, col:73> Text="       The report status code is not supported."
|   |   `-TextComment 0x55887c4549b0 <line:281:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c454a00 <col:3, line:282:56> Name="retval" Arg[0]="EFI_DEVICE_ERROR"
|     `-ParagraphComment 0x55887c454ab0 <line:281:28, line:282:56>
|       |-TextComment 0x55887c454a60 <line:281:28, col:80> Text="      A call to a Report Status Code Library function"
|       `-TextComment 0x55887c454a80 <line:282:1, col:56> Text="                                 is already in progress."
|-FunctionDecl 0x55887c2c82e0 <line:309:1, line:313:3> line:311:1 used ReportProgressCodeEnabled 'BOOLEAN (void)'
| `-FullComment 0x55887c454ec0 <line:298:1, line:306:58>
|   |-ParagraphComment 0x55887c454c00 <line:298:1, col:68>
|   | `-TextComment 0x55887c454bd0 <col:1, col:68> Text="  Returns TRUE if status codes of type EFI_PROGRESS_CODE are enabled"
|   |-ParagraphComment 0x55887c454c70 <line:300:1, line:301:77>
|   | |-TextComment 0x55887c454c20 <line:300:1, col:85> Text="  This function returns TRUE if the REPORT_STATUS_CODE_PROPERTY_PROGRESS_CODE_ENABLED"
|   | `-TextComment 0x55887c454c40 <line:301:1, col:77> Text="  bit of PcdReportStatusCodeProperyMask is set.  Otherwise FALSE is returned."
|   |-ParagraphComment 0x55887c454cc0 <line:303:1, col:2>
|   | `-TextComment 0x55887c454c90 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c454ce0 <col:3, line:305:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c454db0 <line:303:16, line:305:2>
|   |   |-TextComment 0x55887c454d30 <line:303:16, col:78> Text="   The REPORT_STATUS_CODE_PROPERTY_PROGRESS_CODE_ENABLED bit of"
|   |   |-TextComment 0x55887c454d50 <line:304:1, col:56> Text="                  PcdReportStatusCodeProperyMask is set."
|   |   `-TextComment 0x55887c454d70 <line:305:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c454dd0 <col:3, line:306:58> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c454e70 <line:305:17, line:306:58>
|       |-TextComment 0x55887c454e20 <line:305:17, col:78> Text="  The REPORT_STATUS_CODE_PROPERTY_PROGRESS_CODE_ENABLED bit of"
|       `-TextComment 0x55887c454e40 <line:306:1, col:58> Text="                  PcdReportStatusCodeProperyMask is clear."
|-FunctionDecl 0x55887c2c8440 <line:327:1, line:331:3> line:329:1 used ReportErrorCodeEnabled 'BOOLEAN (void)'
| `-FullComment 0x55887c455220 <line:316:1, line:324:58>
|   |-ParagraphComment 0x55887c454f60 <line:316:1, col:65>
|   | `-TextComment 0x55887c454f30 <col:1, col:65> Text="  Returns TRUE if status codes of type EFI_ERROR_CODE are enabled"
|   |-ParagraphComment 0x55887c454fd0 <line:318:1, line:319:78>
|   | |-TextComment 0x55887c454f80 <line:318:1, col:82> Text="  This function returns TRUE if the REPORT_STATUS_CODE_PROPERTY_ERROR_CODE_ENABLED"
|   | `-TextComment 0x55887c454fa0 <line:319:1, col:78> Text="  bit of PcdReportStatusCodeProperyMask is set.  Otherwise, FALSE is returned."
|   |-ParagraphComment 0x55887c455020 <line:321:1, col:2>
|   | `-TextComment 0x55887c454ff0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c455040 <col:3, line:323:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c455110 <line:321:16, line:323:2>
|   |   |-TextComment 0x55887c455090 <line:321:16, col:75> Text="   The REPORT_STATUS_CODE_PROPERTY_ERROR_CODE_ENABLED bit of"
|   |   |-TextComment 0x55887c4550b0 <line:322:1, col:56> Text="                  PcdReportStatusCodeProperyMask is set."
|   |   `-TextComment 0x55887c4550d0 <line:323:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c455130 <col:3, line:324:58> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c4551d0 <line:323:17, line:324:58>
|       |-TextComment 0x55887c455180 <line:323:17, col:75> Text="  The REPORT_STATUS_CODE_PROPERTY_ERROR_CODE_ENABLED bit of"
|       `-TextComment 0x55887c4551a0 <line:324:1, col:58> Text="                  PcdReportStatusCodeProperyMask is clear."
|-FunctionDecl 0x55887c2c85a0 <line:345:1, line:349:3> line:347:1 used ReportDebugCodeEnabled 'BOOLEAN (void)'
| `-FullComment 0x55887c455580 <line:334:1, line:342:58>
|   |-ParagraphComment 0x55887c4552c0 <line:334:1, col:65>
|   | `-TextComment 0x55887c455290 <col:1, col:65> Text="  Returns TRUE if status codes of type EFI_DEBUG_CODE are enabled"
|   |-ParagraphComment 0x55887c455330 <line:336:1, line:337:77>
|   | |-TextComment 0x55887c4552e0 <line:336:1, col:82> Text="  This function returns TRUE if the REPORT_STATUS_CODE_PROPERTY_DEBUG_CODE_ENABLED"
|   | `-TextComment 0x55887c455300 <line:337:1, col:77> Text="  bit of PcdReportStatusCodeProperyMask is set.  Otherwise FALSE is returned."
|   |-ParagraphComment 0x55887c455380 <line:339:1, col:2>
|   | `-TextComment 0x55887c455350 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c4553a0 <col:3, line:341:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c455470 <line:339:16, line:341:2>
|   |   |-TextComment 0x55887c4553f0 <line:339:16, col:75> Text="   The REPORT_STATUS_CODE_PROPERTY_DEBUG_CODE_ENABLED bit of"
|   |   |-TextComment 0x55887c455410 <line:340:1, col:56> Text="                  PcdReportStatusCodeProperyMask is set."
|   |   `-TextComment 0x55887c455430 <line:341:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c455490 <col:3, line:342:58> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c455530 <line:341:17, line:342:58>
|       |-TextComment 0x55887c4554e0 <line:341:17, col:75> Text="  The REPORT_STATUS_CODE_PROPERTY_DEBUG_CODE_ENABLED bit of"
|       `-TextComment 0x55887c455500 <line:342:1, col:58> Text="                  PcdReportStatusCodeProperyMask is clear."
|-FunctionDecl 0x55887c2c8a18 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/UefiDecompressLib.h:56:1, line:63:3> line:58:1 used UefiDecompressGetInfo 'RETURN_STATUS (const void *, UINT32, UINT32 *, UINT32 *)'
| |-ParmVarDecl 0x55887c2c8770 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/UefiDecompressLib.h:59:20> col:20 Source 'const void *'
| |-ParmVarDecl 0x55887c2c87e8 <line:60:7, col:19> col:19 SourceSize 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c2c8860 <line:61:7, col:20> col:20 DestinationSize 'UINT32 *'
| |-ParmVarDecl 0x55887c2c88d8 <line:62:7, col:20> col:20 ScratchSize 'UINT32 *'
| `-FullComment 0x55887c456000 <line:18:1, line:54:41>
|   |-ParagraphComment 0x55887c455670 <line:18:1, line:20:45>
|   | |-TextComment 0x55887c4555f0 <line:18:1, col:71> Text="  Given a compressed source buffer, this function retrieves the size of"
|   | |-TextComment 0x55887c455610 <line:19:1, col:69> Text="  the uncompressed buffer and the size of the scratch buffer required"
|   | `-TextComment 0x55887c455630 <line:20:1, col:45> Text="  to decompress the compressed source buffer."
|   |-ParagraphComment 0x55887c455850 <line:22:1, line:32:66>
|   | |-TextComment 0x55887c455690 <line:22:1, col:80> Text="  Retrieves the size of the uncompressed buffer and the temporary scratch buffer"
|   | |-TextComment 0x55887c4556b0 <line:23:1, col:71> Text="  required to decompress the buffer specified by Source and SourceSize."
|   | |-TextComment 0x55887c4556d0 <line:24:1, col:81> Text="  If the size of the uncompressed buffer or the size of the scratch buffer cannot"
|   | |-TextComment 0x55887c4556f0 <line:25:1, col:76> Text="  be determined from the compressed data specified by Source and SourceData,"
|   | |-TextComment 0x55887c455710 <line:26:1, col:85> Text="  then RETURN_INVALID_PARAMETER is returned.  Otherwise, the size of the uncompressed"
|   | |-TextComment 0x55887c455730 <line:27:1, col:83> Text="  buffer is returned in DestinationSize, the size of the scratch buffer is returned"
|   | |-TextComment 0x55887c455750 <line:28:1, col:49> Text="  in ScratchSize, and RETURN_SUCCESS is returned."
|   | |-TextComment 0x55887c455770 <line:29:1, col:76> Text="  This function does not have scratch buffer available to perform a thorough"
|   | |-TextComment 0x55887c455790 <line:30:1, col:85> Text="  checking of the validity of the source data.  It just retrieves the "Original Size""
|   | |-TextComment 0x55887c4557b0 <line:31:1, col:85> Text="  field from the beginning bytes of the source data and output it as DestinationSize."
|   | `-TextComment 0x55887c4557d0 <line:32:1, col:66> Text="  And ScratchSize is specific to the decompression implementation."
|   |-ParagraphComment 0x55887c4558f0 <line:34:1, line:36:40>
|   | |-TextComment 0x55887c455870 <line:34:1, col:35> Text="  If Source is NULL, then ASSERT()."
|   | |-TextComment 0x55887c455890 <line:35:1, col:44> Text="  If DestinationSize is NULL, then ASSERT()."
|   | `-TextComment 0x55887c4558b0 <line:36:1, col:40> Text="  If ScratchSize is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c455940 <line:38:1, col:2>
|   | `-TextComment 0x55887c455910 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c455960 <col:3, line:39:2> [in] implicitly Param="Source" ParamIndex=0
|   | `-ParagraphComment 0x55887c455a10 <line:38:17, line:39:2>
|   |   |-TextComment 0x55887c4559c0 <line:38:17, col:75> Text="          The source buffer containing the compressed data."
|   |   `-TextComment 0x55887c4559e0 <line:39:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c455a30 <col:3, line:40:2> [in] implicitly Param="SourceSize" ParamIndex=1
|   | `-ParagraphComment 0x55887c455ae0 <line:39:21, line:40:2>
|   |   |-TextComment 0x55887c455a90 <line:39:21, col:67> Text="      The size, in bytes, of the source buffer."
|   |   `-TextComment 0x55887c455ab0 <line:40:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c455b00 <col:3, line:43:2> [in] implicitly Param="DestinationSize" ParamIndex=2
|   | `-ParagraphComment 0x55887c455c00 <line:40:26, line:43:2>
|   |   |-TextComment 0x55887c455b60 <line:40:26, col:85> Text=" A pointer to the size, in bytes, of the uncompressed buffer"
|   |   |-TextComment 0x55887c455b80 <line:41:1, col:85> Text="                          that will be generated when the compressed buffer specified"
|   |   |-TextComment 0x55887c455ba0 <line:42:1, col:67> Text="                          by Source and SourceSize is decompressed."
|   |   `-TextComment 0x55887c455bc0 <line:43:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c455c20 <col:3, line:45:51> [in] implicitly Param="ScratchSize" ParamIndex=3
|   | `-ParagraphComment 0x55887c455d00 <line:43:22, line:45:51>
|   |   |-TextComment 0x55887c455c80 <line:43:22, col:85> Text="     A pointer to the size, in bytes, of the scratch buffer that"
|   |   |-TextComment 0x55887c455ca0 <line:44:1, col:83> Text="                          is required to decompress the compressed buffer specified"
|   |   `-TextComment 0x55887c455cc0 <line:45:1, col:51> Text="                          by Source and SourceSize."
|   |-ParagraphComment 0x55887c455d50 <line:47:1, col:2>
|   | `-TextComment 0x55887c455d20 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c455d70 <col:3, line:50:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c455e60 <line:47:26, line:50:2>
|   |   |-TextComment 0x55887c455dc0 <line:47:26, col:72> Text=" The size of the uncompressed data was returned"
|   |   |-TextComment 0x55887c455de0 <line:48:1, col:72> Text="                          in DestinationSize and the size of the scratch"
|   |   |-TextComment 0x55887c455e00 <line:49:1, col:61> Text="                          buffer was returned in ScratchSize."
|   |   `-TextComment 0x55887c455e20 <line:50:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c455e80 <col:3, line:54:41> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c455f80 <line:51:1, line:54:41>
|       |-TextComment 0x55887c455ee0 <line:51:1, col:74> Text="                          The size of the uncompressed data or the size of"
|       |-TextComment 0x55887c455f00 <line:52:1, col:70> Text="                          the scratch buffer cannot be determined from"
|       |-TextComment 0x55887c455f20 <line:53:1, col:65> Text="                          the compressed data specified by Source"
|       `-TextComment 0x55887c455f40 <line:54:1, col:41> Text="                          and SourceSize."
|-FunctionDecl 0x55887c2c8d48 <line:94:1, line:100:3> line:96:1 used UefiDecompress 'RETURN_STATUS (const void *, void *, void *)'
| |-ParmVarDecl 0x55887c2c8b20 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/UefiDecompressLib.h:97:19> col:19 Source 'const void *'
| |-ParmVarDecl 0x55887c2c8ba0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/UefiDecompressLib.h:98:19> col:19 Destination 'void *'
| |-ParmVarDecl 0x55887c2c8c20 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/UefiDecompressLib.h:99:19> col:19 Scratch 'void *'
| `-FullComment 0x55887c456860 <line:66:1, line:92:61>
|   |-ParagraphComment 0x55887c4560a0 <line:66:1, col:42>
|   | `-TextComment 0x55887c456070 <col:1, col:42> Text="  Decompresses a compressed source buffer."
|   |-ParagraphComment 0x55887c456230 <line:68:1, line:76:44>
|   | |-TextComment 0x55887c4560c0 <line:68:1, col:50> Text="  Extracts decompressed data to its original form."
|   | |-TextComment 0x55887c4560e0 <line:69:1, col:82> Text="  This function is designed so that the decompression algorithm can be implemented"
|   | |-TextComment 0x55887c456100 <line:70:1, col:82> Text="  without using any memory services.  As a result, this function is not allowed to"
|   | |-TextComment 0x55887c456120 <line:71:1, col:80> Text="  call any memory allocation services in its implementation.  It is the caller's"
|   | |-TextComment 0x55887c456140 <line:72:1, col:74> Text="  responsibility to allocate and free the Destination and Scratch buffers."
|   | |-TextComment 0x55887c456160 <line:73:1, col:80> Text="  If the compressed source data specified by Source is successfully decompressed"
|   | |-TextComment 0x55887c456180 <line:74:1, col:83> Text="  into Destination, then RETURN_SUCCESS is returned.  If the compressed source data"
|   | |-TextComment 0x55887c4561a0 <line:75:1, col:63> Text="  specified by Source is not in a valid compressed data format,"
|   | `-TextComment 0x55887c4561c0 <line:76:1, col:44> Text="  then RETURN_INVALID_PARAMETER is returned."
|   |-ParagraphComment 0x55887c4562d0 <line:78:1, line:80:77>
|   | |-TextComment 0x55887c456250 <line:78:1, col:35> Text="  If Source is NULL, then ASSERT()."
|   | |-TextComment 0x55887c456270 <line:79:1, col:40> Text="  If Destination is NULL, then ASSERT()."
|   | `-TextComment 0x55887c456290 <line:80:1, col:77> Text="  If the required scratch buffer size > 0 and Scratch is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c456320 <line:82:1, col:2>
|   | `-TextComment 0x55887c4562f0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c456340 <col:3, line:83:2> [in] implicitly Param="Source" ParamIndex=0
|   | `-ParagraphComment 0x55887c4563f0 <line:82:17, line:83:2>
|   |   |-TextComment 0x55887c4563a0 <line:82:17, col:71> Text="      The source buffer containing the compressed data."
|   |   `-TextComment 0x55887c4563c0 <line:83:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c456410 <col:3, line:84:2> [in] implicitly Param="Destination" ParamIndex=1
|   | `-ParagraphComment 0x55887c4564c0 <line:83:22, line:84:2>
|   |   |-TextComment 0x55887c456470 <line:83:22, col:75> Text=" The destination buffer to store the decompressed data"
|   |   `-TextComment 0x55887c456490 <line:84:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4564e0 <col:3, line:86:56> [in] implicitly Param="Scratch" ParamIndex=2
|   | `-ParagraphComment 0x55887c4565c0 <line:84:18, line:86:56>
|   |   |-TextComment 0x55887c456540 <line:84:18, col:91> Text="     A temporary scratch buffer that is used to perform the decompression."
|   |   |-TextComment 0x55887c456560 <line:85:1, col:75> Text="                      This is an optional parameter that may be NULL if the"
|   |   `-TextComment 0x55887c456580 <line:86:1, col:56> Text="                      required scratch buffer size is 0."
|   |-ParagraphComment 0x55887c456630 <line:88:1, col:2>
|   | `-TextComment 0x55887c4565e0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c456650 <col:3, line:90:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c456720 <line:88:26, line:90:2>
|   |   |-TextComment 0x55887c4566a0 <line:88:26, col:67> Text=" Decompression completed successfully, and"
|   |   |-TextComment 0x55887c4566c0 <line:89:1, col:77> Text="                          the uncompressed buffer is returned in Destination."
|   |   `-TextComment 0x55887c4566e0 <line:90:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c456740 <col:3, line:92:61> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c4567f0 <line:91:1, line:92:61>
|       |-TextComment 0x55887c4567a0 <line:91:1, col:76> Text="                          The source buffer specified by Source is corrupted"
|       `-TextComment 0x55887c4567c0 <line:92:1, col:61> Text="                          (not in a valid compressed format)."
|-TypedefDecl 0x55887c2c91b8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ExtractGuidedSectionLib.h:54:1, line:61:3> line:56:10 referenced EXTRACT_GUIDED_SECTION_GET_INFO_HANDLER 'RETURN_STATUS (*)(const void *, UINT32 *, UINT32 *, UINT16 *)'
| |-PointerType 0x55887c2c9140 'RETURN_STATUS (*)(const void *, UINT32 *, UINT32 *, UINT16 *)'
| | `-ParenType 0x55887c2c90e0 'RETURN_STATUS (const void *, UINT32 *, UINT32 *, UINT16 *)' sugar
| |   `-FunctionProtoType 0x55887c2c9090 'RETURN_STATUS (const void *, UINT32 *, UINT32 *, UINT16 *)' cdecl
| |     |-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     | |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     | `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |   |-Typedef 0x55887c04a020 'UINTN'
| |     |   `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |     |-Typedef 0x55887c049930 'UINT64'
| |     |     `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c1299b0 'const void *'
| |     | `-QualType 0x55887bfe9011 'const void' const
| |     |   `-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887c12dee0 'UINT32 *'
| |     | `-TypedefType 0x55887c04a5d0 'UINT32' sugar
| |     |   |-Typedef 0x55887c049a70 'UINT32'
| |     |   `-BuiltinType 0x55887bfe9150 'unsigned int'
| |     |-PointerType 0x55887c12dee0 'UINT32 *'
| |     | `-TypedefType 0x55887c04a5d0 'UINT32' sugar
| |     |   |-Typedef 0x55887c049a70 'UINT32'
| |     |   `-BuiltinType 0x55887bfe9150 'unsigned int'
| |     `-PointerType 0x55887c12e980 'UINT16 *'
| |       `-TypedefType 0x55887c04a650 'UINT16' sugar
| |         |-Typedef 0x55887c049bb0 'UINT16'
| |         `-BuiltinType 0x55887bfe9130 'unsigned short'
| `-FullComment 0x55887c4572b0 <line:22:1, line:51:117>
|   |-ParagraphComment 0x55887c456920 <line:22:1, line:23:94>
|   | |-TextComment 0x55887c4568d0 <line:22:1, col:78> Text="  Examines a GUIDed section and returns the size of the decoded buffer and the"
|   | `-TextComment 0x55887c4568f0 <line:23:1, col:94> Text="  size of an optional scratch buffer required to actually decode the data in a GUIDed section."
|   |-ParagraphComment 0x55887c456ab0 <line:25:1, line:33:87>
|   | |-TextComment 0x55887c456940 <line:25:1, col:54> Text="  Examines a GUIDed section specified by InputSection."
|   | |-TextComment 0x55887c456960 <line:26:1, col:78> Text="  If GUID for InputSection does not match the GUID that this handler supports,"
|   | |-TextComment 0x55887c456980 <line:27:1, col:38> Text="  then RETURN_UNSUPPORTED is returned."
|   | |-TextComment 0x55887c4569a0 <line:28:1, col:69> Text="  If the required information can not be retrieved from InputSection,"
|   | |-TextComment 0x55887c4569c0 <line:29:1, col:44> Text="  then RETURN_INVALID_PARAMETER is returned."
|   | |-TextComment 0x55887c4569e0 <line:30:1, col:77> Text="  If the GUID of InputSection does match the GUID that this handler supports,"
|   | |-TextComment 0x55887c456a00 <line:31:1, col:83> Text="  then the size required to hold the decoded buffer is returned in OututBufferSize,"
|   | |-TextComment 0x55887c456a20 <line:32:1, col:93> Text="  the size of an optional scratch buffer is returned in ScratchSize, and the Attributes field"
|   | `-TextComment 0x55887c456a40 <line:33:1, col:87> Text="  from EFI_GUID_DEFINED_SECTION header of InputSection is returned in SectionAttribute."
|   |-ParagraphComment 0x55887c456b70 <line:35:1, line:38:45>
|   | |-TextComment 0x55887c456ad0 <line:35:1, col:41> Text="  If InputSection is NULL, then ASSERT()."
|   | |-TextComment 0x55887c456af0 <line:36:1, col:45> Text="  If OutputBufferSize is NULL, then ASSERT()."
|   | |-TextComment 0x55887c456b10 <line:37:1, col:46> Text="  If ScratchBufferSize is NULL, then ASSERT()."
|   | `-TextComment 0x55887c456b30 <line:38:1, col:45> Text="  If SectionAttribute is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c456bc0 <line:41:1, col:2>
|   | `-TextComment 0x55887c456b90 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c456be0 <col:3, line:42:2> [in] explicitly Param="InputSection" ParamIndex=0
|   | `-ParagraphComment 0x55887c456ca0 <line:41:27, line:42:2>
|   |   |-TextComment 0x55887c456c50 <line:41:27, col:88> Text="       A pointer to a GUIDed section of an FFS formatted file."
|   |   `-TextComment 0x55887c456c70 <line:42:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c456cc0 <col:3, line:44:2> [out] explicitly Param="OutputBufferSize" ParamIndex=1
|   | `-ParagraphComment 0x55887c456db0 <line:42:31, line:44:2>
|   |   |-TextComment 0x55887c456d30 <line:42:31, col:94> Text="   A pointer to the size, in bytes, of an output buffer required"
|   |   |-TextComment 0x55887c456d50 <line:43:1, col:86> Text="                                 if the buffer specified by InputSection were decoded."
|   |   `-TextComment 0x55887c456d70 <line:44:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c456dd0 <col:3, line:46:2> [out] explicitly Param="ScratchBufferSize" ParamIndex=2
|   | `-ParagraphComment 0x55887c456ec0 <line:44:32, line:46:2>
|   |   |-TextComment 0x55887c456e40 <line:44:32, col:91> Text="  A pointer to the size, in bytes, required as scratch space"
|   |   |-TextComment 0x55887c456e60 <line:45:1, col:86> Text="                                 if the buffer specified by InputSection were decoded."
|   |   `-TextComment 0x55887c456e80 <line:46:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c456ee0 <col:3, line:47:91> [out] explicitly Param="SectionAttribute" ParamIndex=3
|   | `-ParagraphComment 0x55887c456fa0 <line:46:31, line:47:91>
|   |   |-TextComment 0x55887c456f50 <line:46:31, col:102> Text="   A pointer to the attributes of the GUIDed section. See the Attributes"
|   |   `-TextComment 0x55887c456f70 <line:47:1, col:91> Text="                                 field of EFI_GUID_DEFINED_SECTION in the PI Specification."
|   |-ParagraphComment 0x55887c456ff0 <line:49:1, col:2>
|   | `-TextComment 0x55887c456fc0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c457010 <col:3, line:50:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c4570b0 <line:49:26, line:50:2>
|   |   |-TextComment 0x55887c457060 <line:49:26, col:85> Text="            The information about InputSection was returned."
|   |   `-TextComment 0x55887c457080 <line:50:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c4570d0 <col:3, line:51:2> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|   | `-ParagraphComment 0x55887c457180 <line:50:30, line:51:2>
|   |   |-TextComment 0x55887c457130 <line:50:30, col:121> Text="        The section specified by InputSection does not match the GUID this handler supports."
|   |   `-TextComment 0x55887c457150 <line:51:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c4571a0 <col:3, col:117> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c457230 <col:36, col:117>
|       `-TextComment 0x55887c457200 <col:36, col:117> Text="  The information can not be retrieved from the section specified by InputSection."
|-TypedefDecl 0x55887c2d4098 <line:96:1, line:103:3> line:98:10 referenced EXTRACT_GUIDED_SECTION_DECODE_HANDLER 'RETURN_STATUS (*)(const void *, void **, void *, UINT32 *)'
| |-PointerType 0x55887c2d4020 'RETURN_STATUS (*)(const void *, void **, void *, UINT32 *)'
| | `-ParenType 0x55887c2d3fc0 'RETURN_STATUS (const void *, void **, void *, UINT32 *)' sugar
| |   `-FunctionProtoType 0x55887c2d3f70 'RETURN_STATUS (const void *, void **, void *, UINT32 *)' cdecl
| |     |-TypedefType 0x55887c06c2a0 'RETURN_STATUS' sugar
| |     | |-Typedef 0x55887c067a40 'RETURN_STATUS'
| |     | `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     |   |-Typedef 0x55887c04a020 'UINTN'
| |     |   `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |     |-Typedef 0x55887c049930 'UINT64'
| |     |     `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887c1299b0 'const void *'
| |     | `-QualType 0x55887bfe9011 'const void' const
| |     |   `-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887c164990 'void **'
| |     | `-PointerType 0x55887bfe9730 'void *'
| |     |   `-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887bfe9730 'void *'
| |     | `-BuiltinType 0x55887bfe9010 'void'
| |     `-PointerType 0x55887c12dee0 'UINT32 *'
| |       `-TypedefType 0x55887c04a5d0 'UINT32' sugar
| |         |-Typedef 0x55887c049a70 'UINT32'
| |         `-BuiltinType 0x55887bfe9150 'unsigned int'
| `-FullComment 0x55887c457cd0 <line:64:1, line:93:94>
|   |-ParagraphComment 0x55887c457350 <line:64:1, col:65>
|   | `-TextComment 0x55887c457320 <col:1, col:65> Text="  Decodes a GUIDed section into a caller allocated output buffer."
|   |-ParagraphComment 0x55887c4574b0 <line:66:1, line:73:87>
|   | |-TextComment 0x55887c457370 <line:66:1, col:55> Text="  Decodes the GUIDed section specified by InputSection."
|   | |-TextComment 0x55887c457390 <line:67:1, col:115> Text="  If GUID for InputSection does not match the GUID that this handler supports, then RETURN_UNSUPPORTED is returned."
|   | |-TextComment 0x55887c4573b0 <line:68:1, col:92> Text="  If the data in InputSection can not be decoded, then RETURN_INVALID_PARAMETER is returned."
|   | |-TextComment 0x55887c4573d0 <line:69:1, col:95> Text="  If the GUID of InputSection does match the GUID that this handler supports, then InputSection"
|   | |-TextComment 0x55887c4573f0 <line:70:1, col:92> Text="  is decoded into the buffer specified by OutputBuffer and the authentication status of this"
|   | |-TextComment 0x55887c457410 <line:71:1, col:98> Text="  decode operation is returned in AuthenticationStatus.  If the decoded buffer is identical to the"
|   | |-TextComment 0x55887c457430 <line:72:1, col:98> Text="  data in InputSection, then OutputBuffer is set to point at the data in InputSection.  Otherwise,"
|   | `-TextComment 0x55887c457450 <line:73:1, col:87> Text="  the decoded data will be placed in caller allocated buffer specified by OutputBuffer."
|   |-ParagraphComment 0x55887c457570 <line:75:1, line:78:49>
|   | |-TextComment 0x55887c4574d0 <line:75:1, col:41> Text="  If InputSection is NULL, then ASSERT()."
|   | |-TextComment 0x55887c4574f0 <line:76:1, col:41> Text="  If OutputBuffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c457510 <line:77:1, col:94> Text="  If ScratchBuffer is NULL and this decode operation requires a scratch buffer, then ASSERT()."
|   | `-TextComment 0x55887c457530 <line:78:1, col:49> Text="  If AuthenticationStatus is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c4575c0 <line:81:1, col:2>
|   | `-TextComment 0x55887c457590 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4575e0 <col:3, line:82:2> [in] explicitly Param="InputSection" ParamIndex=0
|   | `-ParagraphComment 0x55887c4576a0 <line:81:27, line:82:2>
|   |   |-TextComment 0x55887c457650 <line:81:27, col:83> Text="  A pointer to a GUIDed section of an FFS formatted file."
|   |   `-TextComment 0x55887c457670 <line:82:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4576c0 <col:3, line:83:2> [out] explicitly Param="OutputBuffer" ParamIndex=1
|   | `-ParagraphComment 0x55887c457780 <line:82:27, line:83:2>
|   |   |-TextComment 0x55887c457730 <line:82:27, col:97> Text="  A pointer to a buffer that contains the result of a decode operation."
|   |   `-TextComment 0x55887c457750 <line:83:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4577a0 <col:3, line:85:2> [out] explicitly Param="ScratchBuffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c457890 <line:83:28, line:85:2>
|   |   |-TextComment 0x55887c457810 <line:83:28, col:91> Text=" A caller allocated buffer that may be required by this function"
|   |   |-TextComment 0x55887c457830 <line:84:1, col:80> Text="                            as a scratch buffer to perform the decode operation."
|   |   `-TextComment 0x55887c457850 <line:85:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4578b0 <col:3, line:89:57> [out] explicitly Param="AuthenticationStatus" ParamIndex=3
|   | `-ParagraphComment 0x55887c4579c0 <line:86:1, line:89:57>
|   |   |-TextComment 0x55887c457920 <line:86:1, col:96> Text="                            A pointer to the authentication status of the decoded output buffer."
|   |   |-TextComment 0x55887c457940 <line:87:1, col:116> Text="                            See the definition of authentication status in the EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI"
|   |   |-TextComment 0x55887c457960 <line:88:1, col:99> Text="                            section of the PI Specification. EFI_AUTH_STATUS_PLATFORM_OVERRIDE must"
|   |   `-TextComment 0x55887c457980 <line:89:1, col:57> Text="                            never be set by this handler."
|   |-ParagraphComment 0x55887c457a10 <line:91:1, col:2>
|   | `-TextComment 0x55887c4579e0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c457a30 <col:3, line:92:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c457ad0 <line:91:26, line:92:2>
|   |   |-TextComment 0x55887c457a80 <line:91:26, col:86> Text="            The buffer specified by InputSection was decoded."
|   |   `-TextComment 0x55887c457aa0 <line:92:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c457af0 <col:3, line:93:2> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|   | `-ParagraphComment 0x55887c457ba0 <line:92:30, line:93:2>
|   |   |-TextComment 0x55887c457b50 <line:92:30, col:121> Text="        The section specified by InputSection does not match the GUID this handler supports."
|   |   `-TextComment 0x55887c457b70 <line:93:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c457bc0 <col:3, col:94> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c457c50 <col:36, col:94>
|       `-TextComment 0x55887c457c20 <col:36, col:94> Text="  The section specified by InputSection can not be decoded."
|-FunctionDecl 0x55887c2d43b8 <line:129:1, line:135:3> line:131:1 ExtractGuidedSectionRegisterHandlers 'RETURN_STATUS (const GUID *, EXTRACT_GUIDED_SECTION_GET_INFO_HANDLER, EXTRACT_GUIDED_SECTION_DECODE_HANDLER)'
| |-ParmVarDecl 0x55887c2d4158 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ExtractGuidedSectionLib.h:132:55> col:55 SectionGuid 'const GUID *'
| |-ParmVarDecl 0x55887c2d41f0 <line:133:13, col:54> col:54 GetInfoHandler 'EXTRACT_GUIDED_SECTION_GET_INFO_HANDLER':'RETURN_STATUS (*)(const void *, UINT32 *, UINT32 *, UINT16 *)'
| |-ParmVarDecl 0x55887c2d4290 <line:134:13, col:54> col:54 DecodeHandler 'EXTRACT_GUIDED_SECTION_DECODE_HANDLER':'RETURN_STATUS (*)(const void *, void **, void *, UINT32 *)'
| `-FullComment 0x55887c458470 <line:106:1, line:126:102>
|   |-ParagraphComment 0x55887c457d90 <line:106:1, line:107:35>
|   | |-TextComment 0x55887c457d40 <line:106:1, col:110> Text="  Registers handlers of type EXTRACT_GUIDED_SECTION_GET_INFO_HANDLER and EXTRACT_GUIDED_SECTION_DECODE_HANDLER"
|   | `-TextComment 0x55887c457d60 <line:107:1, col:35> Text="  for a specific GUID section type."
|   |-ParagraphComment 0x55887c457e30 <line:109:1, line:111:113>
|   | |-TextComment 0x55887c457db0 <line:109:1, col:110> Text="  Registers the handlers specified by GetInfoHandler and DecodeHandler with the GUID specified by SectionGuid."
|   | |-TextComment 0x55887c457dd0 <line:110:1, col:109> Text="  If the GUID value specified by SectionGuid has already been registered, then return RETURN_ALREADY_STARTED."
|   | `-TextComment 0x55887c457df0 <line:111:1, col:113> Text="  If there are not enough resources available to register the handlers  then RETURN_OUT_OF_RESOURCES is returned."
|   |-ParagraphComment 0x55887c457ed0 <line:113:1, line:115:42>
|   | |-TextComment 0x55887c457e50 <line:113:1, col:40> Text="  If SectionGuid is NULL, then ASSERT()."
|   | |-TextComment 0x55887c457e70 <line:114:1, col:43> Text="  If GetInfoHandler is NULL, then ASSERT()."
|   | `-TextComment 0x55887c457e90 <line:115:1, col:42> Text="  If DecodeHandler is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c457f20 <line:117:1, col:2>
|   | `-TextComment 0x55887c457ef0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c457f40 <col:3, line:119:2> [in] explicitly Param="SectionGuid" ParamIndex=0
|   | `-ParagraphComment 0x55887c458030 <line:117:26, line:119:2>
|   |   |-TextComment 0x55887c457fb0 <line:117:26, col:83> Text="    A pointer to the GUID associated with the the handlers"
|   |   |-TextComment 0x55887c457fd0 <line:118:1, col:73> Text="                             of the GUIDed section type being registered."
|   |   `-TextComment 0x55887c457ff0 <line:119:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c458050 <col:3, line:122:2> [in] explicitly Param="GetInfoHandler" ParamIndex=1
|   | `-ParagraphComment 0x55887c458160 <line:119:29, line:122:2>
|   |   |-TextComment 0x55887c4580c0 <line:119:29, col:97> Text=" Pointer to a function that examines a GUIDed section and returns the"
|   |   |-TextComment 0x55887c4580e0 <line:120:1, col:98> Text="                             size of the decoded buffer and the size of an optional scratch buffer"
|   |   |-TextComment 0x55887c458100 <line:121:1, col:86> Text="                             required to actually decode the data in a GUIDed section."
|   |   `-TextComment 0x55887c458120 <line:122:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c458180 <col:3, line:123:53> [in] explicitly Param="DecodeHandler" ParamIndex=2
|   | `-ParagraphComment 0x55887c458240 <line:122:28, line:123:53>
|   |   |-TextComment 0x55887c4581f0 <line:122:28, col:94> Text="  Pointer to a function that decodes a GUIDed section into a caller"
|   |   `-TextComment 0x55887c458210 <line:123:1, col:53> Text="                             allocated output buffer."
|   |-ParagraphComment 0x55887c458290 <line:125:1, col:2>
|   | `-TextComment 0x55887c458260 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c4582b0 <col:3, line:126:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c458350 <line:125:26, line:126:2>
|   |   |-TextComment 0x55887c458300 <line:125:26, col:65> Text="           The handlers were registered."
|   |   `-TextComment 0x55887c458320 <line:126:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c458370 <col:3, col:102> Name="retval" Arg[0]="RETURN_OUT_OF_RESOURCES"
|     `-ParagraphComment 0x55887c458400 <col:35, col:102>
|       `-TextComment 0x55887c4583d0 <col:35, col:102> Text="  There are not enough resources available to register the handlers."
|-FunctionDecl 0x55887c2d4608 <line:151:1, line:155:3> line:153:1 used ExtractGuidedSectionGetGuidList 'UINTN (GUID **)'
| |-ParmVarDecl 0x55887c2d4510 <line:154:8, col:16> col:16 ExtractHandlerGuidTable 'GUID **'
| `-FullComment 0x55887c458820 <line:138:1, line:148:61>
|   |-ParagraphComment 0x55887c458510 <line:138:1, col:99>
|   | `-TextComment 0x55887c4584e0 <col:1, col:99> Text="  Retrieve the list GUIDs that have been registered through ExtractGuidedSectionRegisterHandlers()."
|   |-ParagraphComment 0x55887c4585d0 <line:140:1, line:143:52>
|   | |-TextComment 0x55887c458530 <line:140:1, col:92> Text="  Sets ExtractHandlerGuidTable so it points at a callee allocated array of registered GUIDs."
|   | |-TextComment 0x55887c458550 <line:141:1, col:99> Text="  The total number of GUIDs in the array are returned. Since the array of GUIDs is callee allocated"
|   | |-TextComment 0x55887c458570 <line:142:1, col:62> Text="  and caller must treat this array of GUIDs as read-only data."
|   | `-TextComment 0x55887c458590 <line:143:1, col:52> Text="  If ExtractHandlerGuidTable is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c458620 <line:145:1, col:2>
|   | `-TextComment 0x55887c4585f0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c458640 <col:3, line:146:79> [out] explicitly Param="ExtractHandlerGuidTable" ParamIndex=0
|   | `-ParagraphComment 0x55887c458700 <line:145:39, line:146:79>
|   |   |-TextComment 0x55887c4586b0 <line:145:39, col:105> Text="  A pointer to the array of GUIDs that have been registered through"
|   |   `-TextComment 0x55887c4586d0 <line:146:1, col:79> Text="                                        ExtractGuidedSectionRegisterHandlers()."
|   |-ParagraphComment 0x55887c458750 <line:148:1, col:2>
|   | `-TextComment 0x55887c458720 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c458770 <col:3, col:61> Name="return"
|     `-ParagraphComment 0x55887c4587d0 <col:10, col:61>
|       `-TextComment 0x55887c4587a0 <col:10, col:61> Text=" the number of the supported extract guided Handler."
|-FunctionDecl 0x55887c2d4900 <line:191:1, line:198:3> line:193:1 used ExtractGuidedSectionGetInfo 'RETURN_STATUS (const void *, UINT32 *, UINT32 *, UINT16 *)'
| |-ParmVarDecl 0x55887c2d46f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ExtractGuidedSectionLib.h:194:22> col:22 InputSection 'const void *'
| |-ParmVarDecl 0x55887c2d4768 <line:195:13, col:22> col:22 OutputBufferSize 'UINT32 *'
| |-ParmVarDecl 0x55887c2d47e0 <line:196:13, col:22> col:22 ScratchBufferSize 'UINT32 *'
| |-ParmVarDecl 0x55887c2d4858 <line:197:13, col:22> col:22 SectionAttribute 'UINT16 *'
| `-FullComment 0x55887c4592b0 <line:158:1, line:188:69>
|   |-ParagraphComment 0x55887c458930 <line:158:1, line:161:83>
|   | |-TextComment 0x55887c458890 <line:158:1, col:99> Text="  Retrieves a GUID from a GUIDed section and uses that GUID to select an associated handler of type"
|   | |-TextComment 0x55887c4588b0 <line:159:1, col:106> Text="  EXTRACT_GUIDED_SECTION_GET_INFO_HANDLER that was registered with ExtractGuidedSectionRegisterHandlers()."
|   | |-TextComment 0x55887c4588d0 <line:160:1, col:103> Text="  The selected handler is used to retrieve and return the size of the decoded buffer and the size of an"
|   | `-TextComment 0x55887c4588f0 <line:161:1, col:83> Text="  optional scratch buffer required to actually decode the data in a GUIDed section."
|   |-ParagraphComment 0x55887c458a70 <line:163:1, line:169:59>
|   | |-TextComment 0x55887c458950 <line:163:1, col:54> Text="  Examines a GUIDed section specified by InputSection."
|   | |-TextComment 0x55887c458970 <line:164:1, col:117> Text="  If GUID for InputSection does not match any of the GUIDs registered through ExtractGuidedSectionRegisterHandlers(),"
|   | |-TextComment 0x55887c458990 <line:165:1, col:38> Text="  then RETURN_UNSUPPORTED is returned."
|   | |-TextComment 0x55887c4589b0 <line:166:1, col:109> Text="  If the GUID of InputSection does match the GUID that this handler supports, then the the associated handler"
|   | |-TextComment 0x55887c4589d0 <line:167:1, col:113> Text="  of type EXTRACT_GUIDED_SECTION_GET_INFO_HANDLER that was registered with ExtractGuidedSectionRegisterHandlers()"
|   | |-TextComment 0x55887c4589f0 <line:168:1, col:116> Text="  is used to retrieve the OututBufferSize, ScratchSize, and Attributes values. The return status from the handler of"
|   | `-TextComment 0x55887c458a10 <line:169:1, col:59> Text="  type EXTRACT_GUIDED_SECTION_GET_INFO_HANDLER is returned."
|   |-ParagraphComment 0x55887c458b30 <line:171:1, line:174:45>
|   | |-TextComment 0x55887c458a90 <line:171:1, col:41> Text="  If InputSection is NULL, then ASSERT()."
|   | |-TextComment 0x55887c458ab0 <line:172:1, col:45> Text="  If OutputBufferSize is NULL, then ASSERT()."
|   | |-TextComment 0x55887c458ad0 <line:173:1, col:46> Text="  If ScratchBufferSize is NULL, then ASSERT()."
|   | `-TextComment 0x55887c458af0 <line:174:1, col:45> Text="  If SectionAttribute is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c458b80 <line:176:1, col:2>
|   | `-TextComment 0x55887c458b50 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c458ba0 <col:3, line:177:2> [in] explicitly Param="InputSection" ParamIndex=0
|   | `-ParagraphComment 0x55887c458c60 <line:176:27, line:177:2>
|   |   |-TextComment 0x55887c458c10 <line:176:27, col:88> Text="       A pointer to a GUIDed section of an FFS formatted file."
|   |   `-TextComment 0x55887c458c30 <line:177:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c458c80 <col:3, line:179:2> [out] explicitly Param="OutputBufferSize" ParamIndex=1
|   | `-ParagraphComment 0x55887c458d70 <line:177:31, line:179:2>
|   |   |-TextComment 0x55887c458cf0 <line:177:31, col:108> Text="   A pointer to the size, in bytes, of an output buffer required if the buffer"
|   |   |-TextComment 0x55887c458d10 <line:178:1, col:72> Text="                                 specified by InputSection were decoded."
|   |   `-TextComment 0x55887c458d30 <line:179:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c458d90 <col:3, line:181:2> [out] explicitly Param="ScratchBufferSize" ParamIndex=2
|   | `-ParagraphComment 0x55887c458e80 <line:179:32, line:181:2>
|   |   |-TextComment 0x55887c458e00 <line:179:32, col:118> Text="  A pointer to the size, in bytes, required as scratch space if the buffer specified by"
|   |   |-TextComment 0x55887c458e20 <line:180:1, col:59> Text="                                 InputSection were decoded."
|   |   `-TextComment 0x55887c458e40 <line:181:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c458ea0 <col:3, line:182:82> [out] explicitly Param="SectionAttribute" ParamIndex=3
|   | `-ParagraphComment 0x55887c458f60 <line:181:31, line:182:82>
|   |   |-TextComment 0x55887c458f10 <line:181:31, col:112> Text="   A pointer to the attributes of the GUIDed section.  See the Attributes field of"
|   |   `-TextComment 0x55887c458f30 <line:182:1, col:82> Text="                                 EFI_GUID_DEFINED_SECTION in the PI Specification."
|   |-ParagraphComment 0x55887c458fb0 <line:184:1, col:2>
|   | `-TextComment 0x55887c458f80 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c458fd0 <col:3, line:185:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c459070 <line:184:26, line:185:2>
|   |   |-TextComment 0x55887c459020 <line:184:26, col:73> Text="      Get the required information successfully."
|   |   `-TextComment 0x55887c459040 <line:185:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c459090 <col:3, line:187:2> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|   | `-ParagraphComment 0x55887c459170 <line:185:30, line:187:2>
|   |   |-TextComment 0x55887c4590f0 <line:185:30, col:104> Text="  The GUID from the section specified by InputSection does not match any of"
|   |   |-TextComment 0x55887c459110 <line:186:1, col:96> Text="                               the GUIDs registered with ExtractGuidedSectionRegisterHandlers()."
|   |   `-TextComment 0x55887c459130 <line:187:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c459190 <col:3, line:188:69> Name="retval" Arg[0]="Others"
|     `-ParagraphComment 0x55887c459230 <line:187:18, line:188:69>
|       |-TextComment 0x55887c4591e0 <line:187:18, col:105> Text="              The return status from the handler associated with the GUID retrieved from"
|       `-TextComment 0x55887c459200 <line:188:1, col:69> Text="                               the section specified by InputSection."
|-FunctionDecl 0x55887c2d4c20 <line:235:1, line:242:3> line:237:1 used ExtractGuidedSectionDecode 'RETURN_STATUS (const void *, void **, void *, UINT32 *)'
| |-ParmVarDecl 0x55887c2d4a00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ExtractGuidedSectionLib.h:238:22> col:22 InputSection 'const void *'
| |-ParmVarDecl 0x55887c2d4a80 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ExtractGuidedSectionLib.h:239:23> col:23 OutputBuffer 'void **'
| |-ParmVarDecl 0x55887c2d4b00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ExtractGuidedSectionLib.h:240:22> col:22 ScratchBuffer 'void *'
| |-ParmVarDecl 0x55887c2d4b78 <line:241:13, col:22> col:22 AuthenticationStatus 'UINT32 *'
| `-FullComment 0x55887c459d40 <line:201:1, line:232:93>
|   |-ParagraphComment 0x55887c4593c0 <line:201:1, line:204:26>
|   | |-TextComment 0x55887c459320 <line:201:1, col:101> Text="  Retrieves the GUID from a GUIDed section and uses that GUID to select an associated handler of type"
|   | |-TextComment 0x55887c459340 <line:202:1, col:104> Text="  EXTRACT_GUIDED_SECTION_DECODE_HANDLER that was registered with ExtractGuidedSectionRegisterHandlers()."
|   | |-TextComment 0x55887c459360 <line:203:1, col:103> Text="  The selected handler is used to decode the data in a GUIDed section and return the result in a caller"
|   | `-TextComment 0x55887c459380 <line:204:1, col:26> Text="  allocated output buffer."
|   |-ParagraphComment 0x55887c459570 <line:206:1, line:215:128>
|   | |-TextComment 0x55887c4593e0 <line:206:1, col:55> Text="  Decodes the GUIDed section specified by InputSection."
|   | |-TextComment 0x55887c459400 <line:207:1, col:117> Text="  If GUID for InputSection does not match any of the GUIDs registered through ExtractGuidedSectionRegisterHandlers(),"
|   | |-TextComment 0x55887c459420 <line:208:1, col:38> Text="  then RETURN_UNSUPPORTED is returned."
|   | |-TextComment 0x55887c459440 <line:209:1, col:109> Text="  If the GUID of InputSection does match the GUID that this handler supports, then the the associated handler"
|   | |-TextComment 0x55887c459460 <line:210:1, col:111> Text="  of type EXTRACT_GUIDED_SECTION_DECODE_HANDLER that was registered with ExtractGuidedSectionRegisterHandlers()"
|   | |-TextComment 0x55887c459480 <line:211:1, col:112> Text="  is used to decode InputSection into the buffer specified by OutputBuffer and the authentication status of this"
|   | |-TextComment 0x55887c4594a0 <line:212:1, col:120> Text="  decode operation is returned in AuthenticationStatus.  If the decoded buffer is identical to the data in InputSection,"
|   | |-TextComment 0x55887c4594c0 <line:213:1, col:118> Text="  then OutputBuffer is set to point at the data in InputSection.  Otherwise, the decoded data will be placed in caller"
|   | |-TextComment 0x55887c4594e0 <line:214:1, col:130> Text="  allocated buffer specified by OutputBuffer.    This function is responsible for computing the  EFI_AUTH_STATUS_PLATFORM_OVERRIDE"
|   | `-TextComment 0x55887c459500 <line:215:1, col:128> Text="  bit of in AuthenticationStatus.  The return status from the handler of type EXTRACT_GUIDED_SECTION_DECODE_HANDLER is returned."
|   |-ParagraphComment 0x55887c459630 <line:217:1, line:220:49>
|   | |-TextComment 0x55887c459590 <line:217:1, col:41> Text="  If InputSection is NULL, then ASSERT()."
|   | |-TextComment 0x55887c4595b0 <line:218:1, col:41> Text="  If OutputBuffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c4595d0 <line:219:1, col:94> Text="  If ScratchBuffer is NULL and this decode operation requires a scratch buffer, then ASSERT()."
|   | `-TextComment 0x55887c4595f0 <line:220:1, col:49> Text="  If AuthenticationStatus is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c459680 <line:222:1, col:2>
|   | `-TextComment 0x55887c459650 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4596a0 <col:3, line:223:2> [in] explicitly Param="InputSection" ParamIndex=0
|   | `-ParagraphComment 0x55887c459760 <line:222:27, line:223:2>
|   |   |-TextComment 0x55887c459710 <line:222:27, col:84> Text="   A pointer to a GUIDed section of an FFS formatted file."
|   |   `-TextComment 0x55887c459730 <line:223:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c459780 <col:3, line:224:2> [out] explicitly Param="OutputBuffer" ParamIndex=1
|   | `-ParagraphComment 0x55887c459840 <line:223:27, line:224:2>
|   |   |-TextComment 0x55887c4597f0 <line:223:27, col:98> Text="   A pointer to a buffer that contains the result of a decode operation."
|   |   `-TextComment 0x55887c459810 <line:224:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c459860 <col:3, line:225:2> [in] explicitly Param="ScratchBuffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c459920 <line:224:28, line:225:2>
|   |   |-TextComment 0x55887c4598d0 <line:224:28, col:145> Text="  A caller allocated buffer that may be required by this function as a scratch buffer to perform the decode operation."
|   |   `-TextComment 0x55887c4598f0 <line:225:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c459940 <col:3, line:228:43> [out] explicitly Param="AuthenticationStatus" ParamIndex=3
|   | `-ParagraphComment 0x55887c459a30 <line:226:1, line:228:43>
|   |   |-TextComment 0x55887c4599b0 <line:226:1, col:116> Text="                             A pointer to the authentication status of the decoded output buffer. See the definition"
|   |   |-TextComment 0x55887c4599d0 <line:227:1, col:116> Text="                             of authentication status in the EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI section of the PI"
|   |   `-TextComment 0x55887c4599f0 <line:228:1, col:43> Text="                             Specification."
|   |-ParagraphComment 0x55887c459a80 <line:230:1, col:2>
|   | `-TextComment 0x55887c459a50 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c459aa0 <col:3, line:231:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c459b40 <line:230:26, line:231:2>
|   |   |-TextComment 0x55887c459af0 <line:230:26, col:85> Text="           The buffer specified by InputSection was decoded."
|   |   `-TextComment 0x55887c459b10 <line:231:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c459b60 <col:3, line:232:2> Name="retval" Arg[0]="RETURN_UNSUPPORTED"
|   | `-ParagraphComment 0x55887c459c10 <line:231:30, line:232:2>
|   |   |-TextComment 0x55887c459bc0 <line:231:30, col:120> Text="       The section specified by InputSection does not match the GUID this handler supports."
|   |   `-TextComment 0x55887c459be0 <line:232:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c459c30 <col:3, col:93> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c459cc0 <col:36, col:93>
|       `-TextComment 0x55887c459c90 <col:36, col:93> Text=" The section specified by InputSection can not be decoded."
|-FunctionDecl 0x55887c2d4fd8 <line:271:1, line:277:3> line:273:1 ExtractGuidedSectionGetHandlers 'RETURN_STATUS (const GUID *, EXTRACT_GUIDED_SECTION_GET_INFO_HANDLER *, EXTRACT_GUIDED_SECTION_DECODE_HANDLER *)'
| |-ParmVarDecl 0x55887c2d4d18 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ExtractGuidedSectionLib.h:274:56> col:56 SectionGuid 'const GUID *'
| |-ParmVarDecl 0x55887c2d4de8 <line:275:14, col:56> col:56 GetInfoHandler 'EXTRACT_GUIDED_SECTION_GET_INFO_HANDLER *'
| |-ParmVarDecl 0x55887c2d4eb8 <line:276:14, col:56> col:56 DecodeHandler 'EXTRACT_GUIDED_SECTION_DECODE_HANDLER *'
| `-FullComment 0x55887c45a560 <line:245:1, line:268:87>
|   |-ParagraphComment 0x55887c459e00 <line:245:1, line:246:73>
|   | |-TextComment 0x55887c459db0 <line:245:1, col:72> Text="  Retrieves handlers of type EXTRACT_GUIDED_SECTION_GET_INFO_HANDLER and"
|   | `-TextComment 0x55887c459dd0 <line:246:1, col:73> Text="  EXTRACT_GUIDED_SECTION_DECODE_HANDLER for a specific GUID section type."
|   |-ParagraphComment 0x55887c459e70 <line:248:1, line:249:35>
|   | |-TextComment 0x55887c459e20 <line:248:1, col:72> Text="  Retrieves the handlers associated with SectionGuid and returns them in"
|   | `-TextComment 0x55887c459e40 <line:249:1, col:35> Text="  GetInfoHandler and DecodeHandler."
|   |-ParagraphComment 0x55887c459ee0 <line:251:1, line:252:26>
|   | |-TextComment 0x55887c459e90 <line:251:1, col:74> Text="  If the GUID value specified by SectionGuid has not been registered, then"
|   | `-TextComment 0x55887c459eb0 <line:252:1, col:26> Text="  return RETURN_NOT_FOUND."
|   |-ParagraphComment 0x55887c459f30 <line:254:1, col:40>
|   | `-TextComment 0x55887c459f00 <col:1, col:40> Text="  If SectionGuid is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c459f80 <line:256:1, col:2>
|   | `-TextComment 0x55887c459f50 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c459fa0 <col:3, line:258:2> [in] explicitly Param="SectionGuid" ParamIndex=0
|   | `-ParagraphComment 0x55887c45a090 <line:256:26, line:258:2>
|   |   |-TextComment 0x55887c45a010 <line:256:26, col:92> Text="    A pointer to the GUID associated with the handlersof the GUIDed"
|   |   |-TextComment 0x55887c45a030 <line:257:1, col:58> Text="                             section type being retrieved."
|   |   `-TextComment 0x55887c45a050 <line:258:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45a0b0 <col:3, line:263:2> [out] explicitly Param="GetInfoHandler" ParamIndex=1
|   | `-ParagraphComment 0x55887c45a210 <line:258:29, line:263:2>
|   |   |-TextComment 0x55887c45a120 <line:258:29, col:93> Text=" Pointer to a function that examines a GUIDed section and returns"
|   |   |-TextComment 0x55887c45a140 <line:259:1, col:95> Text="                             the size of the decoded buffer and the size of an optional scratch"
|   |   |-TextComment 0x55887c45a160 <line:260:1, col:93> Text="                             buffer required to actually decode the data in a GUIDed section."
|   |   |-TextComment 0x55887c45a180 <line:261:1, col:96> Text="                             This is an optional parameter that may be NULL. If it is NULL, then"
|   |   |-TextComment 0x55887c45a1a0 <line:262:1, col:79> Text="                             the previously registered handler is not returned."
|   |   `-TextComment 0x55887c45a1c0 <line:263:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45a230 <col:3, line:265:99> [out] explicitly Param="DecodeHandler" ParamIndex=2
|   | `-ParagraphComment 0x55887c45a320 <line:263:28, line:265:99>
|   |   |-TextComment 0x55887c45a2a0 <line:263:28, col:94> Text="  Pointer to a function that decodes a GUIDed section into a caller"
|   |   |-TextComment 0x55887c45a2c0 <line:264:1, col:101> Text="                             allocated output buffer. This is an optional parameter that may be NULL."
|   |   `-TextComment 0x55887c45a2e0 <line:265:1, col:99> Text="                             If it is NULL, then the previously registered handler is not returned."
|   |-ParagraphComment 0x55887c45a370 <line:267:1, col:2>
|   | `-TextComment 0x55887c45a340 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c45a390 <col:3, line:268:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c45a430 <line:267:26, line:268:2>
|   |   |-TextComment 0x55887c45a3e0 <line:267:26, col:58> Text="     The handlers were retrieved."
|   |   `-TextComment 0x55887c45a400 <line:268:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c45a450 <col:3, col:87> Name="retval" Arg[0]="RETURN_NOT_FOUND"
|     `-ParagraphComment 0x55887c45a4e0 <col:28, col:87>
|       `-TextComment 0x55887c45a4b0 <col:28, col:87> Text="   No handlers have been registered with the specified GUID."
|-FunctionDecl 0x55887c2d5320 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:39:3> line:35:1 used CopyMem 'void *(void *, const void *, UINTN)'
| |-ParmVarDecl 0x55887c2d5100 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:36:19> col:19 DestinationBuffer 'void *'
| |-ParmVarDecl 0x55887c2d5180 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:37:19> col:19 SourceBuffer 'const void *'
| |-ParmVarDecl 0x55887c2d51f8 <line:38:6, col:18> col:18 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c45ab20 <line:17:1, line:30:28>
|   |-ParagraphComment 0x55887c45a600 <line:17:1, col:85>
|   | `-TextComment 0x55887c45a5d0 <col:1, col:85> Text="  Copies a source buffer to a destination buffer, and returns the destination buffer."
|   |-ParagraphComment 0x55887c45a6c0 <line:19:1, line:21:48>
|   | |-TextComment 0x55887c45a640 <line:19:1, col:87> Text="  This function copies Length bytes from SourceBuffer to DestinationBuffer, and returns"
|   | |-TextComment 0x55887c45a660 <line:20:1, col:87> Text="  DestinationBuffer.  The implementation must be reentrant, and it must handle the case"
|   | `-TextComment 0x55887c45a680 <line:21:1, col:48> Text="  where SourceBuffer overlaps DestinationBuffer."
|   |-ParagraphComment 0x55887c45a730 <line:23:1, line:24:76>
|   | |-TextComment 0x55887c45a6e0 <line:23:1, col:81> Text="  If Length is greater than (MAX_ADDRESS - DestinationBuffer + 1), then ASSERT()."
|   | `-TextComment 0x55887c45a700 <line:24:1, col:76> Text="  If Length is greater than (MAX_ADDRESS - SourceBuffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c45a780 <line:26:1, col:2>
|   | `-TextComment 0x55887c45a750 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45a7a0 <col:3, line:27:2> [in] implicitly Param="DestinationBuffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c45a860 <line:26:28, line:27:2>
|   |   |-TextComment 0x55887c45a810 <line:26:28, col:87> Text="   The pointer to the destination buffer of the memory copy."
|   |   `-TextComment 0x55887c45a830 <line:27:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45a880 <col:3, line:28:2> [in] implicitly Param="SourceBuffer" ParamIndex=1
|   | `-ParagraphComment 0x55887c45a930 <line:27:23, line:28:2>
|   |   |-TextComment 0x55887c45a8e0 <line:27:23, col:82> Text="        The pointer to the source buffer of the memory copy."
|   |   `-TextComment 0x55887c45a900 <line:28:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45a950 <col:3, col:97> [in] implicitly Param="Length" ParamIndex=2
|   | `-ParagraphComment 0x55887c45a9e0 <col:17, col:97>
|   |   `-TextComment 0x55887c45a9b0 <col:17, col:97> Text="              The number of bytes to copy from SourceBuffer to DestinationBuffer."
|   |-ParagraphComment 0x55887c45aa30 <line:30:1, col:2>
|   | `-TextComment 0x55887c45aa00 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c45aa50 <col:3, col:28> Name="return"
|     `-ParagraphComment 0x55887c45aab0 <col:10, col:28>
|       `-TextComment 0x55887c45aa80 <col:10, col:28> Text=" DestinationBuffer."
|-FunctionDecl 0x55887c2d5640 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:61:3> line:57:1 SetMem 'void *(void *, UINTN, UINT8)'
| |-ParmVarDecl 0x55887c2d5420 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:58:14> col:14 Buffer 'void *'
| |-ParmVarDecl 0x55887c2d5498 <line:59:6, col:13> col:13 Length 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2d5510 <line:60:6, col:13> col:13 Value 'UINT8':'unsigned char'
| `-FullComment 0x55887c45b040 <line:42:1, line:52:17>
|   |-ParagraphComment 0x55887c45abc0 <line:42:1, col:73>
|   | `-TextComment 0x55887c45ab90 <col:1, col:73> Text="  Fills a target buffer with a byte value, and returns the target buffer."
|   |-ParagraphComment 0x55887c45ac10 <line:44:1, col:76>
|   | `-TextComment 0x55887c45abe0 <col:1, col:76> Text="  This function fills Length bytes of Buffer with Value, and returns Buffer."
|   |-ParagraphComment 0x55887c45ac60 <line:46:1, col:70>
|   | `-TextComment 0x55887c45ac30 <col:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c45acb0 <line:48:1, col:2>
|   | `-TextComment 0x55887c45ac80 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45acd0 <col:3, line:49:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c45ad80 <line:48:17, line:49:2>
|   |   |-TextComment 0x55887c45ad30 <line:48:17, col:38> Text="    The memory to set."
|   |   `-TextComment 0x55887c45ad50 <line:49:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45ada0 <col:3, line:50:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c45ae50 <line:49:17, line:50:2>
|   |   |-TextComment 0x55887c45ae00 <line:49:17, col:47> Text="    The number of bytes to set."
|   |   `-TextComment 0x55887c45ae20 <line:50:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45ae70 <col:3, col:72> [in] implicitly Param="Value" ParamIndex=2
|   | `-ParagraphComment 0x55887c45af00 <col:16, col:72>
|   |   `-TextComment 0x55887c45aed0 <col:16, col:72> Text="     The value with which to fill Length bytes of Buffer."
|   |-ParagraphComment 0x55887c45af50 <line:52:1, col:2>
|   | `-TextComment 0x55887c45af20 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c45af70 <col:3, col:17> Name="return"
|     `-ParagraphComment 0x55887c45afd0 <col:10, col:17>
|       `-TextComment 0x55887c45afa0 <col:10, col:17> Text=" Buffer."
|-FunctionDecl 0x55887c2d5960 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:88:3> line:84:1 SetMem16 'void *(void *, UINTN, UINT16)'
| |-ParmVarDecl 0x55887c2d5740 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:85:15> col:15 Buffer 'void *'
| |-ParmVarDecl 0x55887c2d57b8 <line:86:6, col:14> col:14 Length 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2d5830 <line:87:6, col:14> col:14 Value 'UINT16':'unsigned short'
| `-FullComment 0x55887c45b620 <line:64:1, line:79:17>
|   |-ParagraphComment 0x55887c45b0e0 <line:64:1, col:75>
|   | `-TextComment 0x55887c45b0b0 <col:1, col:75> Text="  Fills a target buffer with a 16-bit value, and returns the target buffer."
|   |-ParagraphComment 0x55887c45b180 <line:66:1, line:68:18>
|   | |-TextComment 0x55887c45b100 <line:66:1, col:79> Text="  This function fills Length bytes of Buffer with the 16-bit value specified by"
|   | |-TextComment 0x55887c45b120 <line:67:1, col:74> Text="  Value, and returns Buffer. Value is repeated every 16-bits in for Length"
|   | `-TextComment 0x55887c45b140 <line:68:1, col:18> Text="  bytes of Buffer."
|   |-ParagraphComment 0x55887c45b240 <line:70:1, line:73:63>
|   | |-TextComment 0x55887c45b1a0 <line:70:1, col:50> Text="  If Length > 0 and Buffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c45b1c0 <line:71:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   | |-TextComment 0x55887c45b1e0 <line:72:1, col:63> Text="  If Buffer is not aligned on a 16-bit boundary, then ASSERT()."
|   | `-TextComment 0x55887c45b200 <line:73:1, col:63> Text="  If Length is not aligned on a 16-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c45b290 <line:75:1, col:2>
|   | `-TextComment 0x55887c45b260 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45b2b0 <col:3, line:76:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c45b360 <line:75:17, line:76:2>
|   |   |-TextComment 0x55887c45b310 <line:75:17, col:59> Text="  The pointer to the target buffer to fill."
|   |   `-TextComment 0x55887c45b330 <line:76:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45b380 <col:3, line:77:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c45b430 <line:76:17, line:77:2>
|   |   |-TextComment 0x55887c45b3e0 <line:76:17, col:56> Text="  The number of bytes in Buffer to fill."
|   |   `-TextComment 0x55887c45b400 <line:77:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45b450 <col:3, col:70> [in] implicitly Param="Value" ParamIndex=2
|   | `-ParagraphComment 0x55887c45b4e0 <col:16, col:70>
|   |   `-TextComment 0x55887c45b4b0 <col:16, col:70> Text="   The value with which to fill Length bytes of Buffer."
|   |-ParagraphComment 0x55887c45b530 <line:79:1, col:2>
|   | `-TextComment 0x55887c45b500 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c45b550 <col:3, col:17> Name="return"
|     `-ParagraphComment 0x55887c45b5b0 <col:10, col:17>
|       `-TextComment 0x55887c45b580 <col:10, col:17> Text=" Buffer."
|-FunctionDecl 0x55887c2d5c80 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:115:3> line:111:1 SetMem32 'void *(void *, UINTN, UINT32)'
| |-ParmVarDecl 0x55887c2d5a60 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:112:15> col:15 Buffer 'void *'
| |-ParmVarDecl 0x55887c2d5ad8 <line:113:6, col:14> col:14 Length 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2d5b50 <line:114:6, col:14> col:14 Value 'UINT32':'unsigned int'
| `-FullComment 0x55887c45bc00 <line:91:1, line:106:17>
|   |-ParagraphComment 0x55887c45b6c0 <line:91:1, col:75>
|   | `-TextComment 0x55887c45b690 <col:1, col:75> Text="  Fills a target buffer with a 32-bit value, and returns the target buffer."
|   |-ParagraphComment 0x55887c45b760 <line:93:1, line:95:18>
|   | |-TextComment 0x55887c45b6e0 <line:93:1, col:79> Text="  This function fills Length bytes of Buffer with the 32-bit value specified by"
|   | |-TextComment 0x55887c45b700 <line:94:1, col:74> Text="  Value, and returns Buffer. Value is repeated every 32-bits in for Length"
|   | `-TextComment 0x55887c45b720 <line:95:1, col:18> Text="  bytes of Buffer."
|   |-ParagraphComment 0x55887c45b820 <line:97:1, line:100:63>
|   | |-TextComment 0x55887c45b780 <line:97:1, col:50> Text="  If Length > 0 and Buffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c45b7a0 <line:98:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   | |-TextComment 0x55887c45b7c0 <line:99:1, col:63> Text="  If Buffer is not aligned on a 32-bit boundary, then ASSERT()."
|   | `-TextComment 0x55887c45b7e0 <line:100:1, col:63> Text="  If Length is not aligned on a 32-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c45b870 <line:102:1, col:2>
|   | `-TextComment 0x55887c45b840 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45b890 <col:3, line:103:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c45b940 <line:102:17, line:103:2>
|   |   |-TextComment 0x55887c45b8f0 <line:102:17, col:59> Text="  The pointer to the target buffer to fill."
|   |   `-TextComment 0x55887c45b910 <line:103:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45b960 <col:3, line:104:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c45ba10 <line:103:17, line:104:2>
|   |   |-TextComment 0x55887c45b9c0 <line:103:17, col:56> Text="  The number of bytes in Buffer to fill."
|   |   `-TextComment 0x55887c45b9e0 <line:104:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45ba30 <col:3, col:70> [in] implicitly Param="Value" ParamIndex=2
|   | `-ParagraphComment 0x55887c45bac0 <col:16, col:70>
|   |   `-TextComment 0x55887c45ba90 <col:16, col:70> Text="   The value with which to fill Length bytes of Buffer."
|   |-ParagraphComment 0x55887c45bb10 <line:106:1, col:2>
|   | `-TextComment 0x55887c45bae0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c45bb30 <col:3, col:17> Name="return"
|     `-ParagraphComment 0x55887c45bb90 <col:10, col:17>
|       `-TextComment 0x55887c45bb60 <col:10, col:17> Text=" Buffer."
|-FunctionDecl 0x55887c2daf80 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:142:3> line:138:1 SetMem64 'void *(void *, UINTN, UINT64)'
| |-ParmVarDecl 0x55887c2dad60 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:139:15> col:15 Buffer 'void *'
| |-ParmVarDecl 0x55887c2dadd8 <line:140:6, col:14> col:14 Length 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2dae50 <line:141:6, col:14> col:14 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c45c1e0 <line:118:1, line:133:17>
|   |-ParagraphComment 0x55887c45bca0 <line:118:1, col:75>
|   | `-TextComment 0x55887c45bc70 <col:1, col:75> Text="  Fills a target buffer with a 64-bit value, and returns the target buffer."
|   |-ParagraphComment 0x55887c45bd40 <line:120:1, line:122:18>
|   | |-TextComment 0x55887c45bcc0 <line:120:1, col:79> Text="  This function fills Length bytes of Buffer with the 64-bit value specified by"
|   | |-TextComment 0x55887c45bce0 <line:121:1, col:74> Text="  Value, and returns Buffer. Value is repeated every 64-bits in for Length"
|   | `-TextComment 0x55887c45bd00 <line:122:1, col:18> Text="  bytes of Buffer."
|   |-ParagraphComment 0x55887c45be00 <line:124:1, line:127:63>
|   | |-TextComment 0x55887c45bd60 <line:124:1, col:50> Text="  If Length > 0 and Buffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c45bd80 <line:125:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   | |-TextComment 0x55887c45bda0 <line:126:1, col:63> Text="  If Buffer is not aligned on a 64-bit boundary, then ASSERT()."
|   | `-TextComment 0x55887c45bdc0 <line:127:1, col:63> Text="  If Length is not aligned on a 64-bit boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c45be50 <line:129:1, col:2>
|   | `-TextComment 0x55887c45be20 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45be70 <col:3, line:130:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c45bf20 <line:129:17, line:130:2>
|   |   |-TextComment 0x55887c45bed0 <line:129:17, col:59> Text="  The pointer to the target buffer to fill."
|   |   `-TextComment 0x55887c45bef0 <line:130:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45bf40 <col:3, line:131:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c45bff0 <line:130:17, line:131:2>
|   |   |-TextComment 0x55887c45bfa0 <line:130:17, col:56> Text="  The number of bytes in Buffer to fill."
|   |   `-TextComment 0x55887c45bfc0 <line:131:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45c010 <col:3, col:70> [in] implicitly Param="Value" ParamIndex=2
|   | `-ParagraphComment 0x55887c45c0a0 <col:16, col:70>
|   |   `-TextComment 0x55887c45c070 <col:16, col:70> Text="   The value with which to fill Length bytes of Buffer."
|   |-ParagraphComment 0x55887c45c0f0 <line:133:1, col:2>
|   | `-TextComment 0x55887c45c0c0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c45c110 <col:3, col:17> Name="return"
|     `-ParagraphComment 0x55887c45c170 <col:10, col:17>
|       `-TextComment 0x55887c45c140 <col:10, col:17> Text=" Buffer."
|-FunctionDecl 0x55887c2db260 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:169:3> line:165:1 SetMemN 'void *(void *, UINTN, UINTN)'
| |-ParmVarDecl 0x55887c2db080 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:166:14> col:14 Buffer 'void *'
| |-ParmVarDecl 0x55887c2db0f8 <line:167:6, col:13> col:13 Length 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2db170 <line:168:6, col:13> col:13 Value 'UINTN':'unsigned long long'
| `-FullComment 0x55887c45c7c0 <line:145:1, line:160:17>
|   |-ParagraphComment 0x55887c45c280 <line:145:1, col:87>
|   | `-TextComment 0x55887c45c250 <col:1, col:87> Text="  Fills a target buffer with a value that is size UINTN, and returns the target buffer."
|   |-ParagraphComment 0x55887c45c320 <line:147:1, line:149:18>
|   | |-TextComment 0x55887c45c2a0 <line:147:1, col:84> Text="  This function fills Length bytes of Buffer with the UINTN sized value specified by"
|   | |-TextComment 0x55887c45c2c0 <line:148:1, col:83> Text="  Value, and returns Buffer. Value is repeated every sizeof(UINTN) bytes for Length"
|   | `-TextComment 0x55887c45c2e0 <line:149:1, col:18> Text="  bytes of Buffer."
|   |-ParagraphComment 0x55887c45c3e0 <line:151:1, line:154:62>
|   | |-TextComment 0x55887c45c340 <line:151:1, col:50> Text="  If Length > 0 and Buffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c45c360 <line:152:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   | |-TextComment 0x55887c45c380 <line:153:1, col:62> Text="  If Buffer is not aligned on a UINTN boundary, then ASSERT()."
|   | `-TextComment 0x55887c45c3a0 <line:154:1, col:62> Text="  If Length is not aligned on a UINTN boundary, then ASSERT()."
|   |-ParagraphComment 0x55887c45c430 <line:156:1, col:2>
|   | `-TextComment 0x55887c45c400 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45c450 <col:3, line:157:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c45c500 <line:156:17, line:157:2>
|   |   |-TextComment 0x55887c45c4b0 <line:156:17, col:59> Text="  The pointer to the target buffer to fill."
|   |   `-TextComment 0x55887c45c4d0 <line:157:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45c520 <col:3, line:158:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c45c5d0 <line:157:17, line:158:2>
|   |   |-TextComment 0x55887c45c580 <line:157:17, col:56> Text="  The number of bytes in Buffer to fill."
|   |   `-TextComment 0x55887c45c5a0 <line:158:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45c5f0 <col:3, col:70> [in] implicitly Param="Value" ParamIndex=2
|   | `-ParagraphComment 0x55887c45c680 <col:16, col:70>
|   |   `-TextComment 0x55887c45c650 <col:16, col:70> Text="   The value with which to fill Length bytes of Buffer."
|   |-ParagraphComment 0x55887c45c6d0 <line:160:1, col:2>
|   | `-TextComment 0x55887c45c6a0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c45c6f0 <col:3, col:17> Name="return"
|     `-ParagraphComment 0x55887c45c750 <col:10, col:17>
|       `-TextComment 0x55887c45c720 <col:10, col:17> Text=" Buffer."
|-FunctionDecl 0x55887c2db478 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:190:3> line:187:1 ZeroMem 'void *(void *, UINTN)'
| |-ParmVarDecl 0x55887c2db360 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:188:14> col:14 Buffer 'void *'
| |-ParmVarDecl 0x55887c2db3d8 <line:189:6, col:13> col:13 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c45cc20 <line:172:1, line:182:17>
|   |-ParagraphComment 0x55887c45c860 <line:172:1, col:66>
|   | `-TextComment 0x55887c45c830 <col:1, col:66> Text="  Fills a target buffer with zeros, and returns the target buffer."
|   |-ParagraphComment 0x55887c45c8b0 <line:174:1, col:76>
|   | `-TextComment 0x55887c45c880 <col:1, col:76> Text="  This function fills Length bytes of Buffer with zeros, and returns Buffer."
|   |-ParagraphComment 0x55887c45c920 <line:176:1, line:177:70>
|   | |-TextComment 0x55887c45c8d0 <line:176:1, col:50> Text="  If Length > 0 and Buffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c45c8f0 <line:177:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c45c970 <line:179:1, col:2>
|   | `-TextComment 0x55887c45c940 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45c990 <col:3, line:180:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c45ca40 <line:179:17, line:180:2>
|   |   |-TextComment 0x55887c45c9f0 <line:179:17, col:74> Text="      The pointer to the target buffer to fill with zeros."
|   |   `-TextComment 0x55887c45ca10 <line:180:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45ca60 <col:3, col:71> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c45caf0 <col:17, col:71>
|   |   `-TextComment 0x55887c45cac0 <col:17, col:71> Text="      The number of bytes in Buffer to fill with zeros."
|   |-ParagraphComment 0x55887c45cb40 <line:182:1, col:2>
|   | `-TextComment 0x55887c45cb10 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c45cb60 <col:3, col:17> Name="return"
|     `-ParagraphComment 0x55887c45cbc0 <col:10, col:17>
|       `-TextComment 0x55887c45cb90 <col:10, col:17> Text=" Buffer."
|-FunctionDecl 0x55887c2db788 <line:214:1, line:220:3> line:216:1 CompareMem 'INTN (const void *, const void *, UINTN)'
| |-ParmVarDecl 0x55887c2db570 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:217:19> col:19 DestinationBuffer 'const void *'
| |-ParmVarDecl 0x55887c2db5f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:218:19> col:19 SourceBuffer 'const void *'
| |-ParmVarDecl 0x55887c2db668 <line:219:6, col:18> col:18 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c45d310 <line:193:1, line:211:65>
|   |-ParagraphComment 0x55887c45ccc0 <line:193:1, col:39>
|   | `-TextComment 0x55887c45cc90 <col:1, col:39> Text="  Compares the contents of two buffers."
|   |-ParagraphComment 0x55887c45cd80 <line:195:1, line:198:39>
|   | |-TextComment 0x55887c45cce0 <line:195:1, col:91> Text="  This function compares Length bytes of SourceBuffer to Length bytes of DestinationBuffer."
|   | |-TextComment 0x55887c45cd00 <line:196:1, col:91> Text="  If all Length bytes of the two buffers are identical, then 0 is returned.  Otherwise, the"
|   | |-TextComment 0x55887c45cd20 <line:197:1, col:87> Text="  value returned is the first mismatched byte in SourceBuffer subtracted from the first"
|   | `-TextComment 0x55887c45cd40 <line:198:1, col:39> Text="  mismatched byte in DestinationBuffer."
|   |-ParagraphComment 0x55887c45ce40 <line:200:1, line:203:76>
|   | |-TextComment 0x55887c45cda0 <line:200:1, col:61> Text="  If Length > 0 and DestinationBuffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c45cdc0 <line:201:1, col:56> Text="  If Length > 0 and SourceBuffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c45cde0 <line:202:1, col:81> Text="  If Length is greater than (MAX_ADDRESS - DestinationBuffer + 1), then ASSERT()."
|   | `-TextComment 0x55887c45ce00 <line:203:1, col:76> Text="  If Length is greater than (MAX_ADDRESS - SourceBuffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c45ce90 <line:205:1, col:2>
|   | `-TextComment 0x55887c45ce60 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45ceb0 <col:3, line:206:2> [in] implicitly Param="DestinationBuffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c45cf70 <line:205:28, line:206:2>
|   |   |-TextComment 0x55887c45cf20 <line:205:28, col:77> Text=" The pointer to the destination buffer to compare."
|   |   `-TextComment 0x55887c45cf40 <line:206:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45cf90 <col:3, line:207:2> [in] implicitly Param="SourceBuffer" ParamIndex=1
|   | `-ParagraphComment 0x55887c45d040 <line:206:23, line:207:2>
|   |   |-TextComment 0x55887c45cff0 <line:206:23, col:72> Text="      The pointer to the source buffer to compare."
|   |   `-TextComment 0x55887c45d010 <line:207:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45d060 <col:3, col:59> [in] implicitly Param="Length" ParamIndex=2
|   | `-ParagraphComment 0x55887c45d0f0 <col:17, col:59>
|   |   `-TextComment 0x55887c45d0c0 <col:17, col:59> Text="            The number of bytes to compare."
|   |-ParagraphComment 0x55887c45d140 <line:209:1, col:2>
|   | `-TextComment 0x55887c45d110 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c45d160 <col:3, line:210:2> Name="return"
|   | `-ParagraphComment 0x55887c45d1e0 <line:209:10, line:210:2>
|   |   |-TextComment 0x55887c45d190 <line:209:10, col:78> Text=" 0                 All Length bytes of the two buffers are identical."
|   |   `-TextComment 0x55887c45d1b0 <line:210:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c45d200 <col:3, line:211:65> Name="retval" Arg[0]="Non-zero"
|     `-ParagraphComment 0x55887c45d2a0 <line:210:19, line:211:65>
|       |-TextComment 0x55887c45d250 <line:210:19, col:95> Text="          The first mismatched byte in SourceBuffer subtracted from the first"
|       `-TextComment 0x55887c45d270 <line:211:1, col:65> Text="                            mismatched byte in DestinationBuffer."
|-FunctionDecl 0x55887c2dbaa0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:247:3> line:243:1 ScanMem8 'void *(const void *, UINTN, UINT8)'
| |-ParmVarDecl 0x55887c2db880 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:244:19> col:19 Buffer 'const void *'
| |-ParmVarDecl 0x55887c2db8f8 <line:245:6, col:18> col:18 Length 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2db970 <line:246:6, col:18> col:18 Value 'UINT8':'unsigned char'
| `-FullComment 0x55887c45d8e0 <line:223:1, line:238:78>
|   |-ParagraphComment 0x55887c45d3d0 <line:223:1, line:224:23>
|   | |-TextComment 0x55887c45d380 <line:223:1, col:93> Text="  Scans a target buffer for an 8-bit value, and returns a pointer to the matching 8-bit value"
|   | `-TextComment 0x55887c45d3a0 <line:224:1, col:23> Text="  in the target buffer."
|   |-ParagraphComment 0x55887c45d490 <line:226:1, line:229:64>
|   | |-TextComment 0x55887c45d3f0 <line:226:1, col:89> Text="  This function searches target the buffer specified by Buffer and Length from the lowest"
|   | |-TextComment 0x55887c45d410 <line:227:1, col:93> Text="  address to the highest address for an 8-bit value that matches Value.  If a match is found,"
|   | |-TextComment 0x55887c45d430 <line:228:1, col:94> Text="  then a pointer to the matching byte in the target buffer is returned.  If no match is found,"
|   | `-TextComment 0x55887c45d450 <line:229:1, col:64> Text="  then NULL is returned.  If Length is 0, then NULL is returned."
|   |-ParagraphComment 0x55887c45d500 <line:231:1, line:232:70>
|   | |-TextComment 0x55887c45d4b0 <line:231:1, col:50> Text="  If Length > 0 and Buffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c45d4d0 <line:232:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c45d550 <line:234:1, col:2>
|   | `-TextComment 0x55887c45d520 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45d570 <col:3, line:235:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c45d620 <line:234:17, line:235:2>
|   |   |-TextComment 0x55887c45d5d0 <line:234:17, col:63> Text="      The pointer to the target buffer to scan."
|   |   `-TextComment 0x55887c45d5f0 <line:235:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45d640 <col:3, line:236:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c45d6f0 <line:235:17, line:236:2>
|   |   |-TextComment 0x55887c45d6a0 <line:235:17, col:60> Text="      The number of bytes in Buffer to scan."
|   |   `-TextComment 0x55887c45d6c0 <line:236:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45d710 <col:3, col:67> [in] implicitly Param="Value" ParamIndex=2
|   | `-ParagraphComment 0x55887c45d7a0 <col:16, col:67>
|   |   `-TextComment 0x55887c45d770 <col:16, col:67> Text="       The value to search for in the target buffer."
|   |-ParagraphComment 0x55887c45d7f0 <line:238:1, col:2>
|   | `-TextComment 0x55887c45d7c0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c45d810 <col:3, col:78> Name="return"
|     `-ParagraphComment 0x55887c45d870 <col:10, col:78>
|       `-TextComment 0x55887c45d840 <col:10, col:78> Text=" A pointer to the matching byte in the target buffer, otherwise NULL."
|-FunctionDecl 0x55887c2dbdc0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:276:3> line:272:1 ScanMem16 'void *(const void *, UINTN, UINT16)'
| |-ParmVarDecl 0x55887c2dbba0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:273:19> col:19 Buffer 'const void *'
| |-ParmVarDecl 0x55887c2dbc18 <line:274:6, col:18> col:18 Length 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2dbc90 <line:275:6, col:18> col:18 Value 'UINT16':'unsigned short'
| `-FullComment 0x55887c45df00 <line:250:1, line:267:78>
|   |-ParagraphComment 0x55887c45d9a0 <line:250:1, line:251:23>
|   | |-TextComment 0x55887c45d950 <line:250:1, col:94> Text="  Scans a target buffer for a 16-bit value, and returns a pointer to the matching 16-bit value"
|   | `-TextComment 0x55887c45d970 <line:251:1, col:23> Text="  in the target buffer."
|   |-ParagraphComment 0x55887c45da60 <line:253:1, line:256:64>
|   | |-TextComment 0x55887c45d9c0 <line:253:1, col:89> Text="  This function searches target the buffer specified by Buffer and Length from the lowest"
|   | |-TextComment 0x55887c45d9e0 <line:254:1, col:93> Text="  address to the highest address for a 16-bit value that matches Value.  If a match is found,"
|   | |-TextComment 0x55887c45da00 <line:255:1, col:94> Text="  then a pointer to the matching byte in the target buffer is returned.  If no match is found,"
|   | `-TextComment 0x55887c45da20 <line:256:1, col:64> Text="  then NULL is returned.  If Length is 0, then NULL is returned."
|   |-ParagraphComment 0x55887c45db20 <line:258:1, line:261:70>
|   | |-TextComment 0x55887c45da80 <line:258:1, col:50> Text="  If Length > 0 and Buffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c45daa0 <line:259:1, col:63> Text="  If Buffer is not aligned on a 16-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c45dac0 <line:260:1, col:63> Text="  If Length is not aligned on a 16-bit boundary, then ASSERT()."
|   | `-TextComment 0x55887c45dae0 <line:261:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c45db70 <line:263:1, col:2>
|   | `-TextComment 0x55887c45db40 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45db90 <col:3, line:264:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c45dc40 <line:263:17, line:264:2>
|   |   |-TextComment 0x55887c45dbf0 <line:263:17, col:63> Text="      The pointer to the target buffer to scan."
|   |   `-TextComment 0x55887c45dc10 <line:264:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45dc60 <col:3, line:265:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c45dd10 <line:264:17, line:265:2>
|   |   |-TextComment 0x55887c45dcc0 <line:264:17, col:60> Text="      The number of bytes in Buffer to scan."
|   |   `-TextComment 0x55887c45dce0 <line:265:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45dd30 <col:3, col:67> [in] implicitly Param="Value" ParamIndex=2
|   | `-ParagraphComment 0x55887c45ddc0 <col:16, col:67>
|   |   `-TextComment 0x55887c45dd90 <col:16, col:67> Text="       The value to search for in the target buffer."
|   |-ParagraphComment 0x55887c45de10 <line:267:1, col:2>
|   | `-TextComment 0x55887c45dde0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c45de30 <col:3, col:78> Name="return"
|     `-ParagraphComment 0x55887c45de90 <col:10, col:78>
|       `-TextComment 0x55887c45de60 <col:10, col:78> Text=" A pointer to the matching byte in the target buffer, otherwise NULL."
|-FunctionDecl 0x55887c2dc0e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:305:3> line:301:1 ScanMem32 'void *(const void *, UINTN, UINT32)'
| |-ParmVarDecl 0x55887c2dbec0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:302:19> col:19 Buffer 'const void *'
| |-ParmVarDecl 0x55887c2dbf38 <line:303:6, col:18> col:18 Length 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2dbfb0 <line:304:6, col:18> col:18 Value 'UINT32':'unsigned int'
| `-FullComment 0x55887c45e520 <line:279:1, line:296:78>
|   |-ParagraphComment 0x55887c45dfc0 <line:279:1, line:280:23>
|   | |-TextComment 0x55887c45df70 <line:279:1, col:94> Text="  Scans a target buffer for a 32-bit value, and returns a pointer to the matching 32-bit value"
|   | `-TextComment 0x55887c45df90 <line:280:1, col:23> Text="  in the target buffer."
|   |-ParagraphComment 0x55887c45e080 <line:282:1, line:285:64>
|   | |-TextComment 0x55887c45dfe0 <line:282:1, col:89> Text="  This function searches target the buffer specified by Buffer and Length from the lowest"
|   | |-TextComment 0x55887c45e000 <line:283:1, col:93> Text="  address to the highest address for a 32-bit value that matches Value.  If a match is found,"
|   | |-TextComment 0x55887c45e020 <line:284:1, col:94> Text="  then a pointer to the matching byte in the target buffer is returned.  If no match is found,"
|   | `-TextComment 0x55887c45e040 <line:285:1, col:64> Text="  then NULL is returned.  If Length is 0, then NULL is returned."
|   |-ParagraphComment 0x55887c45e140 <line:287:1, line:290:70>
|   | |-TextComment 0x55887c45e0a0 <line:287:1, col:50> Text="  If Length > 0 and Buffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c45e0c0 <line:288:1, col:63> Text="  If Buffer is not aligned on a 32-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c45e0e0 <line:289:1, col:63> Text="  If Length is not aligned on a 32-bit boundary, then ASSERT()."
|   | `-TextComment 0x55887c45e100 <line:290:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c45e190 <line:292:1, col:2>
|   | `-TextComment 0x55887c45e160 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45e1b0 <col:3, line:293:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c45e260 <line:292:17, line:293:2>
|   |   |-TextComment 0x55887c45e210 <line:292:17, col:63> Text="      The pointer to the target buffer to scan."
|   |   `-TextComment 0x55887c45e230 <line:293:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45e280 <col:3, line:294:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c45e330 <line:293:17, line:294:2>
|   |   |-TextComment 0x55887c45e2e0 <line:293:17, col:60> Text="      The number of bytes in Buffer to scan."
|   |   `-TextComment 0x55887c45e300 <line:294:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45e350 <col:3, col:67> [in] implicitly Param="Value" ParamIndex=2
|   | `-ParagraphComment 0x55887c45e3e0 <col:16, col:67>
|   |   `-TextComment 0x55887c45e3b0 <col:16, col:67> Text="       The value to search for in the target buffer."
|   |-ParagraphComment 0x55887c45e430 <line:296:1, col:2>
|   | `-TextComment 0x55887c45e400 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c45e450 <col:3, col:78> Name="return"
|     `-ParagraphComment 0x55887c45e4b0 <col:10, col:78>
|       `-TextComment 0x55887c45e480 <col:10, col:78> Text=" A pointer to the matching byte in the target buffer, otherwise NULL."
|-FunctionDecl 0x55887c2dc400 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:334:3> line:330:1 ScanMem64 'void *(const void *, UINTN, UINT64)'
| |-ParmVarDecl 0x55887c2dc1e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:331:19> col:19 Buffer 'const void *'
| |-ParmVarDecl 0x55887c2dc258 <line:332:6, col:18> col:18 Length 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2dc2d0 <line:333:6, col:18> col:18 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c45eb50 <line:308:1, line:325:78>
|   |-ParagraphComment 0x55887c45e5e0 <line:308:1, line:309:23>
|   | |-TextComment 0x55887c45e590 <line:308:1, col:94> Text="  Scans a target buffer for a 64-bit value, and returns a pointer to the matching 64-bit value"
|   | `-TextComment 0x55887c45e5b0 <line:309:1, col:23> Text="  in the target buffer."
|   |-ParagraphComment 0x55887c45e6b0 <line:311:1, line:314:64>
|   | |-TextComment 0x55887c45e600 <line:311:1, col:89> Text="  This function searches target the buffer specified by Buffer and Length from the lowest"
|   | |-TextComment 0x55887c45e620 <line:312:1, col:93> Text="  address to the highest address for a 64-bit value that matches Value.  If a match is found,"
|   | |-TextComment 0x55887c45e650 <line:313:1, col:94> Text="  then a pointer to the matching byte in the target buffer is returned.  If no match is found,"
|   | `-TextComment 0x55887c45e670 <line:314:1, col:64> Text="  then NULL is returned.  If Length is 0, then NULL is returned."
|   |-ParagraphComment 0x55887c45e770 <line:316:1, line:319:70>
|   | |-TextComment 0x55887c45e6d0 <line:316:1, col:50> Text="  If Length > 0 and Buffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c45e6f0 <line:317:1, col:63> Text="  If Buffer is not aligned on a 64-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c45e710 <line:318:1, col:63> Text="  If Length is not aligned on a 64-bit boundary, then ASSERT()."
|   | `-TextComment 0x55887c45e730 <line:319:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c45e7c0 <line:321:1, col:2>
|   | `-TextComment 0x55887c45e790 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45e7e0 <col:3, line:322:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c45e890 <line:321:17, line:322:2>
|   |   |-TextComment 0x55887c45e840 <line:321:17, col:63> Text="      The pointer to the target buffer to scan."
|   |   `-TextComment 0x55887c45e860 <line:322:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45e8b0 <col:3, line:323:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c45e960 <line:322:17, line:323:2>
|   |   |-TextComment 0x55887c45e910 <line:322:17, col:60> Text="      The number of bytes in Buffer to scan."
|   |   `-TextComment 0x55887c45e930 <line:323:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45e980 <col:3, col:67> [in] implicitly Param="Value" ParamIndex=2
|   | `-ParagraphComment 0x55887c45ea10 <col:16, col:67>
|   |   `-TextComment 0x55887c45e9e0 <col:16, col:67> Text="       The value to search for in the target buffer."
|   |-ParagraphComment 0x55887c45ea60 <line:325:1, col:2>
|   | `-TextComment 0x55887c45ea30 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c45ea80 <col:3, col:78> Name="return"
|     `-ParagraphComment 0x55887c45eae0 <col:10, col:78>
|       `-TextComment 0x55887c45eab0 <col:10, col:78> Text=" A pointer to the matching byte in the target buffer, otherwise NULL."
|-FunctionDecl 0x55887c2dc6e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:363:3> line:359:1 ScanMemN 'void *(const void *, UINTN, UINTN)'
| |-ParmVarDecl 0x55887c2dc500 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:360:19> col:19 Buffer 'const void *'
| |-ParmVarDecl 0x55887c2dc578 <line:361:6, col:18> col:18 Length 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2dc5f0 <line:362:6, col:18> col:18 Value 'UINTN':'unsigned long long'
| `-FullComment 0x55887c45f170 <line:337:1, line:354:78>
|   |-ParagraphComment 0x55887c45ec10 <line:337:1, line:338:41>
|   | |-TextComment 0x55887c45ebc0 <line:337:1, col:86> Text="  Scans a target buffer for a UINTN sized value, and returns a pointer to the matching"
|   | `-TextComment 0x55887c45ebe0 <line:338:1, col:41> Text="  UINTN sized value in the target buffer."
|   |-ParagraphComment 0x55887c45ecd0 <line:340:1, line:343:64>
|   | |-TextComment 0x55887c45ec30 <line:340:1, col:89> Text="  This function searches target the buffer specified by Buffer and Length from the lowest"
|   | |-TextComment 0x55887c45ec50 <line:341:1, col:98> Text="  address to the highest address for a UINTN sized value that matches Value.  If a match is found,"
|   | |-TextComment 0x55887c45ec70 <line:342:1, col:94> Text="  then a pointer to the matching byte in the target buffer is returned.  If no match is found,"
|   | `-TextComment 0x55887c45ec90 <line:343:1, col:64> Text="  then NULL is returned.  If Length is 0, then NULL is returned."
|   |-ParagraphComment 0x55887c45ed90 <line:345:1, line:348:70>
|   | |-TextComment 0x55887c45ecf0 <line:345:1, col:50> Text="  If Length > 0 and Buffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c45ed10 <line:346:1, col:62> Text="  If Buffer is not aligned on a UINTN boundary, then ASSERT()."
|   | |-TextComment 0x55887c45ed30 <line:347:1, col:62> Text="  If Length is not aligned on a UINTN boundary, then ASSERT()."
|   | `-TextComment 0x55887c45ed50 <line:348:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c45ede0 <line:350:1, col:2>
|   | `-TextComment 0x55887c45edb0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45ee00 <col:3, line:351:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c45eeb0 <line:350:17, line:351:2>
|   |   |-TextComment 0x55887c45ee60 <line:350:17, col:63> Text="      The pointer to the target buffer to scan."
|   |   `-TextComment 0x55887c45ee80 <line:351:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45eed0 <col:3, line:352:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c45ef80 <line:351:17, line:352:2>
|   |   |-TextComment 0x55887c45ef30 <line:351:17, col:60> Text="      The number of bytes in Buffer to scan."
|   |   `-TextComment 0x55887c45ef50 <line:352:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45efa0 <col:3, col:67> [in] implicitly Param="Value" ParamIndex=2
|   | `-ParagraphComment 0x55887c45f030 <col:16, col:67>
|   |   `-TextComment 0x55887c45f000 <col:16, col:67> Text="       The value to search for in the target buffer."
|   |-ParagraphComment 0x55887c45f080 <line:354:1, col:2>
|   | `-TextComment 0x55887c45f050 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c45f0a0 <col:3, col:78> Name="return"
|     `-ParagraphComment 0x55887c45f100 <col:10, col:78>
|       `-TextComment 0x55887c45f0d0 <col:10, col:78> Text=" A pointer to the matching byte in the target buffer, otherwise NULL."
|-FunctionDecl 0x55887c2dc968 <line:380:1, line:385:3> line:382:1 CopyGuid 'GUID *(GUID *, const GUID *)'
| |-ParmVarDecl 0x55887c2dc7d8 <line:383:7, col:19> col:19 DestinationGuid 'GUID *'
| |-ParmVarDecl 0x55887c2dc850 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:384:19> col:19 SourceGuid 'const GUID *'
| `-FullComment 0x55887c45f5f0 <line:366:1, line:377:26>
|   |-ParagraphComment 0x55887c45f210 <line:366:1, col:45>
|   | `-TextComment 0x55887c45f1e0 <col:1, col:45> Text="  Copies a source GUID to a destination GUID."
|   |-ParagraphComment 0x55887c45f280 <line:368:1, line:369:47>
|   | |-TextComment 0x55887c45f230 <line:368:1, col:82> Text="  This function copies the contents of the 128-bit GUID specified by SourceGuid to"
|   | `-TextComment 0x55887c45f250 <line:369:1, col:47> Text="  DestinationGuid, and returns DestinationGuid."
|   |-ParagraphComment 0x55887c45f2f0 <line:371:1, line:372:39>
|   | |-TextComment 0x55887c45f2a0 <line:371:1, col:44> Text="  If DestinationGuid is NULL, then ASSERT()."
|   | `-TextComment 0x55887c45f2c0 <line:372:1, col:39> Text="  If SourceGuid is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c45f340 <line:374:1, col:2>
|   | `-TextComment 0x55887c45f310 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45f360 <col:3, line:375:2> [in] implicitly Param="DestinationGuid" ParamIndex=0
|   | `-ParagraphComment 0x55887c45f410 <line:374:26, line:375:2>
|   |   |-TextComment 0x55887c45f3c0 <line:374:26, col:64> Text="   The pointer to the destination GUID."
|   |   `-TextComment 0x55887c45f3e0 <line:375:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45f430 <col:3, col:59> [in] implicitly Param="SourceGuid" ParamIndex=1
|   | `-ParagraphComment 0x55887c45f4c0 <col:21, col:59>
|   |   `-TextComment 0x55887c45f490 <col:21, col:59> Text="        The pointer to the source GUID."
|   |-ParagraphComment 0x55887c45f510 <line:377:1, col:2>
|   | `-TextComment 0x55887c45f4e0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c45f530 <col:3, col:26> Name="return"
|     `-ParagraphComment 0x55887c45f590 <col:10, col:26>
|       `-TextComment 0x55887c45f560 <col:10, col:26> Text=" DestinationGuid."
|-FunctionDecl 0x55887c2dcbe8 <line:403:1, line:408:3> line:405:1 used CompareGuid 'BOOLEAN (const GUID *, const GUID *)'
| |-ParmVarDecl 0x55887c2dca58 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:406:19> col:19 Guid1 'const GUID *'
| |-ParmVarDecl 0x55887c2dcad0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:407:19> col:19 Guid2 'const GUID *'
| `-FullComment 0x55887c45fb60 <line:388:1, line:400:56>
|   |-ParagraphComment 0x55887c45f690 <line:388:1, col:21>
|   | `-TextComment 0x55887c45f660 <col:1, col:21> Text="  Compares two GUIDs."
|   |-ParagraphComment 0x55887c45f700 <line:390:1, line:391:76>
|   | |-TextComment 0x55887c45f6b0 <line:390:1, col:91> Text="  This function compares Guid1 to Guid2.  If the GUIDs are identical then TRUE is returned."
|   | `-TextComment 0x55887c45f6d0 <line:391:1, col:76> Text="  If there are any bit differences in the two GUIDs, then FALSE is returned."
|   |-ParagraphComment 0x55887c45f770 <line:393:1, line:394:34>
|   | |-TextComment 0x55887c45f720 <line:393:1, col:34> Text="  If Guid1 is NULL, then ASSERT()."
|   | `-TextComment 0x55887c45f740 <line:394:1, col:34> Text="  If Guid2 is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c45f7c0 <line:396:1, col:2>
|   | `-TextComment 0x55887c45f790 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45f7e0 <col:3, line:397:2> [in] implicitly Param="Guid1" ParamIndex=0
|   | `-ParagraphComment 0x55887c45f890 <line:396:16, line:397:2>
|   |   |-TextComment 0x55887c45f840 <line:396:16, col:50> Text="       A pointer to a 128 bit GUID."
|   |   `-TextComment 0x55887c45f860 <line:397:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45f8b0 <col:3, col:50> [in] implicitly Param="Guid2" ParamIndex=1
|   | `-ParagraphComment 0x55887c45f940 <col:16, col:50>
|   |   `-TextComment 0x55887c45f910 <col:16, col:50> Text="       A pointer to a 128 bit GUID."
|   |-ParagraphComment 0x55887c45f990 <line:399:1, col:2>
|   | `-TextComment 0x55887c45f960 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c45f9b0 <col:3, line:400:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c45fa50 <line:399:15, line:400:2>
|   |   |-TextComment 0x55887c45fa00 <line:399:15, col:52> Text="        Guid1 and Guid2 are identical."
|   |   `-TextComment 0x55887c45fa20 <line:400:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c45fa70 <col:3, col:56> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c45faf0 <col:16, col:56>
|       `-TextComment 0x55887c45fac0 <col:16, col:56> Text="       Guid1 and Guid2 are not identical."
|-FunctionDecl 0x55887c2dcf50 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:438:3> line:434:1 ScanGuid 'void *(const void *, UINTN, const GUID *)'
| |-ParmVarDecl 0x55887c2dcd30 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:435:19> col:19 Buffer 'const void *'
| |-ParmVarDecl 0x55887c2dcda8 <line:436:6, col:18> col:18 Length 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2dce20 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:437:19> col:19 Guid 'const GUID *'
| `-FullComment 0x55887c4601b0 <line:411:1, line:429:78>
|   |-ParagraphComment 0x55887c45fc20 <line:411:1, line:412:23>
|   | |-TextComment 0x55887c45fbd0 <line:411:1, col:78> Text="  Scans a target buffer for a GUID, and returns a pointer to the matching GUID"
|   | `-TextComment 0x55887c45fbf0 <line:412:1, col:23> Text="  in the target buffer."
|   |-ParagraphComment 0x55887c45fd10 <line:414:1, line:418:40>
|   | |-TextComment 0x55887c45fc40 <line:414:1, col:78> Text="  This function searches target the buffer specified by Buffer and Length from"
|   | |-TextComment 0x55887c45fc60 <line:415:1, col:81> Text="  the lowest address to the highest address at 128-bit increments for the 128-bit"
|   | |-TextComment 0x55887c45fc80 <line:416:1, col:84> Text="  GUID value that matches Guid.  If a match is found, then a pointer to the matching"
|   | |-TextComment 0x55887c45fca0 <line:417:1, col:86> Text="  GUID in the target buffer is returned.  If no match is found, then NULL is returned."
|   | `-TextComment 0x55887c45fcc0 <line:418:1, col:40> Text="  If Length is 0, then NULL is returned."
|   |-ParagraphComment 0x55887c45fdd0 <line:420:1, line:423:70>
|   | |-TextComment 0x55887c45fd30 <line:420:1, col:50> Text="  If Length > 0 and Buffer is NULL, then ASSERT()."
|   | |-TextComment 0x55887c45fd50 <line:421:1, col:63> Text="  If Buffer is not aligned on a 32-bit boundary, then ASSERT()."
|   | |-TextComment 0x55887c45fd70 <line:422:1, col:64> Text="  If Length is not aligned on a 128-bit boundary, then ASSERT()."
|   | `-TextComment 0x55887c45fd90 <line:423:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c45fe20 <line:425:1, col:2>
|   | `-TextComment 0x55887c45fdf0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45fe40 <col:3, line:426:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c45fef0 <line:425:17, line:426:2>
|   |   |-TextComment 0x55887c45fea0 <line:425:17, col:59> Text="  The pointer to the target buffer to scan."
|   |   `-TextComment 0x55887c45fec0 <line:426:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45ff10 <col:3, line:427:2> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c45ffc0 <line:426:17, line:427:2>
|   |   |-TextComment 0x55887c45ff70 <line:426:17, col:56> Text="  The number of bytes in Buffer to scan."
|   |   `-TextComment 0x55887c45ff90 <line:427:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c45ffe0 <col:3, col:63> [in] implicitly Param="Guid" ParamIndex=2
|   | `-ParagraphComment 0x55887c460070 <col:15, col:63>
|   |   `-TextComment 0x55887c460040 <col:15, col:63> Text="    The value to search for in the target buffer."
|   |-ParagraphComment 0x55887c4600c0 <line:429:1, col:2>
|   | `-TextComment 0x55887c460090 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c4600e0 <col:3, col:78> Name="return"
|     `-ParagraphComment 0x55887c460140 <col:10, col:78>
|       `-TextComment 0x55887c460110 <col:10, col:78> Text=" A pointer to the matching Guid in the target buffer, otherwise NULL."
|-FunctionDecl 0x55887c2dd138 <line:454:1, line:458:3> line:456:1 IsZeroGuid 'BOOLEAN (const GUID *)'
| |-ParmVarDecl 0x55887c2dd048 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:457:19> col:19 Guid 'const GUID *'
| `-FullComment 0x55887c460620 <line:441:1, line:451:46>
|   |-ParagraphComment 0x55887c460250 <line:441:1, col:42>
|   | `-TextComment 0x55887c460220 <col:1, col:42> Text="  Checks if the given GUID is a zero GUID."
|   |-ParagraphComment 0x55887c4602c0 <line:443:1, line:444:79>
|   | |-TextComment 0x55887c460270 <line:443:1, col:76> Text="  This function checks whether the given GUID is a zero GUID. If the GUID is"
|   | `-TextComment 0x55887c460290 <line:444:1, col:79> Text="  identical to a zero GUID then TRUE is returned. Otherwise, FALSE is returned."
|   |-ParagraphComment 0x55887c460310 <line:446:1, col:33>
|   | `-TextComment 0x55887c4602e0 <col:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c460360 <line:448:1, col:2>
|   | `-TextComment 0x55887c460330 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c460380 <col:3, col:52> [in] implicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c460410 <col:15, col:52>
|   |   `-TextComment 0x55887c4603e0 <col:15, col:52> Text="        The pointer to a 128 bit GUID."
|   |-ParagraphComment 0x55887c460460 <line:450:1, col:2>
|   | `-TextComment 0x55887c460430 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c460480 <col:3, line:451:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c460520 <line:450:15, line:451:2>
|   |   |-TextComment 0x55887c4604d0 <line:450:15, col:42> Text="        Guid is a zero GUID."
|   |   `-TextComment 0x55887c4604f0 <line:451:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c460540 <col:3, col:46> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c4605c0 <col:16, col:46>
|       `-TextComment 0x55887c460590 <col:16, col:46> Text="       Guid is not a zero GUID."
|-FunctionDecl 0x55887c2dd3a8 <line:476:1, line:481:3> line:478:1 IsZeroBuffer 'BOOLEAN (const void *, UINTN)'
| |-ParmVarDecl 0x55887c2dd220 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/BaseMemoryLib.h:479:19> col:19 Buffer 'const void *'
| |-ParmVarDecl 0x55887c2dd298 <line:480:6, col:18> col:18 Length 'UINTN':'unsigned long long'
| `-FullComment 0x55887c460b90 <line:461:1, line:473:63>
|   |-ParagraphComment 0x55887c4606c0 <line:461:1, col:51>
|   | `-TextComment 0x55887c460690 <col:1, col:51> Text="  Checks if the contents of a buffer are all zeros."
|   |-ParagraphComment 0x55887c460730 <line:463:1, line:464:63>
|   | |-TextComment 0x55887c4606e0 <line:463:1, col:77> Text="  This function checks whether the contents of a buffer are all zeros. If the"
|   | `-TextComment 0x55887c460700 <line:464:1, col:63> Text="  contents are all zeros, return TRUE. Otherwise, return FALSE."
|   |-ParagraphComment 0x55887c4607a0 <line:466:1, line:467:70>
|   | |-TextComment 0x55887c460750 <line:466:1, col:50> Text="  If Length > 0 and Buffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c460770 <line:467:1, col:70> Text="  If Length is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c4607f0 <line:469:1, col:2>
|   | `-TextComment 0x55887c4607c0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c460810 <col:3, line:470:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c4608c0 <line:469:17, line:470:2>
|   |   |-TextComment 0x55887c460870 <line:469:17, col:62> Text="      The pointer to the buffer to be checked."
|   |   `-TextComment 0x55887c460890 <line:470:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4608e0 <col:3, col:70> [in] implicitly Param="Length" ParamIndex=1
|   | `-ParagraphComment 0x55887c460970 <col:17, col:70>
|   |   `-TextComment 0x55887c460940 <col:17, col:70> Text="      The size of the buffer (in bytes) to be checked."
|   |-ParagraphComment 0x55887c4609c0 <line:472:1, col:2>
|   | `-TextComment 0x55887c460990 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c4609e0 <col:3, line:473:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c460a80 <line:472:15, line:473:2>
|   |   |-TextComment 0x55887c460a30 <line:472:15, col:59> Text="        Contents of the buffer are all zeros."
|   |   `-TextComment 0x55887c460a50 <line:473:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c460aa0 <col:3, col:63> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c460b20 <col:16, col:63>
|       `-TextComment 0x55887c460af0 <col:16, col:63> Text="       Contents of the buffer are not all zeros."
|-FunctionDecl 0x55887c2dd5c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:34:3> line:32:1 used AllocatePages 'void *(UINTN)'
| |-ParmVarDecl 0x55887c2dd4c8 <line:33:6, col:13> col:13 Pages 'UINTN':'unsigned long long'
| `-FullComment 0x55887c460f10 <line:18:1, line:27:72>
|   |-ParagraphComment 0x55887c460c30 <line:18:1, col:62>
|   | `-TextComment 0x55887c460c00 <col:1, col:62> Text="  Allocates one or more 4KB pages of type EfiBootServicesData."
|   |-ParagraphComment 0x55887c460cf0 <line:20:1, line:23:11>
|   | |-TextComment 0x55887c460c50 <line:20:1, col:92> Text="  Allocates the number of 4KB pages of type EfiBootServicesData and returns a pointer to the"
|   | |-TextComment 0x55887c460c70 <line:21:1, col:96> Text="  allocated buffer.  The buffer returned is aligned on a 4KB boundary.  If Pages is 0, then NULL"
|   | |-TextComment 0x55887c460c90 <line:22:1, col:92> Text="  is returned.  If there is not enough memory remaining to satisfy the request, then NULL is"
|   | `-TextComment 0x55887c460cb0 <line:23:1, col:11> Text="  returned."
|   |-ParagraphComment 0x55887c460d40 <line:25:1, col:2>
|   | `-TextComment 0x55887c460d10 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c460d60 <col:3, col:69> [in] implicitly Param="Pages" ParamIndex=0
|   | `-ParagraphComment 0x55887c460df0 <col:16, col:69>
|   |   `-TextComment 0x55887c460dc0 <col:16, col:69> Text="                 The number of 4 KB pages to allocate."
|   |-ParagraphComment 0x55887c460e40 <line:27:1, col:2>
|   | `-TextComment 0x55887c460e10 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c460e60 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c460ec0 <col:10, col:72>
|       `-TextComment 0x55887c460e90 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2dd740 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:53:3> line:51:1 AllocateRuntimePages 'void *(UINTN)'
| |-ParmVarDecl 0x55887c2dd6a8 <line:52:6, col:13> col:13 Pages 'UINTN':'unsigned long long'
| `-FullComment 0x55887c461290 <line:37:1, line:46:72>
|   |-ParagraphComment 0x55887c460fb0 <line:37:1, col:65>
|   | `-TextComment 0x55887c460f80 <col:1, col:65> Text="  Allocates one or more 4KB pages of type EfiRuntimeServicesData."
|   |-ParagraphComment 0x55887c461070 <line:39:1, line:42:11>
|   | |-TextComment 0x55887c460fd0 <line:39:1, col:95> Text="  Allocates the number of 4KB pages of type EfiRuntimeServicesData and returns a pointer to the"
|   | |-TextComment 0x55887c460ff0 <line:40:1, col:96> Text="  allocated buffer.  The buffer returned is aligned on a 4KB boundary.  If Pages is 0, then NULL"
|   | |-TextComment 0x55887c461010 <line:41:1, col:92> Text="  is returned.  If there is not enough memory remaining to satisfy the request, then NULL is"
|   | `-TextComment 0x55887c461030 <line:42:1, col:11> Text="  returned."
|   |-ParagraphComment 0x55887c4610c0 <line:44:1, col:2>
|   | `-TextComment 0x55887c461090 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4610e0 <col:3, col:69> [in] implicitly Param="Pages" ParamIndex=0
|   | `-ParagraphComment 0x55887c461170 <col:16, col:69>
|   |   `-TextComment 0x55887c461140 <col:16, col:69> Text="                 The number of 4 KB pages to allocate."
|   |-ParagraphComment 0x55887c4611c0 <line:46:1, col:2>
|   | `-TextComment 0x55887c461190 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c4611e0 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c461240 <col:10, col:72>
|       `-TextComment 0x55887c461210 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2dd8c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:72:3> line:70:1 AllocateReservedPages 'void *(UINTN)'
| |-ParmVarDecl 0x55887c2dd828 <line:71:6, col:13> col:13 Pages 'UINTN':'unsigned long long'
| `-FullComment 0x55887c461610 <line:56:1, line:65:72>
|   |-ParagraphComment 0x55887c461330 <line:56:1, col:64>
|   | `-TextComment 0x55887c461300 <col:1, col:64> Text="  Allocates one or more 4KB pages of type EfiReservedMemoryType."
|   |-ParagraphComment 0x55887c4613f0 <line:58:1, line:61:11>
|   | |-TextComment 0x55887c461350 <line:58:1, col:94> Text="  Allocates the number of 4KB pages of type EfiReservedMemoryType and returns a pointer to the"
|   | |-TextComment 0x55887c461370 <line:59:1, col:96> Text="  allocated buffer.  The buffer returned is aligned on a 4KB boundary.  If Pages is 0, then NULL"
|   | |-TextComment 0x55887c461390 <line:60:1, col:92> Text="  is returned.  If there is not enough memory remaining to satisfy the request, then NULL is"
|   | `-TextComment 0x55887c4613b0 <line:61:1, col:11> Text="  returned."
|   |-ParagraphComment 0x55887c461440 <line:63:1, col:2>
|   | `-TextComment 0x55887c461410 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c461460 <col:3, col:69> [in] implicitly Param="Pages" ParamIndex=0
|   | `-ParagraphComment 0x55887c4614f0 <col:16, col:69>
|   |   `-TextComment 0x55887c4614c0 <col:16, col:69> Text="                 The number of 4 KB pages to allocate."
|   |-ParagraphComment 0x55887c461540 <line:65:1, col:2>
|   | `-TextComment 0x55887c461510 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c461560 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c4615c0 <col:10, col:72>
|       `-TextComment 0x55887c461590 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2ddb38 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:96:3> line:93:1 FreePages 'void (void *, UINTN)'
| |-ParmVarDecl 0x55887c2dd9b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:94:14> col:14 Buffer 'void *'
| |-ParmVarDecl 0x55887c2dda28 <line:95:6, col:13> col:13 Pages 'UINTN':'unsigned long long'
| `-FullComment 0x55887c461a50 <line:75:1, line:88:65>
|   |-ParagraphComment 0x55887c4616d0 <line:75:1, line:76:45>
|   | |-TextComment 0x55887c461680 <line:75:1, col:92> Text="  Frees one or more 4KB pages that were previously allocated with one of the page allocation"
|   | `-TextComment 0x55887c4616a0 <line:76:1, col:45> Text="  functions in the Memory Allocation Library."
|   |-ParagraphComment 0x55887c461790 <line:78:1, line:81:21>
|   | |-TextComment 0x55887c4616f0 <line:78:1, col:95> Text="  Frees the number of 4KB pages specified by Pages from the buffer specified by Buffer.  Buffer"
|   | |-TextComment 0x55887c461710 <line:79:1, col:91> Text="  must have been allocated on a previous call to the page allocation services of the Memory"
|   | |-TextComment 0x55887c461730 <line:80:1, col:93> Text="  Allocation Library.  If it is not possible to free allocated pages, then this function will"
|   | `-TextComment 0x55887c461750 <line:81:1, col:21> Text="  perform no actions."
|   |-ParagraphComment 0x55887c461830 <line:83:1, line:85:34>
|   | |-TextComment 0x55887c4617b0 <line:83:1, col:95> Text="  If Buffer was not allocated with a page allocation function in the Memory Allocation Library,"
|   | |-TextComment 0x55887c4617d0 <line:84:1, col:16> Text="  then ASSERT()."
|   | `-TextComment 0x55887c4617f0 <line:85:1, col:34> Text="  If Pages is zero, then ASSERT()."
|   |-ParagraphComment 0x55887c461880 <line:87:1, col:2>
|   | `-TextComment 0x55887c461850 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4618a0 <col:3, line:88:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c461950 <line:87:17, line:88:2>
|   |   |-TextComment 0x55887c461900 <line:87:17, col:71> Text="                Pointer to the buffer of pages to free."
|   |   `-TextComment 0x55887c461920 <line:88:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c461970 <col:3, col:65> [in] implicitly Param="Pages" ParamIndex=1
|     `-ParagraphComment 0x55887c461a00 <col:16, col:65>
|       `-TextComment 0x55887c4619d0 <col:16, col:65> Text="                 The number of 4 KB pages to free."
|-FunctionDecl 0x55887c2dddc0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:121:3> line:118:1 AllocateAlignedPages 'void *(UINTN, UINTN)'
| |-ParmVarDecl 0x55887c2ddc28 <line:119:6, col:13> col:13 Pages 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2ddca0 <line:120:6, col:13> col:13 Alignment 'UINTN':'unsigned long long'
| `-FullComment 0x55887c461f40 <line:99:1, line:113:72>
|   |-ParagraphComment 0x55887c461af0 <line:99:1, col:87>
|   | `-TextComment 0x55887c461ac0 <col:1, col:87> Text="  Allocates one or more 4KB pages of type EfiBootServicesData at a specified alignment."
|   |-ParagraphComment 0x55887c461bb0 <line:101:1, line:104:33>
|   | |-TextComment 0x55887c461b10 <line:101:1, col:90> Text="  Allocates the number of 4KB pages specified by Pages of type EfiBootServicesData with an"
|   | |-TextComment 0x55887c461b30 <line:102:1, col:99> Text="  alignment specified by Alignment.  The allocated buffer is returned.  If Pages is 0, then NULL is"
|   | |-TextComment 0x55887c461b50 <line:103:1, col:94> Text="  returned.  If there is not enough memory at the specified alignment remaining to satisfy the"
|   | `-TextComment 0x55887c461b70 <line:104:1, col:33> Text="  request, then NULL is returned."
|   |-ParagraphComment 0x55887c461c20 <line:106:1, line:107:71>
|   | |-TextComment 0x55887c461bd0 <line:106:1, col:78> Text="  If Alignment is not a power of two and Alignment is not zero, then ASSERT()."
|   | `-TextComment 0x55887c461bf0 <line:107:1, col:71> Text="  If Pages plus EFI_SIZE_TO_PAGES (Alignment) overflows, then ASSERT()."
|   |-ParagraphComment 0x55887c461c70 <line:109:1, col:2>
|   | `-TextComment 0x55887c461c40 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c461c90 <col:3, line:110:2> [in] implicitly Param="Pages" ParamIndex=0
|   | `-ParagraphComment 0x55887c461d40 <line:109:16, line:110:2>
|   |   |-TextComment 0x55887c461cf0 <line:109:16, col:69> Text="                 The number of 4 KB pages to allocate."
|   |   `-TextComment 0x55887c461d10 <line:110:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c461d60 <col:3, line:111:82> [in] implicitly Param="Alignment" ParamIndex=1
|   | `-ParagraphComment 0x55887c461e10 <line:110:20, line:111:82>
|   |   |-TextComment 0x55887c461dc0 <line:110:20, col:99> Text="             The requested alignment of the allocation.  Must be a power of two."
|   |   `-TextComment 0x55887c461de0 <line:111:1, col:82> Text="                                If Alignment is zero, then byte alignment is used."
|   |-ParagraphComment 0x55887c461e60 <line:113:1, col:2>
|   | `-TextComment 0x55887c461e30 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c461e80 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c461ee0 <col:10, col:72>
|       `-TextComment 0x55887c461eb0 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2ddfc0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:146:3> line:143:1 AllocateAlignedRuntimePages 'void *(UINTN, UINTN)'
| |-ParmVarDecl 0x55887c2ddea8 <line:144:6, col:13> col:13 Pages 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2ddf20 <line:145:6, col:13> col:13 Alignment 'UINTN':'unsigned long long'
| `-FullComment 0x55887c462430 <line:124:1, line:138:72>
|   |-ParagraphComment 0x55887c461fe0 <line:124:1, col:90>
|   | `-TextComment 0x55887c461fb0 <col:1, col:90> Text="  Allocates one or more 4KB pages of type EfiRuntimeServicesData at a specified alignment."
|   |-ParagraphComment 0x55887c4620a0 <line:126:1, line:129:33>
|   | |-TextComment 0x55887c462000 <line:126:1, col:93> Text="  Allocates the number of 4KB pages specified by Pages of type EfiRuntimeServicesData with an"
|   | |-TextComment 0x55887c462020 <line:127:1, col:99> Text="  alignment specified by Alignment.  The allocated buffer is returned.  If Pages is 0, then NULL is"
|   | |-TextComment 0x55887c462040 <line:128:1, col:94> Text="  returned.  If there is not enough memory at the specified alignment remaining to satisfy the"
|   | `-TextComment 0x55887c462060 <line:129:1, col:33> Text="  request, then NULL is returned."
|   |-ParagraphComment 0x55887c462110 <line:131:1, line:132:71>
|   | |-TextComment 0x55887c4620c0 <line:131:1, col:78> Text="  If Alignment is not a power of two and Alignment is not zero, then ASSERT()."
|   | `-TextComment 0x55887c4620e0 <line:132:1, col:71> Text="  If Pages plus EFI_SIZE_TO_PAGES (Alignment) overflows, then ASSERT()."
|   |-ParagraphComment 0x55887c462160 <line:134:1, col:2>
|   | `-TextComment 0x55887c462130 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c462180 <col:3, line:135:2> [in] implicitly Param="Pages" ParamIndex=0
|   | `-ParagraphComment 0x55887c462230 <line:134:16, line:135:2>
|   |   |-TextComment 0x55887c4621e0 <line:134:16, col:69> Text="                 The number of 4 KB pages to allocate."
|   |   `-TextComment 0x55887c462200 <line:135:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c462250 <col:3, line:136:82> [in] implicitly Param="Alignment" ParamIndex=1
|   | `-ParagraphComment 0x55887c462300 <line:135:20, line:136:82>
|   |   |-TextComment 0x55887c4622b0 <line:135:20, col:99> Text="             The requested alignment of the allocation.  Must be a power of two."
|   |   `-TextComment 0x55887c4622d0 <line:136:1, col:82> Text="                                If Alignment is zero, then byte alignment is used."
|   |-ParagraphComment 0x55887c462350 <line:138:1, col:2>
|   | `-TextComment 0x55887c462320 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c462370 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c4623d0 <col:10, col:72>
|       `-TextComment 0x55887c4623a0 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2de1c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:171:3> line:168:1 AllocateAlignedReservedPages 'void *(UINTN, UINTN)'
| |-ParmVarDecl 0x55887c2de0a8 <line:169:6, col:13> col:13 Pages 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2de120 <line:170:6, col:13> col:13 Alignment 'UINTN':'unsigned long long'
| `-FullComment 0x55887c462930 <line:149:1, line:163:72>
|   |-ParagraphComment 0x55887c4624d0 <line:149:1, col:89>
|   | `-TextComment 0x55887c4624a0 <col:1, col:89> Text="  Allocates one or more 4KB pages of type EfiReservedMemoryType at a specified alignment."
|   |-ParagraphComment 0x55887c462590 <line:151:1, line:154:33>
|   | |-TextComment 0x55887c4624f0 <line:151:1, col:92> Text="  Allocates the number of 4KB pages specified by Pages of type EfiReservedMemoryType with an"
|   | |-TextComment 0x55887c462510 <line:152:1, col:99> Text="  alignment specified by Alignment.  The allocated buffer is returned.  If Pages is 0, then NULL is"
|   | |-TextComment 0x55887c462530 <line:153:1, col:94> Text="  returned.  If there is not enough memory at the specified alignment remaining to satisfy the"
|   | `-TextComment 0x55887c462550 <line:154:1, col:33> Text="  request, then NULL is returned."
|   |-ParagraphComment 0x55887c462600 <line:156:1, line:157:71>
|   | |-TextComment 0x55887c4625b0 <line:156:1, col:78> Text="  If Alignment is not a power of two and Alignment is not zero, then ASSERT()."
|   | `-TextComment 0x55887c4625d0 <line:157:1, col:71> Text="  If Pages plus EFI_SIZE_TO_PAGES (Alignment) overflows, then ASSERT()."
|   |-ParagraphComment 0x55887c462660 <line:159:1, col:2>
|   | `-TextComment 0x55887c462620 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c462680 <col:3, line:160:2> [in] implicitly Param="Pages" ParamIndex=0
|   | `-ParagraphComment 0x55887c462730 <line:159:16, line:160:2>
|   |   |-TextComment 0x55887c4626e0 <line:159:16, col:69> Text="                 The number of 4 KB pages to allocate."
|   |   `-TextComment 0x55887c462700 <line:160:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c462750 <col:3, line:161:82> [in] implicitly Param="Alignment" ParamIndex=1
|   | `-ParagraphComment 0x55887c462800 <line:160:20, line:161:82>
|   |   |-TextComment 0x55887c4627b0 <line:160:20, col:99> Text="             The requested alignment of the allocation.  Must be a power of two."
|   |   `-TextComment 0x55887c4627d0 <line:161:1, col:82> Text="                                If Alignment is zero, then byte alignment is used."
|   |-ParagraphComment 0x55887c462850 <line:163:1, col:2>
|   | `-TextComment 0x55887c462820 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c462870 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c4628d0 <col:10, col:72>
|       `-TextComment 0x55887c4628a0 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2de3c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:195:3> line:192:1 FreeAlignedPages 'void (void *, UINTN)'
| |-ParmVarDecl 0x55887c2de2b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:193:14> col:14 Buffer 'void *'
| |-ParmVarDecl 0x55887c2de328 <line:194:6, col:13> col:13 Pages 'UINTN':'unsigned long long'
| `-FullComment 0x55887c462d70 <line:174:1, line:187:65>
|   |-ParagraphComment 0x55887c4629f0 <line:174:1, line:175:56>
|   | |-TextComment 0x55887c4629a0 <line:174:1, col:89> Text="  Frees one or more 4KB pages that were previously allocated with one of the aligned page"
|   | `-TextComment 0x55887c4629c0 <line:175:1, col:56> Text="  allocation functions in the Memory Allocation Library."
|   |-ParagraphComment 0x55887c462ab0 <line:177:1, line:180:21>
|   | |-TextComment 0x55887c462a10 <line:177:1, col:95> Text="  Frees the number of 4KB pages specified by Pages from the buffer specified by Buffer.  Buffer"
|   | |-TextComment 0x55887c462a30 <line:178:1, col:99> Text="  must have been allocated on a previous call to the aligned page allocation services of the Memory"
|   | |-TextComment 0x55887c462a50 <line:179:1, col:93> Text="  Allocation Library.  If it is not possible to free allocated pages, then this function will"
|   | `-TextComment 0x55887c462a70 <line:180:1, col:21> Text="  perform no actions."
|   |-ParagraphComment 0x55887c462b50 <line:182:1, line:184:34>
|   | |-TextComment 0x55887c462ad0 <line:182:1, col:95> Text="  If Buffer was not allocated with an aligned page allocation function in the Memory Allocation"
|   | |-TextComment 0x55887c462af0 <line:183:1, col:25> Text="  Library, then ASSERT()."
|   | `-TextComment 0x55887c462b10 <line:184:1, col:34> Text="  If Pages is zero, then ASSERT()."
|   |-ParagraphComment 0x55887c462ba0 <line:186:1, col:2>
|   | `-TextComment 0x55887c462b70 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c462bc0 <col:3, line:187:2> [in] implicitly Param="Buffer" ParamIndex=0
|   | `-ParagraphComment 0x55887c462c70 <line:186:17, line:187:2>
|   |   |-TextComment 0x55887c462c20 <line:186:17, col:71> Text="                Pointer to the buffer of pages to free."
|   |   `-TextComment 0x55887c462c40 <line:187:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c462c90 <col:3, col:65> [in] implicitly Param="Pages" ParamIndex=1
|     `-ParagraphComment 0x55887c462d20 <col:16, col:65>
|       `-TextComment 0x55887c462cf0 <col:16, col:65> Text="                 The number of 4 KB pages to free."
|-FunctionDecl 0x55887c2de540 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:213:3> line:211:1 used AllocatePool 'void *(UINTN)'
| |-ParmVarDecl 0x55887c2de4a8 <line:212:6, col:13> col:13 AllocationSize 'UINTN':'unsigned long long'
| `-FullComment 0x55887c4630d0 <line:198:1, line:206:72>
|   |-ParagraphComment 0x55887c462e10 <line:198:1, col:49>
|   | `-TextComment 0x55887c462de0 <col:1, col:49> Text="  Allocates a buffer of type EfiBootServicesData."
|   |-ParagraphComment 0x55887c462eb0 <line:200:1, line:202:99>
|   | |-TextComment 0x55887c462e30 <line:200:1, col:98> Text="  Allocates the number bytes specified by AllocationSize of type EfiBootServicesData and returns a"
|   | |-TextComment 0x55887c462e50 <line:201:1, col:92> Text="  pointer to the allocated buffer.  If AllocationSize is 0, then a valid buffer of 0 size is"
|   | `-TextComment 0x55887c462e70 <line:202:1, col:99> Text="  returned.  If there is not enough memory remaining to satisfy the request, then NULL is returned."
|   |-ParagraphComment 0x55887c462f00 <line:204:1, col:2>
|   | `-TextComment 0x55887c462ed0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c462f20 <col:3, col:64> [in] implicitly Param="AllocationSize" ParamIndex=0
|   | `-ParagraphComment 0x55887c462fb0 <col:25, col:64>
|   |   `-TextComment 0x55887c462f80 <col:25, col:64> Text="        The number of bytes to allocate."
|   |-ParagraphComment 0x55887c463000 <line:206:1, col:2>
|   | `-TextComment 0x55887c462fd0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c463020 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c463080 <col:10, col:72>
|       `-TextComment 0x55887c463050 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2de6c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:231:3> line:229:1 AllocateRuntimePool 'void *(UINTN)'
| |-ParmVarDecl 0x55887c2de628 <line:230:6, col:13> col:13 AllocationSize 'UINTN':'unsigned long long'
| `-FullComment 0x55887c463430 <line:216:1, line:224:72>
|   |-ParagraphComment 0x55887c463170 <line:216:1, col:52>
|   | `-TextComment 0x55887c463140 <col:1, col:52> Text="  Allocates a buffer of type EfiRuntimeServicesData."
|   |-ParagraphComment 0x55887c463210 <line:218:1, line:220:99>
|   | |-TextComment 0x55887c463190 <line:218:1, col:99> Text="  Allocates the number bytes specified by AllocationSize of type EfiRuntimeServicesData and returns"
|   | |-TextComment 0x55887c4631b0 <line:219:1, col:94> Text="  a pointer to the allocated buffer.  If AllocationSize is 0, then a valid buffer of 0 size is"
|   | `-TextComment 0x55887c4631d0 <line:220:1, col:99> Text="  returned.  If there is not enough memory remaining to satisfy the request, then NULL is returned."
|   |-ParagraphComment 0x55887c463260 <line:222:1, col:2>
|   | `-TextComment 0x55887c463230 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c463280 <col:3, col:64> [in] implicitly Param="AllocationSize" ParamIndex=0
|   | `-ParagraphComment 0x55887c463310 <col:25, col:64>
|   |   `-TextComment 0x55887c4632e0 <col:25, col:64> Text="        The number of bytes to allocate."
|   |-ParagraphComment 0x55887c463360 <line:224:1, col:2>
|   | `-TextComment 0x55887c463330 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c463380 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c4633e0 <col:10, col:72>
|       `-TextComment 0x55887c4633b0 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2de840 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:249:3> line:247:1 AllocateReservedPool 'void *(UINTN)'
| |-ParmVarDecl 0x55887c2de7a8 <line:248:6, col:13> col:13 AllocationSize 'UINTN':'unsigned long long'
| `-FullComment 0x55887c463790 <line:234:1, line:242:72>
|   |-ParagraphComment 0x55887c4634d0 <line:234:1, col:51>
|   | `-TextComment 0x55887c4634a0 <col:1, col:51> Text="  Allocates a buffer of type EfiReservedMemoryType."
|   |-ParagraphComment 0x55887c463570 <line:236:1, line:238:99>
|   | |-TextComment 0x55887c4634f0 <line:236:1, col:98> Text="  Allocates the number bytes specified by AllocationSize of type EfiReservedMemoryType and returns"
|   | |-TextComment 0x55887c463510 <line:237:1, col:94> Text="  a pointer to the allocated buffer.  If AllocationSize is 0, then a valid buffer of 0 size is"
|   | `-TextComment 0x55887c463530 <line:238:1, col:99> Text="  returned.  If there is not enough memory remaining to satisfy the request, then NULL is returned."
|   |-ParagraphComment 0x55887c4635c0 <line:240:1, col:2>
|   | `-TextComment 0x55887c463590 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4635e0 <col:3, col:64> [in] implicitly Param="AllocationSize" ParamIndex=0
|   | `-ParagraphComment 0x55887c463670 <col:25, col:64>
|   |   `-TextComment 0x55887c463640 <col:25, col:64> Text="        The number of bytes to allocate."
|   |-ParagraphComment 0x55887c4636c0 <line:242:1, col:2>
|   | `-TextComment 0x55887c463690 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c4636e0 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c463740 <col:10, col:72>
|       `-TextComment 0x55887c463710 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2de9c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:268:3> line:266:1 AllocateZeroPool 'void *(UINTN)'
| |-ParmVarDecl 0x55887c2de928 <line:267:6, col:13> col:13 AllocationSize 'UINTN':'unsigned long long'
| `-FullComment 0x55887c463b10 <line:252:1, line:261:72>
|   |-ParagraphComment 0x55887c463830 <line:252:1, col:59>
|   | `-TextComment 0x55887c463800 <col:1, col:59> Text="  Allocates and zeros a buffer of type EfiBootServicesData."
|   |-ParagraphComment 0x55887c4638f0 <line:254:1, line:257:33>
|   | |-TextComment 0x55887c463850 <line:254:1, col:96> Text="  Allocates the number bytes specified by AllocationSize of type EfiBootServicesData, clears the"
|   | |-TextComment 0x55887c463870 <line:255:1, col:99> Text="  buffer with zeros, and returns a pointer to the allocated buffer.  If AllocationSize is 0, then a"
|   | |-TextComment 0x55887c463890 <line:256:1, col:93> Text="  valid buffer of 0 size is returned.  If there is not enough memory remaining to satisfy the"
|   | `-TextComment 0x55887c4638b0 <line:257:1, col:33> Text="  request, then NULL is returned."
|   |-ParagraphComment 0x55887c463940 <line:259:1, col:2>
|   | `-TextComment 0x55887c463910 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c463960 <col:3, col:73> [in] implicitly Param="AllocationSize" ParamIndex=0
|   | `-ParagraphComment 0x55887c4639f0 <col:25, col:73>
|   |   `-TextComment 0x55887c4639c0 <col:25, col:73> Text="        The number of bytes to allocate and zero."
|   |-ParagraphComment 0x55887c463a40 <line:261:1, col:2>
|   | `-TextComment 0x55887c463a10 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c463a60 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c463ac0 <col:10, col:72>
|       `-TextComment 0x55887c463a90 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2deb40 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:287:3> line:285:1 AllocateRuntimeZeroPool 'void *(UINTN)'
| |-ParmVarDecl 0x55887c2deaa8 <line:286:6, col:13> col:13 AllocationSize 'UINTN':'unsigned long long'
| `-FullComment 0x55887c463e90 <line:271:1, line:280:72>
|   |-ParagraphComment 0x55887c463bb0 <line:271:1, col:62>
|   | `-TextComment 0x55887c463b80 <col:1, col:62> Text="  Allocates and zeros a buffer of type EfiRuntimeServicesData."
|   |-ParagraphComment 0x55887c463c70 <line:273:1, line:276:33>
|   | |-TextComment 0x55887c463bd0 <line:273:1, col:99> Text="  Allocates the number bytes specified by AllocationSize of type EfiRuntimeServicesData, clears the"
|   | |-TextComment 0x55887c463bf0 <line:274:1, col:99> Text="  buffer with zeros, and returns a pointer to the allocated buffer.  If AllocationSize is 0, then a"
|   | |-TextComment 0x55887c463c10 <line:275:1, col:93> Text="  valid buffer of 0 size is returned.  If there is not enough memory remaining to satisfy the"
|   | `-TextComment 0x55887c463c30 <line:276:1, col:33> Text="  request, then NULL is returned."
|   |-ParagraphComment 0x55887c463cc0 <line:278:1, col:2>
|   | `-TextComment 0x55887c463c90 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c463ce0 <col:3, col:73> [in] implicitly Param="AllocationSize" ParamIndex=0
|   | `-ParagraphComment 0x55887c463d70 <col:25, col:73>
|   |   `-TextComment 0x55887c463d40 <col:25, col:73> Text="        The number of bytes to allocate and zero."
|   |-ParagraphComment 0x55887c463dc0 <line:280:1, col:2>
|   | `-TextComment 0x55887c463d90 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c463de0 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c463e40 <col:10, col:72>
|       `-TextComment 0x55887c463e10 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2e0d50 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:306:3> line:304:1 AllocateReservedZeroPool 'void *(UINTN)'
| |-ParmVarDecl 0x55887c2dec28 <line:305:6, col:13> col:13 AllocationSize 'UINTN':'unsigned long long'
| `-FullComment 0x55887c464210 <line:290:1, line:299:72>
|   |-ParagraphComment 0x55887c463f30 <line:290:1, col:61>
|   | `-TextComment 0x55887c463f00 <col:1, col:61> Text="  Allocates and zeros a buffer of type EfiReservedMemoryType."
|   |-ParagraphComment 0x55887c463ff0 <line:292:1, line:295:33>
|   | |-TextComment 0x55887c463f50 <line:292:1, col:98> Text="  Allocates the number bytes specified by AllocationSize of type EfiReservedMemoryType, clears the"
|   | |-TextComment 0x55887c463f70 <line:293:1, col:99> Text="  buffer with zeros, and returns a pointer to the allocated buffer.  If AllocationSize is 0, then a"
|   | |-TextComment 0x55887c463f90 <line:294:1, col:93> Text="  valid buffer of 0 size is returned.  If there is not enough memory remaining to satisfy the"
|   | `-TextComment 0x55887c463fb0 <line:295:1, col:33> Text="  request, then NULL is returned."
|   |-ParagraphComment 0x55887c464040 <line:297:1, col:2>
|   | `-TextComment 0x55887c464010 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c464060 <col:3, col:73> [in] implicitly Param="AllocationSize" ParamIndex=0
|   | `-ParagraphComment 0x55887c4640f0 <col:25, col:73>
|   |   `-TextComment 0x55887c4640c0 <col:25, col:73> Text="        The number of bytes to allocate and zero."
|   |-ParagraphComment 0x55887c464140 <line:299:1, col:2>
|   | `-TextComment 0x55887c464110 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c464160 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c4641c0 <col:10, col:72>
|       `-TextComment 0x55887c464190 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2e0fd0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:330:3> line:327:1 AllocateCopyPool 'void *(UINTN, const void *)'
| |-ParmVarDecl 0x55887c2e0e38 <line:328:6, col:18> col:18 AllocationSize 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2e0eb8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:329:19> col:19 Buffer 'const void *'
| `-FullComment 0x55887c4646e0 <line:309:1, line:322:72>
|   |-ParagraphComment 0x55887c4642b0 <line:309:1, col:69>
|   | `-TextComment 0x55887c464280 <col:1, col:69> Text="  Copies a buffer to an allocated buffer of type EfiBootServicesData."
|   |-ParagraphComment 0x55887c464370 <line:311:1, line:314:79>
|   | |-TextComment 0x55887c4642d0 <line:311:1, col:92> Text="  Allocates the number bytes specified by AllocationSize of type EfiBootServicesData, copies"
|   | |-TextComment 0x55887c4642f0 <line:312:1, col:94> Text="  AllocationSize bytes from Buffer to the newly allocated buffer, and returns a pointer to the"
|   | |-TextComment 0x55887c464310 <line:313:1, col:97> Text="  allocated buffer.  If AllocationSize is 0, then a valid buffer of 0 size is returned.  If there"
|   | `-TextComment 0x55887c464330 <line:314:1, col:79> Text="  is not enough memory remaining to satisfy the request, then NULL is returned."
|   |-ParagraphComment 0x55887c4643e0 <line:316:1, line:317:78>
|   | |-TextComment 0x55887c464390 <line:316:1, col:35> Text="  If Buffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c4643b0 <line:317:1, col:78> Text="  If AllocationSize is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c464430 <line:319:1, col:2>
|   | `-TextComment 0x55887c464400 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c464450 <col:3, line:320:2> [in] implicitly Param="AllocationSize" ParamIndex=0
|   | `-ParagraphComment 0x55887c464500 <line:319:25, line:320:2>
|   |   |-TextComment 0x55887c4644b0 <line:319:25, col:73> Text="        The number of bytes to allocate and zero."
|   |   `-TextComment 0x55887c4644d0 <line:320:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c464520 <col:3, col:75> [in] implicitly Param="Buffer" ParamIndex=1
|   | `-ParagraphComment 0x55887c4645b0 <col:17, col:75>
|   |   `-TextComment 0x55887c464580 <col:17, col:75> Text="                The buffer to copy to the allocated buffer."
|   |-ParagraphComment 0x55887c464600 <line:322:1, col:2>
|   | `-TextComment 0x55887c4645d0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c464620 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c464680 <col:10, col:72>
|       `-TextComment 0x55887c464650 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2e11d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:354:3> line:351:1 AllocateRuntimeCopyPool 'void *(UINTN, const void *)'
| |-ParmVarDecl 0x55887c2e10b8 <line:352:6, col:18> col:18 AllocationSize 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2e1138 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:353:19> col:19 Buffer 'const void *'
| `-FullComment 0x55887c464bb0 <line:333:1, line:346:72>
|   |-ParagraphComment 0x55887c464780 <line:333:1, col:72>
|   | `-TextComment 0x55887c464750 <col:1, col:72> Text="  Copies a buffer to an allocated buffer of type EfiRuntimeServicesData."
|   |-ParagraphComment 0x55887c464840 <line:335:1, line:338:79>
|   | |-TextComment 0x55887c4647a0 <line:335:1, col:95> Text="  Allocates the number bytes specified by AllocationSize of type EfiRuntimeServicesData, copies"
|   | |-TextComment 0x55887c4647c0 <line:336:1, col:94> Text="  AllocationSize bytes from Buffer to the newly allocated buffer, and returns a pointer to the"
|   | |-TextComment 0x55887c4647e0 <line:337:1, col:97> Text="  allocated buffer.  If AllocationSize is 0, then a valid buffer of 0 size is returned.  If there"
|   | `-TextComment 0x55887c464800 <line:338:1, col:79> Text="  is not enough memory remaining to satisfy the request, then NULL is returned."
|   |-ParagraphComment 0x55887c4648b0 <line:340:1, line:341:78>
|   | |-TextComment 0x55887c464860 <line:340:1, col:35> Text="  If Buffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c464880 <line:341:1, col:78> Text="  If AllocationSize is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c464900 <line:343:1, col:2>
|   | `-TextComment 0x55887c4648d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c464920 <col:3, line:344:2> [in] implicitly Param="AllocationSize" ParamIndex=0
|   | `-ParagraphComment 0x55887c4649d0 <line:343:25, line:344:2>
|   |   |-TextComment 0x55887c464980 <line:343:25, col:73> Text="        The number of bytes to allocate and zero."
|   |   `-TextComment 0x55887c4649a0 <line:344:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4649f0 <col:3, col:75> [in] implicitly Param="Buffer" ParamIndex=1
|   | `-ParagraphComment 0x55887c464a80 <col:17, col:75>
|   |   `-TextComment 0x55887c464a50 <col:17, col:75> Text="                The buffer to copy to the allocated buffer."
|   |-ParagraphComment 0x55887c464ad0 <line:346:1, col:2>
|   | `-TextComment 0x55887c464aa0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c464af0 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c464b50 <col:10, col:72>
|       `-TextComment 0x55887c464b20 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2e13e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:378:3> line:375:1 AllocateReservedCopyPool 'void *(UINTN, const void *)'
| |-ParmVarDecl 0x55887c2e12c8 <line:376:6, col:18> col:18 AllocationSize 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2e1348 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:377:19> col:19 Buffer 'const void *'
| `-FullComment 0x55887c465080 <line:357:1, line:370:72>
|   |-ParagraphComment 0x55887c464c50 <line:357:1, col:71>
|   | `-TextComment 0x55887c464c20 <col:1, col:71> Text="  Copies a buffer to an allocated buffer of type EfiReservedMemoryType."
|   |-ParagraphComment 0x55887c464d10 <line:359:1, line:362:79>
|   | |-TextComment 0x55887c464c70 <line:359:1, col:94> Text="  Allocates the number bytes specified by AllocationSize of type EfiReservedMemoryType, copies"
|   | |-TextComment 0x55887c464c90 <line:360:1, col:94> Text="  AllocationSize bytes from Buffer to the newly allocated buffer, and returns a pointer to the"
|   | |-TextComment 0x55887c464cb0 <line:361:1, col:97> Text="  allocated buffer.  If AllocationSize is 0, then a valid buffer of 0 size is returned.  If there"
|   | `-TextComment 0x55887c464cd0 <line:362:1, col:79> Text="  is not enough memory remaining to satisfy the request, then NULL is returned."
|   |-ParagraphComment 0x55887c464d80 <line:364:1, line:365:78>
|   | |-TextComment 0x55887c464d30 <line:364:1, col:35> Text="  If Buffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c464d50 <line:365:1, col:78> Text="  If AllocationSize is greater than (MAX_ADDRESS - Buffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c464dd0 <line:367:1, col:2>
|   | `-TextComment 0x55887c464da0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c464df0 <col:3, line:368:2> [in] implicitly Param="AllocationSize" ParamIndex=0
|   | `-ParagraphComment 0x55887c464ea0 <line:367:25, line:368:2>
|   |   |-TextComment 0x55887c464e50 <line:367:25, col:73> Text="        The number of bytes to allocate and zero."
|   |   `-TextComment 0x55887c464e70 <line:368:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c464ec0 <col:3, col:75> [in] implicitly Param="Buffer" ParamIndex=1
|   | `-ParagraphComment 0x55887c464f50 <col:17, col:75>
|   |   `-TextComment 0x55887c464f20 <col:17, col:75> Text="                The buffer to copy to the allocated buffer."
|   |-ParagraphComment 0x55887c464fa0 <line:370:1, col:2>
|   | `-TextComment 0x55887c464f70 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c464fc0 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c465020 <col:10, col:72>
|       `-TextComment 0x55887c464ff0 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2e1700 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:407:3> line:403:1 ReallocatePool 'void *(UINTN, UINTN, void *)'
| |-ParmVarDecl 0x55887c2e14d8 <line:404:6, col:13> col:13 OldSize 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2e1550 <line:405:6, col:13> col:13 NewSize 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2e15d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:406:14> col:14 OldBuffer 'void *'
| `-FullComment 0x55887c4656a0 <line:381:1, line:398:72>
|   |-ParagraphComment 0x55887c465120 <line:381:1, col:51>
|   | `-TextComment 0x55887c4650f0 <col:1, col:51> Text="  Reallocates a buffer of type EfiBootServicesData."
|   |-ParagraphComment 0x55887c465230 <line:383:1, line:388:72>
|   | |-TextComment 0x55887c465140 <line:383:1, col:79> Text="  Allocates and zeros the number bytes specified by NewSize from memory of type"
|   | |-TextComment 0x55887c465160 <line:384:1, col:81> Text="  EfiBootServicesData.  If OldBuffer is not NULL, then the smaller of OldSize and"
|   | |-TextComment 0x55887c465180 <line:385:1, col:76> Text="  NewSize bytes are copied from OldBuffer to the newly allocated buffer, and"
|   | |-TextComment 0x55887c4651a0 <line:386:1, col:75> Text="  OldBuffer is freed.  A pointer to the newly allocated buffer is returned."
|   | |-TextComment 0x55887c4651c0 <line:387:1, col:79> Text="  If NewSize is 0, then a valid buffer of 0 size is  returned.  If there is not"
|   | `-TextComment 0x55887c4651e0 <line:388:1, col:72> Text="  enough memory remaining to satisfy the request, then NULL is returned."
|   |-ParagraphComment 0x55887c4652a0 <line:390:1, line:391:63>
|   | |-TextComment 0x55887c465250 <line:390:1, col:90> Text="  If the allocation of the new buffer is successful and the smaller of NewSize and OldSize"
|   | `-TextComment 0x55887c465270 <line:391:1, col:63> Text="  is greater than (MAX_ADDRESS - OldBuffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c4652f0 <line:393:1, col:2>
|   | `-TextComment 0x55887c4652c0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c465310 <col:3, line:394:2> [in] implicitly Param="OldSize" ParamIndex=0
|   | `-ParagraphComment 0x55887c4653c0 <line:393:18, line:394:2>
|   |   |-TextComment 0x55887c465370 <line:393:18, col:58> Text="        The size, in bytes, of OldBuffer."
|   |   `-TextComment 0x55887c465390 <line:394:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4653e0 <col:3, line:395:2> [in] implicitly Param="NewSize" ParamIndex=1
|   | `-ParagraphComment 0x55887c465490 <line:394:18, line:395:2>
|   |   |-TextComment 0x55887c465440 <line:394:18, col:73> Text="        The size, in bytes, of the buffer to reallocate."
|   |   `-TextComment 0x55887c465460 <line:395:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4654b0 <col:3, line:396:52> [in] implicitly Param="OldBuffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c465560 <line:395:20, line:396:52>
|   |   |-TextComment 0x55887c465510 <line:395:20, col:89> Text="      The buffer to copy to the allocated buffer.  This is an optional"
|   |   `-TextComment 0x55887c465530 <line:396:1, col:52> Text="                         parameter that may be NULL."
|   |-ParagraphComment 0x55887c4655b0 <line:398:1, col:2>
|   | `-TextComment 0x55887c465580 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c4655d0 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c465630 <col:10, col:72>
|       `-TextComment 0x55887c465600 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2e1998 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:436:3> line:432:1 ReallocateRuntimePool 'void *(UINTN, UINTN, void *)'
| |-ParmVarDecl 0x55887c2e17f8 <line:433:6, col:13> col:13 OldSize 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2e1870 <line:434:6, col:13> col:13 NewSize 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2e18f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:435:14> col:14 OldBuffer 'void *'
| `-FullComment 0x55887c465cc0 <line:410:1, line:427:72>
|   |-ParagraphComment 0x55887c465740 <line:410:1, col:54>
|   | `-TextComment 0x55887c465710 <col:1, col:54> Text="  Reallocates a buffer of type EfiRuntimeServicesData."
|   |-ParagraphComment 0x55887c465850 <line:412:1, line:417:72>
|   | |-TextComment 0x55887c465760 <line:412:1, col:79> Text="  Allocates and zeros the number bytes specified by NewSize from memory of type"
|   | |-TextComment 0x55887c465780 <line:413:1, col:84> Text="  EfiRuntimeServicesData.  If OldBuffer is not NULL, then the smaller of OldSize and"
|   | |-TextComment 0x55887c4657a0 <line:414:1, col:76> Text="  NewSize bytes are copied from OldBuffer to the newly allocated buffer, and"
|   | |-TextComment 0x55887c4657c0 <line:415:1, col:75> Text="  OldBuffer is freed.  A pointer to the newly allocated buffer is returned."
|   | |-TextComment 0x55887c4657e0 <line:416:1, col:79> Text="  If NewSize is 0, then a valid buffer of 0 size is  returned.  If there is not"
|   | `-TextComment 0x55887c465800 <line:417:1, col:72> Text="  enough memory remaining to satisfy the request, then NULL is returned."
|   |-ParagraphComment 0x55887c4658c0 <line:419:1, line:420:63>
|   | |-TextComment 0x55887c465870 <line:419:1, col:90> Text="  If the allocation of the new buffer is successful and the smaller of NewSize and OldSize"
|   | `-TextComment 0x55887c465890 <line:420:1, col:63> Text="  is greater than (MAX_ADDRESS - OldBuffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c465910 <line:422:1, col:2>
|   | `-TextComment 0x55887c4658e0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c465930 <col:3, line:423:2> [in] implicitly Param="OldSize" ParamIndex=0
|   | `-ParagraphComment 0x55887c4659e0 <line:422:18, line:423:2>
|   |   |-TextComment 0x55887c465990 <line:422:18, col:58> Text="        The size, in bytes, of OldBuffer."
|   |   `-TextComment 0x55887c4659b0 <line:423:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c465a00 <col:3, line:424:2> [in] implicitly Param="NewSize" ParamIndex=1
|   | `-ParagraphComment 0x55887c465ab0 <line:423:18, line:424:2>
|   |   |-TextComment 0x55887c465a60 <line:423:18, col:73> Text="        The size, in bytes, of the buffer to reallocate."
|   |   `-TextComment 0x55887c465a80 <line:424:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c465ad0 <col:3, line:425:52> [in] implicitly Param="OldBuffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c465b80 <line:424:20, line:425:52>
|   |   |-TextComment 0x55887c465b30 <line:424:20, col:89> Text="      The buffer to copy to the allocated buffer.  This is an optional"
|   |   `-TextComment 0x55887c465b50 <line:425:1, col:52> Text="                         parameter that may be NULL."
|   |-ParagraphComment 0x55887c465bd0 <line:427:1, col:2>
|   | `-TextComment 0x55887c465ba0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c465bf0 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c465c50 <col:10, col:72>
|       `-TextComment 0x55887c465c20 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2e1c28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:465:3> line:461:1 ReallocateReservedPool 'void *(UINTN, UINTN, void *)'
| |-ParmVarDecl 0x55887c2e1a88 <line:462:6, col:13> col:13 OldSize 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2e1b00 <line:463:6, col:13> col:13 NewSize 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2e1b80 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:464:14> col:14 OldBuffer 'void *'
| `-FullComment 0x55887c4662e0 <line:439:1, line:456:72>
|   |-ParagraphComment 0x55887c465d60 <line:439:1, col:53>
|   | `-TextComment 0x55887c465d30 <col:1, col:53> Text="  Reallocates a buffer of type EfiReservedMemoryType."
|   |-ParagraphComment 0x55887c465e70 <line:441:1, line:446:72>
|   | |-TextComment 0x55887c465d80 <line:441:1, col:79> Text="  Allocates and zeros the number bytes specified by NewSize from memory of type"
|   | |-TextComment 0x55887c465da0 <line:442:1, col:83> Text="  EfiReservedMemoryType.  If OldBuffer is not NULL, then the smaller of OldSize and"
|   | |-TextComment 0x55887c465dc0 <line:443:1, col:76> Text="  NewSize bytes are copied from OldBuffer to the newly allocated buffer, and"
|   | |-TextComment 0x55887c465de0 <line:444:1, col:75> Text="  OldBuffer is freed.  A pointer to the newly allocated buffer is returned."
|   | |-TextComment 0x55887c465e00 <line:445:1, col:79> Text="  If NewSize is 0, then a valid buffer of 0 size is  returned.  If there is not"
|   | `-TextComment 0x55887c465e20 <line:446:1, col:72> Text="  enough memory remaining to satisfy the request, then NULL is returned."
|   |-ParagraphComment 0x55887c465ee0 <line:448:1, line:449:63>
|   | |-TextComment 0x55887c465e90 <line:448:1, col:90> Text="  If the allocation of the new buffer is successful and the smaller of NewSize and OldSize"
|   | `-TextComment 0x55887c465eb0 <line:449:1, col:63> Text="  is greater than (MAX_ADDRESS - OldBuffer + 1), then ASSERT()."
|   |-ParagraphComment 0x55887c465f30 <line:451:1, col:2>
|   | `-TextComment 0x55887c465f00 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c465f50 <col:3, line:452:2> [in] implicitly Param="OldSize" ParamIndex=0
|   | `-ParagraphComment 0x55887c466000 <line:451:18, line:452:2>
|   |   |-TextComment 0x55887c465fb0 <line:451:18, col:58> Text="        The size, in bytes, of OldBuffer."
|   |   `-TextComment 0x55887c465fd0 <line:452:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c466020 <col:3, line:453:2> [in] implicitly Param="NewSize" ParamIndex=1
|   | `-ParagraphComment 0x55887c4660d0 <line:452:18, line:453:2>
|   |   |-TextComment 0x55887c466080 <line:452:18, col:73> Text="        The size, in bytes, of the buffer to reallocate."
|   |   `-TextComment 0x55887c4660a0 <line:453:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4660f0 <col:3, line:454:52> [in] implicitly Param="OldBuffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c4661a0 <line:453:20, line:454:52>
|   |   |-TextComment 0x55887c466150 <line:453:20, col:89> Text="      The buffer to copy to the allocated buffer.  This is an optional"
|   |   `-TextComment 0x55887c466170 <line:454:1, col:52> Text="                         parameter that may be NULL."
|   |-ParagraphComment 0x55887c4661f0 <line:456:1, col:2>
|   | `-TextComment 0x55887c4661c0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c466210 <col:3, col:72> Name="return"
|     `-ParagraphComment 0x55887c466270 <col:10, col:72>
|       `-TextComment 0x55887c466240 <col:10, col:72> Text=" A pointer to the allocated buffer or NULL if allocation fails."
|-FunctionDecl 0x55887c2e1db0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:485:3> line:483:1 FreePool 'void (void *)'
| |-ParmVarDecl 0x55887c2e1d20 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/MemoryAllocationLib.h:484:13> col:13 Buffer 'void *'
| `-FullComment 0x55887c466600 <line:468:1, line:478:62>
|   |-ParagraphComment 0x55887c4663a0 <line:468:1, line:469:28>
|   | |-TextComment 0x55887c466350 <line:468:1, col:95> Text="  Frees a buffer that was previously allocated with one of the pool allocation functions in the"
|   | `-TextComment 0x55887c466370 <line:469:1, col:28> Text="  Memory Allocation Library."
|   |-ParagraphComment 0x55887c466440 <line:471:1, line:473:56>
|   | |-TextComment 0x55887c4663c0 <line:471:1, col:98> Text="  Frees the buffer specified by Buffer.  Buffer must have been allocated on a previous call to the"
|   | |-TextComment 0x55887c4663e0 <line:472:1, col:96> Text="  pool allocation services of the Memory Allocation Library.  If it is not possible to free pool"
|   | `-TextComment 0x55887c466400 <line:473:1, col:56> Text="  resources, then this function will perform no actions."
|   |-ParagraphComment 0x55887c4664b0 <line:475:1, line:476:16>
|   | |-TextComment 0x55887c466460 <line:475:1, col:95> Text="  If Buffer was not allocated with a pool allocation function in the Memory Allocation Library,"
|   | `-TextComment 0x55887c466480 <line:476:1, col:16> Text="  then ASSERT()."
|   |-ParagraphComment 0x55887c466500 <line:478:1, col:2>
|   | `-TextComment 0x55887c4664d0 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c466520 <col:3, col:62> [in] implicitly Param="Buffer" ParamIndex=0
|     `-ParagraphComment 0x55887c4665b0 <col:17, col:62>
|       `-TextComment 0x55887c466580 <col:17, col:62> Text="                Pointer to the buffer to free."
|-FunctionDecl 0x55887c2e2888 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:809:1, line:813:3> line:811:1 LibPcdSetSku 'UINTN (UINTN)'
| |-ParmVarDecl 0x55887c2e27f8 <line:812:6, col:13> col:13 SkuId 'UINTN':'unsigned long long'
| `-FullComment 0x55887c466970 <line:799:1, line:806:42>
|   |-ParagraphComment 0x55887c4666e0 <line:799:1, col:99>
|   | `-TextComment 0x55887c4666b0 <col:1, col:99> Text="  This function provides a means by which SKU support can be established in the PCD infrastructure."
|   |-ParagraphComment 0x55887c466730 <line:801:1, col:95>
|   | `-TextComment 0x55887c466700 <col:1, col:95> Text="  Sets the current SKU in the PCD database to the value specified by SkuId.  SkuId is returned."
|   |-ParagraphComment 0x55887c466780 <line:803:1, col:2>
|   | `-TextComment 0x55887c466750 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4667a0 <col:3, line:804:46> [in] implicitly Param="SkuId" ParamIndex=0
|   | `-ParagraphComment 0x55887c466850 <line:803:16, line:804:46>
|   |   |-TextComment 0x55887c466800 <line:803:16, col:96> Text="   The SKU value that will be used when the PCD service retrieves and sets values"
|   |   `-TextComment 0x55887c466820 <line:804:1, col:46> Text="                  associated with a PCD token."
|   |-ParagraphComment 0x55887c4668a0 <line:806:1, col:2>
|   | `-TextComment 0x55887c466870 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c4668c0 <col:3, col:42> Name="return"
|     `-ParagraphComment 0x55887c466920 <col:10, col:42>
|       `-TextComment 0x55887c4668f0 <col:10, col:42> Text="  Return the SKU ID that was set."
|-FunctionDecl 0x55887c2e2a28 <line:825:1, line:829:3> line:827:1 LibPcdGet8 'UINT8 (UINTN)'
| |-ParmVarDecl 0x55887c2e2968 <line:828:6, col:13> col:13 TokenNumber 'UINTN':'unsigned long long'
| `-FullComment 0x55887c466c90 <line:816:1, line:822:73>
|   |-ParagraphComment 0x55887c466a10 <line:816:1, col:84>
|   | `-TextComment 0x55887c4669e0 <col:1, col:84> Text="  This function provides a means by which to retrieve a value for a given PCD token."
|   |-ParagraphComment 0x55887c466a60 <line:818:1, col:65>
|   | `-TextComment 0x55887c466a30 <col:1, col:65> Text="  Returns the 8-bit value for the token specified by TokenNumber."
|   |-ParagraphComment 0x55887c466ab0 <line:820:1, col:2>
|   | `-TextComment 0x55887c466a80 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c466ad0 <col:3, col:79> [in] explicitly Param="TokenNumber" ParamIndex=0
|   | `-ParagraphComment 0x55887c466b70 <col:26, col:79>
|   |   `-TextComment 0x55887c466b40 <col:26, col:79> Text=" The PCD token number to retrieve a current value for."
|   |-ParagraphComment 0x55887c466bc0 <line:822:1, col:2>
|   | `-TextComment 0x55887c466b90 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c466be0 <col:3, col:73> Name="return"
|     `-ParagraphComment 0x55887c466c40 <col:10, col:73>
|       `-TextComment 0x55887c466c10 <col:10, col:73> Text=" Returns the 8-bit value for the token specified by TokenNumber."
|-FunctionDecl 0x55887c2e2bf8 <line:841:1, line:845:3> line:843:1 LibPcdGet16 'UINT16 (UINTN)'
| |-ParmVarDecl 0x55887c2e2b08 <line:844:6, col:13> col:13 TokenNumber 'UINTN':'unsigned long long'
| `-FullComment 0x55887c466fb0 <line:832:1, line:838:74>
|   |-ParagraphComment 0x55887c466d30 <line:832:1, col:84>
|   | `-TextComment 0x55887c466d00 <col:1, col:84> Text="  This function provides a means by which to retrieve a value for a given PCD token."
|   |-ParagraphComment 0x55887c466d80 <line:834:1, col:66>
|   | `-TextComment 0x55887c466d50 <col:1, col:66> Text="  Returns the 16-bit value for the token specified by TokenNumber."
|   |-ParagraphComment 0x55887c466dd0 <line:836:1, col:2>
|   | `-TextComment 0x55887c466da0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c466df0 <col:3, col:79> [in] explicitly Param="TokenNumber" ParamIndex=0
|   | `-ParagraphComment 0x55887c466e90 <col:26, col:79>
|   |   `-TextComment 0x55887c466e60 <col:26, col:79> Text=" The PCD token number to retrieve a current value for."
|   |-ParagraphComment 0x55887c466ee0 <line:838:1, col:2>
|   | `-TextComment 0x55887c466eb0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c466f00 <col:3, col:74> Name="return"
|     `-ParagraphComment 0x55887c466f60 <col:10, col:74>
|       `-TextComment 0x55887c466f30 <col:10, col:74> Text=" Returns the 16-bit value for the token specified by TokenNumber."
|-FunctionDecl 0x55887c2e7308 <line:857:1, line:861:3> line:859:1 LibPcdGet32 'UINT32 (UINTN)'
| |-ParmVarDecl 0x55887c2e2cd8 <line:860:6, col:13> col:13 TokenNumber 'UINTN':'unsigned long long'
| `-FullComment 0x55887c4672d0 <line:848:1, line:854:74>
|   |-ParagraphComment 0x55887c467050 <line:848:1, col:84>
|   | `-TextComment 0x55887c467020 <col:1, col:84> Text="  This function provides a means by which to retrieve a value for a given PCD token."
|   |-ParagraphComment 0x55887c4670a0 <line:850:1, col:66>
|   | `-TextComment 0x55887c467070 <col:1, col:66> Text="  Returns the 32-bit value for the token specified by TokenNumber."
|   |-ParagraphComment 0x55887c4670f0 <line:852:1, col:2>
|   | `-TextComment 0x55887c4670c0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c467110 <col:3, col:79> [in] explicitly Param="TokenNumber" ParamIndex=0
|   | `-ParagraphComment 0x55887c4671b0 <col:26, col:79>
|   |   `-TextComment 0x55887c467180 <col:26, col:79> Text=" The PCD token number to retrieve a current value for."
|   |-ParagraphComment 0x55887c467200 <line:854:1, col:2>
|   | `-TextComment 0x55887c4671d0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c467220 <col:3, col:74> Name="return"
|     `-ParagraphComment 0x55887c467280 <col:10, col:74>
|       `-TextComment 0x55887c467250 <col:10, col:74> Text=" Returns the 32-bit value for the token specified by TokenNumber."
|-FunctionDecl 0x55887c2e74a8 <line:873:1, line:877:3> line:875:1 LibPcdGet64 'UINT64 (UINTN)'
| |-ParmVarDecl 0x55887c2e73e8 <line:876:6, col:13> col:13 TokenNumber 'UINTN':'unsigned long long'
| `-FullComment 0x55887c4675f0 <line:864:1, line:870:74>
|   |-ParagraphComment 0x55887c467370 <line:864:1, col:84>
|   | `-TextComment 0x55887c467340 <col:1, col:84> Text="  This function provides a means by which to retrieve a value for a given PCD token."
|   |-ParagraphComment 0x55887c4673c0 <line:866:1, col:66>
|   | `-TextComment 0x55887c467390 <col:1, col:66> Text="  Returns the 64-bit value for the token specified by TokenNumber."
|   |-ParagraphComment 0x55887c467410 <line:868:1, col:2>
|   | `-TextComment 0x55887c4673e0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c467430 <col:3, col:79> [in] explicitly Param="TokenNumber" ParamIndex=0
|   | `-ParagraphComment 0x55887c4674d0 <col:26, col:79>
|   |   `-TextComment 0x55887c4674a0 <col:26, col:79> Text=" The PCD token number to retrieve a current value for."
|   |-ParagraphComment 0x55887c467520 <line:870:1, col:2>
|   | `-TextComment 0x55887c4674f0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c467540 <col:3, col:74> Name="return"
|     `-ParagraphComment 0x55887c4675a0 <col:10, col:74>
|       `-TextComment 0x55887c467570 <col:10, col:74> Text=" Returns the 64-bit value for the token specified by TokenNumber."
|-FunctionDecl 0x55887c2e7620 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:893:3> line:891:1 LibPcdGetPtr 'void *(UINTN)'
| |-ParmVarDecl 0x55887c2e7588 <line:892:6, col:13> col:13 TokenNumber 'UINTN':'unsigned long long'
| `-FullComment 0x55887c467910 <line:880:1, line:886:68>
|   |-ParagraphComment 0x55887c467690 <line:880:1, col:84>
|   | `-TextComment 0x55887c467660 <col:1, col:84> Text="  This function provides a means by which to retrieve a value for a given PCD token."
|   |-ParagraphComment 0x55887c4676e0 <line:882:1, col:74>
|   | `-TextComment 0x55887c4676b0 <col:1, col:74> Text="  Returns the pointer to the buffer of the token specified by TokenNumber."
|   |-ParagraphComment 0x55887c467730 <line:884:1, col:2>
|   | `-TextComment 0x55887c467700 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c467750 <col:3, col:79> [in] explicitly Param="TokenNumber" ParamIndex=0
|   | `-ParagraphComment 0x55887c4677f0 <col:26, col:79>
|   |   `-TextComment 0x55887c4677c0 <col:26, col:79> Text=" The PCD token number to retrieve a current value for."
|   |-ParagraphComment 0x55887c467840 <line:886:1, col:2>
|   | `-TextComment 0x55887c467810 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c467860 <col:3, col:68> Name="return"
|     `-ParagraphComment 0x55887c4678c0 <col:10, col:68>
|       `-TextComment 0x55887c467890 <col:10, col:68> Text=" Returns the pointer to the token specified by TokenNumber."
|-FunctionDecl 0x55887c2e77c8 <line:905:1, line:909:3> line:907:1 LibPcdGetBool 'BOOLEAN (UINTN)'
| |-ParmVarDecl 0x55887c2e7708 <line:908:6, col:13> col:13 TokenNumber 'UINTN':'unsigned long long'
| `-FullComment 0x55887c467c30 <line:896:1, line:902:74>
|   |-ParagraphComment 0x55887c4679b0 <line:896:1, col:84>
|   | `-TextComment 0x55887c467980 <col:1, col:84> Text="  This function provides a means by which to retrieve a value for a given PCD token."
|   |-ParagraphComment 0x55887c467a00 <line:898:1, col:66>
|   | `-TextComment 0x55887c4679d0 <col:1, col:66> Text="  Returns the Boolean value of the token specified by TokenNumber."
|   |-ParagraphComment 0x55887c467a50 <line:900:1, col:2>
|   | `-TextComment 0x55887c467a20 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c467a70 <col:3, col:79> [in] explicitly Param="TokenNumber" ParamIndex=0
|   | `-ParagraphComment 0x55887c467b10 <col:26, col:79>
|   |   `-TextComment 0x55887c467ae0 <col:26, col:79> Text=" The PCD token number to retrieve a current value for."
|   |-ParagraphComment 0x55887c467b60 <line:902:1, col:2>
|   | `-TextComment 0x55887c467b30 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c467b80 <col:3, col:74> Name="return"
|     `-ParagraphComment 0x55887c467be0 <col:10, col:74>
|       `-TextComment 0x55887c467bb0 <col:10, col:74> Text=" Returns the Boolean value of the token specified by TokenNumber."
|-FunctionDecl 0x55887c2e7938 <line:919:1, line:923:3> line:921:1 LibPcdGetSize 'UINTN (UINTN)'
| |-ParmVarDecl 0x55887c2e78a8 <line:922:6, col:13> col:13 TokenNumber 'UINTN':'unsigned long long'
| `-FullComment 0x55887c467f00 <line:912:1, line:916:65>
|   |-ParagraphComment 0x55887c467cd0 <line:912:1, col:84>
|   | `-TextComment 0x55887c467ca0 <col:1, col:84> Text="  This function provides a means by which to retrieve the size of a given PCD token."
|   |-ParagraphComment 0x55887c467d20 <line:914:1, col:2>
|   | `-TextComment 0x55887c467cf0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c467d40 <col:3, col:79> [in] explicitly Param="TokenNumber" ParamIndex=0
|   | `-ParagraphComment 0x55887c467de0 <col:26, col:79>
|   |   `-TextComment 0x55887c467db0 <col:26, col:79> Text=" The PCD token number to retrieve a current value for."
|   |-ParagraphComment 0x55887c467e30 <line:916:1, col:2>
|   | `-TextComment 0x55887c467e00 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c467e50 <col:3, col:65> Name="return"
|     `-ParagraphComment 0x55887c467eb0 <col:10, col:65>
|       `-TextComment 0x55887c467e80 <col:10, col:65> Text=" Returns the size of the token specified by TokenNumber."
|-FunctionDecl 0x55887c2e7ba8 <line:939:1, line:944:3> line:941:1 LibPcdGetEx8 'UINT8 (const GUID *, UINTN)'
| |-ParmVarDecl 0x55887c2e7a18 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:942:19> col:19 Guid 'const GUID *'
| |-ParmVarDecl 0x55887c2e7a90 <line:943:6, col:18> col:18 TokenNumber 'UINTN':'unsigned long long'
| `-FullComment 0x55887c468380 <line:926:1, line:936:27>
|   |-ParagraphComment 0x55887c467fa0 <line:926:1, col:84>
|   | `-TextComment 0x55887c467f70 <col:1, col:84> Text="  This function provides a means by which to retrieve a value for a given PCD token."
|   |-ParagraphComment 0x55887c467ff0 <line:928:1, col:74>
|   | `-TextComment 0x55887c467fc0 <col:1, col:74> Text="  Returns the 8-bit value for the token specified by TokenNumber and Guid."
|   |-ParagraphComment 0x55887c468040 <line:930:1, col:33>
|   | `-TextComment 0x55887c468010 <col:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c468090 <line:932:1, col:2>
|   | `-TextComment 0x55887c468060 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4680b0 <col:3, line:934:2> [in] explicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c468190 <line:932:19, line:934:2>
|   |   |-TextComment 0x55887c468110 <line:932:19, col:76> Text="         Pointer to a 128-bit unique value that designates"
|   |   |-TextComment 0x55887c468130 <line:933:1, col:68> Text="                           which namespace to retrieve a value from."
|   |   `-TextComment 0x55887c468150 <line:934:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4681b0 <col:3, col:80> [in] explicitly Param="TokenNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c468250 <col:26, col:80>
|   |   `-TextComment 0x55887c468220 <col:26, col:80> Text="  The PCD token number to retrieve a current value for."
|   |-ParagraphComment 0x55887c4682a0 <line:936:1, col:2>
|   | `-TextComment 0x55887c468270 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c4682c0 <col:3, col:27> Name="return"
|     `-ParagraphComment 0x55887c468320 <col:10, col:27>
|       `-TextComment 0x55887c4682f0 <col:10, col:27> Text=" Return the UINT8."
|-FunctionDecl 0x55887c2e7e28 <line:960:1, line:965:3> line:962:1 LibPcdGetEx16 'UINT16 (const GUID *, UINTN)'
| |-ParmVarDecl 0x55887c2e7c98 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:963:19> col:19 Guid 'const GUID *'
| |-ParmVarDecl 0x55887c2e7d10 <line:964:6, col:18> col:18 TokenNumber 'UINTN':'unsigned long long'
| `-FullComment 0x55887c468800 <line:947:1, line:957:28>
|   |-ParagraphComment 0x55887c468420 <line:947:1, col:84>
|   | `-TextComment 0x55887c4683f0 <col:1, col:84> Text="  This function provides a means by which to retrieve a value for a given PCD token."
|   |-ParagraphComment 0x55887c468470 <line:949:1, col:75>
|   | `-TextComment 0x55887c468440 <col:1, col:75> Text="  Returns the 16-bit value for the token specified by TokenNumber and Guid."
|   |-ParagraphComment 0x55887c4684c0 <line:951:1, col:33>
|   | `-TextComment 0x55887c468490 <col:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c468510 <line:953:1, col:2>
|   | `-TextComment 0x55887c4684e0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c468530 <col:3, line:955:2> [in] explicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c468610 <line:953:19, line:955:2>
|   |   |-TextComment 0x55887c468590 <line:953:19, col:76> Text="         Pointer to a 128-bit unique value that designates"
|   |   |-TextComment 0x55887c4685b0 <line:954:1, col:68> Text="                           which namespace to retrieve a value from."
|   |   `-TextComment 0x55887c4685d0 <line:955:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c468630 <col:3, col:80> [in] explicitly Param="TokenNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c4686d0 <col:26, col:80>
|   |   `-TextComment 0x55887c4686a0 <col:26, col:80> Text="  The PCD token number to retrieve a current value for."
|   |-ParagraphComment 0x55887c468720 <line:957:1, col:2>
|   | `-TextComment 0x55887c4686f0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c468740 <col:3, col:28> Name="return"
|     `-ParagraphComment 0x55887c4687a0 <col:10, col:28>
|       `-TextComment 0x55887c468770 <col:10, col:28> Text=" Return the UINT16."
|-FunctionDecl 0x55887c2e80a8 <line:978:1, line:983:3> line:980:1 LibPcdGetEx32 'UINT32 (const GUID *, UINTN)'
| |-ParmVarDecl 0x55887c2e7f18 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:981:19> col:19 Guid 'const GUID *'
| |-ParmVarDecl 0x55887c2e7f90 <line:982:6, col:18> col:18 TokenNumber 'UINTN':'unsigned long long'
| `-FullComment 0x55887c468bf0 <line:968:1, line:975:28>
|   |-ParagraphComment 0x55887c4688c0 <line:968:1, line:969:33>
|   | |-TextComment 0x55887c468870 <line:968:1, col:75> Text="  Returns the 32-bit value for the token specified by TokenNumber and Guid."
|   | `-TextComment 0x55887c468890 <line:969:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c468910 <line:971:1, col:2>
|   | `-TextComment 0x55887c4688e0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c468930 <col:3, line:973:2> [in] explicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c468a10 <line:971:19, line:973:2>
|   |   |-TextComment 0x55887c468990 <line:971:19, col:76> Text="         Pointer to a 128-bit unique value that designates"
|   |   |-TextComment 0x55887c4689b0 <line:972:1, col:68> Text="                           which namespace to retrieve a value from."
|   |   `-TextComment 0x55887c4689d0 <line:973:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c468a30 <col:3, col:80> [in] explicitly Param="TokenNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c468ad0 <col:26, col:80>
|   |   `-TextComment 0x55887c468aa0 <col:26, col:80> Text="  The PCD token number to retrieve a current value for."
|   |-ParagraphComment 0x55887c468b20 <line:975:1, col:2>
|   | `-TextComment 0x55887c468af0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c468b40 <col:3, col:28> Name="return"
|     `-ParagraphComment 0x55887c468ba0 <col:10, col:28>
|       `-TextComment 0x55887c468b70 <col:10, col:28> Text=" Return the UINT32."
|-FunctionDecl 0x55887c2e8328 <line:999:1, line:1004:3> line:1001:1 LibPcdGetEx64 'UINT64 (const GUID *, UINTN)'
| |-ParmVarDecl 0x55887c2e8198 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1002:19> col:19 Guid 'const GUID *'
| |-ParmVarDecl 0x55887c2e8210 <line:1003:6, col:18> col:18 TokenNumber 'UINTN':'unsigned long long'
| `-FullComment 0x55887c469070 <line:986:1, line:996:28>
|   |-ParagraphComment 0x55887c468c90 <line:986:1, col:84>
|   | `-TextComment 0x55887c468c60 <col:1, col:84> Text="  This function provides a means by which to retrieve a value for a given PCD token."
|   |-ParagraphComment 0x55887c468ce0 <line:988:1, col:75>
|   | `-TextComment 0x55887c468cb0 <col:1, col:75> Text="  Returns the 64-bit value for the token specified by TokenNumber and Guid."
|   |-ParagraphComment 0x55887c468d30 <line:990:1, col:33>
|   | `-TextComment 0x55887c468d00 <col:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c468d80 <line:992:1, col:2>
|   | `-TextComment 0x55887c468d50 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c468da0 <col:3, line:994:2> [in] explicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c468e80 <line:992:19, line:994:2>
|   |   |-TextComment 0x55887c468e00 <line:992:19, col:77> Text="          Pointer to a 128-bit unique value that designates"
|   |   |-TextComment 0x55887c468e20 <line:993:1, col:69> Text="                            which namespace to retrieve a value from."
|   |   `-TextComment 0x55887c468e40 <line:994:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c468ea0 <col:3, col:81> [in] explicitly Param="TokenNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c468f40 <col:26, col:81>
|   |   `-TextComment 0x55887c468f10 <col:26, col:81> Text="   The PCD token number to retrieve a current value for."
|   |-ParagraphComment 0x55887c468f90 <line:996:1, col:2>
|   | `-TextComment 0x55887c468f60 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c468fb0 <col:3, col:28> Name="return"
|     `-ParagraphComment 0x55887c469010 <col:10, col:28>
|       `-TextComment 0x55887c468fe0 <col:10, col:28> Text=" Return the UINT64."
|-FunctionDecl 0x55887c2e8570 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1025:3> line:1022:1 LibPcdGetExPtr 'void *(const GUID *, UINTN)'
| |-ParmVarDecl 0x55887c2e8418 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1023:19> col:19 Guid 'const GUID *'
| |-ParmVarDecl 0x55887c2e8490 <line:1024:6, col:18> col:18 TokenNumber 'UINTN':'unsigned long long'
| `-FullComment 0x55887c4694f0 <line:1007:1, line:1017:35>
|   |-ParagraphComment 0x55887c469110 <line:1007:1, col:84>
|   | `-TextComment 0x55887c4690e0 <col:1, col:84> Text="  This function provides a means by which to retrieve a value for a given PCD token."
|   |-ParagraphComment 0x55887c469160 <line:1009:1, col:79>
|   | `-TextComment 0x55887c469130 <col:1, col:79> Text="  Returns the pointer to the buffer of token specified by TokenNumber and Guid."
|   |-ParagraphComment 0x55887c4691b0 <line:1011:1, col:33>
|   | `-TextComment 0x55887c469180 <col:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c469200 <line:1013:1, col:2>
|   | `-TextComment 0x55887c4691d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c469220 <col:3, line:1015:2> [in] explicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c469300 <line:1013:19, line:1015:2>
|   |   |-TextComment 0x55887c469280 <line:1013:19, col:77> Text="          Pointer to a 128-bit unique value that designates"
|   |   |-TextComment 0x55887c4692a0 <line:1014:1, col:69> Text="                            which namespace to retrieve a value from."
|   |   `-TextComment 0x55887c4692c0 <line:1015:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c469320 <col:3, col:81> [in] explicitly Param="TokenNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c4693c0 <col:26, col:81>
|   |   `-TextComment 0x55887c469390 <col:26, col:81> Text="   The PCD token number to retrieve a current value for."
|   |-ParagraphComment 0x55887c469410 <line:1017:1, col:2>
|   | `-TextComment 0x55887c4693e0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c469430 <col:3, col:35> Name="return"
|     `-ParagraphComment 0x55887c469490 <col:10, col:35>
|       `-TextComment 0x55887c469460 <col:10, col:35> Text=" Return the VOID* pointer."
|-FunctionDecl 0x55887c2e87a8 <line:1041:1, line:1046:3> line:1043:1 LibPcdGetExBool 'BOOLEAN (const GUID *, UINTN)'
| |-ParmVarDecl 0x55887c2e8658 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1044:19> col:19 Guid 'const GUID *'
| |-ParmVarDecl 0x55887c2e86d0 <line:1045:6, col:18> col:18 TokenNumber 'UINTN':'unsigned long long'
| `-FullComment 0x55887c469970 <line:1028:1, line:1038:29>
|   |-ParagraphComment 0x55887c469590 <line:1028:1, col:84>
|   | `-TextComment 0x55887c469560 <col:1, col:84> Text="  This function provides a means by which to retrieve a value for a given PCD token."
|   |-ParagraphComment 0x55887c4695e0 <line:1030:1, col:75>
|   | `-TextComment 0x55887c4695b0 <col:1, col:75> Text="  Returns the Boolean value of the token specified by TokenNumber and Guid."
|   |-ParagraphComment 0x55887c469630 <line:1032:1, col:33>
|   | `-TextComment 0x55887c469600 <col:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c469680 <line:1034:1, col:2>
|   | `-TextComment 0x55887c469650 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4696a0 <col:3, line:1036:2> [in] explicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c469780 <line:1034:19, line:1036:2>
|   |   |-TextComment 0x55887c469700 <line:1034:19, col:77> Text="          Pointer to a 128-bit unique value that designates"
|   |   |-TextComment 0x55887c469720 <line:1035:1, col:69> Text="                            which namespace to retrieve a value from."
|   |   `-TextComment 0x55887c469740 <line:1036:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4697a0 <col:3, col:81> [in] explicitly Param="TokenNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c469840 <col:26, col:81>
|   |   `-TextComment 0x55887c469810 <col:26, col:81> Text="   The PCD token number to retrieve a current value for."
|   |-ParagraphComment 0x55887c469890 <line:1038:1, col:2>
|   | `-TextComment 0x55887c469860 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c4698b0 <col:3, col:29> Name="return"
|     `-ParagraphComment 0x55887c469910 <col:10, col:29>
|       `-TextComment 0x55887c4698e0 <col:10, col:29> Text=" Return the BOOLEAN."
|-FunctionDecl 0x55887c2e89e8 <line:1062:1, line:1067:3> line:1064:1 LibPcdGetExSize 'UINTN (const GUID *, UINTN)'
| |-ParmVarDecl 0x55887c2e8898 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1065:19> col:19 Guid 'const GUID *'
| |-ParmVarDecl 0x55887c2e8910 <line:1066:6, col:18> col:18 TokenNumber 'UINTN':'unsigned long long'
| `-FullComment 0x55887c469df0 <line:1049:1, line:1059:26>
|   |-ParagraphComment 0x55887c469a10 <line:1049:1, col:84>
|   | `-TextComment 0x55887c4699e0 <col:1, col:84> Text="  This function provides a means by which to retrieve the size of a given PCD token."
|   |-ParagraphComment 0x55887c469a60 <line:1051:1, col:66>
|   | `-TextComment 0x55887c469a30 <col:1, col:66> Text="  Returns the size of the token specified by TokenNumber and Guid."
|   |-ParagraphComment 0x55887c469ab0 <line:1053:1, col:33>
|   | `-TextComment 0x55887c469a80 <col:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c469b00 <line:1055:1, col:2>
|   | `-TextComment 0x55887c469ad0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c469b20 <col:3, line:1057:2> [in] explicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c469c00 <line:1055:19, line:1057:2>
|   |   |-TextComment 0x55887c469b80 <line:1055:19, col:77> Text="          Pointer to a 128-bit unique value that designates"
|   |   |-TextComment 0x55887c469ba0 <line:1056:1, col:69> Text="                            which namespace to retrieve a value from."
|   |   `-TextComment 0x55887c469bc0 <line:1057:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c469c20 <col:3, col:81> [in] explicitly Param="TokenNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c469cc0 <col:26, col:81>
|   |   `-TextComment 0x55887c469c90 <col:26, col:81> Text="   The PCD token number to retrieve a current value for."
|   |-ParagraphComment 0x55887c469d10 <line:1059:1, col:2>
|   | `-TextComment 0x55887c469ce0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c469d30 <col:3, col:26> Name="return"
|     `-ParagraphComment 0x55887c469d90 <col:10, col:26>
|       `-TextComment 0x55887c469d60 <col:10, col:26> Text=" Return the size."
|-FunctionDecl 0x55887c2e8c68 <line:1081:1, line:1086:3> line:1083:1 LibPcdSet8S 'RETURN_STATUS (UINTN, UINT8)'
| |-ParmVarDecl 0x55887c2e8ad8 <line:1084:6, col:13> col:13 TokenNumber 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2e8b50 <line:1085:6, col:13> col:13 Value 'UINT8':'unsigned char'
| `-FullComment 0x55887c46a210 <line:1070:1, line:1078:42>
|   |-ParagraphComment 0x55887c469e90 <line:1070:1, col:79>
|   | `-TextComment 0x55887c469e60 <col:1, col:79> Text="  This function provides a means by which to set a value for a given PCD token."
|   |-ParagraphComment 0x55887c469f00 <line:1072:1, line:1073:34>
|   | |-TextComment 0x55887c469eb0 <line:1072:1, col:61> Text="  Sets the 8-bit value for the token specified by TokenNumber"
|   | `-TextComment 0x55887c469ed0 <line:1073:1, col:34> Text="  to the value specified by Value."
|   |-ParagraphComment 0x55887c469f50 <line:1075:1, col:2>
|   | `-TextComment 0x55887c469f20 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c469f70 <col:3, line:1076:2> [in] explicitly Param="TokenNumber" ParamIndex=0
|   | `-ParagraphComment 0x55887c46a030 <line:1075:25, line:1076:2>
|   |   |-TextComment 0x55887c469fe0 <line:1075:25, col:76> Text="    The PCD token number to set a current value for."
|   |   `-TextComment 0x55887c46a000 <line:1076:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46a050 <col:3, col:51> [in] explicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c46a0e0 <col:19, col:51>
|   |   `-TextComment 0x55887c46a0b0 <col:19, col:51> Text="          The 8-bit value to set."
|   |-ParagraphComment 0x55887c46a130 <line:1078:1, col:2>
|   | `-TextComment 0x55887c46a100 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c46a150 <col:3, col:42> Name="return"
|     `-ParagraphComment 0x55887c46a1b0 <col:10, col:42>
|       `-TextComment 0x55887c46a180 <col:10, col:42> Text=" The status of the set operation."
|-FunctionDecl 0x55887c2e8ee8 <line:1100:1, line:1105:3> line:1102:1 LibPcdSet16S 'RETURN_STATUS (UINTN, UINT16)'
| |-ParmVarDecl 0x55887c2e8d58 <line:1103:6, col:14> col:14 TokenNumber 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2e8dd0 <line:1104:6, col:14> col:14 Value 'UINT16':'unsigned short'
| `-FullComment 0x55887c46a630 <line:1089:1, line:1097:42>
|   |-ParagraphComment 0x55887c46a2b0 <line:1089:1, col:79>
|   | `-TextComment 0x55887c46a280 <col:1, col:79> Text="  This function provides a means by which to set a value for a given PCD token."
|   |-ParagraphComment 0x55887c46a320 <line:1091:1, line:1092:34>
|   | |-TextComment 0x55887c46a2d0 <line:1091:1, col:62> Text="  Sets the 16-bit value for the token specified by TokenNumber"
|   | `-TextComment 0x55887c46a2f0 <line:1092:1, col:34> Text="  to the value specified by Value."
|   |-ParagraphComment 0x55887c46a370 <line:1094:1, col:2>
|   | `-TextComment 0x55887c46a340 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46a390 <col:3, line:1095:2> [in] explicitly Param="TokenNumber" ParamIndex=0
|   | `-ParagraphComment 0x55887c46a450 <line:1094:25, line:1095:2>
|   |   |-TextComment 0x55887c46a400 <line:1094:25, col:76> Text="    The PCD token number to set a current value for."
|   |   `-TextComment 0x55887c46a420 <line:1095:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46a470 <col:3, col:52> [in] explicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c46a500 <col:19, col:52>
|   |   `-TextComment 0x55887c46a4d0 <col:19, col:52> Text="          The 16-bit value to set."
|   |-ParagraphComment 0x55887c46a550 <line:1097:1, col:2>
|   | `-TextComment 0x55887c46a520 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c46a570 <col:3, col:42> Name="return"
|     `-ParagraphComment 0x55887c46a5d0 <col:10, col:42>
|       `-TextComment 0x55887c46a5a0 <col:10, col:42> Text=" The status of the set operation."
|-FunctionDecl 0x55887c2e9128 <line:1119:1, line:1124:3> line:1121:1 LibPcdSet32S 'RETURN_STATUS (UINTN, UINT32)'
| |-ParmVarDecl 0x55887c2e8fd8 <line:1122:6, col:14> col:14 TokenNumber 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2e9050 <line:1123:6, col:14> col:14 Value 'UINT32':'unsigned int'
| `-FullComment 0x55887c46aa70 <line:1108:1, line:1116:42>
|   |-ParagraphComment 0x55887c46a6f0 <line:1108:1, col:79>
|   | `-TextComment 0x55887c46a6c0 <col:1, col:79> Text="  This function provides a means by which to set a value for a given PCD token."
|   |-ParagraphComment 0x55887c46a760 <line:1110:1, line:1111:34>
|   | |-TextComment 0x55887c46a710 <line:1110:1, col:62> Text="  Sets the 32-bit value for the token specified by TokenNumber"
|   | `-TextComment 0x55887c46a730 <line:1111:1, col:34> Text="  to the value specified by Value."
|   |-ParagraphComment 0x55887c46a7b0 <line:1113:1, col:2>
|   | `-TextComment 0x55887c46a780 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46a7d0 <col:3, line:1114:2> [in] explicitly Param="TokenNumber" ParamIndex=0
|   | `-ParagraphComment 0x55887c46a890 <line:1113:25, line:1114:2>
|   |   |-TextComment 0x55887c46a840 <line:1113:25, col:76> Text="    The PCD token number to set a current value for."
|   |   `-TextComment 0x55887c46a860 <line:1114:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46a8b0 <col:3, col:52> [in] explicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c46a940 <col:19, col:52>
|   |   `-TextComment 0x55887c46a910 <col:19, col:52> Text="          The 32-bit value to set."
|   |-ParagraphComment 0x55887c46a990 <line:1116:1, col:2>
|   | `-TextComment 0x55887c46a960 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c46a9b0 <col:3, col:42> Name="return"
|     `-ParagraphComment 0x55887c46aa10 <col:10, col:42>
|       `-TextComment 0x55887c46a9e0 <col:10, col:42> Text=" The status of the set operation."
|-FunctionDecl 0x55887c2e9738 <line:1138:1, line:1143:3> line:1140:1 LibPcdSet64S 'RETURN_STATUS (UINTN, UINT64)'
| |-ParmVarDecl 0x55887c2e9218 <line:1141:6, col:14> col:14 TokenNumber 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2e9660 <line:1142:6, col:14> col:14 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c46ae90 <line:1127:1, line:1135:42>
|   |-ParagraphComment 0x55887c46ab10 <line:1127:1, col:79>
|   | `-TextComment 0x55887c46aae0 <col:1, col:79> Text="  This function provides a means by which to set a value for a given PCD token."
|   |-ParagraphComment 0x55887c46ab80 <line:1129:1, line:1130:34>
|   | |-TextComment 0x55887c46ab30 <line:1129:1, col:62> Text="  Sets the 64-bit value for the token specified by TokenNumber"
|   | `-TextComment 0x55887c46ab50 <line:1130:1, col:34> Text="  to the value specified by Value."
|   |-ParagraphComment 0x55887c46abd0 <line:1132:1, col:2>
|   | `-TextComment 0x55887c46aba0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46abf0 <col:3, line:1133:2> [in] explicitly Param="TokenNumber" ParamIndex=0
|   | `-ParagraphComment 0x55887c46acb0 <line:1132:25, line:1133:2>
|   |   |-TextComment 0x55887c46ac60 <line:1132:25, col:76> Text="    The PCD token number to set a current value for."
|   |   `-TextComment 0x55887c46ac80 <line:1133:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46acd0 <col:3, col:52> [in] explicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c46ad60 <col:19, col:52>
|   |   `-TextComment 0x55887c46ad30 <col:19, col:52> Text="          The 64-bit value to set."
|   |-ParagraphComment 0x55887c46adb0 <line:1135:1, col:2>
|   | `-TextComment 0x55887c46ad80 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c46add0 <col:3, col:42> Name="return"
|     `-ParagraphComment 0x55887c46ae30 <col:10, col:42>
|       `-TextComment 0x55887c46ae00 <col:10, col:42> Text=" The status of the set operation."
|-FunctionDecl 0x55887c2e9a48 <line:1167:1, line:1173:3> line:1169:1 LibPcdSetPtrS 'RETURN_STATUS (UINTN, UINTN *, const void *)'
| |-ParmVarDecl 0x55887c2e9828 <line:1170:12, col:19> col:19 TokenNumber 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2e98a0 <line:1171:12, col:20> col:20 SizeOfBuffer 'UINTN *'
| |-ParmVarDecl 0x55887c2e9920 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1172:20> col:20 Buffer 'const void *'
| `-FullComment 0x55887c46b500 <line:1146:1, line:1164:42>
|   |-ParagraphComment 0x55887c46af30 <line:1146:1, col:79>
|   | `-TextComment 0x55887c46af00 <col:1, col:79> Text="  This function provides a means by which to set a value for a given PCD token."
|   |-ParagraphComment 0x55887c46b020 <line:1148:1, line:1152:29>
|   | |-TextComment 0x55887c46af50 <line:1148:1, col:77> Text="  Sets a buffer for the token specified by TokenNumber to the value specified"
|   | |-TextComment 0x55887c46af70 <line:1149:1, col:78> Text="  by Buffer and SizeOfBuffer. If SizeOfBuffer is greater than the maximum size"
|   | |-TextComment 0x55887c46af90 <line:1150:1, col:80> Text="  support by TokenNumber, then set SizeOfBuffer to the maximum size supported by"
|   | |-TextComment 0x55887c46afb0 <line:1151:1, col:84> Text="  TokenNumber and return RETURN_INVALID_PARAMETER to indicate that the set operation"
|   | `-TextComment 0x55887c46afd0 <line:1152:1, col:29> Text="  was not actually performed."
|   |-ParagraphComment 0x55887c46b090 <line:1154:1, line:1155:84>
|   | |-TextComment 0x55887c46b040 <line:1154:1, col:77> Text="  If SizeOfBuffer is set to MAX_ADDRESS, then SizeOfBuffer must be set to the"
|   | `-TextComment 0x55887c46b060 <line:1155:1, col:84> Text="  maximum size supported by TokenName and RETURN_INVALID_PARAMETER must be returned."
|   |-ParagraphComment 0x55887c46b100 <line:1157:1, line:1158:56>
|   | |-TextComment 0x55887c46b0b0 <line:1157:1, col:41> Text="  If SizeOfBuffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c46b0d0 <line:1158:1, col:56> Text="  If SizeOfBuffer > 0 and Buffer is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c46b150 <line:1160:1, col:2>
|   | `-TextComment 0x55887c46b120 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46b170 <col:3, line:1161:2> [in] explicitly Param="TokenNumber" ParamIndex=0
|   | `-ParagraphComment 0x55887c46b230 <line:1160:30, line:1161:2>
|   |   |-TextComment 0x55887c46b1e0 <line:1160:30, col:80> Text="   The PCD token number to set a current value for."
|   |   `-TextComment 0x55887c46b200 <line:1161:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46b250 <col:3, line:1162:2> [in,out] explicitly Param="SizeOfBuffer" ParamIndex=1
|   | `-ParagraphComment 0x55887c46b310 <line:1161:31, line:1162:2>
|   |   |-TextComment 0x55887c46b2c0 <line:1161:31, col:62> Text="  The size, in bytes, of Buffer."
|   |   `-TextComment 0x55887c46b2e0 <line:1162:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46b330 <col:3, col:63> [in] explicitly Param="Buffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c46b3c0 <col:25, col:63>
|   |   `-TextComment 0x55887c46b390 <col:25, col:63> Text="        A pointer to the buffer to set."
|   |-ParagraphComment 0x55887c46b410 <line:1164:1, col:2>
|   | `-TextComment 0x55887c46b3e0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c46b430 <col:3, col:42> Name="return"
|     `-ParagraphComment 0x55887c46b490 <col:10, col:42>
|       `-TextComment 0x55887c46b460 <col:10, col:42> Text=" The status of the set operation."
|-FunctionDecl 0x55887c2e9c88 <line:1187:1, line:1192:3> line:1189:1 LibPcdSetBoolS 'RETURN_STATUS (UINTN, BOOLEAN)'
| |-ParmVarDecl 0x55887c2e9b38 <line:1190:6, col:15> col:15 TokenNumber 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2e9bb0 <line:1191:6, col:15> col:15 Value 'BOOLEAN':'unsigned char'
| `-FullComment 0x55887c46b920 <line:1176:1, line:1184:42>
|   |-ParagraphComment 0x55887c46b5a0 <line:1176:1, col:79>
|   | `-TextComment 0x55887c46b570 <col:1, col:79> Text="  This function provides a means by which to set a value for a given PCD token."
|   |-ParagraphComment 0x55887c46b610 <line:1178:1, line:1179:34>
|   | |-TextComment 0x55887c46b5c0 <line:1178:1, col:63> Text="  Sets the boolean value for the token specified by TokenNumber"
|   | `-TextComment 0x55887c46b5e0 <line:1179:1, col:34> Text="  to the value specified by Value."
|   |-ParagraphComment 0x55887c46b660 <line:1181:1, col:2>
|   | `-TextComment 0x55887c46b630 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46b680 <col:3, line:1182:2> [in] explicitly Param="TokenNumber" ParamIndex=0
|   | `-ParagraphComment 0x55887c46b740 <line:1181:25, line:1182:2>
|   |   |-TextComment 0x55887c46b6f0 <line:1181:25, col:76> Text="    The PCD token number to set a current value for."
|   |   `-TextComment 0x55887c46b710 <line:1182:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46b760 <col:3, col:53> [in] explicitly Param="Value" ParamIndex=1
|   | `-ParagraphComment 0x55887c46b7f0 <col:19, col:53>
|   |   `-TextComment 0x55887c46b7c0 <col:19, col:53> Text="          The boolean value to set."
|   |-ParagraphComment 0x55887c46b840 <line:1184:1, col:2>
|   | `-TextComment 0x55887c46b810 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c46b860 <col:3, col:42> Name="return"
|     `-ParagraphComment 0x55887c46b8c0 <col:10, col:42>
|       `-TextComment 0x55887c46b890 <col:10, col:42> Text=" The status of the set operation."
|-FunctionDecl 0x55887c2e9f88 <line:1210:1, line:1216:3> line:1212:1 LibPcdSetEx8S 'RETURN_STATUS (const GUID *, UINTN, UINT8)'
| |-ParmVarDecl 0x55887c2e9d78 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1213:19> col:19 Guid 'const GUID *'
| |-ParmVarDecl 0x55887c2e9df0 <line:1214:6, col:18> col:18 TokenNumber 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2e9e68 <line:1215:6, col:18> col:18 Value 'UINT8':'unsigned char'
| `-FullComment 0x55887c46bea0 <line:1195:1, line:1207:42>
|   |-ParagraphComment 0x55887c46b9c0 <line:1195:1, col:79>
|   | `-TextComment 0x55887c46b990 <col:1, col:79> Text="  This function provides a means by which to set a value for a given PCD token."
|   |-ParagraphComment 0x55887c46ba30 <line:1197:1, line:1198:34>
|   | |-TextComment 0x55887c46b9e0 <line:1197:1, col:61> Text="  Sets the 8-bit value for the token specified by TokenNumber"
|   | `-TextComment 0x55887c46ba00 <line:1198:1, col:34> Text="  to the value specified by Value."
|   |-ParagraphComment 0x55887c46ba80 <line:1200:1, col:33>
|   | `-TextComment 0x55887c46ba50 <col:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c46bad0 <line:1202:1, col:2>
|   | `-TextComment 0x55887c46baa0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46baf0 <col:3, line:1204:2> [in] explicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c46bbd0 <line:1202:18, line:1204:2>
|   |   |-TextComment 0x55887c46bb50 <line:1202:18, col:70> Text="           The pointer to a 128-bit unique value that"
|   |   |-TextComment 0x55887c46bb70 <line:1203:1, col:75> Text="                            designates which namespace to set a value from."
|   |   `-TextComment 0x55887c46bb90 <line:1204:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46bbf0 <col:3, line:1205:2> [in] explicitly Param="TokenNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c46bcb0 <line:1204:25, line:1205:2>
|   |   |-TextComment 0x55887c46bc60 <line:1204:25, col:76> Text="    The PCD token number to set a current value for."
|   |   `-TextComment 0x55887c46bc80 <line:1205:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46bcd0 <col:3, col:51> [in] explicitly Param="Value" ParamIndex=2
|   | `-ParagraphComment 0x55887c46bd60 <col:19, col:51>
|   |   `-TextComment 0x55887c46bd30 <col:19, col:51> Text="          The 8-bit value to set."
|   |-ParagraphComment 0x55887c46bdb0 <line:1207:1, col:2>
|   | `-TextComment 0x55887c46bd80 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c46bdd0 <col:3, col:42> Name="return"
|     `-ParagraphComment 0x55887c46be30 <col:10, col:42>
|       `-TextComment 0x55887c46be00 <col:10, col:42> Text=" The status of the set operation."
|-FunctionDecl 0x55887c2ea288 <line:1234:1, line:1240:3> line:1236:1 LibPcdSetEx16S 'RETURN_STATUS (const GUID *, UINTN, UINT16)'
| |-ParmVarDecl 0x55887c2ea078 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1237:19> col:19 Guid 'const GUID *'
| |-ParmVarDecl 0x55887c2ea0f0 <line:1238:6, col:18> col:18 TokenNumber 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2ea168 <line:1239:6, col:18> col:18 Value 'UINT16':'unsigned short'
| `-FullComment 0x55887c46c420 <line:1219:1, line:1231:42>
|   |-ParagraphComment 0x55887c46bf40 <line:1219:1, col:79>
|   | `-TextComment 0x55887c46bf10 <col:1, col:79> Text="  This function provides a means by which to set a value for a given PCD token."
|   |-ParagraphComment 0x55887c46bfb0 <line:1221:1, line:1222:34>
|   | |-TextComment 0x55887c46bf60 <line:1221:1, col:62> Text="  Sets the 16-bit value for the token specified by TokenNumber"
|   | `-TextComment 0x55887c46bf80 <line:1222:1, col:34> Text="  to the value specified by Value."
|   |-ParagraphComment 0x55887c46c000 <line:1224:1, col:33>
|   | `-TextComment 0x55887c46bfd0 <col:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c46c050 <line:1226:1, col:2>
|   | `-TextComment 0x55887c46c020 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46c070 <col:3, line:1228:2> [in] explicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c46c150 <line:1226:18, line:1228:2>
|   |   |-TextComment 0x55887c46c0d0 <line:1226:18, col:70> Text="           The pointer to a 128-bit unique value that"
|   |   |-TextComment 0x55887c46c0f0 <line:1227:1, col:75> Text="                            designates which namespace to set a value from."
|   |   `-TextComment 0x55887c46c110 <line:1228:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46c170 <col:3, line:1229:2> [in] explicitly Param="TokenNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c46c230 <line:1228:25, line:1229:2>
|   |   |-TextComment 0x55887c46c1e0 <line:1228:25, col:76> Text="    The PCD token number to set a current value for."
|   |   `-TextComment 0x55887c46c200 <line:1229:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46c250 <col:3, col:52> [in] explicitly Param="Value" ParamIndex=2
|   | `-ParagraphComment 0x55887c46c2e0 <col:19, col:52>
|   |   `-TextComment 0x55887c46c2b0 <col:19, col:52> Text="          The 16-bit value to set."
|   |-ParagraphComment 0x55887c46c330 <line:1231:1, col:2>
|   | `-TextComment 0x55887c46c300 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c46c350 <col:3, col:42> Name="return"
|     `-ParagraphComment 0x55887c46c3b0 <col:10, col:42>
|       `-TextComment 0x55887c46c380 <col:10, col:42> Text=" The status of the set operation."
|-FunctionDecl 0x55887c2ea588 <line:1258:1, line:1264:3> line:1260:1 LibPcdSetEx32S 'RETURN_STATUS (const GUID *, UINTN, UINT32)'
| |-ParmVarDecl 0x55887c2ea378 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1261:19> col:19 Guid 'const GUID *'
| |-ParmVarDecl 0x55887c2ea3f0 <line:1262:6, col:18> col:18 TokenNumber 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2ea468 <line:1263:6, col:18> col:18 Value 'UINT32':'unsigned int'
| `-FullComment 0x55887c46c9a0 <line:1243:1, line:1255:42>
|   |-ParagraphComment 0x55887c46c4c0 <line:1243:1, col:79>
|   | `-TextComment 0x55887c46c490 <col:1, col:79> Text="  This function provides a means by which to set a value for a given PCD token."
|   |-ParagraphComment 0x55887c46c530 <line:1245:1, line:1246:34>
|   | |-TextComment 0x55887c46c4e0 <line:1245:1, col:62> Text="  Sets the 32-bit value for the token specified by TokenNumber"
|   | `-TextComment 0x55887c46c500 <line:1246:1, col:34> Text="  to the value specified by Value."
|   |-ParagraphComment 0x55887c46c580 <line:1248:1, col:33>
|   | `-TextComment 0x55887c46c550 <col:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c46c5d0 <line:1250:1, col:2>
|   | `-TextComment 0x55887c46c5a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46c5f0 <col:3, line:1252:2> [in] explicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c46c6d0 <line:1250:18, line:1252:2>
|   |   |-TextComment 0x55887c46c650 <line:1250:18, col:70> Text="           The pointer to a 128-bit unique value that"
|   |   |-TextComment 0x55887c46c670 <line:1251:1, col:75> Text="                            designates which namespace to set a value from."
|   |   `-TextComment 0x55887c46c690 <line:1252:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46c6f0 <col:3, line:1253:2> [in] explicitly Param="TokenNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c46c7b0 <line:1252:25, line:1253:2>
|   |   |-TextComment 0x55887c46c760 <line:1252:25, col:76> Text="    The PCD token number to set a current value for."
|   |   `-TextComment 0x55887c46c780 <line:1253:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46c7d0 <col:3, col:52> [in] explicitly Param="Value" ParamIndex=2
|   | `-ParagraphComment 0x55887c46c860 <col:19, col:52>
|   |   `-TextComment 0x55887c46c830 <col:19, col:52> Text="          The 32-bit value to set."
|   |-ParagraphComment 0x55887c46c8b0 <line:1255:1, col:2>
|   | `-TextComment 0x55887c46c880 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c46c8d0 <col:3, col:42> Name="return"
|     `-ParagraphComment 0x55887c46c930 <col:10, col:42>
|       `-TextComment 0x55887c46c900 <col:10, col:42> Text=" The status of the set operation."
|-FunctionDecl 0x55887c2ea888 <line:1282:1, line:1288:3> line:1284:1 LibPcdSetEx64S 'RETURN_STATUS (const GUID *, UINTN, UINT64)'
| |-ParmVarDecl 0x55887c2ea678 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1285:19> col:19 Guid 'const GUID *'
| |-ParmVarDecl 0x55887c2ea6f0 <line:1286:6, col:18> col:18 TokenNumber 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2ea768 <line:1287:6, col:18> col:18 Value 'UINT64':'unsigned long long'
| `-FullComment 0x55887c46cf20 <line:1267:1, line:1279:42>
|   |-ParagraphComment 0x55887c46ca40 <line:1267:1, col:79>
|   | `-TextComment 0x55887c46ca10 <col:1, col:79> Text="  This function provides a means by which to set a value for a given PCD token."
|   |-ParagraphComment 0x55887c46cab0 <line:1269:1, line:1270:34>
|   | |-TextComment 0x55887c46ca60 <line:1269:1, col:62> Text="  Sets the 64-bit value for the token specified by TokenNumber"
|   | `-TextComment 0x55887c46ca80 <line:1270:1, col:34> Text="  to the value specified by Value."
|   |-ParagraphComment 0x55887c46cb00 <line:1272:1, col:33>
|   | `-TextComment 0x55887c46cad0 <col:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c46cb50 <line:1274:1, col:2>
|   | `-TextComment 0x55887c46cb20 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46cb70 <col:3, line:1276:2> [in] explicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c46cc50 <line:1274:18, line:1276:2>
|   |   |-TextComment 0x55887c46cbd0 <line:1274:18, col:70> Text="           The pointer to a 128-bit unique value that"
|   |   |-TextComment 0x55887c46cbf0 <line:1275:1, col:75> Text="                            designates which namespace to set a value from."
|   |   `-TextComment 0x55887c46cc10 <line:1276:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46cc70 <col:3, line:1277:2> [in] explicitly Param="TokenNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c46cd30 <line:1276:25, line:1277:2>
|   |   |-TextComment 0x55887c46cce0 <line:1276:25, col:76> Text="    The PCD token number to set a current value for."
|   |   `-TextComment 0x55887c46cd00 <line:1277:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46cd50 <col:3, col:52> [in] explicitly Param="Value" ParamIndex=2
|   | `-ParagraphComment 0x55887c46cde0 <col:19, col:52>
|   |   `-TextComment 0x55887c46cdb0 <col:19, col:52> Text="          The 64-bit value to set."
|   |-ParagraphComment 0x55887c46ce30 <line:1279:1, col:2>
|   | `-TextComment 0x55887c46ce00 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c46ce50 <col:3, col:42> Name="return"
|     `-ParagraphComment 0x55887c46ceb0 <col:10, col:42>
|       `-TextComment 0x55887c46ce80 <col:10, col:42> Text=" The status of the set operation."
|-FunctionDecl 0x55887c2eac28 <line:1312:1, line:1319:3> line:1314:1 LibPcdSetExPtrS 'RETURN_STATUS (const GUID *, UINTN, UINTN *, void *)'
| |-ParmVarDecl 0x55887c2ea978 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1315:20> col:20 Guid 'const GUID *'
| |-ParmVarDecl 0x55887c2ea9f0 <line:1316:12, col:19> col:19 TokenNumber 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2eaa68 <line:1317:12, col:20> col:20 SizeOfBuffer 'UINTN *'
| |-ParmVarDecl 0x55887c2eaae8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1318:20> col:20 Buffer 'void *'
| `-FullComment 0x55887c46d650 <line:1291:1, line:1309:42>
|   |-ParagraphComment 0x55887c46cfc0 <line:1291:1, col:79>
|   | `-TextComment 0x55887c46cf90 <col:1, col:79> Text="  This function provides a means by which to set a value for a given PCD token."
|   |-ParagraphComment 0x55887c46d0b0 <line:1293:1, line:1297:29>
|   | |-TextComment 0x55887c46cfe0 <line:1293:1, col:80> Text="  Sets a buffer for the token specified by TokenNumber to the value specified by"
|   | |-TextComment 0x55887c46d000 <line:1294:1, col:75> Text="  Buffer and SizeOfBuffer. If SizeOfBuffer is greater than the maximum size"
|   | |-TextComment 0x55887c46d020 <line:1295:1, col:80> Text="  support by TokenNumber, then set SizeOfBuffer to the maximum size supported by"
|   | |-TextComment 0x55887c46d040 <line:1296:1, col:84> Text="  TokenNumber and return RETURN_INVALID_PARAMETER to indicate that the set operation"
|   | `-TextComment 0x55887c46d060 <line:1297:1, col:29> Text="  was not actually performed."
|   |-ParagraphComment 0x55887c46d150 <line:1299:1, line:1301:56>
|   | |-TextComment 0x55887c46d0d0 <line:1299:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   | |-TextComment 0x55887c46d0f0 <line:1300:1, col:41> Text="  If SizeOfBuffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c46d110 <line:1301:1, col:56> Text="  If SizeOfBuffer > 0 and Buffer is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c46d1a0 <line:1303:1, col:2>
|   | `-TextComment 0x55887c46d170 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46d1c0 <col:3, line:1305:2> [in] explicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c46d2a0 <line:1303:23, line:1305:2>
|   |   |-TextComment 0x55887c46d220 <line:1303:23, col:70> Text="          Pointer to a 128-bit unique value that"
|   |   |-TextComment 0x55887c46d240 <line:1304:1, col:79> Text="                                designates which namespace to set a value from."
|   |   `-TextComment 0x55887c46d260 <line:1305:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46d2c0 <col:3, line:1306:2> [in] explicitly Param="TokenNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c46d380 <line:1305:30, line:1306:2>
|   |   |-TextComment 0x55887c46d330 <line:1305:30, col:80> Text="   The PCD token number to set a current value for."
|   |   `-TextComment 0x55887c46d350 <line:1306:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46d3a0 <col:3, line:1307:2> [in,out] explicitly Param="SizeOfBuffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c46d460 <line:1306:31, line:1307:2>
|   |   |-TextComment 0x55887c46d410 <line:1306:31, col:62> Text="  The size, in bytes, of Buffer."
|   |   `-TextComment 0x55887c46d430 <line:1307:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46d480 <col:3, col:63> [in] explicitly Param="Buffer" ParamIndex=3
|   | `-ParagraphComment 0x55887c46d510 <col:25, col:63>
|   |   `-TextComment 0x55887c46d4e0 <col:25, col:63> Text="        A pointer to the buffer to set."
|   |-ParagraphComment 0x55887c46d560 <line:1309:1, col:2>
|   | `-TextComment 0x55887c46d530 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c46d580 <col:3, col:42> Name="return"
|     `-ParagraphComment 0x55887c46d5e0 <col:10, col:42>
|       `-TextComment 0x55887c46d5b0 <col:10, col:42> Text=" The status of the set operation."
|-FunctionDecl 0x55887c2eaef8 <line:1337:1, line:1343:3> line:1339:1 LibPcdSetExBoolS 'RETURN_STATUS (const GUID *, UINTN, BOOLEAN)'
| |-ParmVarDecl 0x55887c2ead28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1340:19> col:19 Guid 'const GUID *'
| |-ParmVarDecl 0x55887c2eada0 <line:1341:6, col:18> col:18 TokenNumber 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2eae18 <line:1342:6, col:18> col:18 Value 'BOOLEAN':'unsigned char'
| `-FullComment 0x55887c46dbd0 <line:1322:1, line:1334:42>
|   |-ParagraphComment 0x55887c46d6f0 <line:1322:1, col:79>
|   | `-TextComment 0x55887c46d6c0 <col:1, col:79> Text="  This function provides a means by which to set a value for a given PCD token."
|   |-ParagraphComment 0x55887c46d760 <line:1324:1, line:1325:34>
|   | |-TextComment 0x55887c46d710 <line:1324:1, col:63> Text="  Sets the boolean value for the token specified by TokenNumber"
|   | `-TextComment 0x55887c46d730 <line:1325:1, col:34> Text="  to the value specified by Value."
|   |-ParagraphComment 0x55887c46d7b0 <line:1327:1, col:33>
|   | `-TextComment 0x55887c46d780 <col:1, col:33> Text="  If Guid is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c46d800 <line:1329:1, col:2>
|   | `-TextComment 0x55887c46d7d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46d820 <col:3, line:1331:2> [in] explicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c46d900 <line:1329:18, line:1331:2>
|   |   |-TextComment 0x55887c46d880 <line:1329:18, col:70> Text="           The pointer to a 128-bit unique value that"
|   |   |-TextComment 0x55887c46d8a0 <line:1330:1, col:75> Text="                            designates which namespace to set a value from."
|   |   `-TextComment 0x55887c46d8c0 <line:1331:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46d920 <col:3, line:1332:2> [in] explicitly Param="TokenNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c46d9e0 <line:1331:25, line:1332:2>
|   |   |-TextComment 0x55887c46d990 <line:1331:25, col:76> Text="    The PCD token number to set a current value for."
|   |   `-TextComment 0x55887c46d9b0 <line:1332:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46da00 <col:3, col:53> [in] explicitly Param="Value" ParamIndex=2
|   | `-ParagraphComment 0x55887c46da90 <col:19, col:53>
|   |   `-TextComment 0x55887c46da60 <col:19, col:53> Text="          The boolean value to set."
|   |-ParagraphComment 0x55887c46dae0 <line:1334:1, col:2>
|   | `-TextComment 0x55887c46dab0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c46db00 <col:3, col:42> Name="return"
|     `-ParagraphComment 0x55887c46db60 <col:10, col:42>
|       `-TextComment 0x55887c46db30 <col:10, col:42> Text=" The status of the set operation."
|-TypedefDecl 0x55887c2eb338 <line:1361:1, line:1368:3> line:1363:10 referenced PCD_CALLBACK 'void (*)(const GUID *, UINTN, void *, UINTN)'
| |-PointerType 0x55887c2eb2c0 'void (*)(const GUID *, UINTN, void *, UINTN)'
| | `-ParenType 0x55887c2eb260 'void (const GUID *, UINTN, void *, UINTN)' sugar
| |   `-FunctionProtoType 0x55887c2eb210 'void (const GUID *, UINTN, void *, UINTN)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     |-PointerType 0x55887c2d4120 'const GUID *'
| |     | `-QualType 0x55887c06c1e1 'const GUID' const
| |     |   `-TypedefType 0x55887c06c1e0 'GUID' sugar
| |     |     |-Typedef 0x55887c051a78 'GUID'
| |     |     `-ElaboratedType 0x55887c051a20 'struct GUID' sugar
| |     |       `-RecordType 0x55887c04a5b0 'GUID'
| |     |         `-Record 0x55887c04a528 ''
| |     |-TypedefType 0x55887c0527b0 'UINTN' sugar
| |     | |-Typedef 0x55887c04a020 'UINTN'
| |     | `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |     |   |-Typedef 0x55887c049930 'UINT64'
| |     |   `-BuiltinType 0x55887bfe9190 'unsigned long long'
| |     |-PointerType 0x55887bfe9730 'void *'
| |     | `-BuiltinType 0x55887bfe9010 'void'
| |     `-TypedefType 0x55887c0527b0 'UINTN' sugar
| |       |-Typedef 0x55887c04a020 'UINTN'
| |       `-TypedefType 0x55887c049ff0 'UINT64' sugar
| |         |-Typedef 0x55887c049930 'UINT64'
| |         `-BuiltinType 0x55887bfe9190 'unsigned long long'
| `-FullComment 0x55887c46e190 <line:1346:1, line:1358:76>
|   |-ParagraphComment 0x55887c46dc70 <line:1346:1, col:49>
|   | `-TextComment 0x55887c46dc40 <col:1, col:49> Text="  This notification function serves two purposes."
|   |-ParagraphComment 0x55887c46dd80 <line:1348:1, line:1353:32>
|   | |-TextComment 0x55887c46dc90 <line:1348:1, col:82> Text="  Firstly, it notifies the module that did the registration that the value of this"
|   | |-TextComment 0x55887c46dcb0 <line:1349:1, col:25> Text="  PCD token has been set."
|   | |-TextComment 0x55887c46dcd0 <line:1350:1, col:89> Text="  Secondly, it provides a mechanism for the module that did the registration to intercept"
|   | |-TextComment 0x55887c46dcf0 <line:1351:1, col:89> Text="  the set operation and override the value been set if necessary. After the invocation of"
|   | |-TextComment 0x55887c46dd10 <line:1352:1, col:90> Text="  the callback function, TokenData will be used by PCD service PEIM or driver to modify th"
|   | `-TextComment 0x55887c46dd30 <line:1353:1, col:32> Text="  internal data in PCD database."
|   |-ParagraphComment 0x55887c46ddd0 <line:1355:1, col:2>
|   | `-TextComment 0x55887c46dda0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46ddf0 <col:3, line:1356:2> [in] explicitly Param="CallBackGuid" ParamIndex=0
|   | `-ParagraphComment 0x55887c46deb0 <line:1355:31, line:1356:2>
|   |   |-TextComment 0x55887c46de60 <line:1355:31, col:63> Text="    The PCD token GUID being set."
|   |   `-TextComment 0x55887c46de80 <line:1356:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46ded0 <col:3, line:1357:2> [in] explicitly Param="CallBackToken" ParamIndex=1
|   | `-ParagraphComment 0x55887c46df90 <line:1356:32, line:1357:2>
|   |   |-TextComment 0x55887c46df40 <line:1356:32, col:65> Text="   The PCD token number being set."
|   |   `-TextComment 0x55887c46df60 <line:1357:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46dfb0 <col:3, line:1358:2> [in,out] explicitly Param="TokenData" ParamIndex=2
|   | `-ParagraphComment 0x55887c46e070 <line:1357:28, line:1358:2>
|   |   |-TextComment 0x55887c46e020 <line:1357:28, col:72> Text="       A pointer to the token data being set."
|   |   `-TextComment 0x55887c46e040 <line:1358:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c46e090 <col:3, col:76> [in] explicitly Param="TokenDataSize" ParamIndex=3
|     `-ParagraphComment 0x55887c46e130 <col:32, col:76>
|       `-TextComment 0x55887c46e100 <col:32, col:76> Text="   The size, in bytes, of the data being set."
|-FunctionDecl 0x55887c2eb8e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1392:3> line:1388:1 LibPcdCallbackOnSet 'void (const GUID *, UINTN, PCD_CALLBACK)'
| |-ParmVarDecl 0x55887c2eb3c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1389:21> col:21 Guid 'const GUID *'
| |-ParmVarDecl 0x55887c2eb440 <line:1390:6, col:20> col:20 TokenNumber 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2eb4e0 <line:1391:6, col:20> col:20 NotificationFunction 'PCD_CALLBACK':'void (*)(const GUID *, UINTN, void *, UINTN)'
| `-FullComment 0x55887c46e690 <line:1371:1, line:1383:77>
|   |-ParagraphComment 0x55887c46e230 <line:1371:1, col:78>
|   | `-TextComment 0x55887c46e200 <col:1, col:78> Text="  Set up a notification function that is called when a specified token is set."
|   |-ParagraphComment 0x55887c46e2f0 <line:1373:1, line:1376:49>
|   | |-TextComment 0x55887c46e250 <line:1373:1, col:58> Text="  When the token specified by TokenNumber and Guid is set,"
|   | |-TextComment 0x55887c46e270 <line:1374:1, col:73> Text="  then notification function specified by NotificationFunction is called."
|   | |-TextComment 0x55887c46e290 <line:1375:1, col:56> Text="  If Guid is NULL, then the default token space is used."
|   | `-TextComment 0x55887c46e2b0 <line:1376:1, col:49> Text="  If NotificationFunction is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c46e340 <line:1378:1, col:2>
|   | `-TextComment 0x55887c46e310 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46e360 <col:3, line:1381:2> [in] explicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c46e460 <line:1378:19, line:1381:2>
|   |   |-TextComment 0x55887c46e3c0 <line:1378:19, col:91> Text="                  Pointer to a 128-bit unique value that designates which"
|   |   |-TextComment 0x55887c46e3e0 <line:1379:1, col:93> Text="                                    namespace to set a value from.  If NULL, then the default"
|   |   |-TextComment 0x55887c46e400 <line:1380:1, col:56> Text="                                    token space is used."
|   |   `-TextComment 0x55887c46e420 <line:1381:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46e480 <col:3, line:1382:2> [in] explicitly Param="TokenNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c46e540 <line:1381:26, line:1382:2>
|   |   |-TextComment 0x55887c46e4f0 <line:1381:26, col:68> Text="           The PCD token number to monitor."
|   |   `-TextComment 0x55887c46e510 <line:1382:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c46e560 <col:3, line:1383:77> [in] explicitly Param="NotificationFunction" ParamIndex=2
|     `-ParagraphComment 0x55887c46e620 <line:1382:35, line:1383:77>
|       |-TextComment 0x55887c46e5d0 <line:1382:35, col:71> Text="  The function to call when the token"
|       `-TextComment 0x55887c46e5f0 <line:1383:1, col:77> Text="                                    specified by Guid and TokenNumber is set."
|-FunctionDecl 0x55887c2ebb68 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1413:3> line:1409:1 LibPcdCancelCallback 'void (const GUID *, UINTN, PCD_CALLBACK)'
| |-ParmVarDecl 0x55887c2eb9d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1410:21> col:21 Guid 'const GUID *'
| |-ParmVarDecl 0x55887c2eba50 <line:1411:6, col:20> col:20 TokenNumber 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2ebac8 <line:1412:6, col:20> col:20 NotificationFunction 'PCD_CALLBACK':'void (*)(const GUID *, UINTN, void *, UINTN)'
| `-FullComment 0x55887c46eb00 <line:1395:1, line:1404:76>
|   |-ParagraphComment 0x55887c46e730 <line:1395:1, col:82>
|   | `-TextComment 0x55887c46e700 <col:1, col:82> Text="  Disable a notification function that was established with LibPcdCallbackonSet()."
|   |-ParagraphComment 0x55887c46e7f0 <line:1397:1, line:1400:42>
|   | |-TextComment 0x55887c46e750 <line:1397:1, col:93> Text="  Disable a notification function that was previously established with LibPcdCallbackOnSet()."
|   | |-TextComment 0x55887c46e770 <line:1398:1, col:49> Text="  If NotificationFunction is NULL, then ASSERT()."
|   | |-TextComment 0x55887c46e790 <line:1399:1, col:76> Text="  If LibPcdCallbackOnSet() was not previously called with Guid, TokenNumber,"
|   | `-TextComment 0x55887c46e7b0 <line:1400:1, col:42> Text="  and NotificationFunction, then ASSERT()."
|   |-ParagraphComment 0x55887c46e840 <line:1402:1, col:2>
|   | `-TextComment 0x55887c46e810 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46e860 <col:3, line:1403:2> [in] explicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c46e910 <line:1402:19, line:1403:2>
|   |   |-TextComment 0x55887c46e8c0 <line:1402:19, col:64> Text="                 Specify the GUID token space."
|   |   `-TextComment 0x55887c46e8e0 <line:1403:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46e930 <col:3, line:1404:2> [in] explicitly Param="TokenNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c46e9f0 <line:1403:26, line:1404:2>
|   |   |-TextComment 0x55887c46e9a0 <line:1403:26, col:60> Text="          Specify the token number."
|   |   `-TextComment 0x55887c46e9c0 <line:1404:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c46ea10 <col:3, col:76> [in] explicitly Param="NotificationFunction" ParamIndex=2
|     `-ParagraphComment 0x55887c46eab0 <col:35, col:76>
|       `-TextComment 0x55887c46ea80 <col:35, col:76> Text=" The callback function to be unregistered."
|-FunctionDecl 0x55887c2ebd68 <line:1434:1, line:1439:3> line:1436:1 LibPcdGetNextToken 'UINTN (const GUID *, UINTN)'
| |-ParmVarDecl 0x55887c2ebc58 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1437:19> col:19 Guid 'const GUID *'
| |-ParmVarDecl 0x55887c2ebcd0 <line:1438:6, col:18> col:18 TokenNumber 'UINTN':'unsigned long long'
| `-FullComment 0x55887c46f040 <line:1416:1, line:1431:38>
|   |-ParagraphComment 0x55887c46eba0 <line:1416:1, col:44>
|   | `-TextComment 0x55887c46eb70 <col:1, col:44> Text="  Retrieves the next token in a token space."
|   |-ParagraphComment 0x55887c46ec90 <line:1418:1, line:1422:54>
|   | |-TextComment 0x55887c46ebc0 <line:1418:1, col:77> Text="  Retrieves the next PCD token number from the token space specified by Guid."
|   | |-TextComment 0x55887c46ebe0 <line:1419:1, col:78> Text="  If Guid is NULL, then the default token space is used.  If TokenNumber is 0,"
|   | |-TextComment 0x55887c46ec00 <line:1420:1, col:76> Text="  then the first token number is returned.  Otherwise, the token number that"
|   | |-TextComment 0x55887c46ec20 <line:1421:1, col:81> Text="  follows TokenNumber in the token space is returned.  If TokenNumber is the last"
|   | `-TextComment 0x55887c46ec40 <line:1422:1, col:54> Text="  token number in the token space, then 0 is returned."
|   |-ParagraphComment 0x55887c46ece0 <line:1424:1, col:89>
|   | `-TextComment 0x55887c46ecb0 <col:1, col:89> Text="  If TokenNumber is not 0 and is not in the token space specified by Guid, then ASSERT()."
|   |-ParagraphComment 0x55887c46ed30 <line:1426:1, col:2>
|   | `-TextComment 0x55887c46ed00 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46ed50 <col:3, line:1428:2> [in] explicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c46ee30 <line:1426:19, line:1428:2>
|   |   |-TextComment 0x55887c46edb0 <line:1426:19, col:91> Text="        Pointer to a 128-bit unique value that designates which namespace"
|   |   |-TextComment 0x55887c46edd0 <line:1427:1, col:94> Text="                          to set a value from.  If NULL, then the default token space is used."
|   |   `-TextComment 0x55887c46edf0 <line:1428:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46ee50 <col:3, line:1429:39> [in] explicitly Param="TokenNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c46ef10 <line:1428:26, line:1429:39>
|   |   |-TextComment 0x55887c46eec0 <line:1428:26, col:92> Text=" The previous PCD token number.  If 0, then retrieves the first PCD"
|   |   `-TextComment 0x55887c46eee0 <line:1429:1, col:39> Text="                          token number."
|   |-ParagraphComment 0x55887c46ef60 <line:1431:1, col:2>
|   | `-TextComment 0x55887c46ef30 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c46ef80 <col:3, col:38> Name="return"
|     `-ParagraphComment 0x55887c46efe0 <col:10, col:38>
|       `-TextComment 0x55887c46efb0 <col:10, col:38> Text=" The next valid token number."
|-FunctionDecl 0x55887c2ebf48 <line:1454:1, line:1458:3> line:1456:1 LibPcdGetNextTokenSpace 'GUID *(const GUID *)'
| |-ParmVarDecl 0x55887c2ebe58 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1457:19> col:19 TokenSpaceGuid 'const GUID *'
| `-FullComment 0x55887c46f3c0 <line:1442:1, line:1451:41>
|   |-ParagraphComment 0x55887c46f0e0 <line:1442:1, col:63>
|   | `-TextComment 0x55887c46f0b0 <col:1, col:63> Text="  Used to retrieve the list of available PCD token space GUIDs."
|   |-ParagraphComment 0x55887c46f1a0 <line:1444:1, line:1447:88>
|   | |-TextComment 0x55887c46f100 <line:1444:1, col:90> Text="  Returns the PCD token space GUID that follows TokenSpaceGuid in the list of token spaces"
|   | |-TextComment 0x55887c46f120 <line:1445:1, col:18> Text="  in the platform."
|   | |-TextComment 0x55887c46f140 <line:1446:1, col:83> Text="  If TokenSpaceGuid is NULL, then a pointer to the first PCD token spaces returned."
|   | `-TextComment 0x55887c46f160 <line:1447:1, col:88> Text="  If TokenSpaceGuid is the last PCD token space GUID in the list, then NULL is returned."
|   |-ParagraphComment 0x55887c46f1f0 <line:1449:1, col:2>
|   | `-TextComment 0x55887c46f1c0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46f210 <col:3, col:63> [in] implicitly Param="TokenSpaceGuid" ParamIndex=0
|   | `-ParagraphComment 0x55887c46f2a0 <col:25, col:63>
|   |   `-TextComment 0x55887c46f270 <col:25, col:63> Text="  Pointer to the a PCD token space GUID"
|   |-ParagraphComment 0x55887c46f2f0 <line:1451:1, col:2>
|   | `-TextComment 0x55887c46f2c0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c46f310 <col:3, col:41> Name="return"
|     `-ParagraphComment 0x55887c46f370 <col:10, col:41>
|       `-TextComment 0x55887c46f340 <col:10, col:41> Text=" The next valid token namespace."
|-FunctionDecl 0x55887c2ec2f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1490:3> line:1485:1 LibPatchPcdSetPtr 'void *(void *, UINTN, UINTN *, const void *)'
| |-ParmVarDecl 0x55887c2ec030 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1486:21> col:21 PatchVariable 'void *'
| |-ParmVarDecl 0x55887c2ec0a8 <line:1487:13, col:20> col:20 MaximumDatumSize 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2ec120 <line:1488:13, col:21> col:21 SizeOfBuffer 'UINTN *'
| |-ParmVarDecl 0x55887c2ec1a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1489:21> col:21 Buffer 'const void *'
| `-FullComment 0x55887c46fb20 <line:1461:1, line:1480:56>
|   |-ParagraphComment 0x55887c46f460 <line:1461:1, col:61>
|   | `-TextComment 0x55887c46f430 <col:1, col:61> Text="  Sets a value of a patchable PCD entry that is type pointer."
|   |-ParagraphComment 0x55887c46f570 <line:1463:1, line:1468:45>
|   | |-TextComment 0x55887c46f480 <line:1463:1, col:80> Text="  Sets the PCD entry specified by PatchVariable to the value specified by Buffer"
|   | |-TextComment 0x55887c46f4a0 <line:1464:1, col:73> Text="  and SizeOfBuffer.  Buffer is returned.  If SizeOfBuffer is greater than"
|   | |-TextComment 0x55887c46f4c0 <line:1465:1, col:72> Text="  MaximumDatumSize, then set SizeOfBuffer to MaximumDatumSize and return"
|   | |-TextComment 0x55887c46f4e0 <line:1466:1, col:69> Text="  NULL to indicate that the set operation was not actually performed."
|   | |-TextComment 0x55887c46f500 <line:1467:1, col:73> Text="  If SizeOfBuffer is set to MAX_ADDRESS, then SizeOfBuffer must be set to"
|   | `-TextComment 0x55887c46f520 <line:1468:1, col:45> Text="  MaximumDatumSize and NULL must be returned."
|   |-ParagraphComment 0x55887c46f610 <line:1470:1, line:1472:56>
|   | |-TextComment 0x55887c46f590 <line:1470:1, col:42> Text="  If PatchVariable is NULL, then ASSERT()."
|   | |-TextComment 0x55887c46f5b0 <line:1471:1, col:41> Text="  If SizeOfBuffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c46f5d0 <line:1472:1, col:56> Text="  If SizeOfBuffer > 0 and Buffer is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c46f660 <line:1474:1, col:2>
|   | `-TextComment 0x55887c46f630 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46f680 <col:3, line:1476:2> [out] explicitly Param="PatchVariable" ParamIndex=0
|   | `-ParagraphComment 0x55887c46f770 <line:1474:28, line:1476:2>
|   |   |-TextComment 0x55887c46f6f0 <line:1474:28, col:84> Text="     A pointer to the global variable in a module that is"
|   |   |-TextComment 0x55887c46f710 <line:1475:1, col:64> Text="                                the target of the set operation."
|   |   `-TextComment 0x55887c46f730 <line:1476:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46f790 <col:3, line:1477:2> [in] explicitly Param="MaximumDatumSize" ParamIndex=1
|   | `-ParagraphComment 0x55887c46f850 <line:1476:30, line:1477:2>
|   |   |-TextComment 0x55887c46f800 <line:1476:30, col:102> Text="   The maximum size allowed for the PCD entry specified by PatchVariable."
|   |   `-TextComment 0x55887c46f820 <line:1477:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46f870 <col:3, line:1478:2> [in,out] explicitly Param="SizeOfBuffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c46f930 <line:1477:31, line:1478:2>
|   |   |-TextComment 0x55887c46f8e0 <line:1477:31, col:75> Text="  A pointer to the size, in bytes, of Buffer."
|   |   `-TextComment 0x55887c46f900 <line:1478:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46f950 <col:3, col:91> [in] explicitly Param="Buffer" ParamIndex=3
|   | `-ParagraphComment 0x55887c46f9e0 <col:20, col:91>
|   |   `-TextComment 0x55887c46f9b0 <col:20, col:91> Text="             A pointer to the buffer to used to set the target variable."
|   |-ParagraphComment 0x55887c46fa30 <line:1480:1, col:2>
|   | `-TextComment 0x55887c46fa00 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c46fa50 <col:3, col:56> Name="return"
|     `-ParagraphComment 0x55887c46fab0 <col:10, col:56>
|       `-TextComment 0x55887c46fa80 <col:10, col:56> Text=" Return the pointer to the Buffer that was set."
|-FunctionDecl 0x55887c2ec6a8 <line:1515:1, line:1522:3> line:1517:1 LibPatchPcdSetPtrS 'RETURN_STATUS (void *, UINTN, UINTN *, const void *)'
| |-ParmVarDecl 0x55887c2ec3f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1518:20> col:20 PatchVariable 'void *'
| |-ParmVarDecl 0x55887c2ec468 <line:1519:12, col:19> col:19 MaximumDatumSize 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2ec4e0 <line:1520:12, col:20> col:20 SizeOfBuffer 'UINTN *'
| |-ParmVarDecl 0x55887c2ec560 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1521:20> col:20 Buffer 'const void *'
| `-FullComment 0x55887c470280 <line:1493:1, line:1512:42>
|   |-ParagraphComment 0x55887c46fbc0 <line:1493:1, col:61>
|   | `-TextComment 0x55887c46fb90 <col:1, col:61> Text="  Sets a value of a patchable PCD entry that is type pointer."
|   |-ParagraphComment 0x55887c46fcd0 <line:1495:1, line:1500:65>
|   | |-TextComment 0x55887c46fbe0 <line:1495:1, col:70> Text="  Sets the PCD entry specified by PatchVariable to the value specified"
|   | |-TextComment 0x55887c46fc00 <line:1496:1, col:79> Text="  by Buffer and SizeOfBuffer. If SizeOfBuffer is greater than MaximumDatumSize,"
|   | |-TextComment 0x55887c46fc20 <line:1497:1, col:79> Text="  then set SizeOfBuffer to MaximumDatumSize and return RETURN_INVALID_PARAMETER"
|   | |-TextComment 0x55887c46fc40 <line:1498:1, col:64> Text="  to indicate that the set operation was not actually performed."
|   | |-TextComment 0x55887c46fc60 <line:1499:1, col:73> Text="  If SizeOfBuffer is set to MAX_ADDRESS, then SizeOfBuffer must be set to"
|   | `-TextComment 0x55887c46fc80 <line:1500:1, col:65> Text="  MaximumDatumSize and RETURN_INVALID_PARAMETER must be returned."
|   |-ParagraphComment 0x55887c46fd70 <line:1502:1, line:1504:56>
|   | |-TextComment 0x55887c46fcf0 <line:1502:1, col:42> Text="  If PatchVariable is NULL, then ASSERT()."
|   | |-TextComment 0x55887c46fd10 <line:1503:1, col:41> Text="  If SizeOfBuffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c46fd30 <line:1504:1, col:56> Text="  If SizeOfBuffer > 0 and Buffer is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c46fdc0 <line:1506:1, col:2>
|   | `-TextComment 0x55887c46fd90 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46fde0 <col:3, line:1508:2> [out] explicitly Param="PatchVariable" ParamIndex=0
|   | `-ParagraphComment 0x55887c46fed0 <line:1506:28, line:1508:2>
|   |   |-TextComment 0x55887c46fe50 <line:1506:28, col:84> Text="     A pointer to the global variable in a module that is"
|   |   |-TextComment 0x55887c46fe70 <line:1507:1, col:64> Text="                                the target of the set operation."
|   |   `-TextComment 0x55887c46fe90 <line:1508:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46fef0 <col:3, line:1509:2> [in] explicitly Param="MaximumDatumSize" ParamIndex=1
|   | `-ParagraphComment 0x55887c46ffb0 <line:1508:30, line:1509:2>
|   |   |-TextComment 0x55887c46ff60 <line:1508:30, col:102> Text="   The maximum size allowed for the PCD entry specified by PatchVariable."
|   |   `-TextComment 0x55887c46ff80 <line:1509:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c46ffd0 <col:3, line:1510:2> [in,out] explicitly Param="SizeOfBuffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c470090 <line:1509:31, line:1510:2>
|   |   |-TextComment 0x55887c470040 <line:1509:31, col:75> Text="  A pointer to the size, in bytes, of Buffer."
|   |   `-TextComment 0x55887c470060 <line:1510:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4700b0 <col:3, col:91> [in] explicitly Param="Buffer" ParamIndex=3
|   | `-ParagraphComment 0x55887c470140 <col:20, col:91>
|   |   `-TextComment 0x55887c470110 <col:20, col:91> Text="             A pointer to the buffer to used to set the target variable."
|   |-ParagraphComment 0x55887c470190 <line:1512:1, col:2>
|   | `-TextComment 0x55887c470160 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c4701b0 <col:3, col:42> Name="return"
|     `-ParagraphComment 0x55887c470210 <col:10, col:42>
|       `-TextComment 0x55887c4701e0 <col:10, col:42> Text=" The status of the set operation."
|-FunctionDecl 0x55887c2ecaf0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1557:3> line:1551:1 LibPatchPcdSetPtrAndSize 'void *(void *, UINTN *, UINTN, UINTN *, const void *)'
| |-ParmVarDecl 0x55887c2ec7b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1552:21> col:21 PatchVariable 'void *'
| |-ParmVarDecl 0x55887c2ec828 <line:1553:13, col:21> col:21 SizeOfPatchVariable 'UINTN *'
| |-ParmVarDecl 0x55887c2ec8a0 <line:1554:13, col:20> col:20 MaximumDatumSize 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2ec918 <line:1555:13, col:21> col:21 SizeOfBuffer 'UINTN *'
| |-ParmVarDecl 0x55887c2ec998 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1556:21> col:21 Buffer 'const void *'
| `-FullComment 0x55887c470af0 <line:1525:1, line:1546:56>
|   |-ParagraphComment 0x55887c470320 <line:1525:1, col:70>
|   | `-TextComment 0x55887c4702f0 <col:1, col:70> Text="  Sets a value and size of a patchable PCD entry that is type pointer."
|   |-ParagraphComment 0x55887c470430 <line:1527:1, line:1532:45>
|   | |-TextComment 0x55887c470340 <line:1527:1, col:80> Text="  Sets the PCD entry specified by PatchVariable to the value specified by Buffer"
|   | |-TextComment 0x55887c470360 <line:1528:1, col:72> Text="  and SizeOfBuffer. Buffer is returned.  If SizeOfBuffer is greater than"
|   | |-TextComment 0x55887c470380 <line:1529:1, col:72> Text="  MaximumDatumSize, then set SizeOfBuffer to MaximumDatumSize and return"
|   | |-TextComment 0x55887c4703a0 <line:1530:1, col:69> Text="  NULL to indicate that the set operation was not actually performed."
|   | |-TextComment 0x55887c4703c0 <line:1531:1, col:73> Text="  If SizeOfBuffer is set to MAX_ADDRESS, then SizeOfBuffer must be set to"
|   | `-TextComment 0x55887c4703e0 <line:1532:1, col:45> Text="  MaximumDatumSize and NULL must be returned."
|   |-ParagraphComment 0x55887c4704f0 <line:1534:1, line:1537:56>
|   | |-TextComment 0x55887c470450 <line:1534:1, col:42> Text="  If PatchVariable is NULL, then ASSERT()."
|   | |-TextComment 0x55887c470470 <line:1535:1, col:48> Text="  If SizeOfPatchVariable is NULL, then ASSERT()."
|   | |-TextComment 0x55887c470490 <line:1536:1, col:41> Text="  If SizeOfBuffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c4704b0 <line:1537:1, col:56> Text="  If SizeOfBuffer > 0 and Buffer is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c470540 <line:1539:1, col:2>
|   | `-TextComment 0x55887c470510 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c470560 <col:3, line:1541:2> [out] explicitly Param="PatchVariable" ParamIndex=0
|   | `-ParagraphComment 0x55887c470650 <line:1539:28, line:1541:2>
|   |   |-TextComment 0x55887c4705d0 <line:1539:28, col:84> Text="     A pointer to the global variable in a module that is"
|   |   |-TextComment 0x55887c4705f0 <line:1540:1, col:64> Text="                                the target of the set operation."
|   |   `-TextComment 0x55887c470610 <line:1541:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c470670 <col:3, line:1542:2> [out] explicitly Param="SizeOfPatchVariable" ParamIndex=1
|   | `-ParagraphComment 0x55887c470730 <line:1541:34, line:1542:2>
|   |   |-TextComment 0x55887c4706e0 <line:1541:34, col:84> Text=" A pointer to the size, in bytes, of PatchVariable."
|   |   `-TextComment 0x55887c470700 <line:1542:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c470750 <col:3, line:1543:2> [in] explicitly Param="MaximumDatumSize" ParamIndex=2
|   | `-ParagraphComment 0x55887c470810 <line:1542:30, line:1543:2>
|   |   |-TextComment 0x55887c4707c0 <line:1542:30, col:102> Text="   The maximum size allowed for the PCD entry specified by PatchVariable."
|   |   `-TextComment 0x55887c4707e0 <line:1543:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c470830 <col:3, line:1544:2> [in,out] explicitly Param="SizeOfBuffer" ParamIndex=3
|   | `-ParagraphComment 0x55887c4708f0 <line:1543:31, line:1544:2>
|   |   |-TextComment 0x55887c4708a0 <line:1543:31, col:75> Text="  A pointer to the size, in bytes, of Buffer."
|   |   `-TextComment 0x55887c4708c0 <line:1544:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c470910 <col:3, col:91> [in] explicitly Param="Buffer" ParamIndex=4
|   | `-ParagraphComment 0x55887c4709a0 <col:20, col:91>
|   |   `-TextComment 0x55887c470970 <col:20, col:91> Text="             A pointer to the buffer to used to set the target variable."
|   |-ParagraphComment 0x55887c4709f0 <line:1546:1, col:2>
|   | `-TextComment 0x55887c4709c0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c470a10 <col:3, col:56> Name="return"
|     `-ParagraphComment 0x55887c470a70 <col:10, col:56>
|       `-TextComment 0x55887c470a40 <col:10, col:56> Text=" Return the pointer to the Buffer that was set."
|-FunctionDecl 0x55887c2ecf38 <line:1584:1, line:1592:3> line:1586:1 LibPatchPcdSetPtrAndSizeS 'RETURN_STATUS (void *, UINTN *, UINTN, UINTN *, const void *)'
| |-ParmVarDecl 0x55887c2ecc00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1587:20> col:20 PatchVariable 'void *'
| |-ParmVarDecl 0x55887c2ecc78 <line:1588:12, col:20> col:20 SizeOfPatchVariable 'UINTN *'
| |-ParmVarDecl 0x55887c2eccf0 <line:1589:12, col:19> col:19 MaximumDatumSize 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2ecd68 <line:1590:12, col:20> col:20 SizeOfBuffer 'UINTN *'
| |-ParmVarDecl 0x55887c2ecde8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1591:20> col:20 Buffer 'const void *'
| `-FullComment 0x55887c471360 <line:1560:1, line:1581:42>
|   |-ParagraphComment 0x55887c470b90 <line:1560:1, col:70>
|   | `-TextComment 0x55887c470b60 <col:1, col:70> Text="  Sets a value and size of a patchable PCD entry that is type pointer."
|   |-ParagraphComment 0x55887c470ca0 <line:1562:1, line:1567:65>
|   | |-TextComment 0x55887c470bb0 <line:1562:1, col:70> Text="  Sets the PCD entry specified by PatchVariable to the value specified"
|   | |-TextComment 0x55887c470bd0 <line:1563:1, col:79> Text="  by Buffer and SizeOfBuffer. If SizeOfBuffer is greater than MaximumDatumSize,"
|   | |-TextComment 0x55887c470bf0 <line:1564:1, col:79> Text="  then set SizeOfBuffer to MaximumDatumSize and return RETURN_INVALID_PARAMETER"
|   | |-TextComment 0x55887c470c10 <line:1565:1, col:64> Text="  to indicate that the set operation was not actually performed."
|   | |-TextComment 0x55887c470c30 <line:1566:1, col:73> Text="  If SizeOfBuffer is set to MAX_ADDRESS, then SizeOfBuffer must be set to"
|   | `-TextComment 0x55887c470c50 <line:1567:1, col:65> Text="  MaximumDatumSize and RETURN_INVALID_PARAMETER must be returned."
|   |-ParagraphComment 0x55887c470d60 <line:1569:1, line:1572:56>
|   | |-TextComment 0x55887c470cc0 <line:1569:1, col:42> Text="  If PatchVariable is NULL, then ASSERT()."
|   | |-TextComment 0x55887c470ce0 <line:1570:1, col:48> Text="  If SizeOfPatchVariable is NULL, then ASSERT()."
|   | |-TextComment 0x55887c470d00 <line:1571:1, col:41> Text="  If SizeOfBuffer is NULL, then ASSERT()."
|   | `-TextComment 0x55887c470d20 <line:1572:1, col:56> Text="  If SizeOfBuffer > 0 and Buffer is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c470db0 <line:1574:1, col:2>
|   | `-TextComment 0x55887c470d80 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c470dd0 <col:3, line:1576:2> [out] explicitly Param="PatchVariable" ParamIndex=0
|   | `-ParagraphComment 0x55887c470ec0 <line:1574:28, line:1576:2>
|   |   |-TextComment 0x55887c470e40 <line:1574:28, col:84> Text="     A pointer to the global variable in a module that is"
|   |   |-TextComment 0x55887c470e60 <line:1575:1, col:64> Text="                                the target of the set operation."
|   |   `-TextComment 0x55887c470e80 <line:1576:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c470ee0 <col:3, line:1577:2> [out] explicitly Param="SizeOfPatchVariable" ParamIndex=1
|   | `-ParagraphComment 0x55887c470fa0 <line:1576:34, line:1577:2>
|   |   |-TextComment 0x55887c470f50 <line:1576:34, col:84> Text=" A pointer to the size, in bytes, of PatchVariable."
|   |   `-TextComment 0x55887c470f70 <line:1577:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c470fc0 <col:3, line:1578:2> [in] explicitly Param="MaximumDatumSize" ParamIndex=2
|   | `-ParagraphComment 0x55887c471080 <line:1577:30, line:1578:2>
|   |   |-TextComment 0x55887c471030 <line:1577:30, col:102> Text="   The maximum size allowed for the PCD entry specified by PatchVariable."
|   |   `-TextComment 0x55887c471050 <line:1578:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4710a0 <col:3, line:1579:2> [in,out] explicitly Param="SizeOfBuffer" ParamIndex=3
|   | `-ParagraphComment 0x55887c471160 <line:1578:31, line:1579:2>
|   |   |-TextComment 0x55887c471110 <line:1578:31, col:75> Text="  A pointer to the size, in bytes, of Buffer."
|   |   `-TextComment 0x55887c471130 <line:1579:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c471180 <col:3, col:91> [in] explicitly Param="Buffer" ParamIndex=4
|   | `-ParagraphComment 0x55887c471210 <col:20, col:91>
|   |   `-TextComment 0x55887c4711e0 <col:20, col:91> Text="             A pointer to the buffer to used to set the target variable."
|   |-ParagraphComment 0x55887c471260 <line:1581:1, col:2>
|   | `-TextComment 0x55887c471230 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c471280 <col:3, col:42> Name="return"
|     `-ParagraphComment 0x55887c4712e0 <col:10, col:42>
|       `-TextComment 0x55887c4712b0 <col:10, col:42> Text=" The status of the set operation."
|-EnumDecl 0x55887c2ed000 <line:1594:9, line:1601:1> line:1594:9
| |-EnumConstantDecl 0x55887c2ed0c0 <line:1595:3> col:3 PCD_TYPE_8 'int'
| |-EnumConstantDecl 0x55887c2ed110 <line:1596:3> col:3 PCD_TYPE_16 'int'
| |-EnumConstantDecl 0x55887c2ed160 <line:1597:3> col:3 PCD_TYPE_32 'int'
| |-EnumConstantDecl 0x55887c2ed1b0 <line:1598:3> col:3 PCD_TYPE_64 'int'
| |-EnumConstantDecl 0x55887c2ed200 <line:1599:3> col:3 PCD_TYPE_BOOL 'int'
| `-EnumConstantDecl 0x55887c2ed250 <line:1600:3> col:3 PCD_TYPE_PTR 'int'
|-TypedefDecl 0x55887c2ed2f8 <line:1594:1, line:1601:3> col:3 referenced PCD_TYPE 'enum PCD_TYPE':'PCD_TYPE'
| `-ElaboratedType 0x55887c2ed2a0 'enum PCD_TYPE' sugar
|   `-EnumType 0x55887c2ed0a0 'PCD_TYPE'
|     `-Enum 0x55887c2ed000 ''
|-RecordDecl 0x55887c2ed368 <line:1603:9, line:1621:1> line:1603:9 struct definition
| |-FieldDecl 0x55887c2ed470 <line:1608:3, col:15> col:15 PcdType 'PCD_TYPE':'PCD_TYPE'
| | `-FullComment 0x55887c471450 <line:1605:6, line:1606:58>
| |   `-ParagraphComment 0x55887c471420 <line:1605:6, line:1606:58>
| |     |-TextComment 0x55887c4713d0 <line:1605:6, col:76> Text=" The returned information associated with the requested TokenNumber. If"
| |     `-TextComment 0x55887c4713f0 <line:1606:6, col:58> Text=" TokenNumber is 0, then PcdType is set to PCD_TYPE_8."
| |-FieldDecl 0x55887c2ed4f8 <line:1613:3, col:15> col:15 PcdSize 'UINTN':'unsigned long long'
| | `-FullComment 0x55887c471540 <line:1610:6, line:1611:46>
| |   `-ParagraphComment 0x55887c471510 <line:1610:6, line:1611:46>
| |     |-TextComment 0x55887c4714c0 <line:1610:6, col:81> Text=" The size of the data in bytes associated with the TokenNumber specified. If"
| |     `-TextComment 0x55887c4714e0 <line:1611:6, col:46> Text=" TokenNumber is 0, then PcdSize is set 0."
| `-FieldDecl 0x55887c2ed588 <line:1620:3, col:16> col:16 PcdName 'CHAR8 *'
|   `-FullComment 0x55887c471680 <line:1615:6, line:1618:40>
|     `-ParagraphComment 0x55887c471650 <line:1615:6, line:1618:40>
|       |-TextComment 0x55887c4715b0 <line:1615:6, col:76> Text=" The null-terminated ASCII string associated with a given token. If the"
|       |-TextComment 0x55887c4715d0 <line:1616:6, col:85> Text=" TokenNumber specified was 0, then this field corresponds to the null-terminated"
|       |-TextComment 0x55887c4715f0 <line:1617:6, col:83> Text=" ASCII string associated with the token's namespace Guid. If NULL, there is no"
|       `-TextComment 0x55887c471610 <line:1618:6, col:40> Text=" name associated with this request."
|-TypedefDecl 0x55887c2ed638 <line:1603:1, line:1621:3> col:3 referenced PCD_INFO 'struct PCD_INFO':'PCD_INFO'
| `-ElaboratedType 0x55887c2ed5e0 'struct PCD_INFO' sugar
|   `-RecordType 0x55887c2ed3f0 'PCD_INFO'
|     `-Record 0x55887c2ed368 ''
|-FunctionDecl 0x55887c2efbf0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1640:3> line:1637:1 LibPcdGetInfo 'void (UINTN, PCD_INFO *)'
| |-ParmVarDecl 0x55887c2ed6e0 <line:1638:13, col:23> col:23 TokenNumber 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2ed7d8 <line:1639:13, col:24> col:24 PcdInfo 'PCD_INFO *'
| `-FullComment 0x55887c471a30 <line:1624:1, line:1633:126>
|   |-ParagraphComment 0x55887c471720 <line:1624:1, col:62>
|   | `-TextComment 0x55887c4716f0 <col:1, col:62> Text="  Retrieve additional information associated with a PCD token."
|   |-ParagraphComment 0x55887c471790 <line:1626:1, line:1627:56>
|   | |-TextComment 0x55887c471740 <line:1626:1, col:108> Text="  This includes information such as the type of value the TokenNumber is associated with as well as possible"
|   | `-TextComment 0x55887c471760 <line:1627:1, col:56> Text="  human readable name that is associated with the token."
|   |-ParagraphComment 0x55887c4717e0 <line:1629:1, col:76>
|   | `-TextComment 0x55887c4717b0 <col:1, col:76> Text="  If TokenNumber is not in the default token space specified, then ASSERT()."
|   |-ParagraphComment 0x55887c471830 <line:1631:1, col:2>
|   | `-TextComment 0x55887c471800 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c471850 <col:3, line:1632:2> [in] explicitly Param="TokenNumber" ParamIndex=0
|   | `-ParagraphComment 0x55887c471910 <line:1631:28, line:1632:2>
|   |   |-TextComment 0x55887c4718c0 <line:1631:28, col:49> Text=" The PCD token number."
|   |   `-TextComment 0x55887c4718e0 <line:1632:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c471930 <col:3, line:1633:126> [out] explicitly Param="PcdInfo" ParamIndex=1
|     `-ParagraphComment 0x55887c4719e0 <line:1632:24, line:1633:126>
|       |-TextComment 0x55887c471990 <line:1632:24, col:95> Text="     The returned information associated with the requested TokenNumber."
|       `-TextComment 0x55887c4719b0 <line:1633:1, col:126> Text="                            The caller is responsible for freeing the buffer that is allocated by callee for PcdInfo->PcdName."
|-FunctionDecl 0x55887c2efee8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1661:3> line:1657:1 LibPcdGetInfoEx 'void (const GUID *, UINTN, PCD_INFO *)'
| |-ParmVarDecl 0x55887c2efcd8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PcdLib.h:1658:24> col:24 Guid 'const GUID *'
| |-ParmVarDecl 0x55887c2efd50 <line:1659:13, col:23> col:23 TokenNumber 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2efdc8 <line:1660:13, col:24> col:24 PcdInfo 'PCD_INFO *'
| `-FullComment 0x55887c471ec0 <line:1643:1, line:1653:126>
|   |-ParagraphComment 0x55887c471ad0 <line:1643:1, col:62>
|   | `-TextComment 0x55887c471aa0 <col:1, col:62> Text="  Retrieve additional information associated with a PCD token."
|   |-ParagraphComment 0x55887c471b40 <line:1645:1, line:1646:56>
|   | |-TextComment 0x55887c471af0 <line:1645:1, col:108> Text="  This includes information such as the type of value the TokenNumber is associated with as well as possible"
|   | `-TextComment 0x55887c471b10 <line:1646:1, col:56> Text="  human readable name that is associated with the token."
|   |-ParagraphComment 0x55887c471b90 <line:1648:1, col:76>
|   | `-TextComment 0x55887c471b60 <col:1, col:76> Text="  If TokenNumber is not in the token space specified by Guid, then ASSERT()."
|   |-ParagraphComment 0x55887c471be0 <line:1650:1, col:2>
|   | `-TextComment 0x55887c471bb0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c471c00 <col:3, line:1651:2> [in] explicitly Param="Guid" ParamIndex=0
|   | `-ParagraphComment 0x55887c471cb0 <line:1650:21, line:1651:2>
|   |   |-TextComment 0x55887c471c60 <line:1650:21, col:115> Text="        The 128-bit unique value that designates the namespace from which to extract the value."
|   |   `-TextComment 0x55887c471c80 <line:1651:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c471cd0 <col:3, line:1652:2> [in] explicitly Param="TokenNumber" ParamIndex=1
|   | `-ParagraphComment 0x55887c471d90 <line:1651:28, line:1652:2>
|   |   |-TextComment 0x55887c471d40 <line:1651:28, col:49> Text=" The PCD token number."
|   |   `-TextComment 0x55887c471d60 <line:1652:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c471db0 <col:3, line:1653:126> [out] explicitly Param="PcdInfo" ParamIndex=2
|     `-ParagraphComment 0x55887c471e60 <line:1652:24, line:1653:126>
|       |-TextComment 0x55887c471e10 <line:1652:24, col:95> Text="     The returned information associated with the requested TokenNumber."
|       `-TextComment 0x55887c471e30 <line:1653:1, col:126> Text="                            The caller is responsible for freeing the buffer that is allocated by callee for PcdInfo->PcdName."
|-FunctionDecl 0x55887c2f0060 <line:1670:1, line:1674:3> line:1672:1 LibPcdGetSku 'UINTN (void)'
| `-FullComment 0x55887c4720c0 <line:1664:1, line:1668:27>
|   |-ParagraphComment 0x55887c471f60 <line:1664:1, col:36>
|   | `-TextComment 0x55887c471f30 <col:1, col:36> Text="  Retrieve the currently set SKU Id."
|   |-ParagraphComment 0x55887c471fb0 <line:1666:1, col:2>
|   | `-TextComment 0x55887c471f80 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c471fd0 <col:3, line:1668:27> Name="return"
|     `-ParagraphComment 0x55887c472080 <line:1666:10, line:1668:27>
|       |-TextComment 0x55887c472000 <line:1666:10, col:87> Text="   The currently set SKU Id. If the platform has not set at a SKU Id, then the"
|       |-TextComment 0x55887c472020 <line:1667:1, col:111> Text="            default SKU Id value of 0 is returned. If the platform has set a SKU Id, then the currently set SKU"
|       `-TextComment 0x55887c472040 <line:1668:1, col:27> Text="            Id is returned."
|-RecordDecl 0x55887c2f0128 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Include/Library/DebugAgentLib.h:28:9, line:31:1> line:28:9 struct definition
| |-FieldDecl 0x55887c2f01e0 <line:29:3, col:12> col:12 HeapMigrateOffset 'UINTN':'unsigned long long'
| `-FieldDecl 0x55887c2f0240 <line:30:3, col:12> col:12 StackMigrateOffset 'UINTN':'unsigned long long'
|-TypedefDecl 0x55887c2f02e8 <line:28:1, line:31:3> col:3 DEBUG_AGENT_CONTEXT_POSTMEM_SEC 'struct DEBUG_AGENT_CONTEXT_POSTMEM_SEC':'DEBUG_AGENT_CONTEXT_POSTMEM_SEC'
| `-ElaboratedType 0x55887c2f0290 'struct DEBUG_AGENT_CONTEXT_POSTMEM_SEC' sugar
|   `-RecordType 0x55887c2f01b0 'DEBUG_AGENT_CONTEXT_POSTMEM_SEC'
|     `-Record 0x55887c2f0128 ''
|-TypedefDecl 0x55887c2f0438 <line:41:1, line:45:3> line:43:10 referenced DEBUG_AGENT_CONTINUE 'void (*)(void *)'
| |-PointerType 0x55887c10afd0 'void (*)(void *)'
| | `-ParenType 0x55887c10af70 'void (void *)' sugar
| |   `-FunctionProtoType 0x55887c10af40 'void (void *)' cdecl
| |     |-BuiltinType 0x55887bfe9010 'void'
| |     `-PointerType 0x55887bfe9730 'void *'
| |       `-BuiltinType 0x55887bfe9010 'void'
| `-FullComment 0x55887c4722f0 <line:34:1, line:38:76>
|   |-ParagraphComment 0x55887c472160 <line:34:1, col:78>
|   | `-TextComment 0x55887c472130 <col:1, col:78> Text="  Caller provided function to be invoked at the end of InitializeDebugAgent()."
|   |-ParagraphComment 0x55887c4721b0 <line:36:1, col:71>
|   | `-TextComment 0x55887c472180 <col:1, col:71> Text="  Refer to the description for InitializeDebugAgent() for more details."
|   |-ParagraphComment 0x55887c472200 <line:38:1, col:2>
|   | `-TextComment 0x55887c4721d0 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c472220 <col:3, col:76> [in] explicitly Param="Context" ParamIndex=0
|     `-ParagraphComment 0x55887c4722b0 <col:21, col:76>
|       `-TextComment 0x55887c472280 <col:21, col:76> Text="    The first input parameter of InitializeDebugAgent()."
|-FunctionDecl 0x55887c2f0708 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Include/Library/DebugAgentLib.h:75:3> line:71:1 InitializeDebugAgent 'void (UINT32, void *, DEBUG_AGENT_CONTINUE)'
| |-ParmVarDecl 0x55887c2f04c8 <line:72:6, col:28> col:28 InitFlag 'UINT32':'unsigned int'
| |-ParmVarDecl 0x55887c2f0548 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Include/Library/DebugAgentLib.h:73:29> col:29 Context 'void *'
| |-ParmVarDecl 0x55887c2f05e0 <line:74:6, col:28> col:28 Function 'DEBUG_AGENT_CONTINUE':'void (*)(void *)'
| `-FullComment 0x55887c4728b0 <line:48:1, line:66:35>
|   |-ParagraphComment 0x55887c472390 <line:48:1, col:25>
|   | `-TextComment 0x55887c472360 <col:1, col:25> Text="  Initialize debug agent."
|   |-ParagraphComment 0x55887c4724a0 <line:50:1, line:55:85>
|   | |-TextComment 0x55887c4723b0 <line:50:1, col:86> Text="  This function is used to set up debug environment to support source level debugging."
|   | |-TextComment 0x55887c4723d0 <line:51:1, col:85> Text="  If certain Debug Agent Library instance has to save some private data in the stack,"
|   | |-TextComment 0x55887c4723f0 <line:52:1, col:77> Text="  this function must work on the mode that doesn't return to the caller, then"
|   | |-TextComment 0x55887c472410 <line:53:1, col:85> Text="  the caller needs to wrap up all rest of logic after InitializeDebugAgent() into one"
|   | |-TextComment 0x55887c472430 <line:54:1, col:77> Text="  function and pass it into InitializeDebugAgent(). InitializeDebugAgent() is"
|   | `-TextComment 0x55887c472450 <line:55:1, col:85> Text="  responsible to invoke the passing-in function at the end of InitializeDebugAgent()."
|   |-ParagraphComment 0x55887c472510 <line:57:1, line:58:45>
|   | |-TextComment 0x55887c4724c0 <line:57:1, col:87> Text="  If the parameter Function is not NULL, Debug Agent Library instance will invoke it by"
|   | `-TextComment 0x55887c4724e0 <line:58:1, col:45> Text="  passing in the Context to be its parameter."
|   |-ParagraphComment 0x55887c472580 <line:60:1, line:61:14>
|   | |-TextComment 0x55887c472530 <line:60:1, col:83> Text="  If Function() is NULL, Debug Agent Library instance will return after setup debug"
|   | `-TextComment 0x55887c472550 <line:61:1, col:14> Text="  environment."
|   |-ParagraphComment 0x55887c4725d0 <line:63:1, col:2>
|   | `-TextComment 0x55887c4725a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4725f0 <col:3, line:64:2> [in] explicitly Param="InitFlag" ParamIndex=0
|   | `-ParagraphComment 0x55887c4726b0 <line:63:22, line:64:2>
|   |   |-TextComment 0x55887c472650 <line:63:22, col:77> Text="     Init flag is used to decide the initialize process."
|   |   `-TextComment 0x55887c472670 <line:64:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4726d0 <col:3, line:65:2> [in] explicitly Param="Context" ParamIndex=1
|   | `-ParagraphComment 0x55887c472780 <line:64:21, line:65:2>
|   |   |-TextComment 0x55887c472730 <line:64:21, col:80> Text="      Context needed according to InitFlag; it was optional."
|   |   `-TextComment 0x55887c472750 <line:65:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c4727a0 <col:3, line:66:35> [in] explicitly Param="Function" ParamIndex=2
|     `-ParagraphComment 0x55887c472850 <line:65:22, line:66:35>
|       |-TextComment 0x55887c472800 <line:65:22, col:81> Text="     Continue function called by debug agent library; it was"
|       `-TextComment 0x55887c472820 <line:66:1, col:35> Text="                          optional."
|-FunctionDecl 0x55887c2f0888 <line:90:1, line:94:3> line:92:1 SaveAndSetDebugTimerInterrupt 'BOOLEAN (BOOLEAN)'
| |-ParmVarDecl 0x55887c2f07f8 <line:93:6, col:15> col:15 EnableStatus 'BOOLEAN':'unsigned char'
| `-FullComment 0x55887c472d00 <line:78:1, line:87:74>
|   |-ParagraphComment 0x55887c472970 <line:78:1, line:79:25>
|   | |-TextComment 0x55887c472920 <line:78:1, col:76> Text="  Enable/Disable the interrupt of debug timer and return the interrupt state"
|   | `-TextComment 0x55887c472940 <line:79:1, col:25> Text="  prior to the operation."
|   |-ParagraphComment 0x55887c4729e0 <line:81:1, line:82:65>
|   | |-TextComment 0x55887c472990 <line:81:1, col:63> Text="  If EnableStatus is TRUE, enable the interrupt of debug timer."
|   | `-TextComment 0x55887c4729b0 <line:82:1, col:65> Text="  If EnableStatus is FALSE, disable the interrupt of debug timer."
|   |-ParagraphComment 0x55887c472a30 <line:84:1, col:2>
|   | `-TextComment 0x55887c472a00 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c472a50 <col:3, col:44> [in] explicitly Param="EnableStatus" ParamIndex=0
|   | `-ParagraphComment 0x55887c472af0 <col:26, col:44>
|   |   `-TextComment 0x55887c472ac0 <col:26, col:44> Text="    Enable/Disable."
|   |-ParagraphComment 0x55887c472b40 <line:86:1, col:2>
|   | `-TextComment 0x55887c472b10 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c472b60 <col:3, line:87:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c472c00 <line:86:15, line:87:2>
|   |   |-TextComment 0x55887c472bb0 <line:86:15, col:73> Text="  Debug timer interrupt were enabled on entry to this call."
|   |   `-TextComment 0x55887c472bd0 <line:87:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c472c20 <col:3, col:74> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c472ca0 <col:16, col:74>
|       `-TextComment 0x55887c472c70 <col:16, col:74> Text=" Debug timer interrupt were disabled on entry to this call."
|-FunctionDecl 0x55887c2f0a80 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesTablePointerLib.h:28:3> line:26:1 GetPeiServicesTablePointer 'const EFI_PEI_SERVICES **(void)'
| `-FullComment 0x55887c472fb0 <line:13:1, line:21:38>
|   |-ParagraphComment 0x55887c472da0 <line:13:1, col:63>
|   | `-TextComment 0x55887c472d70 <col:1, col:63> Text="  Retrieves the cached value of the PEI Services Table pointer."
|   |-ParagraphComment 0x55887c472e40 <line:15:1, line:17:46>
|   | |-TextComment 0x55887c472dc0 <line:15:1, col:85> Text="  Returns the cached value of the PEI Services Table pointer in a CPU specific manner"
|   | |-TextComment 0x55887c472de0 <line:16:1, col:80> Text="  as specified in the CPU binding section of the Platform Initialization Pre-EFI"
|   | `-TextComment 0x55887c472e00 <line:17:1, col:46> Text="  Initialization Core Interface Specification."
|   |-ParagraphComment 0x55887c472e90 <line:19:1, col:66>
|   | `-TextComment 0x55887c472e60 <col:1, col:66> Text="  If the cached PEI Services Table pointer is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c472ee0 <line:21:1, col:2>
|   | `-TextComment 0x55887c472eb0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c472f00 <col:3, col:38> Name="return"
|     `-ParagraphComment 0x55887c472f60 <col:10, col:38>
|       `-TextComment 0x55887c472f30 <col:10, col:38> Text="  The pointer to PeiServices."
|-FunctionDecl 0x55887c2f0c58 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesTablePointerLib.h:45:3> line:43:1 SetPeiServicesTablePointer 'void (const EFI_PEI_SERVICES **)'
| |-ParmVarDecl 0x55887c2f0b60 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesTablePointerLib.h:44:32> col:32 PeiServicesTablePointer 'const EFI_PEI_SERVICES **'
| `-FullComment 0x55887c4732a0 <line:31:1, line:39:73>
|   |-ParagraphComment 0x55887c473050 <line:31:1, col:38>
|   | `-TextComment 0x55887c473020 <col:1, col:38> Text="  Caches a pointer PEI Services Table."
|   |-ParagraphComment 0x55887c4730f0 <line:33:1, line:35:54>
|   | |-TextComment 0x55887c473070 <line:33:1, col:83> Text="  Caches the pointer to the PEI Services Table specified by PeiServicesTablePointer"
|   | |-TextComment 0x55887c473090 <line:34:1, col:97> Text="  in a CPU specific manner as specified in the CPU binding section of the Platform Initialization"
|   | `-TextComment 0x55887c4730b0 <line:35:1, col:54> Text="  Pre-EFI Initialization Core Interface Specification."
|   |-ParagraphComment 0x55887c473140 <line:37:1, col:52>
|   | `-TextComment 0x55887c473110 <col:1, col:52> Text="  If PeiServicesTablePointer is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c473190 <line:39:1, col:2>
|   | `-TextComment 0x55887c473160 <col:1, col:2> Text="  "
|   `-ParamCommandComment 0x55887c4731b0 <col:3, col:73> [in] implicitly Param="PeiServicesTablePointer" ParamIndex=0
|     `-ParagraphComment 0x55887c473250 <col:36, col:73>
|       `-TextComment 0x55887c473220 <col:36, col:73> Text="   The address of PeiServices pointer."
|-FunctionDecl 0x55887c2f0dc0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PeiServicesTablePointerLib.h:65:3> line:63:1 MigratePeiServicesTablePointer 'void (void)'
| `-FullComment 0x55887c4734f0 <line:48:1, line:58:57>
|   |-ParagraphComment 0x55887c473360 <line:48:1, line:49:46>
|   | |-TextComment 0x55887c473310 <line:48:1, col:73> Text="  Perform CPU specific actions required to migrate the PEI Services Table"
|   | `-TextComment 0x55887c473330 <line:49:1, col:46> Text="  pointer from temporary RAM to permanent RAM."
|   `-ParagraphComment 0x55887c4734c0 <line:51:1, line:58:57>
|     |-TextComment 0x55887c473380 <line:51:1, col:72> Text="  For IA32 CPUs, the PEI Services Table pointer is stored in the 4 bytes"
|     |-TextComment 0x55887c4733a0 <line:52:1, col:71> Text="  immediately preceding the Interrupt Descriptor Table (IDT) in memory."
|     |-TextComment 0x55887c4733c0 <line:53:1, col:71> Text="  For X64 CPUs, the PEI Services Table pointer is stored in the 8 bytes"
|     |-TextComment 0x55887c4733e0 <line:54:1, col:71> Text="  immediately preceding the Interrupt Descriptor Table (IDT) in memory."
|     |-TextComment 0x55887c473400 <line:55:1, col:73> Text="  For Itanium and ARM CPUs, a the PEI Services Table Pointer is stored in"
|     |-TextComment 0x55887c473420 <line:56:1, col:71> Text="  a dedicated CPU register.  This means that there is no memory storage"
|     |-TextComment 0x55887c473440 <line:57:1, col:74> Text="  associated with storing the PEI Services Table pointer, so no additional"
|     `-TextComment 0x55887c473460 <line:58:1, col:57> Text="  migration actions are required for Itanium or ARM CPUs."
|-FunctionDecl 0x55887c2f11a8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:77:1, line:84:3> line:79:1 StartPerformanceMeasurement 'RETURN_STATUS (const void *, const CHAR8 *, const CHAR8 *, UINT64)'
| |-ParmVarDecl 0x55887c2f0f00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:80:20> col:20 Handle 'const void *'
| |-ParmVarDecl 0x55887c2f0f78 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:81:20> col:20 Token 'const CHAR8 *'
| |-ParmVarDecl 0x55887c2f0ff0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:82:20> col:20 Module 'const CHAR8 *'
| |-ParmVarDecl 0x55887c2f1068 <line:83:6, col:19> col:19 TimeStamp 'UINT64':'unsigned long long'
| `-FullComment 0x55887c473d60 <line:57:1, line:74:72>
|   |-ParagraphComment 0x55887c473590 <line:57:1, col:66>
|   | `-TextComment 0x55887c473560 <col:1, col:66> Text="  Creates a record for the beginning of a performance measurement."
|   |-ParagraphComment 0x55887c473650 <line:59:1, line:62:65>
|   | |-TextComment 0x55887c4735b0 <line:59:1, col:63> Text="  Creates a record that contains the Handle, Token, and Module."
|   | |-TextComment 0x55887c4735d0 <line:60:1, col:84> Text="  If TimeStamp is not zero, then TimeStamp is added to the record as the start time."
|   | |-TextComment 0x55887c4735f0 <line:61:1, col:71> Text="  If TimeStamp is zero, then this function reads the current time stamp"
|   | `-TextComment 0x55887c473610 <line:62:1, col:65> Text="  and adds that time stamp value to the record as the start time."
|   |-ParagraphComment 0x55887c4736a0 <line:64:1, col:2>
|   | `-TextComment 0x55887c473670 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4736c0 <col:3, line:66:2> [in] implicitly Param="Handle" ParamIndex=0
|   | `-ParagraphComment 0x55887c4737a0 <line:64:17, line:66:2>
|   |   |-TextComment 0x55887c473720 <line:64:17, col:78> Text="                  Pointer to environment specific context used"
|   |   |-TextComment 0x55887c473740 <line:65:1, col:75> Text="                                  to identify the component being measured."
|   |   `-TextComment 0x55887c473760 <line:66:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4737c0 <col:3, line:68:2> [in] implicitly Param="Token" ParamIndex=1
|   | `-ParagraphComment 0x55887c4738a0 <line:66:16, line:68:2>
|   |   |-TextComment 0x55887c473820 <line:66:16, col:75> Text="                   Pointer to a Null-terminated ASCII string"
|   |   |-TextComment 0x55887c473840 <line:67:1, col:79> Text="                                  that identifies the component being measured."
|   |   `-TextComment 0x55887c473860 <line:68:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4738c0 <col:3, line:70:2> [in] implicitly Param="Module" ParamIndex=2
|   | `-ParagraphComment 0x55887c4739a0 <line:68:17, line:70:2>
|   |   |-TextComment 0x55887c473920 <line:68:17, col:75> Text="                  Pointer to a Null-terminated ASCII string"
|   |   |-TextComment 0x55887c473940 <line:69:1, col:76> Text="                                  that identifies the module being measured."
|   |   `-TextComment 0x55887c473960 <line:70:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4739c0 <col:3, col:52> [in] implicitly Param="TimeStamp" ParamIndex=3
|   | `-ParagraphComment 0x55887c473a50 <col:20, col:52>
|   |   `-TextComment 0x55887c473a20 <col:20, col:52> Text="               64-bit time stamp."
|   |-ParagraphComment 0x55887c473aa0 <line:72:1, col:2>
|   | `-TextComment 0x55887c473a70 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c473ac0 <col:3, line:73:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c473b60 <line:72:25, line:73:2>
|   |   |-TextComment 0x55887c473b10 <line:72:25, col:76> Text="          The start of the measurement was recorded."
|   |   `-TextComment 0x55887c473b30 <line:73:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c473b80 <col:3, line:74:2> Name="retval" Arg[0]="RETURN_OUT_OF_RESOURCES"
|   | `-ParagraphComment 0x55887c473c30 <line:73:34, line:74:2>
|   |   |-TextComment 0x55887c473be0 <line:73:34, col:91> Text=" There are not enough resources to record the measurement."
|   |   `-TextComment 0x55887c473c00 <line:74:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c473c50 <col:3, col:72> Name="retval" Arg[0]="RETURN_DEVICE_ERROR"
|     `-ParagraphComment 0x55887c473ce0 <col:30, col:72>
|       `-TextComment 0x55887c473cb0 <col:30, col:72> Text="     A device error reading the time stamp."
|-FunctionDecl 0x55887c2f14c0 <line:109:1, line:116:3> line:111:1 EndPerformanceMeasurement 'RETURN_STATUS (const void *, const CHAR8 *, const CHAR8 *, UINT64)'
| |-ParmVarDecl 0x55887c2f12b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:112:20> col:20 Handle 'const void *'
| |-ParmVarDecl 0x55887c2f1328 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:113:20> col:20 Token 'const CHAR8 *'
| |-ParmVarDecl 0x55887c2f13a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:114:20> col:20 Module 'const CHAR8 *'
| |-ParmVarDecl 0x55887c2f1418 <line:115:6, col:19> col:19 TimeStamp 'UINT64':'unsigned long long'
| `-FullComment 0x55887c474620 <line:87:1, line:106:72>
|   |-ParagraphComment 0x55887c473e00 <line:87:1, col:53>
|   | `-TextComment 0x55887c473dd0 <col:1, col:53> Text="  Fills in the end time of a performance measurement."
|   |-ParagraphComment 0x55887c473f10 <line:89:1, line:94:86>
|   | |-TextComment 0x55887c473e20 <line:89:1, col:61> Text="  Looks up the record that matches Handle, Token, and Module."
|   | |-TextComment 0x55887c473e40 <line:90:1, col:62> Text="  If the record can not be found then return RETURN_NOT_FOUND."
|   | |-TextComment 0x55887c473e60 <line:91:1, col:51> Text="  If the record is found and TimeStamp is not zero,"
|   | |-TextComment 0x55887c473e80 <line:92:1, col:56> Text="  then TimeStamp is added to the record as the end time."
|   | |-TextComment 0x55887c473ea0 <line:93:1, col:72> Text="  If the record is found and TimeStamp is zero, then this function reads"
|   | `-TextComment 0x55887c473ec0 <line:94:1, col:86> Text="  the current time stamp and adds that time stamp value to the record as the end time."
|   |-ParagraphComment 0x55887c473f60 <line:96:1, col:2>
|   | `-TextComment 0x55887c473f30 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c473f80 <col:3, line:98:2> [in] implicitly Param="Handle" ParamIndex=0
|   | `-ParagraphComment 0x55887c474060 <line:96:17, line:98:2>
|   |   |-TextComment 0x55887c473fe0 <line:96:17, col:78> Text="                  Pointer to environment specific context used"
|   |   |-TextComment 0x55887c474000 <line:97:1, col:75> Text="                                  to identify the component being measured."
|   |   `-TextComment 0x55887c474020 <line:98:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c474080 <col:3, line:100:2> [in] implicitly Param="Token" ParamIndex=1
|   | `-ParagraphComment 0x55887c474160 <line:98:16, line:100:2>
|   |   |-TextComment 0x55887c4740e0 <line:98:16, col:75> Text="                   Pointer to a Null-terminated ASCII string"
|   |   |-TextComment 0x55887c474100 <line:99:1, col:79> Text="                                  that identifies the component being measured."
|   |   `-TextComment 0x55887c474120 <line:100:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c474180 <col:3, line:102:2> [in] implicitly Param="Module" ParamIndex=2
|   | `-ParagraphComment 0x55887c474260 <line:100:17, line:102:2>
|   |   |-TextComment 0x55887c4741e0 <line:100:17, col:75> Text="                  Pointer to a Null-terminated ASCII string"
|   |   |-TextComment 0x55887c474200 <line:101:1, col:76> Text="                                  that identifies the module being measured."
|   |   `-TextComment 0x55887c474220 <line:102:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c474280 <col:3, col:52> [in] implicitly Param="TimeStamp" ParamIndex=3
|   | `-ParagraphComment 0x55887c474310 <col:20, col:52>
|   |   `-TextComment 0x55887c4742e0 <col:20, col:52> Text="               64-bit time stamp."
|   |-ParagraphComment 0x55887c474360 <line:104:1, col:2>
|   | `-TextComment 0x55887c474330 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c474380 <col:3, line:105:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c474420 <line:104:25, line:105:2>
|   |   |-TextComment 0x55887c4743d0 <line:104:25, col:75> Text="          The end of  the measurement was recorded."
|   |   `-TextComment 0x55887c4743f0 <line:105:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c474440 <col:3, line:106:2> Name="retval" Arg[0]="RETURN_NOT_FOUND"
|   | `-ParagraphComment 0x55887c4744f0 <line:105:27, line:106:2>
|   |   |-TextComment 0x55887c4744a0 <line:105:27, col:86> Text="        The specified measurement record could not be found."
|   |   `-TextComment 0x55887c4744c0 <line:106:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c474510 <col:3, col:72> Name="retval" Arg[0]="RETURN_DEVICE_ERROR"
|     `-ParagraphComment 0x55887c4745a0 <col:30, col:72>
|       `-TextComment 0x55887c474570 <col:30, col:72> Text="     A device error reading the time stamp."
|-FunctionDecl 0x55887c2f1a28 <line:157:1, line:166:3> line:159:1 GetPerformanceMeasurement 'UINTN (UINTN, const void **, const CHAR8 **, const CHAR8 **, UINT64 *, UINT64 *)'
| |-ParmVarDecl 0x55887c2f15b8 <line:160:7, col:20> col:20 LogEntryKey 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2f1660 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:161:22> col:22 Handle 'const void **'
| |-ParmVarDecl 0x55887c2f1740 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:162:22> col:22 Token 'const CHAR8 **'
| |-ParmVarDecl 0x55887c2f17c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:163:22> col:22 Module 'const CHAR8 **'
| |-ParmVarDecl 0x55887c2f1838 <line:164:7, col:21> col:21 StartTimeStamp 'UINT64 *'
| |-ParmVarDecl 0x55887c2f18b0 <line:165:7, col:21> col:21 EndTimeStamp 'UINT64 *'
| `-FullComment 0x55887c475140 <line:119:1, line:154:71>
|   |-ParagraphComment 0x55887c474710 <line:119:1, line:121:36>
|   | |-TextComment 0x55887c474690 <line:119:1, col:96> Text="  Attempts to retrieve a performance measurement log entry from the performance measurement log."
|   | |-TextComment 0x55887c4746b0 <line:120:1, col:104> Text="  It can also retrieve the log created by StartPerformanceMeasurementEx and EndPerformanceMeasurementEx,"
|   | `-TextComment 0x55887c4746d0 <line:121:1, col:36> Text="  and then eliminate the Identifier."
|   |-ParagraphComment 0x55887c4749b0 <line:123:1, line:138:41>
|   | |-TextComment 0x55887c474730 <line:123:1, col:93> Text="  Attempts to retrieve the performance log entry specified by LogEntryKey.  If LogEntryKey is"
|   | |-TextComment 0x55887c474750 <line:124:1, col:94> Text="  zero on entry, then an attempt is made to retrieve the first entry from the performance log,"
|   | |-TextComment 0x55887c474770 <line:125:1, col:92> Text="  and the key for the second entry in the log is returned.  If the performance log is empty,"
|   | |-TextComment 0x55887c474790 <line:126:1, col:100> Text="  then no entry is retrieved and zero is returned.  If LogEntryKey is not zero, then the performance"
|   | |-TextComment 0x55887c4747b0 <line:127:1, col:98> Text="  log entry associated with LogEntryKey is retrieved, and the key for the next entry in the log is"
|   | |-TextComment 0x55887c4747d0 <line:128:1, col:96> Text="  returned.  If LogEntryKey is the key for the last entry in the log, then the last log entry is"
|   | |-TextComment 0x55887c4747f0 <line:129:1, col:103> Text="  retrieved and an implementation specific non-zero key value that specifies the end of the performance"
|   | |-TextComment 0x55887c474810 <line:130:1, col:106> Text="  log is returned.  If LogEntryKey is equal this implementation specific non-zero key value, then no entry"
|   | |-TextComment 0x55887c474830 <line:131:1, col:97> Text="  is retrieved and zero is returned.  In the cases where a performance log entry can be returned,"
|   | |-TextComment 0x55887c474850 <line:132:1, col:87> Text="  the log entry is returned in Handle, Token, Module, StartTimeStamp, and EndTimeStamp."
|   | |-TextComment 0x55887c474870 <line:133:1, col:97> Text="  If LogEntryKey is not a valid log entry key for the performance measurement log, then ASSERT()."
|   | |-TextComment 0x55887c474890 <line:134:1, col:35> Text="  If Handle is NULL, then ASSERT()."
|   | |-TextComment 0x55887c4748b0 <line:135:1, col:34> Text="  If Token is NULL, then ASSERT()."
|   | |-TextComment 0x55887c4748d0 <line:136:1, col:35> Text="  If Module is NULL, then ASSERT()."
|   | |-TextComment 0x55887c4748f0 <line:137:1, col:43> Text="  If StartTimeStamp is NULL, then ASSERT()."
|   | `-TextComment 0x55887c474910 <line:138:1, col:41> Text="  If EndTimeStamp is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c474a00 <line:140:1, col:2>
|   | `-TextComment 0x55887c4749d0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c474a20 <col:3, line:143:2> [in] implicitly Param="LogEntryKey" ParamIndex=0
|   | `-ParagraphComment 0x55887c474b20 <line:140:22, line:143:2>
|   |   |-TextComment 0x55887c474a80 <line:140:22, col:105> Text="             On entry, the key of the performance measurement log entry to retrieve."
|   |   |-TextComment 0x55887c474aa0 <line:141:1, col:99> Text="                                  0, then the first performance measurement log entry is retrieved."
|   |   |-TextComment 0x55887c474ac0 <line:142:1, col:91> Text="                                  On exit, the key of the next performance lof entry entry."
|   |   `-TextComment 0x55887c474ae0 <line:143:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c474b40 <col:3, line:145:2> [in] implicitly Param="Handle" ParamIndex=1
|   | `-ParagraphComment 0x55887c474c20 <line:143:17, line:145:2>
|   |   |-TextComment 0x55887c474ba0 <line:143:17, col:104> Text="                  Pointer to environment specific context used to identify the component"
|   |   |-TextComment 0x55887c474bc0 <line:144:1, col:49> Text="                                  being measured."
|   |   `-TextComment 0x55887c474be0 <line:145:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c474c40 <col:3, line:147:2> [in] implicitly Param="Token" ParamIndex=2
|   | `-ParagraphComment 0x55887c474d20 <line:145:16, line:147:2>
|   |   |-TextComment 0x55887c474ca0 <line:145:16, col:105> Text="                   Pointer to a Null-terminated ASCII string that identifies the component"
|   |   |-TextComment 0x55887c474cc0 <line:146:1, col:49> Text="                                  being measured."
|   |   `-TextComment 0x55887c474ce0 <line:147:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c474d40 <col:3, line:149:2> [in] implicitly Param="Module" ParamIndex=3
|   | `-ParagraphComment 0x55887c474e20 <line:147:17, line:149:2>
|   |   |-TextComment 0x55887c474da0 <line:147:17, col:102> Text="                  Pointer to a Null-terminated ASCII string that identifies the module"
|   |   |-TextComment 0x55887c474dc0 <line:148:1, col:49> Text="                                  being measured."
|   |   `-TextComment 0x55887c474de0 <line:149:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c474e40 <col:3, line:151:2> [in] implicitly Param="StartTimeStamp" ParamIndex=4
|   | `-ParagraphComment 0x55887c474f20 <line:149:25, line:151:2>
|   |   |-TextComment 0x55887c474ea0 <line:149:25, col:105> Text="          Pointer to the 64-bit time stamp that was recorded when the measurement"
|   |   |-TextComment 0x55887c474ec0 <line:150:1, col:46> Text="                                  was started."
|   |   `-TextComment 0x55887c474ee0 <line:151:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c474f40 <col:3, line:152:44> [in] implicitly Param="EndTimeStamp" ParamIndex=5
|   | `-ParagraphComment 0x55887c474ff0 <line:151:23, line:152:44>
|   |   |-TextComment 0x55887c474fa0 <line:151:23, col:105> Text="            Pointer to the 64-bit time stamp that was recorded when the measurement"
|   |   `-TextComment 0x55887c474fc0 <line:152:1, col:44> Text="                                  was ended."
|   |-ParagraphComment 0x55887c475040 <line:154:1, col:2>
|   | `-TextComment 0x55887c475010 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c475060 <col:3, col:71> Name="return"
|     `-ParagraphComment 0x55887c4750c0 <col:10, col:71>
|       `-TextComment 0x55887c475090 <col:10, col:71> Text=" The key for the next performance log entry (in general case)."
|-FunctionDecl 0x55887c2f5aa8 <line:191:1, line:199:3> line:193:1 StartPerformanceMeasurementEx 'RETURN_STATUS (const void *, const CHAR8 *, const CHAR8 *, UINT64, UINT32)'
| |-ParmVarDecl 0x55887c2f1b40 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:194:20> col:20 Handle 'const void *'
| |-ParmVarDecl 0x55887c2f57f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:195:20> col:20 Token 'const CHAR8 *'
| |-ParmVarDecl 0x55887c2f5868 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:196:20> col:20 Module 'const CHAR8 *'
| |-ParmVarDecl 0x55887c2f58e0 <line:197:6, col:19> col:19 TimeStamp 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c2f5958 <line:198:6, col:19> col:19 Identifier 'UINT32':'unsigned int'
| `-FullComment 0x55887c475aa0 <line:169:1, line:188:72>
|   |-ParagraphComment 0x55887c4751e0 <line:169:1, col:66>
|   | `-TextComment 0x55887c4751b0 <col:1, col:66> Text="  Creates a record for the beginning of a performance measurement."
|   |-ParagraphComment 0x55887c4752a0 <line:171:1, line:174:65>
|   | |-TextComment 0x55887c475200 <line:171:1, col:74> Text="  Creates a record that contains the Handle, Token, Module and Identifier."
|   | |-TextComment 0x55887c475220 <line:172:1, col:84> Text="  If TimeStamp is not zero, then TimeStamp is added to the record as the start time."
|   | |-TextComment 0x55887c475240 <line:173:1, col:71> Text="  If TimeStamp is zero, then this function reads the current time stamp"
|   | `-TextComment 0x55887c475260 <line:174:1, col:65> Text="  and adds that time stamp value to the record as the start time."
|   |-ParagraphComment 0x55887c4752f0 <line:176:1, col:2>
|   | `-TextComment 0x55887c4752c0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c475310 <col:3, line:178:2> [in] implicitly Param="Handle" ParamIndex=0
|   | `-ParagraphComment 0x55887c4753f0 <line:176:17, line:178:2>
|   |   |-TextComment 0x55887c475370 <line:176:17, col:78> Text="                  Pointer to environment specific context used"
|   |   |-TextComment 0x55887c475390 <line:177:1, col:75> Text="                                  to identify the component being measured."
|   |   `-TextComment 0x55887c4753b0 <line:178:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c475410 <col:3, line:180:2> [in] implicitly Param="Token" ParamIndex=1
|   | `-ParagraphComment 0x55887c4754f0 <line:178:16, line:180:2>
|   |   |-TextComment 0x55887c475470 <line:178:16, col:75> Text="                   Pointer to a Null-terminated ASCII string"
|   |   |-TextComment 0x55887c475490 <line:179:1, col:79> Text="                                  that identifies the component being measured."
|   |   `-TextComment 0x55887c4754b0 <line:180:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c475510 <col:3, line:182:2> [in] implicitly Param="Module" ParamIndex=2
|   | `-ParagraphComment 0x55887c4755f0 <line:180:17, line:182:2>
|   |   |-TextComment 0x55887c475570 <line:180:17, col:75> Text="                  Pointer to a Null-terminated ASCII string"
|   |   |-TextComment 0x55887c475590 <line:181:1, col:76> Text="                                  that identifies the module being measured."
|   |   `-TextComment 0x55887c4755b0 <line:182:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c475610 <col:3, line:183:2> [in] implicitly Param="TimeStamp" ParamIndex=3
|   | `-ParagraphComment 0x55887c4756c0 <line:182:20, line:183:2>
|   |   |-TextComment 0x55887c475670 <line:182:20, col:52> Text="               64-bit time stamp."
|   |   `-TextComment 0x55887c475690 <line:183:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4756e0 <col:3, line:184:92> [in] implicitly Param="Identifier" ParamIndex=4
|   | `-ParagraphComment 0x55887c475790 <line:183:21, line:184:92>
|   |   |-TextComment 0x55887c475740 <line:183:21, col:90> Text="              32-bit identifier. If the value is 0, the created record"
|   |   `-TextComment 0x55887c475760 <line:184:1, col:92> Text="                                  is same as the one created by StartPerformanceMeasurement."
|   |-ParagraphComment 0x55887c4757e0 <line:186:1, col:2>
|   | `-TextComment 0x55887c4757b0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c475800 <col:3, line:187:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c4758a0 <line:186:25, line:187:2>
|   |   |-TextComment 0x55887c475850 <line:186:25, col:76> Text="          The start of the measurement was recorded."
|   |   `-TextComment 0x55887c475870 <line:187:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c4758c0 <col:3, line:188:2> Name="retval" Arg[0]="RETURN_OUT_OF_RESOURCES"
|   | `-ParagraphComment 0x55887c475970 <line:187:34, line:188:2>
|   |   |-TextComment 0x55887c475920 <line:187:34, col:91> Text=" There are not enough resources to record the measurement."
|   |   `-TextComment 0x55887c475940 <line:188:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c475990 <col:3, col:72> Name="retval" Arg[0]="RETURN_DEVICE_ERROR"
|     `-ParagraphComment 0x55887c475a20 <col:30, col:72>
|       `-TextComment 0x55887c4759f0 <col:30, col:72> Text="     A device error reading the time stamp."
|-FunctionDecl 0x55887c2f5e40 <line:226:1, line:234:3> line:228:1 EndPerformanceMeasurementEx 'RETURN_STATUS (const void *, const CHAR8 *, const CHAR8 *, UINT64, UINT32)'
| |-ParmVarDecl 0x55887c2f5bb0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:229:20> col:20 Handle 'const void *'
| |-ParmVarDecl 0x55887c2f5c28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:230:20> col:20 Token 'const CHAR8 *'
| |-ParmVarDecl 0x55887c2f5ca0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:231:20> col:20 Module 'const CHAR8 *'
| |-ParmVarDecl 0x55887c2f5d18 <line:232:6, col:19> col:19 TimeStamp 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c2f5d90 <line:233:6, col:19> col:19 Identifier 'UINT32':'unsigned int'
| `-FullComment 0x55887c476450 <line:202:1, line:223:72>
|   |-ParagraphComment 0x55887c475b40 <line:202:1, col:53>
|   | `-TextComment 0x55887c475b10 <col:1, col:53> Text="  Fills in the end time of a performance measurement."
|   |-ParagraphComment 0x55887c475c50 <line:204:1, line:209:86>
|   | |-TextComment 0x55887c475b60 <line:204:1, col:60> Text="  Looks up the record that matches Handle, Token and Module."
|   | |-TextComment 0x55887c475b80 <line:205:1, col:62> Text="  If the record can not be found then return RETURN_NOT_FOUND."
|   | |-TextComment 0x55887c475ba0 <line:206:1, col:51> Text="  If the record is found and TimeStamp is not zero,"
|   | |-TextComment 0x55887c475bc0 <line:207:1, col:56> Text="  then TimeStamp is added to the record as the end time."
|   | |-TextComment 0x55887c475be0 <line:208:1, col:72> Text="  If the record is found and TimeStamp is zero, then this function reads"
|   | `-TextComment 0x55887c475c00 <line:209:1, col:86> Text="  the current time stamp and adds that time stamp value to the record as the end time."
|   |-ParagraphComment 0x55887c475ca0 <line:211:1, col:2>
|   | `-TextComment 0x55887c475c70 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c475cc0 <col:3, line:213:2> [in] implicitly Param="Handle" ParamIndex=0
|   | `-ParagraphComment 0x55887c475da0 <line:211:17, line:213:2>
|   |   |-TextComment 0x55887c475d20 <line:211:17, col:78> Text="                  Pointer to environment specific context used"
|   |   |-TextComment 0x55887c475d40 <line:212:1, col:75> Text="                                  to identify the component being measured."
|   |   `-TextComment 0x55887c475d60 <line:213:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c475dc0 <col:3, line:215:2> [in] implicitly Param="Token" ParamIndex=1
|   | `-ParagraphComment 0x55887c475ea0 <line:213:16, line:215:2>
|   |   |-TextComment 0x55887c475e20 <line:213:16, col:75> Text="                   Pointer to a Null-terminated ASCII string"
|   |   |-TextComment 0x55887c475e40 <line:214:1, col:79> Text="                                  that identifies the component being measured."
|   |   `-TextComment 0x55887c475e60 <line:215:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c475ec0 <col:3, line:217:2> [in] implicitly Param="Module" ParamIndex=2
|   | `-ParagraphComment 0x55887c475fa0 <line:215:17, line:217:2>
|   |   |-TextComment 0x55887c475f20 <line:215:17, col:75> Text="                  Pointer to a Null-terminated ASCII string"
|   |   |-TextComment 0x55887c475f40 <line:216:1, col:76> Text="                                  that identifies the module being measured."
|   |   `-TextComment 0x55887c475f60 <line:217:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c475fc0 <col:3, line:218:2> [in] implicitly Param="TimeStamp" ParamIndex=3
|   | `-ParagraphComment 0x55887c476070 <line:217:20, line:218:2>
|   |   |-TextComment 0x55887c476020 <line:217:20, col:52> Text="               64-bit time stamp."
|   |   `-TextComment 0x55887c476040 <line:218:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c476090 <col:3, line:219:88> [in] implicitly Param="Identifier" ParamIndex=4
|   | `-ParagraphComment 0x55887c476140 <line:218:21, line:219:88>
|   |   |-TextComment 0x55887c4760f0 <line:218:21, col:88> Text="              32-bit identifier. If the value is 0, the found record"
|   |   `-TextComment 0x55887c476110 <line:219:1, col:88> Text="                                  is same as the one found by EndPerformanceMeasurement."
|   |-ParagraphComment 0x55887c476190 <line:221:1, col:2>
|   | `-TextComment 0x55887c476160 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c4761b0 <col:3, line:222:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c476250 <line:221:25, line:222:2>
|   |   |-TextComment 0x55887c476200 <line:221:25, col:75> Text="          The end of  the measurement was recorded."
|   |   `-TextComment 0x55887c476220 <line:222:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c476270 <col:3, line:223:2> Name="retval" Arg[0]="RETURN_NOT_FOUND"
|   | `-ParagraphComment 0x55887c476320 <line:222:27, line:223:2>
|   |   |-TextComment 0x55887c4762d0 <line:222:27, col:86> Text="        The specified measurement record could not be found."
|   |   `-TextComment 0x55887c4762f0 <line:223:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c476340 <col:3, col:72> Name="retval" Arg[0]="RETURN_DEVICE_ERROR"
|     `-ParagraphComment 0x55887c4763d0 <col:30, col:72>
|       `-TextComment 0x55887c4763a0 <col:30, col:72> Text="     A device error reading the time stamp."
|-FunctionDecl 0x55887c2f63b8 <line:277:1, line:287:3> line:279:1 GetPerformanceMeasurementEx 'UINTN (UINTN, const void **, const CHAR8 **, const CHAR8 **, UINT64 *, UINT64 *, UINT32 *)'
| |-ParmVarDecl 0x55887c2f5f48 <line:280:7, col:20> col:20 LogEntryKey 'UINTN':'unsigned long long'
| |-ParmVarDecl 0x55887c2f5fc8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:281:22> col:22 Handle 'const void **'
| |-ParmVarDecl 0x55887c2f6048 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:282:22> col:22 Token 'const CHAR8 **'
| |-ParmVarDecl 0x55887c2f60c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:283:22> col:22 Module 'const CHAR8 **'
| |-ParmVarDecl 0x55887c2f6140 <line:284:7, col:21> col:21 StartTimeStamp 'UINT64 *'
| |-ParmVarDecl 0x55887c2f61b8 <line:285:7, col:21> col:21 EndTimeStamp 'UINT64 *'
| |-ParmVarDecl 0x55887c2f6230 <line:286:7, col:21> col:21 Identifier 'UINT32 *'
| `-FullComment 0x55887c3fbb40 <line:237:1, line:274:71>
|   |-ParagraphComment 0x55887c476540 <line:237:1, line:239:40>
|   | |-TextComment 0x55887c4764c0 <line:237:1, col:96> Text="  Attempts to retrieve a performance measurement log entry from the performance measurement log."
|   | |-TextComment 0x55887c4764e0 <line:238:1, col:100> Text="  It can also retrieve the log created by StartPerformanceMeasurement and EndPerformanceMeasurement,"
|   | `-TextComment 0x55887c476500 <line:239:1, col:40> Text="  and then assign the Identifier with 0."
|   |-ParagraphComment 0x55887c3fb2d0 <line:241:1, line:257:39>
|   | |-TextComment 0x55887c476560 <line:241:1, col:93> Text="  Attempts to retrieve the performance log entry specified by LogEntryKey.  If LogEntryKey is"
|   | |-TextComment 0x55887c476580 <line:242:1, col:94> Text="  zero on entry, then an attempt is made to retrieve the first entry from the performance log,"
|   | |-TextComment 0x55887c4765a0 <line:243:1, col:92> Text="  and the key for the second entry in the log is returned.  If the performance log is empty,"
|   | |-TextComment 0x55887c4765c0 <line:244:1, col:100> Text="  then no entry is retrieved and zero is returned.  If LogEntryKey is not zero, then the performance"
|   | |-TextComment 0x55887c4765e0 <line:245:1, col:98> Text="  log entry associated with LogEntryKey is retrieved, and the key for the next entry in the log is"
|   | |-TextComment 0x55887c476600 <line:246:1, col:96> Text="  returned.  If LogEntryKey is the key for the last entry in the log, then the last log entry is"
|   | |-TextComment 0x55887c476620 <line:247:1, col:103> Text="  retrieved and an implementation specific non-zero key value that specifies the end of the performance"
|   | |-TextComment 0x55887c476640 <line:248:1, col:106> Text="  log is returned.  If LogEntryKey is equal this implementation specific non-zero key value, then no entry"
|   | |-TextComment 0x55887c476660 <line:249:1, col:97> Text="  is retrieved and zero is returned.  In the cases where a performance log entry can be returned,"
|   | |-TextComment 0x55887c476680 <line:250:1, col:98> Text="  the log entry is returned in Handle, Token, Module, StartTimeStamp, EndTimeStamp and Identifier."
|   | |-TextComment 0x55887c3fb160 <line:251:1, col:97> Text="  If LogEntryKey is not a valid log entry key for the performance measurement log, then ASSERT()."
|   | |-TextComment 0x55887c3fb180 <line:252:1, col:35> Text="  If Handle is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3fb1a0 <line:253:1, col:34> Text="  If Token is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3fb1c0 <line:254:1, col:35> Text="  If Module is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3fb1e0 <line:255:1, col:43> Text="  If StartTimeStamp is NULL, then ASSERT()."
|   | |-TextComment 0x55887c3fb200 <line:256:1, col:41> Text="  If EndTimeStamp is NULL, then ASSERT()."
|   | `-TextComment 0x55887c3fb220 <line:257:1, col:39> Text="  If Identifier is NULL, then ASSERT()."
|   |-ParagraphComment 0x55887c3fb320 <line:259:1, col:2>
|   | `-TextComment 0x55887c3fb2f0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fb340 <col:3, line:262:2> [in] implicitly Param="LogEntryKey" ParamIndex=0
|   | `-ParagraphComment 0x55887c3fb440 <line:259:22, line:262:2>
|   |   |-TextComment 0x55887c3fb3a0 <line:259:22, col:105> Text="             On entry, the key of the performance measurement log entry to retrieve."
|   |   |-TextComment 0x55887c3fb3c0 <line:260:1, col:99> Text="                                  0, then the first performance measurement log entry is retrieved."
|   |   |-TextComment 0x55887c3fb3e0 <line:261:1, col:90> Text="                                  On exit, the key of the next performance of entry entry."
|   |   `-TextComment 0x55887c3fb400 <line:262:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fb460 <col:3, line:264:2> [in] implicitly Param="Handle" ParamIndex=1
|   | `-ParagraphComment 0x55887c3fb540 <line:262:17, line:264:2>
|   |   |-TextComment 0x55887c3fb4c0 <line:262:17, col:104> Text="                  Pointer to environment specific context used to identify the component"
|   |   |-TextComment 0x55887c3fb4e0 <line:263:1, col:49> Text="                                  being measured."
|   |   `-TextComment 0x55887c3fb500 <line:264:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fb560 <col:3, line:266:2> [in] implicitly Param="Token" ParamIndex=2
|   | `-ParagraphComment 0x55887c3fb640 <line:264:16, line:266:2>
|   |   |-TextComment 0x55887c3fb5c0 <line:264:16, col:105> Text="                   Pointer to a Null-terminated ASCII string that identifies the component"
|   |   |-TextComment 0x55887c3fb5e0 <line:265:1, col:49> Text="                                  being measured."
|   |   `-TextComment 0x55887c3fb600 <line:266:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fb660 <col:3, line:268:2> [in] implicitly Param="Module" ParamIndex=3
|   | `-ParagraphComment 0x55887c3fb740 <line:266:17, line:268:2>
|   |   |-TextComment 0x55887c3fb6c0 <line:266:17, col:102> Text="                  Pointer to a Null-terminated ASCII string that identifies the module"
|   |   |-TextComment 0x55887c3fb6e0 <line:267:1, col:49> Text="                                  being measured."
|   |   `-TextComment 0x55887c3fb700 <line:268:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fb760 <col:3, line:270:2> [in] implicitly Param="StartTimeStamp" ParamIndex=4
|   | `-ParagraphComment 0x55887c3fb840 <line:268:25, line:270:2>
|   |   |-TextComment 0x55887c3fb7c0 <line:268:25, col:105> Text="          Pointer to the 64-bit time stamp that was recorded when the measurement"
|   |   |-TextComment 0x55887c3fb7e0 <line:269:1, col:46> Text="                                  was started."
|   |   `-TextComment 0x55887c3fb800 <line:270:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fb860 <col:3, line:272:2> [in] implicitly Param="EndTimeStamp" ParamIndex=5
|   | `-ParagraphComment 0x55887c3fb940 <line:270:23, line:272:2>
|   |   |-TextComment 0x55887c3fb8c0 <line:270:23, col:105> Text="            Pointer to the 64-bit time stamp that was recorded when the measurement"
|   |   |-TextComment 0x55887c3fb8e0 <line:271:1, col:44> Text="                                  was ended."
|   |   `-TextComment 0x55887c3fb900 <line:272:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fb960 <col:3, col:85> [in] implicitly Param="Identifier" ParamIndex=6
|   | `-ParagraphComment 0x55887c3fb9f0 <col:21, col:85>
|   |   `-TextComment 0x55887c3fb9c0 <col:21, col:85> Text="              Pointer to the 32-bit identifier that was recorded."
|   |-ParagraphComment 0x55887c3fba40 <line:274:1, col:2>
|   | `-TextComment 0x55887c3fba10 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3fba60 <col:3, col:71> Name="return"
|     `-ParagraphComment 0x55887c3fbac0 <col:10, col:71>
|       `-TextComment 0x55887c3fba90 <col:10, col:71> Text=" The key for the next performance log entry (in general case)."
|-FunctionDecl 0x55887c2f6550 <line:301:1, line:305:3> line:303:1 PerformanceMeasurementEnabled 'BOOLEAN (void)'
| `-FullComment 0x55887c3fbea0 <line:290:1, line:298:77>
|   |-ParagraphComment 0x55887c3fbbe0 <line:290:1, col:65>
|   | `-TextComment 0x55887c3fbbb0 <col:1, col:65> Text="  Returns TRUE if the performance measurement macros are enabled."
|   |-ParagraphComment 0x55887c3fbc50 <line:292:1, line:293:73>
|   | |-TextComment 0x55887c3fbc00 <line:292:1, col:91> Text="  This function returns TRUE if the PERFORMANCE_LIBRARY_PROPERTY_MEASUREMENT_ENABLED bit of"
|   | `-TextComment 0x55887c3fbc20 <line:293:1, col:73> Text="  PcdPerformanceLibraryPropertyMask is set.  Otherwise FALSE is returned."
|   |-ParagraphComment 0x55887c3fbca0 <line:295:1, col:2>
|   | `-TextComment 0x55887c3fbc70 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3fbcc0 <col:3, line:297:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c3fbd90 <line:295:15, line:297:2>
|   |   |-TextComment 0x55887c3fbd10 <line:295:15, col:93> Text="                    The PERFORMANCE_LIBRARY_PROPERTY_MEASUREMENT_ENABLED bit of"
|   |   |-TextComment 0x55887c3fbd30 <line:296:1, col:75> Text="                                  PcdPerformanceLibraryPropertyMask is set."
|   |   `-TextComment 0x55887c3fbd50 <line:297:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3fbdb0 <col:3, line:298:77> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c3fbe50 <line:297:16, line:298:77>
|       |-TextComment 0x55887c3fbe00 <line:297:16, col:93> Text="                   The PERFORMANCE_LIBRARY_PROPERTY_MEASUREMENT_ENABLED bit of"
|       `-TextComment 0x55887c3fbe20 <line:298:1, col:77> Text="                                  PcdPerformanceLibraryPropertyMask is clear."
|-FunctionDecl 0x55887c2f66b8 <line:319:1, line:323:3> line:321:1 LogPerformanceMeasurementEnabled 'BOOLEAN (const UINTN)'
| |-ParmVarDecl 0x55887c2f6628 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:322:20> col:20 Type 'const UINTN':'const unsigned long long'
| `-FullComment 0x55887c3fc2c0 <line:308:1, line:316:69>
|   |-ParagraphComment 0x55887c3fbf40 <line:308:1, col:68>
|   | `-TextComment 0x55887c3fbf10 <col:1, col:68> Text="  Check whether the specified performance measurement can be logged."
|   |-ParagraphComment 0x55887c3fbfb0 <line:310:1, line:311:75>
|   | |-TextComment 0x55887c3fbf60 <line:310:1, col:134> Text="  This function returns TRUE when the PERFORMANCE_LIBRARY_PROPERTY_MEASUREMENT_ENABLED bit of PcdPerformanceLibraryPropertyMask is set"
|   | `-TextComment 0x55887c3fbf80 <line:311:1, col:75> Text="  and the Type disable bit in PcdPerformanceLibraryPropertyMask is not set."
|   |-ParagraphComment 0x55887c3fc000 <line:313:1, col:2>
|   | `-TextComment 0x55887c3fbfd0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fc020 <col:3, col:65> [in] implicitly Param="Type" ParamIndex=0
|   | `-ParagraphComment 0x55887c3fc0b0 <col:14, col:65>
|   |   `-TextComment 0x55887c3fc080 <col:14, col:65> Text="        - Type of the performance measurement entry."
|   |-ParagraphComment 0x55887c3fc100 <line:315:1, col:2>
|   | `-TextComment 0x55887c3fc0d0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3fc120 <col:3, line:316:2> Name="retval" Arg[0]="TRUE"
|   | `-ParagraphComment 0x55887c3fc1c0 <line:315:15, line:316:2>
|   |   |-TextComment 0x55887c3fc170 <line:315:15, col:65> Text="         The performance measurement can be logged."
|   |   `-TextComment 0x55887c3fc190 <line:316:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3fc1e0 <col:3, col:69> Name="retval" Arg[0]="FALSE"
|     `-ParagraphComment 0x55887c3fc260 <col:16, col:69>
|       `-TextComment 0x55887c3fc230 <col:16, col:69> Text="        The performance measurement can NOT be logged."
|-FunctionDecl 0x55887c2f6ad8 <line:341:1, line:349:3> line:343:1 LogPerformanceMeasurement 'RETURN_STATUS (const void *, const void *, const CHAR8 *, UINT64, UINT32)'
| |-ParmVarDecl 0x55887c2f67a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:344:20> col:20 CallerIdentifier 'const void *'
| |-ParmVarDecl 0x55887c2f6820 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:345:20> col:20 Guid 'const void *'
| |-ParmVarDecl 0x55887c2f6898 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/PerformanceLib.h:346:20> col:20 String 'const CHAR8 *'
| |-ParmVarDecl 0x55887c2f6910 <line:347:6, col:19> col:19 Address 'UINT64':'unsigned long long'
| |-ParmVarDecl 0x55887c2f6988 <line:348:6, col:19> col:19 Identifier 'UINT32':'unsigned int'
| `-FullComment 0x55887c3fcb10 <line:326:1, line:338:67>
|   |-ParagraphComment 0x55887c3fc360 <line:326:1, col:51>
|   | `-TextComment 0x55887c3fc330 <col:1, col:51> Text="  Create performance record with event description."
|   |-ParagraphComment 0x55887c3fc3b0 <line:328:1, col:2>
|   | `-TextComment 0x55887c3fc380 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fc3d0 <col:3, line:329:2> [in] implicitly Param="CallerIdentifier" ParamIndex=0
|   | `-ParagraphComment 0x55887c3fc490 <line:328:26, line:329:2>
|   |   |-TextComment 0x55887c3fc440 <line:328:26, col:69> Text=" - Image handle or pointer to caller ID GUID"
|   |   `-TextComment 0x55887c3fc460 <line:329:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fc4b0 <col:3, line:331:2> [in] implicitly Param="Guid" ParamIndex=1
|   | `-ParagraphComment 0x55887c3fc590 <line:329:14, line:331:2>
|   |   |-TextComment 0x55887c3fc510 <line:329:14, col:46> Text="             - Pointer to a GUID."
|   |   |-TextComment 0x55887c3fc530 <line:330:1, col:97> Text="                            Used for event signal perf and callback perf to cache the event guid."
|   |   `-TextComment 0x55887c3fc550 <line:331:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fc5b0 <col:3, line:332:2> [in] implicitly Param="String" ParamIndex=2
|   | `-ParagraphComment 0x55887c3fc660 <line:331:16, line:332:2>
|   |   |-TextComment 0x55887c3fc610 <line:331:16, col:74> Text="           - Pointer to a string describing the measurement"
|   |   `-TextComment 0x55887c3fc630 <line:332:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fc680 <col:3, line:333:2> [in] implicitly Param="Address" ParamIndex=3
|   | `-ParagraphComment 0x55887c3fc730 <line:332:17, line:333:2>
|   |   |-TextComment 0x55887c3fc6e0 <line:332:17, col:88> Text="          - Pointer to a location in memory relevant to the measurement."
|   |   `-TextComment 0x55887c3fc700 <line:333:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fc750 <col:3, col:86> [in] implicitly Param="Identifier" ParamIndex=4
|   | `-ParagraphComment 0x55887c3fc7e0 <col:20, col:86>
|   |   `-TextComment 0x55887c3fc7b0 <col:20, col:86> Text="       - Performance identifier describing the type of measurement."
|   |-ParagraphComment 0x55887c3fc830 <line:335:1, col:2>
|   | `-TextComment 0x55887c3fc800 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3fc850 <col:3, line:336:2> Name="retval" Arg[0]="RETURN_SUCCESS"
|   | `-ParagraphComment 0x55887c3fc8f0 <line:335:25, line:336:2>
|   |   |-TextComment 0x55887c3fc8a0 <line:335:25, col:76> Text="           - Successfully created performance record"
|   |   `-TextComment 0x55887c3fc8c0 <line:336:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3fc910 <col:3, line:337:2> Name="retval" Arg[0]="RETURN_OUT_OF_RESOURCES"
|   | `-ParagraphComment 0x55887c3fc9c0 <line:336:34, line:337:2>
|   |   |-TextComment 0x55887c3fc970 <line:336:34, col:74> Text="  - Ran out of space to store the records"
|   |   `-TextComment 0x55887c3fc990 <line:337:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3fc9e0 <col:3, line:338:67> Name="retval" Arg[0]="RETURN_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c3fca90 <line:337:35, line:338:67>
|       |-TextComment 0x55887c3fca40 <line:337:35, col:80> Text=" - Invalid parameter passed to function - NULL"
|       `-TextComment 0x55887c3fca60 <line:338:1, col:67> Text="                                     pointer or invalid Identifier."
|-VarDecl 0x55887c2f70e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeIpl.h:52:1, col:38> col:38 gEndOfPeiSignalPpi 'const EFI_PEI_PPI_DESCRIPTOR':'const EFI_PEI_PPI_DESCRIPTOR' extern
|-FunctionDecl 0x55887c2f7328 <line:65:1, line:71:3> line:67:1 used InstallIplPermanentMemoryPpis 'EFI_STATUS (EFI_PEI_SERVICES **, EFI_PEI_NOTIFY_DESCRIPTOR *, void *)'
| |-ParmVarDecl 0x55887c2f7190 <line:68:6, col:35> col:35 PeiServices 'EFI_PEI_SERVICES **'
| |-ParmVarDecl 0x55887c2f7208 <line:69:6, col:34> col:34 NotifyDescriptor 'EFI_PEI_NOTIFY_DESCRIPTOR *'
| |-ParmVarDecl 0x55887c2f7288 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeIpl.h:70:34> col:34 Ppi 'void *'
| `-FullComment 0x55887c3fd030 <line:55:1, line:62:84>
|   |-ParagraphComment 0x55887c3fcbb0 <line:55:1, col:65>
|   | `-TextComment 0x55887c3fcb80 <col:1, col:65> Text="   This function installs the PPIs that require permanent memory."
|   |-ParagraphComment 0x55887c3fcc00 <line:57:1, col:3>
|   | `-TextComment 0x55887c3fcbd0 <col:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3fcc20 <col:4, line:58:3> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c3fccd0 <line:57:23, line:58:3>
|   |   |-TextComment 0x55887c3fcc80 <line:57:23, col:73> Text="      Indirect reference to the PEI Services Table."
|   |   `-TextComment 0x55887c3fcca0 <line:58:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3fccf0 <col:4, line:59:3> [in] implicitly Param="NotifyDescriptor" ParamIndex=1
|   | `-ParagraphComment 0x55887c3fcdb0 <line:58:28, line:59:3>
|   |   |-TextComment 0x55887c3fcd60 <line:58:28, col:82> Text=" Address of the notification descriptor data structure."
|   |   `-TextComment 0x55887c3fcd80 <line:59:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3fcdd0 <col:4, col:66> [in] implicitly Param="Ppi" ParamIndex=2
|   | `-ParagraphComment 0x55887c3fce60 <col:15, col:66>
|   |   `-TextComment 0x55887c3fce30 <col:15, col:66> Text="              Address of the PPI that was installed."
|   |-ParagraphComment 0x55887c3fceb0 <line:61:1, col:3>
|   | `-TextComment 0x55887c3fce80 <col:1, col:3> Text="   "
|   |-BlockCommandComment 0x55887c3fced0 <col:4, line:62:3> Name="return"
|   | `-ParagraphComment 0x55887c3fcf50 <line:61:11, line:62:3>
|   |   |-TextComment 0x55887c3fcf00 <line:61:11, col:65> Text=" EFI_SUCCESS      The PPIs were installed successfully."
|   |   `-TextComment 0x55887c3fcf20 <line:62:1, col:3> Text="   "
|   `-BlockCommandComment 0x55887c3fcf70 <col:4, col:84> Name="return"
|     `-ParagraphComment 0x55887c3fcfd0 <col:11, col:84>
|       `-TextComment 0x55887c3fcfa0 <col:11, col:84> Text=" Others           Some error occurs during the execution of this function."
|-FunctionDecl 0x55887c2f74c8 <line:80:1, line:83:3> line:81:1 used DxeIplFindDxeCore 'EFI_PEI_FILE_HANDLE (void)'
| `-FullComment 0x55887c3fd200 <line:74:1, line:77:49>
|   |-ParagraphComment 0x55887c3fd0f0 <line:74:1, line:75:34>
|   | |-TextComment 0x55887c3fd0a0 <line:74:1, col:63> Text="   Searches DxeCore in all firmware Volumes and loads the first"
|   | `-TextComment 0x55887c3fd0c0 <line:75:1, col:34> Text="   instance that contains DxeCore."
|   |-ParagraphComment 0x55887c3fd140 <line:77:1, col:3>
|   | `-TextComment 0x55887c3fd110 <col:1, col:3> Text="   "
|   `-BlockCommandComment 0x55887c3fd160 <col:4, col:49> Name="return"
|     `-ParagraphComment 0x55887c3fd1c0 <col:11, col:49>
|       `-TextComment 0x55887c3fd190 <col:11, col:49> Text=" FileHandle of DxeCore to load DxeCore."
|-FunctionDecl 0x55887c2f7740 <line:96:1, line:102:3> line:98:1 used DxeLoadCore 'EFI_STATUS (const EFI_DXE_IPL_PPI *, EFI_PEI_SERVICES **, EFI_PEI_HOB_POINTERS)'
| |-ParmVarDecl 0x55887c2f75a8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeIpl.h:99:30> col:30 This 'const EFI_DXE_IPL_PPI *'
| |-ParmVarDecl 0x55887c2f7628 <line:100:6, col:31> col:31 PeiServices 'EFI_PEI_SERVICES **'
| |-ParmVarDecl 0x55887c2f76a0 <line:101:6, col:29> col:29 HobList 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS'
| `-FullComment 0x55887c3fd710 <line:86:1, line:93:84>
|   |-ParagraphComment 0x55887c3fd2a0 <line:86:1, col:32>
|   | `-TextComment 0x55887c3fd270 <col:1, col:32> Text="   Main entry point to last PEIM"
|   |-ParagraphComment 0x55887c3fd2f0 <line:88:1, col:3>
|   | `-TextComment 0x55887c3fd2c0 <col:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3fd310 <col:4, line:89:3> [in] implicitly Param="This" ParamIndex=0
|   | `-ParagraphComment 0x55887c3fd3c0 <line:88:15, line:89:3>
|   |   |-TextComment 0x55887c3fd370 <line:88:15, col:51> Text="          Entry point for DXE IPL PPI"
|   |   `-TextComment 0x55887c3fd390 <line:89:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3fd3e0 <col:4, line:90:3> [in] implicitly Param="PeiServices" ParamIndex=1
|   | `-ParagraphComment 0x55887c3fd490 <line:89:22, line:90:3>
|   |   |-TextComment 0x55887c3fd440 <line:89:22, col:73> Text="   General purpose services available to every PEIM."
|   |   `-TextComment 0x55887c3fd460 <line:90:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3fd4b0 <col:4, col:51> [in] implicitly Param="HobList" ParamIndex=2
|   | `-ParagraphComment 0x55887c3fd540 <col:18, col:51>
|   |   `-TextComment 0x55887c3fd510 <col:18, col:51> Text="       Address to the Pei HOB list"
|   |-ParagraphComment 0x55887c3fd590 <line:92:1, col:3>
|   | `-TextComment 0x55887c3fd560 <col:1, col:3> Text="   "
|   |-BlockCommandComment 0x55887c3fd5b0 <col:4, line:93:3> Name="return"
|   | `-ParagraphComment 0x55887c3fd630 <line:92:11, line:93:3>
|   |   |-TextComment 0x55887c3fd5e0 <line:92:11, col:69> Text=" EFI_SUCCESS              DXE core was successfully loaded."
|   |   `-TextComment 0x55887c3fd600 <line:93:1, col:3> Text="   "
|   `-BlockCommandComment 0x55887c3fd650 <col:4, col:84> Name="return"
|     `-ParagraphComment 0x55887c3fd6b0 <col:11, col:84>
|       `-TextComment 0x55887c3fd680 <col:11, col:84> Text=" EFI_OUT_OF_RESOURCES     There are not enough resources to load DXE core."
|-FunctionDecl 0x55887c2fe318 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeIpl.h:119:3> line:116:1 used HandOffToDxeCore 'void (EFI_PHYSICAL_ADDRESS, EFI_PEI_HOB_POINTERS)'
| |-ParmVarDecl 0x55887c2fe188 <line:117:6, col:28> col:28 DxeCoreEntryPoint 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| |-ParmVarDecl 0x55887c2fe200 <line:118:6, col:28> col:28 HobList 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS'
| `-FullComment 0x55887c3fda80 <line:105:1, line:112:75>
|   |-ParagraphComment 0x55887c3fd7b0 <line:105:1, col:32>
|   | `-TextComment 0x55887c3fd780 <col:1, col:32> Text="   Transfers control to DxeCore."
|   |-ParagraphComment 0x55887c3fd850 <line:107:1, line:109:70>
|   | |-TextComment 0x55887c3fd7d0 <line:107:1, col:75> Text="   This function performs a CPU architecture specific operations to execute"
|   | |-TextComment 0x55887c3fd7f0 <line:108:1, col:61> Text="   the entry point of DxeCore with the parameters of HobList."
|   | `-TextComment 0x55887c3fd810 <line:109:1, col:70> Text="   It also installs EFI_END_OF_PEI_PPI to signal the end of PEI phase."
|   |-ParagraphComment 0x55887c3fd8a0 <line:111:1, col:3>
|   | `-TextComment 0x55887c3fd870 <col:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3fd8c0 <col:4, line:112:3> [in] implicitly Param="DxeCoreEntryPoint" ParamIndex=0
|   | `-ParagraphComment 0x55887c3fd980 <line:111:28, line:112:3>
|   |   |-TextComment 0x55887c3fd930 <line:111:28, col:63> Text="         The entry point of DxeCore."
|   |   `-TextComment 0x55887c3fd950 <line:112:1, col:3> Text="   "
|   `-ParamCommandComment 0x55887c3fd9a0 <col:4, col:75> [in] implicitly Param="HobList" ParamIndex=1
|     `-ParagraphComment 0x55887c3fda30 <col:18, col:75>
|       `-TextComment 0x55887c3fda00 <col:18, col:75> Text="                   The start of HobList passed to DxeCore."
|-FunctionDecl 0x55887c2fe518 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeIpl.h:135:3> line:132:1 UpdateStackHob 'void (EFI_PHYSICAL_ADDRESS, UINT64)'
| |-ParmVarDecl 0x55887c2fe408 <line:133:6, col:28> col:28 BaseAddress 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| |-ParmVarDecl 0x55887c2fe480 <line:134:6, col:28> col:28 Length 'UINT64':'unsigned long long'
| `-FullComment 0x55887c3fddb0 <line:122:1, line:128:68>
|   |-ParagraphComment 0x55887c3fdb20 <line:122:1, col:45>
|   | `-TextComment 0x55887c3fdaf0 <col:1, col:45> Text="   Updates the Stack HOB passed to DXE phase."
|   |-ParagraphComment 0x55887c3fdb90 <line:124:1, line:125:51>
|   | |-TextComment 0x55887c3fdb40 <line:124:1, col:73> Text="   This function traverses the whole HOB list and update the stack HOB to"
|   | `-TextComment 0x55887c3fdb60 <line:125:1, col:51> Text="   reflect the real stack that is used by DXE core."
|   |-ParagraphComment 0x55887c3fdbe0 <line:127:1, col:3>
|   | `-TextComment 0x55887c3fdbb0 <col:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3fdc00 <col:4, line:128:3> [in] implicitly Param="BaseAddress" ParamIndex=0
|   | `-ParagraphComment 0x55887c3fdcb0 <line:127:22, line:128:3>
|   |   |-TextComment 0x55887c3fdc60 <line:127:22, col:75> Text="           The lower address of stack used by DxeCore."
|   |   `-TextComment 0x55887c3fdc80 <line:128:1, col:3> Text="   "
|   `-ParamCommandComment 0x55887c3fdcd0 <col:4, col:68> [in] implicitly Param="Length" ParamIndex=1
|     `-ParagraphComment 0x55887c3fdd60 <col:17, col:68>
|       `-TextComment 0x55887c3fdd30 <col:17, col:68> Text="                The length of stack used by DxeCore."
|-FunctionDecl 0x55887c2fe8a8 <line:191:1, line:199:3> line:193:1 used CustomGuidedSectionExtract 'EFI_STATUS (const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI *, const void *, void **, UINTN *, UINT32 *)'
| |-ParmVarDecl 0x55887c2fe608 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeIpl.h:194:53> col:53 This 'const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI *'
| |-ParmVarDecl 0x55887c2fe688 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeIpl.h:195:53> col:53 InputSection 'const void *'
| |-ParmVarDecl 0x55887c2fe708 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeIpl.h:196:54> col:54 OutputBuffer 'void **'
| |-ParmVarDecl 0x55887c2fe780 <line:197:13, col:53> col:53 OutputSize 'UINTN *'
| |-ParmVarDecl 0x55887c2fe7f8 <line:198:13, col:53> col:53 AuthenticationStatus 'UINT32 *'
| `-FullComment 0x55887c3fec10 <line:138:1, line:188:62>
|   |-ParagraphComment 0x55887c3fdf60 <line:138:1, line:145:28>
|   | |-TextComment 0x55887c3fde20 <line:138:1, col:63> Text="  The ExtractSection() function processes the input section and"
|   | |-TextComment 0x55887c3fde40 <line:139:1, col:65> Text="  returns a pointer to the section contents. If the section being"
|   | |-TextComment 0x55887c3fde60 <line:140:1, col:55> Text="  extracted does not require processing (if the section"
|   | |-TextComment 0x55887c3fde80 <line:141:1, col:40> Text="  GuidedSectionHeader.Attributes has the"
|   | |-TextComment 0x55887c3fdea0 <line:142:1, col:61> Text="  EFI_GUIDED_SECTION_PROCESSING_REQUIRED field cleared), then"
|   | |-TextComment 0x55887c3fdec0 <line:143:1, col:59> Text="  OutputBuffer is just updated to point to the start of the"
|   | |-TextComment 0x55887c3fdee0 <line:144:1, col:58> Text="  section's contents. Otherwise, *Buffer must be allocated"
|   | `-TextComment 0x55887c3fdf00 <line:145:1, col:28> Text="  from PEI permanent memory."
|   |-ParagraphComment 0x55887c3fdfb0 <line:147:1, col:2>
|   | `-TextComment 0x55887c3fdf80 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fdfd0 <col:3, line:153:2> [in] implicitly Param="This" ParamIndex=0
|   | `-ParagraphComment 0x55887c3fe150 <line:147:14, line:153:2>
|   |   |-TextComment 0x55887c3fe030 <line:147:14, col:45> Text="                   Indicates the"
|   |   |-TextComment 0x55887c3fe050 <line:148:1, col:79> Text="                                EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI instance."
|   |   |-TextComment 0x55887c3fe070 <line:149:1, col:80> Text="                                Buffer containing the input GUIDed section to be"
|   |   |-TextComment 0x55887c3fe090 <line:150:1, col:71> Text="                                processed. OutputBuffer OutputBuffer is"
|   |   |-TextComment 0x55887c3fe0b0 <line:151:1, col:80> Text="                                allocated from PEI permanent memory and contains"
|   |   |-TextComment 0x55887c3fe0d0 <line:152:1, col:55> Text="                                the new section stream."
|   |   `-TextComment 0x55887c3fe0f0 <line:153:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fe170 <col:3, line:155:2> [in] implicitly Param="InputSection" ParamIndex=1
|   | `-ParagraphComment 0x55887c3fe250 <line:153:22, line:155:2>
|   |   |-TextComment 0x55887c3fe1d0 <line:153:22, col:77> Text="           A pointer to the input buffer, which contains"
|   |   |-TextComment 0x55887c3fe1f0 <line:154:1, col:66> Text="                                the input section to be processed."
|   |   `-TextComment 0x55887c3fe210 <line:155:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fe270 <col:3, line:157:2> [in] implicitly Param="OutputBuffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c3fe350 <line:155:22, line:157:2>
|   |   |-TextComment 0x55887c3fe2d0 <line:155:22, col:77> Text="           A pointer to a caller-allocated buffer, whose"
|   |   |-TextComment 0x55887c3fe2f0 <line:156:1, col:80> Text="                                size is specified by the contents of OutputSize."
|   |   `-TextComment 0x55887c3fe310 <line:157:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fe370 <col:3, line:162:2> [in] implicitly Param="OutputSize" ParamIndex=3
|   | `-ParagraphComment 0x55887c3fe4c0 <line:157:20, line:162:2>
|   |   |-TextComment 0x55887c3fe3d0 <line:157:20, col:63> Text="             A pointer to a caller-allocated"
|   |   |-TextComment 0x55887c3fe3f0 <line:158:1, col:72> Text="                                UINTN in which the size of *OutputBuffer"
|   |   |-TextComment 0x55887c3fe410 <line:159:1, col:69> Text="                                allocation is stored. If the function"
|   |   |-TextComment 0x55887c3fe430 <line:160:1, col:72> Text="                                returns anything other than EFI_SUCCESS,"
|   |   |-TextComment 0x55887c3fe450 <line:161:1, col:69> Text="                                the value of OutputSize is undefined."
|   |   `-TextComment 0x55887c3fe470 <line:162:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c3fe4e0 <col:3, line:177:42> [in] implicitly Param="AuthenticationStatus" ParamIndex=4
|   | `-ParagraphComment 0x55887c3fe7d0 <line:162:30, line:177:42>
|   |   |-TextComment 0x55887c3fe550 <line:162:30, col:63> Text="   A pointer to a caller-allocated"
|   |   |-TextComment 0x55887c3fe570 <line:163:1, col:57> Text="                                UINT32 that indicates the"
|   |   |-TextComment 0x55887c3fe590 <line:164:1, col:60> Text="                                authentication status of the"
|   |   |-TextComment 0x55887c3fe5b0 <line:165:1, col:59> Text="                                output buffer. If the input"
|   |   |-TextComment 0x55887c3fe5d0 <line:166:1, col:62> Text="                                section's GuidedSectionHeader."
|   |   |-TextComment 0x55887c3fe5f0 <line:167:1, col:56> Text="                                Attributes field has the"
|   |   |-TextComment 0x55887c3fe610 <line:168:1, col:68> Text="                                EFI_GUIDED_SECTION_AUTH_STATUS_VALID"
|   |   |-TextComment 0x55887c3fe630 <line:169:1, col:45> Text="                                bit as clear,"
|   |   |-TextComment 0x55887c3fe650 <line:170:1, col:64> Text="                                AuthenticationStatus must return"
|   |   |-TextComment 0x55887c3fe670 <line:171:1, col:60> Text="                                zero. These bits reflect the"
|   |   |-TextComment 0x55887c3fe690 <line:172:1, col:56> Text="                                status of the extraction"
|   |   |-TextComment 0x55887c3fe6b0 <line:173:1, col:58> Text="                                operation. If the function"
|   |   |-TextComment 0x55887c3fe6d0 <line:174:1, col:59> Text="                                returns anything other than"
|   |   |-TextComment 0x55887c3fe6f0 <line:175:1, col:57> Text="                                EFI_SUCCESS, the value of"
|   |   |-TextComment 0x55887c3fe710 <line:176:1, col:55> Text="                                AuthenticationStatus is"
|   |   `-TextComment 0x55887c3fe730 <line:177:1, col:42> Text="                                undefined."
|   |-ParagraphComment 0x55887c3fe820 <line:179:1, col:2>
|   | `-TextComment 0x55887c3fe7f0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3fe840 <col:3, line:181:63> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c3fe910 <line:179:22, line:181:63>
|   |   |-TextComment 0x55887c3fe890 <line:179:22, col:52> Text="           The InputSection was"
|   |   |-TextComment 0x55887c3fe8b0 <line:180:1, col:62> Text="                                successfully processed and the"
|   |   `-TextComment 0x55887c3fe8d0 <line:181:1, col:63> Text="                                section contents were returned."
|   |-ParagraphComment 0x55887c3fe960 <line:183:1, col:2>
|   | `-TextComment 0x55887c3fe930 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c3fe980 <col:3, line:184:65> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|   | `-ParagraphComment 0x55887c3fea30 <line:183:31, line:184:65>
|   |   |-TextComment 0x55887c3fe9e0 <line:183:31, col:59> Text="  The system has insufficient"
|   |   `-TextComment 0x55887c3fea00 <line:184:1, col:65> Text="                                resources to process the request."
|   |-ParagraphComment 0x55887c3fea80 <line:186:1, col:2>
|   | `-TextComment 0x55887c3fea50 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c3feaa0 <col:3, line:188:62> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c3feb80 <line:186:32, line:188:62>
|       |-TextComment 0x55887c3feb00 <line:186:32, col:61> Text=" The GUID in InputSection does"
|       |-TextComment 0x55887c3feb20 <line:187:1, col:62> Text="                                not match this instance of the"
|       `-TextComment 0x55887c3feb40 <line:188:1, col:62> Text="                                GUIDed Section Extraction PPI."
|-FunctionDecl 0x55887c2febc0 <line:221:1, line:228:3> line:223:1 used Decompress 'EFI_STATUS (const EFI_PEI_DECOMPRESS_PPI *, const EFI_COMPRESSION_SECTION *, void **, UINTN *)'
| |-ParmVarDecl 0x55887c2fe9a8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeIpl.h:224:39> col:39 This 'const EFI_PEI_DECOMPRESS_PPI *'
| |-ParmVarDecl 0x55887c2fea20 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeIpl.h:225:39> col:39 CompressionSection 'const EFI_COMPRESSION_SECTION *'
| |-ParmVarDecl 0x55887c2feaa0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeIpl.h:226:40> col:40 OutputBuffer 'void **'
| |-ParmVarDecl 0x55887c2feb18 <line:227:13, col:39> col:39 OutputSize 'UINTN *'
| `-FullComment 0x55887c486870 <line:202:1, line:218:72>
|   |-ParagraphComment 0x55887c3fecb0 <line:202:1, col:47>
|   | `-TextComment 0x55887c3fec80 <col:1, col:47> Text="   Decompresses a section to the output buffer."
|   |-ParagraphComment 0x55887c3fed50 <line:204:1, line:206:27>
|   | |-TextComment 0x55887c3fecd0 <line:204:1, col:77> Text="   This function looks up the compression type field in the input section and"
|   | |-TextComment 0x55887c3fecf0 <line:205:1, col:77> Text="   applies the appropriate compression algorithm to compress the section to a"
|   | `-TextComment 0x55887c3fed10 <line:206:1, col:27> Text="   callee allocated buffer."
|   |-ParagraphComment 0x55887c3feda0 <line:208:1, col:3>
|   | `-TextComment 0x55887c3fed70 <col:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3fedc0 <col:4, line:210:3> [in] implicitly Param="This" ParamIndex=0
|   | `-ParagraphComment 0x55887c3feea0 <line:208:16, line:210:3>
|   |   |-TextComment 0x55887c3fee20 <line:208:16, col:63> Text="                  Points to this instance of the"
|   |   |-TextComment 0x55887c3fee40 <line:209:1, col:60> Text="                                 EFI_PEI_DECOMPRESS_PEI PPI."
|   |   `-TextComment 0x55887c3fee60 <line:210:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3feec0 <col:4, line:211:3> [in] implicitly Param="CompressionSection" ParamIndex=1
|   | `-ParagraphComment 0x55887c3fef80 <line:210:30, line:211:3>
|   |   |-TextComment 0x55887c3fef30 <line:210:30, col:66> Text="    Points to the compressed section."
|   |   `-TextComment 0x55887c3fef50 <line:211:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3fefa0 <col:4, line:213:3> [in] implicitly Param="OutputBuffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c3ff080 <line:211:24, line:213:3>
|   |   |-TextComment 0x55887c3ff000 <line:211:24, col:79> Text="          Holds the returned pointer to the decompressed"
|   |   |-TextComment 0x55887c3ff020 <line:212:1, col:42> Text="                                 sections."
|   |   `-TextComment 0x55887c3ff040 <line:213:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c3ff0a0 <col:4, line:214:49> [in] implicitly Param="OutputSize" ParamIndex=3
|   | `-ParagraphComment 0x55887c4866c0 <line:213:22, line:214:49>
|   |   |-TextComment 0x55887c3ff100 <line:213:22, col:74> Text="            Holds the returned size of the decompress"
|   |   `-TextComment 0x55887c3ff120 <line:214:1, col:49> Text="                                 section streams."
|   |-ParagraphComment 0x55887c486710 <line:216:1, col:3>
|   | `-TextComment 0x55887c4866e0 <col:1, col:3> Text="   "
|   `-BlockCommandComment 0x55887c486730 <col:4, line:218:72> Name="retval" Arg[0]="EFI_SUCCESS"
|     `-ParagraphComment 0x55887c486800 <line:216:23, line:218:72>
|       |-TextComment 0x55887c486780 <line:216:23, col:75> Text="           The section was decompressed successfully."
|       |-TextComment 0x55887c4867a0 <line:217:1, col:77> Text="                                 OutputBuffer contains the resulting data and"
|       `-TextComment 0x55887c4867c0 <line:218:1, col:72> Text="                                 OutputSize contains the resulting size."
|-VarDecl 0x55887c2fec90 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:19:1> line:17:24 used mDxeIplPpi 'const EFI_DXE_IPL_PPI':'const struct _EFI_DXE_IPL_PPI' cinit
| `-InitListExpr 0x55887c2fed70 <col:37, line:19:1> 'EFI_DXE_IPL_PPI':'struct _EFI_DXE_IPL_PPI'
|   `-ImplicitCastExpr 0x55887c2fede8 <line:18:3> 'EFI_STATUS (*)(const EFI_DXE_IPL_PPI *, EFI_PEI_SERVICES **, EFI_PEI_HOB_POINTERS)' <FunctionToPointerDecay>
|     `-DeclRefExpr 0x55887c2fecf8 <col:3> 'EFI_STATUS (const EFI_DXE_IPL_PPI *, EFI_PEI_SERVICES **, EFI_PEI_HOB_POINTERS)' Function 0x55887c2f7740 'DxeLoadCore' 'EFI_STATUS (const EFI_DXE_IPL_PPI *, EFI_PEI_SERVICES **, EFI_PEI_HOB_POINTERS)'
|-VarDecl 0x55887c2fee10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:25:1> line:21:31 used mDxeIplPpiList 'const EFI_PEI_PPI_DESCRIPTOR':'const EFI_PEI_PPI_DESCRIPTOR' cinit
| `-InitListExpr 0x55887c2ff008 <col:48, line:25:1> 'EFI_PEI_PPI_DESCRIPTOR':'EFI_PEI_PPI_DESCRIPTOR'
|   |-ImplicitCastExpr 0x55887c2ff060 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiPeiCis.h:81:49, line:85:49> 'UINTN':'unsigned long long' <IntegralCast>
|   | `-BinaryOperator 0x55887c2feed0 <line:81:49, line:85:49> 'unsigned int' '|'
|   |   |-ImplicitCastExpr 0x55887c2feeb8 <line:81:49> 'unsigned int' <IntegralCast>
|   |   | `-IntegerLiteral 0x55887c2fee78 <col:49> 'int' 16
|   |   `-IntegerLiteral 0x55887c2fee98 <line:85:49> 'unsigned int' 2147483648
|   |-UnaryOperator 0x55887c2fef10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:23:3, col:4> 'EFI_GUID *' prefix '&' cannot overflow
|   | `-DeclRefExpr 0x55887c2feef0 <col:4> 'EFI_GUID':'GUID' lvalue Var 0x55887c16fdb0 'gEfiDxeIplPpiGuid' 'EFI_GUID':'GUID'
|   `-CStyleCastExpr 0x55887c2fef78 <line:24:3, col:12> 'void *' <BitCast>
|     `-UnaryOperator 0x55887c2fef48 <col:11, col:12> 'const EFI_DXE_IPL_PPI *' prefix '&' cannot overflow
|       `-DeclRefExpr 0x55887c2fef28 <col:12> 'const EFI_DXE_IPL_PPI':'const struct _EFI_DXE_IPL_PPI' lvalue Var 0x55887c2fec90 'mDxeIplPpi' 'const EFI_DXE_IPL_PPI':'const struct _EFI_DXE_IPL_PPI'
|-VarDecl 0x55887c2ff088 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:29:1> line:27:46 used mCustomGuidedSectionExtractionPpi 'const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI':'const struct _EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI' cinit
| `-InitListExpr 0x55887c2ff168 <col:82, line:29:1> 'EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI':'struct _EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI'
|   `-ImplicitCastExpr 0x55887c2ff1d8 <line:28:3> 'EFI_STATUS (*)(const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI *, const void *, void **, UINTN *, UINT32 *)' <FunctionToPointerDecay>
|     `-DeclRefExpr 0x55887c2ff0f0 <col:3> 'EFI_STATUS (const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI *, const void *, void **, UINTN *, UINT32 *)' Function 0x55887c2fe8a8 'CustomGuidedSectionExtract' 'EFI_STATUS (const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI *, const void *, void **, UINTN *, UINT32 *)'
|-VarDecl 0x55887c2ff200 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:33:1> line:31:31 used mDecompressPpi 'const EFI_PEI_DECOMPRESS_PPI':'const struct _EFI_PEI_DECOMPRESS_PPI' cinit
| `-InitListExpr 0x55887c2ff2e0 <col:48, line:33:1> 'EFI_PEI_DECOMPRESS_PPI':'struct _EFI_PEI_DECOMPRESS_PPI'
|   `-ImplicitCastExpr 0x55887c2ff358 <line:32:3> 'EFI_STATUS (*)(const EFI_PEI_DECOMPRESS_PPI *, const EFI_COMPRESSION_SECTION *, void **, UINTN *)' <FunctionToPointerDecay>
|     `-DeclRefExpr 0x55887c2ff268 <col:3> 'EFI_STATUS (const EFI_PEI_DECOMPRESS_PPI *, const EFI_COMPRESSION_SECTION *, void **, UINTN *)' Function 0x55887c2febc0 'Decompress' 'EFI_STATUS (const EFI_PEI_DECOMPRESS_PPI *, const EFI_COMPRESSION_SECTION *, void **, UINTN *)'
|-VarDecl 0x55887c2ff380 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:39:1> line:35:31 used mDecompressPpiList 'const EFI_PEI_PPI_DESCRIPTOR':'const EFI_PEI_PPI_DESCRIPTOR' cinit
| `-InitListExpr 0x55887c2ff598 <col:52, line:39:1> 'EFI_PEI_PPI_DESCRIPTOR':'EFI_PEI_PPI_DESCRIPTOR'
|   |-ImplicitCastExpr 0x55887c2ff5f0 <line:36:3, col:70> 'UINTN':'unsigned long long' <IntegralCast>
|   | `-ParenExpr 0x55887c2ff460 <col:3, col:70> 'unsigned int'
|   |   `-BinaryOperator 0x55887c2ff440 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiPeiCis.h:81:49, line:85:49> 'unsigned int' '|'
|   |     |-ImplicitCastExpr 0x55887c2ff428 <line:81:49> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55887c2ff3e8 <col:49> 'int' 16
|   |     `-IntegerLiteral 0x55887c2ff408 <line:85:49> 'unsigned int' 2147483648
|   |-UnaryOperator 0x55887c2ff4a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:37:3, col:4> 'EFI_GUID *' prefix '&' cannot overflow
|   | `-DeclRefExpr 0x55887c2ff480 <col:4> 'EFI_GUID':'GUID' lvalue Var 0x55887c173950 'gEfiPeiDecompressPpiGuid' 'EFI_GUID':'GUID'
|   `-CStyleCastExpr 0x55887c2ff508 <line:38:3, col:12> 'void *' <BitCast>
|     `-UnaryOperator 0x55887c2ff4d8 <col:11, col:12> 'const EFI_PEI_DECOMPRESS_PPI *' prefix '&' cannot overflow
|       `-DeclRefExpr 0x55887c2ff4b8 <col:12> 'const EFI_PEI_DECOMPRESS_PPI':'const struct _EFI_PEI_DECOMPRESS_PPI' lvalue Var 0x55887c2ff200 'mDecompressPpi' 'const EFI_PEI_DECOMPRESS_PPI':'const struct _EFI_PEI_DECOMPRESS_PPI'
|-VarDecl 0x55887c2ff618 prev 0x55887c2f70e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:45:1> line:41:31 gEndOfPeiSignalPpi 'const EFI_PEI_PPI_DESCRIPTOR':'const EFI_PEI_PPI_DESCRIPTOR' cinit
| `-InitListExpr 0x55887c2ff838 <col:52, line:45:1> 'EFI_PEI_PPI_DESCRIPTOR':'EFI_PEI_PPI_DESCRIPTOR'
|   |-ImplicitCastExpr 0x55887c2ff890 <line:42:3, col:70> 'UINTN':'unsigned long long' <IntegralCast>
|   | `-ParenExpr 0x55887c2ff6f8 <col:3, col:70> 'unsigned int'
|   |   `-BinaryOperator 0x55887c2ff6d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiPeiCis.h:81:49, line:85:49> 'unsigned int' '|'
|   |     |-ImplicitCastExpr 0x55887c2ff6c0 <line:81:49> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55887c2ff680 <col:49> 'int' 16
|   |     `-IntegerLiteral 0x55887c2ff6a0 <line:85:49> 'unsigned int' 2147483648
|   |-UnaryOperator 0x55887c2ff738 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:43:3, col:4> 'EFI_GUID *' prefix '&' cannot overflow
|   | `-DeclRefExpr 0x55887c2ff718 <col:4> 'EFI_GUID':'GUID' lvalue Var 0x55887c16fe58 'gEfiEndOfPeiSignalPpiGuid' 'EFI_GUID':'GUID'
|   `-ParenExpr 0x55887c2ff7b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'void *'
|     `-CStyleCastExpr 0x55887c2ff788 <col:16, col:25> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x55887c2ff750 <col:25> 'int' 0
|-VarDecl 0x55887c2ff8b8 <line:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:51:1> line:47:34 used mMemoryDiscoveredNotifyList 'const EFI_PEI_NOTIFY_DESCRIPTOR':'const struct _EFI_PEI_NOTIFY_DESCRIPTOR' cinit
| `-InitListExpr 0x55887c2ffa78 <col:64, line:51:1> 'EFI_PEI_NOTIFY_DESCRIPTOR':'struct _EFI_PEI_NOTIFY_DESCRIPTOR'
|   |-ImplicitCastExpr 0x55887c2ffad0 <line:48:3, col:82> 'UINTN':'unsigned long long' <IntegralCast>
|   | `-ParenExpr 0x55887c2ff998 <col:3, col:82> 'unsigned int'
|   |   `-BinaryOperator 0x55887c2ff978 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiPeiCis.h:83:49, line:85:49> 'unsigned int' '|'
|   |     |-ImplicitCastExpr 0x55887c2ff960 <line:83:49> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55887c2ff920 <col:49> 'int' 64
|   |     `-IntegerLiteral 0x55887c2ff940 <line:85:49> 'unsigned int' 2147483648
|   |-UnaryOperator 0x55887c2ff9d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:49:3, col:4> 'EFI_GUID *' prefix '&' cannot overflow
|   | `-DeclRefExpr 0x55887c2ff9b8 <col:4> 'EFI_GUID':'GUID' lvalue Var 0x55887c16fef8 'gEfiPeiMemoryDiscoveredPpiGuid' 'EFI_GUID':'GUID'
|   `-ImplicitCastExpr 0x55887c2ffb18 <line:50:3> 'EFI_STATUS (*)(EFI_PEI_SERVICES **, EFI_PEI_NOTIFY_DESCRIPTOR *, void *)' <FunctionToPointerDecay>
|     `-DeclRefExpr 0x55887c2ff9f0 <col:3> 'EFI_STATUS (EFI_PEI_SERVICES **, EFI_PEI_NOTIFY_DESCRIPTOR *, void *)' Function 0x55887c2f7328 'InstallIplPermanentMemoryPpis' 'EFI_STATUS (EFI_PEI_SERVICES **, EFI_PEI_NOTIFY_DESCRIPTOR *, void *)'
|-FunctionDecl 0x55887c2ffc80 <line:66:1, line:129:1> line:68:1 PeimInitializeDxeIpl 'EFI_STATUS (EFI_PEI_FILE_HANDLE, const EFI_PEI_SERVICES **)'
| |-ParmVarDecl 0x55887c2ffb68 <line:69:12, col:33> col:33 used FileHandle 'EFI_PEI_FILE_HANDLE':'void *'
| |-ParmVarDecl 0x55887c2ffbe8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:70:35> col:35 PeiServices 'const EFI_PEI_SERVICES **'
| |-CompoundStmt 0x55887c309478 <line:72:1, line:129:1>
| | |-DeclStmt 0x55887c2ffda8 <line:73:3, col:24>
| | | `-VarDecl 0x55887c2ffd40 <col:3, col:18> col:18 used Status 'EFI_STATUS':'unsigned long long'
| | |-DeclStmt 0x55887c2ffe38 <line:74:3, col:26>
| | | `-VarDecl 0x55887c2ffdd0 <col:3, col:18> col:18 used BootMode 'EFI_BOOT_MODE':'unsigned int'
| | |-DeclStmt 0x55887c2ffed0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:75:24>
| | | `-VarDecl 0x55887c2ffe68 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:75:19> col:19 used Dummy 'void *'
| | |-BinaryOperator 0x55887c2fffc0 <line:77:3, col:30> 'EFI_BOOT_MODE':'unsigned int' '='
| | | |-DeclRefExpr 0x55887c2ffee8 <col:3> 'EFI_BOOT_MODE':'unsigned int' lvalue Var 0x55887c2ffdd0 'BootMode' 'EFI_BOOT_MODE':'unsigned int'
| | | `-CallExpr 0x55887c2fffa0 <col:14, col:30> 'EFI_BOOT_MODE':'unsigned int'
| | |   `-ImplicitCastExpr 0x55887c2fff88 <col:14> 'EFI_BOOT_MODE (*)(void)' <FunctionToPointerDecay>
| | |     `-DeclRefExpr 0x55887c2fff08 <col:14> 'EFI_BOOT_MODE (void)' Function 0x55887c195c98 'GetBootModeHob' 'EFI_BOOT_MODE (void)'
| | |-IfStmt 0x55887c308840 <line:79:3, line:120:3> has_else
| | | |-BinaryOperator 0x55887c300050 <line:79:7, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiBootMode.h:32:56> 'int' '!='
| | | | |-ImplicitCastExpr 0x55887c300020 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:79:7> 'EFI_BOOT_MODE':'unsigned int' <LValueToRValue>
| | | | | `-DeclRefExpr 0x55887c2fffe0 <col:7> 'EFI_BOOT_MODE':'unsigned int' lvalue Var 0x55887c2ffdd0 'BootMode' 'EFI_BOOT_MODE':'unsigned int'
| | | | `-ImplicitCastExpr 0x55887c300038 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiBootMode.h:32:56> 'unsigned int' <IntegralCast>
| | | |   `-IntegerLiteral 0x55887c300000 <col:56> 'int' 17
| | | |-CompoundStmt 0x55887c307ca8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:79:38, line:113:3>
| | | | |-BinaryOperator 0x55887c302770 <line:80:5, col:54> 'EFI_STATUS':'unsigned long long' '='
| | | | | |-DeclRefExpr 0x55887c300070 <col:5> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | | | | `-CallExpr 0x55887c302730 <col:14, col:54> 'EFI_STATUS':'unsigned long long'
| | | | |   |-ImplicitCastExpr 0x55887c3000f8 <col:14> 'EFI_STATUS (*)(EFI_PEI_FILE_HANDLE)' <FunctionToPointerDecay>
| | | | |   | `-DeclRefExpr 0x55887c300090 <col:14> 'EFI_STATUS (EFI_PEI_FILE_HANDLE)' Function 0x55887c1a2c48 'PeiServicesRegisterForShadow' 'EFI_STATUS (EFI_PEI_FILE_HANDLE)'
| | | | |   `-ImplicitCastExpr 0x55887c302758 <col:44> 'EFI_PEI_FILE_HANDLE':'void *' <LValueToRValue>
| | | | |     `-DeclRefExpr 0x55887c3000b0 <col:44> 'EFI_PEI_FILE_HANDLE':'void *' lvalue ParmVar 0x55887c2ffb68 'FileHandle' 'EFI_PEI_FILE_HANDLE':'void *'
| | | | |-IfStmt 0x55887c3028e0 <line:81:5, line:86:5>
| | | | | |-BinaryOperator 0x55887c302860 <line:81:9, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1066:42> 'int' '=='
| | | | | | |-ImplicitCastExpr 0x55887c302848 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:81:9> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | | | | | | `-DeclRefExpr 0x55887c302790 <col:9> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | | | | | `-CStyleCastExpr 0x55887c302820 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1066:25, col:42> 'RETURN_STATUS':'unsigned long long' <IntegralCast>
| | | | | |   `-ParenExpr 0x55887c302800 <col:40, col:42> 'int'
| | | | | |     `-IntegerLiteral 0x55887c3027b0 <col:41> 'int' 0
| | | | | `-CompoundStmt 0x55887c3028c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:81:32, line:86:5>
| | | | |   `-ReturnStmt 0x55887c3028b8 <line:85:7, col:14>
| | | | |     `-ImplicitCastExpr 0x55887c3028a0 <col:14> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | | | |       `-DeclRefExpr 0x55887c302880 <col:14> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | | | |-DoStmt 0x55887c302f50 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:397:5, line:404:19>
| | | | | |-CompoundStmt 0x55887c302e40 <line:397:8, line:404:5>
| | | | | | `-IfStmt 0x55887c302e20 <line:398:7, line:403:7>
| | | | | |   |-CallExpr 0x55887c302990 <line:398:11, col:31> 'BOOLEAN':'unsigned char'
| | | | | |   | `-ImplicitCastExpr 0x55887c302978 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | | | |   |   `-DeclRefExpr 0x55887c302900 <col:11> 'BOOLEAN (void)' Function 0x55887c18d4f0 'DebugAssertEnabled' 'BOOLEAN (void)'
| | | | | |   `-CompoundStmt 0x55887c302e08 <col:34, line:403:7>
| | | | | |     `-IfStmt 0x55887c302de8 <line:399:9, line:402:9>
| | | | | |       |-UnaryOperator 0x55887c302b58 <line:399:13, col:25> 'int' prefix '!' cannot overflow
| | | | | |       | `-ParenExpr 0x55887c302b38 <col:14, col:25> 'int'
| | | | | |       |   `-BinaryOperator 0x55887c302b18 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:91:13, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'int' '=='
| | | | | |       |     |-ImplicitCastExpr 0x55887c302b00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:91:13> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | | | | |       |     | `-DeclRefExpr 0x55887c3029b0 <col:13> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | | | | |       |     `-ParenExpr 0x55887c302ae0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | | | | |       |       `-CStyleCastExpr 0x55887c302ab8 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | | | | |       |         `-ParenExpr 0x55887c302a98 <col:51, col:74> 'unsigned long long'
| | | | | |       |           `-BinaryOperator 0x55887c302a48 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | | | | |       |             |-IntegerLiteral 0x55887c3029d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | | | | |       |             `-ImplicitCastExpr 0x55887c302a30 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | | | | |       |               `-ParenExpr 0x55887c302a10 <col:62, col:73> 'int'
| | | | | |       |                 `-IntegerLiteral 0x55887c3029f0 <line:1172:47> 'int' 20
| | | | | |       `-CompoundStmt 0x55887c302dc8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:399:28, line:402:9>
| | | | | |         |-CallExpr 0x55887c302d10 <line:352:30, col:113> 'void'
| | | | | |         | |-ImplicitCastExpr 0x55887c302cf8 <col:30> 'void (*)(const CHAR8 *, UINTN, const CHAR8 *)' <FunctionToPointerDecay>
| | | | | |         | | `-DeclRefExpr 0x55887c302b70 <col:30> 'void (const CHAR8 *, UINTN, const CHAR8 *)' Function 0x55887c18d0f8 'DebugAssert' 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| | | | | |         | |-ImplicitCastExpr 0x55887c302d60 <<scratch space>:3:1> 'const CHAR8 *' <NoOp>
| | | | | |         | | `-ImplicitCastExpr 0x55887c302d48 <col:1> 'char *' <ArrayToPointerDecay>
| | | | | |         | |   `-StringLiteral 0x55887c302bc8 <col:1> 'char[10]' lvalue "DxeLoad.c"
| | | | | |         | |-ImplicitCastExpr 0x55887c302d78 <line:4:1> 'UINTN':'unsigned long long' <IntegralCast>
| | | | | |         | | `-IntegerLiteral 0x55887c302bf0 <col:1> 'int' 91
| | | | | |         | `-ImplicitCastExpr 0x55887c302da8 <line:5:1> 'const CHAR8 *' <NoOp>
| | | | | |         |   `-ImplicitCastExpr 0x55887c302d90 <col:1> 'char *' <ArrayToPointerDecay>
| | | | | |         |     `-StringLiteral 0x55887c302c48 <col:1> 'char[58]' lvalue "Status == ((RETURN_STATUS)(0x8000000000000000ULL | (20)))"
| | | | | |         `-NullStmt 0x55887c302dc0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:401:34>
| | | | | `-ParenExpr 0x55887c302f30 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | | | |   `-CStyleCastExpr 0x55887c302f08 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | | |     `-ParenExpr 0x55887c302ee8 <col:26, col:31> 'int'
| | | | |       `-BinaryOperator 0x55887c302e98 <col:27, col:30> 'int' '=='
| | | | |         |-IntegerLiteral 0x55887c302e58 <col:27> 'int' 0
| | | | |         `-IntegerLiteral 0x55887c302e78 <col:30> 'int' 1
| | | | |-BinaryOperator 0x55887c3031f8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:96:5, line:101:16> 'EFI_STATUS':'unsigned long long' '='
| | | | | |-DeclRefExpr 0x55887c302f70 <line:96:5> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | | | | `-CallExpr 0x55887c303170 <col:14, line:101:16> 'EFI_STATUS':'unsigned long long'
| | | | |   |-ImplicitCastExpr 0x55887c303158 <line:96:14> 'EFI_STATUS (*)(const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)' <FunctionToPointerDecay>
| | | | |   | `-DeclRefExpr 0x55887c302f90 <col:14> 'EFI_STATUS (const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)' Function 0x55887c1394a8 'PeiServicesLocatePpi' 'EFI_STATUS (const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)'
| | | | |   |-ImplicitCastExpr 0x55887c3031b0 <line:97:16, col:17> 'const EFI_GUID *' <NoOp>
| | | | |   | `-UnaryOperator 0x55887c302fd0 <col:16, col:17> 'EFI_GUID *' prefix '&' cannot overflow
| | | | |   |   `-DeclRefExpr 0x55887c302fb0 <col:17> 'EFI_GUID':'GUID' lvalue Var 0x55887c16fef8 'gEfiPeiMemoryDiscoveredPpiGuid' 'EFI_GUID':'GUID'
| | | | |   |-ImplicitCastExpr 0x55887c3031c8 <line:98:16> 'UINTN':'unsigned long long' <IntegralCast>
| | | | |   | `-IntegerLiteral 0x55887c302fe8 <col:16> 'int' 0
| | | | |   |-ImplicitCastExpr 0x55887c3031e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'EFI_PEI_PPI_DESCRIPTOR **' <NullToPointer>
| | | | |   | `-ParenExpr 0x55887c303068 <col:15, col:26> 'void *'
| | | | |   |   `-CStyleCastExpr 0x55887c303040 <col:16, col:25> 'void *' <NullToPointer>
| | | | |   |     `-IntegerLiteral 0x55887c303008 <col:25> 'int' 0
| | | | |   `-CStyleCastExpr 0x55887c3030d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:100:16, col:26> 'void **' <NoOp>
| | | | |     `-UnaryOperator 0x55887c3030a8 <col:25, col:26> 'void **' prefix '&' cannot overflow
| | | | |       `-DeclRefExpr 0x55887c303088 <col:26> 'void *' lvalue Var 0x55887c2ffe68 'Dummy' 'void *'
| | | | |-DoStmt 0x55887c303d18 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:446:5, line:453:19>
| | | | | |-CompoundStmt 0x55887c303c08 <line:446:8, line:453:5>
| | | | | | `-IfStmt 0x55887c303be8 <line:447:7, line:452:7>
| | | | | |   |-CallExpr 0x55887c303250 <line:447:11, col:31> 'BOOLEAN':'unsigned char'
| | | | | |   | `-ImplicitCastExpr 0x55887c303238 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | | | |   |   `-DeclRefExpr 0x55887c303218 <col:11> 'BOOLEAN (void)' Function 0x55887c18d4f0 'DebugAssertEnabled' 'BOOLEAN (void)'
| | | | | |   `-CompoundStmt 0x55887c303bd0 <col:34, line:452:7>
| | | | | |     `-IfStmt 0x55887c303bb0 <line:448:9, line:451:9>
| | | | | |       |-ParenExpr 0x55887c3033d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | | | | |       | `-BinaryOperator 0x55887c3033b0 <col:36, col:74> 'int' '<'
| | | | | |       |   |-ParenExpr 0x55887c303358 <col:36, col:70> 'INTN':'long long'
| | | | | |       |   | `-CStyleCastExpr 0x55887c303330 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | | | | |       |   |   `-CStyleCastExpr 0x55887c3032f8 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | | | | |       |   |     `-ImplicitCastExpr 0x55887c3032e0 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | | | | |       |   |       `-ParenExpr 0x55887c3032c0 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | | | | |       |   |         `-DeclRefExpr 0x55887c303270 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:102:23> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | | | | |       |   `-ImplicitCastExpr 0x55887c303398 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | | | | |       |     `-IntegerLiteral 0x55887c303378 <col:74> 'int' 0
| | | | | |       `-CompoundStmt 0x55887c303b90 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:448:42, line:451:9>
| | | | | |         |-DoStmt 0x55887c3039c8 <line:423:5, line:427:19>
| | | | | |         | |-CompoundStmt 0x55887c3038b8 <line:423:8, line:427:5>
| | | | | |         | | `-IfStmt 0x55887c303898 <line:424:7, line:426:7>
| | | | | |         | |   |-CallExpr 0x55887c303428 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | | | | |         | |   | `-ImplicitCastExpr 0x55887c303410 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | | | |         | |   |   `-DeclRefExpr 0x55887c3033f0 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | | | | |         | |   `-CompoundStmt 0x55887c303880 <col:33, line:426:7>
| | | | | |         | |     `-DoStmt 0x55887c303860 <line:373:5, line:377:19>
| | | | | |         | |       |-CompoundStmt 0x55887c303750 <line:373:8, line:377:5>
| | | | | |         | |       | `-IfStmt 0x55887c303730 <line:374:7, line:376:7>
| | | | | |         | |       |   |-CallExpr 0x55887c303500 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | | | | |         | |       |   | |-ImplicitCastExpr 0x55887c3034e8 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | | | | |         | |       |   | | `-DeclRefExpr 0x55887c303448 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | | | | |         | |       |   | `-ImplicitCastExpr 0x55887c303528 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | | | | |         | |       |   |   `-IntegerLiteral 0x55887c303468 <col:22> 'unsigned int' 2147483648
| | | | | |         | |       |   `-CompoundStmt 0x55887c303718 <line:374:48, line:376:7>
| | | | | |         | |       |     `-CallExpr 0x55887c303680 <line:375:9, col:46> 'void'
| | | | | |         | |       |       |-ImplicitCastExpr 0x55887c303668 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | | | | |         | |       |       | `-DeclRefExpr 0x55887c303540 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | | | | |         | |       |       |-ImplicitCastExpr 0x55887c3036b8 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | | | | |         | |       |       | `-IntegerLiteral 0x55887c303560 <col:22> 'unsigned int' 2147483648
| | | | | |         | |       |       |-ImplicitCastExpr 0x55887c3036e8 <line:449:32> 'const CHAR8 *' <NoOp>
| | | | | |         | |       |       | `-ImplicitCastExpr 0x55887c3036d0 <col:32> 'char *' <ArrayToPointerDecay>
| | | | | |         | |       |       |   `-StringLiteral 0x55887c3035b8 <col:32> 'char[33]' lvalue "\nASSERT_EFI_ERROR (Status = %r)\n"
| | | | | |         | |       |       `-ImplicitCastExpr 0x55887c303700 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:102:23> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | | | | |         | |       |         `-DeclRefExpr 0x55887c3035f0 <col:23> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | | | | |         | |       `-ParenExpr 0x55887c303840 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | | | | |         | |         `-CStyleCastExpr 0x55887c303818 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | | | |         | |           `-ParenExpr 0x55887c3037f8 <col:26, col:31> 'int'
| | | | | |         | |             `-BinaryOperator 0x55887c3037a8 <col:27, col:30> 'int' '=='
| | | | | |         | |               |-IntegerLiteral 0x55887c303768 <col:27> 'int' 0
| | | | | |         | |               `-IntegerLiteral 0x55887c303788 <col:30> 'int' 1
| | | | | |         | `-ParenExpr 0x55887c3039a8 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | | | | |         |   `-CStyleCastExpr 0x55887c303980 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | | | |         |     `-ParenExpr 0x55887c303960 <col:26, col:31> 'int'
| | | | | |         |       `-BinaryOperator 0x55887c303910 <col:27, col:30> 'int' '=='
| | | | | |         |         |-IntegerLiteral 0x55887c3038d0 <col:27> 'int' 0
| | | | | |         |         `-IntegerLiteral 0x55887c3038f0 <col:30> 'int' 1
| | | | | |         `-CallExpr 0x55887c303ae0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:352:30, col:113> 'void'
| | | | | |           |-ImplicitCastExpr 0x55887c303ac8 <col:30> 'void (*)(const CHAR8 *, UINTN, const CHAR8 *)' <FunctionToPointerDecay>
| | | | | |           | `-DeclRefExpr 0x55887c3039e8 <col:30> 'void (const CHAR8 *, UINTN, const CHAR8 *)' Function 0x55887c18d0f8 'DebugAssert' 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| | | | | |           |-ImplicitCastExpr 0x55887c303b30 <<scratch space>:6:1> 'const CHAR8 *' <NoOp>
| | | | | |           | `-ImplicitCastExpr 0x55887c303b18 <col:1> 'char *' <ArrayToPointerDecay>
| | | | | |           |   `-StringLiteral 0x55887c303a08 <col:1> 'char[10]' lvalue "DxeLoad.c"
| | | | | |           |-ImplicitCastExpr 0x55887c303b48 <line:7:1> 'UINTN':'unsigned long long' <IntegralCast>
| | | | | |           | `-IntegerLiteral 0x55887c303a30 <col:1> 'int' 102
| | | | | |           `-ImplicitCastExpr 0x55887c303b78 <line:8:1> 'const CHAR8 *' <NoOp>
| | | | | |             `-ImplicitCastExpr 0x55887c303b60 <col:1> 'char *' <ArrayToPointerDecay>
| | | | | |               `-StringLiteral 0x55887c303a88 <col:1> 'char[39]' lvalue "!(((INTN)(RETURN_STATUS)(Status)) < 0)"
| | | | | `-ParenExpr 0x55887c303cf8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | | | |   `-CStyleCastExpr 0x55887c303cd0 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | | |     `-ParenExpr 0x55887c303cb0 <col:26, col:31> 'int'
| | | | |       `-BinaryOperator 0x55887c303c60 <col:27, col:30> 'int' '=='
| | | | |         |-IntegerLiteral 0x55887c303c20 <col:27> 'int' 0
| | | | |         `-IntegerLiteral 0x55887c303c40 <col:30> 'int' 1
| | | | |-IfStmt 0x55887c303f18 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:103:5, line:105:5>
| | | | | |-ParenExpr 0x55887c303e98 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | | | | | `-BinaryOperator 0x55887c303e78 <col:36, col:74> 'int' '<'
| | | | | |   |-ParenExpr 0x55887c303e20 <col:36, col:70> 'INTN':'long long'
| | | | | |   | `-CStyleCastExpr 0x55887c303df8 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | | | | |   |   `-CStyleCastExpr 0x55887c303dc0 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | | | | |   |     `-ImplicitCastExpr 0x55887c303da8 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | | | | |   |       `-ParenExpr 0x55887c303d88 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | | | | |   |         `-DeclRefExpr 0x55887c303d38 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:103:20> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | | | | |   `-ImplicitCastExpr 0x55887c303e60 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | | | | |     `-IntegerLiteral 0x55887c303e40 <col:74> 'int' 0
| | | | | `-CompoundStmt 0x55887c303f00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:103:29, line:105:5>
| | | | |   `-ReturnStmt 0x55887c303ef0 <line:104:7, col:14>
| | | | |     `-ImplicitCastExpr 0x55887c303ed8 <col:14> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | | | |       `-DeclRefExpr 0x55887c303eb8 <col:14> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | | | |-BinaryOperator 0x55887c304178 <line:111:5, col:61> 'EFI_STATUS':'unsigned long long' '='
| | | | | |-DeclRefExpr 0x55887c303f38 <col:5> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | | | | `-CallExpr 0x55887c304110 <col:14, col:61> 'EFI_STATUS':'unsigned long long'
| | | | |   |-ImplicitCastExpr 0x55887c3040f8 <col:14> 'EFI_STATUS (*)(EFI_PEI_SERVICES **, EFI_PEI_NOTIFY_DESCRIPTOR *, void *)' <FunctionToPointerDecay>
| | | | |   | `-DeclRefExpr 0x55887c303f58 <col:14> 'EFI_STATUS (EFI_PEI_SERVICES **, EFI_PEI_NOTIFY_DESCRIPTOR *, void *)' Function 0x55887c2f7328 'InstallIplPermanentMemoryPpis' 'EFI_STATUS (EFI_PEI_SERVICES **, EFI_PEI_NOTIFY_DESCRIPTOR *, void *)'
| | | | |   |-ImplicitCastExpr 0x55887c304148 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'EFI_PEI_SERVICES **' <NullToPointer>
| | | | |   | `-ParenExpr 0x55887c303fd8 <col:15, col:26> 'void *'
| | | | |   |   `-CStyleCastExpr 0x55887c303fb0 <col:16, col:25> 'void *' <NullToPointer>
| | | | |   |     `-IntegerLiteral 0x55887c303f78 <col:25> 'int' 0
| | | | |   |-ImplicitCastExpr 0x55887c304160 <col:15, col:26> 'EFI_PEI_NOTIFY_DESCRIPTOR *' <NullToPointer>
| | | | |   | `-ParenExpr 0x55887c304058 <col:15, col:26> 'void *'
| | | | |   |   `-CStyleCastExpr 0x55887c304030 <col:16, col:25> 'void *' <NullToPointer>
| | | | |   |     `-IntegerLiteral 0x55887c303ff8 <col:25> 'int' 0
| | | | |   `-ParenExpr 0x55887c3040d8 <col:15, col:26> 'void *'
| | | | |     `-CStyleCastExpr 0x55887c3040b0 <col:16, col:25> 'void *' <NullToPointer>
| | | | |       `-IntegerLiteral 0x55887c304078 <col:25> 'int' 0
| | | | `-DoStmt 0x55887c307c88 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:446:5, line:453:19>
| | | |   |-CompoundStmt 0x55887c307b78 <line:446:8, line:453:5>
| | | |   | `-IfStmt 0x55887c307b58 <line:447:7, line:452:7>
| | | |   |   |-CallExpr 0x55887c3041d0 <line:447:11, col:31> 'BOOLEAN':'unsigned char'
| | | |   |   | `-ImplicitCastExpr 0x55887c3041b8 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | |   |   |   `-DeclRefExpr 0x55887c304198 <col:11> 'BOOLEAN (void)' Function 0x55887c18d4f0 'DebugAssertEnabled' 'BOOLEAN (void)'
| | | |   |   `-CompoundStmt 0x55887c307b40 <col:34, line:452:7>
| | | |   |     `-IfStmt 0x55887c307b20 <line:448:9, line:451:9>
| | | |   |       |-ParenExpr 0x55887c304350 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | | |   |       | `-BinaryOperator 0x55887c304330 <col:36, col:74> 'int' '<'
| | | |   |       |   |-ParenExpr 0x55887c3042d8 <col:36, col:70> 'INTN':'long long'
| | | |   |       |   | `-CStyleCastExpr 0x55887c3042b0 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | | |   |       |   |   `-CStyleCastExpr 0x55887c304278 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | | |   |       |   |     `-ImplicitCastExpr 0x55887c304260 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | | |   |       |   |       `-ParenExpr 0x55887c304240 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | | |   |       |   |         `-DeclRefExpr 0x55887c3041f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:112:23> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | | |   |       |   `-ImplicitCastExpr 0x55887c304318 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | | |   |       |     `-IntegerLiteral 0x55887c3042f8 <col:74> 'int' 0
| | | |   |       `-CompoundStmt 0x55887c307b00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:448:42, line:451:9>
| | | |   |         |-DoStmt 0x55887c307970 <line:423:5, line:427:19>
| | | |   |         | |-CompoundStmt 0x55887c307860 <line:423:8, line:427:5>
| | | |   |         | | `-IfStmt 0x55887c307840 <line:424:7, line:426:7>
| | | |   |         | |   |-CallExpr 0x55887c3043a8 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | | |   |         | |   | `-ImplicitCastExpr 0x55887c304390 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | |   |         | |   |   `-DeclRefExpr 0x55887c304370 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | | |   |         | |   `-CompoundStmt 0x55887c304710 <col:33, line:426:7>
| | | |   |         | |     `-DoStmt 0x55887c3046f0 <line:373:5, line:377:19>
| | | |   |         | |       |-CompoundStmt 0x55887c3045e0 <line:373:8, line:377:5>
| | | |   |         | |       | `-IfStmt 0x55887c3045c0 <line:374:7, line:376:7>
| | | |   |         | |       |   |-CallExpr 0x55887c304420 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | | |   |         | |       |   | |-ImplicitCastExpr 0x55887c304408 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | | |   |         | |       |   | | `-DeclRefExpr 0x55887c3043c8 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | | |   |         | |       |   | `-ImplicitCastExpr 0x55887c304448 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | | |   |         | |       |   |   `-IntegerLiteral 0x55887c3043e8 <col:22> 'unsigned int' 2147483648
| | | |   |         | |       |   `-CompoundStmt 0x55887c3045a8 <line:374:48, line:376:7>
| | | |   |         | |       |     `-CallExpr 0x55887c304510 <line:375:9, col:46> 'void'
| | | |   |         | |       |       |-ImplicitCastExpr 0x55887c3044f8 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | | |   |         | |       |       | `-DeclRefExpr 0x55887c304460 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | | |   |         | |       |       |-ImplicitCastExpr 0x55887c304548 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | | |   |         | |       |       | `-IntegerLiteral 0x55887c304480 <col:22> 'unsigned int' 2147483648
| | | |   |         | |       |       |-ImplicitCastExpr 0x55887c304578 <line:449:32> 'const CHAR8 *' <NoOp>
| | | |   |         | |       |       | `-ImplicitCastExpr 0x55887c304560 <col:32> 'char *' <ArrayToPointerDecay>
| | | |   |         | |       |       |   `-StringLiteral 0x55887c3044a0 <col:32> 'char[33]' lvalue "\nASSERT_EFI_ERROR (Status = %r)\n"
| | | |   |         | |       |       `-ImplicitCastExpr 0x55887c304590 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:112:23> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | | |   |         | |       |         `-DeclRefExpr 0x55887c3044d8 <col:23> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | | |   |         | |       `-ParenExpr 0x55887c3046d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | | |   |         | |         `-CStyleCastExpr 0x55887c3046a8 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | |   |         | |           `-ParenExpr 0x55887c304688 <col:26, col:31> 'int'
| | | |   |         | |             `-BinaryOperator 0x55887c304638 <col:27, col:30> 'int' '=='
| | | |   |         | |               |-IntegerLiteral 0x55887c3045f8 <col:27> 'int' 0
| | | |   |         | |               `-IntegerLiteral 0x55887c304618 <col:30> 'int' 1
| | | |   |         | `-ParenExpr 0x55887c307950 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | | |   |         |   `-CStyleCastExpr 0x55887c307928 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | |   |         |     `-ParenExpr 0x55887c307908 <col:26, col:31> 'int'
| | | |   |         |       `-BinaryOperator 0x55887c3078b8 <col:27, col:30> 'int' '=='
| | | |   |         |         |-IntegerLiteral 0x55887c307878 <col:27> 'int' 0
| | | |   |         |         `-IntegerLiteral 0x55887c307898 <col:30> 'int' 1
| | | |   |         `-CallExpr 0x55887c307a50 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:352:30, col:113> 'void'
| | | |   |           |-ImplicitCastExpr 0x55887c307a38 <col:30> 'void (*)(const CHAR8 *, UINTN, const CHAR8 *)' <FunctionToPointerDecay>
| | | |   |           | `-DeclRefExpr 0x55887c307990 <col:30> 'void (const CHAR8 *, UINTN, const CHAR8 *)' Function 0x55887c18d0f8 'DebugAssert' 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| | | |   |           |-ImplicitCastExpr 0x55887c307aa0 <<scratch space>:9:1> 'const CHAR8 *' <NoOp>
| | | |   |           | `-ImplicitCastExpr 0x55887c307a88 <col:1> 'char *' <ArrayToPointerDecay>
| | | |   |           |   `-StringLiteral 0x55887c3079b0 <col:1> 'char[10]' lvalue "DxeLoad.c"
| | | |   |           |-ImplicitCastExpr 0x55887c307ab8 <line:10:1> 'UINTN':'unsigned long long' <IntegralCast>
| | | |   |           | `-IntegerLiteral 0x55887c3079d8 <col:1> 'int' 112
| | | |   |           `-ImplicitCastExpr 0x55887c307ae8 <line:11:1> 'const CHAR8 *' <NoOp>
| | | |   |             `-ImplicitCastExpr 0x55887c307ad0 <col:1> 'char *' <ArrayToPointerDecay>
| | | |   |               `-StringLiteral 0x55887c3079f8 <col:1> 'char[39]' lvalue "!(((INTN)(RETURN_STATUS)(Status)) < 0)"
| | | |   `-ParenExpr 0x55887c307c68 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | | |     `-CStyleCastExpr 0x55887c307c40 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | |       `-ParenExpr 0x55887c307c20 <col:26, col:31> 'int'
| | | |         `-BinaryOperator 0x55887c307bd0 <col:27, col:30> 'int' '=='
| | | |           |-IntegerLiteral 0x55887c307b90 <col:27> 'int' 0
| | | |           `-IntegerLiteral 0x55887c307bb0 <col:30> 'int' 1
| | | `-CompoundStmt 0x55887c308820 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:113:10, line:120:3>
| | |   |-BinaryOperator 0x55887c307e08 <line:118:5, col:64> 'EFI_STATUS':'unsigned long long' '='
| | |   | |-DeclRefExpr 0x55887c307cf8 <col:5> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | |   | `-CallExpr 0x55887c307de0 <col:14, col:64> 'EFI_STATUS':'unsigned long long'
| | |   |   |-ImplicitCastExpr 0x55887c307dc8 <col:14> 'EFI_STATUS (*)(const EFI_PEI_NOTIFY_DESCRIPTOR *)' <FunctionToPointerDecay>
| | |   |   | `-DeclRefExpr 0x55887c307d18 <col:14> 'EFI_STATUS (const EFI_PEI_NOTIFY_DESCRIPTOR *)' Function 0x55887c139698 'PeiServicesNotifyPpi' 'EFI_STATUS (const EFI_PEI_NOTIFY_DESCRIPTOR *)'
| | |   |   `-UnaryOperator 0x55887c307d58 <col:36, col:37> 'const EFI_PEI_NOTIFY_DESCRIPTOR *' prefix '&' cannot overflow
| | |   |     `-DeclRefExpr 0x55887c307d38 <col:37> 'const EFI_PEI_NOTIFY_DESCRIPTOR':'const struct _EFI_PEI_NOTIFY_DESCRIPTOR' lvalue Var 0x55887c2ff8b8 'mMemoryDiscoveredNotifyList' 'const EFI_PEI_NOTIFY_DESCRIPTOR':'const struct _EFI_PEI_NOTIFY_DESCRIPTOR'
| | |   `-DoStmt 0x55887c308800 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:446:5, line:453:19>
| | |     |-CompoundStmt 0x55887c3086f0 <line:446:8, line:453:5>
| | |     | `-IfStmt 0x55887c3086d0 <line:447:7, line:452:7>
| | |     |   |-CallExpr 0x55887c307e60 <line:447:11, col:31> 'BOOLEAN':'unsigned char'
| | |     |   | `-ImplicitCastExpr 0x55887c307e48 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |     |   |   `-DeclRefExpr 0x55887c307e28 <col:11> 'BOOLEAN (void)' Function 0x55887c18d4f0 'DebugAssertEnabled' 'BOOLEAN (void)'
| | |     |   `-CompoundStmt 0x55887c3086b8 <col:34, line:452:7>
| | |     |     `-IfStmt 0x55887c308698 <line:448:9, line:451:9>
| | |     |       |-ParenExpr 0x55887c307fe0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | |     |       | `-BinaryOperator 0x55887c307fc0 <col:36, col:74> 'int' '<'
| | |     |       |   |-ParenExpr 0x55887c307f68 <col:36, col:70> 'INTN':'long long'
| | |     |       |   | `-CStyleCastExpr 0x55887c307f40 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | |     |       |   |   `-CStyleCastExpr 0x55887c307f08 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |     |       |   |     `-ImplicitCastExpr 0x55887c307ef0 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | |     |       |   |       `-ParenExpr 0x55887c307ed0 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | |     |       |   |         `-DeclRefExpr 0x55887c307e80 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:119:23> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | |     |       |   `-ImplicitCastExpr 0x55887c307fa8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | |     |       |     `-IntegerLiteral 0x55887c307f88 <col:74> 'int' 0
| | |     |       `-CompoundStmt 0x55887c308678 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:448:42, line:451:9>
| | |     |         |-DoStmt 0x55887c3084e8 <line:423:5, line:427:19>
| | |     |         | |-CompoundStmt 0x55887c3083d8 <line:423:8, line:427:5>
| | |     |         | | `-IfStmt 0x55887c3083b8 <line:424:7, line:426:7>
| | |     |         | |   |-CallExpr 0x55887c308038 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | |     |         | |   | `-ImplicitCastExpr 0x55887c308020 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |     |         | |   |   `-DeclRefExpr 0x55887c308000 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | |     |         | |   `-CompoundStmt 0x55887c3083a0 <col:33, line:426:7>
| | |     |         | |     `-DoStmt 0x55887c308380 <line:373:5, line:377:19>
| | |     |         | |       |-CompoundStmt 0x55887c308270 <line:373:8, line:377:5>
| | |     |         | |       | `-IfStmt 0x55887c308250 <line:374:7, line:376:7>
| | |     |         | |       |   |-CallExpr 0x55887c3080b0 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | |     |         | |       |   | |-ImplicitCastExpr 0x55887c308098 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | |     |         | |       |   | | `-DeclRefExpr 0x55887c308058 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | |     |         | |       |   | `-ImplicitCastExpr 0x55887c3080d8 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | |     |         | |       |   |   `-IntegerLiteral 0x55887c308078 <col:22> 'unsigned int' 2147483648
| | |     |         | |       |   `-CompoundStmt 0x55887c308238 <line:374:48, line:376:7>
| | |     |         | |       |     `-CallExpr 0x55887c3081a0 <line:375:9, col:46> 'void'
| | |     |         | |       |       |-ImplicitCastExpr 0x55887c308188 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | |     |         | |       |       | `-DeclRefExpr 0x55887c3080f0 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | |     |         | |       |       |-ImplicitCastExpr 0x55887c3081d8 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | |     |         | |       |       | `-IntegerLiteral 0x55887c308110 <col:22> 'unsigned int' 2147483648
| | |     |         | |       |       |-ImplicitCastExpr 0x55887c308208 <line:449:32> 'const CHAR8 *' <NoOp>
| | |     |         | |       |       | `-ImplicitCastExpr 0x55887c3081f0 <col:32> 'char *' <ArrayToPointerDecay>
| | |     |         | |       |       |   `-StringLiteral 0x55887c308130 <col:32> 'char[33]' lvalue "\nASSERT_EFI_ERROR (Status = %r)\n"
| | |     |         | |       |       `-ImplicitCastExpr 0x55887c308220 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:119:23> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | |     |         | |       |         `-DeclRefExpr 0x55887c308168 <col:23> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | |     |         | |       `-ParenExpr 0x55887c308360 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |     |         | |         `-CStyleCastExpr 0x55887c308338 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |     |         | |           `-ParenExpr 0x55887c308318 <col:26, col:31> 'int'
| | |     |         | |             `-BinaryOperator 0x55887c3082c8 <col:27, col:30> 'int' '=='
| | |     |         | |               |-IntegerLiteral 0x55887c308288 <col:27> 'int' 0
| | |     |         | |               `-IntegerLiteral 0x55887c3082a8 <col:30> 'int' 1
| | |     |         | `-ParenExpr 0x55887c3084c8 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | |     |         |   `-CStyleCastExpr 0x55887c3084a0 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |     |         |     `-ParenExpr 0x55887c308480 <col:26, col:31> 'int'
| | |     |         |       `-BinaryOperator 0x55887c308430 <col:27, col:30> 'int' '=='
| | |     |         |         |-IntegerLiteral 0x55887c3083f0 <col:27> 'int' 0
| | |     |         |         `-IntegerLiteral 0x55887c308410 <col:30> 'int' 1
| | |     |         `-CallExpr 0x55887c3085c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:352:30, col:113> 'void'
| | |     |           |-ImplicitCastExpr 0x55887c3085b0 <col:30> 'void (*)(const CHAR8 *, UINTN, const CHAR8 *)' <FunctionToPointerDecay>
| | |     |           | `-DeclRefExpr 0x55887c308508 <col:30> 'void (const CHAR8 *, UINTN, const CHAR8 *)' Function 0x55887c18d0f8 'DebugAssert' 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| | |     |           |-ImplicitCastExpr 0x55887c308618 <<scratch space>:12:1> 'const CHAR8 *' <NoOp>
| | |     |           | `-ImplicitCastExpr 0x55887c308600 <col:1> 'char *' <ArrayToPointerDecay>
| | |     |           |   `-StringLiteral 0x55887c308528 <col:1> 'char[10]' lvalue "DxeLoad.c"
| | |     |           |-ImplicitCastExpr 0x55887c308630 <line:13:1> 'UINTN':'unsigned long long' <IntegralCast>
| | |     |           | `-IntegerLiteral 0x55887c308550 <col:1> 'int' 119
| | |     |           `-ImplicitCastExpr 0x55887c308660 <line:14:1> 'const CHAR8 *' <NoOp>
| | |     |             `-ImplicitCastExpr 0x55887c308648 <col:1> 'char *' <ArrayToPointerDecay>
| | |     |               `-StringLiteral 0x55887c308570 <col:1> 'char[39]' lvalue "!(((INTN)(RETURN_STATUS)(Status)) < 0)"
| | |     `-ParenExpr 0x55887c3087e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |       `-CStyleCastExpr 0x55887c3087b8 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |         `-ParenExpr 0x55887c308798 <col:26, col:31> 'int'
| | |           `-BinaryOperator 0x55887c308748 <col:27, col:30> 'int' '=='
| | |             |-IntegerLiteral 0x55887c308708 <col:27> 'int' 0
| | |             `-IntegerLiteral 0x55887c308728 <col:30> 'int' 1
| | |-BinaryOperator 0x55887c3089f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:125:3, col:50> 'EFI_STATUS':'unsigned long long' '='
| | | |-DeclRefExpr 0x55887c308870 <col:3> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | | `-CallExpr 0x55887c308960 <col:12, col:50> 'EFI_STATUS':'unsigned long long'
| | |   |-ImplicitCastExpr 0x55887c308948 <col:12> 'EFI_STATUS (*)(const EFI_PEI_PPI_DESCRIPTOR *)' <FunctionToPointerDecay>
| | |   | `-DeclRefExpr 0x55887c308890 <col:12> 'EFI_STATUS (const EFI_PEI_PPI_DESCRIPTOR *)' Function 0x55887c138e88 'PeiServicesInstallPpi' 'EFI_STATUS (const EFI_PEI_PPI_DESCRIPTOR *)'
| | |   `-UnaryOperator 0x55887c3088d0 <col:35, col:36> 'const EFI_PEI_PPI_DESCRIPTOR *' prefix '&' cannot overflow
| | |     `-DeclRefExpr 0x55887c3088b0 <col:36> 'const EFI_PEI_PPI_DESCRIPTOR':'const EFI_PEI_PPI_DESCRIPTOR' lvalue Var 0x55887c2fee10 'mDxeIplPpiList' 'const EFI_PEI_PPI_DESCRIPTOR':'const EFI_PEI_PPI_DESCRIPTOR'
| | |-DoStmt 0x55887c3093e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:446:5, line:453:19>
| | | |-CompoundStmt 0x55887c3092d8 <line:446:8, line:453:5>
| | | | `-IfStmt 0x55887c3092b8 <line:447:7, line:452:7>
| | | |   |-CallExpr 0x55887c308a48 <line:447:11, col:31> 'BOOLEAN':'unsigned char'
| | | |   | `-ImplicitCastExpr 0x55887c308a30 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | |   |   `-DeclRefExpr 0x55887c308a10 <col:11> 'BOOLEAN (void)' Function 0x55887c18d4f0 'DebugAssertEnabled' 'BOOLEAN (void)'
| | | |   `-CompoundStmt 0x55887c3092a0 <col:34, line:452:7>
| | | |     `-IfStmt 0x55887c309280 <line:448:9, line:451:9>
| | | |       |-ParenExpr 0x55887c308bc8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | | |       | `-BinaryOperator 0x55887c308ba8 <col:36, col:74> 'int' '<'
| | | |       |   |-ParenExpr 0x55887c308b50 <col:36, col:70> 'INTN':'long long'
| | | |       |   | `-CStyleCastExpr 0x55887c308b28 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | | |       |   |   `-CStyleCastExpr 0x55887c308af0 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | | |       |   |     `-ImplicitCastExpr 0x55887c308ad8 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | | |       |   |       `-ParenExpr 0x55887c308ab8 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | | |       |   |         `-DeclRefExpr 0x55887c308a68 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:126:21> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | | |       |   `-ImplicitCastExpr 0x55887c308b90 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | | |       |     `-IntegerLiteral 0x55887c308b70 <col:74> 'int' 0
| | | |       `-CompoundStmt 0x55887c309260 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:448:42, line:451:9>
| | | |         |-DoStmt 0x55887c3090d0 <line:423:5, line:427:19>
| | | |         | |-CompoundStmt 0x55887c308fc0 <line:423:8, line:427:5>
| | | |         | | `-IfStmt 0x55887c308fa0 <line:424:7, line:426:7>
| | | |         | |   |-CallExpr 0x55887c308c20 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | | |         | |   | `-ImplicitCastExpr 0x55887c308c08 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | |         | |   |   `-DeclRefExpr 0x55887c308be8 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | | |         | |   `-CompoundStmt 0x55887c308f88 <col:33, line:426:7>
| | | |         | |     `-DoStmt 0x55887c308f68 <line:373:5, line:377:19>
| | | |         | |       |-CompoundStmt 0x55887c308e58 <line:373:8, line:377:5>
| | | |         | |       | `-IfStmt 0x55887c308e38 <line:374:7, line:376:7>
| | | |         | |       |   |-CallExpr 0x55887c308c98 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | | |         | |       |   | |-ImplicitCastExpr 0x55887c308c80 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | | |         | |       |   | | `-DeclRefExpr 0x55887c308c40 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | | |         | |       |   | `-ImplicitCastExpr 0x55887c308cc0 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | | |         | |       |   |   `-IntegerLiteral 0x55887c308c60 <col:22> 'unsigned int' 2147483648
| | | |         | |       |   `-CompoundStmt 0x55887c308e20 <line:374:48, line:376:7>
| | | |         | |       |     `-CallExpr 0x55887c308d88 <line:375:9, col:46> 'void'
| | | |         | |       |       |-ImplicitCastExpr 0x55887c308d70 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | | |         | |       |       | `-DeclRefExpr 0x55887c308cd8 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | | |         | |       |       |-ImplicitCastExpr 0x55887c308dc0 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | | |         | |       |       | `-IntegerLiteral 0x55887c308cf8 <col:22> 'unsigned int' 2147483648
| | | |         | |       |       |-ImplicitCastExpr 0x55887c308df0 <line:449:32> 'const CHAR8 *' <NoOp>
| | | |         | |       |       | `-ImplicitCastExpr 0x55887c308dd8 <col:32> 'char *' <ArrayToPointerDecay>
| | | |         | |       |       |   `-StringLiteral 0x55887c308d18 <col:32> 'char[33]' lvalue "\nASSERT_EFI_ERROR (Status = %r)\n"
| | | |         | |       |       `-ImplicitCastExpr 0x55887c308e08 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:126:21> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | | |         | |       |         `-DeclRefExpr 0x55887c308d50 <col:21> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| | | |         | |       `-ParenExpr 0x55887c308f48 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | | |         | |         `-CStyleCastExpr 0x55887c308f20 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | |         | |           `-ParenExpr 0x55887c308f00 <col:26, col:31> 'int'
| | | |         | |             `-BinaryOperator 0x55887c308eb0 <col:27, col:30> 'int' '=='
| | | |         | |               |-IntegerLiteral 0x55887c308e70 <col:27> 'int' 0
| | | |         | |               `-IntegerLiteral 0x55887c308e90 <col:30> 'int' 1
| | | |         | `-ParenExpr 0x55887c3090b0 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | | |         |   `-CStyleCastExpr 0x55887c309088 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | |         |     `-ParenExpr 0x55887c309068 <col:26, col:31> 'int'
| | | |         |       `-BinaryOperator 0x55887c309018 <col:27, col:30> 'int' '=='
| | | |         |         |-IntegerLiteral 0x55887c308fd8 <col:27> 'int' 0
| | | |         |         `-IntegerLiteral 0x55887c308ff8 <col:30> 'int' 1
| | | |         `-CallExpr 0x55887c3091b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:352:30, col:113> 'void'
| | | |           |-ImplicitCastExpr 0x55887c309198 <col:30> 'void (*)(const CHAR8 *, UINTN, const CHAR8 *)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x55887c3090f0 <col:30> 'void (const CHAR8 *, UINTN, const CHAR8 *)' Function 0x55887c18d0f8 'DebugAssert' 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| | | |           |-ImplicitCastExpr 0x55887c309200 <<scratch space>:15:1> 'const CHAR8 *' <NoOp>
| | | |           | `-ImplicitCastExpr 0x55887c3091e8 <col:1> 'char *' <ArrayToPointerDecay>
| | | |           |   `-StringLiteral 0x55887c309110 <col:1> 'char[10]' lvalue "DxeLoad.c"
| | | |           |-ImplicitCastExpr 0x55887c309218 <line:16:1> 'UINTN':'unsigned long long' <IntegralCast>
| | | |           | `-IntegerLiteral 0x55887c309138 <col:1> 'int' 126
| | | |           `-ImplicitCastExpr 0x55887c309248 <line:17:1> 'const CHAR8 *' <NoOp>
| | | |             `-ImplicitCastExpr 0x55887c309230 <col:1> 'char *' <ArrayToPointerDecay>
| | | |               `-StringLiteral 0x55887c309158 <col:1> 'char[39]' lvalue "!(((INTN)(RETURN_STATUS)(Status)) < 0)"
| | | `-ParenExpr 0x55887c3093c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |   `-CStyleCastExpr 0x55887c3093a0 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |     `-ParenExpr 0x55887c309380 <col:26, col:31> 'int'
| | |       `-BinaryOperator 0x55887c309330 <col:27, col:30> 'int' '=='
| | |         |-IntegerLiteral 0x55887c3092f0 <col:27> 'int' 0
| | |         `-IntegerLiteral 0x55887c309310 <col:30> 'int' 1
| | `-ReturnStmt 0x55887c309440 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:128:3, col:10>
| |   `-ImplicitCastExpr 0x55887c309428 <col:10> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| |     `-DeclRefExpr 0x55887c309408 <col:10> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c2ffd40 'Status' 'EFI_STATUS':'unsigned long long'
| `-FullComment 0x55887c486d60 <line:54:1, line:63:78>
|   |-ParagraphComment 0x55887c486910 <line:54:1, col:30>
|   | `-TextComment 0x55887c4868e0 <col:1, col:30> Text="  Entry point of DXE IPL PEIM."
|   |-ParagraphComment 0x55887c486980 <line:56:1, line:57:46>
|   | |-TextComment 0x55887c486930 <line:56:1, col:54> Text="  This function installs DXE IPL PPI.  It also reloads"
|   | `-TextComment 0x55887c486950 <line:57:1, col:46> Text="  itself to memory on non-S3 resume boot path."
|   |-ParagraphComment 0x55887c4869d0 <line:59:1, col:2>
|   | `-TextComment 0x55887c4869a0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4869f0 <col:3, line:60:2> [in] implicitly Param="FileHandle" ParamIndex=0
|   | `-ParagraphComment 0x55887c486aa0 <line:59:21, line:60:2>
|   |   |-TextComment 0x55887c486a50 <line:59:21, col:55> Text="  Handle of the file being invoked."
|   |   `-TextComment 0x55887c486a70 <line:60:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c486ac0 <col:3, col:66> [in] implicitly Param="PeiServices" ParamIndex=1
|   | `-ParagraphComment 0x55887c486b50 <col:22, col:66>
|   |   `-TextComment 0x55887c486b20 <col:22, col:66> Text=" Describes the list of possible PEI Services."
|   |-ParagraphComment 0x55887c486ba0 <line:62:1, col:2>
|   | `-TextComment 0x55887c486b70 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c486bc0 <col:3, line:63:2> Name="retval" Arg[0]="EFI_SUCESS"
|   | `-ParagraphComment 0x55887c486c60 <line:62:21, line:63:2>
|   |   |-TextComment 0x55887c486c10 <line:62:21, col:76> Text="  The entry point of DXE IPL PEIM executes successfully."
|   |   `-TextComment 0x55887c486c30 <line:63:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c486c80 <col:3, col:78> Name="retval" Arg[0]="Others"
|     `-ParagraphComment 0x55887c486d00 <col:17, col:78>
|       `-TextComment 0x55887c486cd0 <col:17, col:78> Text="      Some error occurs during the execution of this function."
|-FunctionDecl 0x55887c309678 prev 0x55887c2f7328 <line:142:1, line:182:1> line:144:1 used InstallIplPermanentMemoryPpis 'EFI_STATUS (EFI_PEI_SERVICES **, EFI_PEI_NOTIFY_DESCRIPTOR *, void *)'
| |-ParmVarDecl 0x55887c3094e0 <line:145:6, col:35> col:35 PeiServices 'EFI_PEI_SERVICES **'
| |-ParmVarDecl 0x55887c309558 <line:146:6, col:34> col:34 NotifyDescriptor 'EFI_PEI_NOTIFY_DESCRIPTOR *'
| |-ParmVarDecl 0x55887c3095d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:147:34> col:34 Ppi 'void *'
| |-CompoundStmt 0x55887c198858 <line:149:1, line:182:1>
| | |-DeclStmt 0x55887c3097a8 <line:150:3, col:33>
| | | `-VarDecl 0x55887c309740 <col:3, col:27> col:27 used Status 'EFI_STATUS':'unsigned long long'
| | |-DeclStmt 0x55887c309f00 <line:151:3, col:51>
| | | `-VarDecl 0x55887c3097d0 <col:3, col:28> col:28 used ExtractHandlerGuidTable 'EFI_GUID *'
| | |-DeclStmt 0x55887c309f90 <line:152:3, col:47>
| | | `-VarDecl 0x55887c309f28 <col:3, col:27> col:27 used ExtractHandlerNumber 'UINTN':'unsigned long long'
| | |-DeclStmt 0x55887c30a020 <line:153:3, col:35>
| | | `-VarDecl 0x55887c309fb8 <col:3, col:28> col:28 used GuidPpi 'EFI_PEI_PPI_DESCRIPTOR *'
| | |-BinaryOperator 0x55887c30a178 <line:158:3, col:83> 'UINTN':'unsigned long long' '='
| | | |-DeclRefExpr 0x55887c30a038 <col:3> 'UINTN':'unsigned long long' lvalue Var 0x55887c309f28 'ExtractHandlerNumber' 'UINTN':'unsigned long long'
| | | `-CallExpr 0x55887c30a150 <col:26, col:83> 'UINTN':'unsigned long long'
| | |   |-ImplicitCastExpr 0x55887c30a138 <col:26> 'UINTN (*)(GUID **)' <FunctionToPointerDecay>
| | |   | `-DeclRefExpr 0x55887c30a058 <col:26> 'UINTN (GUID **)' Function 0x55887c2d4608 'ExtractGuidedSectionGetGuidList' 'UINTN (GUID **)'
| | |   `-UnaryOperator 0x55887c30a0c8 <col:59, col:60> 'EFI_GUID **' prefix '&' cannot overflow
| | |     `-DeclRefExpr 0x55887c30a078 <col:60> 'EFI_GUID *' lvalue Var 0x55887c3097d0 'ExtractHandlerGuidTable' 'EFI_GUID *'
| | |-IfStmt 0x55887c30b810 <line:163:3, line:173:3>
| | | |-BinaryOperator 0x55887c30a208 <line:163:7, col:30> 'int' '>'
| | | | |-ImplicitCastExpr 0x55887c30a1d8 <col:7> 'UINTN':'unsigned long long' <LValueToRValue>
| | | | | `-DeclRefExpr 0x55887c30a198 <col:7> 'UINTN':'unsigned long long' lvalue Var 0x55887c309f28 'ExtractHandlerNumber' 'UINTN':'unsigned long long'
| | | | `-ImplicitCastExpr 0x55887c30a1f0 <col:30> 'unsigned long long' <IntegralCast>
| | | |   `-IntegerLiteral 0x55887c30a1b8 <col:30> 'int' 0
| | | `-CompoundStmt 0x55887c30b7e8 <col:33, line:173:3>
| | |   |-BinaryOperator 0x55887c30a3e0 <line:164:5, col:109> 'EFI_PEI_PPI_DESCRIPTOR *' '='
| | |   | |-DeclRefExpr 0x55887c30a228 <col:5> 'EFI_PEI_PPI_DESCRIPTOR *' lvalue Var 0x55887c309fb8 'GuidPpi' 'EFI_PEI_PPI_DESCRIPTOR *'
| | |   | `-CStyleCastExpr 0x55887c30a3b8 <col:15, col:109> 'EFI_PEI_PPI_DESCRIPTOR *' <BitCast>
| | |   |   `-CallExpr 0x55887c30a380 <col:41, col:109> 'void *'
| | |   |     |-ImplicitCastExpr 0x55887c30a368 <col:41> 'void *(*)(UINTN)' <FunctionToPointerDecay>
| | |   |     | `-DeclRefExpr 0x55887c30a248 <col:41> 'void *(UINTN)' Function 0x55887c2de540 'AllocatePool' 'void *(UINTN)'
| | |   |     `-BinaryOperator 0x55887c30a2e8 <col:55, col:108> 'unsigned long long' '*'
| | |   |       |-ImplicitCastExpr 0x55887c30a2b8 <col:55> 'UINTN':'unsigned long long' <LValueToRValue>
| | |   |       | `-DeclRefExpr 0x55887c30a268 <col:55> 'UINTN':'unsigned long long' lvalue Var 0x55887c309f28 'ExtractHandlerNumber' 'UINTN':'unsigned long long'
| | |   |       `-ImplicitCastExpr 0x55887c30a2d0 <col:78, col:108> 'unsigned long long' <IntegralCast>
| | |   |         `-UnaryExprOrTypeTraitExpr 0x55887c30a298 <col:78, col:108> 'unsigned long' sizeof 'EFI_PEI_PPI_DESCRIPTOR':'EFI_PEI_PPI_DESCRIPTOR'
| | |   |-DoStmt 0x55887c30a8b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:397:5, line:404:19>
| | |   | |-CompoundStmt 0x55887c30a7a0 <line:397:8, line:404:5>
| | |   | | `-IfStmt 0x55887c30a780 <line:398:7, line:403:7>
| | |   | |   |-CallExpr 0x55887c30a438 <line:398:11, col:31> 'BOOLEAN':'unsigned char'
| | |   | |   | `-ImplicitCastExpr 0x55887c30a420 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | |   |   `-DeclRefExpr 0x55887c30a400 <col:11> 'BOOLEAN (void)' Function 0x55887c18d4f0 'DebugAssertEnabled' 'BOOLEAN (void)'
| | |   | |   `-CompoundStmt 0x55887c30a768 <col:34, line:403:7>
| | |   | |     `-IfStmt 0x55887c30a748 <line:399:9, line:402:9>
| | |   | |       |-UnaryOperator 0x55887c30a568 <line:399:13, col:25> 'int' prefix '!' cannot overflow
| | |   | |       | `-ParenExpr 0x55887c30a548 <col:14, col:25> 'int'
| | |   | |       |   `-BinaryOperator 0x55887c30a528 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:165:13, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:26> 'int' '!='
| | |   | |       |     |-ImplicitCastExpr 0x55887c30a4f8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:165:13> 'EFI_PEI_PPI_DESCRIPTOR *' <LValueToRValue>
| | |   | |       |     | `-DeclRefExpr 0x55887c30a458 <col:13> 'EFI_PEI_PPI_DESCRIPTOR *' lvalue Var 0x55887c309fb8 'GuidPpi' 'EFI_PEI_PPI_DESCRIPTOR *'
| | |   | |       |     `-ImplicitCastExpr 0x55887c30a510 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'EFI_PEI_PPI_DESCRIPTOR *' <BitCast>
| | |   | |       |       `-ParenExpr 0x55887c30a4d8 <col:15, col:26> 'void *'
| | |   | |       |         `-CStyleCastExpr 0x55887c30a4b0 <col:16, col:25> 'void *' <NullToPointer>
| | |   | |       |           `-IntegerLiteral 0x55887c30a478 <col:25> 'int' 0
| | |   | |       `-CompoundStmt 0x55887c30a728 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:399:28, line:402:9>
| | |   | |         |-CallExpr 0x55887c30a670 <line:352:30, col:113> 'void'
| | |   | |         | |-ImplicitCastExpr 0x55887c30a658 <col:30> 'void (*)(const CHAR8 *, UINTN, const CHAR8 *)' <FunctionToPointerDecay>
| | |   | |         | | `-DeclRefExpr 0x55887c30a580 <col:30> 'void (const CHAR8 *, UINTN, const CHAR8 *)' Function 0x55887c18d0f8 'DebugAssert' 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| | |   | |         | |-ImplicitCastExpr 0x55887c30a6c0 <<scratch space>:18:1> 'const CHAR8 *' <NoOp>
| | |   | |         | | `-ImplicitCastExpr 0x55887c30a6a8 <col:1> 'char *' <ArrayToPointerDecay>
| | |   | |         | |   `-StringLiteral 0x55887c30a5a0 <col:1> 'char[10]' lvalue "DxeLoad.c"
| | |   | |         | |-ImplicitCastExpr 0x55887c30a6d8 <line:19:1> 'UINTN':'unsigned long long' <IntegralCast>
| | |   | |         | | `-IntegerLiteral 0x55887c30a5c8 <col:1> 'int' 165
| | |   | |         | `-ImplicitCastExpr 0x55887c30a708 <line:20:1> 'const CHAR8 *' <NoOp>
| | |   | |         |   `-ImplicitCastExpr 0x55887c30a6f0 <col:1> 'char *' <ArrayToPointerDecay>
| | |   | |         |     `-StringLiteral 0x55887c30a628 <col:1> 'char[24]' lvalue "GuidPpi != ((void *) 0)"
| | |   | |         `-NullStmt 0x55887c30a720 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:401:34>
| | |   | `-ParenExpr 0x55887c30a890 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |   |   `-CStyleCastExpr 0x55887c30a868 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   |     `-ParenExpr 0x55887c30a848 <col:26, col:31> 'int'
| | |   |       `-BinaryOperator 0x55887c30a7f8 <col:27, col:30> 'int' '=='
| | |   |         |-IntegerLiteral 0x55887c30a7b8 <col:27> 'int' 0
| | |   |         `-IntegerLiteral 0x55887c30a7d8 <col:30> 'int' 1
| | |   `-WhileStmt 0x55887c30b7c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:166:5, line:172:5>
| | |     |-BinaryOperator 0x55887c30a940 <line:166:12, col:37> 'int' '>'
| | |     | |-UnaryOperator 0x55887c30a8f0 <col:12, col:32> 'UINTN':'unsigned long long' postfix '--'
| | |     | | `-DeclRefExpr 0x55887c30a8d0 <col:12> 'UINTN':'unsigned long long' lvalue Var 0x55887c309f28 'ExtractHandlerNumber' 'UINTN':'unsigned long long'
| | |     | `-ImplicitCastExpr 0x55887c30a928 <col:37> 'unsigned long long' <IntegralCast>
| | |     |   `-IntegerLiteral 0x55887c30a908 <col:37> 'int' 0
| | |     `-CompoundStmt 0x55887c30b790 <col:40, line:172:5>
| | |       |-BinaryOperator 0x55887c30aa58 <line:167:7, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiPeiCis.h:85:49> 'UINTN':'unsigned long long' '='
| | |       | |-MemberExpr 0x55887c30a998 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:167:7, col:16> 'UINTN':'unsigned long long' lvalue ->Flags 0x55887c0ddda8
| | |       | | `-ImplicitCastExpr 0x55887c30a980 <col:7> 'EFI_PEI_PPI_DESCRIPTOR *' <LValueToRValue>
| | |       | |   `-DeclRefExpr 0x55887c30a960 <col:7> 'EFI_PEI_PPI_DESCRIPTOR *' lvalue Var 0x55887c309fb8 'GuidPpi' 'EFI_PEI_PPI_DESCRIPTOR *'
| | |       | `-ImplicitCastExpr 0x55887c30aa40 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiPeiCis.h:81:49, line:85:49> 'UINTN':'unsigned long long' <IntegralCast>
| | |       |   `-BinaryOperator 0x55887c30aa20 <line:81:49, line:85:49> 'unsigned int' '|'
| | |       |     |-ImplicitCastExpr 0x55887c30aa08 <line:81:49> 'unsigned int' <IntegralCast>
| | |       |     | `-IntegerLiteral 0x55887c30a9c8 <col:49> 'int' 16
| | |       |     `-IntegerLiteral 0x55887c30a9e8 <line:85:49> 'unsigned int' 2147483648
| | |       |-BinaryOperator 0x55887c30ab58 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:168:7, col:33> 'void *' '='
| | |       | |-MemberExpr 0x55887c30aab0 <col:7, col:16> 'void *' lvalue ->Ppi 0x55887c0ddf00
| | |       | | `-ImplicitCastExpr 0x55887c30aa98 <col:7> 'EFI_PEI_PPI_DESCRIPTOR *' <LValueToRValue>
| | |       | |   `-DeclRefExpr 0x55887c30aa78 <col:7> 'EFI_PEI_PPI_DESCRIPTOR *' lvalue Var 0x55887c309fb8 'GuidPpi' 'EFI_PEI_PPI_DESCRIPTOR *'
| | |       | `-CStyleCastExpr 0x55887c30ab30 <col:24, col:33> 'void *' <BitCast>
| | |       |   `-UnaryOperator 0x55887c30ab00 <col:32, col:33> 'const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI *' prefix '&' cannot overflow
| | |       |     `-DeclRefExpr 0x55887c30aae0 <col:33> 'const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI':'const struct _EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI' lvalue Var 0x55887c2ff088 'mCustomGuidedSectionExtractionPpi' 'const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI':'const struct _EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI'
| | |       |-BinaryOperator 0x55887c30ac88 <line:169:7, col:69> 'EFI_GUID *' '='
| | |       | |-MemberExpr 0x55887c30abb0 <col:7, col:16> 'EFI_GUID *' lvalue ->Guid 0x55887c0dde68
| | |       | | `-ImplicitCastExpr 0x55887c30ab98 <col:7> 'EFI_PEI_PPI_DESCRIPTOR *' <LValueToRValue>
| | |       | |   `-DeclRefExpr 0x55887c30ab78 <col:7> 'EFI_PEI_PPI_DESCRIPTOR *' lvalue Var 0x55887c309fb8 'GuidPpi' 'EFI_PEI_PPI_DESCRIPTOR *'
| | |       | `-UnaryOperator 0x55887c30ac70 <col:24, col:69> 'EFI_GUID *' prefix '&' cannot overflow
| | |       |   `-ArraySubscriptExpr 0x55887c30ac50 <col:25, col:69> 'EFI_GUID':'GUID' lvalue
| | |       |     |-ImplicitCastExpr 0x55887c30ac20 <col:25> 'EFI_GUID *' <LValueToRValue>
| | |       |     | `-DeclRefExpr 0x55887c30abe0 <col:25> 'EFI_GUID *' lvalue Var 0x55887c3097d0 'ExtractHandlerGuidTable' 'EFI_GUID *'
| | |       |     `-ImplicitCastExpr 0x55887c30ac38 <col:49> 'UINTN':'unsigned long long' <LValueToRValue>
| | |       |       `-DeclRefExpr 0x55887c30ac00 <col:49> 'UINTN':'unsigned long long' lvalue Var 0x55887c309f28 'ExtractHandlerNumber' 'UINTN':'unsigned long long'
| | |       |-BinaryOperator 0x55887c30ad78 <line:170:7, col:56> 'EFI_STATUS':'unsigned long long' '='
| | |       | |-DeclRefExpr 0x55887c30aca8 <col:7> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c309740 'Status' 'EFI_STATUS':'unsigned long long'
| | |       | `-CallExpr 0x55887c30ad38 <col:24, col:56> 'EFI_STATUS':'unsigned long long'
| | |       |   |-ImplicitCastExpr 0x55887c30ad20 <col:24> 'EFI_STATUS (*)(const EFI_PEI_PPI_DESCRIPTOR *)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x55887c30acc8 <col:24> 'EFI_STATUS (const EFI_PEI_PPI_DESCRIPTOR *)' Function 0x55887c138e88 'PeiServicesInstallPpi' 'EFI_STATUS (const EFI_PEI_PPI_DESCRIPTOR *)'
| | |       |   `-ImplicitCastExpr 0x55887c30ad60 <col:47, col:54> 'const EFI_PEI_PPI_DESCRIPTOR *' <NoOp>
| | |       |     `-UnaryOperator 0x55887c30ad08 <col:47, col:54> 'EFI_PEI_PPI_DESCRIPTOR *' postfix '++'
| | |       |       `-DeclRefExpr 0x55887c30ace8 <col:47> 'EFI_PEI_PPI_DESCRIPTOR *' lvalue Var 0x55887c309fb8 'GuidPpi' 'EFI_PEI_PPI_DESCRIPTOR *'
| | |       `-DoStmt 0x55887c30b770 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:446:5, line:453:19>
| | |         |-CompoundStmt 0x55887c30b660 <line:446:8, line:453:5>
| | |         | `-IfStmt 0x55887c30b640 <line:447:7, line:452:7>
| | |         |   |-CallExpr 0x55887c30add0 <line:447:11, col:31> 'BOOLEAN':'unsigned char'
| | |         |   | `-ImplicitCastExpr 0x55887c30adb8 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |         |   |   `-DeclRefExpr 0x55887c30ad98 <col:11> 'BOOLEAN (void)' Function 0x55887c18d4f0 'DebugAssertEnabled' 'BOOLEAN (void)'
| | |         |   `-CompoundStmt 0x55887c30b628 <col:34, line:452:7>
| | |         |     `-IfStmt 0x55887c30b608 <line:448:9, line:451:9>
| | |         |       |-ParenExpr 0x55887c30af50 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | |         |       | `-BinaryOperator 0x55887c30af30 <col:36, col:74> 'int' '<'
| | |         |       |   |-ParenExpr 0x55887c30aed8 <col:36, col:70> 'INTN':'long long'
| | |         |       |   | `-CStyleCastExpr 0x55887c30aeb0 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | |         |       |   |   `-CStyleCastExpr 0x55887c30ae78 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |         |       |   |     `-ImplicitCastExpr 0x55887c30ae60 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | |         |       |   |       `-ParenExpr 0x55887c30ae40 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | |         |       |   |         `-DeclRefExpr 0x55887c30adf0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:171:25> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c309740 'Status' 'EFI_STATUS':'unsigned long long'
| | |         |       |   `-ImplicitCastExpr 0x55887c30af18 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | |         |       |     `-IntegerLiteral 0x55887c30aef8 <col:74> 'int' 0
| | |         |       `-CompoundStmt 0x55887c30b5e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:448:42, line:451:9>
| | |         |         |-DoStmt 0x55887c30b458 <line:423:5, line:427:19>
| | |         |         | |-CompoundStmt 0x55887c30b348 <line:423:8, line:427:5>
| | |         |         | | `-IfStmt 0x55887c30b328 <line:424:7, line:426:7>
| | |         |         | |   |-CallExpr 0x55887c30afa8 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | |         |         | |   | `-ImplicitCastExpr 0x55887c30af90 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |         |         | |   |   `-DeclRefExpr 0x55887c30af70 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | |         |         | |   `-CompoundStmt 0x55887c30b310 <col:33, line:426:7>
| | |         |         | |     `-DoStmt 0x55887c30b2f0 <line:373:5, line:377:19>
| | |         |         | |       |-CompoundStmt 0x55887c30b1e0 <line:373:8, line:377:5>
| | |         |         | |       | `-IfStmt 0x55887c30b1c0 <line:374:7, line:376:7>
| | |         |         | |       |   |-CallExpr 0x55887c30b020 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | |         |         | |       |   | |-ImplicitCastExpr 0x55887c30b008 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | |         |         | |       |   | | `-DeclRefExpr 0x55887c30afc8 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | |         |         | |       |   | `-ImplicitCastExpr 0x55887c30b048 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | |         |         | |       |   |   `-IntegerLiteral 0x55887c30afe8 <col:22> 'unsigned int' 2147483648
| | |         |         | |       |   `-CompoundStmt 0x55887c30b1a8 <line:374:48, line:376:7>
| | |         |         | |       |     `-CallExpr 0x55887c30b110 <line:375:9, col:46> 'void'
| | |         |         | |       |       |-ImplicitCastExpr 0x55887c30b0f8 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | |         |         | |       |       | `-DeclRefExpr 0x55887c30b060 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | |         |         | |       |       |-ImplicitCastExpr 0x55887c30b148 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | |         |         | |       |       | `-IntegerLiteral 0x55887c30b080 <col:22> 'unsigned int' 2147483648
| | |         |         | |       |       |-ImplicitCastExpr 0x55887c30b178 <line:449:32> 'const CHAR8 *' <NoOp>
| | |         |         | |       |       | `-ImplicitCastExpr 0x55887c30b160 <col:32> 'char *' <ArrayToPointerDecay>
| | |         |         | |       |       |   `-StringLiteral 0x55887c30b0a0 <col:32> 'char[33]' lvalue "\nASSERT_EFI_ERROR (Status = %r)\n"
| | |         |         | |       |       `-ImplicitCastExpr 0x55887c30b190 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:171:25> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | |         |         | |       |         `-DeclRefExpr 0x55887c30b0d8 <col:25> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c309740 'Status' 'EFI_STATUS':'unsigned long long'
| | |         |         | |       `-ParenExpr 0x55887c30b2d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |         |         | |         `-CStyleCastExpr 0x55887c30b2a8 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |         |         | |           `-ParenExpr 0x55887c30b288 <col:26, col:31> 'int'
| | |         |         | |             `-BinaryOperator 0x55887c30b238 <col:27, col:30> 'int' '=='
| | |         |         | |               |-IntegerLiteral 0x55887c30b1f8 <col:27> 'int' 0
| | |         |         | |               `-IntegerLiteral 0x55887c30b218 <col:30> 'int' 1
| | |         |         | `-ParenExpr 0x55887c30b438 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | |         |         |   `-CStyleCastExpr 0x55887c30b410 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |         |         |     `-ParenExpr 0x55887c30b3f0 <col:26, col:31> 'int'
| | |         |         |       `-BinaryOperator 0x55887c30b3a0 <col:27, col:30> 'int' '=='
| | |         |         |         |-IntegerLiteral 0x55887c30b360 <col:27> 'int' 0
| | |         |         |         `-IntegerLiteral 0x55887c30b380 <col:30> 'int' 1
| | |         |         `-CallExpr 0x55887c30b538 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:352:30, col:113> 'void'
| | |         |           |-ImplicitCastExpr 0x55887c30b520 <col:30> 'void (*)(const CHAR8 *, UINTN, const CHAR8 *)' <FunctionToPointerDecay>
| | |         |           | `-DeclRefExpr 0x55887c30b478 <col:30> 'void (const CHAR8 *, UINTN, const CHAR8 *)' Function 0x55887c18d0f8 'DebugAssert' 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| | |         |           |-ImplicitCastExpr 0x55887c30b588 <<scratch space>:21:1> 'const CHAR8 *' <NoOp>
| | |         |           | `-ImplicitCastExpr 0x55887c30b570 <col:1> 'char *' <ArrayToPointerDecay>
| | |         |           |   `-StringLiteral 0x55887c30b498 <col:1> 'char[10]' lvalue "DxeLoad.c"
| | |         |           |-ImplicitCastExpr 0x55887c30b5a0 <line:22:1> 'UINTN':'unsigned long long' <IntegralCast>
| | |         |           | `-IntegerLiteral 0x55887c30b4c0 <col:1> 'int' 171
| | |         |           `-ImplicitCastExpr 0x55887c30b5d0 <line:23:1> 'const CHAR8 *' <NoOp>
| | |         |             `-ImplicitCastExpr 0x55887c30b5b8 <col:1> 'char *' <ArrayToPointerDecay>
| | |         |               `-StringLiteral 0x55887c30b4e0 <col:1> 'char[39]' lvalue "!(((INTN)(RETURN_STATUS)(Status)) < 0)"
| | |         `-ParenExpr 0x55887c30b750 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |           `-CStyleCastExpr 0x55887c30b728 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |             `-ParenExpr 0x55887c30b708 <col:26, col:31> 'int'
| | |               `-BinaryOperator 0x55887c30b6b8 <col:27, col:30> 'int' '=='
| | |                 |-IntegerLiteral 0x55887c30b678 <col:27> 'int' 0
| | |                 `-IntegerLiteral 0x55887c30b698 <col:30> 'int' 1
| | |-BinaryOperator 0x55887c30b8e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:178:3, col:54> 'EFI_STATUS':'unsigned long long' '='
| | | |-DeclRefExpr 0x55887c30b830 <col:3> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c309740 'Status' 'EFI_STATUS':'unsigned long long'
| | | `-CallExpr 0x55887c30b8c0 <col:12, col:54> 'EFI_STATUS':'unsigned long long'
| | |   |-ImplicitCastExpr 0x55887c30b8a8 <col:12> 'EFI_STATUS (*)(const EFI_PEI_PPI_DESCRIPTOR *)' <FunctionToPointerDecay>
| | |   | `-DeclRefExpr 0x55887c30b850 <col:12> 'EFI_STATUS (const EFI_PEI_PPI_DESCRIPTOR *)' Function 0x55887c138e88 'PeiServicesInstallPpi' 'EFI_STATUS (const EFI_PEI_PPI_DESCRIPTOR *)'
| | |   `-UnaryOperator 0x55887c30b890 <col:35, col:36> 'const EFI_PEI_PPI_DESCRIPTOR *' prefix '&' cannot overflow
| | |     `-DeclRefExpr 0x55887c30b870 <col:36> 'const EFI_PEI_PPI_DESCRIPTOR':'const EFI_PEI_PPI_DESCRIPTOR' lvalue Var 0x55887c2ff380 'mDecompressPpiList' 'const EFI_PEI_PPI_DESCRIPTOR':'const EFI_PEI_PPI_DESCRIPTOR'
| | |-DoStmt 0x55887c1987c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:446:5, line:453:19>
| | | |-CompoundStmt 0x55887c1986b0 <line:446:8, line:453:5>
| | | | `-IfStmt 0x55887c198690 <line:447:7, line:452:7>
| | | |   |-CallExpr 0x55887c30b940 <line:447:11, col:31> 'BOOLEAN':'unsigned char'
| | | |   | `-ImplicitCastExpr 0x55887c30b928 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | |   |   `-DeclRefExpr 0x55887c30b908 <col:11> 'BOOLEAN (void)' Function 0x55887c18d4f0 'DebugAssertEnabled' 'BOOLEAN (void)'
| | | |   `-CompoundStmt 0x55887c198678 <col:34, line:452:7>
| | | |     `-IfStmt 0x55887c198658 <line:448:9, line:451:9>
| | | |       |-ParenExpr 0x55887c30bac0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | | |       | `-BinaryOperator 0x55887c30baa0 <col:36, col:74> 'int' '<'
| | | |       |   |-ParenExpr 0x55887c30ba48 <col:36, col:70> 'INTN':'long long'
| | | |       |   | `-CStyleCastExpr 0x55887c30ba20 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | | |       |   |   `-CStyleCastExpr 0x55887c30b9e8 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | | |       |   |     `-ImplicitCastExpr 0x55887c30b9d0 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | | |       |   |       `-ParenExpr 0x55887c30b9b0 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | | |       |   |         `-DeclRefExpr 0x55887c30b960 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:179:21> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c309740 'Status' 'EFI_STATUS':'unsigned long long'
| | | |       |   `-ImplicitCastExpr 0x55887c30ba88 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | | |       |     `-IntegerLiteral 0x55887c30ba68 <col:74> 'int' 0
| | | |       `-CompoundStmt 0x55887c198638 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:448:42, line:451:9>
| | | |         |-DoStmt 0x55887c1984a8 <line:423:5, line:427:19>
| | | |         | |-CompoundStmt 0x55887c30beb8 <line:423:8, line:427:5>
| | | |         | | `-IfStmt 0x55887c30be98 <line:424:7, line:426:7>
| | | |         | |   |-CallExpr 0x55887c30bb18 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | | |         | |   | `-ImplicitCastExpr 0x55887c30bb00 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | |         | |   |   `-DeclRefExpr 0x55887c30bae0 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | | |         | |   `-CompoundStmt 0x55887c30be80 <col:33, line:426:7>
| | | |         | |     `-DoStmt 0x55887c30be60 <line:373:5, line:377:19>
| | | |         | |       |-CompoundStmt 0x55887c30bd50 <line:373:8, line:377:5>
| | | |         | |       | `-IfStmt 0x55887c30bd30 <line:374:7, line:376:7>
| | | |         | |       |   |-CallExpr 0x55887c30bb90 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | | |         | |       |   | |-ImplicitCastExpr 0x55887c30bb78 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | | |         | |       |   | | `-DeclRefExpr 0x55887c30bb38 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | | |         | |       |   | `-ImplicitCastExpr 0x55887c30bbb8 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | | |         | |       |   |   `-IntegerLiteral 0x55887c30bb58 <col:22> 'unsigned int' 2147483648
| | | |         | |       |   `-CompoundStmt 0x55887c30bd18 <line:374:48, line:376:7>
| | | |         | |       |     `-CallExpr 0x55887c30bc80 <line:375:9, col:46> 'void'
| | | |         | |       |       |-ImplicitCastExpr 0x55887c30bc68 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | | |         | |       |       | `-DeclRefExpr 0x55887c30bbd0 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | | |         | |       |       |-ImplicitCastExpr 0x55887c30bcb8 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | | |         | |       |       | `-IntegerLiteral 0x55887c30bbf0 <col:22> 'unsigned int' 2147483648
| | | |         | |       |       |-ImplicitCastExpr 0x55887c30bce8 <line:449:32> 'const CHAR8 *' <NoOp>
| | | |         | |       |       | `-ImplicitCastExpr 0x55887c30bcd0 <col:32> 'char *' <ArrayToPointerDecay>
| | | |         | |       |       |   `-StringLiteral 0x55887c30bc10 <col:32> 'char[33]' lvalue "\nASSERT_EFI_ERROR (Status = %r)\n"
| | | |         | |       |       `-ImplicitCastExpr 0x55887c30bd00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:179:21> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | | |         | |       |         `-DeclRefExpr 0x55887c30bc48 <col:21> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c309740 'Status' 'EFI_STATUS':'unsigned long long'
| | | |         | |       `-ParenExpr 0x55887c30be40 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | | |         | |         `-CStyleCastExpr 0x55887c30be18 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | |         | |           `-ParenExpr 0x55887c30bdf8 <col:26, col:31> 'int'
| | | |         | |             `-BinaryOperator 0x55887c30bda8 <col:27, col:30> 'int' '=='
| | | |         | |               |-IntegerLiteral 0x55887c30bd68 <col:27> 'int' 0
| | | |         | |               `-IntegerLiteral 0x55887c30bd88 <col:30> 'int' 1
| | | |         | `-ParenExpr 0x55887c198488 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | | |         |   `-CStyleCastExpr 0x55887c198460 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | |         |     `-ParenExpr 0x55887c198440 <col:26, col:31> 'int'
| | | |         |       `-BinaryOperator 0x55887c1983f0 <col:27, col:30> 'int' '=='
| | | |         |         |-IntegerLiteral 0x55887c30bed0 <col:27> 'int' 0
| | | |         |         `-IntegerLiteral 0x55887c1983d0 <col:30> 'int' 1
| | | |         `-CallExpr 0x55887c198588 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:352:30, col:113> 'void'
| | | |           |-ImplicitCastExpr 0x55887c198570 <col:30> 'void (*)(const CHAR8 *, UINTN, const CHAR8 *)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x55887c1984c8 <col:30> 'void (const CHAR8 *, UINTN, const CHAR8 *)' Function 0x55887c18d0f8 'DebugAssert' 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| | | |           |-ImplicitCastExpr 0x55887c1985d8 <<scratch space>:24:1> 'const CHAR8 *' <NoOp>
| | | |           | `-ImplicitCastExpr 0x55887c1985c0 <col:1> 'char *' <ArrayToPointerDecay>
| | | |           |   `-StringLiteral 0x55887c1984e8 <col:1> 'char[10]' lvalue "DxeLoad.c"
| | | |           |-ImplicitCastExpr 0x55887c1985f0 <line:25:1> 'UINTN':'unsigned long long' <IntegralCast>
| | | |           | `-IntegerLiteral 0x55887c198510 <col:1> 'int' 179
| | | |           `-ImplicitCastExpr 0x55887c198620 <line:26:1> 'const CHAR8 *' <NoOp>
| | | |             `-ImplicitCastExpr 0x55887c198608 <col:1> 'char *' <ArrayToPointerDecay>
| | | |               `-StringLiteral 0x55887c198530 <col:1> 'char[39]' lvalue "!(((INTN)(RETURN_STATUS)(Status)) < 0)"
| | | `-ParenExpr 0x55887c1987a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |   `-CStyleCastExpr 0x55887c198778 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |     `-ParenExpr 0x55887c198758 <col:26, col:31> 'int'
| | |       `-BinaryOperator 0x55887c198708 <col:27, col:30> 'int' '=='
| | |         |-IntegerLiteral 0x55887c1986c8 <col:27> 'int' 0
| | |         `-IntegerLiteral 0x55887c1986e8 <col:30> 'int' 1
| | `-ReturnStmt 0x55887c198818 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:181:3, col:10>
| |   `-ImplicitCastExpr 0x55887c198800 <col:10> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| |     `-DeclRefExpr 0x55887c1987e0 <col:10> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c309740 'Status' 'EFI_STATUS':'unsigned long long'
| `-FullComment 0x55887c487280 <line:132:1, line:139:84>
|   |-ParagraphComment 0x55887c486e00 <line:132:1, col:65>
|   | `-TextComment 0x55887c486dd0 <col:1, col:65> Text="   This function installs the PPIs that require permanent memory."
|   |-ParagraphComment 0x55887c486e50 <line:134:1, col:3>
|   | `-TextComment 0x55887c486e20 <col:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c486e70 <col:4, line:135:3> [in] implicitly Param="PeiServices" ParamIndex=0
|   | `-ParagraphComment 0x55887c486f20 <line:134:23, line:135:3>
|   |   |-TextComment 0x55887c486ed0 <line:134:23, col:73> Text="      Indirect reference to the PEI Services Table."
|   |   `-TextComment 0x55887c486ef0 <line:135:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c486f40 <col:4, line:136:3> [in] implicitly Param="NotifyDescriptor" ParamIndex=1
|   | `-ParagraphComment 0x55887c487000 <line:135:28, line:136:3>
|   |   |-TextComment 0x55887c486fb0 <line:135:28, col:82> Text=" Address of the notification descriptor data structure."
|   |   `-TextComment 0x55887c486fd0 <line:136:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c487020 <col:4, col:66> [in] implicitly Param="Ppi" ParamIndex=2
|   | `-ParagraphComment 0x55887c4870b0 <col:15, col:66>
|   |   `-TextComment 0x55887c487080 <col:15, col:66> Text="              Address of the PPI that was installed."
|   |-ParagraphComment 0x55887c487100 <line:138:1, col:3>
|   | `-TextComment 0x55887c4870d0 <col:1, col:3> Text="   "
|   |-BlockCommandComment 0x55887c487120 <col:4, line:139:3> Name="return"
|   | `-ParagraphComment 0x55887c4871a0 <line:138:11, line:139:3>
|   |   |-TextComment 0x55887c487150 <line:138:11, col:65> Text=" EFI_SUCCESS      The PPIs were installed successfully."
|   |   `-TextComment 0x55887c487170 <line:139:1, col:3> Text="   "
|   `-BlockCommandComment 0x55887c4871c0 <col:4, col:84> Name="return"
|     `-ParagraphComment 0x55887c487220 <col:11, col:84>
|       `-TextComment 0x55887c4871f0 <col:11, col:84> Text=" Others           Some error occurs during the execution of this function."
|-FunctionDecl 0x55887c198ac8 <line:194:1, line:229:1> line:195:1 used ValidateMemoryTypeInfoVariable 'BOOLEAN (EFI_MEMORY_TYPE_INFORMATION *, UINTN)'
| |-ParmVarDecl 0x55887c198938 <line:196:6, col:36> col:36 used MemoryData 'EFI_MEMORY_TYPE_INFORMATION *'
| |-ParmVarDecl 0x55887c1989b0 <line:197:6, col:35> col:35 used MemoryDataSize 'UINTN':'unsigned long long'
| |-CompoundStmt 0x55887c199b58 <line:199:1, line:229:1>
| | |-DeclStmt 0x55887c198bf0 <line:200:3, col:15>
| | | `-VarDecl 0x55887c198b88 <col:3, col:10> col:10 used Count 'UINTN':'unsigned long long'
| | |-DeclStmt 0x55887c198c80 <line:201:3, col:15>
| | | `-VarDecl 0x55887c198c18 <col:3, col:10> col:10 used Index 'UINTN':'unsigned long long'
| | |-IfStmt 0x55887c198ea8 <line:204:3, line:206:3>
| | | |-BinaryOperator 0x55887c198d68 <line:204:7, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:26> 'int' '=='
| | | | |-ImplicitCastExpr 0x55887c198d38 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:204:7> 'EFI_MEMORY_TYPE_INFORMATION *' <LValueToRValue>
| | | | | `-DeclRefExpr 0x55887c198c98 <col:7> 'EFI_MEMORY_TYPE_INFORMATION *' lvalue ParmVar 0x55887c198938 'MemoryData' 'EFI_MEMORY_TYPE_INFORMATION *'
| | | | `-ImplicitCastExpr 0x55887c198d50 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'EFI_MEMORY_TYPE_INFORMATION *' <BitCast>
| | | |   `-ParenExpr 0x55887c198d18 <col:15, col:26> 'void *'
| | | |     `-CStyleCastExpr 0x55887c198cf0 <col:16, col:25> 'void *' <NullToPointer>
| | | |       `-IntegerLiteral 0x55887c198cb8 <col:25> 'int' 0
| | | `-CompoundStmt 0x55887c198e90 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:204:27, line:206:3>
| | |   `-ReturnStmt 0x55887c198e80 <line:205:5, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:32>
| | |     `-ParenExpr 0x55887c198e60 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | |       `-CStyleCastExpr 0x55887c198e38 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |         `-ParenExpr 0x55887c198e18 <col:26, col:31> 'int'
| | |           `-BinaryOperator 0x55887c198dc8 <col:27, col:30> 'int' '=='
| | |             |-IntegerLiteral 0x55887c198d88 <col:27> 'int' 0
| | |             `-IntegerLiteral 0x55887c198da8 <col:30> 'int' 1
| | |-BinaryOperator 0x55887c199048 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:209:3, col:47> 'UINTN':'unsigned long long' '='
| | | |-DeclRefExpr 0x55887c198ec8 <col:3> 'UINTN':'unsigned long long' lvalue Var 0x55887c198b88 'Count' 'UINTN':'unsigned long long'
| | | `-BinaryOperator 0x55887c199028 <col:11, col:47> 'unsigned long long' '/'
| | |   |-ImplicitCastExpr 0x55887c198f98 <col:11> 'UINTN':'unsigned long long' <LValueToRValue>
| | |   | `-DeclRefExpr 0x55887c198ee8 <col:11> 'UINTN':'unsigned long long' lvalue ParmVar 0x55887c1989b0 'MemoryDataSize' 'UINTN':'unsigned long long'
| | |   `-ImplicitCastExpr 0x55887c198fb0 <col:28, col:47> 'unsigned long long' <IntegralCast>
| | |     `-UnaryExprOrTypeTraitExpr 0x55887c198f78 <col:28, col:47> 'unsigned long' sizeof
| | |       `-ParenExpr 0x55887c198f58 <col:35, col:47> 'EFI_MEMORY_TYPE_INFORMATION':'EFI_MEMORY_TYPE_INFORMATION' lvalue
| | |         `-UnaryOperator 0x55887c198f40 <col:36, col:37> 'EFI_MEMORY_TYPE_INFORMATION':'EFI_MEMORY_TYPE_INFORMATION' lvalue prefix '*' cannot overflow
| | |           `-ImplicitCastExpr 0x55887c198f28 <col:37> 'EFI_MEMORY_TYPE_INFORMATION *' <LValueToRValue>
| | |             `-DeclRefExpr 0x55887c198f08 <col:37> 'EFI_MEMORY_TYPE_INFORMATION *' lvalue ParmVar 0x55887c198938 'MemoryData' 'EFI_MEMORY_TYPE_INFORMATION *' non_odr_use_unevaluated
| | |-IfStmt 0x55887c1992e0 <line:212:3, line:214:3>
| | | |-BinaryOperator 0x55887c1991a0 <line:212:7, col:39> 'int' '!='
| | | | |-BinaryOperator 0x55887c199148 <col:7, col:34> 'unsigned long long' '*'
| | | | | |-ImplicitCastExpr 0x55887c199118 <col:7> 'UINTN':'unsigned long long' <LValueToRValue>
| | | | | | `-DeclRefExpr 0x55887c199068 <col:7> 'UINTN':'unsigned long long' lvalue Var 0x55887c198b88 'Count' 'UINTN':'unsigned long long'
| | | | | `-ImplicitCastExpr 0x55887c199130 <col:15, col:34> 'unsigned long long' <IntegralCast>
| | | | |   `-UnaryExprOrTypeTraitExpr 0x55887c1990f8 <col:15, col:34> 'unsigned long' sizeof
| | | | |     `-ParenExpr 0x55887c1990d8 <col:22, col:34> 'EFI_MEMORY_TYPE_INFORMATION':'EFI_MEMORY_TYPE_INFORMATION' lvalue
| | | | |       `-UnaryOperator 0x55887c1990c0 <col:23, col:24> 'EFI_MEMORY_TYPE_INFORMATION':'EFI_MEMORY_TYPE_INFORMATION' lvalue prefix '*' cannot overflow
| | | | |         `-ImplicitCastExpr 0x55887c1990a8 <col:24> 'EFI_MEMORY_TYPE_INFORMATION *' <LValueToRValue>
| | | | |           `-DeclRefExpr 0x55887c199088 <col:24> 'EFI_MEMORY_TYPE_INFORMATION *' lvalue ParmVar 0x55887c198938 'MemoryData' 'EFI_MEMORY_TYPE_INFORMATION *' non_odr_use_unevaluated
| | | | `-ImplicitCastExpr 0x55887c199188 <col:39> 'UINTN':'unsigned long long' <LValueToRValue>
| | | |   `-DeclRefExpr 0x55887c199168 <col:39> 'UINTN':'unsigned long long' lvalue ParmVar 0x55887c1989b0 'MemoryDataSize' 'UINTN':'unsigned long long'
| | | `-CompoundStmt 0x55887c1992c8 <col:55, line:214:3>
| | |   `-ReturnStmt 0x55887c1992b8 <line:213:5, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:32>
| | |     `-ParenExpr 0x55887c199298 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | |       `-CStyleCastExpr 0x55887c199270 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |         `-ParenExpr 0x55887c199250 <col:26, col:31> 'int'
| | |           `-BinaryOperator 0x55887c199200 <col:27, col:30> 'int' '=='
| | |             |-IntegerLiteral 0x55887c1991c0 <col:27> 'int' 0
| | |             `-IntegerLiteral 0x55887c1991e0 <col:30> 'int' 1
| | |-IfStmt 0x55887c1995a8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:217:3, line:219:3>
| | | |-BinaryOperator 0x55887c199468 <line:217:7, col:37> 'int' '!='
| | | | |-ImplicitCastExpr 0x55887c199438 <col:7, col:29> 'UINT32':'unsigned int' <LValueToRValue>
| | | | | `-MemberExpr 0x55887c1993e8 <col:7, col:29> 'UINT32':'unsigned int' lvalue .Type 0x55887c184620
| | | | |   `-ArraySubscriptExpr 0x55887c1993c8 <col:7, col:27> 'EFI_MEMORY_TYPE_INFORMATION':'EFI_MEMORY_TYPE_INFORMATION' lvalue
| | | | |     |-ImplicitCastExpr 0x55887c1993b0 <col:7> 'EFI_MEMORY_TYPE_INFORMATION *' <LValueToRValue>
| | | | |     | `-DeclRefExpr 0x55887c199300 <col:7> 'EFI_MEMORY_TYPE_INFORMATION *' lvalue ParmVar 0x55887c198938 'MemoryData' 'EFI_MEMORY_TYPE_INFORMATION *'
| | | | |     `-BinaryOperator 0x55887c199390 <col:18, col:26> 'unsigned long long' '-'
| | | | |       |-ImplicitCastExpr 0x55887c199360 <col:18> 'UINTN':'unsigned long long' <LValueToRValue>
| | | | |       | `-DeclRefExpr 0x55887c199320 <col:18> 'UINTN':'unsigned long long' lvalue Var 0x55887c198b88 'Count' 'UINTN':'unsigned long long'
| | | | |       `-ImplicitCastExpr 0x55887c199378 <col:26> 'unsigned long long' <IntegralCast>
| | | | |         `-IntegerLiteral 0x55887c199340 <col:26> 'int' 1
| | | | `-ImplicitCastExpr 0x55887c199450 <col:37> 'unsigned int' <IntegralCast>
| | | |   `-DeclRefExpr 0x55887c199418 <col:37> 'int' EnumConstant 0x55887c081b88 'EfiMaxMemoryType' 'int'
| | | `-CompoundStmt 0x55887c199590 <col:55, line:219:3>
| | |   `-ReturnStmt 0x55887c199580 <line:218:5, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:32>
| | |     `-ParenExpr 0x55887c199560 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | |       `-CStyleCastExpr 0x55887c199538 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |         `-ParenExpr 0x55887c199518 <col:26, col:31> 'int'
| | |           `-BinaryOperator 0x55887c1994c8 <col:27, col:30> 'int' '=='
| | |             |-IntegerLiteral 0x55887c199488 <col:27> 'int' 0
| | |             `-IntegerLiteral 0x55887c1994a8 <col:30> 'int' 1
| | |-ForStmt 0x55887c1999e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:222:3, line:226:3>
| | | |-BinaryOperator 0x55887c199620 <line:222:8, col:16> 'UINTN':'unsigned long long' '='
| | | | |-DeclRefExpr 0x55887c1995c8 <col:8> 'UINTN':'unsigned long long' lvalue Var 0x55887c198c18 'Index' 'UINTN':'unsigned long long'
| | | | `-ImplicitCastExpr 0x55887c199608 <col:16> 'UINTN':'unsigned long long' <IntegralCast>
| | | |   `-IntegerLiteral 0x55887c1995e8 <col:16> 'int' 0
| | | |-<<<NULL>>>
| | | |-BinaryOperator 0x55887c199708 <col:19, col:35> 'int' '<'
| | | | |-ImplicitCastExpr 0x55887c1996f0 <col:19> 'UINTN':'unsigned long long' <LValueToRValue>
| | | | | `-DeclRefExpr 0x55887c199640 <col:19> 'UINTN':'unsigned long long' lvalue Var 0x55887c198c18 'Index' 'UINTN':'unsigned long long'
| | | | `-BinaryOperator 0x55887c1996d0 <col:27, col:35> 'unsigned long long' '-'
| | | |   |-ImplicitCastExpr 0x55887c1996a0 <col:27> 'UINTN':'unsigned long long' <LValueToRValue>
| | | |   | `-DeclRefExpr 0x55887c199660 <col:27> 'UINTN':'unsigned long long' lvalue Var 0x55887c198b88 'Count' 'UINTN':'unsigned long long'
| | | |   `-ImplicitCastExpr 0x55887c1996b8 <col:35> 'unsigned long long' <IntegralCast>
| | | |     `-IntegerLiteral 0x55887c199680 <col:35> 'int' 1
| | | |-UnaryOperator 0x55887c199748 <col:38, col:43> 'UINTN':'unsigned long long' postfix '++'
| | | | `-DeclRefExpr 0x55887c199728 <col:38> 'UINTN':'unsigned long long' lvalue Var 0x55887c198c18 'Index' 'UINTN':'unsigned long long'
| | | `-CompoundStmt 0x55887c1999d0 <col:47, line:226:3>
| | |   `-IfStmt 0x55887c1999b0 <line:223:5, line:225:5>
| | |     |-BinaryOperator 0x55887c199870 <line:223:9, col:35> 'int' '>='
| | |     | |-ImplicitCastExpr 0x55887c199840 <col:9, col:27> 'UINT32':'unsigned int' <LValueToRValue>
| | |     | | `-MemberExpr 0x55887c1997f0 <col:9, col:27> 'UINT32':'unsigned int' lvalue .Type 0x55887c184620
| | |     | |   `-ArraySubscriptExpr 0x55887c1997d0 <col:9, col:25> 'EFI_MEMORY_TYPE_INFORMATION':'EFI_MEMORY_TYPE_INFORMATION' lvalue
| | |     | |     |-ImplicitCastExpr 0x55887c1997a0 <col:9> 'EFI_MEMORY_TYPE_INFORMATION *' <LValueToRValue>
| | |     | |     | `-DeclRefExpr 0x55887c199760 <col:9> 'EFI_MEMORY_TYPE_INFORMATION *' lvalue ParmVar 0x55887c198938 'MemoryData' 'EFI_MEMORY_TYPE_INFORMATION *'
| | |     | |     `-ImplicitCastExpr 0x55887c1997b8 <col:20> 'UINTN':'unsigned long long' <LValueToRValue>
| | |     | |       `-DeclRefExpr 0x55887c199780 <col:20> 'UINTN':'unsigned long long' lvalue Var 0x55887c198c18 'Index' 'UINTN':'unsigned long long'
| | |     | `-ImplicitCastExpr 0x55887c199858 <col:35> 'unsigned int' <IntegralCast>
| | |     |   `-DeclRefExpr 0x55887c199820 <col:35> 'int' EnumConstant 0x55887c081b88 'EfiMaxMemoryType' 'int'
| | |     `-CompoundStmt 0x55887c199998 <col:53, line:225:5>
| | |       `-ReturnStmt 0x55887c199988 <line:224:7, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:32>
| | |         `-ParenExpr 0x55887c199968 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | |           `-CStyleCastExpr 0x55887c199940 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |             `-ParenExpr 0x55887c199920 <col:26, col:31> 'int'
| | |               `-BinaryOperator 0x55887c1998d0 <col:27, col:30> 'int' '=='
| | |                 |-IntegerLiteral 0x55887c199890 <col:27> 'int' 0
| | |                 `-IntegerLiteral 0x55887c1998b0 <col:30> 'int' 1
| | `-ReturnStmt 0x55887c199b18 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:228:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:301:31>
| |   `-ParenExpr 0x55887c199af8 <col:15, col:31> 'BOOLEAN':'unsigned char'
| |     `-CStyleCastExpr 0x55887c199ad0 <col:16, col:30> 'BOOLEAN':'unsigned char' <IntegralCast>
| |       `-ParenExpr 0x55887c199ab0 <col:25, col:30> 'int'
| |         `-BinaryOperator 0x55887c199a60 <col:26, col:29> 'int' '=='
| |           |-IntegerLiteral 0x55887c199a20 <col:26> 'int' 1
| |           `-IntegerLiteral 0x55887c199a40 <col:29> 'int' 1
| `-FullComment 0x55887c4876c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:185:1, line:191:56>
|   |-ParagraphComment 0x55887c487320 <line:185:1, col:56>
|   | `-TextComment 0x55887c4872f0 <col:1, col:56> Text="   Validate variable data for the MemoryTypeInformation."
|   |-ParagraphComment 0x55887c487370 <line:187:1, col:3>
|   | `-TextComment 0x55887c487340 <col:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c487390 <col:4, line:188:3> [in] implicitly Param="MemoryData" ParamIndex=0
|   | `-ParagraphComment 0x55887c487440 <line:187:21, line:188:3>
|   |   |-TextComment 0x55887c4873f0 <line:187:21, col:41> Text="       Variable data."
|   |   `-TextComment 0x55887c487410 <line:188:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c487460 <col:4, col:48> [in] implicitly Param="MemoryDataSize" ParamIndex=1
|   | `-ParagraphComment 0x55887c4874f0 <col:25, col:48>
|   |   `-TextComment 0x55887c4874c0 <col:25, col:48> Text="   Variable data length."
|   |-ParagraphComment 0x55887c487540 <line:190:1, col:3>
|   | `-TextComment 0x55887c487510 <col:1, col:3> Text="   "
|   |-BlockCommandComment 0x55887c487560 <col:4, line:191:3> Name="return"
|   | `-ParagraphComment 0x55887c4875e0 <line:190:11, line:191:3>
|   |   |-TextComment 0x55887c487590 <line:190:11, col:54> Text=" TRUE            The variable data is valid."
|   |   `-TextComment 0x55887c4875b0 <line:191:1, col:3> Text="   "
|   `-BlockCommandComment 0x55887c487600 <col:4, col:56> Name="return"
|     `-ParagraphComment 0x55887c487660 <col:11, col:56>
|       `-TextComment 0x55887c487630 <col:11, col:56> Text=" FALSE           The variable data is invalid."
|-FunctionDecl 0x55887c199d50 prev 0x55887c2f7740 <line:245:1, line:459:1> line:247:1 used DxeLoadCore 'EFI_STATUS (const EFI_DXE_IPL_PPI *, EFI_PEI_SERVICES **, EFI_PEI_HOB_POINTERS)'
| |-ParmVarDecl 0x55887c199bb8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:248:30> col:30 This 'const EFI_DXE_IPL_PPI *'
| |-ParmVarDecl 0x55887c199c38 <line:249:6, col:31> col:31 used PeiServices 'EFI_PEI_SERVICES **'
| |-ParmVarDecl 0x55887c199cb0 <line:250:6, col:29> col:29 used HobList 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS'
| |-CompoundStmt 0x55887c326398 <line:252:1, line:459:1>
| | |-DeclStmt 0x55887c199e80 <line:253:3, col:42>
| | | `-VarDecl 0x55887c199e18 <col:3, col:36> col:36 used Status 'EFI_STATUS':'unsigned long long'
| | |-DeclStmt 0x55887c199f10 <line:254:3, col:51>
| | | `-VarDecl 0x55887c199ea8 <col:3, col:36> col:36 used DxeCoreFileInfo 'EFI_FV_FILE_INFO':'EFI_FV_FILE_INFO'
| | |-DeclStmt 0x55887c199fa0 <line:255:3, col:50>
| | | `-VarDecl 0x55887c199f38 <col:3, col:36> col:36 used DxeCoreAddress 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | |-DeclStmt 0x55887c19a030 <line:256:3, col:47>
| | | `-VarDecl 0x55887c199fc8 <col:3, col:36> col:36 used DxeCoreSize 'UINT64':'unsigned long long'
| | |-DeclStmt 0x55887c19a0c0 <line:257:3, col:53>
| | | `-VarDecl 0x55887c19a058 <col:3, col:36> col:36 used DxeCoreEntryPoint 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | |-DeclStmt 0x55887c19a150 <line:258:3, col:44>
| | | `-VarDecl 0x55887c19a0e8 <col:3, col:36> col:36 used BootMode 'EFI_BOOT_MODE':'unsigned int'
| | |-DeclStmt 0x55887c19a1e0 <line:259:3, col:46>
| | | `-VarDecl 0x55887c19a178 <col:3, col:36> col:36 used FileHandle 'EFI_PEI_FILE_HANDLE':'void *'
| | |-DeclStmt 0x55887c19a2d0 <line:260:3, col:45>
| | | `-VarDecl 0x55887c19a268 <col:3, col:37> col:37 used Variable 'EFI_PEI_READ_ONLY_VARIABLE2_PPI *'
| | |-DeclStmt 0x55887c19a3e0 <line:261:3, col:45>
| | | `-VarDecl 0x55887c19a358 <col:3, col:37> col:37 used LoadFile 'EFI_PEI_LOAD_FILE_PPI *'
| | |-DeclStmt 0x55887c19a470 <line:262:3, col:44>
| | | `-VarDecl 0x55887c19a408 <col:3, col:36> col:36 used Instance 'UINTN':'unsigned long long'
| | |-DeclStmt 0x55887c19a500 <line:263:3, col:55>
| | | `-VarDecl 0x55887c19a498 <col:3, col:36> col:36 used AuthenticationState 'UINT32':'unsigned int'
| | |-DeclStmt 0x55887c19a590 <line:264:3, col:44>
| | | `-VarDecl 0x55887c19a528 <col:3, col:36> col:36 used DataSize 'UINTN':'unsigned long long'
| | |-DeclStmt 0x55887c19a620 <line:265:3, col:45>
| | | `-VarDecl 0x55887c19a5b8 <col:3, col:37> col:37 used S3Resume 'EFI_PEI_S3_RESUME2_PPI *'
| | |-DeclStmt 0x55887c19a6b0 <line:266:3, col:48>
| | | `-VarDecl 0x55887c19a648 <col:3, col:37> col:37 used PeiRecovery 'EFI_PEI_RECOVERY_MODULE_PPI *'
| | |-DeclStmt 0x55887c19a740 <line:267:3, col:53>
| | | `-VarDecl 0x55887c19a6d8 <col:3, col:37> col:37 used PeiCapsuleOnDisk 'EDKII_PEI_CAPSULE_ON_DISK_PPI *'
| | |-DeclStmt 0x55887c19a8e0 <line:268:3, col:68>
| | | `-VarDecl 0x55887c19a878 <col:3, col:67> col:36 used MemoryData 'EFI_MEMORY_TYPE_INFORMATION[17]'
| | |-DeclStmt 0x55887c19a978 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:269:57>
| | | `-VarDecl 0x55887c19a910 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:269:37> col:37 used CapsuleOnDiskModePpi 'void *'
| | |-BinaryOperator 0x55887c19aa08 <line:274:3, col:30> 'EFI_BOOT_MODE':'unsigned int' '='
| | | |-DeclRefExpr 0x55887c19a990 <col:3> 'EFI_BOOT_MODE':'unsigned int' lvalue Var 0x55887c19a0e8 'BootMode' 'EFI_BOOT_MODE':'unsigned int'
| | | `-CallExpr 0x55887c19a9e8 <col:14, col:30> 'EFI_BOOT_MODE':'unsigned int'
| | |   `-ImplicitCastExpr 0x55887c19a9d0 <col:14> 'EFI_BOOT_MODE (*)(void)' <FunctionToPointerDecay>
| | |     `-DeclRefExpr 0x55887c19a9b0 <col:14> 'EFI_BOOT_MODE (void)' Function 0x55887c195c98 'GetBootModeHob' 'EFI_BOOT_MODE (void)'
| | |-IfStmt 0x55887c320768 <line:276:3, line:362:3> has_else
| | | |-BinaryOperator 0x55887c19aa98 <line:276:7, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiBootMode.h:32:56> 'int' '=='
| | | | |-ImplicitCastExpr 0x55887c19aa68 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:276:7> 'EFI_BOOT_MODE':'unsigned int' <LValueToRValue>
| | | | | `-DeclRefExpr 0x55887c19aa28 <col:7> 'EFI_BOOT_MODE':'unsigned int' lvalue Var 0x55887c19a0e8 'BootMode' 'EFI_BOOT_MODE':'unsigned int'
| | | | `-ImplicitCastExpr 0x55887c19aa80 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiBootMode.h:32:56> 'unsigned int' <IntegralCast>
| | | |   `-IntegerLiteral 0x55887c19aa48 <col:56> 'int' 17
| | | |-CompoundStmt 0x55887c31a528 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:276:38, line:297:3>
| | | | |-BinaryOperator 0x55887c19ad40 <line:277:5, line:282:16> 'EFI_STATUS':'unsigned long long' '='
| | | | | |-DeclRefExpr 0x55887c19aab8 <line:277:5> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | | | | `-CallExpr 0x55887c19acb8 <col:14, line:282:16> 'EFI_STATUS':'unsigned long long'
| | | | |   |-ImplicitCastExpr 0x55887c19aca0 <line:277:14> 'EFI_STATUS (*)(const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)' <FunctionToPointerDecay>
| | | | |   | `-DeclRefExpr 0x55887c19aad8 <col:14> 'EFI_STATUS (const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)' Function 0x55887c1394a8 'PeiServicesLocatePpi' 'EFI_STATUS (const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)'
| | | | |   |-ImplicitCastExpr 0x55887c19acf8 <line:278:16, col:17> 'const EFI_GUID *' <NoOp>
| | | | |   | `-UnaryOperator 0x55887c19ab18 <col:16, col:17> 'EFI_GUID *' prefix '&' cannot overflow
| | | | |   |   `-DeclRefExpr 0x55887c19aaf8 <col:17> 'EFI_GUID':'GUID' lvalue Var 0x55887c17bf80 'gEfiPeiS3Resume2PpiGuid' 'EFI_GUID':'GUID'
| | | | |   |-ImplicitCastExpr 0x55887c19ad10 <line:279:16> 'UINTN':'unsigned long long' <IntegralCast>
| | | | |   | `-IntegerLiteral 0x55887c19ab30 <col:16> 'int' 0
| | | | |   |-ImplicitCastExpr 0x55887c19ad28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'EFI_PEI_PPI_DESCRIPTOR **' <NullToPointer>
| | | | |   | `-ParenExpr 0x55887c19abb0 <col:15, col:26> 'void *'
| | | | |   |   `-CStyleCastExpr 0x55887c19ab88 <col:16, col:25> 'void *' <NullToPointer>
| | | | |   |     `-IntegerLiteral 0x55887c19ab50 <col:25> 'int' 0
| | | | |   `-CStyleCastExpr 0x55887c19ac78 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:281:16, col:26> 'void **' <BitCast>
| | | | |     `-UnaryOperator 0x55887c19ac48 <col:25, col:26> 'EFI_PEI_S3_RESUME2_PPI **' prefix '&' cannot overflow
| | | | |       `-DeclRefExpr 0x55887c19abd0 <col:26> 'EFI_PEI_S3_RESUME2_PPI *' lvalue Var 0x55887c19a5b8 'S3Resume' 'EFI_PEI_S3_RESUME2_PPI *'
| | | | |-IfStmt 0x55887c19be00 <line:283:5, line:291:5>
| | | | | |-ParenExpr 0x55887c19aec0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | | | | | `-BinaryOperator 0x55887c19aea0 <col:36, col:74> 'int' '<'
| | | | | |   |-ParenExpr 0x55887c19ae48 <col:36, col:70> 'INTN':'long long'
| | | | | |   | `-CStyleCastExpr 0x55887c19ae20 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | | | | |   |   `-CStyleCastExpr 0x55887c19ade8 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | | | | |   |     `-ImplicitCastExpr 0x55887c19add0 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | | | | |   |       `-ParenExpr 0x55887c19adb0 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | | | | |   |         `-DeclRefExpr 0x55887c19ad60 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:283:20> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | | | | |   `-ImplicitCastExpr 0x55887c19ae88 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | | | | |     `-IntegerLiteral 0x55887c19ae68 <col:74> 'int' 0
| | | | | `-CompoundStmt 0x55887c19bde8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:283:29, line:291:5>
| | | | |   `-ConditionalOperator 0x55887c19bdb8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | | | |     |-ParenExpr 0x55887c19b0d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:3, col:92> 'int'
| | | | |     | `-BinaryOperator 0x55887c19b0b8 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' '&&'
| | | | |     |   |-ImplicitCastExpr 0x55887c19b0a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:4, col:30> 'int' <IntegralCast>
| | | | |     |   | `-CallExpr 0x55887c19af18 <col:4, col:30> 'BOOLEAN':'unsigned char'
| | | | |     |   |   `-ImplicitCastExpr 0x55887c19af00 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | | |     |   |     `-DeclRefExpr 0x55887c19aee0 <col:4> 'BOOLEAN (void)' Function 0x55887c2c82e0 'ReportProgressCodeEnabled' 'BOOLEAN (void)'
| | | | |     |   `-BinaryOperator 0x55887c19b080 <col:35, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' '=='
| | | | |     |     |-ParenExpr 0x55887c19b028 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:35, col:70> 'unsigned int'
| | | | |     |     | `-BinaryOperator 0x55887c19b008 <col:36, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'unsigned int' '&'
| | | | |     |     |   |-ParenExpr 0x55887c19afb0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:36, col:41> 'unsigned int'
| | | | |     |     |   | `-BinaryOperator 0x55887c19af90 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | | | |     |     |   |   |-ImplicitCastExpr 0x55887c19af78 <line:44:28> 'unsigned int' <IntegralCast>
| | | | |     |     |   |   | `-IntegerLiteral 0x55887c19af38 <col:28> 'int' 2
| | | | |     |     |   |   `-IntegerLiteral 0x55887c19af58 <line:59:32> 'unsigned int' 2147483648
| | | | |     |     |   `-ImplicitCastExpr 0x55887c19aff0 <line:32:40> 'unsigned int' <IntegralCast>
| | | | |     |     |     `-IntegerLiteral 0x55887c19afd0 <col:40> 'int' 255
| | | | |     |     `-ImplicitCastExpr 0x55887c19b068 <line:43:28> 'unsigned int' <IntegralCast>
| | | | |     |       `-IntegerLiteral 0x55887c19b048 <col:28> 'int' 1
| | | | |     |-CallExpr 0x55887c19b340 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:368:3, col:30> 'EFI_STATUS':'unsigned long long'
| | | | |     | |-ImplicitCastExpr 0x55887c19b328 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | | | |     | | `-DeclRefExpr 0x55887c19b0f8 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | | | |     | |-BinaryOperator 0x55887c19b170 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | | | |     | | |-ImplicitCastExpr 0x55887c19b158 <line:44:28> 'unsigned int' <IntegralCast>
| | | | |     | | | `-IntegerLiteral 0x55887c19b118 <col:28> 'int' 2
| | | | |     | | `-IntegerLiteral 0x55887c19b138 <line:59:32> 'unsigned int' 2147483648
| | | | |     | `-ImplicitCastExpr 0x55887c19b370 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:289:9, col:73> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | | | |     |   `-ParenExpr 0x55887c19b2b0 <col:9, col:73> 'int'
| | | | |     |     `-BinaryOperator 0x55887c19b290 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:1015:86> 'int' '|'
| | | | |     |       |-ParenExpr 0x55887c19b1f0 <line:702:43, col:69> 'int'
| | | | |     |       | `-BinaryOperator 0x55887c19b1d0 <line:127:29, line:702:59> 'int' '|'
| | | | |     |       |   |-IntegerLiteral 0x55887c19b190 <line:127:29> 'int' 50331648
| | | | |     |       |   `-IntegerLiteral 0x55887c19b1b0 <line:702:59> 'int' 196608
| | | | |     |       `-ParenExpr 0x55887c19b270 <line:1015:51, col:86> 'int'
| | | | |     |         `-BinaryOperator 0x55887c19b250 <line:105:32, line:1015:76> 'int' '|'
| | | | |     |           |-IntegerLiteral 0x55887c19b210 <line:105:32> 'int' 4096
| | | | |     |           `-IntegerLiteral 0x55887c19b230 <line:1015:76> 'int' 2
| | | | |     `-ConditionalOperator 0x55887c19bd88 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | | | |       |-ParenExpr 0x55887c19b580 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:3, col:86> 'int'
| | | | |       | `-BinaryOperator 0x55887c19b560 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28> 'int' '&&'
| | | | |       |   |-ImplicitCastExpr 0x55887c19b548 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:4, col:27> 'int' <IntegralCast>
| | | | |       |   | `-CallExpr 0x55887c19b3c0 <col:4, col:27> 'BOOLEAN':'unsigned char'
| | | | |       |   |   `-ImplicitCastExpr 0x55887c19b3a8 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | | |       |   |     `-DeclRefExpr 0x55887c19b388 <col:4> 'BOOLEAN (void)' Function 0x55887c2c8440 'ReportErrorCodeEnabled' 'BOOLEAN (void)'
| | | | |       |   `-BinaryOperator 0x55887c19b528 <col:32, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28> 'int' '=='
| | | | |       |     |-ParenExpr 0x55887c19b4d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:32, col:67> 'unsigned int'
| | | | |       |     | `-BinaryOperator 0x55887c19b4b0 <col:33, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'unsigned int' '&'
| | | | |       |     |   |-ParenExpr 0x55887c19b458 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:33, col:38> 'unsigned int'
| | | | |       |     |   | `-BinaryOperator 0x55887c19b438 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | | | |       |     |   |   |-ImplicitCastExpr 0x55887c19b420 <line:44:28> 'unsigned int' <IntegralCast>
| | | | |       |     |   |   | `-IntegerLiteral 0x55887c19b3e0 <col:28> 'int' 2
| | | | |       |     |   |   `-IntegerLiteral 0x55887c19b400 <line:59:32> 'unsigned int' 2147483648
| | | | |       |     |   `-ImplicitCastExpr 0x55887c19b498 <line:32:40> 'unsigned int' <IntegralCast>
| | | | |       |     |     `-IntegerLiteral 0x55887c19b478 <col:40> 'int' 255
| | | | |       |     `-ImplicitCastExpr 0x55887c19b510 <line:44:28> 'unsigned int' <IntegralCast>
| | | | |       |       `-IntegerLiteral 0x55887c19b4f0 <col:28> 'int' 2
| | | | |       |-CallExpr 0x55887c19b790 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:370:3, col:30> 'EFI_STATUS':'unsigned long long'
| | | | |       | |-ImplicitCastExpr 0x55887c19b778 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | | | |       | | `-DeclRefExpr 0x55887c19b5a0 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | | | |       | |-BinaryOperator 0x55887c19b618 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | | | |       | | |-ImplicitCastExpr 0x55887c19b600 <line:44:28> 'unsigned int' <IntegralCast>
| | | | |       | | | `-IntegerLiteral 0x55887c19b5c0 <col:28> 'int' 2
| | | | |       | | `-IntegerLiteral 0x55887c19b5e0 <line:59:32> 'unsigned int' 2147483648
| | | | |       | `-ImplicitCastExpr 0x55887c19b7c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:289:9, col:73> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | | | |       |   `-ParenExpr 0x55887c19b758 <col:9, col:73> 'int'
| | | | |       |     `-BinaryOperator 0x55887c19b738 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:1015:86> 'int' '|'
| | | | |       |       |-ParenExpr 0x55887c19b698 <line:702:43, col:69> 'int'
| | | | |       |       | `-BinaryOperator 0x55887c19b678 <line:127:29, line:702:59> 'int' '|'
| | | | |       |       |   |-IntegerLiteral 0x55887c19b638 <line:127:29> 'int' 50331648
| | | | |       |       |   `-IntegerLiteral 0x55887c19b658 <line:702:59> 'int' 196608
| | | | |       |       `-ParenExpr 0x55887c19b718 <line:1015:51, col:86> 'int'
| | | | |       |         `-BinaryOperator 0x55887c19b6f8 <line:105:32, line:1015:76> 'int' '|'
| | | | |       |           |-IntegerLiteral 0x55887c19b6b8 <line:105:32> 'int' 4096
| | | | |       |           `-IntegerLiteral 0x55887c19b6d8 <line:1015:76> 'int' 2
| | | | |       `-ConditionalOperator 0x55887c19bd58 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | | | |         |-ParenExpr 0x55887c19b9d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:3, col:86> 'int'
| | | | |         | `-BinaryOperator 0x55887c19b9b0 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:45:28> 'int' '&&'
| | | | |         |   |-ImplicitCastExpr 0x55887c19b998 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:4, col:27> 'int' <IntegralCast>
| | | | |         |   | `-CallExpr 0x55887c19b810 <col:4, col:27> 'BOOLEAN':'unsigned char'
| | | | |         |   |   `-ImplicitCastExpr 0x55887c19b7f8 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | | |         |   |     `-DeclRefExpr 0x55887c19b7d8 <col:4> 'BOOLEAN (void)' Function 0x55887c2c85a0 'ReportDebugCodeEnabled' 'BOOLEAN (void)'
| | | | |         |   `-BinaryOperator 0x55887c19b978 <col:32, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:45:28> 'int' '=='
| | | | |         |     |-ParenExpr 0x55887c19b920 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:32, col:67> 'unsigned int'
| | | | |         |     | `-BinaryOperator 0x55887c19b900 <col:33, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'unsigned int' '&'
| | | | |         |     |   |-ParenExpr 0x55887c19b8a8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:33, col:38> 'unsigned int'
| | | | |         |     |   | `-BinaryOperator 0x55887c19b888 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | | | |         |     |   |   |-ImplicitCastExpr 0x55887c19b870 <line:44:28> 'unsigned int' <IntegralCast>
| | | | |         |     |   |   | `-IntegerLiteral 0x55887c19b830 <col:28> 'int' 2
| | | | |         |     |   |   `-IntegerLiteral 0x55887c19b850 <line:59:32> 'unsigned int' 2147483648
| | | | |         |     |   `-ImplicitCastExpr 0x55887c19b8e8 <line:32:40> 'unsigned int' <IntegralCast>
| | | | |         |     |     `-IntegerLiteral 0x55887c19b8c8 <col:40> 'int' 255
| | | | |         |     `-ImplicitCastExpr 0x55887c19b960 <line:45:28> 'unsigned int' <IntegralCast>
| | | | |         |       `-IntegerLiteral 0x55887c19b940 <col:28> 'int' 3
| | | | |         |-CallExpr 0x55887c19bbe0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:372:3, col:30> 'EFI_STATUS':'unsigned long long'
| | | | |         | |-ImplicitCastExpr 0x55887c19bbc8 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | | | |         | | `-DeclRefExpr 0x55887c19b9f0 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | | | |         | |-BinaryOperator 0x55887c19ba68 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | | | |         | | |-ImplicitCastExpr 0x55887c19ba50 <line:44:28> 'unsigned int' <IntegralCast>
| | | | |         | | | `-IntegerLiteral 0x55887c19ba10 <col:28> 'int' 2
| | | | |         | | `-IntegerLiteral 0x55887c19ba30 <line:59:32> 'unsigned int' 2147483648
| | | | |         | `-ImplicitCastExpr 0x55887c19bc10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:289:9, col:73> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | | | |         |   `-ParenExpr 0x55887c19bba8 <col:9, col:73> 'int'
| | | | |         |     `-BinaryOperator 0x55887c19bb88 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:1015:86> 'int' '|'
| | | | |         |       |-ParenExpr 0x55887c19bae8 <line:702:43, col:69> 'int'
| | | | |         |       | `-BinaryOperator 0x55887c19bac8 <line:127:29, line:702:59> 'int' '|'
| | | | |         |       |   |-IntegerLiteral 0x55887c19ba88 <line:127:29> 'int' 50331648
| | | | |         |       |   `-IntegerLiteral 0x55887c19baa8 <line:702:59> 'int' 196608
| | | | |         |       `-ParenExpr 0x55887c19bb68 <line:1015:51, col:86> 'int'
| | | | |         |         `-BinaryOperator 0x55887c19bb48 <line:105:32, line:1015:76> 'int' '|'
| | | | |         |           |-IntegerLiteral 0x55887c19bb08 <line:105:32> 'int' 4096
| | | | |         |           `-IntegerLiteral 0x55887c19bb28 <line:1015:76> 'int' 2
| | | | |         `-ParenExpr 0x55887c19bd38 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | | | |           `-CStyleCastExpr 0x55887c19bd10 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | | | |             `-ParenExpr 0x55887c19bcf0 <col:51, col:74> 'unsigned long long'
| | | | |               `-BinaryOperator 0x55887c19bca0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | | | |                 |-IntegerLiteral 0x55887c19bc28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | | | |                 `-ImplicitCastExpr 0x55887c19bc88 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | | | |                   `-ParenExpr 0x55887c19bc68 <col:62, col:73> 'int'
| | | | |                     `-IntegerLiteral 0x55887c19bc48 <line:1081:43> 'int' 3
| | | | |-DoStmt 0x55887c319998 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:446:5, line:453:19>
| | | | | |-CompoundStmt 0x55887c319888 <line:446:8, line:453:5>
| | | | | | `-IfStmt 0x55887c319868 <line:447:7, line:452:7>
| | | | | |   |-CallExpr 0x55887c19be58 <line:447:11, col:31> 'BOOLEAN':'unsigned char'
| | | | | |   | `-ImplicitCastExpr 0x55887c19be40 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | | | |   |   `-DeclRefExpr 0x55887c19be20 <col:11> 'BOOLEAN (void)' Function 0x55887c18d4f0 'DebugAssertEnabled' 'BOOLEAN (void)'
| | | | | |   `-CompoundStmt 0x55887c319850 <col:34, line:452:7>
| | | | | |     `-IfStmt 0x55887c319830 <line:448:9, line:451:9>
| | | | | |       |-ParenExpr 0x55887c19bfd8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | | | | |       | `-BinaryOperator 0x55887c19bfb8 <col:36, col:74> 'int' '<'
| | | | | |       |   |-ParenExpr 0x55887c19bf60 <col:36, col:70> 'INTN':'long long'
| | | | | |       |   | `-CStyleCastExpr 0x55887c19bf38 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | | | | |       |   |   `-CStyleCastExpr 0x55887c19bf00 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | | | | |       |   |     `-ImplicitCastExpr 0x55887c19bee8 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | | | | |       |   |       `-ParenExpr 0x55887c19bec8 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | | | | |       |   |         `-DeclRefExpr 0x55887c19be78 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:293:23> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | | | | |       |   `-ImplicitCastExpr 0x55887c19bfa0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | | | | |       |     `-IntegerLiteral 0x55887c19bf80 <col:74> 'int' 0
| | | | | |       `-CompoundStmt 0x55887c319810 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:448:42, line:451:9>
| | | | | |         |-DoStmt 0x55887c319680 <line:423:5, line:427:19>
| | | | | |         | |-CompoundStmt 0x55887c319570 <line:423:8, line:427:5>
| | | | | |         | | `-IfStmt 0x55887c19c3b0 <line:424:7, line:426:7>
| | | | | |         | |   |-CallExpr 0x55887c19c030 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | | | | |         | |   | `-ImplicitCastExpr 0x55887c19c018 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | | | |         | |   |   `-DeclRefExpr 0x55887c19bff8 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | | | | |         | |   `-CompoundStmt 0x55887c19c398 <col:33, line:426:7>
| | | | | |         | |     `-DoStmt 0x55887c19c378 <line:373:5, line:377:19>
| | | | | |         | |       |-CompoundStmt 0x55887c19c268 <line:373:8, line:377:5>
| | | | | |         | |       | `-IfStmt 0x55887c19c248 <line:374:7, line:376:7>
| | | | | |         | |       |   |-CallExpr 0x55887c19c0a8 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | | | | |         | |       |   | |-ImplicitCastExpr 0x55887c19c090 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | | | | |         | |       |   | | `-DeclRefExpr 0x55887c19c050 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | | | | |         | |       |   | `-ImplicitCastExpr 0x55887c19c0d0 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | | | | |         | |       |   |   `-IntegerLiteral 0x55887c19c070 <col:22> 'unsigned int' 2147483648
| | | | | |         | |       |   `-CompoundStmt 0x55887c19c230 <line:374:48, line:376:7>
| | | | | |         | |       |     `-CallExpr 0x55887c19c198 <line:375:9, col:46> 'void'
| | | | | |         | |       |       |-ImplicitCastExpr 0x55887c19c180 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | | | | |         | |       |       | `-DeclRefExpr 0x55887c19c0e8 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | | | | |         | |       |       |-ImplicitCastExpr 0x55887c19c1d0 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | | | | |         | |       |       | `-IntegerLiteral 0x55887c19c108 <col:22> 'unsigned int' 2147483648
| | | | | |         | |       |       |-ImplicitCastExpr 0x55887c19c200 <line:449:32> 'const CHAR8 *' <NoOp>
| | | | | |         | |       |       | `-ImplicitCastExpr 0x55887c19c1e8 <col:32> 'char *' <ArrayToPointerDecay>
| | | | | |         | |       |       |   `-StringLiteral 0x55887c19c128 <col:32> 'char[33]' lvalue "\nASSERT_EFI_ERROR (Status = %r)\n"
| | | | | |         | |       |       `-ImplicitCastExpr 0x55887c19c218 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:293:23> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | | | | |         | |       |         `-DeclRefExpr 0x55887c19c160 <col:23> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | | | | |         | |       `-ParenExpr 0x55887c19c358 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | | | | |         | |         `-CStyleCastExpr 0x55887c19c330 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | | | |         | |           `-ParenExpr 0x55887c19c310 <col:26, col:31> 'int'
| | | | | |         | |             `-BinaryOperator 0x55887c19c2c0 <col:27, col:30> 'int' '=='
| | | | | |         | |               |-IntegerLiteral 0x55887c19c280 <col:27> 'int' 0
| | | | | |         | |               `-IntegerLiteral 0x55887c19c2a0 <col:30> 'int' 1
| | | | | |         | `-ParenExpr 0x55887c319660 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | | | | |         |   `-CStyleCastExpr 0x55887c319638 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | | | |         |     `-ParenExpr 0x55887c319618 <col:26, col:31> 'int'
| | | | | |         |       `-BinaryOperator 0x55887c3195c8 <col:27, col:30> 'int' '=='
| | | | | |         |         |-IntegerLiteral 0x55887c319588 <col:27> 'int' 0
| | | | | |         |         `-IntegerLiteral 0x55887c3195a8 <col:30> 'int' 1
| | | | | |         `-CallExpr 0x55887c319760 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:352:30, col:113> 'void'
| | | | | |           |-ImplicitCastExpr 0x55887c319748 <col:30> 'void (*)(const CHAR8 *, UINTN, const CHAR8 *)' <FunctionToPointerDecay>
| | | | | |           | `-DeclRefExpr 0x55887c3196a0 <col:30> 'void (const CHAR8 *, UINTN, const CHAR8 *)' Function 0x55887c18d0f8 'DebugAssert' 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| | | | | |           |-ImplicitCastExpr 0x55887c3197b0 <<scratch space>:27:1> 'const CHAR8 *' <NoOp>
| | | | | |           | `-ImplicitCastExpr 0x55887c319798 <col:1> 'char *' <ArrayToPointerDecay>
| | | | | |           |   `-StringLiteral 0x55887c3196c0 <col:1> 'char[10]' lvalue "DxeLoad.c"
| | | | | |           |-ImplicitCastExpr 0x55887c3197c8 <line:28:1> 'UINTN':'unsigned long long' <IntegralCast>
| | | | | |           | `-IntegerLiteral 0x55887c3196e8 <col:1> 'int' 293
| | | | | |           `-ImplicitCastExpr 0x55887c3197f8 <line:29:1> 'const CHAR8 *' <NoOp>
| | | | | |             `-ImplicitCastExpr 0x55887c3197e0 <col:1> 'char *' <ArrayToPointerDecay>
| | | | | |               `-StringLiteral 0x55887c319708 <col:1> 'char[39]' lvalue "!(((INTN)(RETURN_STATUS)(Status)) < 0)"
| | | | | `-ParenExpr 0x55887c319978 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | | | |   `-CStyleCastExpr 0x55887c319950 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | | |     `-ParenExpr 0x55887c319930 <col:26, col:31> 'int'
| | | | |       `-BinaryOperator 0x55887c3198e0 <col:27, col:30> 'int' '=='
| | | | |         |-IntegerLiteral 0x55887c3198a0 <col:27> 'int' 0
| | | | |         `-IntegerLiteral 0x55887c3198c0 <col:30> 'int' 1
| | | | |-BinaryOperator 0x55887c319b10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:295:5, col:50> 'EFI_STATUS':'unsigned long long' '='
| | | | | |-DeclRefExpr 0x55887c3199b8 <col:5> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | | | | `-CallExpr 0x55887c319a78 <col:14, col:50> 'EFI_STATUS':'unsigned long long'
| | | | |   |-ImplicitCastExpr 0x55887c319a60 <col:14, col:24> 'EFI_PEI_S3_RESUME_PPI_RESTORE_CONFIG2':'EFI_STATUS (*)(EFI_PEI_S3_RESUME2_PPI *)' <LValueToRValue>
| | | | |   | `-MemberExpr 0x55887c319a10 <col:14, col:24> 'EFI_PEI_S3_RESUME_PPI_RESTORE_CONFIG2':'EFI_STATUS (*)(EFI_PEI_S3_RESUME2_PPI *)' lvalue ->S3RestoreConfig2 0x55887c17bf20
| | | | |   |   `-ImplicitCastExpr 0x55887c3199f8 <col:14> 'EFI_PEI_S3_RESUME2_PPI *' <LValueToRValue>
| | | | |   |     `-DeclRefExpr 0x55887c3199d8 <col:14> 'EFI_PEI_S3_RESUME2_PPI *' lvalue Var 0x55887c19a5b8 'S3Resume' 'EFI_PEI_S3_RESUME2_PPI *'
| | | | |   `-ImplicitCastExpr 0x55887c319aa0 <col:42> 'EFI_PEI_S3_RESUME2_PPI *' <LValueToRValue>
| | | | |     `-DeclRefExpr 0x55887c319a40 <col:42> 'EFI_PEI_S3_RESUME2_PPI *' lvalue Var 0x55887c19a5b8 'S3Resume' 'EFI_PEI_S3_RESUME2_PPI *'
| | | | `-DoStmt 0x55887c31a508 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:446:5, line:453:19>
| | | |   |-CompoundStmt 0x55887c31a3f8 <line:446:8, line:453:5>
| | | |   | `-IfStmt 0x55887c31a3d8 <line:447:7, line:452:7>
| | | |   |   |-CallExpr 0x55887c319b68 <line:447:11, col:31> 'BOOLEAN':'unsigned char'
| | | |   |   | `-ImplicitCastExpr 0x55887c319b50 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | |   |   |   `-DeclRefExpr 0x55887c319b30 <col:11> 'BOOLEAN (void)' Function 0x55887c18d4f0 'DebugAssertEnabled' 'BOOLEAN (void)'
| | | |   |   `-CompoundStmt 0x55887c31a3c0 <col:34, line:452:7>
| | | |   |     `-IfStmt 0x55887c31a3a0 <line:448:9, line:451:9>
| | | |   |       |-ParenExpr 0x55887c319ce8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | | |   |       | `-BinaryOperator 0x55887c319cc8 <col:36, col:74> 'int' '<'
| | | |   |       |   |-ParenExpr 0x55887c319c70 <col:36, col:70> 'INTN':'long long'
| | | |   |       |   | `-CStyleCastExpr 0x55887c319c48 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | | |   |       |   |   `-CStyleCastExpr 0x55887c319c10 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | | |   |       |   |     `-ImplicitCastExpr 0x55887c319bf8 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | | |   |       |   |       `-ParenExpr 0x55887c319bd8 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | | |   |       |   |         `-DeclRefExpr 0x55887c319b88 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:296:23> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | | |   |       |   `-ImplicitCastExpr 0x55887c319cb0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | | |   |       |     `-IntegerLiteral 0x55887c319c90 <col:74> 'int' 0
| | | |   |       `-CompoundStmt 0x55887c31a380 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:448:42, line:451:9>
| | | |   |         |-DoStmt 0x55887c31a1f0 <line:423:5, line:427:19>
| | | |   |         | |-CompoundStmt 0x55887c31a0e0 <line:423:8, line:427:5>
| | | |   |         | | `-IfStmt 0x55887c31a0c0 <line:424:7, line:426:7>
| | | |   |         | |   |-CallExpr 0x55887c319d40 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | | |   |         | |   | `-ImplicitCastExpr 0x55887c319d28 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | |   |         | |   |   `-DeclRefExpr 0x55887c319d08 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | | |   |         | |   `-CompoundStmt 0x55887c31a0a8 <col:33, line:426:7>
| | | |   |         | |     `-DoStmt 0x55887c31a088 <line:373:5, line:377:19>
| | | |   |         | |       |-CompoundStmt 0x55887c319f78 <line:373:8, line:377:5>
| | | |   |         | |       | `-IfStmt 0x55887c319f58 <line:374:7, line:376:7>
| | | |   |         | |       |   |-CallExpr 0x55887c319db8 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | | |   |         | |       |   | |-ImplicitCastExpr 0x55887c319da0 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | | |   |         | |       |   | | `-DeclRefExpr 0x55887c319d60 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | | |   |         | |       |   | `-ImplicitCastExpr 0x55887c319de0 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | | |   |         | |       |   |   `-IntegerLiteral 0x55887c319d80 <col:22> 'unsigned int' 2147483648
| | | |   |         | |       |   `-CompoundStmt 0x55887c319f40 <line:374:48, line:376:7>
| | | |   |         | |       |     `-CallExpr 0x55887c319ea8 <line:375:9, col:46> 'void'
| | | |   |         | |       |       |-ImplicitCastExpr 0x55887c319e90 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | | |   |         | |       |       | `-DeclRefExpr 0x55887c319df8 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | | |   |         | |       |       |-ImplicitCastExpr 0x55887c319ee0 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | | |   |         | |       |       | `-IntegerLiteral 0x55887c319e18 <col:22> 'unsigned int' 2147483648
| | | |   |         | |       |       |-ImplicitCastExpr 0x55887c319f10 <line:449:32> 'const CHAR8 *' <NoOp>
| | | |   |         | |       |       | `-ImplicitCastExpr 0x55887c319ef8 <col:32> 'char *' <ArrayToPointerDecay>
| | | |   |         | |       |       |   `-StringLiteral 0x55887c319e38 <col:32> 'char[33]' lvalue "\nASSERT_EFI_ERROR (Status = %r)\n"
| | | |   |         | |       |       `-ImplicitCastExpr 0x55887c319f28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:296:23> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | | |   |         | |       |         `-DeclRefExpr 0x55887c319e70 <col:23> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | | |   |         | |       `-ParenExpr 0x55887c31a068 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | | |   |         | |         `-CStyleCastExpr 0x55887c31a040 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | |   |         | |           `-ParenExpr 0x55887c31a020 <col:26, col:31> 'int'
| | | |   |         | |             `-BinaryOperator 0x55887c319fd0 <col:27, col:30> 'int' '=='
| | | |   |         | |               |-IntegerLiteral 0x55887c319f90 <col:27> 'int' 0
| | | |   |         | |               `-IntegerLiteral 0x55887c319fb0 <col:30> 'int' 1
| | | |   |         | `-ParenExpr 0x55887c31a1d0 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | | |   |         |   `-CStyleCastExpr 0x55887c31a1a8 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | |   |         |     `-ParenExpr 0x55887c31a188 <col:26, col:31> 'int'
| | | |   |         |       `-BinaryOperator 0x55887c31a138 <col:27, col:30> 'int' '=='
| | | |   |         |         |-IntegerLiteral 0x55887c31a0f8 <col:27> 'int' 0
| | | |   |         |         `-IntegerLiteral 0x55887c31a118 <col:30> 'int' 1
| | | |   |         `-CallExpr 0x55887c31a2d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:352:30, col:113> 'void'
| | | |   |           |-ImplicitCastExpr 0x55887c31a2b8 <col:30> 'void (*)(const CHAR8 *, UINTN, const CHAR8 *)' <FunctionToPointerDecay>
| | | |   |           | `-DeclRefExpr 0x55887c31a210 <col:30> 'void (const CHAR8 *, UINTN, const CHAR8 *)' Function 0x55887c18d0f8 'DebugAssert' 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| | | |   |           |-ImplicitCastExpr 0x55887c31a320 <<scratch space>:30:1> 'const CHAR8 *' <NoOp>
| | | |   |           | `-ImplicitCastExpr 0x55887c31a308 <col:1> 'char *' <ArrayToPointerDecay>
| | | |   |           |   `-StringLiteral 0x55887c31a230 <col:1> 'char[10]' lvalue "DxeLoad.c"
| | | |   |           |-ImplicitCastExpr 0x55887c31a338 <line:31:1> 'UINTN':'unsigned long long' <IntegralCast>
| | | |   |           | `-IntegerLiteral 0x55887c31a258 <col:1> 'int' 296
| | | |   |           `-ImplicitCastExpr 0x55887c31a368 <line:32:1> 'const CHAR8 *' <NoOp>
| | | |   |             `-ImplicitCastExpr 0x55887c31a350 <col:1> 'char *' <ArrayToPointerDecay>
| | | |   |               `-StringLiteral 0x55887c31a278 <col:1> 'char[39]' lvalue "!(((INTN)(RETURN_STATUS)(Status)) < 0)"
| | | |   `-ParenExpr 0x55887c31a4e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | | |     `-CStyleCastExpr 0x55887c31a4c0 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | |       `-ParenExpr 0x55887c31a4a0 <col:26, col:31> 'int'
| | | |         `-BinaryOperator 0x55887c31a450 <col:27, col:30> 'int' '=='
| | | |           |-IntegerLiteral 0x55887c31a410 <col:27> 'int' 0
| | | |           `-IntegerLiteral 0x55887c31a430 <col:30> 'int' 1
| | | `-IfStmt 0x55887c320738 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:297:10, line:362:3> has_else
| | |   |-BinaryOperator 0x55887c31a5d0 <line:297:14, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiBootMode.h:34:56> 'int' '=='
| | |   | |-ImplicitCastExpr 0x55887c31a5a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:297:14> 'EFI_BOOT_MODE':'unsigned int' <LValueToRValue>
| | |   | | `-DeclRefExpr 0x55887c31a560 <col:14> 'EFI_BOOT_MODE':'unsigned int' lvalue Var 0x55887c19a0e8 'BootMode' 'EFI_BOOT_MODE':'unsigned int'
| | |   | `-ImplicitCastExpr 0x55887c31a5b8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiBootMode.h:34:56> 'unsigned int' <IntegralCast>
| | |   |   `-IntegerLiteral 0x55887c31a580 <col:56> 'int' 32
| | |   |-CompoundStmt 0x55887c31fc00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:297:49, line:336:3>
| | |   | |-ConditionalOperator 0x55887c31b218 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | |   | | |-ParenExpr 0x55887c31a760 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:3, col:92> 'int'
| | |   | | | `-BinaryOperator 0x55887c31a740 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' '&&'
| | |   | | |   |-ImplicitCastExpr 0x55887c31a728 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:4, col:30> 'int' <IntegralCast>
| | |   | | |   | `-CallExpr 0x55887c31a628 <col:4, col:30> 'BOOLEAN':'unsigned char'
| | |   | | |   |   `-ImplicitCastExpr 0x55887c31a610 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | | |   |     `-DeclRefExpr 0x55887c31a5f0 <col:4> 'BOOLEAN (void)' Function 0x55887c2c82e0 'ReportProgressCodeEnabled' 'BOOLEAN (void)'
| | |   | | |   `-BinaryOperator 0x55887c31a708 <col:35, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' '=='
| | |   | | |     |-ParenExpr 0x55887c31a6c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:35, col:70> 'int'
| | |   | | |     | `-BinaryOperator 0x55887c31a6a8 <col:36, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'int' '&'
| | |   | | |     |   |-ParenExpr 0x55887c31a668 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:36, col:41> 'int'
| | |   | | |     |   | `-IntegerLiteral 0x55887c31a648 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' 1
| | |   | | |     |   `-IntegerLiteral 0x55887c31a688 <line:32:40> 'int' 255
| | |   | | |     `-IntegerLiteral 0x55887c31a6e8 <line:43:28> 'int' 1
| | |   | | |-CallExpr 0x55887c31a918 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:368:3, col:30> 'EFI_STATUS':'unsigned long long'
| | |   | | | |-ImplicitCastExpr 0x55887c31a900 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | |   | | | | `-DeclRefExpr 0x55887c31a780 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | |   | | | |-ImplicitCastExpr 0x55887c31a948 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'EFI_STATUS_CODE_TYPE':'unsigned int' <IntegralCast>
| | |   | | | | `-IntegerLiteral 0x55887c31a7a0 <col:28> 'int' 1
| | |   | | | `-ImplicitCastExpr 0x55887c31a960 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:298:44, col:99> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | |   | | |   `-ParenExpr 0x55887c31a8e0 <col:44, col:99> 'int'
| | |   | | |     `-BinaryOperator 0x55887c31a8c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:763:74> 'int' '|'
| | |   | | |       |-ParenExpr 0x55887c31a820 <line:702:43, col:69> 'int'
| | |   | | |       | `-BinaryOperator 0x55887c31a800 <line:127:29, line:702:59> 'int' '|'
| | |   | | |       |   |-IntegerLiteral 0x55887c31a7c0 <line:127:29> 'int' 50331648
| | |   | | |       |   `-IntegerLiteral 0x55887c31a7e0 <line:702:59> 'int' 196608
| | |   | | |       `-ParenExpr 0x55887c31a8a0 <line:763:39, col:74> 'int'
| | |   | | |         `-BinaryOperator 0x55887c31a880 <line:105:32, line:763:64> 'int' '|'
| | |   | | |           |-IntegerLiteral 0x55887c31a840 <line:105:32> 'int' 4096
| | |   | | |           `-IntegerLiteral 0x55887c31a860 <line:763:64> 'int' 0
| | |   | | `-ConditionalOperator 0x55887c31b1e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | |   | |   |-ParenExpr 0x55887c31aae8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:3, col:86> 'int'
| | |   | |   | `-BinaryOperator 0x55887c31aac8 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28> 'int' '&&'
| | |   | |   |   |-ImplicitCastExpr 0x55887c31aab0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:4, col:27> 'int' <IntegralCast>
| | |   | |   |   | `-CallExpr 0x55887c31a9b0 <col:4, col:27> 'BOOLEAN':'unsigned char'
| | |   | |   |   |   `-ImplicitCastExpr 0x55887c31a998 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | |   |   |     `-DeclRefExpr 0x55887c31a978 <col:4> 'BOOLEAN (void)' Function 0x55887c2c8440 'ReportErrorCodeEnabled' 'BOOLEAN (void)'
| | |   | |   |   `-BinaryOperator 0x55887c31aa90 <col:32, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28> 'int' '=='
| | |   | |   |     |-ParenExpr 0x55887c31aa50 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:32, col:67> 'int'
| | |   | |   |     | `-BinaryOperator 0x55887c31aa30 <col:33, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'int' '&'
| | |   | |   |     |   |-ParenExpr 0x55887c31a9f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:33, col:38> 'int'
| | |   | |   |     |   | `-IntegerLiteral 0x55887c31a9d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' 1
| | |   | |   |     |   `-IntegerLiteral 0x55887c31aa10 <line:32:40> 'int' 255
| | |   | |   |     `-IntegerLiteral 0x55887c31aa70 <line:44:28> 'int' 2
| | |   | |   |-CallExpr 0x55887c31aca0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:370:3, col:30> 'EFI_STATUS':'unsigned long long'
| | |   | |   | |-ImplicitCastExpr 0x55887c31ac88 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | |   | |   | | `-DeclRefExpr 0x55887c31ab08 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | |   | |   | |-ImplicitCastExpr 0x55887c31acd0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'EFI_STATUS_CODE_TYPE':'unsigned int' <IntegralCast>
| | |   | |   | | `-IntegerLiteral 0x55887c31ab28 <col:28> 'int' 1
| | |   | |   | `-ImplicitCastExpr 0x55887c31ace8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:298:44, col:99> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | |   | |   |   `-ParenExpr 0x55887c31ac68 <col:44, col:99> 'int'
| | |   | |   |     `-BinaryOperator 0x55887c31ac48 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:763:74> 'int' '|'
| | |   | |   |       |-ParenExpr 0x55887c31aba8 <line:702:43, col:69> 'int'
| | |   | |   |       | `-BinaryOperator 0x55887c31ab88 <line:127:29, line:702:59> 'int' '|'
| | |   | |   |       |   |-IntegerLiteral 0x55887c31ab48 <line:127:29> 'int' 50331648
| | |   | |   |       |   `-IntegerLiteral 0x55887c31ab68 <line:702:59> 'int' 196608
| | |   | |   |       `-ParenExpr 0x55887c31ac28 <line:763:39, col:74> 'int'
| | |   | |   |         `-BinaryOperator 0x55887c31ac08 <line:105:32, line:763:64> 'int' '|'
| | |   | |   |           |-IntegerLiteral 0x55887c31abc8 <line:105:32> 'int' 4096
| | |   | |   |           `-IntegerLiteral 0x55887c31abe8 <line:763:64> 'int' 0
| | |   | |   `-ConditionalOperator 0x55887c31b1b8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | |   | |     |-ParenExpr 0x55887c31ae70 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:3, col:86> 'int'
| | |   | |     | `-BinaryOperator 0x55887c31ae50 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:45:28> 'int' '&&'
| | |   | |     |   |-ImplicitCastExpr 0x55887c31ae38 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:4, col:27> 'int' <IntegralCast>
| | |   | |     |   | `-CallExpr 0x55887c31ad38 <col:4, col:27> 'BOOLEAN':'unsigned char'
| | |   | |     |   |   `-ImplicitCastExpr 0x55887c31ad20 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | |     |   |     `-DeclRefExpr 0x55887c31ad00 <col:4> 'BOOLEAN (void)' Function 0x55887c2c85a0 'ReportDebugCodeEnabled' 'BOOLEAN (void)'
| | |   | |     |   `-BinaryOperator 0x55887c31ae18 <col:32, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:45:28> 'int' '=='
| | |   | |     |     |-ParenExpr 0x55887c31add8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:32, col:67> 'int'
| | |   | |     |     | `-BinaryOperator 0x55887c31adb8 <col:33, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'int' '&'
| | |   | |     |     |   |-ParenExpr 0x55887c31ad78 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:33, col:38> 'int'
| | |   | |     |     |   | `-IntegerLiteral 0x55887c31ad58 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' 1
| | |   | |     |     |   `-IntegerLiteral 0x55887c31ad98 <line:32:40> 'int' 255
| | |   | |     |     `-IntegerLiteral 0x55887c31adf8 <line:45:28> 'int' 3
| | |   | |     |-CallExpr 0x55887c31b028 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:372:3, col:30> 'EFI_STATUS':'unsigned long long'
| | |   | |     | |-ImplicitCastExpr 0x55887c31b010 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | |   | |     | | `-DeclRefExpr 0x55887c31ae90 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | |   | |     | |-ImplicitCastExpr 0x55887c31b058 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'EFI_STATUS_CODE_TYPE':'unsigned int' <IntegralCast>
| | |   | |     | | `-IntegerLiteral 0x55887c31aeb0 <col:28> 'int' 1
| | |   | |     | `-ImplicitCastExpr 0x55887c31b070 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:298:44, col:99> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | |   | |     |   `-ParenExpr 0x55887c31aff0 <col:44, col:99> 'int'
| | |   | |     |     `-BinaryOperator 0x55887c31afd0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:763:74> 'int' '|'
| | |   | |     |       |-ParenExpr 0x55887c31af30 <line:702:43, col:69> 'int'
| | |   | |     |       | `-BinaryOperator 0x55887c31af10 <line:127:29, line:702:59> 'int' '|'
| | |   | |     |       |   |-IntegerLiteral 0x55887c31aed0 <line:127:29> 'int' 50331648
| | |   | |     |       |   `-IntegerLiteral 0x55887c31aef0 <line:702:59> 'int' 196608
| | |   | |     |       `-ParenExpr 0x55887c31afb0 <line:763:39, col:74> 'int'
| | |   | |     |         `-BinaryOperator 0x55887c31af90 <line:105:32, line:763:64> 'int' '|'
| | |   | |     |           |-IntegerLiteral 0x55887c31af50 <line:105:32> 'int' 4096
| | |   | |     |           `-IntegerLiteral 0x55887c31af70 <line:763:64> 'int' 0
| | |   | |     `-ParenExpr 0x55887c31b198 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | |   | |       `-CStyleCastExpr 0x55887c31b170 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |   | |         `-ParenExpr 0x55887c31b150 <col:51, col:74> 'unsigned long long'
| | |   | |           `-BinaryOperator 0x55887c31b100 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | |   | |             |-IntegerLiteral 0x55887c31b088 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | |   | |             `-ImplicitCastExpr 0x55887c31b0e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | |   | |               `-ParenExpr 0x55887c31b0c8 <col:62, col:73> 'int'
| | |   | |                 `-IntegerLiteral 0x55887c31b0a8 <line:1081:43> 'int' 3
| | |   | |-BinaryOperator 0x55887c31b4d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:299:5, line:304:16> 'EFI_STATUS':'unsigned long long' '='
| | |   | | |-DeclRefExpr 0x55887c31b248 <line:299:5> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | |   | | `-CallExpr 0x55887c31b448 <col:14, line:304:16> 'EFI_STATUS':'unsigned long long'
| | |   | |   |-ImplicitCastExpr 0x55887c31b430 <line:299:14> 'EFI_STATUS (*)(const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)' <FunctionToPointerDecay>
| | |   | |   | `-DeclRefExpr 0x55887c31b268 <col:14> 'EFI_STATUS (const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)' Function 0x55887c1394a8 'PeiServicesLocatePpi' 'EFI_STATUS (const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)'
| | |   | |   |-ImplicitCastExpr 0x55887c31b488 <line:300:16, col:17> 'const EFI_GUID *' <NoOp>
| | |   | |   | `-UnaryOperator 0x55887c31b2a8 <col:16, col:17> 'EFI_GUID *' prefix '&' cannot overflow
| | |   | |   |   `-DeclRefExpr 0x55887c31b288 <col:17> 'EFI_GUID':'GUID' lvalue Var 0x55887c17e4b8 'gEfiPeiRecoveryModulePpiGuid' 'EFI_GUID':'GUID'
| | |   | |   |-ImplicitCastExpr 0x55887c31b4a0 <line:301:16> 'UINTN':'unsigned long long' <IntegralCast>
| | |   | |   | `-IntegerLiteral 0x55887c31b2c0 <col:16> 'int' 0
| | |   | |   |-ImplicitCastExpr 0x55887c31b4b8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'EFI_PEI_PPI_DESCRIPTOR **' <NullToPointer>
| | |   | |   | `-ParenExpr 0x55887c31b340 <col:15, col:26> 'void *'
| | |   | |   |   `-CStyleCastExpr 0x55887c31b318 <col:16, col:25> 'void *' <NullToPointer>
| | |   | |   |     `-IntegerLiteral 0x55887c31b2e0 <col:25> 'int' 0
| | |   | |   `-CStyleCastExpr 0x55887c31b408 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:303:16, col:26> 'void **' <BitCast>
| | |   | |     `-UnaryOperator 0x55887c31b3d8 <col:25, col:26> 'EFI_PEI_RECOVERY_MODULE_PPI **' prefix '&' cannot overflow
| | |   | |       `-DeclRefExpr 0x55887c31b360 <col:26> 'EFI_PEI_RECOVERY_MODULE_PPI *' lvalue Var 0x55887c19a648 'PeiRecovery' 'EFI_PEI_RECOVERY_MODULE_PPI *'
| | |   | |-IfStmt 0x55887c31cb10 <line:306:5, line:316:5>
| | |   | | |-ParenExpr 0x55887c31b670 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | |   | | | `-BinaryOperator 0x55887c31b650 <col:36, col:74> 'int' '<'
| | |   | | |   |-ParenExpr 0x55887c31b5f8 <col:36, col:70> 'INTN':'long long'
| | |   | | |   | `-CStyleCastExpr 0x55887c31b5d0 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | |   | | |   |   `-CStyleCastExpr 0x55887c31b598 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |   | | |   |     `-ImplicitCastExpr 0x55887c31b580 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | |   | | |   |       `-ParenExpr 0x55887c31b540 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | |   | | |   |         `-DeclRefExpr 0x55887c31b4f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:306:20> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | |   | | |   `-ImplicitCastExpr 0x55887c31b638 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | |   | | |     `-IntegerLiteral 0x55887c31b618 <col:74> 'int' 0
| | |   | | `-CompoundStmt 0x55887c31cae8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:306:29, line:316:5>
| | |   | |   |-DoStmt 0x55887c31bbc0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:423:5, line:427:19>
| | |   | |   | |-CompoundStmt 0x55887c31bab0 <line:423:8, line:427:5>
| | |   | |   | | `-IfStmt 0x55887c31ba90 <line:424:7, line:426:7>
| | |   | |   | |   |-CallExpr 0x55887c31b6c8 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | |   | |   | |   | `-ImplicitCastExpr 0x55887c31b6b0 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | |   | |   |   `-DeclRefExpr 0x55887c31b690 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | |   | |   | |   `-CompoundStmt 0x55887c31ba78 <col:33, line:426:7>
| | |   | |   | |     `-DoStmt 0x55887c31ba58 <line:373:5, line:377:19>
| | |   | |   | |       |-CompoundStmt 0x55887c31b948 <line:373:8, line:377:5>
| | |   | |   | |       | `-IfStmt 0x55887c31b928 <line:374:7, line:376:7>
| | |   | |   | |       |   |-CallExpr 0x55887c31b740 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | |   | |   | |       |   | |-ImplicitCastExpr 0x55887c31b728 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | |   | |   | |       |   | | `-DeclRefExpr 0x55887c31b6e8 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | |   | |   | |       |   | `-ImplicitCastExpr 0x55887c31b768 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | |   | |   | |       |   |   `-IntegerLiteral 0x55887c31b708 <col:22> 'unsigned int' 2147483648
| | |   | |   | |       |   `-CompoundStmt 0x55887c31b910 <line:374:48, line:376:7>
| | |   | |   | |       |     `-CallExpr 0x55887c31b878 <line:375:9, col:46> 'void'
| | |   | |   | |       |       |-ImplicitCastExpr 0x55887c31b860 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | |   | |   | |       |       | `-DeclRefExpr 0x55887c31b780 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | |   | |   | |       |       |-ImplicitCastExpr 0x55887c31b8b0 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | |   | |   | |       |       | `-IntegerLiteral 0x55887c31b7a0 <col:22> 'unsigned int' 2147483648
| | |   | |   | |       |       |-ImplicitCastExpr 0x55887c31b8e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:307:28> 'const CHAR8 *' <NoOp>
| | |   | |   | |       |       | `-ImplicitCastExpr 0x55887c31b8c8 <col:28> 'char *' <ArrayToPointerDecay>
| | |   | |   | |       |       |   `-StringLiteral 0x55887c31b7f8 <col:28> 'char[42]' lvalue "Locate Recovery PPI Failed.(Status = %r)\n"
| | |   | |   | |       |       `-ImplicitCastExpr 0x55887c31b8f8 <col:74> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | |   | |   | |       |         `-DeclRefExpr 0x55887c31b840 <col:74> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | |   | |   | |       `-ParenExpr 0x55887c31ba38 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |   | |   | |         `-CStyleCastExpr 0x55887c31ba10 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   | |   | |           `-ParenExpr 0x55887c31b9f0 <col:26, col:31> 'int'
| | |   | |   | |             `-BinaryOperator 0x55887c31b9a0 <col:27, col:30> 'int' '=='
| | |   | |   | |               |-IntegerLiteral 0x55887c31b960 <col:27> 'int' 0
| | |   | |   | |               `-IntegerLiteral 0x55887c31b980 <col:30> 'int' 1
| | |   | |   | `-ParenExpr 0x55887c31bba0 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | |   | |   |   `-CStyleCastExpr 0x55887c31bb78 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   | |   |     `-ParenExpr 0x55887c31bb58 <col:26, col:31> 'int'
| | |   | |   |       `-BinaryOperator 0x55887c31bb08 <col:27, col:30> 'int' '=='
| | |   | |   |         |-IntegerLiteral 0x55887c31bac8 <col:27> 'int' 0
| | |   | |   |         `-IntegerLiteral 0x55887c31bae8 <col:30> 'int' 1
| | |   | |   |-ConditionalOperator 0x55887c31ca60 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | |   | |   | |-ParenExpr 0x55887c31bdd8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:3, col:92> 'int'
| | |   | |   | | `-BinaryOperator 0x55887c31bdb8 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' '&&'
| | |   | |   | |   |-ImplicitCastExpr 0x55887c31bda0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:4, col:30> 'int' <IntegralCast>
| | |   | |   | |   | `-CallExpr 0x55887c31bc18 <col:4, col:30> 'BOOLEAN':'unsigned char'
| | |   | |   | |   |   `-ImplicitCastExpr 0x55887c31bc00 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | |   | |   |     `-DeclRefExpr 0x55887c31bbe0 <col:4> 'BOOLEAN (void)' Function 0x55887c2c82e0 'ReportProgressCodeEnabled' 'BOOLEAN (void)'
| | |   | |   | |   `-BinaryOperator 0x55887c31bd80 <col:35, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' '=='
| | |   | |   | |     |-ParenExpr 0x55887c31bd28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:35, col:70> 'unsigned int'
| | |   | |   | |     | `-BinaryOperator 0x55887c31bd08 <col:36, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'unsigned int' '&'
| | |   | |   | |     |   |-ParenExpr 0x55887c31bcb0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:36, col:41> 'unsigned int'
| | |   | |   | |     |   | `-BinaryOperator 0x55887c31bc90 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | |   | |   | |     |   |   |-ImplicitCastExpr 0x55887c31bc78 <line:44:28> 'unsigned int' <IntegralCast>
| | |   | |   | |     |   |   | `-IntegerLiteral 0x55887c31bc38 <col:28> 'int' 2
| | |   | |   | |     |   |   `-IntegerLiteral 0x55887c31bc58 <line:59:32> 'unsigned int' 2147483648
| | |   | |   | |     |   `-ImplicitCastExpr 0x55887c31bcf0 <line:32:40> 'unsigned int' <IntegralCast>
| | |   | |   | |     |     `-IntegerLiteral 0x55887c31bcd0 <col:40> 'int' 255
| | |   | |   | |     `-ImplicitCastExpr 0x55887c31bd68 <line:43:28> 'unsigned int' <IntegralCast>
| | |   | |   | |       `-IntegerLiteral 0x55887c31bd48 <col:28> 'int' 1
| | |   | |   | |-CallExpr 0x55887c31bfe8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:368:3, col:30> 'EFI_STATUS':'unsigned long long'
| | |   | |   | | |-ImplicitCastExpr 0x55887c31bfd0 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | |   | |   | | | `-DeclRefExpr 0x55887c31bdf8 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | |   | |   | | |-BinaryOperator 0x55887c31be70 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | |   | |   | | | |-ImplicitCastExpr 0x55887c31be58 <line:44:28> 'unsigned int' <IntegralCast>
| | |   | |   | | | | `-IntegerLiteral 0x55887c31be18 <col:28> 'int' 2
| | |   | |   | | | `-IntegerLiteral 0x55887c31be38 <line:59:32> 'unsigned int' 2147483648
| | |   | |   | | `-ImplicitCastExpr 0x55887c31c018 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:313:9, col:72> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | |   | |   | |   `-ParenExpr 0x55887c31bfb0 <col:9, col:72> 'int'
| | |   | |   | |     `-BinaryOperator 0x55887c31bf90 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:1019:86> 'int' '|'
| | |   | |   | |       |-ParenExpr 0x55887c31bef0 <line:702:43, col:69> 'int'
| | |   | |   | |       | `-BinaryOperator 0x55887c31bed0 <line:127:29, line:702:59> 'int' '|'
| | |   | |   | |       |   |-IntegerLiteral 0x55887c31be90 <line:127:29> 'int' 50331648
| | |   | |   | |       |   `-IntegerLiteral 0x55887c31beb0 <line:702:59> 'int' 196608
| | |   | |   | |       `-ParenExpr 0x55887c31bf70 <line:1019:51, col:86> 'int'
| | |   | |   | |         `-BinaryOperator 0x55887c31bf50 <line:105:32, line:1019:76> 'int' '|'
| | |   | |   | |           |-IntegerLiteral 0x55887c31bf10 <line:105:32> 'int' 4096
| | |   | |   | |           `-IntegerLiteral 0x55887c31bf30 <line:1019:76> 'int' 6
| | |   | |   | `-ConditionalOperator 0x55887c31ca30 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | |   | |   |   |-ParenExpr 0x55887c31c228 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:3, col:86> 'int'
| | |   | |   |   | `-BinaryOperator 0x55887c31c208 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28> 'int' '&&'
| | |   | |   |   |   |-ImplicitCastExpr 0x55887c31c1f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:4, col:27> 'int' <IntegralCast>
| | |   | |   |   |   | `-CallExpr 0x55887c31c068 <col:4, col:27> 'BOOLEAN':'unsigned char'
| | |   | |   |   |   |   `-ImplicitCastExpr 0x55887c31c050 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | |   |   |   |     `-DeclRefExpr 0x55887c31c030 <col:4> 'BOOLEAN (void)' Function 0x55887c2c8440 'ReportErrorCodeEnabled' 'BOOLEAN (void)'
| | |   | |   |   |   `-BinaryOperator 0x55887c31c1d0 <col:32, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28> 'int' '=='
| | |   | |   |   |     |-ParenExpr 0x55887c31c178 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:32, col:67> 'unsigned int'
| | |   | |   |   |     | `-BinaryOperator 0x55887c31c158 <col:33, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'unsigned int' '&'
| | |   | |   |   |     |   |-ParenExpr 0x55887c31c100 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:33, col:38> 'unsigned int'
| | |   | |   |   |     |   | `-BinaryOperator 0x55887c31c0e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | |   | |   |   |     |   |   |-ImplicitCastExpr 0x55887c31c0c8 <line:44:28> 'unsigned int' <IntegralCast>
| | |   | |   |   |     |   |   | `-IntegerLiteral 0x55887c31c088 <col:28> 'int' 2
| | |   | |   |   |     |   |   `-IntegerLiteral 0x55887c31c0a8 <line:59:32> 'unsigned int' 2147483648
| | |   | |   |   |     |   `-ImplicitCastExpr 0x55887c31c140 <line:32:40> 'unsigned int' <IntegralCast>
| | |   | |   |   |     |     `-IntegerLiteral 0x55887c31c120 <col:40> 'int' 255
| | |   | |   |   |     `-ImplicitCastExpr 0x55887c31c1b8 <line:44:28> 'unsigned int' <IntegralCast>
| | |   | |   |   |       `-IntegerLiteral 0x55887c31c198 <col:28> 'int' 2
| | |   | |   |   |-CallExpr 0x55887c31c438 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:370:3, col:30> 'EFI_STATUS':'unsigned long long'
| | |   | |   |   | |-ImplicitCastExpr 0x55887c31c420 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | |   | |   |   | | `-DeclRefExpr 0x55887c31c248 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | |   | |   |   | |-BinaryOperator 0x55887c31c2c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | |   | |   |   | | |-ImplicitCastExpr 0x55887c31c2a8 <line:44:28> 'unsigned int' <IntegralCast>
| | |   | |   |   | | | `-IntegerLiteral 0x55887c31c268 <col:28> 'int' 2
| | |   | |   |   | | `-IntegerLiteral 0x55887c31c288 <line:59:32> 'unsigned int' 2147483648
| | |   | |   |   | `-ImplicitCastExpr 0x55887c31c468 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:313:9, col:72> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | |   | |   |   |   `-ParenExpr 0x55887c31c400 <col:9, col:72> 'int'
| | |   | |   |   |     `-BinaryOperator 0x55887c31c3e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:1019:86> 'int' '|'
| | |   | |   |   |       |-ParenExpr 0x55887c31c340 <line:702:43, col:69> 'int'
| | |   | |   |   |       | `-BinaryOperator 0x55887c31c320 <line:127:29, line:702:59> 'int' '|'
| | |   | |   |   |       |   |-IntegerLiteral 0x55887c31c2e0 <line:127:29> 'int' 50331648
| | |   | |   |   |       |   `-IntegerLiteral 0x55887c31c300 <line:702:59> 'int' 196608
| | |   | |   |   |       `-ParenExpr 0x55887c31c3c0 <line:1019:51, col:86> 'int'
| | |   | |   |   |         `-BinaryOperator 0x55887c31c3a0 <line:105:32, line:1019:76> 'int' '|'
| | |   | |   |   |           |-IntegerLiteral 0x55887c31c360 <line:105:32> 'int' 4096
| | |   | |   |   |           `-IntegerLiteral 0x55887c31c380 <line:1019:76> 'int' 6
| | |   | |   |   `-ConditionalOperator 0x55887c31ca00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | |   | |   |     |-ParenExpr 0x55887c31c678 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:3, col:86> 'int'
| | |   | |   |     | `-BinaryOperator 0x55887c31c658 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:45:28> 'int' '&&'
| | |   | |   |     |   |-ImplicitCastExpr 0x55887c31c640 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:4, col:27> 'int' <IntegralCast>
| | |   | |   |     |   | `-CallExpr 0x55887c31c4b8 <col:4, col:27> 'BOOLEAN':'unsigned char'
| | |   | |   |     |   |   `-ImplicitCastExpr 0x55887c31c4a0 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | |   |     |   |     `-DeclRefExpr 0x55887c31c480 <col:4> 'BOOLEAN (void)' Function 0x55887c2c85a0 'ReportDebugCodeEnabled' 'BOOLEAN (void)'
| | |   | |   |     |   `-BinaryOperator 0x55887c31c620 <col:32, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:45:28> 'int' '=='
| | |   | |   |     |     |-ParenExpr 0x55887c31c5c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:32, col:67> 'unsigned int'
| | |   | |   |     |     | `-BinaryOperator 0x55887c31c5a8 <col:33, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'unsigned int' '&'
| | |   | |   |     |     |   |-ParenExpr 0x55887c31c550 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:33, col:38> 'unsigned int'
| | |   | |   |     |     |   | `-BinaryOperator 0x55887c31c530 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | |   | |   |     |     |   |   |-ImplicitCastExpr 0x55887c31c518 <line:44:28> 'unsigned int' <IntegralCast>
| | |   | |   |     |     |   |   | `-IntegerLiteral 0x55887c31c4d8 <col:28> 'int' 2
| | |   | |   |     |     |   |   `-IntegerLiteral 0x55887c31c4f8 <line:59:32> 'unsigned int' 2147483648
| | |   | |   |     |     |   `-ImplicitCastExpr 0x55887c31c590 <line:32:40> 'unsigned int' <IntegralCast>
| | |   | |   |     |     |     `-IntegerLiteral 0x55887c31c570 <col:40> 'int' 255
| | |   | |   |     |     `-ImplicitCastExpr 0x55887c31c608 <line:45:28> 'unsigned int' <IntegralCast>
| | |   | |   |     |       `-IntegerLiteral 0x55887c31c5e8 <col:28> 'int' 3
| | |   | |   |     |-CallExpr 0x55887c31c888 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:372:3, col:30> 'EFI_STATUS':'unsigned long long'
| | |   | |   |     | |-ImplicitCastExpr 0x55887c31c870 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | |   | |   |     | | `-DeclRefExpr 0x55887c31c698 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | |   | |   |     | |-BinaryOperator 0x55887c31c710 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | |   | |   |     | | |-ImplicitCastExpr 0x55887c31c6f8 <line:44:28> 'unsigned int' <IntegralCast>
| | |   | |   |     | | | `-IntegerLiteral 0x55887c31c6b8 <col:28> 'int' 2
| | |   | |   |     | | `-IntegerLiteral 0x55887c31c6d8 <line:59:32> 'unsigned int' 2147483648
| | |   | |   |     | `-ImplicitCastExpr 0x55887c31c8b8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:313:9, col:72> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | |   | |   |     |   `-ParenExpr 0x55887c31c850 <col:9, col:72> 'int'
| | |   | |   |     |     `-BinaryOperator 0x55887c31c830 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:1019:86> 'int' '|'
| | |   | |   |     |       |-ParenExpr 0x55887c31c790 <line:702:43, col:69> 'int'
| | |   | |   |     |       | `-BinaryOperator 0x55887c31c770 <line:127:29, line:702:59> 'int' '|'
| | |   | |   |     |       |   |-IntegerLiteral 0x55887c31c730 <line:127:29> 'int' 50331648
| | |   | |   |     |       |   `-IntegerLiteral 0x55887c31c750 <line:702:59> 'int' 196608
| | |   | |   |     |       `-ParenExpr 0x55887c31c810 <line:1019:51, col:86> 'int'
| | |   | |   |     |         `-BinaryOperator 0x55887c31c7f0 <line:105:32, line:1019:76> 'int' '|'
| | |   | |   |     |           |-IntegerLiteral 0x55887c31c7b0 <line:105:32> 'int' 4096
| | |   | |   |     |           `-IntegerLiteral 0x55887c31c7d0 <line:1019:76> 'int' 6
| | |   | |   |     `-ParenExpr 0x55887c31c9e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | |   | |   |       `-CStyleCastExpr 0x55887c31c9b8 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |   | |   |         `-ParenExpr 0x55887c31c998 <col:51, col:74> 'unsigned long long'
| | |   | |   |           `-BinaryOperator 0x55887c31c948 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | |   | |   |             |-IntegerLiteral 0x55887c31c8d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | |   | |   |             `-ImplicitCastExpr 0x55887c31c930 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | |   | |   |               `-ParenExpr 0x55887c31c910 <col:62, col:73> 'int'
| | |   | |   |                 `-IntegerLiteral 0x55887c31c8f0 <line:1081:43> 'int' 3
| | |   | |   `-CallExpr 0x55887c31cac8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:315:7, col:20> 'void'
| | |   | |     `-ImplicitCastExpr 0x55887c31cab0 <col:7> 'void (*)(void)' <FunctionToPointerDecay>
| | |   | |       `-DeclRefExpr 0x55887c31ca90 <col:7> 'void (void)' Function 0x55887c13deb0 'CpuDeadLoop' 'void (void)'
| | |   | |-ConditionalOperator 0x55887c31d780 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | |   | | |-ParenExpr 0x55887c31cca0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:3, col:92> 'int'
| | |   | | | `-BinaryOperator 0x55887c31cc80 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' '&&'
| | |   | | |   |-ImplicitCastExpr 0x55887c31cc68 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:4, col:30> 'int' <IntegralCast>
| | |   | | |   | `-CallExpr 0x55887c31cb68 <col:4, col:30> 'BOOLEAN':'unsigned char'
| | |   | | |   |   `-ImplicitCastExpr 0x55887c31cb50 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | | |   |     `-DeclRefExpr 0x55887c31cb30 <col:4> 'BOOLEAN (void)' Function 0x55887c2c82e0 'ReportProgressCodeEnabled' 'BOOLEAN (void)'
| | |   | | |   `-BinaryOperator 0x55887c31cc48 <col:35, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' '=='
| | |   | | |     |-ParenExpr 0x55887c31cc08 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:35, col:70> 'int'
| | |   | | |     | `-BinaryOperator 0x55887c31cbe8 <col:36, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'int' '&'
| | |   | | |     |   |-ParenExpr 0x55887c31cba8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:36, col:41> 'int'
| | |   | | |     |   | `-IntegerLiteral 0x55887c31cb88 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' 1
| | |   | | |     |   `-IntegerLiteral 0x55887c31cbc8 <line:32:40> 'int' 255
| | |   | | |     `-IntegerLiteral 0x55887c31cc28 <line:43:28> 'int' 1
| | |   | | |-CallExpr 0x55887c31ce58 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:368:3, col:30> 'EFI_STATUS':'unsigned long long'
| | |   | | | |-ImplicitCastExpr 0x55887c31ce40 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | |   | | | | `-DeclRefExpr 0x55887c31ccc0 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | |   | | | |-ImplicitCastExpr 0x55887c31ce88 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'EFI_STATUS_CODE_TYPE':'unsigned int' <IntegralCast>
| | |   | | | | `-IntegerLiteral 0x55887c31cce0 <col:28> 'int' 1
| | |   | | | `-ImplicitCastExpr 0x55887c31cea0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:318:44, col:97> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | |   | | |   `-ParenExpr 0x55887c31ce20 <col:44, col:97> 'int'
| | |   | | |     `-BinaryOperator 0x55887c31ce00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:764:74> 'int' '|'
| | |   | | |       |-ParenExpr 0x55887c31cd60 <line:702:43, col:69> 'int'
| | |   | | |       | `-BinaryOperator 0x55887c31cd40 <line:127:29, line:702:59> 'int' '|'
| | |   | | |       |   |-IntegerLiteral 0x55887c31cd00 <line:127:29> 'int' 50331648
| | |   | | |       |   `-IntegerLiteral 0x55887c31cd20 <line:702:59> 'int' 196608
| | |   | | |       `-ParenExpr 0x55887c31cde0 <line:764:39, col:74> 'int'
| | |   | | |         `-BinaryOperator 0x55887c31cdc0 <line:105:32, line:764:64> 'int' '|'
| | |   | | |           |-IntegerLiteral 0x55887c31cd80 <line:105:32> 'int' 4096
| | |   | | |           `-IntegerLiteral 0x55887c31cda0 <line:764:64> 'int' 1
| | |   | | `-ConditionalOperator 0x55887c31d750 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | |   | |   |-ParenExpr 0x55887c31d028 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:3, col:86> 'int'
| | |   | |   | `-BinaryOperator 0x55887c31d008 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28> 'int' '&&'
| | |   | |   |   |-ImplicitCastExpr 0x55887c31cff0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:4, col:27> 'int' <IntegralCast>
| | |   | |   |   | `-CallExpr 0x55887c31cef0 <col:4, col:27> 'BOOLEAN':'unsigned char'
| | |   | |   |   |   `-ImplicitCastExpr 0x55887c31ced8 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | |   |   |     `-DeclRefExpr 0x55887c31ceb8 <col:4> 'BOOLEAN (void)' Function 0x55887c2c8440 'ReportErrorCodeEnabled' 'BOOLEAN (void)'
| | |   | |   |   `-BinaryOperator 0x55887c31cfd0 <col:32, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28> 'int' '=='
| | |   | |   |     |-ParenExpr 0x55887c31cf90 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:32, col:67> 'int'
| | |   | |   |     | `-BinaryOperator 0x55887c31cf70 <col:33, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'int' '&'
| | |   | |   |     |   |-ParenExpr 0x55887c31cf30 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:33, col:38> 'int'
| | |   | |   |     |   | `-IntegerLiteral 0x55887c31cf10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' 1
| | |   | |   |     |   `-IntegerLiteral 0x55887c31cf50 <line:32:40> 'int' 255
| | |   | |   |     `-IntegerLiteral 0x55887c31cfb0 <line:44:28> 'int' 2
| | |   | |   |-CallExpr 0x55887c31d1e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:370:3, col:30> 'EFI_STATUS':'unsigned long long'
| | |   | |   | |-ImplicitCastExpr 0x55887c31d1c8 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | |   | |   | | `-DeclRefExpr 0x55887c31d048 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | |   | |   | |-ImplicitCastExpr 0x55887c31d210 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'EFI_STATUS_CODE_TYPE':'unsigned int' <IntegralCast>
| | |   | |   | | `-IntegerLiteral 0x55887c31d068 <col:28> 'int' 1
| | |   | |   | `-ImplicitCastExpr 0x55887c31d228 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:318:44, col:97> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | |   | |   |   `-ParenExpr 0x55887c31d1a8 <col:44, col:97> 'int'
| | |   | |   |     `-BinaryOperator 0x55887c31d188 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:764:74> 'int' '|'
| | |   | |   |       |-ParenExpr 0x55887c31d0e8 <line:702:43, col:69> 'int'
| | |   | |   |       | `-BinaryOperator 0x55887c31d0c8 <line:127:29, line:702:59> 'int' '|'
| | |   | |   |       |   |-IntegerLiteral 0x55887c31d088 <line:127:29> 'int' 50331648
| | |   | |   |       |   `-IntegerLiteral 0x55887c31d0a8 <line:702:59> 'int' 196608
| | |   | |   |       `-ParenExpr 0x55887c31d168 <line:764:39, col:74> 'int'
| | |   | |   |         `-BinaryOperator 0x55887c31d148 <line:105:32, line:764:64> 'int' '|'
| | |   | |   |           |-IntegerLiteral 0x55887c31d108 <line:105:32> 'int' 4096
| | |   | |   |           `-IntegerLiteral 0x55887c31d128 <line:764:64> 'int' 1
| | |   | |   `-ConditionalOperator 0x55887c31d720 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | |   | |     |-ParenExpr 0x55887c31d3b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:3, col:86> 'int'
| | |   | |     | `-BinaryOperator 0x55887c31d390 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:45:28> 'int' '&&'
| | |   | |     |   |-ImplicitCastExpr 0x55887c31d378 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:4, col:27> 'int' <IntegralCast>
| | |   | |     |   | `-CallExpr 0x55887c31d278 <col:4, col:27> 'BOOLEAN':'unsigned char'
| | |   | |     |   |   `-ImplicitCastExpr 0x55887c31d260 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | |     |   |     `-DeclRefExpr 0x55887c31d240 <col:4> 'BOOLEAN (void)' Function 0x55887c2c85a0 'ReportDebugCodeEnabled' 'BOOLEAN (void)'
| | |   | |     |   `-BinaryOperator 0x55887c31d358 <col:32, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:45:28> 'int' '=='
| | |   | |     |     |-ParenExpr 0x55887c31d318 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:32, col:67> 'int'
| | |   | |     |     | `-BinaryOperator 0x55887c31d2f8 <col:33, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'int' '&'
| | |   | |     |     |   |-ParenExpr 0x55887c31d2b8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:33, col:38> 'int'
| | |   | |     |     |   | `-IntegerLiteral 0x55887c31d298 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' 1
| | |   | |     |     |   `-IntegerLiteral 0x55887c31d2d8 <line:32:40> 'int' 255
| | |   | |     |     `-IntegerLiteral 0x55887c31d338 <line:45:28> 'int' 3
| | |   | |     |-CallExpr 0x55887c31d590 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:372:3, col:30> 'EFI_STATUS':'unsigned long long'
| | |   | |     | |-ImplicitCastExpr 0x55887c31d550 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | |   | |     | | `-DeclRefExpr 0x55887c31d3d0 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | |   | |     | |-ImplicitCastExpr 0x55887c31d5c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'EFI_STATUS_CODE_TYPE':'unsigned int' <IntegralCast>
| | |   | |     | | `-IntegerLiteral 0x55887c31d3f0 <col:28> 'int' 1
| | |   | |     | `-ImplicitCastExpr 0x55887c31d5d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:318:44, col:97> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | |   | |     |   `-ParenExpr 0x55887c31d530 <col:44, col:97> 'int'
| | |   | |     |     `-BinaryOperator 0x55887c31d510 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:764:74> 'int' '|'
| | |   | |     |       |-ParenExpr 0x55887c31d470 <line:702:43, col:69> 'int'
| | |   | |     |       | `-BinaryOperator 0x55887c31d450 <line:127:29, line:702:59> 'int' '|'
| | |   | |     |       |   |-IntegerLiteral 0x55887c31d410 <line:127:29> 'int' 50331648
| | |   | |     |       |   `-IntegerLiteral 0x55887c31d430 <line:702:59> 'int' 196608
| | |   | |     |       `-ParenExpr 0x55887c31d4f0 <line:764:39, col:74> 'int'
| | |   | |     |         `-BinaryOperator 0x55887c31d4d0 <line:105:32, line:764:64> 'int' '|'
| | |   | |     |           |-IntegerLiteral 0x55887c31d490 <line:105:32> 'int' 4096
| | |   | |     |           `-IntegerLiteral 0x55887c31d4b0 <line:764:64> 'int' 1
| | |   | |     `-ParenExpr 0x55887c31d700 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | |   | |       `-CStyleCastExpr 0x55887c31d6d8 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |   | |         `-ParenExpr 0x55887c31d6b8 <col:51, col:74> 'unsigned long long'
| | |   | |           `-BinaryOperator 0x55887c31d668 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | |   | |             |-IntegerLiteral 0x55887c31d5f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | |   | |             `-ImplicitCastExpr 0x55887c31d650 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | |   | |               `-ParenExpr 0x55887c31d630 <col:62, col:73> 'int'
| | |   | |                 `-IntegerLiteral 0x55887c31d610 <line:1081:43> 'int' 3
| | |   | |-BinaryOperator 0x55887c31d948 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:319:5, col:72> 'EFI_STATUS':'unsigned long long' '='
| | |   | | |-DeclRefExpr 0x55887c31d7b0 <col:5> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | |   | | `-CallExpr 0x55887c31d890 <col:14, col:72> 'EFI_STATUS':'unsigned long long'
| | |   | |   |-ImplicitCastExpr 0x55887c31d878 <col:14, col:27> 'EFI_PEI_LOAD_RECOVERY_CAPSULE':'EFI_STATUS (*)(EFI_PEI_SERVICES **, EFI_PEI_RECOVERY_MODULE_PPI *)' <LValueToRValue>
| | |   | |   | `-MemberExpr 0x55887c31d808 <col:14, col:27> 'EFI_PEI_LOAD_RECOVERY_CAPSULE':'EFI_STATUS (*)(EFI_PEI_SERVICES **, EFI_PEI_RECOVERY_MODULE_PPI *)' lvalue ->LoadRecoveryCapsule 0x55887c17e430
| | |   | |   |   `-ImplicitCastExpr 0x55887c31d7f0 <col:14> 'EFI_PEI_RECOVERY_MODULE_PPI *' <LValueToRValue>
| | |   | |   |     `-DeclRefExpr 0x55887c31d7d0 <col:14> 'EFI_PEI_RECOVERY_MODULE_PPI *' lvalue Var 0x55887c19a648 'PeiRecovery' 'EFI_PEI_RECOVERY_MODULE_PPI *'
| | |   | |   |-ImplicitCastExpr 0x55887c31d8c0 <col:48> 'EFI_PEI_SERVICES **' <LValueToRValue>
| | |   | |   | `-DeclRefExpr 0x55887c31d838 <col:48> 'EFI_PEI_SERVICES **' lvalue ParmVar 0x55887c199c38 'PeiServices' 'EFI_PEI_SERVICES **'
| | |   | |   `-ImplicitCastExpr 0x55887c31d8d8 <col:61> 'EFI_PEI_RECOVERY_MODULE_PPI *' <LValueToRValue>
| | |   | |     `-DeclRefExpr 0x55887c31d858 <col:61> 'EFI_PEI_RECOVERY_MODULE_PPI *' lvalue Var 0x55887c19a648 'PeiRecovery' 'EFI_PEI_RECOVERY_MODULE_PPI *'
| | |   | |-IfStmt 0x55887c31ef70 <line:320:5, line:330:5>
| | |   | | |-ParenExpr 0x55887c31dac8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | |   | | | `-BinaryOperator 0x55887c31daa8 <col:36, col:74> 'int' '<'
| | |   | | |   |-ParenExpr 0x55887c31da50 <col:36, col:70> 'INTN':'long long'
| | |   | | |   | `-CStyleCastExpr 0x55887c31da28 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | |   | | |   |   `-CStyleCastExpr 0x55887c31d9f0 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |   | | |   |     `-ImplicitCastExpr 0x55887c31d9d8 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | |   | | |   |       `-ParenExpr 0x55887c31d9b8 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | |   | | |   |         `-DeclRefExpr 0x55887c31d968 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:320:20> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | |   | | |   `-ImplicitCastExpr 0x55887c31da90 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | |   | | |     `-IntegerLiteral 0x55887c31da70 <col:74> 'int' 0
| | |   | | `-CompoundStmt 0x55887c31ef48 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:320:29, line:330:5>
| | |   | |   |-DoStmt 0x55887c31e020 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:423:5, line:427:19>
| | |   | |   | |-CompoundStmt 0x55887c31df10 <line:423:8, line:427:5>
| | |   | |   | | `-IfStmt 0x55887c31def0 <line:424:7, line:426:7>
| | |   | |   | |   |-CallExpr 0x55887c31db20 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | |   | |   | |   | `-ImplicitCastExpr 0x55887c31db08 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | |   | |   |   `-DeclRefExpr 0x55887c31dae8 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | |   | |   | |   `-CompoundStmt 0x55887c31ded8 <col:33, line:426:7>
| | |   | |   | |     `-DoStmt 0x55887c31deb8 <line:373:5, line:377:19>
| | |   | |   | |       |-CompoundStmt 0x55887c31dda8 <line:373:8, line:377:5>
| | |   | |   | |       | `-IfStmt 0x55887c31dd88 <line:374:7, line:376:7>
| | |   | |   | |       |   |-CallExpr 0x55887c31db98 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | |   | |   | |       |   | |-ImplicitCastExpr 0x55887c31db80 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | |   | |   | |       |   | | `-DeclRefExpr 0x55887c31db40 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | |   | |   | |       |   | `-ImplicitCastExpr 0x55887c31dbc0 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | |   | |   | |       |   |   `-IntegerLiteral 0x55887c31db60 <col:22> 'unsigned int' 2147483648
| | |   | |   | |       |   `-CompoundStmt 0x55887c31dd70 <line:374:48, line:376:7>
| | |   | |   | |       |     `-CallExpr 0x55887c31dcd8 <line:375:9, col:46> 'void'
| | |   | |   | |       |       |-ImplicitCastExpr 0x55887c31dcc0 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | |   | |   | |       |       | `-DeclRefExpr 0x55887c31dbd8 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | |   | |   | |       |       |-ImplicitCastExpr 0x55887c31dd10 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | |   | |   | |       |       | `-IntegerLiteral 0x55887c31dbf8 <col:22> 'unsigned int' 2147483648
| | |   | |   | |       |       |-ImplicitCastExpr 0x55887c31dd40 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:321:28> 'const CHAR8 *' <NoOp>
| | |   | |   | |       |       | `-ImplicitCastExpr 0x55887c31dd28 <col:28> 'char *' <ArrayToPointerDecay>
| | |   | |   | |       |       |   `-StringLiteral 0x55887c31dc58 <col:28> 'char[44]' lvalue "Load Recovery Capsule Failed.(Status = %r)\n"
| | |   | |   | |       |       `-ImplicitCastExpr 0x55887c31dd58 <col:76> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | |   | |   | |       |         `-DeclRefExpr 0x55887c31dca0 <col:76> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | |   | |   | |       `-ParenExpr 0x55887c31de98 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |   | |   | |         `-CStyleCastExpr 0x55887c31de70 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   | |   | |           `-ParenExpr 0x55887c31de50 <col:26, col:31> 'int'
| | |   | |   | |             `-BinaryOperator 0x55887c31de00 <col:27, col:30> 'int' '=='
| | |   | |   | |               |-IntegerLiteral 0x55887c31ddc0 <col:27> 'int' 0
| | |   | |   | |               `-IntegerLiteral 0x55887c31dde0 <col:30> 'int' 1
| | |   | |   | `-ParenExpr 0x55887c31e000 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | |   | |   |   `-CStyleCastExpr 0x55887c31dfd8 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   | |   |     `-ParenExpr 0x55887c31dfb8 <col:26, col:31> 'int'
| | |   | |   |       `-BinaryOperator 0x55887c31df68 <col:27, col:30> 'int' '=='
| | |   | |   |         |-IntegerLiteral 0x55887c31df28 <col:27> 'int' 0
| | |   | |   |         `-IntegerLiteral 0x55887c31df48 <col:30> 'int' 1
| | |   | |   |-ConditionalOperator 0x55887c31eec0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | |   | |   | |-ParenExpr 0x55887c31e238 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:3, col:92> 'int'
| | |   | |   | | `-BinaryOperator 0x55887c31e218 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' '&&'
| | |   | |   | |   |-ImplicitCastExpr 0x55887c31e200 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:4, col:30> 'int' <IntegralCast>
| | |   | |   | |   | `-CallExpr 0x55887c31e078 <col:4, col:30> 'BOOLEAN':'unsigned char'
| | |   | |   | |   |   `-ImplicitCastExpr 0x55887c31e060 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | |   | |   |     `-DeclRefExpr 0x55887c31e040 <col:4> 'BOOLEAN (void)' Function 0x55887c2c82e0 'ReportProgressCodeEnabled' 'BOOLEAN (void)'
| | |   | |   | |   `-BinaryOperator 0x55887c31e1e0 <col:35, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' '=='
| | |   | |   | |     |-ParenExpr 0x55887c31e188 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:35, col:70> 'unsigned int'
| | |   | |   | |     | `-BinaryOperator 0x55887c31e168 <col:36, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'unsigned int' '&'
| | |   | |   | |     |   |-ParenExpr 0x55887c31e110 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:36, col:41> 'unsigned int'
| | |   | |   | |     |   | `-BinaryOperator 0x55887c31e0f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | |   | |   | |     |   |   |-ImplicitCastExpr 0x55887c31e0d8 <line:44:28> 'unsigned int' <IntegralCast>
| | |   | |   | |     |   |   | `-IntegerLiteral 0x55887c31e098 <col:28> 'int' 2
| | |   | |   | |     |   |   `-IntegerLiteral 0x55887c31e0b8 <line:59:32> 'unsigned int' 2147483648
| | |   | |   | |     |   `-ImplicitCastExpr 0x55887c31e150 <line:32:40> 'unsigned int' <IntegralCast>
| | |   | |   | |     |     `-IntegerLiteral 0x55887c31e130 <col:40> 'int' 255
| | |   | |   | |     `-ImplicitCastExpr 0x55887c31e1c8 <line:43:28> 'unsigned int' <IntegralCast>
| | |   | |   | |       `-IntegerLiteral 0x55887c31e1a8 <col:28> 'int' 1
| | |   | |   | |-CallExpr 0x55887c31e448 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:368:3, col:30> 'EFI_STATUS':'unsigned long long'
| | |   | |   | | |-ImplicitCastExpr 0x55887c31e430 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | |   | |   | | | `-DeclRefExpr 0x55887c31e258 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | |   | |   | | |-BinaryOperator 0x55887c31e2d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | |   | |   | | | |-ImplicitCastExpr 0x55887c31e2b8 <line:44:28> 'unsigned int' <IntegralCast>
| | |   | |   | | | | `-IntegerLiteral 0x55887c31e278 <col:28> 'int' 2
| | |   | |   | | | `-IntegerLiteral 0x55887c31e298 <line:59:32> 'unsigned int' 2147483648
| | |   | |   | | `-ImplicitCastExpr 0x55887c31e478 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:327:9, col:69> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | |   | |   | |   `-ParenExpr 0x55887c31e410 <col:9, col:69> 'int'
| | |   | |   | |     `-BinaryOperator 0x55887c31e3f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:1013:86> 'int' '|'
| | |   | |   | |       |-ParenExpr 0x55887c31e350 <line:702:43, col:69> 'int'
| | |   | |   | |       | `-BinaryOperator 0x55887c31e330 <line:127:29, line:702:59> 'int' '|'
| | |   | |   | |       |   |-IntegerLiteral 0x55887c31e2f0 <line:127:29> 'int' 50331648
| | |   | |   | |       |   `-IntegerLiteral 0x55887c31e310 <line:702:59> 'int' 196608
| | |   | |   | |       `-ParenExpr 0x55887c31e3d0 <line:1013:51, col:86> 'int'
| | |   | |   | |         `-BinaryOperator 0x55887c31e3b0 <line:105:32, line:1013:76> 'int' '|'
| | |   | |   | |           |-IntegerLiteral 0x55887c31e370 <line:105:32> 'int' 4096
| | |   | |   | |           `-IntegerLiteral 0x55887c31e390 <line:1013:76> 'int' 0
| | |   | |   | `-ConditionalOperator 0x55887c31ee90 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | |   | |   |   |-ParenExpr 0x55887c31e688 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:3, col:86> 'int'
| | |   | |   |   | `-BinaryOperator 0x55887c31e668 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28> 'int' '&&'
| | |   | |   |   |   |-ImplicitCastExpr 0x55887c31e650 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:4, col:27> 'int' <IntegralCast>
| | |   | |   |   |   | `-CallExpr 0x55887c31e4c8 <col:4, col:27> 'BOOLEAN':'unsigned char'
| | |   | |   |   |   |   `-ImplicitCastExpr 0x55887c31e4b0 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | |   |   |   |     `-DeclRefExpr 0x55887c31e490 <col:4> 'BOOLEAN (void)' Function 0x55887c2c8440 'ReportErrorCodeEnabled' 'BOOLEAN (void)'
| | |   | |   |   |   `-BinaryOperator 0x55887c31e630 <col:32, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28> 'int' '=='
| | |   | |   |   |     |-ParenExpr 0x55887c31e5d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:32, col:67> 'unsigned int'
| | |   | |   |   |     | `-BinaryOperator 0x55887c31e5b8 <col:33, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'unsigned int' '&'
| | |   | |   |   |     |   |-ParenExpr 0x55887c31e560 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:33, col:38> 'unsigned int'
| | |   | |   |   |     |   | `-BinaryOperator 0x55887c31e540 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | |   | |   |   |     |   |   |-ImplicitCastExpr 0x55887c31e528 <line:44:28> 'unsigned int' <IntegralCast>
| | |   | |   |   |     |   |   | `-IntegerLiteral 0x55887c31e4e8 <col:28> 'int' 2
| | |   | |   |   |     |   |   `-IntegerLiteral 0x55887c31e508 <line:59:32> 'unsigned int' 2147483648
| | |   | |   |   |     |   `-ImplicitCastExpr 0x55887c31e5a0 <line:32:40> 'unsigned int' <IntegralCast>
| | |   | |   |   |     |     `-IntegerLiteral 0x55887c31e580 <col:40> 'int' 255
| | |   | |   |   |     `-ImplicitCastExpr 0x55887c31e618 <line:44:28> 'unsigned int' <IntegralCast>
| | |   | |   |   |       `-IntegerLiteral 0x55887c31e5f8 <col:28> 'int' 2
| | |   | |   |   |-CallExpr 0x55887c31e898 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:370:3, col:30> 'EFI_STATUS':'unsigned long long'
| | |   | |   |   | |-ImplicitCastExpr 0x55887c31e880 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | |   | |   |   | | `-DeclRefExpr 0x55887c31e6a8 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | |   | |   |   | |-BinaryOperator 0x55887c31e720 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | |   | |   |   | | |-ImplicitCastExpr 0x55887c31e708 <line:44:28> 'unsigned int' <IntegralCast>
| | |   | |   |   | | | `-IntegerLiteral 0x55887c31e6c8 <col:28> 'int' 2
| | |   | |   |   | | `-IntegerLiteral 0x55887c31e6e8 <line:59:32> 'unsigned int' 2147483648
| | |   | |   |   | `-ImplicitCastExpr 0x55887c31e8c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:327:9, col:69> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | |   | |   |   |   `-ParenExpr 0x55887c31e860 <col:9, col:69> 'int'
| | |   | |   |   |     `-BinaryOperator 0x55887c31e840 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:1013:86> 'int' '|'
| | |   | |   |   |       |-ParenExpr 0x55887c31e7a0 <line:702:43, col:69> 'int'
| | |   | |   |   |       | `-BinaryOperator 0x55887c31e780 <line:127:29, line:702:59> 'int' '|'
| | |   | |   |   |       |   |-IntegerLiteral 0x55887c31e740 <line:127:29> 'int' 50331648
| | |   | |   |   |       |   `-IntegerLiteral 0x55887c31e760 <line:702:59> 'int' 196608
| | |   | |   |   |       `-ParenExpr 0x55887c31e820 <line:1013:51, col:86> 'int'
| | |   | |   |   |         `-BinaryOperator 0x55887c31e800 <line:105:32, line:1013:76> 'int' '|'
| | |   | |   |   |           |-IntegerLiteral 0x55887c31e7c0 <line:105:32> 'int' 4096
| | |   | |   |   |           `-IntegerLiteral 0x55887c31e7e0 <line:1013:76> 'int' 0
| | |   | |   |   `-ConditionalOperator 0x55887c31ee60 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | |   | |   |     |-ParenExpr 0x55887c31ead8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:3, col:86> 'int'
| | |   | |   |     | `-BinaryOperator 0x55887c31eab8 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:45:28> 'int' '&&'
| | |   | |   |     |   |-ImplicitCastExpr 0x55887c31eaa0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:4, col:27> 'int' <IntegralCast>
| | |   | |   |     |   | `-CallExpr 0x55887c31e918 <col:4, col:27> 'BOOLEAN':'unsigned char'
| | |   | |   |     |   |   `-ImplicitCastExpr 0x55887c31e900 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | |   |     |   |     `-DeclRefExpr 0x55887c31e8e0 <col:4> 'BOOLEAN (void)' Function 0x55887c2c85a0 'ReportDebugCodeEnabled' 'BOOLEAN (void)'
| | |   | |   |     |   `-BinaryOperator 0x55887c31ea80 <col:32, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:45:28> 'int' '=='
| | |   | |   |     |     |-ParenExpr 0x55887c31ea28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:32, col:67> 'unsigned int'
| | |   | |   |     |     | `-BinaryOperator 0x55887c31ea08 <col:33, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'unsigned int' '&'
| | |   | |   |     |     |   |-ParenExpr 0x55887c31e9b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:33, col:38> 'unsigned int'
| | |   | |   |     |     |   | `-BinaryOperator 0x55887c31e990 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | |   | |   |     |     |   |   |-ImplicitCastExpr 0x55887c31e978 <line:44:28> 'unsigned int' <IntegralCast>
| | |   | |   |     |     |   |   | `-IntegerLiteral 0x55887c31e938 <col:28> 'int' 2
| | |   | |   |     |     |   |   `-IntegerLiteral 0x55887c31e958 <line:59:32> 'unsigned int' 2147483648
| | |   | |   |     |     |   `-ImplicitCastExpr 0x55887c31e9f0 <line:32:40> 'unsigned int' <IntegralCast>
| | |   | |   |     |     |     `-IntegerLiteral 0x55887c31e9d0 <col:40> 'int' 255
| | |   | |   |     |     `-ImplicitCastExpr 0x55887c31ea68 <line:45:28> 'unsigned int' <IntegralCast>
| | |   | |   |     |       `-IntegerLiteral 0x55887c31ea48 <col:28> 'int' 3
| | |   | |   |     |-CallExpr 0x55887c31ece8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:372:3, col:30> 'EFI_STATUS':'unsigned long long'
| | |   | |   |     | |-ImplicitCastExpr 0x55887c31ecd0 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | |   | |   |     | | `-DeclRefExpr 0x55887c31eaf8 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | |   | |   |     | |-BinaryOperator 0x55887c31eb70 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28, line:59:32> 'unsigned int' '|'
| | |   | |   |     | | |-ImplicitCastExpr 0x55887c31eb58 <line:44:28> 'unsigned int' <IntegralCast>
| | |   | |   |     | | | `-IntegerLiteral 0x55887c31eb18 <col:28> 'int' 2
| | |   | |   |     | | `-IntegerLiteral 0x55887c31eb38 <line:59:32> 'unsigned int' 2147483648
| | |   | |   |     | `-ImplicitCastExpr 0x55887c31ed18 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:327:9, col:69> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | |   | |   |     |   `-ParenExpr 0x55887c31ecb0 <col:9, col:69> 'int'
| | |   | |   |     |     `-BinaryOperator 0x55887c31ec90 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:1013:86> 'int' '|'
| | |   | |   |     |       |-ParenExpr 0x55887c31ebf0 <line:702:43, col:69> 'int'
| | |   | |   |     |       | `-BinaryOperator 0x55887c31ebd0 <line:127:29, line:702:59> 'int' '|'
| | |   | |   |     |       |   |-IntegerLiteral 0x55887c31eb90 <line:127:29> 'int' 50331648
| | |   | |   |     |       |   `-IntegerLiteral 0x55887c31ebb0 <line:702:59> 'int' 196608
| | |   | |   |     |       `-ParenExpr 0x55887c31ec70 <line:1013:51, col:86> 'int'
| | |   | |   |     |         `-BinaryOperator 0x55887c31ec50 <line:105:32, line:1013:76> 'int' '|'
| | |   | |   |     |           |-IntegerLiteral 0x55887c31ec10 <line:105:32> 'int' 4096
| | |   | |   |     |           `-IntegerLiteral 0x55887c31ec30 <line:1013:76> 'int' 0
| | |   | |   |     `-ParenExpr 0x55887c31ee40 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | |   | |   |       `-CStyleCastExpr 0x55887c31ee18 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |   | |   |         `-ParenExpr 0x55887c31edf8 <col:51, col:74> 'unsigned long long'
| | |   | |   |           `-BinaryOperator 0x55887c31eda8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | |   | |   |             |-IntegerLiteral 0x55887c31ed30 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | |   | |   |             `-ImplicitCastExpr 0x55887c31ed90 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | |   | |   |               `-ParenExpr 0x55887c31ed70 <col:62, col:73> 'int'
| | |   | |   |                 `-IntegerLiteral 0x55887c31ed50 <line:1081:43> 'int' 3
| | |   | |   `-CallExpr 0x55887c31ef28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:329:7, col:20> 'void'
| | |   | |     `-ImplicitCastExpr 0x55887c31ef10 <col:7> 'void (*)(void)' <FunctionToPointerDecay>
| | |   | |       `-DeclRefExpr 0x55887c31eef0 <col:7> 'void (void)' Function 0x55887c13deb0 'CpuDeadLoop' 'void (void)'
| | |   | `-ConditionalOperator 0x55887c31fbd0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | |   |   |-ParenExpr 0x55887c31f100 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:3, col:92> 'int'
| | |   |   | `-BinaryOperator 0x55887c31f0e0 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' '&&'
| | |   |   |   |-ImplicitCastExpr 0x55887c31f0c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:4, col:30> 'int' <IntegralCast>
| | |   |   |   | `-CallExpr 0x55887c31efc8 <col:4, col:30> 'BOOLEAN':'unsigned char'
| | |   |   |   |   `-ImplicitCastExpr 0x55887c31efb0 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   |   |   |     `-DeclRefExpr 0x55887c31ef90 <col:4> 'BOOLEAN (void)' Function 0x55887c2c82e0 'ReportProgressCodeEnabled' 'BOOLEAN (void)'
| | |   |   |   `-BinaryOperator 0x55887c31f0a8 <col:35, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' '=='
| | |   |   |     |-ParenExpr 0x55887c31f068 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:35, col:70> 'int'
| | |   |   |     | `-BinaryOperator 0x55887c31f048 <col:36, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'int' '&'
| | |   |   |     |   |-ParenExpr 0x55887c31f008 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:36, col:41> 'int'
| | |   |   |     |   | `-IntegerLiteral 0x55887c31efe8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' 1
| | |   |   |     |   `-IntegerLiteral 0x55887c31f028 <line:32:40> 'int' 255
| | |   |   |     `-IntegerLiteral 0x55887c31f088 <line:43:28> 'int' 1
| | |   |   |-CallExpr 0x55887c31f2b8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:368:3, col:30> 'EFI_STATUS':'unsigned long long'
| | |   |   | |-ImplicitCastExpr 0x55887c31f2a0 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | |   |   | | `-DeclRefExpr 0x55887c31f120 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | |   |   | |-ImplicitCastExpr 0x55887c31f2e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'EFI_STATUS_CODE_TYPE':'unsigned int' <IntegralCast>
| | |   |   | | `-IntegerLiteral 0x55887c31f140 <col:28> 'int' 1
| | |   |   | `-ImplicitCastExpr 0x55887c31f300 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:332:44, col:98> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | |   |   |   `-ParenExpr 0x55887c31f280 <col:44, col:98> 'int'
| | |   |   |     `-BinaryOperator 0x55887c31f260 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:765:74> 'int' '|'
| | |   |   |       |-ParenExpr 0x55887c31f1c0 <line:702:43, col:69> 'int'
| | |   |   |       | `-BinaryOperator 0x55887c31f1a0 <line:127:29, line:702:59> 'int' '|'
| | |   |   |       |   |-IntegerLiteral 0x55887c31f160 <line:127:29> 'int' 50331648
| | |   |   |       |   `-IntegerLiteral 0x55887c31f180 <line:702:59> 'int' 196608
| | |   |   |       `-ParenExpr 0x55887c31f240 <line:765:39, col:74> 'int'
| | |   |   |         `-BinaryOperator 0x55887c31f220 <line:105:32, line:765:64> 'int' '|'
| | |   |   |           |-IntegerLiteral 0x55887c31f1e0 <line:105:32> 'int' 4096
| | |   |   |           `-IntegerLiteral 0x55887c31f200 <line:765:64> 'int' 2
| | |   |   `-ConditionalOperator 0x55887c31fba0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | |   |     |-ParenExpr 0x55887c31f488 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:3, col:86> 'int'
| | |   |     | `-BinaryOperator 0x55887c31f468 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28> 'int' '&&'
| | |   |     |   |-ImplicitCastExpr 0x55887c31f450 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:4, col:27> 'int' <IntegralCast>
| | |   |     |   | `-CallExpr 0x55887c31f350 <col:4, col:27> 'BOOLEAN':'unsigned char'
| | |   |     |   |   `-ImplicitCastExpr 0x55887c31f338 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   |     |   |     `-DeclRefExpr 0x55887c31f318 <col:4> 'BOOLEAN (void)' Function 0x55887c2c8440 'ReportErrorCodeEnabled' 'BOOLEAN (void)'
| | |   |     |   `-BinaryOperator 0x55887c31f430 <col:32, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28> 'int' '=='
| | |   |     |     |-ParenExpr 0x55887c31f3f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:32, col:67> 'int'
| | |   |     |     | `-BinaryOperator 0x55887c31f3d0 <col:33, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'int' '&'
| | |   |     |     |   |-ParenExpr 0x55887c31f390 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:33, col:38> 'int'
| | |   |     |     |   | `-IntegerLiteral 0x55887c31f370 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' 1
| | |   |     |     |   `-IntegerLiteral 0x55887c31f3b0 <line:32:40> 'int' 255
| | |   |     |     `-IntegerLiteral 0x55887c31f410 <line:44:28> 'int' 2
| | |   |     |-CallExpr 0x55887c31f658 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:370:3, col:30> 'EFI_STATUS':'unsigned long long'
| | |   |     | |-ImplicitCastExpr 0x55887c31f640 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | |   |     | | `-DeclRefExpr 0x55887c31f4a8 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | |   |     | |-ImplicitCastExpr 0x55887c31f688 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'EFI_STATUS_CODE_TYPE':'unsigned int' <IntegralCast>
| | |   |     | | `-IntegerLiteral 0x55887c31f4c8 <col:28> 'int' 1
| | |   |     | `-ImplicitCastExpr 0x55887c31f6a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:332:44, col:98> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | |   |     |   `-ParenExpr 0x55887c31f620 <col:44, col:98> 'int'
| | |   |     |     `-BinaryOperator 0x55887c31f600 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:765:74> 'int' '|'
| | |   |     |       |-ParenExpr 0x55887c31f548 <line:702:43, col:69> 'int'
| | |   |     |       | `-BinaryOperator 0x55887c31f528 <line:127:29, line:702:59> 'int' '|'
| | |   |     |       |   |-IntegerLiteral 0x55887c31f4e8 <line:127:29> 'int' 50331648
| | |   |     |       |   `-IntegerLiteral 0x55887c31f508 <line:702:59> 'int' 196608
| | |   |     |       `-ParenExpr 0x55887c31f5e0 <line:765:39, col:74> 'int'
| | |   |     |         `-BinaryOperator 0x55887c31f5c0 <line:105:32, line:765:64> 'int' '|'
| | |   |     |           |-IntegerLiteral 0x55887c31f568 <line:105:32> 'int' 4096
| | |   |     |           `-IntegerLiteral 0x55887c31f5a0 <line:765:64> 'int' 2
| | |   |     `-ConditionalOperator 0x55887c31fb70 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | |   |       |-ParenExpr 0x55887c31f828 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:3, col:86> 'int'
| | |   |       | `-BinaryOperator 0x55887c31f808 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:45:28> 'int' '&&'
| | |   |       |   |-ImplicitCastExpr 0x55887c31f7f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:4, col:27> 'int' <IntegralCast>
| | |   |       |   | `-CallExpr 0x55887c31f6f0 <col:4, col:27> 'BOOLEAN':'unsigned char'
| | |   |       |   |   `-ImplicitCastExpr 0x55887c31f6d8 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   |       |   |     `-DeclRefExpr 0x55887c31f6b8 <col:4> 'BOOLEAN (void)' Function 0x55887c2c85a0 'ReportDebugCodeEnabled' 'BOOLEAN (void)'
| | |   |       |   `-BinaryOperator 0x55887c31f7d0 <col:32, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:45:28> 'int' '=='
| | |   |       |     |-ParenExpr 0x55887c31f790 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:32, col:67> 'int'
| | |   |       |     | `-BinaryOperator 0x55887c31f770 <col:33, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'int' '&'
| | |   |       |     |   |-ParenExpr 0x55887c31f730 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:33, col:38> 'int'
| | |   |       |     |   | `-IntegerLiteral 0x55887c31f710 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' 1
| | |   |       |     |   `-IntegerLiteral 0x55887c31f750 <line:32:40> 'int' 255
| | |   |       |     `-IntegerLiteral 0x55887c31f7b0 <line:45:28> 'int' 3
| | |   |       |-CallExpr 0x55887c31f9e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:372:3, col:30> 'EFI_STATUS':'unsigned long long'
| | |   |       | |-ImplicitCastExpr 0x55887c31f9c8 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | |   |       | | `-DeclRefExpr 0x55887c31f848 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | |   |       | |-ImplicitCastExpr 0x55887c31fa10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'EFI_STATUS_CODE_TYPE':'unsigned int' <IntegralCast>
| | |   |       | | `-IntegerLiteral 0x55887c31f868 <col:28> 'int' 1
| | |   |       | `-ImplicitCastExpr 0x55887c31fa28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:332:44, col:98> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | |   |       |   `-ParenExpr 0x55887c31f9a8 <col:44, col:98> 'int'
| | |   |       |     `-BinaryOperator 0x55887c31f988 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:765:74> 'int' '|'
| | |   |       |       |-ParenExpr 0x55887c31f8e8 <line:702:43, col:69> 'int'
| | |   |       |       | `-BinaryOperator 0x55887c31f8c8 <line:127:29, line:702:59> 'int' '|'
| | |   |       |       |   |-IntegerLiteral 0x55887c31f888 <line:127:29> 'int' 50331648
| | |   |       |       |   `-IntegerLiteral 0x55887c31f8a8 <line:702:59> 'int' 196608
| | |   |       |       `-ParenExpr 0x55887c31f968 <line:765:39, col:74> 'int'
| | |   |       |         `-BinaryOperator 0x55887c31f948 <line:105:32, line:765:64> 'int' '|'
| | |   |       |           |-IntegerLiteral 0x55887c31f908 <line:105:32> 'int' 4096
| | |   |       |           `-IntegerLiteral 0x55887c31f928 <line:765:64> 'int' 2
| | |   |       `-ParenExpr 0x55887c31fb50 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | |   |         `-CStyleCastExpr 0x55887c31fb28 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |   |           `-ParenExpr 0x55887c31fb08 <col:51, col:74> 'unsigned long long'
| | |   |             `-BinaryOperator 0x55887c31fab8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | |   |               |-IntegerLiteral 0x55887c31fa40 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | |   |               `-ImplicitCastExpr 0x55887c31faa0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | |   |                 `-ParenExpr 0x55887c31fa80 <col:62, col:73> 'int'
| | |   |                   `-IntegerLiteral 0x55887c31fa60 <line:1081:43> 'int' 3
| | |   `-IfStmt 0x55887c320718 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:336:10, line:362:3>
| | |     |-BinaryOperator 0x55887c31fcb8 <line:336:14, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiBootMode.h:33:56> 'int' '=='
| | |     | |-ImplicitCastExpr 0x55887c31fc88 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:336:14> 'EFI_BOOT_MODE':'unsigned int' <LValueToRValue>
| | |     | | `-DeclRefExpr 0x55887c31fc48 <col:14> 'EFI_BOOT_MODE':'unsigned int' lvalue Var 0x55887c19a0e8 'BootMode' 'EFI_BOOT_MODE':'unsigned int'
| | |     | `-ImplicitCastExpr 0x55887c31fca0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiBootMode.h:33:56> 'unsigned int' <IntegralCast>
| | |     |   `-IntegerLiteral 0x55887c31fc68 <col:56> 'int' 18
| | |     `-CompoundStmt 0x55887c3206f8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:336:48, line:362:3>
| | |       |-BinaryOperator 0x55887c31fec8 <line:341:5, line:346:16> 'EFI_STATUS':'unsigned long long' '='
| | |       | |-DeclRefExpr 0x55887c31fcd8 <line:341:5> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | |       | `-CallExpr 0x55887c31fe40 <col:14, line:346:16> 'EFI_STATUS':'unsigned long long'
| | |       |   |-ImplicitCastExpr 0x55887c31fe28 <line:341:14> 'EFI_STATUS (*)(const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)' <FunctionToPointerDecay>
| | |       |   | `-DeclRefExpr 0x55887c31fcf8 <col:14> 'EFI_STATUS (const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)' Function 0x55887c1394a8 'PeiServicesLocatePpi' 'EFI_STATUS (const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)'
| | |       |   |-ImplicitCastExpr 0x55887c31fe80 <line:342:16, col:17> 'const EFI_GUID *' <NoOp>
| | |       |   | `-UnaryOperator 0x55887c31fd38 <col:16, col:17> 'EFI_GUID *' prefix '&' cannot overflow
| | |       |   |   `-DeclRefExpr 0x55887c31fd18 <col:17> 'EFI_GUID':'GUID' lvalue Var 0x55887c17ebd0 'gEdkiiPeiBootInCapsuleOnDiskModePpiGuid' 'EFI_GUID':'GUID'
| | |       |   |-ImplicitCastExpr 0x55887c31fe98 <line:343:16> 'UINTN':'unsigned long long' <IntegralCast>
| | |       |   | `-IntegerLiteral 0x55887c31fd50 <col:16> 'int' 0
| | |       |   |-ImplicitCastExpr 0x55887c31feb0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'EFI_PEI_PPI_DESCRIPTOR **' <NullToPointer>
| | |       |   | `-ParenExpr 0x55887c31fdd0 <col:15, col:26> 'void *'
| | |       |   |   `-CStyleCastExpr 0x55887c31fda8 <col:16, col:25> 'void *' <NullToPointer>
| | |       |   |     `-IntegerLiteral 0x55887c31fd70 <col:25> 'int' 0
| | |       |   `-UnaryOperator 0x55887c31fe10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:345:16, col:17> 'void **' prefix '&' cannot overflow
| | |       |     `-DeclRefExpr 0x55887c31fdf0 <col:17> 'void *' lvalue Var 0x55887c19a910 'CapsuleOnDiskModePpi' 'void *'
| | |       `-IfStmt 0x55887c3206d8 <line:347:5, line:361:5>
| | |         |-UnaryOperator 0x55887c320068 <line:347:9, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:75> 'int' prefix '!' cannot overflow
| | |         | `-ParenExpr 0x55887c320048 <col:35, col:75> 'int'
| | |         |   `-BinaryOperator 0x55887c320028 <col:36, col:74> 'int' '<'
| | |         |     |-ParenExpr 0x55887c31ffd0 <col:36, col:70> 'INTN':'long long'
| | |         |     | `-CStyleCastExpr 0x55887c31ffa8 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | |         |     |   `-CStyleCastExpr 0x55887c31ff70 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |         |     |     `-ImplicitCastExpr 0x55887c31ff58 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | |         |     |       `-ParenExpr 0x55887c31ff38 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | |         |     |         `-DeclRefExpr 0x55887c31fee8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:347:21> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | |         |     `-ImplicitCastExpr 0x55887c320010 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | |         |       `-IntegerLiteral 0x55887c31fff0 <col:74> 'int' 0
| | |         `-CompoundStmt 0x55887c3206b8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:347:30, line:361:5>
| | |           |-BinaryOperator 0x55887c320310 <line:348:7, line:353:18> 'EFI_STATUS':'unsigned long long' '='
| | |           | |-DeclRefExpr 0x55887c320080 <line:348:7> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | |           | `-CallExpr 0x55887c320288 <col:16, line:353:18> 'EFI_STATUS':'unsigned long long'
| | |           |   |-ImplicitCastExpr 0x55887c320270 <line:348:16> 'EFI_STATUS (*)(const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)' <FunctionToPointerDecay>
| | |           |   | `-DeclRefExpr 0x55887c3200a0 <col:16> 'EFI_STATUS (const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)' Function 0x55887c1394a8 'PeiServicesLocatePpi' 'EFI_STATUS (const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)'
| | |           |   |-ImplicitCastExpr 0x55887c3202c8 <line:349:18, col:19> 'const EFI_GUID *' <NoOp>
| | |           |   | `-UnaryOperator 0x55887c3200e0 <col:18, col:19> 'EFI_GUID *' prefix '&' cannot overflow
| | |           |   |   `-DeclRefExpr 0x55887c3200c0 <col:19> 'EFI_GUID':'GUID' lvalue Var 0x55887c17eb58 'gEdkiiPeiCapsuleOnDiskPpiGuid' 'EFI_GUID':'GUID'
| | |           |   |-ImplicitCastExpr 0x55887c3202e0 <line:350:18> 'UINTN':'unsigned long long' <IntegralCast>
| | |           |   | `-IntegerLiteral 0x55887c3200f8 <col:18> 'int' 0
| | |           |   |-ImplicitCastExpr 0x55887c3202f8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'EFI_PEI_PPI_DESCRIPTOR **' <NullToPointer>
| | |           |   | `-ParenExpr 0x55887c320178 <col:15, col:26> 'void *'
| | |           |   |   `-CStyleCastExpr 0x55887c320150 <col:16, col:25> 'void *' <NullToPointer>
| | |           |   |     `-IntegerLiteral 0x55887c320118 <col:25> 'int' 0
| | |           |   `-CStyleCastExpr 0x55887c320248 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:352:18, col:28> 'void **' <BitCast>
| | |           |     `-UnaryOperator 0x55887c320218 <col:27, col:28> 'EDKII_PEI_CAPSULE_ON_DISK_PPI **' prefix '&' cannot overflow
| | |           |       `-DeclRefExpr 0x55887c320198 <col:28> 'EDKII_PEI_CAPSULE_ON_DISK_PPI *' lvalue Var 0x55887c19a6d8 'PeiCapsuleOnDisk' 'EDKII_PEI_CAPSULE_ON_DISK_PPI *'
| | |           `-IfStmt 0x55887c320698 <line:358:7, line:360:7>
| | |             |-UnaryOperator 0x55887c3204b0 <line:358:11, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:75> 'int' prefix '!' cannot overflow
| | |             | `-ParenExpr 0x55887c320490 <col:35, col:75> 'int'
| | |             |   `-BinaryOperator 0x55887c320470 <col:36, col:74> 'int' '<'
| | |             |     |-ParenExpr 0x55887c320418 <col:36, col:70> 'INTN':'long long'
| | |             |     | `-CStyleCastExpr 0x55887c3203f0 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | |             |     |   `-CStyleCastExpr 0x55887c3203b8 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |             |     |     `-ImplicitCastExpr 0x55887c3203a0 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | |             |     |       `-ParenExpr 0x55887c320380 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | |             |     |         `-DeclRefExpr 0x55887c320330 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:358:23> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | |             |     `-ImplicitCastExpr 0x55887c320458 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | |             |       `-IntegerLiteral 0x55887c320438 <col:74> 'int' 0
| | |             `-CompoundStmt 0x55887c320680 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:358:32, line:360:7>
| | |               `-BinaryOperator 0x55887c320660 <line:359:9, col:84> 'EFI_STATUS':'unsigned long long' '='
| | |                 |-DeclRefExpr 0x55887c3204c8 <col:9> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | |                 `-CallExpr 0x55887c3205a8 <col:18, col:84> 'EFI_STATUS':'unsigned long long'
| | |                   |-ImplicitCastExpr 0x55887c320590 <col:18, col:36> 'EDKII_PEI_LOAD_CAPSULE_ON_DISK':'EFI_STATUS (*)(EFI_PEI_SERVICES **, EDKII_PEI_CAPSULE_ON_DISK_PPI *)' <LValueToRValue>
| | |                   | `-MemberExpr 0x55887c320520 <col:18, col:36> 'EDKII_PEI_LOAD_CAPSULE_ON_DISK':'EFI_STATUS (*)(EFI_PEI_SERVICES **, EDKII_PEI_CAPSULE_ON_DISK_PPI *)' lvalue ->LoadCapsuleOnDisk 0x55887c17ead0
| | |                   |   `-ImplicitCastExpr 0x55887c320508 <col:18> 'EDKII_PEI_CAPSULE_ON_DISK_PPI *' <LValueToRValue>
| | |                   |     `-DeclRefExpr 0x55887c3204e8 <col:18> 'EDKII_PEI_CAPSULE_ON_DISK_PPI *' lvalue Var 0x55887c19a6d8 'PeiCapsuleOnDisk' 'EDKII_PEI_CAPSULE_ON_DISK_PPI *'
| | |                   |-ImplicitCastExpr 0x55887c3205d8 <col:55> 'EFI_PEI_SERVICES **' <LValueToRValue>
| | |                   | `-DeclRefExpr 0x55887c320550 <col:55> 'EFI_PEI_SERVICES **' lvalue ParmVar 0x55887c199c38 'PeiServices' 'EFI_PEI_SERVICES **'
| | |                   `-ImplicitCastExpr 0x55887c3205f0 <col:68> 'EDKII_PEI_CAPSULE_ON_DISK_PPI *' <LValueToRValue>
| | |                     `-DeclRefExpr 0x55887c320570 <col:68> 'EDKII_PEI_CAPSULE_ON_DISK_PPI *' lvalue Var 0x55887c19a6d8 'PeiCapsuleOnDisk' 'EDKII_PEI_CAPSULE_ON_DISK_PPI *'
| | |-IfStmt 0x55887c321c88 <line:364:3, line:395:3>
| | | |-BinaryOperator 0x55887c320948 <line:364:7, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:26> 'int' '=='
| | | | |-CallExpr 0x55887c3208a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:364:7, col:72> 'void *'
| | | | | |-ImplicitCastExpr 0x55887c320888 <col:7> 'void *(*)(const EFI_GUID *)' <FunctionToPointerDecay>
| | | | | | `-DeclRefExpr 0x55887c320798 <col:7> 'void *(const EFI_GUID *)' Function 0x55887c195ad0 'GetFirstGuidHob' 'void *(const EFI_GUID *)'
| | | | | `-CStyleCastExpr 0x55887c320800 <col:24, col:43> 'const EFI_GUID *' <NoOp>
| | | | |   `-UnaryOperator 0x55887c3207d8 <col:42, col:43> 'EFI_GUID *' prefix '&' cannot overflow
| | | | |     `-DeclRefExpr 0x55887c3207b8 <col:43> 'EFI_GUID':'GUID' lvalue Var 0x55887c184508 'gEfiMemoryTypeInformationGuid' 'EFI_GUID':'GUID'
| | | | `-ParenExpr 0x55887c320928 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'void *'
| | | |   `-CStyleCastExpr 0x55887c320900 <col:16, col:25> 'void *' <NullToPointer>
| | | |     `-IntegerLiteral 0x55887c3208c8 <col:25> 'int' 0
| | | `-CompoundStmt 0x55887c321c68 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:364:83, line:395:3>
| | |   |-BinaryOperator 0x55887c320bf0 <line:368:5, line:373:16> 'EFI_STATUS':'unsigned long long' '='
| | |   | |-DeclRefExpr 0x55887c320968 <line:368:5> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | |   | `-CallExpr 0x55887c320b68 <col:14, line:373:16> 'EFI_STATUS':'unsigned long long'
| | |   |   |-ImplicitCastExpr 0x55887c320b50 <line:368:14> 'EFI_STATUS (*)(const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)' <FunctionToPointerDecay>
| | |   |   | `-DeclRefExpr 0x55887c320988 <col:14> 'EFI_STATUS (const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)' Function 0x55887c1394a8 'PeiServicesLocatePpi' 'EFI_STATUS (const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)'
| | |   |   |-ImplicitCastExpr 0x55887c320ba8 <line:369:16, col:17> 'const EFI_GUID *' <NoOp>
| | |   |   | `-UnaryOperator 0x55887c3209c8 <col:16, col:17> 'EFI_GUID *' prefix '&' cannot overflow
| | |   |   |   `-DeclRefExpr 0x55887c3209a8 <col:17> 'EFI_GUID':'GUID' lvalue Var 0x55887c173130 'gEfiPeiReadOnlyVariable2PpiGuid' 'EFI_GUID':'GUID'
| | |   |   |-ImplicitCastExpr 0x55887c320bc0 <line:370:16> 'UINTN':'unsigned long long' <IntegralCast>
| | |   |   | `-IntegerLiteral 0x55887c3209e0 <col:16> 'int' 0
| | |   |   |-ImplicitCastExpr 0x55887c320bd8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'EFI_PEI_PPI_DESCRIPTOR **' <NullToPointer>
| | |   |   | `-ParenExpr 0x55887c320a60 <col:15, col:26> 'void *'
| | |   |   |   `-CStyleCastExpr 0x55887c320a38 <col:16, col:25> 'void *' <NullToPointer>
| | |   |   |     `-IntegerLiteral 0x55887c320a00 <col:25> 'int' 0
| | |   |   `-CStyleCastExpr 0x55887c320b28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:372:16, col:26> 'void **' <BitCast>
| | |   |     `-UnaryOperator 0x55887c320af8 <col:25, col:26> 'EFI_PEI_READ_ONLY_VARIABLE2_PPI **' prefix '&' cannot overflow
| | |   |       `-DeclRefExpr 0x55887c320a80 <col:26> 'EFI_PEI_READ_ONLY_VARIABLE2_PPI *' lvalue Var 0x55887c19a268 'Variable' 'EFI_PEI_READ_ONLY_VARIABLE2_PPI *'
| | |   `-IfStmt 0x55887c321c48 <line:374:5, line:394:5>
| | |     |-UnaryOperator 0x55887c320d90 <line:374:9, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:75> 'int' prefix '!' cannot overflow
| | |     | `-ParenExpr 0x55887c320d70 <col:35, col:75> 'int'
| | |     |   `-BinaryOperator 0x55887c320d50 <col:36, col:74> 'int' '<'
| | |     |     |-ParenExpr 0x55887c320cf8 <col:36, col:70> 'INTN':'long long'
| | |     |     | `-CStyleCastExpr 0x55887c320cd0 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | |     |     |   `-CStyleCastExpr 0x55887c320c98 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |     |     |     `-ImplicitCastExpr 0x55887c320c80 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | |     |     |       `-ParenExpr 0x55887c320c60 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | |     |     |         `-DeclRefExpr 0x55887c320c10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:374:21> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | |     |     `-ImplicitCastExpr 0x55887c320d38 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | |     |       `-IntegerLiteral 0x55887c320d18 <col:74> 'int' 0
| | |     `-CompoundStmt 0x55887c321c20 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:374:30, line:394:5>
| | |       |-BinaryOperator 0x55887c320e40 <line:375:7, col:36> 'UINTN':'unsigned long long' '='
| | |       | |-DeclRefExpr 0x55887c320da8 <col:7> 'UINTN':'unsigned long long' lvalue Var 0x55887c19a528 'DataSize' 'UINTN':'unsigned long long'
| | |       | `-ImplicitCastExpr 0x55887c320e28 <col:18, col:36> 'UINTN':'unsigned long long' <IntegralCast>
| | |       |   `-UnaryExprOrTypeTraitExpr 0x55887c320e08 <col:18, col:36> 'unsigned long' sizeof
| | |       |     `-ParenExpr 0x55887c320de8 <col:25, col:36> 'EFI_MEMORY_TYPE_INFORMATION[17]' lvalue
| | |       |       `-DeclRefExpr 0x55887c320dc8 <col:26> 'EFI_MEMORY_TYPE_INFORMATION[17]' lvalue Var 0x55887c19a878 'MemoryData' 'EFI_MEMORY_TYPE_INFORMATION[17]' non_odr_use_unevaluated
| | |       |-BinaryOperator 0x55887c321728 <line:376:7, line:383:30> 'EFI_STATUS':'unsigned long long' '='
| | |       | |-DeclRefExpr 0x55887c320e60 <line:376:7> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | |       | `-CallExpr 0x55887c321158 <col:18, line:383:30> 'EFI_STATUS':'unsigned long long'
| | |       |   |-ImplicitCastExpr 0x55887c321140 <line:376:18, col:28> 'EFI_PEI_GET_VARIABLE2':'EFI_STATUS (*)(const EFI_PEI_READ_ONLY_VARIABLE2_PPI *, const CHAR16 *, const EFI_GUID *, UINT32 *, UINTN *, void *)' <LValueToRValue>
| | |       |   | `-MemberExpr 0x55887c320eb8 <col:18, col:28> 'EFI_PEI_GET_VARIABLE2':'EFI_STATUS (*)(const EFI_PEI_READ_ONLY_VARIABLE2_PPI *, const CHAR16 *, const EFI_GUID *, UINT32 *, UINTN *, void *)' lvalue ->GetVariable 0x55887c173050
| | |       |   |   `-ImplicitCastExpr 0x55887c320ea0 <col:18> 'EFI_PEI_READ_ONLY_VARIABLE2_PPI *' <LValueToRValue>
| | |       |   |     `-DeclRefExpr 0x55887c320e80 <col:18> 'EFI_PEI_READ_ONLY_VARIABLE2_PPI *' lvalue Var 0x55887c19a268 'Variable' 'EFI_PEI_READ_ONLY_VARIABLE2_PPI *'
| | |       |   |-ImplicitCastExpr 0x55887c3211c0 <line:377:30> 'const EFI_PEI_READ_ONLY_VARIABLE2_PPI *' <NoOp>
| | |       |   | `-ImplicitCastExpr 0x55887c3211a8 <col:30> 'EFI_PEI_READ_ONLY_VARIABLE2_PPI *' <LValueToRValue>
| | |       |   |   `-DeclRefExpr 0x55887c320ee8 <col:30> 'EFI_PEI_READ_ONLY_VARIABLE2_PPI *' lvalue Var 0x55887c19a268 'Variable' 'EFI_PEI_READ_ONLY_VARIABLE2_PPI *'
| | |       |   |-ImplicitCastExpr 0x55887c321220 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Include/Guid/MemoryTypeInformation.h:21:52> 'const CHAR16 *' <BitCast>
| | |       |   | `-ImplicitCastExpr 0x55887c321208 <col:52> 'int *' <ArrayToPointerDecay>
| | |       |   |   `-StringLiteral 0x55887c320f48 <col:52> 'int[22]' lvalue L"MemoryTypeInformation"
| | |       |   |-ImplicitCastExpr 0x55887c321680 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:379:30, col:31> 'const EFI_GUID *' <NoOp>
| | |       |   | `-UnaryOperator 0x55887c320fd8 <col:30, col:31> 'EFI_GUID *' prefix '&' cannot overflow
| | |       |   |   `-DeclRefExpr 0x55887c320fb8 <col:31> 'EFI_GUID':'GUID' lvalue Var 0x55887c184508 'gEfiMemoryTypeInformationGuid' 'EFI_GUID':'GUID'
| | |       |   |-ImplicitCastExpr 0x55887c321698 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'UINT32 *' <NullToPointer>
| | |       |   | `-ParenExpr 0x55887c321050 <col:15, col:26> 'void *'
| | |       |   |   `-CStyleCastExpr 0x55887c321028 <col:16, col:25> 'void *' <NullToPointer>
| | |       |   |     `-IntegerLiteral 0x55887c320ff0 <col:25> 'int' 0
| | |       |   |-UnaryOperator 0x55887c321090 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:381:30, col:31> 'UINTN *' prefix '&' cannot overflow
| | |       |   | `-DeclRefExpr 0x55887c321070 <col:31> 'UINTN':'unsigned long long' lvalue Var 0x55887c19a528 'DataSize' 'UINTN':'unsigned long long'
| | |       |   `-ImplicitCastExpr 0x55887c3216b0 <line:382:30, col:31> 'void *' <BitCast>
| | |       |     `-UnaryOperator 0x55887c321128 <col:30, col:31> 'EFI_MEMORY_TYPE_INFORMATION (*)[17]' prefix '&' cannot overflow
| | |       |       `-DeclRefExpr 0x55887c3210a8 <col:31> 'EFI_MEMORY_TYPE_INFORMATION[17]' lvalue Var 0x55887c19a878 'MemoryData' 'EFI_MEMORY_TYPE_INFORMATION[17]'
| | |       `-IfStmt 0x55887c321c00 <line:384:7, line:393:7>
| | |         |-BinaryOperator 0x55887c321a28 <line:384:11, col:86> 'int' '&&'
| | |         | |-UnaryOperator 0x55887c3218c8 <col:11, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:75> 'int' prefix '!' cannot overflow
| | |         | | `-ParenExpr 0x55887c3218a8 <col:35, col:75> 'int'
| | |         | |   `-BinaryOperator 0x55887c321888 <col:36, col:74> 'int' '<'
| | |         | |     |-ParenExpr 0x55887c321830 <col:36, col:70> 'INTN':'long long'
| | |         | |     | `-CStyleCastExpr 0x55887c321808 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | |         | |     |   `-CStyleCastExpr 0x55887c3217d0 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |         | |     |     `-ImplicitCastExpr 0x55887c3217b8 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | |         | |     |       `-ParenExpr 0x55887c321798 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | |         | |     |         `-DeclRefExpr 0x55887c321748 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:384:23> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | |         | |     `-ImplicitCastExpr 0x55887c321870 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | |         | |       `-IntegerLiteral 0x55887c321850 <col:74> 'int' 0
| | |         | `-ImplicitCastExpr 0x55887c321a10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:384:34, col:86> 'int' <IntegralCast>
| | |         |   `-CallExpr 0x55887c3219b0 <col:34, col:86> 'BOOLEAN':'unsigned char'
| | |         |     |-ImplicitCastExpr 0x55887c321998 <col:34> 'BOOLEAN (*)(EFI_MEMORY_TYPE_INFORMATION *, UINTN)' <FunctionToPointerDecay>
| | |         |     | `-DeclRefExpr 0x55887c3218e0 <col:34> 'BOOLEAN (EFI_MEMORY_TYPE_INFORMATION *, UINTN)' Function 0x55887c198ac8 'ValidateMemoryTypeInfoVariable' 'BOOLEAN (EFI_MEMORY_TYPE_INFORMATION *, UINTN)'
| | |         |     |-ImplicitCastExpr 0x55887c3219e0 <col:66> 'EFI_MEMORY_TYPE_INFORMATION *' <ArrayToPointerDecay>
| | |         |     | `-DeclRefExpr 0x55887c321900 <col:66> 'EFI_MEMORY_TYPE_INFORMATION[17]' lvalue Var 0x55887c19a878 'MemoryData' 'EFI_MEMORY_TYPE_INFORMATION[17]'
| | |         |     `-ImplicitCastExpr 0x55887c3219f8 <col:78> 'UINTN':'unsigned long long' <LValueToRValue>
| | |         |       `-DeclRefExpr 0x55887c321920 <col:78> 'UINTN':'unsigned long long' lvalue Var 0x55887c19a528 'DataSize' 'UINTN':'unsigned long long'
| | |         `-CompoundStmt 0x55887c321be8 <col:89, line:393:7>
| | |           `-CallExpr 0x55887c321b50 <line:388:9, line:392:11> 'void *'
| | |             |-ImplicitCastExpr 0x55887c321b38 <line:388:9> 'void *(*)(const EFI_GUID *, void *, UINTN)' <FunctionToPointerDecay>
| | |             | `-DeclRefExpr 0x55887c321a48 <col:9> 'void *(const EFI_GUID *, void *, UINTN)' Function 0x55887c196e30 'BuildGuidDataHob' 'void *(const EFI_GUID *, void *, UINTN)'
| | |             |-ImplicitCastExpr 0x55887c321b88 <line:389:11, col:12> 'const EFI_GUID *' <NoOp>
| | |             | `-UnaryOperator 0x55887c321a88 <col:11, col:12> 'EFI_GUID *' prefix '&' cannot overflow
| | |             |   `-DeclRefExpr 0x55887c321a68 <col:12> 'EFI_GUID':'GUID' lvalue Var 0x55887c184508 'gEfiMemoryTypeInformationGuid' 'EFI_GUID':'GUID'
| | |             |-ImplicitCastExpr 0x55887c321bb8 <line:390:11> 'void *' <BitCast>
| | |             | `-ImplicitCastExpr 0x55887c321ba0 <col:11> 'EFI_MEMORY_TYPE_INFORMATION *' <ArrayToPointerDecay>
| | |             |   `-DeclRefExpr 0x55887c321aa0 <col:11> 'EFI_MEMORY_TYPE_INFORMATION[17]' lvalue Var 0x55887c19a878 'MemoryData' 'EFI_MEMORY_TYPE_INFORMATION[17]'
| | |             `-ImplicitCastExpr 0x55887c321bd0 <line:391:11> 'UINTN':'unsigned long long' <LValueToRValue>
| | |               `-DeclRefExpr 0x55887c321ac0 <col:11> 'UINTN':'unsigned long long' lvalue Var 0x55887c19a528 'DataSize' 'UINTN':'unsigned long long'
| | |-BinaryOperator 0x55887c321d80 <line:400:3, col:35> 'EFI_PEI_FILE_HANDLE':'void *' '='
| | | |-DeclRefExpr 0x55887c321ca8 <col:3> 'EFI_PEI_FILE_HANDLE':'void *' lvalue Var 0x55887c19a178 'FileHandle' 'EFI_PEI_FILE_HANDLE':'void *'
| | | `-CallExpr 0x55887c321d60 <col:16, col:35> 'EFI_PEI_FILE_HANDLE':'void *'
| | |   `-ImplicitCastExpr 0x55887c321d48 <col:16> 'EFI_PEI_FILE_HANDLE (*)(void)' <FunctionToPointerDecay>
| | |     `-DeclRefExpr 0x55887c321cc8 <col:16> 'EFI_PEI_FILE_HANDLE (void)' Function 0x55887c2f74c8 'DxeIplFindDxeCore' 'EFI_PEI_FILE_HANDLE (void)'
| | |-BinaryOperator 0x55887c321df8 <line:405:3, col:14> 'UINTN':'unsigned long long' '='
| | | |-DeclRefExpr 0x55887c321da0 <col:3> 'UINTN':'unsigned long long' lvalue Var 0x55887c19a408 'Instance' 'UINTN':'unsigned long long'
| | | `-ImplicitCastExpr 0x55887c321de0 <col:14> 'UINTN':'unsigned long long' <IntegralCast>
| | |   `-IntegerLiteral 0x55887c321dc0 <col:14> 'int' 0
| | |-DoStmt 0x55887c322f38 <line:406:3, line:421:30>
| | | |-CompoundStmt 0x55887c322d90 <line:406:6, line:421:3>
| | | | |-BinaryOperator 0x55887c3220a8 <line:407:5, col:97> 'EFI_STATUS':'unsigned long long' '='
| | | | | |-DeclRefExpr 0x55887c321e18 <col:5> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | | | | `-CallExpr 0x55887c322038 <col:14, col:97> 'EFI_STATUS':'unsigned long long'
| | | | |   |-ImplicitCastExpr 0x55887c322020 <col:14> 'EFI_STATUS (*)(const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)' <FunctionToPointerDecay>
| | | | |   | `-DeclRefExpr 0x55887c321e38 <col:14> 'EFI_STATUS (const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)' Function 0x55887c1394a8 'PeiServicesLocatePpi' 'EFI_STATUS (const EFI_GUID *, UINTN, EFI_PEI_PPI_DESCRIPTOR **, void **)'
| | | | |   |-ImplicitCastExpr 0x55887c322078 <col:36, col:37> 'const EFI_GUID *' <NoOp>
| | | | |   | `-UnaryOperator 0x55887c321e78 <col:36, col:37> 'EFI_GUID *' prefix '&' cannot overflow
| | | | |   |   `-DeclRefExpr 0x55887c321e58 <col:37> 'EFI_GUID':'GUID' lvalue Var 0x55887c17b910 'gEfiPeiLoadFilePpiGuid' 'EFI_GUID':'GUID'
| | | | |   |-UnaryOperator 0x55887c321eb0 <col:61, col:69> 'UINTN':'unsigned long long' postfix '++'
| | | | |   | `-DeclRefExpr 0x55887c321e90 <col:61> 'UINTN':'unsigned long long' lvalue Var 0x55887c19a408 'Instance' 'UINTN':'unsigned long long'
| | | | |   |-ImplicitCastExpr 0x55887c322090 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'EFI_PEI_PPI_DESCRIPTOR **' <NullToPointer>
| | | | |   | `-ParenExpr 0x55887c321f28 <col:15, col:26> 'void *'
| | | | |   |   `-CStyleCastExpr 0x55887c321f00 <col:16, col:25> 'void *' <NullToPointer>
| | | | |   |     `-IntegerLiteral 0x55887c321ec8 <col:25> 'int' 0
| | | | |   `-CStyleCastExpr 0x55887c321ff8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:407:79, col:89> 'void **' <BitCast>
| | | | |     `-UnaryOperator 0x55887c321fc8 <col:88, col:89> 'EFI_PEI_LOAD_FILE_PPI **' prefix '&' cannot overflow
| | | | |       `-DeclRefExpr 0x55887c321f48 <col:89> 'EFI_PEI_LOAD_FILE_PPI *' lvalue Var 0x55887c19a358 'LoadFile' 'EFI_PEI_LOAD_FILE_PPI *'
| | | | |-DoStmt 0x55887c322aa0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:446:5, line:453:19>
| | | | | |-CompoundStmt 0x55887c322990 <line:446:8, line:453:5>
| | | | | | `-IfStmt 0x55887c322970 <line:447:7, line:452:7>
| | | | | |   |-CallExpr 0x55887c322100 <line:447:11, col:31> 'BOOLEAN':'unsigned char'
| | | | | |   | `-ImplicitCastExpr 0x55887c3220e8 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | | | |   |   `-DeclRefExpr 0x55887c3220c8 <col:11> 'BOOLEAN (void)' Function 0x55887c18d4f0 'DebugAssertEnabled' 'BOOLEAN (void)'
| | | | | |   `-CompoundStmt 0x55887c322958 <col:34, line:452:7>
| | | | | |     `-IfStmt 0x55887c322938 <line:448:9, line:451:9>
| | | | | |       |-ParenExpr 0x55887c322280 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | | | | |       | `-BinaryOperator 0x55887c322260 <col:36, col:74> 'int' '<'
| | | | | |       |   |-ParenExpr 0x55887c322208 <col:36, col:70> 'INTN':'long long'
| | | | | |       |   | `-CStyleCastExpr 0x55887c3221e0 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | | | | |       |   |   `-CStyleCastExpr 0x55887c3221a8 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | | | | |       |   |     `-ImplicitCastExpr 0x55887c322190 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | | | | |       |   |       `-ParenExpr 0x55887c322170 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | | | | |       |   |         `-DeclRefExpr 0x55887c322120 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:411:23> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | | | | |       |   `-ImplicitCastExpr 0x55887c322248 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | | | | |       |     `-IntegerLiteral 0x55887c322228 <col:74> 'int' 0
| | | | | |       `-CompoundStmt 0x55887c322918 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:448:42, line:451:9>
| | | | | |         |-DoStmt 0x55887c322788 <line:423:5, line:427:19>
| | | | | |         | |-CompoundStmt 0x55887c322678 <line:423:8, line:427:5>
| | | | | |         | | `-IfStmt 0x55887c322658 <line:424:7, line:426:7>
| | | | | |         | |   |-CallExpr 0x55887c3222d8 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | | | | |         | |   | `-ImplicitCastExpr 0x55887c3222c0 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | | | |         | |   |   `-DeclRefExpr 0x55887c3222a0 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | | | | |         | |   `-CompoundStmt 0x55887c322640 <col:33, line:426:7>
| | | | | |         | |     `-DoStmt 0x55887c322620 <line:373:5, line:377:19>
| | | | | |         | |       |-CompoundStmt 0x55887c322510 <line:373:8, line:377:5>
| | | | | |         | |       | `-IfStmt 0x55887c3224f0 <line:374:7, line:376:7>
| | | | | |         | |       |   |-CallExpr 0x55887c322350 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | | | | |         | |       |   | |-ImplicitCastExpr 0x55887c322338 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | | | | |         | |       |   | | `-DeclRefExpr 0x55887c3222f8 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | | | | |         | |       |   | `-ImplicitCastExpr 0x55887c322378 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | | | | |         | |       |   |   `-IntegerLiteral 0x55887c322318 <col:22> 'unsigned int' 2147483648
| | | | | |         | |       |   `-CompoundStmt 0x55887c3224d8 <line:374:48, line:376:7>
| | | | | |         | |       |     `-CallExpr 0x55887c322440 <line:375:9, col:46> 'void'
| | | | | |         | |       |       |-ImplicitCastExpr 0x55887c322428 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | | | | |         | |       |       | `-DeclRefExpr 0x55887c322390 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | | | | |         | |       |       |-ImplicitCastExpr 0x55887c322478 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | | | | |         | |       |       | `-IntegerLiteral 0x55887c3223b0 <col:22> 'unsigned int' 2147483648
| | | | | |         | |       |       |-ImplicitCastExpr 0x55887c3224a8 <line:449:32> 'const CHAR8 *' <NoOp>
| | | | | |         | |       |       | `-ImplicitCastExpr 0x55887c322490 <col:32> 'char *' <ArrayToPointerDecay>
| | | | | |         | |       |       |   `-StringLiteral 0x55887c3223d0 <col:32> 'char[33]' lvalue "\nASSERT_EFI_ERROR (Status = %r)\n"
| | | | | |         | |       |       `-ImplicitCastExpr 0x55887c3224c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:411:23> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | | | | |         | |       |         `-DeclRefExpr 0x55887c322408 <col:23> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | | | | |         | |       `-ParenExpr 0x55887c322600 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | | | | |         | |         `-CStyleCastExpr 0x55887c3225d8 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | | | |         | |           `-ParenExpr 0x55887c3225b8 <col:26, col:31> 'int'
| | | | | |         | |             `-BinaryOperator 0x55887c322568 <col:27, col:30> 'int' '=='
| | | | | |         | |               |-IntegerLiteral 0x55887c322528 <col:27> 'int' 0
| | | | | |         | |               `-IntegerLiteral 0x55887c322548 <col:30> 'int' 1
| | | | | |         | `-ParenExpr 0x55887c322768 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | | | | |         |   `-CStyleCastExpr 0x55887c322740 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | | | |         |     `-ParenExpr 0x55887c322720 <col:26, col:31> 'int'
| | | | | |         |       `-BinaryOperator 0x55887c3226d0 <col:27, col:30> 'int' '=='
| | | | | |         |         |-IntegerLiteral 0x55887c322690 <col:27> 'int' 0
| | | | | |         |         `-IntegerLiteral 0x55887c3226b0 <col:30> 'int' 1
| | | | | |         `-CallExpr 0x55887c322868 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:352:30, col:113> 'void'
| | | | | |           |-ImplicitCastExpr 0x55887c322850 <col:30> 'void (*)(const CHAR8 *, UINTN, const CHAR8 *)' <FunctionToPointerDecay>
| | | | | |           | `-DeclRefExpr 0x55887c3227a8 <col:30> 'void (const CHAR8 *, UINTN, const CHAR8 *)' Function 0x55887c18d0f8 'DebugAssert' 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| | | | | |           |-ImplicitCastExpr 0x55887c3228b8 <<scratch space>:33:1> 'const CHAR8 *' <NoOp>
| | | | | |           | `-ImplicitCastExpr 0x55887c3228a0 <col:1> 'char *' <ArrayToPointerDecay>
| | | | | |           |   `-StringLiteral 0x55887c3227c8 <col:1> 'char[10]' lvalue "DxeLoad.c"
| | | | | |           |-ImplicitCastExpr 0x55887c3228d0 <line:34:1> 'UINTN':'unsigned long long' <IntegralCast>
| | | | | |           | `-IntegerLiteral 0x55887c3227f0 <col:1> 'int' 411
| | | | | |           `-ImplicitCastExpr 0x55887c322900 <line:35:1> 'const CHAR8 *' <NoOp>
| | | | | |             `-ImplicitCastExpr 0x55887c3228e8 <col:1> 'char *' <ArrayToPointerDecay>
| | | | | |               `-StringLiteral 0x55887c322810 <col:1> 'char[39]' lvalue "!(((INTN)(RETURN_STATUS)(Status)) < 0)"
| | | | | `-ParenExpr 0x55887c322a80 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | | | |   `-CStyleCastExpr 0x55887c322a58 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | | |     `-ParenExpr 0x55887c322a38 <col:26, col:31> 'int'
| | | | |       `-BinaryOperator 0x55887c3229e8 <col:27, col:30> 'int' '=='
| | | | |         |-IntegerLiteral 0x55887c3229a8 <col:27> 'int' 0
| | | | |         `-IntegerLiteral 0x55887c3229c8 <col:30> 'int' 1
| | | | `-BinaryOperator 0x55887c322d70 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:413:5, line:420:26> 'EFI_STATUS':'unsigned long long' '='
| | | |   |-DeclRefExpr 0x55887c322ac0 <line:413:5> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | | |   `-CallExpr 0x55887c322c80 <col:14, line:420:26> 'EFI_STATUS':'unsigned long long'
| | | |     |-ImplicitCastExpr 0x55887c322c68 <line:413:14, col:24> 'EFI_PEI_LOAD_FILE':'EFI_STATUS (*)(const EFI_PEI_LOAD_FILE_PPI *, EFI_PEI_FILE_HANDLE, EFI_PHYSICAL_ADDRESS *, UINT64 *, EFI_PHYSICAL_ADDRESS *, UINT32 *)' <LValueToRValue>
| | | |     | `-MemberExpr 0x55887c322b18 <col:14, col:24> 'EFI_PEI_LOAD_FILE':'EFI_STATUS (*)(const EFI_PEI_LOAD_FILE_PPI *, EFI_PEI_FILE_HANDLE, EFI_PHYSICAL_ADDRESS *, UINT64 *, EFI_PHYSICAL_ADDRESS *, UINT32 *)' lvalue ->LoadFile 0x55887c17b8b0
| | | |     |   `-ImplicitCastExpr 0x55887c322b00 <col:14> 'EFI_PEI_LOAD_FILE_PPI *' <LValueToRValue>
| | | |     |     `-DeclRefExpr 0x55887c322ae0 <col:14> 'EFI_PEI_LOAD_FILE_PPI *' lvalue Var 0x55887c19a358 'LoadFile' 'EFI_PEI_LOAD_FILE_PPI *'
| | | |     |-ImplicitCastExpr 0x55887c322ce8 <line:414:26> 'const EFI_PEI_LOAD_FILE_PPI *' <NoOp>
| | | |     | `-ImplicitCastExpr 0x55887c322cd0 <col:26> 'EFI_PEI_LOAD_FILE_PPI *' <LValueToRValue>
| | | |     |   `-DeclRefExpr 0x55887c322b48 <col:26> 'EFI_PEI_LOAD_FILE_PPI *' lvalue Var 0x55887c19a358 'LoadFile' 'EFI_PEI_LOAD_FILE_PPI *'
| | | |     |-ImplicitCastExpr 0x55887c322d00 <line:415:26> 'EFI_PEI_FILE_HANDLE':'void *' <LValueToRValue>
| | | |     | `-DeclRefExpr 0x55887c322b68 <col:26> 'EFI_PEI_FILE_HANDLE':'void *' lvalue Var 0x55887c19a178 'FileHandle' 'EFI_PEI_FILE_HANDLE':'void *'
| | | |     |-UnaryOperator 0x55887c322ba8 <line:416:26, col:27> 'EFI_PHYSICAL_ADDRESS *' prefix '&' cannot overflow
| | | |     | `-DeclRefExpr 0x55887c322b88 <col:27> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' lvalue Var 0x55887c199f38 'DxeCoreAddress' 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | | |     |-UnaryOperator 0x55887c322be0 <line:417:26, col:27> 'UINT64 *' prefix '&' cannot overflow
| | | |     | `-DeclRefExpr 0x55887c322bc0 <col:27> 'UINT64':'unsigned long long' lvalue Var 0x55887c199fc8 'DxeCoreSize' 'UINT64':'unsigned long long'
| | | |     |-UnaryOperator 0x55887c322c18 <line:418:26, col:27> 'EFI_PHYSICAL_ADDRESS *' prefix '&' cannot overflow
| | | |     | `-DeclRefExpr 0x55887c322bf8 <col:27> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' lvalue Var 0x55887c19a058 'DxeCoreEntryPoint' 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | | |     `-UnaryOperator 0x55887c322c50 <line:419:26, col:27> 'UINT32 *' prefix '&' cannot overflow
| | | |       `-DeclRefExpr 0x55887c322c30 <col:27> 'UINT32':'unsigned int' lvalue Var 0x55887c19a498 'AuthenticationState' 'UINT32':'unsigned int'
| | | `-ParenExpr 0x55887c322f18 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | |   `-BinaryOperator 0x55887c322ef8 <col:36, col:74> 'int' '<'
| | |     |-ParenExpr 0x55887c322ea0 <col:36, col:70> 'INTN':'long long'
| | |     | `-CStyleCastExpr 0x55887c322e78 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | |     |   `-CStyleCastExpr 0x55887c322e40 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |     |     `-ImplicitCastExpr 0x55887c322e28 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | |     |       `-ParenExpr 0x55887c322e08 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | |     |         `-DeclRefExpr 0x55887c322db8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:421:23> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | |     `-ImplicitCastExpr 0x55887c322ee0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | |       `-IntegerLiteral 0x55887c322ec0 <col:74> 'int' 0
| | |-BinaryOperator 0x55887c3230f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:426:3, col:67> 'EFI_STATUS':'unsigned long long' '='
| | | |-DeclRefExpr 0x55887c322f58 <col:3> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | | `-CallExpr 0x55887c323030 <col:12, col:67> 'EFI_STATUS':'unsigned long long'
| | |   |-ImplicitCastExpr 0x55887c323018 <col:12> 'EFI_STATUS (*)(const EFI_PEI_FILE_HANDLE, EFI_FV_FILE_INFO *)' <FunctionToPointerDecay>
| | |   | `-DeclRefExpr 0x55887c322f78 <col:12> 'EFI_STATUS (const EFI_PEI_FILE_HANDLE, EFI_FV_FILE_INFO *)' Function 0x55887c1a2618 'PeiServicesFfsGetFileInfo' 'EFI_STATUS (const EFI_PEI_FILE_HANDLE, EFI_FV_FILE_INFO *)'
| | |   |-ImplicitCastExpr 0x55887c323060 <col:39> 'EFI_PEI_FILE_HANDLE':'void *' <LValueToRValue>
| | |   | `-DeclRefExpr 0x55887c322f98 <col:39> 'EFI_PEI_FILE_HANDLE':'void *' lvalue Var 0x55887c19a178 'FileHandle' 'EFI_PEI_FILE_HANDLE':'void *'
| | |   `-UnaryOperator 0x55887c322fd8 <col:51, col:52> 'EFI_FV_FILE_INFO *' prefix '&' cannot overflow
| | |     `-DeclRefExpr 0x55887c322fb8 <col:52> 'EFI_FV_FILE_INFO':'EFI_FV_FILE_INFO' lvalue Var 0x55887c199ea8 'DxeCoreFileInfo' 'EFI_FV_FILE_INFO':'EFI_FV_FILE_INFO'
| | |-DoStmt 0x55887c323af8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:446:5, line:453:19>
| | | |-CompoundStmt 0x55887c3239e8 <line:446:8, line:453:5>
| | | | `-IfStmt 0x55887c3239c8 <line:447:7, line:452:7>
| | | |   |-CallExpr 0x55887c323148 <line:447:11, col:31> 'BOOLEAN':'unsigned char'
| | | |   | `-ImplicitCastExpr 0x55887c323130 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | |   |   `-DeclRefExpr 0x55887c323110 <col:11> 'BOOLEAN (void)' Function 0x55887c18d4f0 'DebugAssertEnabled' 'BOOLEAN (void)'
| | | |   `-CompoundStmt 0x55887c3239b0 <col:34, line:452:7>
| | | |     `-IfStmt 0x55887c323990 <line:448:9, line:451:9>
| | | |       |-ParenExpr 0x55887c3232c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | | |       | `-BinaryOperator 0x55887c3232a8 <col:36, col:74> 'int' '<'
| | | |       |   |-ParenExpr 0x55887c323250 <col:36, col:70> 'INTN':'long long'
| | | |       |   | `-CStyleCastExpr 0x55887c323228 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | | |       |   |   `-CStyleCastExpr 0x55887c3231f0 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | | |       |   |     `-ImplicitCastExpr 0x55887c3231d8 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | | |       |   |       `-ParenExpr 0x55887c3231b8 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | | |       |   |         `-DeclRefExpr 0x55887c323168 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:427:21> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | | |       |   `-ImplicitCastExpr 0x55887c323290 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | | |       |     `-IntegerLiteral 0x55887c323270 <col:74> 'int' 0
| | | |       `-CompoundStmt 0x55887c323970 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:448:42, line:451:9>
| | | |         |-DoStmt 0x55887c3237e0 <line:423:5, line:427:19>
| | | |         | |-CompoundStmt 0x55887c3236d0 <line:423:8, line:427:5>
| | | |         | | `-IfStmt 0x55887c3236b0 <line:424:7, line:426:7>
| | | |         | |   |-CallExpr 0x55887c323320 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | | |         | |   | `-ImplicitCastExpr 0x55887c323308 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | |         | |   |   `-DeclRefExpr 0x55887c3232e8 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | | |         | |   `-CompoundStmt 0x55887c323698 <col:33, line:426:7>
| | | |         | |     `-DoStmt 0x55887c323678 <line:373:5, line:377:19>
| | | |         | |       |-CompoundStmt 0x55887c323558 <line:373:8, line:377:5>
| | | |         | |       | `-IfStmt 0x55887c323538 <line:374:7, line:376:7>
| | | |         | |       |   |-CallExpr 0x55887c323398 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | | |         | |       |   | |-ImplicitCastExpr 0x55887c323380 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | | |         | |       |   | | `-DeclRefExpr 0x55887c323340 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | | |         | |       |   | `-ImplicitCastExpr 0x55887c3233c0 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | | |         | |       |   |   `-IntegerLiteral 0x55887c323360 <col:22> 'unsigned int' 2147483648
| | | |         | |       |   `-CompoundStmt 0x55887c323520 <line:374:48, line:376:7>
| | | |         | |       |     `-CallExpr 0x55887c323488 <line:375:9, col:46> 'void'
| | | |         | |       |       |-ImplicitCastExpr 0x55887c323470 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | | |         | |       |       | `-DeclRefExpr 0x55887c3233d8 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | | |         | |       |       |-ImplicitCastExpr 0x55887c3234c0 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | | |         | |       |       | `-IntegerLiteral 0x55887c3233f8 <col:22> 'unsigned int' 2147483648
| | | |         | |       |       |-ImplicitCastExpr 0x55887c3234f0 <line:449:32> 'const CHAR8 *' <NoOp>
| | | |         | |       |       | `-ImplicitCastExpr 0x55887c3234d8 <col:32> 'char *' <ArrayToPointerDecay>
| | | |         | |       |       |   `-StringLiteral 0x55887c323418 <col:32> 'char[33]' lvalue "\nASSERT_EFI_ERROR (Status = %r)\n"
| | | |         | |       |       `-ImplicitCastExpr 0x55887c323508 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:427:21> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | | |         | |       |         `-DeclRefExpr 0x55887c323450 <col:21> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c199e18 'Status' 'EFI_STATUS':'unsigned long long'
| | | |         | |       `-ParenExpr 0x55887c323658 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | | |         | |         `-CStyleCastExpr 0x55887c323630 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | |         | |           `-ParenExpr 0x55887c323610 <col:26, col:31> 'int'
| | | |         | |             `-BinaryOperator 0x55887c3235c0 <col:27, col:30> 'int' '=='
| | | |         | |               |-IntegerLiteral 0x55887c323570 <col:27> 'int' 0
| | | |         | |               `-IntegerLiteral 0x55887c323590 <col:30> 'int' 1
| | | |         | `-ParenExpr 0x55887c3237c0 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | | |         |   `-CStyleCastExpr 0x55887c323798 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | |         |     `-ParenExpr 0x55887c323778 <col:26, col:31> 'int'
| | | |         |       `-BinaryOperator 0x55887c323728 <col:27, col:30> 'int' '=='
| | | |         |         |-IntegerLiteral 0x55887c3236e8 <col:27> 'int' 0
| | | |         |         `-IntegerLiteral 0x55887c323708 <col:30> 'int' 1
| | | |         `-CallExpr 0x55887c3238c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:352:30, col:113> 'void'
| | | |           |-ImplicitCastExpr 0x55887c3238a8 <col:30> 'void (*)(const CHAR8 *, UINTN, const CHAR8 *)' <FunctionToPointerDecay>
| | | |           | `-DeclRefExpr 0x55887c323800 <col:30> 'void (const CHAR8 *, UINTN, const CHAR8 *)' Function 0x55887c18d0f8 'DebugAssert' 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| | | |           |-ImplicitCastExpr 0x55887c323910 <<scratch space>:36:1> 'const CHAR8 *' <NoOp>
| | | |           | `-ImplicitCastExpr 0x55887c3238f8 <col:1> 'char *' <ArrayToPointerDecay>
| | | |           |   `-StringLiteral 0x55887c323820 <col:1> 'char[10]' lvalue "DxeLoad.c"
| | | |           |-ImplicitCastExpr 0x55887c323928 <line:37:1> 'UINTN':'unsigned long long' <IntegralCast>
| | | |           | `-IntegerLiteral 0x55887c323848 <col:1> 'int' 427
| | | |           `-ImplicitCastExpr 0x55887c323958 <line:38:1> 'const CHAR8 *' <NoOp>
| | | |             `-ImplicitCastExpr 0x55887c323940 <col:1> 'char *' <ArrayToPointerDecay>
| | | |               `-StringLiteral 0x55887c323868 <col:1> 'char[39]' lvalue "!(((INTN)(RETURN_STATUS)(Status)) < 0)"
| | | `-ParenExpr 0x55887c323ad8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |   `-CStyleCastExpr 0x55887c323ab0 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |     `-ParenExpr 0x55887c323a90 <col:26, col:31> 'int'
| | |       `-BinaryOperator 0x55887c323a40 <col:27, col:30> 'int' '=='
| | |         |-IntegerLiteral 0x55887c323a00 <col:27> 'int' 0
| | |         `-IntegerLiteral 0x55887c323a20 <col:30> 'int' 1
| | |-CallExpr 0x55887c323ef0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:432:3, line:437:5> 'void'
| | | |-ImplicitCastExpr 0x55887c323ed8 <line:432:3> 'void (*)(const EFI_GUID *, EFI_PHYSICAL_ADDRESS, UINT64, EFI_PHYSICAL_ADDRESS)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x55887c323b18 <col:3> 'void (const EFI_GUID *, EFI_PHYSICAL_ADDRESS, UINT64, EFI_PHYSICAL_ADDRESS)' Function 0x55887c196028 'BuildModuleHob' 'void (const EFI_GUID *, EFI_PHYSICAL_ADDRESS, UINT64, EFI_PHYSICAL_ADDRESS)'
| | | |-ImplicitCastExpr 0x55887c323f30 <line:433:5, col:22> 'const EFI_GUID *' <NoOp>
| | | | `-UnaryOperator 0x55887c323b88 <col:5, col:22> 'EFI_GUID *' prefix '&' cannot overflow
| | | |   `-MemberExpr 0x55887c323b58 <col:6, col:22> 'EFI_GUID':'GUID' lvalue .FileName 0x55887c16a0d8
| | | |     `-DeclRefExpr 0x55887c323b38 <col:6> 'EFI_FV_FILE_INFO':'EFI_FV_FILE_INFO' lvalue Var 0x55887c199ea8 'DxeCoreFileInfo' 'EFI_FV_FILE_INFO':'EFI_FV_FILE_INFO'
| | | |-ImplicitCastExpr 0x55887c323f48 <line:434:5> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' <LValueToRValue>
| | | | `-DeclRefExpr 0x55887c323ba0 <col:5> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' lvalue Var 0x55887c199f38 'DxeCoreAddress' 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | | |-ParenExpr 0x55887c323e38 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:948:40, col:88> 'unsigned long long'
| | | | `-BinaryOperator 0x55887c323e18 <col:41, line:934:92> 'unsigned long long' '+'
| | | |   |-ImplicitCastExpr 0x55887c323e00 <line:948:41, col:47> 'UINT64':'unsigned long long' <LValueToRValue>
| | | |   | `-ParenExpr 0x55887c323be0 <col:41, col:47> 'UINT64':'unsigned long long' lvalue
| | | |   |   `-DeclRefExpr 0x55887c323bc0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:435:18> 'UINT64':'unsigned long long' lvalue Var 0x55887c199fc8 'DxeCoreSize' 'UINT64':'unsigned long long'
| | | |   `-ParenExpr 0x55887c323de0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:934:47, col:92> 'unsigned long long'
| | | |     `-BinaryOperator 0x55887c323dc0 <col:48, col:91> 'unsigned long long' '&'
| | | |       |-ParenExpr 0x55887c323cd0 <col:48, col:70> 'unsigned long long'
| | | |       | `-BinaryOperator 0x55887c323cb0 <col:49, col:69> 'unsigned long long' '-'
| | | |       |   |-ImplicitCastExpr 0x55887c323c98 <col:49, col:59> 'unsigned long long' <IntegralCast>
| | | |       |   | `-ParenExpr 0x55887c323c20 <col:49, col:59> 'int'
| | | |       |   |   `-IntegerLiteral 0x55887c323c00 <line:414:22> 'int' 4096
| | | |       |   `-ImplicitCastExpr 0x55887c323c80 <line:934:63, col:69> 'UINT64':'unsigned long long' <LValueToRValue>
| | | |       |     `-ParenExpr 0x55887c323c60 <col:63, col:69> 'UINT64':'unsigned long long' lvalue
| | | |       |       `-DeclRefExpr 0x55887c323c40 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:435:18> 'UINT64':'unsigned long long' lvalue Var 0x55887c199fc8 'DxeCoreSize' 'UINT64':'unsigned long long'
| | | |       `-ImplicitCastExpr 0x55887c323da8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:934:74, col:91> 'unsigned long long' <IntegralCast>
| | | |         `-ParenExpr 0x55887c323d88 <col:74, col:91> 'unsigned int'
| | | |           `-BinaryOperator 0x55887c323d68 <col:75, col:89> 'unsigned int' '-'
| | | |             |-ImplicitCastExpr 0x55887c323d50 <col:75, col:85> 'unsigned int' <IntegralCast>
| | | |             | `-ParenExpr 0x55887c323d10 <col:75, col:85> 'int'
| | | |             |   `-IntegerLiteral 0x55887c323cf0 <line:414:22> 'int' 4096
| | | |             `-IntegerLiteral 0x55887c323d30 <line:934:89> 'unsigned int' 1
| | | `-ImplicitCastExpr 0x55887c323f60 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:436:5> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' <LValueToRValue>
| | |   `-DeclRefExpr 0x55887c323e58 <col:5> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' lvalue Var 0x55887c19a058 'DxeCoreEntryPoint' 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | |-ConditionalOperator 0x55887c324ba0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | | |-ParenExpr 0x55887c3240e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:3, col:92> 'int'
| | | | `-BinaryOperator 0x55887c3240c8 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' '&&'
| | | |   |-ImplicitCastExpr 0x55887c3240b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:4, col:30> 'int' <IntegralCast>
| | | |   | `-CallExpr 0x55887c323fb0 <col:4, col:30> 'BOOLEAN':'unsigned char'
| | | |   |   `-ImplicitCastExpr 0x55887c323f98 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | |   |     `-DeclRefExpr 0x55887c323f78 <col:4> 'BOOLEAN (void)' Function 0x55887c2c82e0 'ReportProgressCodeEnabled' 'BOOLEAN (void)'
| | | |   `-BinaryOperator 0x55887c324090 <col:35, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' '=='
| | | |     |-ParenExpr 0x55887c324050 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:35, col:70> 'int'
| | | |     | `-BinaryOperator 0x55887c324030 <col:36, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'int' '&'
| | | |     |   |-ParenExpr 0x55887c323ff0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:36, col:41> 'int'
| | | |     |   | `-IntegerLiteral 0x55887c323fd0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' 1
| | | |     |   `-IntegerLiteral 0x55887c324010 <line:32:40> 'int' 255
| | | |     `-IntegerLiteral 0x55887c324070 <line:43:28> 'int' 1
| | | |-CallExpr 0x55887c3242a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:368:3, col:30> 'EFI_STATUS':'unsigned long long'
| | | | |-ImplicitCastExpr 0x55887c324288 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | | | | `-DeclRefExpr 0x55887c324108 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | | | |-ImplicitCastExpr 0x55887c3242d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'EFI_STATUS_CODE_TYPE':'unsigned int' <IntegralCast>
| | | | | `-IntegerLiteral 0x55887c324128 <col:28> 'int' 1
| | | | `-ImplicitCastExpr 0x55887c3242e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:442:42, col:101> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | | |   `-ParenExpr 0x55887c324268 <col:42, col:101> 'int'
| | | |     `-BinaryOperator 0x55887c324248 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:701:43, line:755:80> 'int' '|'
| | | |       |-ParenExpr 0x55887c3241a8 <line:701:43, col:69> 'int'
| | | |       | `-BinaryOperator 0x55887c324188 <line:127:29, line:701:59> 'int' '|'
| | | |       |   |-IntegerLiteral 0x55887c324148 <line:127:29> 'int' 50331648
| | | |       |   `-IntegerLiteral 0x55887c324168 <line:701:59> 'int' 131072
| | | |       `-ParenExpr 0x55887c324228 <line:755:45, col:80> 'int'
| | | |         `-BinaryOperator 0x55887c324208 <line:105:32, line:755:70> 'int' '|'
| | | |           |-IntegerLiteral 0x55887c3241c8 <line:105:32> 'int' 4096
| | | |           `-IntegerLiteral 0x55887c3241e8 <line:755:70> 'int' 1
| | | `-ConditionalOperator 0x55887c324b70 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | |   |-ParenExpr 0x55887c324470 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:3, col:86> 'int'
| | |   | `-BinaryOperator 0x55887c324450 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28> 'int' '&&'
| | |   |   |-ImplicitCastExpr 0x55887c324438 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:4, col:27> 'int' <IntegralCast>
| | |   |   | `-CallExpr 0x55887c324338 <col:4, col:27> 'BOOLEAN':'unsigned char'
| | |   |   |   `-ImplicitCastExpr 0x55887c324320 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   |   |     `-DeclRefExpr 0x55887c324300 <col:4> 'BOOLEAN (void)' Function 0x55887c2c8440 'ReportErrorCodeEnabled' 'BOOLEAN (void)'
| | |   |   `-BinaryOperator 0x55887c324418 <col:32, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28> 'int' '=='
| | |   |     |-ParenExpr 0x55887c3243d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:32, col:67> 'int'
| | |   |     | `-BinaryOperator 0x55887c3243b8 <col:33, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'int' '&'
| | |   |     |   |-ParenExpr 0x55887c324378 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:33, col:38> 'int'
| | |   |     |   | `-IntegerLiteral 0x55887c324358 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' 1
| | |   |     |   `-IntegerLiteral 0x55887c324398 <line:32:40> 'int' 255
| | |   |     `-IntegerLiteral 0x55887c3243f8 <line:44:28> 'int' 2
| | |   |-CallExpr 0x55887c324628 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:370:3, col:30> 'EFI_STATUS':'unsigned long long'
| | |   | |-ImplicitCastExpr 0x55887c324610 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | |   | | `-DeclRefExpr 0x55887c324490 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | |   | |-ImplicitCastExpr 0x55887c324658 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'EFI_STATUS_CODE_TYPE':'unsigned int' <IntegralCast>
| | |   | | `-IntegerLiteral 0x55887c3244b0 <col:28> 'int' 1
| | |   | `-ImplicitCastExpr 0x55887c324670 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:442:42, col:101> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | |   |   `-ParenExpr 0x55887c3245f0 <col:42, col:101> 'int'
| | |   |     `-BinaryOperator 0x55887c3245d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:701:43, line:755:80> 'int' '|'
| | |   |       |-ParenExpr 0x55887c324530 <line:701:43, col:69> 'int'
| | |   |       | `-BinaryOperator 0x55887c324510 <line:127:29, line:701:59> 'int' '|'
| | |   |       |   |-IntegerLiteral 0x55887c3244d0 <line:127:29> 'int' 50331648
| | |   |       |   `-IntegerLiteral 0x55887c3244f0 <line:701:59> 'int' 131072
| | |   |       `-ParenExpr 0x55887c3245b0 <line:755:45, col:80> 'int'
| | |   |         `-BinaryOperator 0x55887c324590 <line:105:32, line:755:70> 'int' '|'
| | |   |           |-IntegerLiteral 0x55887c324550 <line:105:32> 'int' 4096
| | |   |           `-IntegerLiteral 0x55887c324570 <line:755:70> 'int' 1
| | |   `-ConditionalOperator 0x55887c324b40 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| | |     |-ParenExpr 0x55887c3247f8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:3, col:86> 'int'
| | |     | `-BinaryOperator 0x55887c3247d8 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:45:28> 'int' '&&'
| | |     |   |-ImplicitCastExpr 0x55887c3247c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:4, col:27> 'int' <IntegralCast>
| | |     |   | `-CallExpr 0x55887c3246c0 <col:4, col:27> 'BOOLEAN':'unsigned char'
| | |     |   |   `-ImplicitCastExpr 0x55887c3246a8 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |     |   |     `-DeclRefExpr 0x55887c324688 <col:4> 'BOOLEAN (void)' Function 0x55887c2c85a0 'ReportDebugCodeEnabled' 'BOOLEAN (void)'
| | |     |   `-BinaryOperator 0x55887c3247a0 <col:32, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:45:28> 'int' '=='
| | |     |     |-ParenExpr 0x55887c324760 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:32, col:67> 'int'
| | |     |     | `-BinaryOperator 0x55887c324740 <col:33, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'int' '&'
| | |     |     |   |-ParenExpr 0x55887c324700 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:33, col:38> 'int'
| | |     |     |   | `-IntegerLiteral 0x55887c3246e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' 1
| | |     |     |   `-IntegerLiteral 0x55887c324720 <line:32:40> 'int' 255
| | |     |     `-IntegerLiteral 0x55887c324780 <line:45:28> 'int' 3
| | |     |-CallExpr 0x55887c3249b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:372:3, col:30> 'EFI_STATUS':'unsigned long long'
| | |     | |-ImplicitCastExpr 0x55887c324998 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| | |     | | `-DeclRefExpr 0x55887c324818 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| | |     | |-ImplicitCastExpr 0x55887c3249e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'EFI_STATUS_CODE_TYPE':'unsigned int' <IntegralCast>
| | |     | | `-IntegerLiteral 0x55887c324838 <col:28> 'int' 1
| | |     | `-ImplicitCastExpr 0x55887c3249f8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:442:42, col:101> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| | |     |   `-ParenExpr 0x55887c324978 <col:42, col:101> 'int'
| | |     |     `-BinaryOperator 0x55887c324958 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:701:43, line:755:80> 'int' '|'
| | |     |       |-ParenExpr 0x55887c3248b8 <line:701:43, col:69> 'int'
| | |     |       | `-BinaryOperator 0x55887c324898 <line:127:29, line:701:59> 'int' '|'
| | |     |       |   |-IntegerLiteral 0x55887c324858 <line:127:29> 'int' 50331648
| | |     |       |   `-IntegerLiteral 0x55887c324878 <line:701:59> 'int' 131072
| | |     |       `-ParenExpr 0x55887c324938 <line:755:45, col:80> 'int'
| | |     |         `-BinaryOperator 0x55887c324918 <line:105:32, line:755:70> 'int' '|'
| | |     |           |-IntegerLiteral 0x55887c3248d8 <line:105:32> 'int' 4096
| | |     |           `-IntegerLiteral 0x55887c3248f8 <line:755:70> 'int' 1
| | |     `-ParenExpr 0x55887c324b20 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | |       `-CStyleCastExpr 0x55887c324af8 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |         `-ParenExpr 0x55887c324ad8 <col:51, col:74> 'unsigned long long'
| | |           `-BinaryOperator 0x55887c324a88 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | |             |-IntegerLiteral 0x55887c324a10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | |             `-ImplicitCastExpr 0x55887c324a70 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | |               `-ParenExpr 0x55887c324a50 <col:62, col:73> 'int'
| | |                 `-IntegerLiteral 0x55887c324a30 <line:1081:43> 'int' 3
| | |-DoStmt 0x55887c3252f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:423:5, line:427:19>
| | | |-CompoundStmt 0x55887c3251e0 <line:423:8, line:427:5>
| | | | `-IfStmt 0x55887c3251c0 <line:424:7, line:426:7>
| | | |   |-CallExpr 0x55887c324c08 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | | |   | `-ImplicitCastExpr 0x55887c324bf0 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | |   |   `-DeclRefExpr 0x55887c324bd0 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | | |   `-CompoundStmt 0x55887c3251a8 <col:33, line:426:7>
| | | |     `-DoStmt 0x55887c325188 <line:373:5, line:377:19>
| | | |       |-CompoundStmt 0x55887c325078 <line:373:8, line:377:5>
| | | |       | `-IfStmt 0x55887c325058 <line:374:7, line:376:7>
| | | |       |   |-CallExpr 0x55887c324cc0 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | | |       |   | |-ImplicitCastExpr 0x55887c324ca8 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | | |       |   | | `-DeclRefExpr 0x55887c324c28 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | | |       |   | `-ImplicitCastExpr 0x55887c324ce8 <line:38:25, line:34:25> 'UINTN':'unsigned long long' <IntegralCast>
| | | |       |   |   `-BinaryOperator 0x55887c324c88 <line:38:25, line:34:25> 'int' '|'
| | | |       |   |     |-IntegerLiteral 0x55887c324c48 <line:38:25> 'int' 64
| | | |       |   |     `-IntegerLiteral 0x55887c324c68 <line:34:25> 'int' 4
| | | |       |   `-CompoundStmt 0x55887c325040 <line:374:48, line:376:7>
| | | |       |     `-CallExpr 0x55887c324fb8 <line:375:9, col:46> 'void'
| | | |       |       |-ImplicitCastExpr 0x55887c324fa0 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | | |       |       | `-DeclRefExpr 0x55887c324d00 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | | |       |       |-ImplicitCastExpr 0x55887c324ff8 <line:38:25, line:34:25> 'UINTN':'unsigned long long' <IntegralCast>
| | | |       |       | `-BinaryOperator 0x55887c324d60 <line:38:25, line:34:25> 'int' '|'
| | | |       |       |   |-IntegerLiteral 0x55887c324d20 <line:38:25> 'int' 64
| | | |       |       |   `-IntegerLiteral 0x55887c324d40 <line:34:25> 'int' 4
| | | |       |       |-ImplicitCastExpr 0x55887c325028 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:444:36> 'const CHAR8 *' <NoOp>
| | | |       |       | `-ImplicitCastExpr 0x55887c325010 <col:36> 'char *' <ArrayToPointerDecay>
| | | |       |       |   `-StringLiteral 0x55887c324db8 <col:36> 'char[46]' lvalue "Loading DXE CORE at 0x%11p EntryPoint=0x%11p\n"
| | | |       |       |-CStyleCastExpr 0x55887c324e88 <col:86, col:101> 'void *' <IntegralToPointer>
| | | |       |       | `-CStyleCastExpr 0x55887c324e48 <col:94, col:101> 'UINTN':'unsigned long long' <NoOp>
| | | |       |       |   `-ImplicitCastExpr 0x55887c324e30 <col:101> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | | |       |       |     `-DeclRefExpr 0x55887c324e00 <col:101> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' lvalue Var 0x55887c199f38 'DxeCoreAddress' 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | | |       |       `-CStyleCastExpr 0x55887c324f78 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:313:48, col:79> 'void *' <IntegralToPointer>
| | | |       |         `-CStyleCastExpr 0x55887c324f38 <col:56, col:79> 'UINTN':'unsigned long long' <NoOp>
| | | |       |           `-ImplicitCastExpr 0x55887c324f20 <col:63, col:79> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | | |       |             `-ParenExpr 0x55887c324f00 <col:63, col:79> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' lvalue
| | | |       |               `-DeclRefExpr 0x55887c324eb0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:444:139> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' lvalue Var 0x55887c19a058 'DxeCoreEntryPoint' 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | | |       `-ParenExpr 0x55887c325168 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | | |         `-CStyleCastExpr 0x55887c325140 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | |           `-ParenExpr 0x55887c325120 <col:26, col:31> 'int'
| | | |             `-BinaryOperator 0x55887c3250d0 <col:27, col:30> 'int' '=='
| | | |               |-IntegerLiteral 0x55887c325090 <col:27> 'int' 0
| | | |               `-IntegerLiteral 0x55887c3250b0 <col:30> 'int' 1
| | | `-ParenExpr 0x55887c3252d0 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | |   `-CStyleCastExpr 0x55887c3252a8 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |     `-ParenExpr 0x55887c325288 <col:26, col:31> 'int'
| | |       `-BinaryOperator 0x55887c325238 <col:27, col:30> 'int' '=='
| | |         |-IntegerLiteral 0x55887c3251f8 <col:27> 'int' 0
| | |         `-IntegerLiteral 0x55887c325218 <col:30> 'int' 1
| | |-CallExpr 0x55887c3253e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:450:3, col:47> 'void'
| | | |-ImplicitCastExpr 0x55887c3253c8 <col:3> 'void (*)(EFI_PHYSICAL_ADDRESS, EFI_PEI_HOB_POINTERS)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x55887c325310 <col:3> 'void (EFI_PHYSICAL_ADDRESS, EFI_PEI_HOB_POINTERS)' Function 0x55887c2fe318 'HandOffToDxeCore' 'void (EFI_PHYSICAL_ADDRESS, EFI_PEI_HOB_POINTERS)'
| | | |-ImplicitCastExpr 0x55887c325410 <col:21> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' <LValueToRValue>
| | | | `-DeclRefExpr 0x55887c325330 <col:21> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' lvalue Var 0x55887c19a058 'DxeCoreEntryPoint' 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
| | | `-ImplicitCastExpr 0x55887c325428 <col:40> 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS' <LValueToRValue>
| | |   `-DeclRefExpr 0x55887c325350 <col:40> 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS' lvalue ParmVar 0x55887c199cb0 'HobList' 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS'
| | |-DoStmt 0x55887c3261b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:397:5, line:404:19>
| | | |-CompoundStmt 0x55887c3260a0 <line:397:8, line:404:5>
| | | | `-IfStmt 0x55887c326080 <line:398:7, line:403:7>
| | | |   |-CallExpr 0x55887c325478 <line:398:11, col:31> 'BOOLEAN':'unsigned char'
| | | |   | `-ImplicitCastExpr 0x55887c325460 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | | |   |   `-DeclRefExpr 0x55887c325440 <col:11> 'BOOLEAN (void)' Function 0x55887c18d4f0 'DebugAssertEnabled' 'BOOLEAN (void)'
| | | |   `-CompoundStmt 0x55887c326068 <col:34, line:403:7>
| | | |     `-IfStmt 0x55887c326048 <line:399:9, line:402:9>
| | | |       |-UnaryOperator 0x55887c325e70 <line:399:13, col:25> 'int' prefix '!' cannot overflow
| | | |       | `-ParenExpr 0x55887c325590 <col:14, col:25> 'BOOLEAN':'unsigned char'
| | | |       |   `-ParenExpr 0x55887c325570 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | | |       |     `-CStyleCastExpr 0x55887c325548 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | | |       |       `-ParenExpr 0x55887c325528 <col:26, col:31> 'int'
| | | |       |         `-BinaryOperator 0x55887c3254d8 <col:27, col:30> 'int' '=='
| | | |       |           |-IntegerLiteral 0x55887c325498 <col:27> 'int' 0
| | | |       |           `-IntegerLiteral 0x55887c3254b8 <col:30> 'int' 1
| | | |       `-CompoundStmt 0x55887c326028 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:399:28, line:402:9>
| | | |         |-CallExpr 0x55887c325f70 <line:352:30, col:113> 'void'
| | | |         | |-ImplicitCastExpr 0x55887c325f58 <col:30> 'void (*)(const CHAR8 *, UINTN, const CHAR8 *)' <FunctionToPointerDecay>
| | | |         | | `-DeclRefExpr 0x55887c325e88 <col:30> 'void (const CHAR8 *, UINTN, const CHAR8 *)' Function 0x55887c18d0f8 'DebugAssert' 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| | | |         | |-ImplicitCastExpr 0x55887c325fc0 <<scratch space>:39:1> 'const CHAR8 *' <NoOp>
| | | |         | | `-ImplicitCastExpr 0x55887c325fa8 <col:1> 'char *' <ArrayToPointerDecay>
| | | |         | |   `-StringLiteral 0x55887c325ea8 <col:1> 'char[10]' lvalue "DxeLoad.c"
| | | |         | |-ImplicitCastExpr 0x55887c325fd8 <line:40:1> 'UINTN':'unsigned long long' <IntegralCast>
| | | |         | | `-IntegerLiteral 0x55887c325ed0 <col:1> 'int' 455
| | | |         | `-ImplicitCastExpr 0x55887c326008 <line:41:1> 'const CHAR8 *' <NoOp>
| | | |         |   `-ImplicitCastExpr 0x55887c325ff0 <col:1> 'char *' <ArrayToPointerDecay>
| | | |         |     `-StringLiteral 0x55887c325f28 <col:1> 'char[18]' lvalue "((BOOLEAN)(0==1))"
| | | |         `-NullStmt 0x55887c326020 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:401:34>
| | | `-ParenExpr 0x55887c326190 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |   `-CStyleCastExpr 0x55887c326168 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |     `-ParenExpr 0x55887c326148 <col:26, col:31> 'int'
| | |       `-BinaryOperator 0x55887c3260f8 <col:27, col:30> 'int' '=='
| | |         |-IntegerLiteral 0x55887c3260b8 <col:27> 'int' 0
| | |         `-IntegerLiteral 0x55887c3260d8 <col:30> 'int' 1
| | |-CallExpr 0x55887c326208 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:456:3, col:16> 'void'
| | | `-ImplicitCastExpr 0x55887c3261f0 <col:3> 'void (*)(void)' <FunctionToPointerDecay>
| | |   `-DeclRefExpr 0x55887c3261d0 <col:3> 'void (void)' Function 0x55887c13deb0 'CpuDeadLoop' 'void (void)'
| | `-ReturnStmt 0x55887c326358 <line:458:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75>
| |   `-ParenExpr 0x55887c326338 <col:35, col:75> 'RETURN_STATUS':'unsigned long long'
| |     `-CStyleCastExpr 0x55887c326310 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| |       `-ParenExpr 0x55887c3262f0 <col:51, col:74> 'unsigned long long'
| |         `-BinaryOperator 0x55887c3262a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| |           |-IntegerLiteral 0x55887c326228 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| |           `-ImplicitCastExpr 0x55887c326288 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| |             `-ParenExpr 0x55887c326268 <col:62, col:73> 'int'
| |               `-IntegerLiteral 0x55887c326248 <line:1114:48> 'int' 9
| `-FullComment 0x55887c487c50 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:232:1, line:242:84>
|   |-ParagraphComment 0x55887c487760 <line:232:1, col:33>
|   | `-TextComment 0x55887c487730 <col:1, col:33> Text="   Main entry point to last PEIM."
|   |-ParagraphComment 0x55887c4877d0 <line:234:1, line:235:12>
|   | |-TextComment 0x55887c487780 <line:234:1, col:82> Text="   This function finds DXE Core in the firmware volume and transfer the control to"
|   | `-TextComment 0x55887c4877a0 <line:235:1, col:12> Text="   DXE core."
|   |-ParagraphComment 0x55887c487820 <line:237:1, col:3>
|   | `-TextComment 0x55887c4877f0 <col:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c487840 <col:4, line:238:3> [in] implicitly Param="This" ParamIndex=0
|   | `-ParagraphComment 0x55887c4878f0 <line:237:15, line:238:3>
|   |   |-TextComment 0x55887c4878a0 <line:237:15, col:52> Text="          Entry point for DXE IPL PPI."
|   |   `-TextComment 0x55887c4878c0 <line:238:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c487910 <col:4, line:239:3> [in] implicitly Param="PeiServices" ParamIndex=1
|   | `-ParagraphComment 0x55887c4879c0 <line:238:22, line:239:3>
|   |   |-TextComment 0x55887c487970 <line:238:22, col:73> Text="   General purpose services available to every PEIM."
|   |   `-TextComment 0x55887c487990 <line:239:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c4879e0 <col:4, col:52> [in] implicitly Param="HobList" ParamIndex=2
|   | `-ParagraphComment 0x55887c487a70 <col:18, col:52>
|   |   `-TextComment 0x55887c487a40 <col:18, col:52> Text="       Address to the Pei HOB list."
|   |-ParagraphComment 0x55887c487ac0 <line:241:1, col:3>
|   | `-TextComment 0x55887c487a90 <col:1, col:3> Text="   "
|   |-BlockCommandComment 0x55887c487ae0 <col:4, line:242:3> Name="return"
|   | `-ParagraphComment 0x55887c487b60 <line:241:11, line:242:3>
|   |   |-TextComment 0x55887c487b10 <line:241:11, col:69> Text=" EFI_SUCCESS              DXE core was successfully loaded."
|   |   `-TextComment 0x55887c487b30 <line:242:1, col:3> Text="   "
|   `-BlockCommandComment 0x55887c487b80 <col:4, col:84> Name="return"
|     `-ParagraphComment 0x55887c487be0 <col:11, col:84>
|       `-TextComment 0x55887c487bb0 <col:11, col:84> Text=" EFI_OUT_OF_RESOURCES     There are not enough resources to load DXE core."
|-FunctionDecl 0x55887c326540 prev 0x55887c2f74c8 <line:468:1, line:512:1> line:469:1 used DxeIplFindDxeCore 'EFI_PEI_FILE_HANDLE (void)'
| |-CompoundStmt 0x55887c328878 <line:472:1, line:512:1>
| | |-DeclStmt 0x55887c326658 <line:473:3, col:30>
| | | `-VarDecl 0x55887c3265f0 <col:3, col:24> col:24 used Status 'EFI_STATUS':'unsigned long long'
| | |-DeclStmt 0x55887c3266e8 <line:474:3, col:32>
| | | `-VarDecl 0x55887c326680 <col:3, col:24> col:24 used Instance 'UINTN':'unsigned long long'
| | |-DeclStmt 0x55887c326778 <line:475:3, col:36>
| | | `-VarDecl 0x55887c326710 <col:3, col:24> col:24 used VolumeHandle 'EFI_PEI_FV_HANDLE':'void *'
| | |-DeclStmt 0x55887c326808 <line:476:3, col:34>
| | | `-VarDecl 0x55887c3267a0 <col:3, col:24> col:24 used FileHandle 'EFI_PEI_FILE_HANDLE':'void *'
| | |-BinaryOperator 0x55887c326878 <line:478:3, col:14> 'UINTN':'unsigned long long' '='
| | | |-DeclRefExpr 0x55887c326820 <col:3> 'UINTN':'unsigned long long' lvalue Var 0x55887c326680 'Instance' 'UINTN':'unsigned long long'
| | | `-ImplicitCastExpr 0x55887c326860 <col:14> 'UINTN':'unsigned long long' <IntegralCast>
| | |   `-IntegerLiteral 0x55887c326840 <col:14> 'int' 0
| | `-WhileStmt 0x55887c328830 <line:479:3, line:511:3>
| |   |-ParenExpr 0x55887c326970 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:301:15, col:31> 'BOOLEAN':'unsigned char'
| |   | `-CStyleCastExpr 0x55887c326948 <col:16, col:30> 'BOOLEAN':'unsigned char' <IntegralCast>
| |   |   `-ParenExpr 0x55887c326928 <col:25, col:30> 'int'
| |   |     `-BinaryOperator 0x55887c3268d8 <col:26, col:29> 'int' '=='
| |   |       |-IntegerLiteral 0x55887c326898 <col:26> 'int' 1
| |   |       `-IntegerLiteral 0x55887c3268b8 <col:29> 'int' 1
| |   `-CompoundStmt 0x55887c3287e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:479:16, line:511:3>
| |     |-BinaryOperator 0x55887c326ae8 <line:483:5, col:67> 'EFI_STATUS':'unsigned long long' '='
| |     | |-DeclRefExpr 0x55887c326990 <col:5> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c3265f0 'Status' 'EFI_STATUS':'unsigned long long'
| |     | `-CallExpr 0x55887c326aa0 <col:14, col:67> 'EFI_STATUS':'unsigned long long'
| |     |   |-ImplicitCastExpr 0x55887c326a88 <col:14> 'EFI_STATUS (*)(UINTN, EFI_PEI_FV_HANDLE *)' <FunctionToPointerDecay>
| |     |   | `-DeclRefExpr 0x55887c3269b0 <col:14> 'EFI_STATUS (UINTN, EFI_PEI_FV_HANDLE *)' Function 0x55887c1a0bb8 'PeiServicesFfsFindNextVolume' 'EFI_STATUS (UINTN, EFI_PEI_FV_HANDLE *)'
| |     |   |-ImplicitCastExpr 0x55887c326ad0 <col:44> 'UINTN':'unsigned long long' <LValueToRValue>
| |     |   | `-DeclRefExpr 0x55887c3269d0 <col:44> 'UINTN':'unsigned long long' lvalue Var 0x55887c326680 'Instance' 'UINTN':'unsigned long long'
| |     |   `-UnaryOperator 0x55887c326a10 <col:54, col:55> 'EFI_PEI_FV_HANDLE *' prefix '&' cannot overflow
| |     |     `-DeclRefExpr 0x55887c3269f0 <col:55> 'EFI_PEI_FV_HANDLE':'void *' lvalue Var 0x55887c326710 'VolumeHandle' 'EFI_PEI_FV_HANDLE':'void *'
| |     |-IfStmt 0x55887c3278f8 <line:488:5, line:490:5>
| |     | |-ParenExpr 0x55887c326c68 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| |     | | `-BinaryOperator 0x55887c326c48 <col:36, col:74> 'int' '<'
| |     | |   |-ParenExpr 0x55887c326bf0 <col:36, col:70> 'INTN':'long long'
| |     | |   | `-CStyleCastExpr 0x55887c326bc8 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| |     | |   |   `-CStyleCastExpr 0x55887c326b90 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| |     | |   |     `-ImplicitCastExpr 0x55887c326b78 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| |     | |   |       `-ParenExpr 0x55887c326b58 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| |     | |   |         `-DeclRefExpr 0x55887c326b08 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:488:20> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c3265f0 'Status' 'EFI_STATUS':'unsigned long long'
| |     | |   `-ImplicitCastExpr 0x55887c326c30 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| |     | |     `-IntegerLiteral 0x55887c326c10 <col:74> 'int' 0
| |     | `-CompoundStmt 0x55887c3278e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:488:29, line:490:5>
| |     |   `-ConditionalOperator 0x55887c3278b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| |     |     |-ParenExpr 0x55887c326df8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:3, col:92> 'int'
| |     |     | `-BinaryOperator 0x55887c326dd8 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' '&&'
| |     |     |   |-ImplicitCastExpr 0x55887c326dc0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:4, col:30> 'int' <IntegralCast>
| |     |     |   | `-CallExpr 0x55887c326cc0 <col:4, col:30> 'BOOLEAN':'unsigned char'
| |     |     |   |   `-ImplicitCastExpr 0x55887c326ca8 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| |     |     |   |     `-DeclRefExpr 0x55887c326c88 <col:4> 'BOOLEAN (void)' Function 0x55887c2c82e0 'ReportProgressCodeEnabled' 'BOOLEAN (void)'
| |     |     |   `-BinaryOperator 0x55887c326da0 <col:35, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' '=='
| |     |     |     |-ParenExpr 0x55887c326d60 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:35, col:70> 'int'
| |     |     |     | `-BinaryOperator 0x55887c326d40 <col:36, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'int' '&'
| |     |     |     |   |-ParenExpr 0x55887c326d00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:367:36, col:41> 'int'
| |     |     |     |   | `-IntegerLiteral 0x55887c326ce0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' 1
| |     |     |     |   `-IntegerLiteral 0x55887c326d20 <line:32:40> 'int' 255
| |     |     |     `-IntegerLiteral 0x55887c326d80 <line:43:28> 'int' 1
| |     |     |-CallExpr 0x55887c326fb0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:368:3, col:30> 'EFI_STATUS':'unsigned long long'
| |     |     | |-ImplicitCastExpr 0x55887c326f98 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| |     |     | | `-DeclRefExpr 0x55887c326e18 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| |     |     | |-ImplicitCastExpr 0x55887c326fe0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'EFI_STATUS_CODE_TYPE':'unsigned int' <IntegralCast>
| |     |     | | `-IntegerLiteral 0x55887c326e38 <col:28> 'int' 1
| |     |     | `-ImplicitCastExpr 0x55887c326ff8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:489:46, col:103> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| |     |     |   `-ParenExpr 0x55887c326f78 <col:46, col:103> 'int'
| |     |     |     `-BinaryOperator 0x55887c326f58 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:1004:85> 'int' '|'
| |     |     |       |-ParenExpr 0x55887c326eb8 <line:702:43, col:69> 'int'
| |     |     |       | `-BinaryOperator 0x55887c326e98 <line:127:29, line:702:59> 'int' '|'
| |     |     |       |   |-IntegerLiteral 0x55887c326e58 <line:127:29> 'int' 50331648
| |     |     |       |   `-IntegerLiteral 0x55887c326e78 <line:702:59> 'int' 196608
| |     |     |       `-ParenExpr 0x55887c326f38 <line:1004:50, col:85> 'int'
| |     |     |         `-BinaryOperator 0x55887c326f18 <line:105:32, line:1004:75> 'int' '|'
| |     |     |           |-IntegerLiteral 0x55887c326ed8 <line:105:32> 'int' 4096
| |     |     |           `-IntegerLiteral 0x55887c326ef8 <line:1004:75> 'int' 0
| |     |     `-ConditionalOperator 0x55887c327880 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| |     |       |-ParenExpr 0x55887c327180 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:3, col:86> 'int'
| |     |       | `-BinaryOperator 0x55887c327160 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28> 'int' '&&'
| |     |       |   |-ImplicitCastExpr 0x55887c327148 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:4, col:27> 'int' <IntegralCast>
| |     |       |   | `-CallExpr 0x55887c327048 <col:4, col:27> 'BOOLEAN':'unsigned char'
| |     |       |   |   `-ImplicitCastExpr 0x55887c327030 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| |     |       |   |     `-DeclRefExpr 0x55887c327010 <col:4> 'BOOLEAN (void)' Function 0x55887c2c8440 'ReportErrorCodeEnabled' 'BOOLEAN (void)'
| |     |       |   `-BinaryOperator 0x55887c327128 <col:32, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:44:28> 'int' '=='
| |     |       |     |-ParenExpr 0x55887c3270e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:32, col:67> 'int'
| |     |       |     | `-BinaryOperator 0x55887c3270c8 <col:33, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'int' '&'
| |     |       |     |   |-ParenExpr 0x55887c327088 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:369:33, col:38> 'int'
| |     |       |     |   | `-IntegerLiteral 0x55887c327068 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' 1
| |     |       |     |   `-IntegerLiteral 0x55887c3270a8 <line:32:40> 'int' 255
| |     |       |     `-IntegerLiteral 0x55887c327108 <line:44:28> 'int' 2
| |     |       |-CallExpr 0x55887c327338 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:370:3, col:30> 'EFI_STATUS':'unsigned long long'
| |     |       | |-ImplicitCastExpr 0x55887c327320 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| |     |       | | `-DeclRefExpr 0x55887c3271a0 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| |     |       | |-ImplicitCastExpr 0x55887c327368 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'EFI_STATUS_CODE_TYPE':'unsigned int' <IntegralCast>
| |     |       | | `-IntegerLiteral 0x55887c3271c0 <col:28> 'int' 1
| |     |       | `-ImplicitCastExpr 0x55887c327380 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:489:46, col:103> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| |     |       |   `-ParenExpr 0x55887c327300 <col:46, col:103> 'int'
| |     |       |     `-BinaryOperator 0x55887c3272e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:1004:85> 'int' '|'
| |     |       |       |-ParenExpr 0x55887c327240 <line:702:43, col:69> 'int'
| |     |       |       | `-BinaryOperator 0x55887c327220 <line:127:29, line:702:59> 'int' '|'
| |     |       |       |   |-IntegerLiteral 0x55887c3271e0 <line:127:29> 'int' 50331648
| |     |       |       |   `-IntegerLiteral 0x55887c327200 <line:702:59> 'int' 196608
| |     |       |       `-ParenExpr 0x55887c3272c0 <line:1004:50, col:85> 'int'
| |     |       |         `-BinaryOperator 0x55887c3272a0 <line:105:32, line:1004:75> 'int' '|'
| |     |       |           |-IntegerLiteral 0x55887c327260 <line:105:32> 'int' 4096
| |     |       |           `-IntegerLiteral 0x55887c327280 <line:1004:75> 'int' 0
| |     |       `-ConditionalOperator 0x55887c327850 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75> 'unsigned long long'
| |     |         |-ParenExpr 0x55887c327508 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:3, col:86> 'int'
| |     |         | `-BinaryOperator 0x55887c3274e8 <col:4, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:45:28> 'int' '&&'
| |     |         |   |-ImplicitCastExpr 0x55887c3274d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:4, col:27> 'int' <IntegralCast>
| |     |         |   | `-CallExpr 0x55887c3273d0 <col:4, col:27> 'BOOLEAN':'unsigned char'
| |     |         |   |   `-ImplicitCastExpr 0x55887c3273b8 <col:4> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| |     |         |   |     `-DeclRefExpr 0x55887c327398 <col:4> 'BOOLEAN (void)' Function 0x55887c2c85a0 'ReportDebugCodeEnabled' 'BOOLEAN (void)'
| |     |         |   `-BinaryOperator 0x55887c3274b0 <col:32, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:45:28> 'int' '=='
| |     |         |     |-ParenExpr 0x55887c327470 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:32, col:67> 'int'
| |     |         |     | `-BinaryOperator 0x55887c327450 <col:33, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:32:40> 'int' '&'
| |     |         |     |   |-ParenExpr 0x55887c327410 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:371:33, col:38> 'int'
| |     |         |     |   | `-IntegerLiteral 0x55887c3273f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'int' 1
| |     |         |     |   `-IntegerLiteral 0x55887c327430 <line:32:40> 'int' 255
| |     |         |     `-IntegerLiteral 0x55887c327490 <line:45:28> 'int' 3
| |     |         |-CallExpr 0x55887c3276c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/ReportStatusCodeLib.h:372:3, col:30> 'EFI_STATUS':'unsigned long long'
| |     |         | |-ImplicitCastExpr 0x55887c3276a8 <col:3> 'EFI_STATUS (*)(EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' <FunctionToPointerDecay>
| |     |         | | `-DeclRefExpr 0x55887c327528 <col:3> 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)' Function 0x55887c2c74e8 'ReportStatusCode' 'EFI_STATUS (EFI_STATUS_CODE_TYPE, EFI_STATUS_CODE_VALUE)'
| |     |         | |-ImplicitCastExpr 0x55887c3276f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:43:28> 'EFI_STATUS_CODE_TYPE':'unsigned int' <IntegralCast>
| |     |         | | `-IntegerLiteral 0x55887c327548 <col:28> 'int' 1
| |     |         | `-ImplicitCastExpr 0x55887c327708 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:489:46, col:103> 'EFI_STATUS_CODE_VALUE':'unsigned int' <IntegralCast>
| |     |         |   `-ParenExpr 0x55887c327688 <col:46, col:103> 'int'
| |     |         |     `-BinaryOperator 0x55887c327668 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiStatusCode.h:702:43, line:1004:85> 'int' '|'
| |     |         |       |-ParenExpr 0x55887c3275c8 <line:702:43, col:69> 'int'
| |     |         |       | `-BinaryOperator 0x55887c3275a8 <line:127:29, line:702:59> 'int' '|'
| |     |         |       |   |-IntegerLiteral 0x55887c327568 <line:127:29> 'int' 50331648
| |     |         |       |   `-IntegerLiteral 0x55887c327588 <line:702:59> 'int' 196608
| |     |         |       `-ParenExpr 0x55887c327648 <line:1004:50, col:85> 'int'
| |     |         |         `-BinaryOperator 0x55887c327628 <line:105:32, line:1004:75> 'int' '|'
| |     |         |           |-IntegerLiteral 0x55887c3275e8 <line:105:32> 'int' 4096
| |     |         |           `-IntegerLiteral 0x55887c327608 <line:1004:75> 'int' 0
| |     |         `-ParenExpr 0x55887c327830 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:35, col:75> 'RETURN_STATUS':'unsigned long long'
| |     |           `-CStyleCastExpr 0x55887c327808 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| |     |             `-ParenExpr 0x55887c3277e8 <col:51, col:74> 'unsigned long long'
| |     |               `-BinaryOperator 0x55887c327798 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| |     |                 |-IntegerLiteral 0x55887c327720 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| |     |                 `-ImplicitCastExpr 0x55887c327780 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| |     |                   `-ParenExpr 0x55887c327760 <col:62, col:73> 'int'
| |     |                     `-IntegerLiteral 0x55887c327740 <line:1081:43> 'int' 3
| |     |-DoStmt 0x55887c328300 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:446:5, line:453:19>
| |     | |-CompoundStmt 0x55887c3281f0 <line:446:8, line:453:5>
| |     | | `-IfStmt 0x55887c3281d0 <line:447:7, line:452:7>
| |     | |   |-CallExpr 0x55887c327950 <line:447:11, col:31> 'BOOLEAN':'unsigned char'
| |     | |   | `-ImplicitCastExpr 0x55887c327938 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| |     | |   |   `-DeclRefExpr 0x55887c327918 <col:11> 'BOOLEAN (void)' Function 0x55887c18d4f0 'DebugAssertEnabled' 'BOOLEAN (void)'
| |     | |   `-CompoundStmt 0x55887c3281b8 <col:34, line:452:7>
| |     | |     `-IfStmt 0x55887c328198 <line:448:9, line:451:9>
| |     | |       |-ParenExpr 0x55887c327ad0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| |     | |       | `-BinaryOperator 0x55887c327ab0 <col:36, col:74> 'int' '<'
| |     | |       |   |-ParenExpr 0x55887c327a58 <col:36, col:70> 'INTN':'long long'
| |     | |       |   | `-CStyleCastExpr 0x55887c327a30 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| |     | |       |   |   `-CStyleCastExpr 0x55887c3279f8 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| |     | |       |   |     `-ImplicitCastExpr 0x55887c3279e0 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| |     | |       |   |       `-ParenExpr 0x55887c3279c0 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| |     | |       |   |         `-DeclRefExpr 0x55887c327970 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:492:23> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c3265f0 'Status' 'EFI_STATUS':'unsigned long long'
| |     | |       |   `-ImplicitCastExpr 0x55887c327a98 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| |     | |       |     `-IntegerLiteral 0x55887c327a78 <col:74> 'int' 0
| |     | |       `-CompoundStmt 0x55887c328178 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:448:42, line:451:9>
| |     | |         |-DoStmt 0x55887c327fe8 <line:423:5, line:427:19>
| |     | |         | |-CompoundStmt 0x55887c327ed8 <line:423:8, line:427:5>
| |     | |         | | `-IfStmt 0x55887c327eb8 <line:424:7, line:426:7>
| |     | |         | |   |-CallExpr 0x55887c327b28 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| |     | |         | |   | `-ImplicitCastExpr 0x55887c327b10 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| |     | |         | |   |   `-DeclRefExpr 0x55887c327af0 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| |     | |         | |   `-CompoundStmt 0x55887c327ea0 <col:33, line:426:7>
| |     | |         | |     `-DoStmt 0x55887c327e80 <line:373:5, line:377:19>
| |     | |         | |       |-CompoundStmt 0x55887c327d60 <line:373:8, line:377:5>
| |     | |         | |       | `-IfStmt 0x55887c327d40 <line:374:7, line:376:7>
| |     | |         | |       |   |-CallExpr 0x55887c327ba0 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| |     | |         | |       |   | |-ImplicitCastExpr 0x55887c327b88 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| |     | |         | |       |   | | `-DeclRefExpr 0x55887c327b48 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| |     | |         | |       |   | `-ImplicitCastExpr 0x55887c327bc8 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| |     | |         | |       |   |   `-IntegerLiteral 0x55887c327b68 <col:22> 'unsigned int' 2147483648
| |     | |         | |       |   `-CompoundStmt 0x55887c327d28 <line:374:48, line:376:7>
| |     | |         | |       |     `-CallExpr 0x55887c327c90 <line:375:9, col:46> 'void'
| |     | |         | |       |       |-ImplicitCastExpr 0x55887c327c78 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| |     | |         | |       |       | `-DeclRefExpr 0x55887c327be0 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| |     | |         | |       |       |-ImplicitCastExpr 0x55887c327cc8 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| |     | |         | |       |       | `-IntegerLiteral 0x55887c327c00 <col:22> 'unsigned int' 2147483648
| |     | |         | |       |       |-ImplicitCastExpr 0x55887c327cf8 <line:449:32> 'const CHAR8 *' <NoOp>
| |     | |         | |       |       | `-ImplicitCastExpr 0x55887c327ce0 <col:32> 'char *' <ArrayToPointerDecay>
| |     | |         | |       |       |   `-StringLiteral 0x55887c327c20 <col:32> 'char[33]' lvalue "\nASSERT_EFI_ERROR (Status = %r)\n"
| |     | |         | |       |       `-ImplicitCastExpr 0x55887c327d10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:492:23> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| |     | |         | |       |         `-DeclRefExpr 0x55887c327c58 <col:23> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c3265f0 'Status' 'EFI_STATUS':'unsigned long long'
| |     | |         | |       `-ParenExpr 0x55887c327e50 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| |     | |         | |         `-CStyleCastExpr 0x55887c327e28 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| |     | |         | |           `-ParenExpr 0x55887c327e08 <col:26, col:31> 'int'
| |     | |         | |             `-BinaryOperator 0x55887c327db8 <col:27, col:30> 'int' '=='
| |     | |         | |               |-IntegerLiteral 0x55887c327d78 <col:27> 'int' 0
| |     | |         | |               `-IntegerLiteral 0x55887c327d98 <col:30> 'int' 1
| |     | |         | `-ParenExpr 0x55887c327fc8 <col:16, col:32> 'BOOLEAN':'unsigned char'
| |     | |         |   `-CStyleCastExpr 0x55887c327fa0 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| |     | |         |     `-ParenExpr 0x55887c327f80 <col:26, col:31> 'int'
| |     | |         |       `-BinaryOperator 0x55887c327f30 <col:27, col:30> 'int' '=='
| |     | |         |         |-IntegerLiteral 0x55887c327ef0 <col:27> 'int' 0
| |     | |         |         `-IntegerLiteral 0x55887c327f10 <col:30> 'int' 1
| |     | |         `-CallExpr 0x55887c3280c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:352:30, col:113> 'void'
| |     | |           |-ImplicitCastExpr 0x55887c3280b0 <col:30> 'void (*)(const CHAR8 *, UINTN, const CHAR8 *)' <FunctionToPointerDecay>
| |     | |           | `-DeclRefExpr 0x55887c328008 <col:30> 'void (const CHAR8 *, UINTN, const CHAR8 *)' Function 0x55887c18d0f8 'DebugAssert' 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| |     | |           |-ImplicitCastExpr 0x55887c328118 <<scratch space>:42:1> 'const CHAR8 *' <NoOp>
| |     | |           | `-ImplicitCastExpr 0x55887c328100 <col:1> 'char *' <ArrayToPointerDecay>
| |     | |           |   `-StringLiteral 0x55887c328028 <col:1> 'char[10]' lvalue "DxeLoad.c"
| |     | |           |-ImplicitCastExpr 0x55887c328130 <line:43:1> 'UINTN':'unsigned long long' <IntegralCast>
| |     | |           | `-IntegerLiteral 0x55887c328050 <col:1> 'int' 492
| |     | |           `-ImplicitCastExpr 0x55887c328160 <line:44:1> 'const CHAR8 *' <NoOp>
| |     | |             `-ImplicitCastExpr 0x55887c328148 <col:1> 'char *' <ArrayToPointerDecay>
| |     | |               `-StringLiteral 0x55887c328070 <col:1> 'char[39]' lvalue "!(((INTN)(RETURN_STATUS)(Status)) < 0)"
| |     | `-ParenExpr 0x55887c3282e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| |     |   `-CStyleCastExpr 0x55887c3282b8 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| |     |     `-ParenExpr 0x55887c328298 <col:26, col:31> 'int'
| |     |       `-BinaryOperator 0x55887c328248 <col:27, col:30> 'int' '=='
| |     |         |-IntegerLiteral 0x55887c328208 <col:27> 'int' 0
| |     |         `-IntegerLiteral 0x55887c328228 <col:30> 'int' 1
| |     |-BinaryOperator 0x55887c3283c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:497:5, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:26> 'EFI_PEI_FILE_HANDLE':'void *' '='
| |     | |-DeclRefExpr 0x55887c328320 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:497:5> 'EFI_PEI_FILE_HANDLE':'void *' lvalue Var 0x55887c3267a0 'FileHandle' 'EFI_PEI_FILE_HANDLE':'void *'
| |     | `-ParenExpr 0x55887c3283a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'void *'
| |     |   `-CStyleCastExpr 0x55887c328378 <col:16, col:25> 'void *' <NullToPointer>
| |     |     `-IntegerLiteral 0x55887c328340 <col:25> 'int' 0
| |     |-BinaryOperator 0x55887c328578 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:498:5, col:97> 'EFI_STATUS':'unsigned long long' '='
| |     | |-DeclRefExpr 0x55887c3283e0 <col:5> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c3265f0 'Status' 'EFI_STATUS':'unsigned long long'
| |     | `-CallExpr 0x55887c328510 <col:18, col:97> 'EFI_STATUS':'unsigned long long'
| |     |   |-ImplicitCastExpr 0x55887c3284f8 <col:18> 'EFI_STATUS (*)(EFI_FV_FILETYPE, EFI_PEI_FV_HANDLE, EFI_PEI_FILE_HANDLE *)' <FunctionToPointerDecay>
| |     |   | `-DeclRefExpr 0x55887c328400 <col:18> 'EFI_STATUS (EFI_FV_FILETYPE, EFI_PEI_FV_HANDLE, EFI_PEI_FILE_HANDLE *)' Function 0x55887c1a0eb8 'PeiServicesFfsFindNextFile' 'EFI_STATUS (EFI_FV_FILETYPE, EFI_PEI_FV_HANDLE, EFI_PEI_FILE_HANDLE *)'
| |     |   |-ImplicitCastExpr 0x55887c328548 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:62:48> 'EFI_FV_FILETYPE':'unsigned char' <IntegralCast>
| |     |   | `-IntegerLiteral 0x55887c328420 <col:48> 'int' 5
| |     |   |-ImplicitCastExpr 0x55887c328560 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:498:72> 'EFI_PEI_FV_HANDLE':'void *' <LValueToRValue>
| |     |   | `-DeclRefExpr 0x55887c328440 <col:72> 'EFI_PEI_FV_HANDLE':'void *' lvalue Var 0x55887c326710 'VolumeHandle' 'EFI_PEI_FV_HANDLE':'void *'
| |     |   `-UnaryOperator 0x55887c328480 <col:86, col:87> 'EFI_PEI_FILE_HANDLE *' prefix '&' cannot overflow
| |     |     `-DeclRefExpr 0x55887c328460 <col:87> 'EFI_PEI_FILE_HANDLE':'void *' lvalue Var 0x55887c3267a0 'FileHandle' 'EFI_PEI_FILE_HANDLE':'void *'
| |     |-IfStmt 0x55887c328790 <line:499:5, line:505:5>
| |     | |-UnaryOperator 0x55887c328718 <line:499:9, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:75> 'int' prefix '!' cannot overflow
| |     | | `-ParenExpr 0x55887c3286f8 <col:35, col:75> 'int'
| |     | |   `-BinaryOperator 0x55887c3286d8 <col:36, col:74> 'int' '<'
| |     | |     |-ParenExpr 0x55887c328680 <col:36, col:70> 'INTN':'long long'
| |     | |     | `-CStyleCastExpr 0x55887c328658 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| |     | |     |   `-CStyleCastExpr 0x55887c328620 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| |     | |     |     `-ImplicitCastExpr 0x55887c328608 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| |     | |     |       `-ParenExpr 0x55887c3285e8 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| |     | |     |         `-DeclRefExpr 0x55887c328598 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:499:21> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c3265f0 'Status' 'EFI_STATUS':'unsigned long long'
| |     | |     `-ImplicitCastExpr 0x55887c3286c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| |     | |       `-IntegerLiteral 0x55887c3286a0 <col:74> 'int' 0
| |     | `-CompoundStmt 0x55887c328778 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:499:30, line:505:5>
| |     |   `-ReturnStmt 0x55887c328768 <line:504:7, col:14>
| |     |     `-ImplicitCastExpr 0x55887c328750 <col:14> 'EFI_PEI_FILE_HANDLE':'void *' <LValueToRValue>
| |     |       `-DeclRefExpr 0x55887c328730 <col:14> 'EFI_PEI_FILE_HANDLE':'void *' lvalue Var 0x55887c3267a0 'FileHandle' 'EFI_PEI_FILE_HANDLE':'void *'
| |     `-UnaryOperator 0x55887c3287d0 <line:510:5, col:13> 'UINTN':'unsigned long long' postfix '++'
| |       `-DeclRefExpr 0x55887c3287b0 <col:5> 'UINTN':'unsigned long long' lvalue Var 0x55887c326680 'Instance' 'UINTN':'unsigned long long'
| `-FullComment 0x55887c487e20 <line:462:1, line:465:49>
|   |-ParagraphComment 0x55887c487d10 <line:462:1, line:463:34>
|   | |-TextComment 0x55887c487cc0 <line:462:1, col:63> Text="   Searches DxeCore in all firmware Volumes and loads the first"
|   | `-TextComment 0x55887c487ce0 <line:463:1, col:34> Text="   instance that contains DxeCore."
|   |-ParagraphComment 0x55887c487d60 <line:465:1, col:3>
|   | `-TextComment 0x55887c487d30 <col:1, col:3> Text="   "
|   `-BlockCommandComment 0x55887c487d80 <col:4, col:49> Name="return"
|     `-ParagraphComment 0x55887c487de0 <col:11, col:49>
|       `-TextComment 0x55887c487db0 <col:11, col:49> Text=" FileHandle of DxeCore to load DxeCore."
|-FunctionDecl 0x55887c328b68 prev 0x55887c2fe8a8 <line:568:1, line:643:1> line:570:1 used CustomGuidedSectionExtract 'EFI_STATUS (const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI *, const void *, void **, UINTN *, UINT32 *)'
| |-ParmVarDecl 0x55887c3288c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:571:53> col:53 This 'const EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI *'
| |-ParmVarDecl 0x55887c328948 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:572:53> col:53 used InputSection 'const void *'
| |-ParmVarDecl 0x55887c3289c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:573:54> col:54 used OutputBuffer 'void **'
| |-ParmVarDecl 0x55887c328a40 <line:574:13, col:53> col:53 used OutputSize 'UINTN *'
| |-ParmVarDecl 0x55887c328ab8 <line:575:13, col:53> col:53 used AuthenticationStatus 'UINT32 *'
| |-CompoundStmt 0x55887c32bb28 <line:577:1, line:643:1>
| | |-DeclStmt 0x55887c328ca8 <line:578:3, col:21>
| | | `-VarDecl 0x55887c328c40 <col:3, col:15> col:15 used Status 'EFI_STATUS':'unsigned long long'
| | |-DeclStmt 0x55887c328d38 <line:579:3, col:29>
| | | `-VarDecl 0x55887c328cd0 <col:3, col:16> col:16 used ScratchBuffer 'UINT8 *'
| | |-DeclStmt 0x55887c328dc8 <line:580:3, col:32>
| | | `-VarDecl 0x55887c328d60 <col:3, col:15> col:15 used ScratchBufferSize 'UINT32':'unsigned int'
| | |-DeclStmt 0x55887c328e58 <line:581:3, col:31>
| | | `-VarDecl 0x55887c328df0 <col:3, col:15> col:15 used OutputBufferSize 'UINT32':'unsigned int'
| | |-DeclStmt 0x55887c328ee8 <line:582:3, col:31>
| | | `-VarDecl 0x55887c328e80 <col:3, col:15> col:15 used SectionAttribute 'UINT16':'unsigned short'
| | |-BinaryOperator 0x55887c328fb8 <line:587:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:26> 'UINT8 *' '='
| | | |-DeclRefExpr 0x55887c328f00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:587:3> 'UINT8 *' lvalue Var 0x55887c328cd0 'ScratchBuffer' 'UINT8 *'
| | | `-ImplicitCastExpr 0x55887c328fa0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'UINT8 *' <NullToPointer>
| | |   `-ParenExpr 0x55887c328f80 <col:15, col:26> 'void *'
| | |     `-CStyleCastExpr 0x55887c328f58 <col:16, col:25> 'void *' <NullToPointer>
| | |       `-IntegerLiteral 0x55887c328f20 <col:25> 'int' 0
| | |-BinaryOperator 0x55887c329178 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:592:3, line:597:14> 'EFI_STATUS':'unsigned long long' '='
| | | |-DeclRefExpr 0x55887c328fd8 <line:592:3> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c328c40 'Status' 'EFI_STATUS':'unsigned long long'
| | | `-CallExpr 0x55887c329120 <col:12, line:597:14> 'RETURN_STATUS':'unsigned long long'
| | |   |-ImplicitCastExpr 0x55887c329108 <line:592:12> 'RETURN_STATUS (*)(const void *, UINT32 *, UINT32 *, UINT16 *)' <FunctionToPointerDecay>
| | |   | `-DeclRefExpr 0x55887c328ff8 <col:12> 'RETURN_STATUS (const void *, UINT32 *, UINT32 *, UINT16 *)' Function 0x55887c2d4900 'ExtractGuidedSectionGetInfo' 'RETURN_STATUS (const void *, UINT32 *, UINT32 *, UINT16 *)'
| | |   |-ImplicitCastExpr 0x55887c329160 <line:593:14> 'const void *' <LValueToRValue>
| | |   | `-DeclRefExpr 0x55887c329018 <col:14> 'const void *' lvalue ParmVar 0x55887c328948 'InputSection' 'const void *'
| | |   |-UnaryOperator 0x55887c329058 <line:594:14, col:15> 'UINT32 *' prefix '&' cannot overflow
| | |   | `-DeclRefExpr 0x55887c329038 <col:15> 'UINT32':'unsigned int' lvalue Var 0x55887c328df0 'OutputBufferSize' 'UINT32':'unsigned int'
| | |   |-UnaryOperator 0x55887c329090 <line:595:14, col:15> 'UINT32 *' prefix '&' cannot overflow
| | |   | `-DeclRefExpr 0x55887c329070 <col:15> 'UINT32':'unsigned int' lvalue Var 0x55887c328d60 'ScratchBufferSize' 'UINT32':'unsigned int'
| | |   `-UnaryOperator 0x55887c3290c8 <line:596:14, col:15> 'UINT16 *' prefix '&' cannot overflow
| | |     `-DeclRefExpr 0x55887c3290a8 <col:15> 'UINT16':'unsigned short' lvalue Var 0x55887c328e80 'SectionAttribute' 'UINT16':'unsigned short'
| | |-IfStmt 0x55887c3298d0 <line:599:3, line:602:3>
| | | |-ParenExpr 0x55887c3292f8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | | | `-BinaryOperator 0x55887c3292d8 <col:36, col:74> 'int' '<'
| | | |   |-ParenExpr 0x55887c329280 <col:36, col:70> 'INTN':'long long'
| | | |   | `-CStyleCastExpr 0x55887c329258 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | | |   |   `-CStyleCastExpr 0x55887c329220 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | | |   |     `-ImplicitCastExpr 0x55887c329208 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | | |   |       `-ParenExpr 0x55887c3291e8 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | | |   |         `-DeclRefExpr 0x55887c329198 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:599:18> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c328c40 'Status' 'EFI_STATUS':'unsigned long long'
| | | |   `-ImplicitCastExpr 0x55887c3292c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | | |     `-IntegerLiteral 0x55887c3292a0 <col:74> 'int' 0
| | | `-CompoundStmt 0x55887c3298b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:599:27, line:602:3>
| | |   |-DoStmt 0x55887c329848 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:423:5, line:427:19>
| | |   | |-CompoundStmt 0x55887c329738 <line:423:8, line:427:5>
| | |   | | `-IfStmt 0x55887c329718 <line:424:7, line:426:7>
| | |   | |   |-CallExpr 0x55887c329350 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | |   | |   | `-ImplicitCastExpr 0x55887c329338 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | |   |   `-DeclRefExpr 0x55887c329318 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | |   | |   `-CompoundStmt 0x55887c329700 <col:33, line:426:7>
| | |   | |     `-DoStmt 0x55887c3296e0 <line:373:5, line:377:19>
| | |   | |       |-CompoundStmt 0x55887c3295d0 <line:373:8, line:377:5>
| | |   | |       | `-IfStmt 0x55887c3295b0 <line:374:7, line:376:7>
| | |   | |       |   |-CallExpr 0x55887c3293c8 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | |   | |       |   | |-ImplicitCastExpr 0x55887c3293b0 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | |   | |       |   | | `-DeclRefExpr 0x55887c329370 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | |   | |       |   | `-ImplicitCastExpr 0x55887c3293f0 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | |   | |       |   |   `-IntegerLiteral 0x55887c329390 <col:22> 'unsigned int' 2147483648
| | |   | |       |   `-CompoundStmt 0x55887c329598 <line:374:48, line:376:7>
| | |   | |       |     `-CallExpr 0x55887c329500 <line:375:9, col:46> 'void'
| | |   | |       |       |-ImplicitCastExpr 0x55887c3294e8 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | |   | |       |       | `-DeclRefExpr 0x55887c329408 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | |   | |       |       |-ImplicitCastExpr 0x55887c329538 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | |   | |       |       | `-IntegerLiteral 0x55887c329428 <col:22> 'unsigned int' 2147483648
| | |   | |       |       |-ImplicitCastExpr 0x55887c329568 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:600:26> 'const CHAR8 *' <NoOp>
| | |   | |       |       | `-ImplicitCastExpr 0x55887c329550 <col:26> 'char *' <ArrayToPointerDecay>
| | |   | |       |       |   `-StringLiteral 0x55887c329488 <col:26> 'char[41]' lvalue "GetInfo from guided section Failed - %r\n"
| | |   | |       |       `-ImplicitCastExpr 0x55887c329580 <col:71> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | |   | |       |         `-DeclRefExpr 0x55887c3294c8 <col:71> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c328c40 'Status' 'EFI_STATUS':'unsigned long long'
| | |   | |       `-ParenExpr 0x55887c3296c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |   | |         `-CStyleCastExpr 0x55887c329698 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   | |           `-ParenExpr 0x55887c329678 <col:26, col:31> 'int'
| | |   | |             `-BinaryOperator 0x55887c329628 <col:27, col:30> 'int' '=='
| | |   | |               |-IntegerLiteral 0x55887c3295e8 <col:27> 'int' 0
| | |   | |               `-IntegerLiteral 0x55887c329608 <col:30> 'int' 1
| | |   | `-ParenExpr 0x55887c329828 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | |   |   `-CStyleCastExpr 0x55887c329800 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   |     `-ParenExpr 0x55887c3297e0 <col:26, col:31> 'int'
| | |   |       `-BinaryOperator 0x55887c329790 <col:27, col:30> 'int' '=='
| | |   |         |-IntegerLiteral 0x55887c329750 <col:27> 'int' 0
| | |   |         `-IntegerLiteral 0x55887c329770 <col:30> 'int' 1
| | |   `-ReturnStmt 0x55887c3298a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:601:5, col:12>
| | |     `-ImplicitCastExpr 0x55887c329888 <col:12> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | |       `-DeclRefExpr 0x55887c329868 <col:12> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c328c40 'Status' 'EFI_STATUS':'unsigned long long'
| | |-IfStmt 0x55887c32a270 <line:604:3, line:612:3>
| | | |-BinaryOperator 0x55887c329960 <line:604:7, col:28> 'int' '!='
| | | | |-ImplicitCastExpr 0x55887c329930 <col:7> 'UINT32':'unsigned int' <LValueToRValue>
| | | | | `-DeclRefExpr 0x55887c3298f0 <col:7> 'UINT32':'unsigned int' lvalue Var 0x55887c328d60 'ScratchBufferSize' 'UINT32':'unsigned int'
| | | | `-ImplicitCastExpr 0x55887c329948 <col:28> 'unsigned int' <IntegralCast>
| | | |   `-IntegerLiteral 0x55887c329910 <col:28> 'int' 0
| | | `-CompoundStmt 0x55887c32a250 <col:31, line:612:3>
| | |   |-BinaryOperator 0x55887c329ca0 <line:608:5, col:73> 'UINT8 *' '='
| | |   | |-DeclRefExpr 0x55887c329980 <col:5> 'UINT8 *' lvalue Var 0x55887c328cd0 'ScratchBuffer' 'UINT8 *'
| | |   | `-ImplicitCastExpr 0x55887c329c88 <col:21, col:73> 'UINT8 *' <BitCast>
| | |   |   `-CallExpr 0x55887c329c48 <col:21, col:73> 'void *'
| | |   |     |-ImplicitCastExpr 0x55887c329c30 <col:21> 'void *(*)(UINTN)' <FunctionToPointerDecay>
| | |   |     | `-DeclRefExpr 0x55887c3299a0 <col:21> 'void *(UINTN)' Function 0x55887c2dd5c0 'AllocatePages' 'void *(UINTN)'
| | |   |     `-ImplicitCastExpr 0x55887c329c70 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiBaseType.h:200:34, col:98> 'UINTN':'unsigned long long' <IntegralCast>
| | |   |       `-ParenExpr 0x55887c329c10 <col:34, col:98> 'unsigned int'
| | |   |         `-BinaryOperator 0x55887c329bf0 <col:35, col:97> 'unsigned int' '+'
| | |   |           |-ParenExpr 0x55887c329a58 <col:35, col:60> 'UINT32':'unsigned int'
| | |   |           | `-BinaryOperator 0x55887c329a38 <col:36, line:187:25> 'UINT32':'unsigned int' '>>'
| | |   |           |   |-ImplicitCastExpr 0x55887c329a20 <line:200:36, col:41> 'UINT32':'unsigned int' <LValueToRValue>
| | |   |           |   | `-ParenExpr 0x55887c3299e0 <col:36, col:41> 'UINT32':'unsigned int' lvalue
| | |   |           |   |   `-DeclRefExpr 0x55887c3299c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:608:55> 'UINT32':'unsigned int' lvalue Var 0x55887c328d60 'ScratchBufferSize' 'UINT32':'unsigned int'
| | |   |           |   `-IntegerLiteral 0x55887c329a00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiBaseType.h:187:25> 'int' 12
| | |   |           `-ImplicitCastExpr 0x55887c329bd8 <line:200:64, col:97> 'unsigned int' <IntegralCast>
| | |   |             `-ParenExpr 0x55887c329bb8 <col:64, col:97> 'int'
| | |   |               `-ConditionalOperator 0x55887c329b88 <col:65, col:96> 'int'
| | |   |                 |-ParenExpr 0x55887c329b28 <col:65, col:88> 'unsigned int'
| | |   |                 | `-BinaryOperator 0x55887c329b08 <col:66, line:186:25> 'unsigned int' '&'
| | |   |                 |   |-ImplicitCastExpr 0x55887c329ad8 <line:200:66, col:71> 'UINT32':'unsigned int' <LValueToRValue>
| | |   |                 |   | `-ParenExpr 0x55887c329a98 <col:66, col:71> 'UINT32':'unsigned int' lvalue
| | |   |                 |   |   `-DeclRefExpr 0x55887c329a78 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:608:55> 'UINT32':'unsigned int' lvalue Var 0x55887c328d60 'ScratchBufferSize' 'UINT32':'unsigned int'
| | |   |                 |   `-ImplicitCastExpr 0x55887c329af0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiBaseType.h:186:25> 'unsigned int' <IntegralCast>
| | |   |                 |     `-IntegerLiteral 0x55887c329ab8 <col:25> 'int' 4095
| | |   |                 |-IntegerLiteral 0x55887c329b48 <line:200:92> 'int' 1
| | |   |                 `-IntegerLiteral 0x55887c329b68 <col:96> 'int' 0
| | |   `-IfStmt 0x55887c32a230 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:609:5, line:611:5>
| | |     |-BinaryOperator 0x55887c329d90 <line:609:9, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:26> 'int' '=='
| | |     | |-ImplicitCastExpr 0x55887c329d60 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:609:9> 'UINT8 *' <LValueToRValue>
| | |     | | `-DeclRefExpr 0x55887c329cc0 <col:9> 'UINT8 *' lvalue Var 0x55887c328cd0 'ScratchBuffer' 'UINT8 *'
| | |     | `-ImplicitCastExpr 0x55887c329d78 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'UINT8 *' <BitCast>
| | |     |   `-ParenExpr 0x55887c329d40 <col:15, col:26> 'void *'
| | |     |     `-CStyleCastExpr 0x55887c329d18 <col:16, col:25> 'void *' <NullToPointer>
| | |     |       `-IntegerLiteral 0x55887c329ce0 <col:25> 'int' 0
| | |     `-CompoundStmt 0x55887c32a218 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:609:32, line:611:5>
| | |       `-ReturnStmt 0x55887c32a208 <line:610:7, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75>
| | |         `-ParenExpr 0x55887c32a1e8 <col:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | |           `-CStyleCastExpr 0x55887c32a1c0 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |             `-ParenExpr 0x55887c32a1a0 <col:51, col:74> 'unsigned long long'
| | |               `-BinaryOperator 0x55887c329e28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | |                 |-IntegerLiteral 0x55887c329db0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | |                 `-ImplicitCastExpr 0x55887c329e10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | |                   `-ParenExpr 0x55887c329df0 <col:62, col:73> 'int'
| | |                     `-IntegerLiteral 0x55887c329dd0 <line:1114:48> 'int' 9
| | |-IfStmt 0x55887c32b018 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:614:3, line:624:3>
| | | |-BinaryOperator 0x55887c32a450 <line:614:7, col:98> 'int' '&&'
| | | | |-ParenExpr 0x55887c32a380 <col:7, col:72> 'int'
| | | | | `-BinaryOperator 0x55887c32a360 <col:8, col:71> 'int' '!='
| | | | |   |-ParenExpr 0x55887c32a320 <col:8, col:66> 'int'
| | | | |   | `-BinaryOperator 0x55887c32a300 <col:9, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:356:49> 'int' '&'
| | | | |   |   |-ImplicitCastExpr 0x55887c32a2e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:614:9> 'int' <IntegralCast>
| | | | |   |   | `-ImplicitCastExpr 0x55887c32a2d0 <col:9> 'UINT16':'unsigned short' <LValueToRValue>
| | | | |   |   |   `-DeclRefExpr 0x55887c32a290 <col:9> 'UINT16':'unsigned short' lvalue Var 0x55887c328e80 'SectionAttribute' 'UINT16':'unsigned short'
| | | | |   |   `-IntegerLiteral 0x55887c32a2b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:356:49> 'int' 1
| | | | |   `-IntegerLiteral 0x55887c32a340 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:614:71> 'int' 0
| | | | `-ParenExpr 0x55887c32a430 <col:77, col:98> 'int'
| | | |   `-BinaryOperator 0x55887c32a410 <col:78, col:97> 'int' '>'
| | | |     |-ImplicitCastExpr 0x55887c32a3e0 <col:78> 'UINT32':'unsigned int' <LValueToRValue>
| | | |     | `-DeclRefExpr 0x55887c32a3a0 <col:78> 'UINT32':'unsigned int' lvalue Var 0x55887c328df0 'OutputBufferSize' 'UINT32':'unsigned int'
| | | |     `-ImplicitCastExpr 0x55887c32a3f8 <col:97> 'unsigned int' <IntegralCast>
| | | |       `-IntegerLiteral 0x55887c32a3c0 <col:97> 'int' 0
| | | `-CompoundStmt 0x55887c32aff0 <col:101, line:624:3>
| | |   |-BinaryOperator 0x55887c32a7a8 <line:618:5, col:72> 'void *' '='
| | |   | |-UnaryOperator 0x55887c32a4a8 <col:5, col:6> 'void *' lvalue prefix '*' cannot overflow
| | |   | | `-ImplicitCastExpr 0x55887c32a490 <col:6> 'void **' <LValueToRValue>
| | |   | |   `-DeclRefExpr 0x55887c32a470 <col:6> 'void **' lvalue ParmVar 0x55887c3289c8 'OutputBuffer' 'void **'
| | |   | `-CallExpr 0x55887c32a768 <col:21, col:72> 'void *'
| | |   |   |-ImplicitCastExpr 0x55887c32a750 <col:21> 'void *(*)(UINTN)' <FunctionToPointerDecay>
| | |   |   | `-DeclRefExpr 0x55887c32a4c0 <col:21> 'void *(UINTN)' Function 0x55887c2dd5c0 'AllocatePages' 'void *(UINTN)'
| | |   |   `-ImplicitCastExpr 0x55887c32a790 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiBaseType.h:200:34, col:98> 'UINTN':'unsigned long long' <IntegralCast>
| | |   |     `-ParenExpr 0x55887c32a730 <col:34, col:98> 'unsigned int'
| | |   |       `-BinaryOperator 0x55887c32a710 <col:35, col:97> 'unsigned int' '+'
| | |   |         |-ParenExpr 0x55887c32a578 <col:35, col:60> 'UINT32':'unsigned int'
| | |   |         | `-BinaryOperator 0x55887c32a558 <col:36, line:187:25> 'UINT32':'unsigned int' '>>'
| | |   |         |   |-ImplicitCastExpr 0x55887c32a540 <line:200:36, col:41> 'UINT32':'unsigned int' <LValueToRValue>
| | |   |         |   | `-ParenExpr 0x55887c32a500 <col:36, col:41> 'UINT32':'unsigned int' lvalue
| | |   |         |   |   `-DeclRefExpr 0x55887c32a4e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:618:55> 'UINT32':'unsigned int' lvalue Var 0x55887c328df0 'OutputBufferSize' 'UINT32':'unsigned int'
| | |   |         |   `-IntegerLiteral 0x55887c32a520 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiBaseType.h:187:25> 'int' 12
| | |   |         `-ImplicitCastExpr 0x55887c32a6f8 <line:200:64, col:97> 'unsigned int' <IntegralCast>
| | |   |           `-ParenExpr 0x55887c32a6d8 <col:64, col:97> 'int'
| | |   |             `-ConditionalOperator 0x55887c32a6a8 <col:65, col:96> 'int'
| | |   |               |-ParenExpr 0x55887c32a648 <col:65, col:88> 'unsigned int'
| | |   |               | `-BinaryOperator 0x55887c32a628 <col:66, line:186:25> 'unsigned int' '&'
| | |   |               |   |-ImplicitCastExpr 0x55887c32a5f8 <line:200:66, col:71> 'UINT32':'unsigned int' <LValueToRValue>
| | |   |               |   | `-ParenExpr 0x55887c32a5b8 <col:66, col:71> 'UINT32':'unsigned int' lvalue
| | |   |               |   |   `-DeclRefExpr 0x55887c32a598 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:618:55> 'UINT32':'unsigned int' lvalue Var 0x55887c328df0 'OutputBufferSize' 'UINT32':'unsigned int'
| | |   |               |   `-ImplicitCastExpr 0x55887c32a610 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiBaseType.h:186:25> 'unsigned int' <IntegralCast>
| | |   |               |     `-IntegerLiteral 0x55887c32a5d8 <col:25> 'int' 4095
| | |   |               |-IntegerLiteral 0x55887c32a668 <line:200:92> 'int' 1
| | |   |               `-IntegerLiteral 0x55887c32a688 <col:96> 'int' 0
| | |   |-IfStmt 0x55887c32aa28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:619:5, line:621:5>
| | |   | |-BinaryOperator 0x55887c32a8b0 <line:619:9, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:26> 'int' '=='
| | |   | | |-ImplicitCastExpr 0x55887c32a898 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:619:9, col:10> 'void *' <LValueToRValue>
| | |   | | | `-UnaryOperator 0x55887c32a800 <col:9, col:10> 'void *' lvalue prefix '*' cannot overflow
| | |   | | |   `-ImplicitCastExpr 0x55887c32a7e8 <col:10> 'void **' <LValueToRValue>
| | |   | | |     `-DeclRefExpr 0x55887c32a7c8 <col:10> 'void **' lvalue ParmVar 0x55887c3289c8 'OutputBuffer' 'void **'
| | |   | | `-ParenExpr 0x55887c32a878 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'void *'
| | |   | |   `-CStyleCastExpr 0x55887c32a850 <col:16, col:25> 'void *' <NullToPointer>
| | |   | |     `-IntegerLiteral 0x55887c32a818 <col:25> 'int' 0
| | |   | `-CompoundStmt 0x55887c32aa10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:619:32, line:621:5>
| | |   |   `-ReturnStmt 0x55887c32aa00 <line:620:7, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75>
| | |   |     `-ParenExpr 0x55887c32a9e0 <col:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | |   |       `-CStyleCastExpr 0x55887c32a9b8 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |   |         `-ParenExpr 0x55887c32a998 <col:51, col:74> 'unsigned long long'
| | |   |           `-BinaryOperator 0x55887c32a948 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | |   |             |-IntegerLiteral 0x55887c32a8d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | |   |             `-ImplicitCastExpr 0x55887c32a930 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | |   |               `-ParenExpr 0x55887c32a910 <col:62, col:73> 'int'
| | |   |                 `-IntegerLiteral 0x55887c32a8f0 <line:1114:48> 'int' 9
| | |   `-DoStmt 0x55887c32afd0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:423:5, line:427:19>
| | |     |-CompoundStmt 0x55887c32aec0 <line:423:8, line:427:5>
| | |     | `-IfStmt 0x55887c32aea0 <line:424:7, line:426:7>
| | |     |   |-CallExpr 0x55887c32aa80 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | |     |   | `-ImplicitCastExpr 0x55887c32aa68 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |     |   |   `-DeclRefExpr 0x55887c32aa48 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | |     |   `-CompoundStmt 0x55887c32ae88 <col:33, line:426:7>
| | |     |     `-DoStmt 0x55887c32ae68 <line:373:5, line:377:19>
| | |     |       |-CompoundStmt 0x55887c32ad58 <line:373:8, line:377:5>
| | |     |       | `-IfStmt 0x55887c32ad38 <line:374:7, line:376:7>
| | |     |       |   |-CallExpr 0x55887c32aaf8 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | |     |       |   | |-ImplicitCastExpr 0x55887c32aae0 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | |     |       |   | | `-DeclRefExpr 0x55887c32aaa0 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | |     |       |   | `-ImplicitCastExpr 0x55887c32ab20 <line:38:25> 'UINTN':'unsigned long long' <IntegralCast>
| | |     |       |   |   `-IntegerLiteral 0x55887c32aac0 <col:25> 'int' 64
| | |     |       |   `-CompoundStmt 0x55887c32ad20 <line:374:48, line:376:7>
| | |     |       |     `-CallExpr 0x55887c32ac68 <line:375:9, col:46> 'void'
| | |     |       |       |-ImplicitCastExpr 0x55887c32ac50 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | |     |       |       | `-DeclRefExpr 0x55887c32ab38 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | |     |       |       |-ImplicitCastExpr 0x55887c32aca8 <line:38:25> 'UINTN':'unsigned long long' <IntegralCast>
| | |     |       |       | `-IntegerLiteral 0x55887c32ab58 <col:25> 'int' 64
| | |     |       |       |-ImplicitCastExpr 0x55887c32acd8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:623:25> 'const CHAR8 *' <NoOp>
| | |     |       |       | `-ImplicitCastExpr 0x55887c32acc0 <col:25> 'char *' <ArrayToPointerDecay>
| | |     |       |       |   `-StringLiteral 0x55887c32ab78 <col:25> 'char[76]' lvalue "Customized Guided section Memory Size required is 0x%x and address is 0x%p\n"
| | |     |       |       |-ImplicitCastExpr 0x55887c32acf0 <col:105> 'UINT32':'unsigned int' <LValueToRValue>
| | |     |       |       | `-DeclRefExpr 0x55887c32abe0 <col:105> 'UINT32':'unsigned int' lvalue Var 0x55887c328df0 'OutputBufferSize' 'UINT32':'unsigned int'
| | |     |       |       `-ImplicitCastExpr 0x55887c32ad08 <col:123, col:124> 'void *' <LValueToRValue>
| | |     |       |         `-UnaryOperator 0x55887c32ac38 <col:123, col:124> 'void *' lvalue prefix '*' cannot overflow
| | |     |       |           `-ImplicitCastExpr 0x55887c32ac20 <col:124> 'void **' <LValueToRValue>
| | |     |       |             `-DeclRefExpr 0x55887c32ac00 <col:124> 'void **' lvalue ParmVar 0x55887c3289c8 'OutputBuffer' 'void **'
| | |     |       `-ParenExpr 0x55887c32ae48 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |     |         `-CStyleCastExpr 0x55887c32ae20 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |     |           `-ParenExpr 0x55887c32ae00 <col:26, col:31> 'int'
| | |     |             `-BinaryOperator 0x55887c32adb0 <col:27, col:30> 'int' '=='
| | |     |               |-IntegerLiteral 0x55887c32ad70 <col:27> 'int' 0
| | |     |               `-IntegerLiteral 0x55887c32ad90 <col:30> 'int' 1
| | |     `-ParenExpr 0x55887c32afb0 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | |       `-CStyleCastExpr 0x55887c32af88 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |         `-ParenExpr 0x55887c32af68 <col:26, col:31> 'int'
| | |           `-BinaryOperator 0x55887c32af18 <col:27, col:30> 'int' '=='
| | |             |-IntegerLiteral 0x55887c32aed8 <col:27> 'int' 0
| | |             `-IntegerLiteral 0x55887c32aef8 <col:30> 'int' 1
| | |-BinaryOperator 0x55887c32b1f8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:626:3, line:631:14> 'EFI_STATUS':'unsigned long long' '='
| | | |-DeclRefExpr 0x55887c32b038 <line:626:3> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c328c40 'Status' 'EFI_STATUS':'unsigned long long'
| | | `-CallExpr 0x55887c32b140 <col:12, line:631:14> 'RETURN_STATUS':'unsigned long long'
| | |   |-ImplicitCastExpr 0x55887c32b128 <line:626:12> 'RETURN_STATUS (*)(const void *, void **, void *, UINT32 *)' <FunctionToPointerDecay>
| | |   | `-DeclRefExpr 0x55887c32b058 <col:12> 'RETURN_STATUS (const void *, void **, void *, UINT32 *)' Function 0x55887c2d4c20 'ExtractGuidedSectionDecode' 'RETURN_STATUS (const void *, void **, void *, UINT32 *)'
| | |   |-ImplicitCastExpr 0x55887c32b180 <line:627:14> 'const void *' <LValueToRValue>
| | |   | `-DeclRefExpr 0x55887c32b078 <col:14> 'const void *' lvalue ParmVar 0x55887c328948 'InputSection' 'const void *'
| | |   |-ImplicitCastExpr 0x55887c32b198 <line:628:14> 'void **' <LValueToRValue>
| | |   | `-DeclRefExpr 0x55887c32b098 <col:14> 'void **' lvalue ParmVar 0x55887c3289c8 'OutputBuffer' 'void **'
| | |   |-ImplicitCastExpr 0x55887c32b1c8 <line:629:14> 'void *' <BitCast>
| | |   | `-ImplicitCastExpr 0x55887c32b1b0 <col:14> 'UINT8 *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x55887c32b0b8 <col:14> 'UINT8 *' lvalue Var 0x55887c328cd0 'ScratchBuffer' 'UINT8 *'
| | |   `-ImplicitCastExpr 0x55887c32b1e0 <line:630:14> 'UINT32 *' <LValueToRValue>
| | |     `-DeclRefExpr 0x55887c32b0d8 <col:14> 'UINT32 *' lvalue ParmVar 0x55887c328ab8 'AuthenticationStatus' 'UINT32 *'
| | |-IfStmt 0x55887c32b950 <line:632:3, line:638:3>
| | | |-ParenExpr 0x55887c32b378 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | | | `-BinaryOperator 0x55887c32b358 <col:36, col:74> 'int' '<'
| | | |   |-ParenExpr 0x55887c32b300 <col:36, col:70> 'INTN':'long long'
| | | |   | `-CStyleCastExpr 0x55887c32b2d8 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | | |   |   `-CStyleCastExpr 0x55887c32b2a0 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | | |   |     `-ImplicitCastExpr 0x55887c32b288 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | | |   |       `-ParenExpr 0x55887c32b268 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | | |   |         `-DeclRefExpr 0x55887c32b218 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:632:18> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c328c40 'Status' 'EFI_STATUS':'unsigned long long'
| | | |   `-ImplicitCastExpr 0x55887c32b340 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | | |     `-IntegerLiteral 0x55887c32b320 <col:74> 'int' 0
| | | `-CompoundStmt 0x55887c32b930 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:632:27, line:638:3>
| | |   |-DoStmt 0x55887c32b8c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:423:5, line:427:19>
| | |   | |-CompoundStmt 0x55887c32b7b8 <line:423:8, line:427:5>
| | |   | | `-IfStmt 0x55887c32b798 <line:424:7, line:426:7>
| | |   | |   |-CallExpr 0x55887c32b3d0 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | |   | |   | `-ImplicitCastExpr 0x55887c32b3b8 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | |   |   `-DeclRefExpr 0x55887c32b398 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | |   | |   `-CompoundStmt 0x55887c32b780 <col:33, line:426:7>
| | |   | |     `-DoStmt 0x55887c32b760 <line:373:5, line:377:19>
| | |   | |       |-CompoundStmt 0x55887c32b650 <line:373:8, line:377:5>
| | |   | |       | `-IfStmt 0x55887c32b630 <line:374:7, line:376:7>
| | |   | |       |   |-CallExpr 0x55887c32b448 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | |   | |       |   | |-ImplicitCastExpr 0x55887c32b430 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | |   | |       |   | | `-DeclRefExpr 0x55887c32b3f0 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | |   | |       |   | `-ImplicitCastExpr 0x55887c32b470 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | |   | |       |   |   `-IntegerLiteral 0x55887c32b410 <col:22> 'unsigned int' 2147483648
| | |   | |       |   `-CompoundStmt 0x55887c32b618 <line:374:48, line:376:7>
| | |   | |       |     `-CallExpr 0x55887c32b580 <line:375:9, col:46> 'void'
| | |   | |       |       |-ImplicitCastExpr 0x55887c32b568 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | |   | |       |       | `-DeclRefExpr 0x55887c32b488 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | |   | |       |       |-ImplicitCastExpr 0x55887c32b5b8 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | |   | |       |       | `-IntegerLiteral 0x55887c32b4a8 <col:22> 'unsigned int' 2147483648
| | |   | |       |       |-ImplicitCastExpr 0x55887c32b5e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:636:26> 'const CHAR8 *' <NoOp>
| | |   | |       |       | `-ImplicitCastExpr 0x55887c32b5d0 <col:26> 'char *' <ArrayToPointerDecay>
| | |   | |       |       |   `-StringLiteral 0x55887c32b508 <col:26> 'char[36]' lvalue "Extract guided section Failed - %r\n"
| | |   | |       |       `-ImplicitCastExpr 0x55887c32b600 <col:66> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | |   | |       |         `-DeclRefExpr 0x55887c32b548 <col:66> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c328c40 'Status' 'EFI_STATUS':'unsigned long long'
| | |   | |       `-ParenExpr 0x55887c32b740 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |   | |         `-CStyleCastExpr 0x55887c32b718 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   | |           `-ParenExpr 0x55887c32b6f8 <col:26, col:31> 'int'
| | |   | |             `-BinaryOperator 0x55887c32b6a8 <col:27, col:30> 'int' '=='
| | |   | |               |-IntegerLiteral 0x55887c32b668 <col:27> 'int' 0
| | |   | |               `-IntegerLiteral 0x55887c32b688 <col:30> 'int' 1
| | |   | `-ParenExpr 0x55887c32b8a8 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | |   |   `-CStyleCastExpr 0x55887c32b880 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   |     `-ParenExpr 0x55887c32b860 <col:26, col:31> 'int'
| | |   |       `-BinaryOperator 0x55887c32b810 <col:27, col:30> 'int' '=='
| | |   |         |-IntegerLiteral 0x55887c32b7d0 <col:27> 'int' 0
| | |   |         `-IntegerLiteral 0x55887c32b7f0 <col:30> 'int' 1
| | |   `-ReturnStmt 0x55887c32b920 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:637:5, col:12>
| | |     `-ImplicitCastExpr 0x55887c32b908 <col:12> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | |       `-DeclRefExpr 0x55887c32b8e8 <col:12> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c328c40 'Status' 'EFI_STATUS':'unsigned long long'
| | |-BinaryOperator 0x55887c32ba30 <line:640:3, col:24> 'UINTN':'unsigned long long' '='
| | | |-UnaryOperator 0x55887c32b9a8 <col:3, col:4> 'UINTN':'unsigned long long' lvalue prefix '*' cannot overflow
| | | | `-ImplicitCastExpr 0x55887c32b990 <col:4> 'UINTN *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x55887c32b970 <col:4> 'UINTN *' lvalue ParmVar 0x55887c328a40 'OutputSize' 'UINTN *'
| | | `-CStyleCastExpr 0x55887c32ba08 <col:17, col:24> 'UINTN':'unsigned long long' <IntegralCast>
| | |   `-ImplicitCastExpr 0x55887c32b9f0 <col:24> 'UINT32':'unsigned int' <LValueToRValue> part_of_explicit_cast
| | |     `-DeclRefExpr 0x55887c32b9c0 <col:24> 'UINT32':'unsigned int' lvalue Var 0x55887c328df0 'OutputBufferSize' 'UINT32':'unsigned int'
| | `-ReturnStmt 0x55887c32bae8 <line:642:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1066:42>
| |   `-CStyleCastExpr 0x55887c32bac0 <col:25, col:42> 'RETURN_STATUS':'unsigned long long' <IntegralCast>
| |     `-ParenExpr 0x55887c32baa0 <col:40, col:42> 'int'
| |       `-IntegerLiteral 0x55887c32ba50 <col:41> 'int' 0
| `-FullComment 0x55887c488c80 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:515:1, line:565:62>
|   |-ParagraphComment 0x55887c487fd0 <line:515:1, line:522:28>
|   | |-TextComment 0x55887c487e90 <line:515:1, col:63> Text="  The ExtractSection() function processes the input section and"
|   | |-TextComment 0x55887c487eb0 <line:516:1, col:65> Text="  returns a pointer to the section contents. If the section being"
|   | |-TextComment 0x55887c487ed0 <line:517:1, col:55> Text="  extracted does not require processing (if the section"
|   | |-TextComment 0x55887c487ef0 <line:518:1, col:40> Text="  GuidedSectionHeader.Attributes has the"
|   | |-TextComment 0x55887c487f10 <line:519:1, col:61> Text="  EFI_GUIDED_SECTION_PROCESSING_REQUIRED field cleared), then"
|   | |-TextComment 0x55887c487f30 <line:520:1, col:59> Text="  OutputBuffer is just updated to point to the start of the"
|   | |-TextComment 0x55887c487f50 <line:521:1, col:58> Text="  section's contents. Otherwise, *Buffer must be allocated"
|   | `-TextComment 0x55887c487f70 <line:522:1, col:28> Text="  from PEI permanent memory."
|   |-ParagraphComment 0x55887c488020 <line:524:1, col:2>
|   | `-TextComment 0x55887c487ff0 <col:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c488040 <col:3, line:530:2> [in] implicitly Param="This" ParamIndex=0
|   | `-ParagraphComment 0x55887c4881c0 <line:524:14, line:530:2>
|   |   |-TextComment 0x55887c4880a0 <line:524:14, col:45> Text="                   Indicates the"
|   |   |-TextComment 0x55887c4880c0 <line:525:1, col:79> Text="                                EFI_PEI_GUIDED_SECTION_EXTRACTION_PPI instance."
|   |   |-TextComment 0x55887c4880e0 <line:526:1, col:80> Text="                                Buffer containing the input GUIDed section to be"
|   |   |-TextComment 0x55887c488100 <line:527:1, col:71> Text="                                processed. OutputBuffer OutputBuffer is"
|   |   |-TextComment 0x55887c488120 <line:528:1, col:80> Text="                                allocated from PEI permanent memory and contains"
|   |   |-TextComment 0x55887c488140 <line:529:1, col:55> Text="                                the new section stream."
|   |   `-TextComment 0x55887c488160 <line:530:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4881e0 <col:3, line:532:2> [in] implicitly Param="InputSection" ParamIndex=1
|   | `-ParagraphComment 0x55887c4882c0 <line:530:22, line:532:2>
|   |   |-TextComment 0x55887c488240 <line:530:22, col:77> Text="           A pointer to the input buffer, which contains"
|   |   |-TextComment 0x55887c488260 <line:531:1, col:66> Text="                                the input section to be processed."
|   |   `-TextComment 0x55887c488280 <line:532:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4882e0 <col:3, line:534:2> [in] implicitly Param="OutputBuffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c4883c0 <line:532:22, line:534:2>
|   |   |-TextComment 0x55887c488340 <line:532:22, col:77> Text="           A pointer to a caller-allocated buffer, whose"
|   |   |-TextComment 0x55887c488360 <line:533:1, col:80> Text="                                size is specified by the contents of OutputSize."
|   |   `-TextComment 0x55887c488380 <line:534:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c4883e0 <col:3, line:539:2> [in] implicitly Param="OutputSize" ParamIndex=3
|   | `-ParagraphComment 0x55887c488530 <line:534:20, line:539:2>
|   |   |-TextComment 0x55887c488440 <line:534:20, col:63> Text="             A pointer to a caller-allocated"
|   |   |-TextComment 0x55887c488460 <line:535:1, col:72> Text="                                UINTN in which the size of *OutputBuffer"
|   |   |-TextComment 0x55887c488480 <line:536:1, col:69> Text="                                allocation is stored. If the function"
|   |   |-TextComment 0x55887c4884a0 <line:537:1, col:72> Text="                                returns anything other than EFI_SUCCESS,"
|   |   |-TextComment 0x55887c4884c0 <line:538:1, col:69> Text="                                the value of OutputSize is undefined."
|   |   `-TextComment 0x55887c4884e0 <line:539:1, col:2> Text="  "
|   |-ParamCommandComment 0x55887c488550 <col:3, line:554:42> [in] implicitly Param="AuthenticationStatus" ParamIndex=4
|   | `-ParagraphComment 0x55887c488840 <line:539:30, line:554:42>
|   |   |-TextComment 0x55887c4885c0 <line:539:30, col:63> Text="   A pointer to a caller-allocated"
|   |   |-TextComment 0x55887c4885e0 <line:540:1, col:57> Text="                                UINT32 that indicates the"
|   |   |-TextComment 0x55887c488600 <line:541:1, col:60> Text="                                authentication status of the"
|   |   |-TextComment 0x55887c488620 <line:542:1, col:59> Text="                                output buffer. If the input"
|   |   |-TextComment 0x55887c488640 <line:543:1, col:62> Text="                                section's GuidedSectionHeader."
|   |   |-TextComment 0x55887c488660 <line:544:1, col:56> Text="                                Attributes field has the"
|   |   |-TextComment 0x55887c488680 <line:545:1, col:68> Text="                                EFI_GUIDED_SECTION_AUTH_STATUS_VALID"
|   |   |-TextComment 0x55887c4886a0 <line:546:1, col:45> Text="                                bit as clear,"
|   |   |-TextComment 0x55887c4886c0 <line:547:1, col:64> Text="                                AuthenticationStatus must return"
|   |   |-TextComment 0x55887c4886e0 <line:548:1, col:60> Text="                                zero. These bits reflect the"
|   |   |-TextComment 0x55887c488700 <line:549:1, col:56> Text="                                status of the extraction"
|   |   |-TextComment 0x55887c488720 <line:550:1, col:58> Text="                                operation. If the function"
|   |   |-TextComment 0x55887c488740 <line:551:1, col:59> Text="                                returns anything other than"
|   |   |-TextComment 0x55887c488760 <line:552:1, col:57> Text="                                EFI_SUCCESS, the value of"
|   |   |-TextComment 0x55887c488780 <line:553:1, col:55> Text="                                AuthenticationStatus is"
|   |   `-TextComment 0x55887c4887a0 <line:554:1, col:42> Text="                                undefined."
|   |-ParagraphComment 0x55887c488890 <line:556:1, col:2>
|   | `-TextComment 0x55887c488860 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c4888b0 <col:3, line:558:63> Name="retval" Arg[0]="EFI_SUCCESS"
|   | `-ParagraphComment 0x55887c488980 <line:556:22, line:558:63>
|   |   |-TextComment 0x55887c488900 <line:556:22, col:52> Text="           The InputSection was"
|   |   |-TextComment 0x55887c488920 <line:557:1, col:62> Text="                                successfully processed and the"
|   |   `-TextComment 0x55887c488940 <line:558:1, col:63> Text="                                section contents were returned."
|   |-ParagraphComment 0x55887c4889d0 <line:560:1, col:2>
|   | `-TextComment 0x55887c4889a0 <col:1, col:2> Text="  "
|   |-BlockCommandComment 0x55887c4889f0 <col:3, line:561:65> Name="retval" Arg[0]="EFI_OUT_OF_RESOURCES"
|   | `-ParagraphComment 0x55887c488aa0 <line:560:31, line:561:65>
|   |   |-TextComment 0x55887c488a50 <line:560:31, col:59> Text="  The system has insufficient"
|   |   `-TextComment 0x55887c488a70 <line:561:1, col:65> Text="                                resources to process the request."
|   |-ParagraphComment 0x55887c488af0 <line:563:1, col:2>
|   | `-TextComment 0x55887c488ac0 <col:1, col:2> Text="  "
|   `-BlockCommandComment 0x55887c488b10 <col:3, line:565:62> Name="retval" Arg[0]="EFI_INVALID_PARAMETER"
|     `-ParagraphComment 0x55887c488bf0 <line:563:32, line:565:62>
|       |-TextComment 0x55887c488b70 <line:563:32, col:61> Text=" The GUID in InputSection does"
|       |-TextComment 0x55887c488b90 <line:564:1, col:62> Text="                                not match this instance of the"
|       `-TextComment 0x55887c488bb0 <line:565:1, col:62> Text="                                GUIDed Section Extraction PPI."
|-FunctionDecl 0x55887c32bdd0 prev 0x55887c2febc0 <line:665:1, line:795:1> line:667:1 used Decompress 'EFI_STATUS (const EFI_PEI_DECOMPRESS_PPI *, const EFI_COMPRESSION_SECTION *, void **, UINTN *)'
| |-ParmVarDecl 0x55887c32bbb8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:668:39> col:39 This 'const EFI_PEI_DECOMPRESS_PPI *'
| |-ParmVarDecl 0x55887c32bc30 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:259:16, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:669:39> col:39 used CompressionSection 'const EFI_COMPRESSION_SECTION *'
| |-ParmVarDecl 0x55887c32bcb0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:670:40> col:40 used OutputBuffer 'void **'
| |-ParmVarDecl 0x55887c32bd28 <line:671:13, col:39> col:39 used OutputSize 'UINTN *'
| |-CompoundStmt 0x55887c3168d8 <line:673:1, line:795:1>
| | |-DeclStmt 0x55887c32bf08 <line:674:3, col:21>
| | | `-VarDecl 0x55887c32bea0 <col:3, col:15> col:15 used Status 'EFI_STATUS':'unsigned long long'
| | |-DeclStmt 0x55887c32bf98 <line:675:3, col:25>
| | | `-VarDecl 0x55887c32bf30 <col:3, col:16> col:16 used DstBuffer 'UINT8 *'
| | |-DeclStmt 0x55887c32c028 <line:676:3, col:29>
| | | `-VarDecl 0x55887c32bfc0 <col:3, col:16> col:16 used ScratchBuffer 'UINT8 *'
| | |-DeclStmt 0x55887c32c0b8 <line:677:3, col:28>
| | | `-VarDecl 0x55887c32c050 <col:3, col:15> col:15 used DstBufferSize 'UINT32':'unsigned int'
| | |-DeclStmt 0x55887c32c148 <line:678:3, col:32>
| | | `-VarDecl 0x55887c32c0e0 <col:3, col:15> col:15 used ScratchBufferSize 'UINT32':'unsigned int'
| | |-DeclStmt 0x55887c30bf78 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:679:33>
| | | `-VarDecl 0x55887c30bf10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:679:16> col:16 used CompressionSource 'void *'
| | |-DeclStmt 0x55887c30c008 <line:680:3, col:36>
| | | `-VarDecl 0x55887c30bfa0 <col:3, col:15> col:15 used CompressionSourceSize 'UINT32':'unsigned int'
| | |-DeclStmt 0x55887c30c098 <line:681:3, col:33>
| | | `-VarDecl 0x55887c30c030 <col:3, col:15> col:15 used UncompressedLength 'UINT32':'unsigned int'
| | |-DeclStmt 0x55887c30c128 <line:682:3, col:30>
| | | `-VarDecl 0x55887c30c0c0 <col:3, col:15> col:15 used CompressionType 'UINT8':'unsigned char'
| | |-IfStmt 0x55887c30c840 <line:684:3, line:687:3>
| | | |-BinaryOperator 0x55887c30c228 <line:684:7, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:204:34> 'int' '!='
| | | | |-ImplicitCastExpr 0x55887c30c210 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:684:7, col:40> 'int' <IntegralCast>
| | | | | `-ImplicitCastExpr 0x55887c30c1f8 <col:7, col:40> 'EFI_SECTION_TYPE':'unsigned char' <LValueToRValue>
| | | | |   `-MemberExpr 0x55887c30c1a8 <col:7, col:40> 'const EFI_SECTION_TYPE':'const unsigned char' lvalue .Type 0x55887c090490
| | | | |     `-MemberExpr 0x55887c30c178 <col:7, col:27> 'const EFI_COMMON_SECTION_HEADER':'const EFI_COMMON_SECTION_HEADER' lvalue ->CommonHeader 0x55887c094968
| | | | |       `-ImplicitCastExpr 0x55887c30c160 <col:7> 'const EFI_COMPRESSION_SECTION *' <LValueToRValue>
| | | | |         `-DeclRefExpr 0x55887c30c140 <col:7> 'const EFI_COMPRESSION_SECTION *' lvalue ParmVar 0x55887c32bc30 'CompressionSection' 'const EFI_COMPRESSION_SECTION *'
| | | | `-IntegerLiteral 0x55887c30c1d8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:204:34> 'int' 1
| | | `-CompoundStmt 0x55887c30c820 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:684:73, line:687:3>
| | |   |-DoStmt 0x55887c30c6c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:397:5, line:404:19>
| | |   | |-CompoundStmt 0x55887c30c5b0 <line:397:8, line:404:5>
| | |   | | `-IfStmt 0x55887c30c590 <line:398:7, line:403:7>
| | |   | |   |-CallExpr 0x55887c30c280 <line:398:11, col:31> 'BOOLEAN':'unsigned char'
| | |   | |   | `-ImplicitCastExpr 0x55887c30c268 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   | |   |   `-DeclRefExpr 0x55887c30c248 <col:11> 'BOOLEAN (void)' Function 0x55887c18d4f0 'DebugAssertEnabled' 'BOOLEAN (void)'
| | |   | |   `-CompoundStmt 0x55887c30c578 <col:34, line:403:7>
| | |   | |     `-IfStmt 0x55887c30c558 <line:399:9, line:402:9>
| | |   | |       |-UnaryOperator 0x55887c30c3b8 <line:399:13, col:25> 'int' prefix '!' cannot overflow
| | |   | |       | `-ParenExpr 0x55887c30c398 <col:14, col:25> 'BOOLEAN':'unsigned char'
| | |   | |       |   `-ParenExpr 0x55887c30c378 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |   | |       |     `-CStyleCastExpr 0x55887c30c350 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   | |       |       `-ParenExpr 0x55887c30c330 <col:26, col:31> 'int'
| | |   | |       |         `-BinaryOperator 0x55887c30c2e0 <col:27, col:30> 'int' '=='
| | |   | |       |           |-IntegerLiteral 0x55887c30c2a0 <col:27> 'int' 0
| | |   | |       |           `-IntegerLiteral 0x55887c30c2c0 <col:30> 'int' 1
| | |   | |       `-CompoundStmt 0x55887c30c538 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:399:28, line:402:9>
| | |   | |         |-CallExpr 0x55887c30c480 <line:352:30, col:113> 'void'
| | |   | |         | |-ImplicitCastExpr 0x55887c30c468 <col:30> 'void (*)(const CHAR8 *, UINTN, const CHAR8 *)' <FunctionToPointerDecay>
| | |   | |         | | `-DeclRefExpr 0x55887c30c3d0 <col:30> 'void (const CHAR8 *, UINTN, const CHAR8 *)' Function 0x55887c18d0f8 'DebugAssert' 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| | |   | |         | |-ImplicitCastExpr 0x55887c30c4d0 <<scratch space>:45:1> 'const CHAR8 *' <NoOp>
| | |   | |         | | `-ImplicitCastExpr 0x55887c30c4b8 <col:1> 'char *' <ArrayToPointerDecay>
| | |   | |         | |   `-StringLiteral 0x55887c30c3f0 <col:1> 'char[10]' lvalue "DxeLoad.c"
| | |   | |         | |-ImplicitCastExpr 0x55887c30c4e8 <line:46:1> 'UINTN':'unsigned long long' <IntegralCast>
| | |   | |         | | `-IntegerLiteral 0x55887c30c418 <col:1> 'int' 685
| | |   | |         | `-ImplicitCastExpr 0x55887c30c518 <line:47:1> 'const CHAR8 *' <NoOp>
| | |   | |         |   `-ImplicitCastExpr 0x55887c30c500 <col:1> 'char *' <ArrayToPointerDecay>
| | |   | |         |     `-StringLiteral 0x55887c30c438 <col:1> 'char[18]' lvalue "((BOOLEAN)(0==1))"
| | |   | |         `-NullStmt 0x55887c30c530 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:401:34>
| | |   | `-ParenExpr 0x55887c30c6a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |   |   `-CStyleCastExpr 0x55887c30c678 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   |     `-ParenExpr 0x55887c30c658 <col:26, col:31> 'int'
| | |   |       `-BinaryOperator 0x55887c30c608 <col:27, col:30> 'int' '=='
| | |   |         |-IntegerLiteral 0x55887c30c5c8 <col:27> 'int' 0
| | |   |         `-IntegerLiteral 0x55887c30c5e8 <col:30> 'int' 1
| | |   `-ReturnStmt 0x55887c30c810 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:686:5, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75>
| | |     `-ParenExpr 0x55887c30c7f0 <col:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | |       `-CStyleCastExpr 0x55887c30c7c8 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |         `-ParenExpr 0x55887c30c7a8 <col:51, col:74> 'unsigned long long'
| | |           `-BinaryOperator 0x55887c30c758 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | |             |-IntegerLiteral 0x55887c30c6e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | |             `-ImplicitCastExpr 0x55887c30c740 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | |               `-ParenExpr 0x55887c30c720 <col:62, col:73> 'int'
| | |                 `-IntegerLiteral 0x55887c30c700 <line:1076:49> 'int' 2
| | |-IfStmt 0x55887c30eb90 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:689:3, line:699:3> has_else
| | | |-ParenExpr 0x55887c30d008 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:499:5, col:51> 'int'
| | | | `-BinaryOperator 0x55887c30cfe8 <line:493:41, line:499:41> 'int' '=='
| | | |   |-ParenExpr 0x55887c30cf90 <line:493:41, line:496:81> 'UINT32':'unsigned int'
| | | |   | `-CStyleCastExpr 0x55887c30cf68 <line:493:42, line:496:80> 'UINT32':'unsigned int' <IntegralCast>
| | | |   |   `-ParenExpr 0x55887c30cf48 <line:493:51, line:496:80> 'int'
| | | |   |     `-BinaryOperator 0x55887c30cef8 <line:494:5, line:496:79> 'int' '|'
| | | |   |       |-BinaryOperator 0x55887c30ccb8 <line:494:5, line:495:79> 'int' '|'
| | | |   |       | |-ImplicitCastExpr 0x55887c30cca0 <line:494:5, col:79> 'int' <IntegralCast>
| | | |   |       | | `-ImplicitCastExpr 0x55887c30cc88 <col:5, col:79> 'UINT8':'unsigned char' <LValueToRValue>
| | | |   |       | |   `-ParenExpr 0x55887c30ca48 <col:5, col:79> 'UINT8':'unsigned char' lvalue
| | | |   |       | |     `-ArraySubscriptExpr 0x55887c30ca28 <col:6, col:72> 'UINT8':'unsigned char' lvalue
| | | |   |       | |       |-ImplicitCastExpr 0x55887c30ca10 <col:6, col:66> 'UINT8 *' <ArrayToPointerDecay>
| | | |   |       | |       | `-MemberExpr 0x55887c30c9c0 <col:6, col:66> 'UINT8[3]' lvalue ->Size 0x55887c090408
| | | |   |       | |       |   `-ParenExpr 0x55887c30c9a0 <col:6, col:63> 'EFI_COMMON_SECTION_HEADER *'
| | | |   |       | |       |     `-CStyleCastExpr 0x55887c30c978 <col:7, col:62> 'EFI_COMMON_SECTION_HEADER *' <IntegralToPointer>
| | | |   |       | |       |       `-CStyleCastExpr 0x55887c30c8e8 <col:37, col:62> 'UINTN':'unsigned long long' <PointerToIntegral>
| | | |   |       | |       |         `-ImplicitCastExpr 0x55887c30c8d0 <col:45, col:62> 'const EFI_COMPRESSION_SECTION *' <LValueToRValue> part_of_explicit_cast
| | | |   |       | |       |           `-ParenExpr 0x55887c30c8b0 <col:45, col:62> 'const EFI_COMPRESSION_SECTION *' lvalue
| | | |   |       | |       |             `-DeclRefExpr 0x55887c30c860 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:689:20> 'const EFI_COMPRESSION_SECTION *' lvalue ParmVar 0x55887c32bc30 'CompressionSection' 'const EFI_COMPRESSION_SECTION *'
| | | |   |       | |       `-IntegerLiteral 0x55887c30c9f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:494:71> 'int' 0
| | | |   |       | `-ParenExpr 0x55887c30cc68 <line:495:5, col:79> 'int'
| | | |   |       |   `-BinaryOperator 0x55887c30cc48 <col:6, col:78> 'int' '<<'
| | | |   |       |     |-ImplicitCastExpr 0x55887c30cc30 <col:6, col:72> 'int' <IntegralCast>
| | | |   |       |     | `-ImplicitCastExpr 0x55887c30cc18 <col:6, col:72> 'UINT8':'unsigned char' <LValueToRValue>
| | | |   |       |     |   `-ArraySubscriptExpr 0x55887c30cbd8 <col:6, col:72> 'UINT8':'unsigned char' lvalue
| | | |   |       |     |     |-ImplicitCastExpr 0x55887c30cbc0 <col:6, col:66> 'UINT8 *' <ArrayToPointerDecay>
| | | |   |       |     |     | `-MemberExpr 0x55887c30cb70 <col:6, col:66> 'UINT8[3]' lvalue ->Size 0x55887c090408
| | | |   |       |     |     |   `-ParenExpr 0x55887c30cb50 <col:6, col:63> 'EFI_COMMON_SECTION_HEADER *'
| | | |   |       |     |     |     `-CStyleCastExpr 0x55887c30cb28 <col:7, col:62> 'EFI_COMMON_SECTION_HEADER *' <IntegralToPointer>
| | | |   |       |     |     |       `-CStyleCastExpr 0x55887c30caf0 <col:37, col:62> 'UINTN':'unsigned long long' <PointerToIntegral>
| | | |   |       |     |     |         `-ImplicitCastExpr 0x55887c30cad8 <col:45, col:62> 'const EFI_COMPRESSION_SECTION *' <LValueToRValue> part_of_explicit_cast
| | | |   |       |     |     |           `-ParenExpr 0x55887c30cab8 <col:45, col:62> 'const EFI_COMPRESSION_SECTION *' lvalue
| | | |   |       |     |     |             `-DeclRefExpr 0x55887c30ca68 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:689:20> 'const EFI_COMPRESSION_SECTION *' lvalue ParmVar 0x55887c32bc30 'CompressionSection' 'const EFI_COMPRESSION_SECTION *'
| | | |   |       |     |     `-IntegerLiteral 0x55887c30cba0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:495:71> 'int' 1
| | | |   |       |     `-IntegerLiteral 0x55887c30cbf8 <col:78> 'int' 8
| | | |   |       `-ParenExpr 0x55887c30ced8 <line:496:5, col:79> 'int'
| | | |   |         `-BinaryOperator 0x55887c30ceb8 <col:6, col:77> 'int' '<<'
| | | |   |           |-ImplicitCastExpr 0x55887c30cea0 <col:6, col:72> 'int' <IntegralCast>
| | | |   |           | `-ImplicitCastExpr 0x55887c30ce88 <col:6, col:72> 'UINT8':'unsigned char' <LValueToRValue>
| | | |   |           |   `-ArraySubscriptExpr 0x55887c30ce48 <col:6, col:72> 'UINT8':'unsigned char' lvalue
| | | |   |           |     |-ImplicitCastExpr 0x55887c30ce30 <col:6, col:66> 'UINT8 *' <ArrayToPointerDecay>
| | | |   |           |     | `-MemberExpr 0x55887c30cde0 <col:6, col:66> 'UINT8[3]' lvalue ->Size 0x55887c090408
| | | |   |           |     |   `-ParenExpr 0x55887c30cdc0 <col:6, col:63> 'EFI_COMMON_SECTION_HEADER *'
| | | |   |           |     |     `-CStyleCastExpr 0x55887c30cd98 <col:7, col:62> 'EFI_COMMON_SECTION_HEADER *' <IntegralToPointer>
| | | |   |           |     |       `-CStyleCastExpr 0x55887c30cd60 <col:37, col:62> 'UINTN':'unsigned long long' <PointerToIntegral>
| | | |   |           |     |         `-ImplicitCastExpr 0x55887c30cd48 <col:45, col:62> 'const EFI_COMPRESSION_SECTION *' <LValueToRValue> part_of_explicit_cast
| | | |   |           |     |           `-ParenExpr 0x55887c30cd28 <col:45, col:62> 'const EFI_COMPRESSION_SECTION *' lvalue
| | | |   |           |     |             `-DeclRefExpr 0x55887c30ccd8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:689:20> 'const EFI_COMPRESSION_SECTION *' lvalue ParmVar 0x55887c32bc30 'CompressionSection' 'const EFI_COMPRESSION_SECTION *'
| | | |   |           |     `-IntegerLiteral 0x55887c30ce10 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:496:71> 'int' 2
| | | |   |           `-IntegerLiteral 0x55887c30ce68 <col:77> 'int' 16
| | | |   `-ImplicitCastExpr 0x55887c30cfd0 <line:499:41> 'unsigned int' <IntegralCast>
| | | |     `-IntegerLiteral 0x55887c30cfb0 <col:41> 'int' 16777215
| | | |-CompoundStmt 0x55887c30d778 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:689:41, line:694:3>
| | | | |-BinaryOperator 0x55887c30d218 <line:690:5, col:101> 'void *' '='
| | | | | |-DeclRefExpr 0x55887c30d028 <col:5> 'void *' lvalue Var 0x55887c30bf10 'CompressionSource' 'void *'
| | | | | `-CStyleCastExpr 0x55887c30d1f0 <col:29, col:101> 'void *' <BitCast>
| | | | |   `-ParenExpr 0x55887c30d1d0 <col:37, col:101> 'UINT8 *'
| | | | |     `-BinaryOperator 0x55887c30d178 <col:38, col:100> 'UINT8 *' '+'
| | | | |       |-CStyleCastExpr 0x55887c30d090 <col:38, col:47> 'UINT8 *' <BitCast>
| | | | |       | `-ImplicitCastExpr 0x55887c30d078 <col:47> 'const EFI_COMPRESSION_SECTION *' <LValueToRValue> part_of_explicit_cast
| | | | |       |   `-DeclRefExpr 0x55887c30d048 <col:47> 'const EFI_COMPRESSION_SECTION *' lvalue ParmVar 0x55887c32bc30 'CompressionSection' 'const EFI_COMPRESSION_SECTION *'
| | | | |       `-UnaryExprOrTypeTraitExpr 0x55887c30d0f0 <col:68, col:100> 'unsigned long' sizeof 'EFI_COMPRESSION_SECTION2':'EFI_COMPRESSION_SECTION2'
| | | | |-BinaryOperator 0x55887c30d4c8 <line:691:5, col:108> 'UINT32':'unsigned int' '='
| | | | | |-DeclRefExpr 0x55887c30d238 <col:5> 'UINT32':'unsigned int' lvalue Var 0x55887c30bfa0 'CompressionSourceSize' 'UINT32':'unsigned int'
| | | | | `-CStyleCastExpr 0x55887c30d4a0 <col:29, col:108> 'UINT32':'unsigned int' <IntegralCast>
| | | | |   `-ParenExpr 0x55887c30d480 <col:37, col:108> 'unsigned long'
| | | | |     `-BinaryOperator 0x55887c30d430 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:502:5, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:691:107> 'unsigned long' '-'
| | | | |       |-ImplicitCastExpr 0x55887c30d418 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:502:5, col:77> 'unsigned long' <IntegralCast>
| | | | |       | `-ImplicitCastExpr 0x55887c30d400 <col:5, col:77> 'UINT32':'unsigned int' <LValueToRValue>
| | | | |       |   `-ParenExpr 0x55887c30d3b0 <col:5, col:77> 'UINT32':'unsigned int' lvalue
| | | | |       |     `-MemberExpr 0x55887c30d380 <col:6, col:65> 'UINT32':'unsigned int' lvalue ->ExtendedSize 0x55887c090858
| | | | |       |       `-ParenExpr 0x55887c30d360 <col:6, col:62> 'EFI_COMMON_SECTION_HEADER2 *'
| | | | |       |         `-CStyleCastExpr 0x55887c30d338 <col:7, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:691:53> 'EFI_COMMON_SECTION_HEADER2 *' <IntegralToPointer>
| | | | |       |           `-CStyleCastExpr 0x55887c30d2a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:502:38, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:691:53> 'UINTN':'unsigned long long' <PointerToIntegral>
| | | | |       |             `-ImplicitCastExpr 0x55887c30d288 <col:53> 'const EFI_COMPRESSION_SECTION *' <LValueToRValue> part_of_explicit_cast
| | | | |       |               `-DeclRefExpr 0x55887c30d258 <col:53> 'const EFI_COMPRESSION_SECTION *' lvalue ParmVar 0x55887c32bc30 'CompressionSection' 'const EFI_COMPRESSION_SECTION *'
| | | | |       `-UnaryExprOrTypeTraitExpr 0x55887c30d3e0 <col:75, col:107> 'unsigned long' sizeof 'EFI_COMPRESSION_SECTION2':'EFI_COMPRESSION_SECTION2'
| | | | |-BinaryOperator 0x55887c30d640 <line:692:5, col:79> 'UINT32':'unsigned int' '='
| | | | | |-DeclRefExpr 0x55887c30d4e8 <col:5> 'UINT32':'unsigned int' lvalue Var 0x55887c30c030 'UncompressedLength' 'UINT32':'unsigned int'
| | | | | `-ImplicitCastExpr 0x55887c30d628 <col:29, col:79> 'UINT32':'unsigned int' <LValueToRValue>
| | | | |   `-MemberExpr 0x55887c30d5f8 <col:29, col:79> 'UINT32':'unsigned int' lvalue ->UncompressedLength 0x55887c094dd8
| | | | |     `-ParenExpr 0x55887c30d5d8 <col:29, col:76> 'EFI_COMPRESSION_SECTION2 *'
| | | | |       `-CStyleCastExpr 0x55887c30d5b0 <col:30, col:58> 'EFI_COMPRESSION_SECTION2 *' <BitCast>
| | | | |         `-ImplicitCastExpr 0x55887c30d598 <col:58> 'const EFI_COMPRESSION_SECTION *' <LValueToRValue> part_of_explicit_cast
| | | | |           `-DeclRefExpr 0x55887c30d508 <col:58> 'const EFI_COMPRESSION_SECTION *' lvalue ParmVar 0x55887c32bc30 'CompressionSection' 'const EFI_COMPRESSION_SECTION *'
| | | | `-BinaryOperator 0x55887c30d758 <line:693:5, col:79> 'UINT8':'unsigned char' '='
| | | |   |-DeclRefExpr 0x55887c30d660 <col:5> 'UINT8':'unsigned char' lvalue Var 0x55887c30c0c0 'CompressionType' 'UINT8':'unsigned char'
| | | |   `-ImplicitCastExpr 0x55887c30d740 <col:29, col:79> 'UINT8':'unsigned char' <LValueToRValue>
| | | |     `-MemberExpr 0x55887c30d710 <col:29, col:79> 'UINT8':'unsigned char' lvalue ->CompressionType 0x55887c094e68
| | | |       `-ParenExpr 0x55887c30d6f0 <col:29, col:76> 'EFI_COMPRESSION_SECTION2 *'
| | | |         `-CStyleCastExpr 0x55887c30d6c8 <col:30, col:58> 'EFI_COMPRESSION_SECTION2 *' <BitCast>
| | | |           `-ImplicitCastExpr 0x55887c30d6b0 <col:58> 'const EFI_COMPRESSION_SECTION *' <LValueToRValue> part_of_explicit_cast
| | | |             `-DeclRefExpr 0x55887c30d680 <col:58> 'const EFI_COMPRESSION_SECTION *' lvalue ParmVar 0x55887c32bc30 'CompressionSection' 'const EFI_COMPRESSION_SECTION *'
| | | `-CompoundStmt 0x55887c30eb60 <line:694:10, line:699:3>
| | |   |-BinaryOperator 0x55887c30d970 <line:695:5, col:100> 'void *' '='
| | |   | |-DeclRefExpr 0x55887c30d7a8 <col:5> 'void *' lvalue Var 0x55887c30bf10 'CompressionSource' 'void *'
| | |   | `-CStyleCastExpr 0x55887c30d948 <col:29, col:100> 'void *' <BitCast>
| | |   |   `-ParenExpr 0x55887c30d928 <col:37, col:100> 'UINT8 *'
| | |   |     `-BinaryOperator 0x55887c30d8d0 <col:38, col:99> 'UINT8 *' '+'
| | |   |       |-CStyleCastExpr 0x55887c30d810 <col:38, col:47> 'UINT8 *' <BitCast>
| | |   |       | `-ImplicitCastExpr 0x55887c30d7f8 <col:47> 'const EFI_COMPRESSION_SECTION *' <LValueToRValue> part_of_explicit_cast
| | |   |       |   `-DeclRefExpr 0x55887c30d7c8 <col:47> 'const EFI_COMPRESSION_SECTION *' lvalue ParmVar 0x55887c32bc30 'CompressionSection' 'const EFI_COMPRESSION_SECTION *'
| | |   |       `-UnaryExprOrTypeTraitExpr 0x55887c30d848 <col:68, col:99> 'unsigned long' sizeof 'EFI_COMPRESSION_SECTION':'EFI_COMPRESSION_SECTION'
| | |   |-BinaryOperator 0x55887c30e9c0 <line:696:5, col:106> 'UINT32':'unsigned int' '='
| | |   | |-DeclRefExpr 0x55887c30d990 <col:5> 'UINT32':'unsigned int' lvalue Var 0x55887c30bfa0 'CompressionSourceSize' 'UINT32':'unsigned int'
| | |   | `-CStyleCastExpr 0x55887c30e998 <col:29, col:106> 'UINT32':'unsigned int' <IntegralCast>
| | |   |   `-ParenExpr 0x55887c30e978 <col:37, col:106> 'unsigned long'
| | |   |     `-BinaryOperator 0x55887c30e928 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:493:41, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:696:105> 'unsigned long' '-'
| | |   |       |-ImplicitCastExpr 0x55887c30e910 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:493:41, line:496:81> 'unsigned long' <IntegralCast>
| | |   |       | `-ParenExpr 0x55887c30e8c0 <line:493:41, line:496:81> 'UINT32':'unsigned int'
| | |   |       |   `-CStyleCastExpr 0x55887c30e898 <line:493:42, line:496:80> 'UINT32':'unsigned int' <IntegralCast>
| | |   |       |     `-ParenExpr 0x55887c30e878 <line:493:51, line:496:80> 'int'
| | |   |       |       `-BinaryOperator 0x55887c30e828 <line:494:5, line:496:79> 'int' '|'
| | |   |       |         |-BinaryOperator 0x55887c30ddb0 <line:494:5, line:495:79> 'int' '|'
| | |   |       |         | |-ImplicitCastExpr 0x55887c30dd98 <line:494:5, col:79> 'int' <IntegralCast>
| | |   |       |         | | `-ImplicitCastExpr 0x55887c30dd80 <col:5, col:79> 'UINT8':'unsigned char' <LValueToRValue>
| | |   |       |         | |   `-ParenExpr 0x55887c30db40 <col:5, col:79> 'UINT8':'unsigned char' lvalue
| | |   |       |         | |     `-ArraySubscriptExpr 0x55887c30db20 <col:6, col:72> 'UINT8':'unsigned char' lvalue
| | |   |       |         | |       |-ImplicitCastExpr 0x55887c30db08 <col:6, col:66> 'UINT8 *' <ArrayToPointerDecay>
| | |   |       |         | |       | `-MemberExpr 0x55887c30dab8 <col:6, col:66> 'UINT8[3]' lvalue ->Size 0x55887c090408
| | |   |       |         | |       |   `-ParenExpr 0x55887c30da98 <col:6, col:63> 'EFI_COMMON_SECTION_HEADER *'
| | |   |       |         | |       |     `-CStyleCastExpr 0x55887c30da70 <col:7, col:62> 'EFI_COMMON_SECTION_HEADER *' <IntegralToPointer>
| | |   |       |         | |       |       `-CStyleCastExpr 0x55887c30da38 <col:37, col:62> 'UINTN':'unsigned long long' <PointerToIntegral>
| | |   |       |         | |       |         `-ImplicitCastExpr 0x55887c30da20 <col:45, col:62> 'const EFI_COMPRESSION_SECTION *' <LValueToRValue> part_of_explicit_cast
| | |   |       |         | |       |           `-ParenExpr 0x55887c30da00 <col:45, col:62> 'const EFI_COMPRESSION_SECTION *' lvalue
| | |   |       |         | |       |             `-DeclRefExpr 0x55887c30d9b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:696:52> 'const EFI_COMPRESSION_SECTION *' lvalue ParmVar 0x55887c32bc30 'CompressionSection' 'const EFI_COMPRESSION_SECTION *'
| | |   |       |         | |       `-IntegerLiteral 0x55887c30dae8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:494:71> 'int' 0
| | |   |       |         | `-ParenExpr 0x55887c30dd60 <line:495:5, col:79> 'int'
| | |   |       |         |   `-BinaryOperator 0x55887c30dd40 <col:6, col:78> 'int' '<<'
| | |   |       |         |     |-ImplicitCastExpr 0x55887c30dd28 <col:6, col:72> 'int' <IntegralCast>
| | |   |       |         |     | `-ImplicitCastExpr 0x55887c30dd10 <col:6, col:72> 'UINT8':'unsigned char' <LValueToRValue>
| | |   |       |         |     |   `-ArraySubscriptExpr 0x55887c30dcd0 <col:6, col:72> 'UINT8':'unsigned char' lvalue
| | |   |       |         |     |     |-ImplicitCastExpr 0x55887c30dcb8 <col:6, col:66> 'UINT8 *' <ArrayToPointerDecay>
| | |   |       |         |     |     | `-MemberExpr 0x55887c30dc68 <col:6, col:66> 'UINT8[3]' lvalue ->Size 0x55887c090408
| | |   |       |         |     |     |   `-ParenExpr 0x55887c30dc48 <col:6, col:63> 'EFI_COMMON_SECTION_HEADER *'
| | |   |       |         |     |     |     `-CStyleCastExpr 0x55887c30dc20 <col:7, col:62> 'EFI_COMMON_SECTION_HEADER *' <IntegralToPointer>
| | |   |       |         |     |     |       `-CStyleCastExpr 0x55887c30dbe8 <col:37, col:62> 'UINTN':'unsigned long long' <PointerToIntegral>
| | |   |       |         |     |     |         `-ImplicitCastExpr 0x55887c30dbd0 <col:45, col:62> 'const EFI_COMPRESSION_SECTION *' <LValueToRValue> part_of_explicit_cast
| | |   |       |         |     |     |           `-ParenExpr 0x55887c30dbb0 <col:45, col:62> 'const EFI_COMPRESSION_SECTION *' lvalue
| | |   |       |         |     |     |             `-DeclRefExpr 0x55887c30db60 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:696:52> 'const EFI_COMPRESSION_SECTION *' lvalue ParmVar 0x55887c32bc30 'CompressionSection' 'const EFI_COMPRESSION_SECTION *'
| | |   |       |         |     |     `-IntegerLiteral 0x55887c30dc98 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:495:71> 'int' 1
| | |   |       |         |     `-IntegerLiteral 0x55887c30dcf0 <col:78> 'int' 8
| | |   |       |         `-ParenExpr 0x55887c30e808 <line:496:5, col:79> 'int'
| | |   |       |           `-BinaryOperator 0x55887c30e7e8 <col:6, col:77> 'int' '<<'
| | |   |       |             |-ImplicitCastExpr 0x55887c30e7d0 <col:6, col:72> 'int' <IntegralCast>
| | |   |       |             | `-ImplicitCastExpr 0x55887c30e7b8 <col:6, col:72> 'UINT8':'unsigned char' <LValueToRValue>
| | |   |       |             |   `-ArraySubscriptExpr 0x55887c30e778 <col:6, col:72> 'UINT8':'unsigned char' lvalue
| | |   |       |             |     |-ImplicitCastExpr 0x55887c30e760 <col:6, col:66> 'UINT8 *' <ArrayToPointerDecay>
| | |   |       |             |     | `-MemberExpr 0x55887c30ded8 <col:6, col:66> 'UINT8[3]' lvalue ->Size 0x55887c090408
| | |   |       |             |     |   `-ParenExpr 0x55887c30deb8 <col:6, col:63> 'EFI_COMMON_SECTION_HEADER *'
| | |   |       |             |     |     `-CStyleCastExpr 0x55887c30de90 <col:7, col:62> 'EFI_COMMON_SECTION_HEADER *' <IntegralToPointer>
| | |   |       |             |     |       `-CStyleCastExpr 0x55887c30de58 <col:37, col:62> 'UINTN':'unsigned long long' <PointerToIntegral>
| | |   |       |             |     |         `-ImplicitCastExpr 0x55887c30de40 <col:45, col:62> 'const EFI_COMPRESSION_SECTION *' <LValueToRValue> part_of_explicit_cast
| | |   |       |             |     |           `-ParenExpr 0x55887c30de20 <col:45, col:62> 'const EFI_COMPRESSION_SECTION *' lvalue
| | |   |       |             |     |             `-DeclRefExpr 0x55887c30ddd0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:696:52> 'const EFI_COMPRESSION_SECTION *' lvalue ParmVar 0x55887c32bc30 'CompressionSection' 'const EFI_COMPRESSION_SECTION *'
| | |   |       |             |     `-IntegerLiteral 0x55887c30e740 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:496:71> 'int' 2
| | |   |       |             `-IntegerLiteral 0x55887c30e798 <col:77> 'int' 16
| | |   |       `-UnaryExprOrTypeTraitExpr 0x55887c30e8f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:696:74, col:105> 'unsigned long' sizeof 'EFI_COMPRESSION_SECTION':'EFI_COMPRESSION_SECTION'
| | |   |-BinaryOperator 0x55887c30ea80 <line:697:5, col:49> 'UINT32':'unsigned int' '='
| | |   | |-DeclRefExpr 0x55887c30e9e0 <col:5> 'UINT32':'unsigned int' lvalue Var 0x55887c30c030 'UncompressedLength' 'UINT32':'unsigned int'
| | |   | `-ImplicitCastExpr 0x55887c30ea68 <col:29, col:49> 'UINT32':'unsigned int' <LValueToRValue>
| | |   |   `-MemberExpr 0x55887c30ea38 <col:29, col:49> 'const UINT32':'const unsigned int' lvalue ->UncompressedLength 0x55887c0949f8
| | |   |     `-ImplicitCastExpr 0x55887c30ea20 <col:29> 'const EFI_COMPRESSION_SECTION *' <LValueToRValue>
| | |   |       `-DeclRefExpr 0x55887c30ea00 <col:29> 'const EFI_COMPRESSION_SECTION *' lvalue ParmVar 0x55887c32bc30 'CompressionSection' 'const EFI_COMPRESSION_SECTION *'
| | |   `-BinaryOperator 0x55887c30eb40 <line:698:5, col:49> 'UINT8':'unsigned char' '='
| | |     |-DeclRefExpr 0x55887c30eaa0 <col:5> 'UINT8':'unsigned char' lvalue Var 0x55887c30c0c0 'CompressionType' 'UINT8':'unsigned char'
| | |     `-ImplicitCastExpr 0x55887c30eb28 <col:29, col:49> 'UINT8':'unsigned char' <LValueToRValue>
| | |       `-MemberExpr 0x55887c30eaf8 <col:29, col:49> 'const UINT8':'const unsigned char' lvalue ->CompressionType 0x55887c094a88
| | |         `-ImplicitCastExpr 0x55887c30eae0 <col:29> 'const EFI_COMPRESSION_SECTION *' <LValueToRValue>
| | |           `-DeclRefExpr 0x55887c30eac0 <col:29> 'const EFI_COMPRESSION_SECTION *' lvalue ParmVar 0x55887c32bc30 'CompressionSection' 'const EFI_COMPRESSION_SECTION *'
| | |-SwitchStmt 0x55887c30ec10 <line:704:3, line:789:3>
| | | |-ImplicitCastExpr 0x55887c30ebf8 <line:704:11> 'int' <IntegralCast>
| | | | `-ImplicitCastExpr 0x55887c30ebe0 <col:11> 'UINT8':'unsigned char' <LValueToRValue>
| | | |   `-DeclRefExpr 0x55887c30ebc0 <col:11> 'UINT8':'unsigned char' lvalue Var 0x55887c30c0c0 'CompressionType' 'UINT8':'unsigned char'
| | | `-CompoundStmt 0x55887c316638 <col:28, line:789:3>
| | |   |-CaseStmt 0x55887c30ec70 <line:705:5, line:765:7>
| | |   | |-ConstantExpr 0x55887c30ec58 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:269:35> 'int'
| | |   | | `-IntegerLiteral 0x55887c30ec38 <col:35> 'int' 1
| | |   | `-IfStmt 0x55887c3157c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:706:7, line:765:7> has_else
| | |   |   |-RecoveryExpr 0x55887c30ecc8 <<scratch space>:48:1> '<dependent type>' contains-errors lvalue
| | |   |   |-CompoundStmt 0x55887c315178 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:706:59, line:758:7>
| | |   |   | |-BinaryOperator 0x55887c30eed8 <line:711:9, line:716:20> 'EFI_STATUS':'unsigned long long' '='
| | |   |   | | |-DeclRefExpr 0x55887c30ece8 <line:711:9> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c32bea0 'Status' 'EFI_STATUS':'unsigned long long'
| | |   |   | | `-CallExpr 0x55887c30ee50 <col:18, line:716:20> 'RETURN_STATUS':'unsigned long long'
| | |   |   | |   |-ImplicitCastExpr 0x55887c30ee38 <line:711:18> 'RETURN_STATUS (*)(const void *, UINT32, UINT32 *, UINT32 *)' <FunctionToPointerDecay>
| | |   |   | |   | `-DeclRefExpr 0x55887c30ed08 <col:18> 'RETURN_STATUS (const void *, UINT32, UINT32 *, UINT32 *)' Function 0x55887c2c8a18 'UefiDecompressGetInfo' 'RETURN_STATUS (const void *, UINT32, UINT32 *, UINT32 *)'
| | |   |   | |   |-ImplicitCastExpr 0x55887c30eea8 <line:712:20> 'const void *' <NoOp>
| | |   |   | |   | `-ImplicitCastExpr 0x55887c30ee90 <col:20> 'void *' <LValueToRValue>
| | |   |   | |   |   `-DeclRefExpr 0x55887c30ed28 <col:20> 'void *' lvalue Var 0x55887c30bf10 'CompressionSource' 'void *'
| | |   |   | |   |-ImplicitCastExpr 0x55887c30eec0 <line:713:20> 'UINT32':'unsigned int' <LValueToRValue>
| | |   |   | |   | `-DeclRefExpr 0x55887c30ed48 <col:20> 'UINT32':'unsigned int' lvalue Var 0x55887c30bfa0 'CompressionSourceSize' 'UINT32':'unsigned int'
| | |   |   | |   |-UnaryOperator 0x55887c30ed88 <line:714:20, col:21> 'UINT32 *' prefix '&' cannot overflow
| | |   |   | |   | `-DeclRefExpr 0x55887c30ed68 <col:21> 'UINT32':'unsigned int' lvalue Var 0x55887c32c050 'DstBufferSize' 'UINT32':'unsigned int'
| | |   |   | |   `-UnaryOperator 0x55887c30edc0 <line:715:20, col:21> 'UINT32 *' prefix '&' cannot overflow
| | |   |   | |     `-DeclRefExpr 0x55887c30eda0 <col:21> 'UINT32':'unsigned int' lvalue Var 0x55887c32c0e0 'ScratchBufferSize' 'UINT32':'unsigned int'
| | |   |   | |-IfStmt 0x55887c30f720 <line:717:9, line:723:9>
| | |   |   | | |-ParenExpr 0x55887c30f058 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | |   |   | | | `-BinaryOperator 0x55887c30f038 <col:36, col:74> 'int' '<'
| | |   |   | | |   |-ParenExpr 0x55887c30efe0 <col:36, col:70> 'INTN':'long long'
| | |   |   | | |   | `-CStyleCastExpr 0x55887c30efb8 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | |   |   | | |   |   `-CStyleCastExpr 0x55887c30ef80 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |   |   | | |   |     `-ImplicitCastExpr 0x55887c30ef68 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | |   |   | | |   |       `-ParenExpr 0x55887c30ef48 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | |   |   | | |   |         `-DeclRefExpr 0x55887c30eef8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:717:24> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c32bea0 'Status' 'EFI_STATUS':'unsigned long long'
| | |   |   | | |   `-ImplicitCastExpr 0x55887c30f020 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | |   |   | | |     `-IntegerLiteral 0x55887c30f000 <col:74> 'int' 0
| | |   |   | | `-CompoundStmt 0x55887c30f700 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:717:33, line:723:9>
| | |   |   | |   |-DoStmt 0x55887c30f5a0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:423:5, line:427:19>
| | |   |   | |   | |-CompoundStmt 0x55887c30f490 <line:423:8, line:427:5>
| | |   |   | |   | | `-IfStmt 0x55887c30f470 <line:424:7, line:426:7>
| | |   |   | |   | |   |-CallExpr 0x55887c30f0b0 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | |   |   | |   | |   | `-ImplicitCastExpr 0x55887c30f098 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   |   | |   | |   |   `-DeclRefExpr 0x55887c30f078 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | |   |   | |   | |   `-CompoundStmt 0x55887c30f458 <col:33, line:426:7>
| | |   |   | |   | |     `-DoStmt 0x55887c30f438 <line:373:5, line:377:19>
| | |   |   | |   | |       |-CompoundStmt 0x55887c30f328 <line:373:8, line:377:5>
| | |   |   | |   | |       | `-IfStmt 0x55887c30f308 <line:374:7, line:376:7>
| | |   |   | |   | |       |   |-CallExpr 0x55887c30f128 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | |   |   | |   | |       |   | |-ImplicitCastExpr 0x55887c30f110 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | |   |   | |   | |       |   | | `-DeclRefExpr 0x55887c30f0d0 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | |   |   | |   | |       |   | `-ImplicitCastExpr 0x55887c30f150 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | |   |   | |   | |       |   |   `-IntegerLiteral 0x55887c30f0f0 <col:22> 'unsigned int' 2147483648
| | |   |   | |   | |       |   `-CompoundStmt 0x55887c30f2f0 <line:374:48, line:376:7>
| | |   |   | |   | |       |     `-CallExpr 0x55887c30f258 <line:375:9, col:46> 'void'
| | |   |   | |   | |       |       |-ImplicitCastExpr 0x55887c30f240 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | |   |   | |   | |       |       | `-DeclRefExpr 0x55887c30f168 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | |   |   | |   | |       |       |-ImplicitCastExpr 0x55887c30f290 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | |   |   | |   | |       |       | `-IntegerLiteral 0x55887c30f188 <col:22> 'unsigned int' 2147483648
| | |   |   | |   | |       |       |-ImplicitCastExpr 0x55887c30f2c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:721:32> 'const CHAR8 *' <NoOp>
| | |   |   | |   | |       |       | `-ImplicitCastExpr 0x55887c30f2a8 <col:32> 'char *' <ArrayToPointerDecay>
| | |   |   | |   | |       |       |   `-StringLiteral 0x55887c30f1e8 <col:32> 'char[32]' lvalue "Decompress GetInfo Failed - %r\n"
| | |   |   | |   | |       |       `-ImplicitCastExpr 0x55887c30f2d8 <col:68> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | |   |   | |   | |       |         `-DeclRefExpr 0x55887c30f220 <col:68> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c32bea0 'Status' 'EFI_STATUS':'unsigned long long'
| | |   |   | |   | |       `-ParenExpr 0x55887c30f418 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |   |   | |   | |         `-CStyleCastExpr 0x55887c30f3f0 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   |   | |   | |           `-ParenExpr 0x55887c30f3d0 <col:26, col:31> 'int'
| | |   |   | |   | |             `-BinaryOperator 0x55887c30f380 <col:27, col:30> 'int' '=='
| | |   |   | |   | |               |-IntegerLiteral 0x55887c30f340 <col:27> 'int' 0
| | |   |   | |   | |               `-IntegerLiteral 0x55887c30f360 <col:30> 'int' 1
| | |   |   | |   | `-ParenExpr 0x55887c30f580 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | |   |   | |   |   `-CStyleCastExpr 0x55887c30f558 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   |   | |   |     `-ParenExpr 0x55887c30f538 <col:26, col:31> 'int'
| | |   |   | |   |       `-BinaryOperator 0x55887c30f4e8 <col:27, col:30> 'int' '=='
| | |   |   | |   |         |-IntegerLiteral 0x55887c30f4a8 <col:27> 'int' 0
| | |   |   | |   |         `-IntegerLiteral 0x55887c30f4c8 <col:30> 'int' 1
| | |   |   | |   `-ReturnStmt 0x55887c30f6f0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:722:11, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75>
| | |   |   | |     `-ParenExpr 0x55887c30f6d0 <col:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | |   |   | |       `-CStyleCastExpr 0x55887c30f6a8 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |   |   | |         `-ParenExpr 0x55887c30f688 <col:51, col:74> 'unsigned long long'
| | |   |   | |           `-BinaryOperator 0x55887c30f638 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | |   |   | |             |-IntegerLiteral 0x55887c30f5c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | |   |   | |             `-ImplicitCastExpr 0x55887c30f620 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | |   |   | |               `-ParenExpr 0x55887c30f600 <col:62, col:73> 'int'
| | |   |   | |                 `-IntegerLiteral 0x55887c30f5e0 <line:1142:41> 'int' 14
| | |   |   | |-BinaryOperator 0x55887c30fa60 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:728:9, col:77> 'UINT8 *' '='
| | |   |   | | |-DeclRefExpr 0x55887c30f740 <col:9> 'UINT8 *' lvalue Var 0x55887c32bfc0 'ScratchBuffer' 'UINT8 *'
| | |   |   | | `-ImplicitCastExpr 0x55887c30fa48 <col:25, col:77> 'UINT8 *' <BitCast>
| | |   |   | |   `-CallExpr 0x55887c30fa08 <col:25, col:77> 'void *'
| | |   |   | |     |-ImplicitCastExpr 0x55887c30f9f0 <col:25> 'void *(*)(UINTN)' <FunctionToPointerDecay>
| | |   |   | |     | `-DeclRefExpr 0x55887c30f760 <col:25> 'void *(UINTN)' Function 0x55887c2dd5c0 'AllocatePages' 'void *(UINTN)'
| | |   |   | |     `-ImplicitCastExpr 0x55887c30fa30 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiBaseType.h:200:34, col:98> 'UINTN':'unsigned long long' <IntegralCast>
| | |   |   | |       `-ParenExpr 0x55887c30f9d0 <col:34, col:98> 'unsigned int'
| | |   |   | |         `-BinaryOperator 0x55887c30f9b0 <col:35, col:97> 'unsigned int' '+'
| | |   |   | |           |-ParenExpr 0x55887c30f818 <col:35, col:60> 'UINT32':'unsigned int'
| | |   |   | |           | `-BinaryOperator 0x55887c30f7f8 <col:36, line:187:25> 'UINT32':'unsigned int' '>>'
| | |   |   | |           |   |-ImplicitCastExpr 0x55887c30f7e0 <line:200:36, col:41> 'UINT32':'unsigned int' <LValueToRValue>
| | |   |   | |           |   | `-ParenExpr 0x55887c30f7a0 <col:36, col:41> 'UINT32':'unsigned int' lvalue
| | |   |   | |           |   |   `-DeclRefExpr 0x55887c30f780 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:728:59> 'UINT32':'unsigned int' lvalue Var 0x55887c32c0e0 'ScratchBufferSize' 'UINT32':'unsigned int'
| | |   |   | |           |   `-IntegerLiteral 0x55887c30f7c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiBaseType.h:187:25> 'int' 12
| | |   |   | |           `-ImplicitCastExpr 0x55887c30f998 <line:200:64, col:97> 'unsigned int' <IntegralCast>
| | |   |   | |             `-ParenExpr 0x55887c30f978 <col:64, col:97> 'int'
| | |   |   | |               `-ConditionalOperator 0x55887c30f948 <col:65, col:96> 'int'
| | |   |   | |                 |-ParenExpr 0x55887c30f8e8 <col:65, col:88> 'unsigned int'
| | |   |   | |                 | `-BinaryOperator 0x55887c30f8c8 <col:66, line:186:25> 'unsigned int' '&'
| | |   |   | |                 |   |-ImplicitCastExpr 0x55887c30f898 <line:200:66, col:71> 'UINT32':'unsigned int' <LValueToRValue>
| | |   |   | |                 |   | `-ParenExpr 0x55887c30f858 <col:66, col:71> 'UINT32':'unsigned int' lvalue
| | |   |   | |                 |   |   `-DeclRefExpr 0x55887c30f838 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:728:59> 'UINT32':'unsigned int' lvalue Var 0x55887c32c0e0 'ScratchBufferSize' 'UINT32':'unsigned int'
| | |   |   | |                 |   `-ImplicitCastExpr 0x55887c30f8b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiBaseType.h:186:25> 'unsigned int' <IntegralCast>
| | |   |   | |                 |     `-IntegerLiteral 0x55887c30f878 <col:25> 'int' 4095
| | |   |   | |                 |-IntegerLiteral 0x55887c30f908 <line:200:92> 'int' 1
| | |   |   | |                 `-IntegerLiteral 0x55887c30f928 <col:96> 'int' 0
| | |   |   | |-IfStmt 0x55887c30fcc8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:729:9, line:731:9>
| | |   |   | | |-BinaryOperator 0x55887c30fb50 <line:729:13, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:26> 'int' '=='
| | |   |   | | | |-ImplicitCastExpr 0x55887c30fb20 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:729:13> 'UINT8 *' <LValueToRValue>
| | |   |   | | | | `-DeclRefExpr 0x55887c30fa80 <col:13> 'UINT8 *' lvalue Var 0x55887c32bfc0 'ScratchBuffer' 'UINT8 *'
| | |   |   | | | `-ImplicitCastExpr 0x55887c30fb38 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'UINT8 *' <BitCast>
| | |   |   | | |   `-ParenExpr 0x55887c30fb00 <col:15, col:26> 'void *'
| | |   |   | | |     `-CStyleCastExpr 0x55887c30fad8 <col:16, col:25> 'void *' <NullToPointer>
| | |   |   | | |       `-IntegerLiteral 0x55887c30faa0 <col:25> 'int' 0
| | |   |   | | `-CompoundStmt 0x55887c30fcb0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:729:36, line:731:9>
| | |   |   | |   `-ReturnStmt 0x55887c30fca0 <line:730:11, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75>
| | |   |   | |     `-ParenExpr 0x55887c30fc80 <col:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | |   |   | |       `-CStyleCastExpr 0x55887c30fc58 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |   |   | |         `-ParenExpr 0x55887c30fc38 <col:51, col:74> 'unsigned long long'
| | |   |   | |           `-BinaryOperator 0x55887c30fbe8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | |   |   | |             |-IntegerLiteral 0x55887c30fb70 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | |   |   | |             `-ImplicitCastExpr 0x55887c30fbd0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | |   |   | |               `-ParenExpr 0x55887c30fbb0 <col:62, col:73> 'int'
| | |   |   | |                 `-IntegerLiteral 0x55887c30fb90 <line:1114:48> 'int' 9
| | |   |   | |-BinaryOperator 0x55887c310008 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:736:9, col:69> 'UINT8 *' '='
| | |   |   | | |-DeclRefExpr 0x55887c30fce8 <col:9> 'UINT8 *' lvalue Var 0x55887c32bf30 'DstBuffer' 'UINT8 *'
| | |   |   | | `-ImplicitCastExpr 0x55887c30fff0 <col:21, col:69> 'UINT8 *' <BitCast>
| | |   |   | |   `-CallExpr 0x55887c30ffb0 <col:21, col:69> 'void *'
| | |   |   | |     |-ImplicitCastExpr 0x55887c30ff98 <col:21> 'void *(*)(UINTN)' <FunctionToPointerDecay>
| | |   |   | |     | `-DeclRefExpr 0x55887c30fd08 <col:21> 'void *(UINTN)' Function 0x55887c2dd5c0 'AllocatePages' 'void *(UINTN)'
| | |   |   | |     `-ImplicitCastExpr 0x55887c30ffd8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiBaseType.h:200:34, col:98> 'UINTN':'unsigned long long' <IntegralCast>
| | |   |   | |       `-ParenExpr 0x55887c30ff78 <col:34, col:98> 'unsigned int'
| | |   |   | |         `-BinaryOperator 0x55887c30ff58 <col:35, col:97> 'unsigned int' '+'
| | |   |   | |           |-ParenExpr 0x55887c30fdc0 <col:35, col:60> 'UINT32':'unsigned int'
| | |   |   | |           | `-BinaryOperator 0x55887c30fda0 <col:36, line:187:25> 'UINT32':'unsigned int' '>>'
| | |   |   | |           |   |-ImplicitCastExpr 0x55887c30fd88 <line:200:36, col:41> 'UINT32':'unsigned int' <LValueToRValue>
| | |   |   | |           |   | `-ParenExpr 0x55887c30fd48 <col:36, col:41> 'UINT32':'unsigned int' lvalue
| | |   |   | |           |   |   `-DeclRefExpr 0x55887c30fd28 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:736:55> 'UINT32':'unsigned int' lvalue Var 0x55887c32c050 'DstBufferSize' 'UINT32':'unsigned int'
| | |   |   | |           |   `-IntegerLiteral 0x55887c30fd68 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiBaseType.h:187:25> 'int' 12
| | |   |   | |           `-ImplicitCastExpr 0x55887c30ff40 <line:200:64, col:97> 'unsigned int' <IntegralCast>
| | |   |   | |             `-ParenExpr 0x55887c30ff20 <col:64, col:97> 'int'
| | |   |   | |               `-ConditionalOperator 0x55887c30fef0 <col:65, col:96> 'int'
| | |   |   | |                 |-ParenExpr 0x55887c30fe90 <col:65, col:88> 'unsigned int'
| | |   |   | |                 | `-BinaryOperator 0x55887c30fe70 <col:66, line:186:25> 'unsigned int' '&'
| | |   |   | |                 |   |-ImplicitCastExpr 0x55887c30fe40 <line:200:66, col:71> 'UINT32':'unsigned int' <LValueToRValue>
| | |   |   | |                 |   | `-ParenExpr 0x55887c30fe00 <col:66, col:71> 'UINT32':'unsigned int' lvalue
| | |   |   | |                 |   |   `-DeclRefExpr 0x55887c30fde0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:736:55> 'UINT32':'unsigned int' lvalue Var 0x55887c32c050 'DstBufferSize' 'UINT32':'unsigned int'
| | |   |   | |                 |   `-ImplicitCastExpr 0x55887c30fe58 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiBaseType.h:186:25> 'unsigned int' <IntegralCast>
| | |   |   | |                 |     `-IntegerLiteral 0x55887c30fe20 <col:25> 'int' 4095
| | |   |   | |                 |-IntegerLiteral 0x55887c30feb0 <line:200:92> 'int' 1
| | |   |   | |                 `-IntegerLiteral 0x55887c30fed0 <col:96> 'int' 0
| | |   |   | |-IfStmt 0x55887c310270 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:737:9, line:739:9>
| | |   |   | | |-BinaryOperator 0x55887c3100f8 <line:737:13, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:26> 'int' '=='
| | |   |   | | | |-ImplicitCastExpr 0x55887c3100c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:737:13> 'UINT8 *' <LValueToRValue>
| | |   |   | | | | `-DeclRefExpr 0x55887c310028 <col:13> 'UINT8 *' lvalue Var 0x55887c32bf30 'DstBuffer' 'UINT8 *'
| | |   |   | | | `-ImplicitCastExpr 0x55887c3100e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'UINT8 *' <BitCast>
| | |   |   | | |   `-ParenExpr 0x55887c3100a8 <col:15, col:26> 'void *'
| | |   |   | | |     `-CStyleCastExpr 0x55887c310080 <col:16, col:25> 'void *' <NullToPointer>
| | |   |   | | |       `-IntegerLiteral 0x55887c310048 <col:25> 'int' 0
| | |   |   | | `-CompoundStmt 0x55887c310258 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:737:32, line:739:9>
| | |   |   | |   `-ReturnStmt 0x55887c310248 <line:738:11, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75>
| | |   |   | |     `-ParenExpr 0x55887c310228 <col:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | |   |   | |       `-CStyleCastExpr 0x55887c310200 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |   |   | |         `-ParenExpr 0x55887c3101e0 <col:51, col:74> 'unsigned long long'
| | |   |   | |           `-BinaryOperator 0x55887c310190 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | |   |   | |             |-IntegerLiteral 0x55887c310118 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | |   |   | |             `-ImplicitCastExpr 0x55887c310178 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | |   |   | |               `-ParenExpr 0x55887c310158 <col:62, col:73> 'int'
| | |   |   | |                 `-IntegerLiteral 0x55887c310138 <line:1114:48> 'int' 9
| | |   |   | |-BinaryOperator 0x55887c310468 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:744:9, line:748:20> 'EFI_STATUS':'unsigned long long' '='
| | |   |   | | |-DeclRefExpr 0x55887c310290 <line:744:9> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c32bea0 'Status' 'EFI_STATUS':'unsigned long long'
| | |   |   | | `-CallExpr 0x55887c3103a0 <col:18, line:748:20> 'RETURN_STATUS':'unsigned long long'
| | |   |   | |   |-ImplicitCastExpr 0x55887c310388 <line:744:18> 'RETURN_STATUS (*)(const void *, void *, void *)' <FunctionToPointerDecay>
| | |   |   | |   | `-DeclRefExpr 0x55887c3102b0 <col:18> 'RETURN_STATUS (const void *, void *, void *)' Function 0x55887c2c8d48 'UefiDecompress' 'RETURN_STATUS (const void *, void *, void *)'
| | |   |   | |   |-ImplicitCastExpr 0x55887c3103f0 <line:745:20> 'const void *' <NoOp>
| | |   |   | |   | `-ImplicitCastExpr 0x55887c3103d8 <col:20> 'void *' <LValueToRValue>
| | |   |   | |   |   `-DeclRefExpr 0x55887c3102d0 <col:20> 'void *' lvalue Var 0x55887c30bf10 'CompressionSource' 'void *'
| | |   |   | |   |-ImplicitCastExpr 0x55887c310420 <line:746:20> 'void *' <BitCast>
| | |   |   | |   | `-ImplicitCastExpr 0x55887c310408 <col:20> 'UINT8 *' <LValueToRValue>
| | |   |   | |   |   `-DeclRefExpr 0x55887c3102f0 <col:20> 'UINT8 *' lvalue Var 0x55887c32bf30 'DstBuffer' 'UINT8 *'
| | |   |   | |   `-ImplicitCastExpr 0x55887c310450 <line:747:20> 'void *' <BitCast>
| | |   |   | |     `-ImplicitCastExpr 0x55887c310438 <col:20> 'UINT8 *' <LValueToRValue>
| | |   |   | |       `-DeclRefExpr 0x55887c310310 <col:20> 'UINT8 *' lvalue Var 0x55887c32bfc0 'ScratchBuffer' 'UINT8 *'
| | |   |   | |-IfStmt 0x55887c315150 <line:749:9, line:755:9>
| | |   |   | | |-ParenExpr 0x55887c3105e8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:35, col:75> 'int'
| | |   |   | | | `-BinaryOperator 0x55887c3105c8 <col:36, col:74> 'int' '<'
| | |   |   | | |   |-ParenExpr 0x55887c310570 <col:36, col:70> 'INTN':'long long'
| | |   |   | | |   | `-CStyleCastExpr 0x55887c310548 <col:37, col:69> 'INTN':'long long' <IntegralCast>
| | |   |   | | |   |   `-CStyleCastExpr 0x55887c310510 <col:43, col:69> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |   |   | | |   |     `-ImplicitCastExpr 0x55887c3104f8 <col:58, col:69> 'EFI_STATUS':'unsigned long long' <LValueToRValue> part_of_explicit_cast
| | |   |   | | |   |       `-ParenExpr 0x55887c3104d8 <col:58, col:69> 'EFI_STATUS':'unsigned long long' lvalue
| | |   |   | | |   |         `-DeclRefExpr 0x55887c310488 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:749:24> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c32bea0 'Status' 'EFI_STATUS':'unsigned long long'
| | |   |   | | |   `-ImplicitCastExpr 0x55887c3105b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1061:74> 'long long' <IntegralCast>
| | |   |   | | |     `-IntegerLiteral 0x55887c310590 <col:74> 'int' 0
| | |   |   | | `-CompoundStmt 0x55887c315130 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:749:33, line:755:9>
| | |   |   | |   |-DoStmt 0x55887c314fd0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:423:5, line:427:19>
| | |   |   | |   | |-CompoundStmt 0x55887c314ec0 <line:423:8, line:427:5>
| | |   |   | |   | | `-IfStmt 0x55887c314ea0 <line:424:7, line:426:7>
| | |   |   | |   | |   |-CallExpr 0x55887c310640 <line:424:11, col:30> 'BOOLEAN':'unsigned char'
| | |   |   | |   | |   | `-ImplicitCastExpr 0x55887c310628 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   |   | |   | |   |   `-DeclRefExpr 0x55887c310608 <col:11> 'BOOLEAN (void)' Function 0x55887c18d650 'DebugPrintEnabled' 'BOOLEAN (void)'
| | |   |   | |   | |   `-CompoundStmt 0x55887c314e88 <col:33, line:426:7>
| | |   |   | |   | |     `-DoStmt 0x55887c314e68 <line:373:5, line:377:19>
| | |   |   | |   | |       |-CompoundStmt 0x55887c314d58 <line:373:8, line:377:5>
| | |   |   | |   | |       | `-IfStmt 0x55887c314d38 <line:374:7, line:376:7>
| | |   |   | |   | |       |   |-CallExpr 0x55887c3106b8 <line:374:11, col:45> 'BOOLEAN':'unsigned char'
| | |   |   | |   | |       |   | |-ImplicitCastExpr 0x55887c3106a0 <col:11> 'BOOLEAN (*)(const UINTN)' <FunctionToPointerDecay>
| | |   |   | |   | |       |   | | `-DeclRefExpr 0x55887c310660 <col:11> 'BOOLEAN (const UINTN)' Function 0x55887c18dad8 'DebugPrintLevelEnabled' 'BOOLEAN (const UINTN)'
| | |   |   | |   | |       |   | `-ImplicitCastExpr 0x55887c3106e0 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | |   |   | |   | |       |   |   `-IntegerLiteral 0x55887c310680 <col:22> 'unsigned int' 2147483648
| | |   |   | |   | |       |   `-CompoundStmt 0x55887c314d20 <line:374:48, line:376:7>
| | |   |   | |   | |       |     `-CallExpr 0x55887c314c88 <line:375:9, col:46> 'void'
| | |   |   | |   | |       |       |-ImplicitCastExpr 0x55887c314c70 <col:9> 'void (*)(UINTN, const CHAR8 *, ...)' <FunctionToPointerDecay>
| | |   |   | |   | |       |       | `-DeclRefExpr 0x55887c3106f8 <col:9> 'void (UINTN, const CHAR8 *, ...)' Function 0x55887c184d40 'DebugPrint' 'void (UINTN, const CHAR8 *, ...)'
| | |   |   | |   | |       |       |-ImplicitCastExpr 0x55887c314cc0 <line:53:22> 'UINTN':'unsigned long long' <IntegralCast>
| | |   |   | |   | |       |       | `-IntegerLiteral 0x55887c310718 <col:22> 'unsigned int' 2147483648
| | |   |   | |   | |       |       |-ImplicitCastExpr 0x55887c314cf0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:753:32> 'const CHAR8 *' <NoOp>
| | |   |   | |   | |       |       | `-ImplicitCastExpr 0x55887c314cd8 <col:32> 'char *' <ArrayToPointerDecay>
| | |   |   | |   | |       |       |   `-StringLiteral 0x55887c314c20 <col:32> 'char[24]' lvalue "Decompress Failed - %r\n"
| | |   |   | |   | |       |       `-ImplicitCastExpr 0x55887c314d08 <col:60> 'EFI_STATUS':'unsigned long long' <LValueToRValue>
| | |   |   | |   | |       |         `-DeclRefExpr 0x55887c314c50 <col:60> 'EFI_STATUS':'unsigned long long' lvalue Var 0x55887c32bea0 'Status' 'EFI_STATUS':'unsigned long long'
| | |   |   | |   | |       `-ParenExpr 0x55887c314e48 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |   |   | |   | |         `-CStyleCastExpr 0x55887c314e20 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   |   | |   | |           `-ParenExpr 0x55887c314e00 <col:26, col:31> 'int'
| | |   |   | |   | |             `-BinaryOperator 0x55887c314db0 <col:27, col:30> 'int' '=='
| | |   |   | |   | |               |-IntegerLiteral 0x55887c314d70 <col:27> 'int' 0
| | |   |   | |   | |               `-IntegerLiteral 0x55887c314d90 <col:30> 'int' 1
| | |   |   | |   | `-ParenExpr 0x55887c314fb0 <col:16, col:32> 'BOOLEAN':'unsigned char'
| | |   |   | |   |   `-CStyleCastExpr 0x55887c314f88 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   |   | |   |     `-ParenExpr 0x55887c314f68 <col:26, col:31> 'int'
| | |   |   | |   |       `-BinaryOperator 0x55887c314f18 <col:27, col:30> 'int' '=='
| | |   |   | |   |         |-IntegerLiteral 0x55887c314ed8 <col:27> 'int' 0
| | |   |   | |   |         `-IntegerLiteral 0x55887c314ef8 <col:30> 'int' 1
| | |   |   | |   `-ReturnStmt 0x55887c315120 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:754:11, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75>
| | |   |   | |     `-ParenExpr 0x55887c315100 <col:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | |   |   | |       `-CStyleCastExpr 0x55887c3150d8 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |   |   | |         `-ParenExpr 0x55887c3150b8 <col:51, col:74> 'unsigned long long'
| | |   |   | |           `-BinaryOperator 0x55887c315068 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | |   |   | |             |-IntegerLiteral 0x55887c314ff0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | |   |   | |             `-ImplicitCastExpr 0x55887c315050 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | |   |   | |               `-ParenExpr 0x55887c315030 <col:62, col:73> 'int'
| | |   |   | |                 `-IntegerLiteral 0x55887c315010 <line:1142:41> 'int' 14
| | |   |   | `-BreakStmt 0x55887c315170 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:757:9>
| | |   |   `-CompoundStmt 0x55887c3157a8 <line:758:14, line:765:7>
| | |   |     |-DoStmt 0x55887c315648 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:397:5, line:404:19>
| | |   |     | |-CompoundStmt 0x55887c315538 <line:397:8, line:404:5>
| | |   |     | | `-IfStmt 0x55887c315518 <line:398:7, line:403:7>
| | |   |     | |   |-CallExpr 0x55887c315208 <line:398:11, col:31> 'BOOLEAN':'unsigned char'
| | |   |     | |   | `-ImplicitCastExpr 0x55887c3151f0 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   |     | |   |   `-DeclRefExpr 0x55887c3151d0 <col:11> 'BOOLEAN (void)' Function 0x55887c18d4f0 'DebugAssertEnabled' 'BOOLEAN (void)'
| | |   |     | |   `-CompoundStmt 0x55887c315500 <col:34, line:403:7>
| | |   |     | |     `-IfStmt 0x55887c3154e0 <line:399:9, line:402:9>
| | |   |     | |       |-UnaryOperator 0x55887c315340 <line:399:13, col:25> 'int' prefix '!' cannot overflow
| | |   |     | |       | `-ParenExpr 0x55887c315320 <col:14, col:25> 'BOOLEAN':'unsigned char'
| | |   |     | |       |   `-ParenExpr 0x55887c315300 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |   |     | |       |     `-CStyleCastExpr 0x55887c3152d8 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   |     | |       |       `-ParenExpr 0x55887c3152b8 <col:26, col:31> 'int'
| | |   |     | |       |         `-BinaryOperator 0x55887c315268 <col:27, col:30> 'int' '=='
| | |   |     | |       |           |-IntegerLiteral 0x55887c315228 <col:27> 'int' 0
| | |   |     | |       |           `-IntegerLiteral 0x55887c315248 <col:30> 'int' 1
| | |   |     | |       `-CompoundStmt 0x55887c3154c0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:399:28, line:402:9>
| | |   |     | |         |-CallExpr 0x55887c315408 <line:352:30, col:113> 'void'
| | |   |     | |         | |-ImplicitCastExpr 0x55887c3153f0 <col:30> 'void (*)(const CHAR8 *, UINTN, const CHAR8 *)' <FunctionToPointerDecay>
| | |   |     | |         | | `-DeclRefExpr 0x55887c315358 <col:30> 'void (const CHAR8 *, UINTN, const CHAR8 *)' Function 0x55887c18d0f8 'DebugAssert' 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| | |   |     | |         | |-ImplicitCastExpr 0x55887c315458 <<scratch space>:49:1> 'const CHAR8 *' <NoOp>
| | |   |     | |         | | `-ImplicitCastExpr 0x55887c315440 <col:1> 'char *' <ArrayToPointerDecay>
| | |   |     | |         | |   `-StringLiteral 0x55887c315378 <col:1> 'char[10]' lvalue "DxeLoad.c"
| | |   |     | |         | |-ImplicitCastExpr 0x55887c315470 <line:50:1> 'UINTN':'unsigned long long' <IntegralCast>
| | |   |     | |         | | `-IntegerLiteral 0x55887c3153a0 <col:1> 'int' 763
| | |   |     | |         | `-ImplicitCastExpr 0x55887c3154a0 <line:51:1> 'const CHAR8 *' <NoOp>
| | |   |     | |         |   `-ImplicitCastExpr 0x55887c315488 <col:1> 'char *' <ArrayToPointerDecay>
| | |   |     | |         |     `-StringLiteral 0x55887c3153c0 <col:1> 'char[18]' lvalue "((BOOLEAN)(0==1))"
| | |   |     | |         `-NullStmt 0x55887c3154b8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:401:34>
| | |   |     | `-ParenExpr 0x55887c315628 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |   |     |   `-CStyleCastExpr 0x55887c315600 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   |     |     `-ParenExpr 0x55887c3155e0 <col:26, col:31> 'int'
| | |   |     |       `-BinaryOperator 0x55887c315590 <col:27, col:30> 'int' '=='
| | |   |     |         |-IntegerLiteral 0x55887c315550 <col:27> 'int' 0
| | |   |     |         `-IntegerLiteral 0x55887c315570 <col:30> 'int' 1
| | |   |     `-ReturnStmt 0x55887c315798 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:764:9, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75>
| | |   |       `-ParenExpr 0x55887c315778 <col:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | |   |         `-CStyleCastExpr 0x55887c315750 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |   |           `-ParenExpr 0x55887c315730 <col:51, col:74> 'unsigned long long'
| | |   |             `-BinaryOperator 0x55887c3156e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | |   |               |-IntegerLiteral 0x55887c315668 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | |   |               `-ImplicitCastExpr 0x55887c3156c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | |   |                 `-ParenExpr 0x55887c3156a8 <col:62, col:73> 'int'
| | |   |                   `-IntegerLiteral 0x55887c315688 <line:1142:41> 'int' 14
| | |   |-CaseStmt 0x55887c315830 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:767:5, line:771:23>
| | |   | |-ConstantExpr 0x55887c315818 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiFirmwareFile.h:268:35> 'int'
| | |   | | `-IntegerLiteral 0x55887c3157f8 <col:35> 'int' 0
| | |   | `-BinaryOperator 0x55887c3158b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:771:7, col:23> 'UINT32':'unsigned int' '='
| | |   |   |-DeclRefExpr 0x55887c315858 <col:7> 'UINT32':'unsigned int' lvalue Var 0x55887c32c050 'DstBufferSize' 'UINT32':'unsigned int'
| | |   |   `-ImplicitCastExpr 0x55887c315898 <col:23> 'UINT32':'unsigned int' <LValueToRValue>
| | |   |     `-DeclRefExpr 0x55887c315878 <col:23> 'UINT32':'unsigned int' lvalue Var 0x55887c30c030 'UncompressedLength' 'UINT32':'unsigned int'
| | |   |-BinaryOperator 0x55887c315bf0 <line:772:7, col:71> 'UINT8 *' '='
| | |   | |-DeclRefExpr 0x55887c3158d0 <col:7> 'UINT8 *' lvalue Var 0x55887c32bf30 'DstBuffer' 'UINT8 *'
| | |   | `-ImplicitCastExpr 0x55887c315bd8 <col:23, col:71> 'UINT8 *' <BitCast>
| | |   |   `-CallExpr 0x55887c315b98 <col:23, col:71> 'void *'
| | |   |     |-ImplicitCastExpr 0x55887c315b80 <col:23> 'void *(*)(UINTN)' <FunctionToPointerDecay>
| | |   |     | `-DeclRefExpr 0x55887c3158f0 <col:23> 'void *(UINTN)' Function 0x55887c2dd5c0 'AllocatePages' 'void *(UINTN)'
| | |   |     `-ImplicitCastExpr 0x55887c315bc0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiBaseType.h:200:34, col:98> 'UINTN':'unsigned long long' <IntegralCast>
| | |   |       `-ParenExpr 0x55887c315b60 <col:34, col:98> 'unsigned int'
| | |   |         `-BinaryOperator 0x55887c315b40 <col:35, col:97> 'unsigned int' '+'
| | |   |           |-ParenExpr 0x55887c3159a8 <col:35, col:60> 'UINT32':'unsigned int'
| | |   |           | `-BinaryOperator 0x55887c315988 <col:36, line:187:25> 'UINT32':'unsigned int' '>>'
| | |   |           |   |-ImplicitCastExpr 0x55887c315970 <line:200:36, col:41> 'UINT32':'unsigned int' <LValueToRValue>
| | |   |           |   | `-ParenExpr 0x55887c315930 <col:36, col:41> 'UINT32':'unsigned int' lvalue
| | |   |           |   |   `-DeclRefExpr 0x55887c315910 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:772:57> 'UINT32':'unsigned int' lvalue Var 0x55887c32c050 'DstBufferSize' 'UINT32':'unsigned int'
| | |   |           |   `-IntegerLiteral 0x55887c315950 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiBaseType.h:187:25> 'int' 12
| | |   |           `-ImplicitCastExpr 0x55887c315b28 <line:200:64, col:97> 'unsigned int' <IntegralCast>
| | |   |             `-ParenExpr 0x55887c315b08 <col:64, col:97> 'int'
| | |   |               `-ConditionalOperator 0x55887c315ad8 <col:65, col:96> 'int'
| | |   |                 |-ParenExpr 0x55887c315a78 <col:65, col:88> 'unsigned int'
| | |   |                 | `-BinaryOperator 0x55887c315a58 <col:66, line:186:25> 'unsigned int' '&'
| | |   |                 |   |-ImplicitCastExpr 0x55887c315a28 <line:200:66, col:71> 'UINT32':'unsigned int' <LValueToRValue>
| | |   |                 |   | `-ParenExpr 0x55887c3159e8 <col:66, col:71> 'UINT32':'unsigned int' lvalue
| | |   |                 |   |   `-DeclRefExpr 0x55887c3159c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:772:57> 'UINT32':'unsigned int' lvalue Var 0x55887c32c050 'DstBufferSize' 'UINT32':'unsigned int'
| | |   |                 |   `-ImplicitCastExpr 0x55887c315a40 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Uefi/UefiBaseType.h:186:25> 'unsigned int' <IntegralCast>
| | |   |                 |     `-IntegerLiteral 0x55887c315a08 <col:25> 'int' 4095
| | |   |                 |-IntegerLiteral 0x55887c315a98 <line:200:92> 'int' 1
| | |   |                 `-IntegerLiteral 0x55887c315ab8 <col:96> 'int' 0
| | |   |-IfStmt 0x55887c315e58 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:773:7, line:775:7>
| | |   | |-BinaryOperator 0x55887c315ce0 <line:773:11, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:26> 'int' '=='
| | |   | | |-ImplicitCastExpr 0x55887c315cb0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:773:11> 'UINT8 *' <LValueToRValue>
| | |   | | | `-DeclRefExpr 0x55887c315c10 <col:11> 'UINT8 *' lvalue Var 0x55887c32bf30 'DstBuffer' 'UINT8 *'
| | |   | | `-ImplicitCastExpr 0x55887c315cc8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'UINT8 *' <BitCast>
| | |   | |   `-ParenExpr 0x55887c315c90 <col:15, col:26> 'void *'
| | |   | |     `-CStyleCastExpr 0x55887c315c68 <col:16, col:25> 'void *' <NullToPointer>
| | |   | |       `-IntegerLiteral 0x55887c315c30 <col:25> 'int' 0
| | |   | `-CompoundStmt 0x55887c315e40 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:773:30, line:775:7>
| | |   |   `-ReturnStmt 0x55887c315e30 <line:774:9, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75>
| | |   |     `-ParenExpr 0x55887c315e10 <col:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | |   |       `-CStyleCastExpr 0x55887c315de8 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |   |         `-ParenExpr 0x55887c315dc8 <col:51, col:74> 'unsigned long long'
| | |   |           `-BinaryOperator 0x55887c315d78 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | |   |             |-IntegerLiteral 0x55887c315d00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | |   |             `-ImplicitCastExpr 0x55887c315d60 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | |   |               `-ParenExpr 0x55887c315d40 <col:62, col:73> 'int'
| | |   |                 `-IntegerLiteral 0x55887c315d20 <line:1114:48> 'int' 9
| | |   |-CallExpr 0x55887c315f70 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:780:7, col:59> 'void *'
| | |   | |-ImplicitCastExpr 0x55887c315f58 <col:7> 'void *(*)(void *, const void *, UINTN)' <FunctionToPointerDecay>
| | |   | | `-DeclRefExpr 0x55887c315e78 <col:7> 'void *(void *, const void *, UINTN)' Function 0x55887c2d5320 'CopyMem' 'void *(void *, const void *, UINTN)'
| | |   | |-ImplicitCastExpr 0x55887c315fc0 <col:16> 'void *' <BitCast>
| | |   | | `-ImplicitCastExpr 0x55887c315fa8 <col:16> 'UINT8 *' <LValueToRValue>
| | |   | |   `-DeclRefExpr 0x55887c315e98 <col:16> 'UINT8 *' lvalue Var 0x55887c32bf30 'DstBuffer' 'UINT8 *'
| | |   | |-ImplicitCastExpr 0x55887c315ff0 <col:27> 'const void *' <NoOp>
| | |   | | `-ImplicitCastExpr 0x55887c315fd8 <col:27> 'void *' <LValueToRValue>
| | |   | |   `-DeclRefExpr 0x55887c315eb8 <col:27> 'void *' lvalue Var 0x55887c30bf10 'CompressionSource' 'void *'
| | |   | `-ImplicitCastExpr 0x55887c316020 <col:46> 'UINTN':'unsigned long long' <IntegralCast>
| | |   |   `-ImplicitCastExpr 0x55887c316008 <col:46> 'UINT32':'unsigned int' <LValueToRValue>
| | |   |     `-DeclRefExpr 0x55887c315ed8 <col:46> 'UINT32':'unsigned int' lvalue Var 0x55887c32c050 'DstBufferSize' 'UINT32':'unsigned int'
| | |   |-BreakStmt 0x55887c316038 <line:781:7>
| | |   |-DefaultStmt 0x55887c3164d8 <line:783:5, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:404:19>
| | |   | `-DoStmt 0x55887c3164b8 <line:397:5, line:404:19>
| | |   |   |-CompoundStmt 0x55887c3163a8 <line:397:8, line:404:5>
| | |   |   | `-IfStmt 0x55887c316388 <line:398:7, line:403:7>
| | |   |   |   |-CallExpr 0x55887c316078 <line:398:11, col:31> 'BOOLEAN':'unsigned char'
| | |   |   |   | `-ImplicitCastExpr 0x55887c316060 <col:11> 'BOOLEAN (*)(void)' <FunctionToPointerDecay>
| | |   |   |   |   `-DeclRefExpr 0x55887c316040 <col:11> 'BOOLEAN (void)' Function 0x55887c18d4f0 'DebugAssertEnabled' 'BOOLEAN (void)'
| | |   |   |   `-CompoundStmt 0x55887c316370 <col:34, line:403:7>
| | |   |   |     `-IfStmt 0x55887c316350 <line:399:9, line:402:9>
| | |   |   |       |-UnaryOperator 0x55887c3161b0 <line:399:13, col:25> 'int' prefix '!' cannot overflow
| | |   |   |       | `-ParenExpr 0x55887c316190 <col:14, col:25> 'BOOLEAN':'unsigned char'
| | |   |   |       |   `-ParenExpr 0x55887c316170 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |   |   |       |     `-CStyleCastExpr 0x55887c316148 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   |   |       |       `-ParenExpr 0x55887c316128 <col:26, col:31> 'int'
| | |   |   |       |         `-BinaryOperator 0x55887c3160d8 <col:27, col:30> 'int' '=='
| | |   |   |       |           |-IntegerLiteral 0x55887c316098 <col:27> 'int' 0
| | |   |   |       |           `-IntegerLiteral 0x55887c3160b8 <col:30> 'int' 1
| | |   |   |       `-CompoundStmt 0x55887c316330 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:399:28, line:402:9>
| | |   |   |         |-CallExpr 0x55887c316278 <line:352:30, col:113> 'void'
| | |   |   |         | |-ImplicitCastExpr 0x55887c316260 <col:30> 'void (*)(const CHAR8 *, UINTN, const CHAR8 *)' <FunctionToPointerDecay>
| | |   |   |         | | `-DeclRefExpr 0x55887c3161c8 <col:30> 'void (const CHAR8 *, UINTN, const CHAR8 *)' Function 0x55887c18d0f8 'DebugAssert' 'void (const CHAR8 *, UINTN, const CHAR8 *)'
| | |   |   |         | |-ImplicitCastExpr 0x55887c3162c8 <<scratch space>:52:1> 'const CHAR8 *' <NoOp>
| | |   |   |         | | `-ImplicitCastExpr 0x55887c3162b0 <col:1> 'char *' <ArrayToPointerDecay>
| | |   |   |         | |   `-StringLiteral 0x55887c3161e8 <col:1> 'char[10]' lvalue "DxeLoad.c"
| | |   |   |         | |-ImplicitCastExpr 0x55887c3162e0 <line:53:1> 'UINTN':'unsigned long long' <IntegralCast>
| | |   |   |         | | `-IntegerLiteral 0x55887c316210 <col:1> 'int' 787
| | |   |   |         | `-ImplicitCastExpr 0x55887c316310 <line:54:1> 'const CHAR8 *' <NoOp>
| | |   |   |         |   `-ImplicitCastExpr 0x55887c3162f8 <col:1> 'char *' <ArrayToPointerDecay>
| | |   |   |         |     `-StringLiteral 0x55887c316230 <col:1> 'char[18]' lvalue "((BOOLEAN)(0==1))"
| | |   |   |         `-NullStmt 0x55887c316328 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/DebugLib.h:401:34>
| | |   |   `-ParenExpr 0x55887c316498 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:307:16, col:32> 'BOOLEAN':'unsigned char'
| | |   |     `-CStyleCastExpr 0x55887c316470 <col:17, col:31> 'BOOLEAN':'unsigned char' <IntegralCast>
| | |   |       `-ParenExpr 0x55887c316450 <col:26, col:31> 'int'
| | |   |         `-BinaryOperator 0x55887c316400 <col:27, col:30> 'int' '=='
| | |   |           |-IntegerLiteral 0x55887c3163c0 <col:27> 'int' 0
| | |   |           `-IntegerLiteral 0x55887c3163e0 <col:30> 'int' 1
| | |   `-ReturnStmt 0x55887c316628 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:788:7, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:75>
| | |     `-ParenExpr 0x55887c316608 <col:35, col:75> 'RETURN_STATUS':'unsigned long long'
| | |       `-CStyleCastExpr 0x55887c3165e0 <col:36, col:74> 'RETURN_STATUS':'unsigned long long' <NoOp>
| | |         `-ParenExpr 0x55887c3165c0 <col:51, col:74> 'unsigned long long'
| | |           `-BinaryOperator 0x55887c316570 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:73> 'unsigned long long' '|'
| | |             |-IntegerLiteral 0x55887c3164f8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/X64/ProcessorBind.h:225:18> 'unsigned long long' 9223372036854775808
| | |             `-ImplicitCastExpr 0x55887c316558 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1037:62, col:73> 'unsigned long long' <IntegralCast>
| | |               `-ParenExpr 0x55887c316538 <col:62, col:73> 'int'
| | |                 `-IntegerLiteral 0x55887c316518 <line:1142:41> 'int' 14
| | |-BinaryOperator 0x55887c316728 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:791:3, col:19> 'UINTN':'unsigned long long' '='
| | | |-UnaryOperator 0x55887c3166c0 <col:3, col:4> 'UINTN':'unsigned long long' lvalue prefix '*' cannot overflow
| | | | `-ImplicitCastExpr 0x55887c3166a8 <col:4> 'UINTN *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x55887c316688 <col:4> 'UINTN *' lvalue ParmVar 0x55887c32bd28 'OutputSize' 'UINTN *'
| | | `-ImplicitCastExpr 0x55887c316710 <col:19> 'UINTN':'unsigned long long' <IntegralCast>
| | |   `-ImplicitCastExpr 0x55887c3166f8 <col:19> 'UINT32':'unsigned int' <LValueToRValue>
| | |     `-DeclRefExpr 0x55887c3166d8 <col:19> 'UINT32':'unsigned int' lvalue Var 0x55887c32c050 'DstBufferSize' 'UINT32':'unsigned int'
| | |-BinaryOperator 0x55887c3167e8 <line:792:3, col:19> 'void *' '='
| | | |-UnaryOperator 0x55887c316780 <col:3, col:4> 'void *' lvalue prefix '*' cannot overflow
| | | | `-ImplicitCastExpr 0x55887c316768 <col:4> 'void **' <LValueToRValue>
| | | |   `-DeclRefExpr 0x55887c316748 <col:4> 'void **' lvalue ParmVar 0x55887c32bcb0 'OutputBuffer' 'void **'
| | | `-ImplicitCastExpr 0x55887c3167d0 <col:19> 'void *' <BitCast>
| | |   `-ImplicitCastExpr 0x55887c3167b8 <col:19> 'UINT8 *' <LValueToRValue>
| | |     `-DeclRefExpr 0x55887c316798 <col:19> 'UINT8 *' lvalue Var 0x55887c32bf30 'DstBuffer' 'UINT8 *'
| | `-ReturnStmt 0x55887c3168a0 <line:794:3, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:1066:42>
| |   `-CStyleCastExpr 0x55887c316878 <col:25, col:42> 'RETURN_STATUS':'unsigned long long' <IntegralCast>
| |     `-ParenExpr 0x55887c316858 <col:40, col:42> 'int'
| |       `-IntegerLiteral 0x55887c316808 <col:41> 'int' 0
| `-FullComment 0x55887c489370 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:646:1, line:662:72>
|   |-ParagraphComment 0x55887c488d20 <line:646:1, col:47>
|   | `-TextComment 0x55887c488cf0 <col:1, col:47> Text="   Decompresses a section to the output buffer."
|   |-ParagraphComment 0x55887c488dc0 <line:648:1, line:650:27>
|   | |-TextComment 0x55887c488d40 <line:648:1, col:77> Text="   This function looks up the compression type field in the input section and"
|   | |-TextComment 0x55887c488d60 <line:649:1, col:77> Text="   applies the appropriate compression algorithm to compress the section to a"
|   | `-TextComment 0x55887c488d80 <line:650:1, col:27> Text="   callee allocated buffer."
|   |-ParagraphComment 0x55887c488e10 <line:652:1, col:3>
|   | `-TextComment 0x55887c488de0 <col:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c488e30 <col:4, line:654:3> [in] implicitly Param="This" ParamIndex=0
|   | `-ParagraphComment 0x55887c488f10 <line:652:16, line:654:3>
|   |   |-TextComment 0x55887c488e90 <line:652:16, col:63> Text="                  Points to this instance of the"
|   |   |-TextComment 0x55887c488eb0 <line:653:1, col:60> Text="                                 EFI_PEI_DECOMPRESS_PEI PPI."
|   |   `-TextComment 0x55887c488ed0 <line:654:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c488f30 <col:4, line:655:3> [in] implicitly Param="CompressionSection" ParamIndex=1
|   | `-ParagraphComment 0x55887c488ff0 <line:654:30, line:655:3>
|   |   |-TextComment 0x55887c488fa0 <line:654:30, col:66> Text="    Points to the compressed section."
|   |   `-TextComment 0x55887c488fc0 <line:655:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c489010 <col:4, line:657:3> [in] implicitly Param="OutputBuffer" ParamIndex=2
|   | `-ParagraphComment 0x55887c4890f0 <line:655:24, line:657:3>
|   |   |-TextComment 0x55887c489070 <line:655:24, col:79> Text="          Holds the returned pointer to the decompressed"
|   |   |-TextComment 0x55887c489090 <line:656:1, col:42> Text="                                 sections."
|   |   `-TextComment 0x55887c4890b0 <line:657:1, col:3> Text="   "
|   |-ParamCommandComment 0x55887c489110 <col:4, line:658:49> [in] implicitly Param="OutputSize" ParamIndex=3
|   | `-ParagraphComment 0x55887c4891c0 <line:657:22, line:658:49>
|   |   |-TextComment 0x55887c489170 <line:657:22, col:74> Text="            Holds the returned size of the decompress"
|   |   `-TextComment 0x55887c489190 <line:658:1, col:49> Text="                                 section streams."
|   |-ParagraphComment 0x55887c489210 <line:660:1, col:3>
|   | `-TextComment 0x55887c4891e0 <col:1, col:3> Text="   "
|   `-BlockCommandComment 0x55887c489230 <col:4, line:662:72> Name="retval" Arg[0]="EFI_SUCCESS"
|     `-ParagraphComment 0x55887c489300 <line:660:23, line:662:72>
|       |-TextComment 0x55887c489280 <line:660:23, col:75> Text="           The section was decompressed successfully."
|       |-TextComment 0x55887c4892a0 <line:661:1, col:77> Text="                                 OutputBuffer contains the resulting data and"
|       `-TextComment 0x55887c4892c0 <line:662:1, col:72> Text="                                 OutputSize contains the resulting size."
`-FunctionDecl 0x55887c316a80 prev 0x55887c2fe518 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:269:15, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:838:1> line:808:1 UpdateStackHob 'void (EFI_PHYSICAL_ADDRESS, UINT64)'
  |-ParmVarDecl 0x55887c316970 <line:809:6, col:28> col:28 used BaseAddress 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
  |-ParmVarDecl 0x55887c3169e8 <line:810:6, col:28> col:28 used Length 'UINT64':'unsigned long long'
  |-CompoundStmt 0x55887c3451f8 <line:812:1, line:838:1>
  | |-DeclStmt 0x55887c316ba8 <line:813:3, col:28>
  | | `-VarDecl 0x55887c316b40 <col:3, col:25> col:25 used Hob 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS'
  | |-BinaryOperator 0x55887c344210 <line:815:3, col:25> 'UINT8 *' '='
  | | |-MemberExpr 0x55887c316be0 <col:3, col:7> 'UINT8 *' lvalue .Raw 0x55887c0a3298
  | | | `-DeclRefExpr 0x55887c316bc0 <col:3> 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS' lvalue Var 0x55887c316b40 'Hob' 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS'
  | | `-ImplicitCastExpr 0x55887c3441f8 <col:13, col:25> 'UINT8 *' <BitCast>
  | |   `-CallExpr 0x55887c3441d8 <col:13, col:25> 'void *'
  | |     `-ImplicitCastExpr 0x55887c3441c0 <col:13> 'void *(*)(void)' <FunctionToPointerDecay>
  | |       `-DeclRefExpr 0x55887c3441a0 <col:13> 'void *(void)' Function 0x55887c1941d0 'GetHobList' 'void *(void)'
  | `-WhileStmt 0x55887c3451d8 <line:816:3, line:837:3>
  |   |-BinaryOperator 0x55887c3444e8 <line:816:10, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:26> 'int' '!='
  |   | |-ParenExpr 0x55887c344430 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:816:10, col:73> 'UINT8 *'
  |   | | `-BinaryOperator 0x55887c344410 <col:11, col:72> 'UINT8 *' '='
  |   | |   |-MemberExpr 0x55887c344250 <col:11, col:15> 'UINT8 *' lvalue .Raw 0x55887c0a3298
  |   | |   | `-DeclRefExpr 0x55887c344230 <col:11> 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS' lvalue Var 0x55887c316b40 'Hob' 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS'
  |   | |   `-ImplicitCastExpr 0x55887c3443f8 <col:21, col:72> 'UINT8 *' <BitCast>
  |   | |     `-CallExpr 0x55887c344380 <col:21, col:72> 'void *'
  |   | |       |-ImplicitCastExpr 0x55887c344368 <col:21> 'void *(*)(UINT16, const void *)' <FunctionToPointerDecay>
  |   | |       | `-DeclRefExpr 0x55887c344280 <col:21> 'void *(UINT16, const void *)' Function 0x55887c194440 'GetNextHob' 'void *(UINT16, const void *)'
  |   | |       |-ImplicitCastExpr 0x55887c3443b0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Pi/PiHob.h:19:43> 'UINT16':'unsigned short' <IntegralCast>
  |   | |       | `-IntegerLiteral 0x55887c3442a0 <col:43> 'int' 2
  |   | |       `-ImplicitCastExpr 0x55887c3443e0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:816:65, col:69> 'const void *' <BitCast>
  |   | |         `-ImplicitCastExpr 0x55887c3443c8 <col:65, col:69> 'UINT8 *' <LValueToRValue>
  |   | |           `-MemberExpr 0x55887c3442e0 <col:65, col:69> 'UINT8 *' lvalue .Raw 0x55887c0a3298
  |   | |             `-DeclRefExpr 0x55887c3442c0 <col:65> 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS' lvalue Var 0x55887c316b40 'Hob' 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS'
  |   | `-ImplicitCastExpr 0x55887c3444d0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Base.h:319:15, col:26> 'UINT8 *' <BitCast>
  |   |   `-ParenExpr 0x55887c3444b0 <col:15, col:26> 'void *'
  |   |     `-CStyleCastExpr 0x55887c344488 <col:16, col:25> 'void *' <NullToPointer>
  |   |       `-IntegerLiteral 0x55887c344450 <col:25> 'int' 0
  |   `-CompoundStmt 0x55887c3451b8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:816:84, line:837:3>
  |     |-IfStmt 0x55887c344d30 <line:817:5, line:834:5>
  |     | |-CallExpr 0x55887c3446d0 <line:817:9, col:102> 'BOOLEAN':'unsigned char'
  |     | | |-ImplicitCastExpr 0x55887c3446b8 <col:9> 'BOOLEAN (*)(const GUID *, const GUID *)' <FunctionToPointerDecay>
  |     | | | `-DeclRefExpr 0x55887c344508 <col:9> 'BOOLEAN (const GUID *, const GUID *)' Function 0x55887c2dcbe8 'CompareGuid' 'BOOLEAN (const GUID *, const GUID *)'
  |     | | |-ImplicitCastExpr 0x55887c344700 <col:22, col:23> 'const GUID *' <NoOp>
  |     | | | `-UnaryOperator 0x55887c344548 <col:22, col:23> 'EFI_GUID *' prefix '&' cannot overflow
  |     | | |   `-DeclRefExpr 0x55887c344528 <col:23> 'EFI_GUID':'GUID' lvalue Var 0x55887c1848a8 'gEfiHobMemoryAllocStackGuid' 'EFI_GUID':'GUID'
  |     | | `-ImplicitCastExpr 0x55887c344718 <col:52, col:101> 'const GUID *' <NoOp>
  |     | |   `-UnaryOperator 0x55887c344648 <col:52, col:101> 'EFI_GUID *' prefix '&' cannot overflow
  |     | |     `-ParenExpr 0x55887c344628 <col:53, col:101> 'EFI_GUID':'GUID' lvalue
  |     | |       `-MemberExpr 0x55887c3445f8 <col:54, col:97> 'EFI_GUID':'GUID' lvalue .Name 0x55887c09b2b8
  |     | |         `-MemberExpr 0x55887c3445c8 <col:54, col:81> 'EFI_HOB_MEMORY_ALLOCATION_HEADER':'EFI_HOB_MEMORY_ALLOCATION_HEADER' lvalue ->AllocDescriptor 0x55887c09c018
  |     | |           `-ImplicitCastExpr 0x55887c3445b0 <col:54, col:58> 'EFI_HOB_MEMORY_ALLOCATION_STACK *' <LValueToRValue>
  |     | |             `-MemberExpr 0x55887c344580 <col:54, col:58> 'EFI_HOB_MEMORY_ALLOCATION_STACK *' lvalue .MemoryAllocationStack 0x55887c0a18c8
  |     | |               `-DeclRefExpr 0x55887c344560 <col:54> 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS' lvalue Var 0x55887c316b40 'Hob' 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS'
  |     | `-CompoundStmt 0x55887c344d00 <col:105, line:834:5>
  |     |   |-CallExpr 0x55887c344970 <line:823:7, line:827:9> 'void'
  |     |   | |-ImplicitCastExpr 0x55887c344958 <line:823:7> 'void (*)(EFI_PHYSICAL_ADDRESS, UINT64, EFI_MEMORY_TYPE)' <FunctionToPointerDecay>
  |     |   | | `-DeclRefExpr 0x55887c344730 <col:7> 'void (EFI_PHYSICAL_ADDRESS, UINT64, EFI_MEMORY_TYPE)' Function 0x55887c138b58 'BuildMemoryAllocationHob' 'void (EFI_PHYSICAL_ADDRESS, UINT64, EFI_MEMORY_TYPE)'
  |     |   | |-ImplicitCastExpr 0x55887c3449a8 <line:824:9, col:52> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' <LValueToRValue>
  |     |   | | `-MemberExpr 0x55887c3447e8 <col:9, col:52> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' lvalue .MemoryBaseAddress 0x55887c09b348
  |     |   | |   `-MemberExpr 0x55887c3447b8 <col:9, col:36> 'EFI_HOB_MEMORY_ALLOCATION_HEADER':'EFI_HOB_MEMORY_ALLOCATION_HEADER' lvalue ->AllocDescriptor 0x55887c09c018
  |     |   | |     `-ImplicitCastExpr 0x55887c3447a0 <col:9, col:13> 'EFI_HOB_MEMORY_ALLOCATION_STACK *' <LValueToRValue>
  |     |   | |       `-MemberExpr 0x55887c344770 <col:9, col:13> 'EFI_HOB_MEMORY_ALLOCATION_STACK *' lvalue .MemoryAllocationStack 0x55887c0a18c8
  |     |   | |         `-DeclRefExpr 0x55887c344750 <col:9> 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS' lvalue Var 0x55887c316b40 'Hob' 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS'
  |     |   | |-ImplicitCastExpr 0x55887c3449c0 <line:825:9, col:52> 'UINT64':'unsigned long long' <LValueToRValue>
  |     |   | | `-MemberExpr 0x55887c3448b0 <col:9, col:52> 'UINT64':'unsigned long long' lvalue .MemoryLength 0x55887c09b3d8
  |     |   | |   `-MemberExpr 0x55887c344880 <col:9, col:36> 'EFI_HOB_MEMORY_ALLOCATION_HEADER':'EFI_HOB_MEMORY_ALLOCATION_HEADER' lvalue ->AllocDescriptor 0x55887c09c018
  |     |   | |     `-ImplicitCastExpr 0x55887c344868 <col:9, col:13> 'EFI_HOB_MEMORY_ALLOCATION_STACK *' <LValueToRValue>
  |     |   | |       `-MemberExpr 0x55887c344838 <col:9, col:13> 'EFI_HOB_MEMORY_ALLOCATION_STACK *' lvalue .MemoryAllocationStack 0x55887c0a18c8
  |     |   | |         `-DeclRefExpr 0x55887c344818 <col:9> 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS' lvalue Var 0x55887c316b40 'Hob' 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS'
  |     |   | `-ImplicitCastExpr 0x55887c3449d8 <line:826:9> 'EFI_MEMORY_TYPE':'EFI_MEMORY_TYPE' <IntegralCast>
  |     |   |   `-DeclRefExpr 0x55887c3448e0 <col:9> 'int' EnumConstant 0x55887c080558 'EfiBootServicesData' 'int'
  |     |   |-BinaryOperator 0x55887c344af0 <line:831:7, col:70> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' '='
  |     |   | |-MemberExpr 0x55887c344a88 <col:7, col:50> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' lvalue .MemoryBaseAddress 0x55887c09b348
  |     |   | | `-MemberExpr 0x55887c344a58 <col:7, col:34> 'EFI_HOB_MEMORY_ALLOCATION_HEADER':'EFI_HOB_MEMORY_ALLOCATION_HEADER' lvalue ->AllocDescriptor 0x55887c09c018
  |     |   | |   `-ImplicitCastExpr 0x55887c344a40 <col:7, col:11> 'EFI_HOB_MEMORY_ALLOCATION_STACK *' <LValueToRValue>
  |     |   | |     `-MemberExpr 0x55887c344a10 <col:7, col:11> 'EFI_HOB_MEMORY_ALLOCATION_STACK *' lvalue .MemoryAllocationStack 0x55887c0a18c8
  |     |   | |       `-DeclRefExpr 0x55887c3449f0 <col:7> 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS' lvalue Var 0x55887c316b40 'Hob' 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS'
  |     |   | `-ImplicitCastExpr 0x55887c344ad8 <col:70> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' <LValueToRValue>
  |     |   |   `-DeclRefExpr 0x55887c344ab8 <col:70> 'EFI_PHYSICAL_ADDRESS':'unsigned long long' lvalue ParmVar 0x55887c316970 'BaseAddress' 'EFI_PHYSICAL_ADDRESS':'unsigned long long'
  |     |   |-BinaryOperator 0x55887c344cd8 <line:832:7, col:70> 'UINT64':'unsigned long long' '='
  |     |   | |-MemberExpr 0x55887c344c70 <col:7, col:50> 'UINT64':'unsigned long long' lvalue .MemoryLength 0x55887c09b3d8
  |     |   | | `-MemberExpr 0x55887c344c40 <col:7, col:34> 'EFI_HOB_MEMORY_ALLOCATION_HEADER':'EFI_HOB_MEMORY_ALLOCATION_HEADER' lvalue ->AllocDescriptor 0x55887c09c018
  |     |   | |   `-ImplicitCastExpr 0x55887c344c28 <col:7, col:11> 'EFI_HOB_MEMORY_ALLOCATION_STACK *' <LValueToRValue>
  |     |   | |     `-MemberExpr 0x55887c344bf8 <col:7, col:11> 'EFI_HOB_MEMORY_ALLOCATION_STACK *' lvalue .MemoryAllocationStack 0x55887c0a18c8
  |     |   | |       `-DeclRefExpr 0x55887c344bd8 <col:7> 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS' lvalue Var 0x55887c316b40 'Hob' 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS'
  |     |   | `-ImplicitCastExpr 0x55887c344cc0 <col:70> 'UINT64':'unsigned long long' <LValueToRValue>
  |     |   |   `-DeclRefExpr 0x55887c344ca0 <col:70> 'UINT64':'unsigned long long' lvalue ParmVar 0x55887c3169e8 'Length' 'UINT64':'unsigned long long'
  |     |   `-BreakStmt 0x55887c344cf8 <line:833:7>
  |     `-BinaryOperator 0x55887c345198 <line:836:5, /llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:516:62> 'UINT8 *' '='
  |       |-MemberExpr 0x55887c344d70 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:836:5, col:9> 'UINT8 *' lvalue .Raw 0x55887c0a3298
  |       | `-DeclRefExpr 0x55887c344d50 <col:5> 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS' lvalue Var 0x55887c316b40 'Hob' 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS'
  |       `-ImplicitCastExpr 0x55887c345180 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:516:3, col:62> 'UINT8 *' <BitCast>
  |         `-CStyleCastExpr 0x55887c345158 <col:3, col:62> 'void *' <BitCast>
  |           `-ParenExpr 0x55887c345138 <col:11, col:62> 'UINT8 *'
  |             `-BinaryOperator 0x55887c3450e0 <col:12, line:502:56> 'UINT8 *' '+'
  |               |-ImplicitCastExpr 0x55887c345098 <line:516:12, col:33> 'UINT8 *' <LValueToRValue>
  |               | `-UnaryOperator 0x55887c344ee8 <col:12, col:33> 'UINT8 *' lvalue prefix '*' cannot overflow
  |               |   `-CStyleCastExpr 0x55887c344ec0 <col:13, col:33> 'UINT8 **' <BitCast>
  |               |     `-UnaryOperator 0x55887c344e38 <col:23, col:33> 'EFI_PEI_HOB_POINTERS *' prefix '&' cannot overflow
  |               |       `-ParenExpr 0x55887c344dc0 <col:24, col:33> 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS' lvalue
  |               |         `-DeclRefExpr 0x55887c344da0 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:836:29> 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS' lvalue Var 0x55887c316b40 'Hob' 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS'
  |               `-ImplicitCastExpr 0x55887c3450c8 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdePkg/Include/Library/HobLib.h:502:3, col:56> 'int' <IntegralCast>
  |                 `-ImplicitCastExpr 0x55887c3450b0 <col:3, col:56> 'UINT16':'unsigned short' <LValueToRValue>
  |                   `-ParenExpr 0x55887c345078 <col:3, col:56> 'UINT16':'unsigned short' lvalue
  |                     `-MemberExpr 0x55887c345048 <col:4, col:47> 'UINT16':'unsigned short' lvalue ->HobLength 0x55887c097fd8
  |                       `-ImplicitCastExpr 0x55887c345030 <col:4, col:44> 'EFI_HOB_GENERIC_HEADER *' <LValueToRValue>
  |                         `-ParenExpr 0x55887c345010 <col:4, col:44> 'EFI_HOB_GENERIC_HEADER *' lvalue
  |                           `-UnaryOperator 0x55887c344ff8 <col:5, col:43> 'EFI_HOB_GENERIC_HEADER *' lvalue prefix '*' cannot overflow
  |                             `-CStyleCastExpr 0x55887c344fd0 <col:6, col:43> 'EFI_HOB_GENERIC_HEADER **' <BitCast>
  |                               `-UnaryOperator 0x55887c344f40 <col:33, col:43> 'EFI_PEI_HOB_POINTERS *' prefix '&' cannot overflow
  |                                 `-ParenExpr 0x55887c344f20 <col:34, col:43> 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS' lvalue
  |                                   `-DeclRefExpr 0x55887c344f00 </llvm-source/llvm-15.0.7/clang-tools-extra/firmware-analyzer/edk2/MdeModulePkg/Core/DxeIplPeim/DxeLoad.c:836:29> 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS' lvalue Var 0x55887c316b40 'Hob' 'EFI_PEI_HOB_POINTERS':'EFI_PEI_HOB_POINTERS'
  `-FullComment 0x55887c4896a0 <line:798:1, line:804:68>
    |-ParagraphComment 0x55887c481 warning and 3 errors generated.
9410 <line:798:1, col:45>
    | `-TextComment 0x55887c4893e0 <col:1, col:45> Text="   Updates the Stack HOB passed to DXE phase."
    |-ParagraphComment 0x55887c489480 <line:800:1, line:801:51>
    | |-TextComment 0x55887c489430 <line:800:1, col:73> Text="   This function traverses the whole HOB list and update the stack HOB to"
    | `-TextComment 0x55887c489450 <line:801:1, col:51> Text="   reflect the real stack that is used by DXE core."
    |-ParagraphComment 0x55887c4894d0 <line:803:1, col:3>
    | `-TextComment 0x55887c4894a0 <col:1, col:3> Text="   "
    |-ParamCommandComment 0x55887c4894f0 <col:4, line:804:3> [in] implicitly Param="BaseAddress" ParamIndex=0
    | `-ParagraphComment 0x55887c4895a0 <line:803:22, line:804:3>
    |   |-TextComment 0x55887c489550 <line:803:22, col:75> Text="           The lower address of stack used by DxeCore."
    |   `-TextComment 0x55887c489570 <line:804:1, col:3> Text="   "
    `-ParamCommandComment 0x55887c4895c0 <col:4, col:68> [in] implicitly Param="Length" ParamIndex=1
      `-ParagraphComment 0x55887c489650 <col:17, col:68>
        `-TextComment 0x55887c489620 <col:17, col:68> Text="                The length of stack used by DxeCore."
