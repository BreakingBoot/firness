{#
    responsible for handling generator functions and fuzzable structs
#}
{%- if arguments | length > 1 %}
    {%- set search_type =  arguments[0].arg_type.replace('**', '*') %}
    {{ search_type }} {{ arg_key }};
    UINT8 *{{ arg_key }}_choice = NULL;
    ReadBytes(&Input, 1, &{{ arg_key }}_choice);
    switch({{ arg_key }}_choice % {{ arguments | length }}) {
{%- endif %}
{%- for argument in arguments %}
    {%- if arguments | length > 1 %}
        case {{ loop.index }}:
        {%- if argument.variable.startswith('__FUZZABLE_') and argument.variable.endswith('_STRUCT__') %}
        {%- for field_info in types[search_type.replace('*', '').replace(' ', '')] %}
            ReadBytes(&Input, sizeof({{ arg_key }}.{{ field_info.name }}), &{{ arg_key }}.{{ field_info.name }});
        {%- endfor %}
        {%- elif "__GENERATOR_FUNCTION__" in argument.variable %}
            {{ arg_key }} = {{ argument.assignment }}
            {%- set gen_func=argument.assignment %}
            {% include 'generator_function_calls.jinja' %}
        {%- endif %}
    {%- else %}
    {%- if argument.variable.startswith('__FUZZABLE_') and argument.variable.endswith('_STRUCT__') %}
        {%- if "ARG" in argument.variable %}
            {%- set search_type =  argument.arg_type.replace('**', '*') %}
        {%- else %}
            {%- set search_type =  argument.data_type.replace('**', '*') %}
        {%- endif %}
    {{ search_type }} {{ arg_key }};
        {%- for field_info in types[search_type.replace('*', '').replace(' ', '')] %}
    ReadBytes(&Input, sizeof({{ arg_key }}.{{ field_info.name }}), &{{ arg_key }}.{{ field_info.name }});
        {%- endfor %}
    {%- elif "__GENERATOR_FUNCTION__" in argument.variable %}
    {# {{ arguments[0].arg_type.replace('**', '*') }} {{ arg_key }} = {{ argument.assignment }} #}
    {%- set gen_func=argument.assignment %}
    {% include 'generator_function_calls.jinja' %}
    {%- endif %}
    {%- endif %}
{%- endfor %}
{%- if arguments | length > 1 %}
    }
{%- endif %}